head	1.56;
access;
symbols
	cygwin-1_7_35-release:1.56
	cygwin-1_7_34-release:1.56
	cygwin-1_7_33-release:1.56
	cygwin-1_7_32-release:1.56
	cygwin-1_7_31-release:1.56
	cygwin-1_7_30-release:1.56
	cygwin-1_7_29-release:1.56
	cygwin-1_7_29-release-branchpoint:1.56.0.2
	cygwin-pre-user-db:1.56
	cygwin-1_7_28-release:1.56
	cygwin-1_7_27-release:1.56
	cygwin-1_7_26-release:1.56
	cygwin-1_7_25-release:1.50
	cygwin-1_7_24-release:1.50
	cygwin-1_7_23-release:1.50
	cygwin-1_7_22-release:1.50
	cygwin-1_7_21-release:1.49
	cygwin-1_7_20-release:1.49
	cygwin-1_7_19-release:1.49
	cygwin-64bit-postmerge:1.49
	cygwin-64bit-premerge-branch:1.48.0.4
	cygwin-64bit-premerge:1.48
	cygwin-1_7_18-release:1.48
	post-ptmalloc3:1.48.2.2
	pre-ptmalloc3:1.48.2.2
	cygwin-1_7_17-release:1.48
	cygwin-64bit-branch:1.48.0.2
	cygwin-1_7_16-release:1.48
	cygwin-1_7_15-release:1.47
	cygwin-1_7_14_2-release:1.47
	cygwin-1_7_14-release:1.47
	cygwin-1_7_12-release:1.45
	cygwin-1_7_11-release:1.40
	cygwin-1_7_10-release:1.40
	signal-rewrite:1.38.0.2
	pre-notty:1.36
	cygwin-1_7_9-release:1.33
	cv-post-1_7_9:1.33.0.2
	cygwin-1_7_8-release:1.33
	cygwin-1_7_7-release:1.31
	cygwin-1_7_5-release:1.31
	cygwin-1_7_4-release:1.31
	cygwin-1_7_3-release:1.31
	cygwin-1_7_2-release:1.31
	fifo_doover3:1.31.0.4
	cygwin-1_7_1-release:1.31
	prefifo:1.31
	cv-branch-2:1.31.0.2
	pre-ripout-set_console_state_for_spawn:1.30
	EOL_registry_mounts:1.28
	preoverlapped:1.26
	drop_9x_support_start:1.25
	cr-0x5f1:1.22.0.8
	cv-branch:1.22.0.6
	pre-ptymaster-archetype:1.22
	cr-0x3b58:1.22.0.4
	cr-0x5ef:1.22.0.2
	after-mmap-privanon-noreserve:1.22
	after-mmap-revamp:1.22
	before-mmap-revamp:1.22
	cgf-more-exit-sync:1.22
	post_wait_sig_exit:1.22
	pre_wait_sig_exit:1.21
	reparent-point:1.12
	noreparent:1.12.0.4
	cr-0x5e6:1.12.0.2
	cr-0x9e:1.11.0.6
	cr-0x9d:1.11.0.4
	cgf-deleteme:1.11.0.2
	pre-sigrewrite:1.9
	corinna-01:1.9;
locks; strict;
comment	@// @;


1.56
date	2013.10.31.14.26.41;	author corinna;	state Exp;
branches;
next	1.55;

1.55
date	2013.10.30.09.44.47;	author corinna;	state Exp;
branches;
next	1.54;

1.54
date	2013.10.26.13.23.54;	author corinna;	state Exp;
branches;
next	1.53;

1.53
date	2013.10.25.16.16.49;	author corinna;	state Exp;
branches;
next	1.52;

1.52
date	2013.10.25.12.21.58;	author corinna;	state Exp;
branches;
next	1.51;

1.51
date	2013.10.24.09.41.16;	author corinna;	state Exp;
branches;
next	1.50;

1.50
date	2013.07.15.13.54.27;	author corinna;	state Exp;
branches;
next	1.49;

1.49
date	2013.04.23.09.44.31;	author corinna;	state Exp;
branches;
next	1.48;

1.48
date	2012.05.22.17.37.40;	author corinna;	state Exp;
branches
	1.48.2.1;
next	1.47;

1.47
date	2012.04.15.17.51.22;	author cgf;	state Exp;
branches;
next	1.46;

1.46
date	2012.04.13.02.30.49;	author cgf;	state Exp;
branches;
next	1.45;

1.45
date	2012.04.02.20.41.44;	author cgf;	state Exp;
branches;
next	1.44;

1.44
date	2012.04.01.07.19.52;	author cgf;	state Exp;
branches;
next	1.43;

1.43
date	2012.03.31.20.14.13;	author corinna;	state Exp;
branches;
next	1.42;

1.42
date	2012.03.31.17.38.00;	author cgf;	state Exp;
branches;
next	1.41;

1.41
date	2012.03.29.18.02.54;	author corinna;	state Exp;
branches;
next	1.40;

1.40
date	2011.10.20.14.02.53;	author cgf;	state Exp;
branches;
next	1.39;

1.39
date	2011.10.15.22.37.28;	author cgf;	state Exp;
branches;
next	1.38;

1.38
date	2011.06.14.21.48.43;	author cgf;	state Exp;
branches;
next	1.37;

1.37
date	2011.06.12.20.15.25;	author cgf;	state Exp;
branches;
next	1.36;

1.36
date	2011.05.28.18.17.08;	author cgf;	state Exp;
branches;
next	1.35;

1.35
date	2011.05.05.22.30.53;	author cgf;	state Exp;
branches;
next	1.34;

1.34
date	2011.04.01.19.48.19;	author yselkowitz;	state Exp;
branches;
next	1.33;

1.33
date	2011.02.15.15.25.59;	author corinna;	state Exp;
branches;
next	1.32;

1.32
date	2010.09.06.09.47.00;	author corinna;	state Exp;
branches;
next	1.31;

1.31
date	2009.01.03.05.12.20;	author cgf;	state Exp;
branches;
next	1.30;

1.30
date	2008.06.10.14.48.24;	author corinna;	state Exp;
branches;
next	1.29;

1.29
date	2008.05.29.17.08.45;	author cgf;	state Exp;
branches;
next	1.28;

1.28
date	2008.02.15.17.53.10;	author cgf;	state Exp;
branches;
next	1.27;

1.27
date	2007.08.13.15.08.25;	author corinna;	state Exp;
branches;
next	1.26;

1.26
date	2007.02.23.14.20.28;	author corinna;	state Exp;
branches;
next	1.25;

1.25
date	2007.01.17.19.26.57;	author corinna;	state Exp;
branches;
next	1.24;

1.24
date	2006.11.23.09.55.55;	author corinna;	state Exp;
branches;
next	1.23;

1.23
date	2006.10.09.08.27.23;	author corinna;	state Exp;
branches;
next	1.22;

1.22
date	2005.09.13.17.08.52;	author cgf;	state Exp;
branches;
next	1.21;

1.21
date	2005.08.24.04.38.39;	author cgf;	state Exp;
branches;
next	1.20;

1.20
date	2005.05.10.20.56.06;	author corinna;	state Exp;
branches;
next	1.19;

1.19
date	2005.05.07.20.20.51;	author cgf;	state Exp;
branches;
next	1.18;

1.18
date	2005.05.06.04.06.17;	author cgf;	state Exp;
branches;
next	1.17;

1.17
date	2005.03.19.21.45.14;	author cgf;	state Exp;
branches;
next	1.16;

1.16
date	2005.02.23.22.14.40;	author corinna;	state Exp;
branches;
next	1.15;

1.15
date	2005.02.23.12.30.31;	author corinna;	state Exp;
branches;
next	1.14;

1.14
date	2005.02.01.16.49.11;	author cgf;	state Exp;
branches;
next	1.13;

1.13
date	2004.12.01.15.00.40;	author cgf;	state Exp;
branches;
next	1.12;

1.12
date	2004.01.21.19.14.19;	author cgf;	state Exp;
branches;
next	1.11;

1.11
date	2003.12.07.22.37.11;	author cgf;	state Exp;
branches
	1.11.6.1;
next	1.10;

1.10
date	2003.11.28.20.55.58;	author cgf;	state Exp;
branches;
next	1.9;

1.9
date	2003.10.02.03.50.10;	author cgf;	state Exp;
branches;
next	1.8;

1.8
date	2003.10.01.12.36.38;	author cgf;	state Exp;
branches;
next	1.7;

1.7
date	2003.09.30.21.03.57;	author corinna;	state Exp;
branches;
next	1.6;

1.6
date	2003.09.28.15.46.00;	author cgf;	state Exp;
branches;
next	1.5;

1.5
date	2003.09.28.09.44.13;	author corinna;	state Exp;
branches;
next	1.4;

1.4
date	2003.09.27.05.38.01;	author cgf;	state Exp;
branches;
next	1.3;

1.3
date	2003.09.27.05.35.02;	author cgf;	state Exp;
branches;
next	1.2;

1.2
date	2003.09.25.00.37.16;	author cgf;	state Exp;
branches;
next	1.1;

1.1
date	2003.09.20.00.31.13;	author cgf;	state Exp;
branches;
next	;

1.48.2.1
date	2012.08.13.20.04.32;	author corinna;	state Exp;
branches;
next	1.48.2.2;

1.48.2.2
date	2012.10.18.17.15.59;	author corinna;	state Exp;
branches;
next	;

1.11.6.1
date	2004.01.21.19.17.55;	author cgf;	state Exp;
branches;
next	;


desc
@@


1.56
log
@	* devices.in (dev_cygdrive_storage): Revert mapping to \Device\Null.
	(dev_storage): Ditto for /dev.
	* devices.cc: Regenerate.
	* fhandler.cc (fhandler_base::open_null): New method to open a fake
	\Device\Null handler.
	(fhandler_base::open): Fix formatting.  Change O_ACCMODE test to a
	switch statement.  Simplify a test which still tested for a now unused
	create_disposition.
	* fhandler.h (fhandler_base::open_null): Declare.
	(fhandler_netdrive::close): Declare.
	* fhandler_dev.cc (fhandler_dev::open): Open fake \Device\Null handle
	by just calling new open_null method.
	* fhandler_disk_file.cc (fhandler_cygdrive::open): Ditto.
	* fhandler_netdrive.cc (fhandler_netdrive::open): Call open_null
	rather than setting nohandle.
	(fhandler_netdrive::close): New method.
	* fhandler_registry.cc (fetch_hkey): Fix token in RegOpenUserClassesRoot
	call.  Create valid key for HKEY_CURRENT_CONFIG by mapping to real key
	HKEY_LOCAL_MACHINE\System\CurrentControlSet\Hardware Profiles\Current.
	(fhandler_registry::open): Set nohandle only when using pseudo registry
	handle.
	* fhandler_virtual.cc (fhandler_virtual::opendir): Call open rather
	than just setting nohandle here.
	* fhandler_virtual::fstatvfs): Set ST_RDONLY fs flag.
	* globals.cc (ro_u_null): New readonly UNICODE_STRING for \Device\Null.
	* path.h (path_conv::set_path): Revert previous change caring for
	wide_path.
@
text
@

#include "winsup.h"
#include "devices.h"
#include "sys/cygwin.h"
#include "tty.h"
#include "pinfo.h"
#include "shared_info.h"
#include "path.h"
#include "fhandler.h"
#include "ntdll.h"

typedef const device *KR_device_t;


static KR_device_t KR_find_keyword (const char *KR_keyword, int KR_length);




static int
exists_internal (const device&)
{
  return false;
}

static int
exists (const device&)
{
  return true;
}

/* Check existence of POSIX devices backed by real NT devices. */
static int
exists_ntdev (const device& dev)
{
  WCHAR wpath[MAX_PATH];
  UNICODE_STRING upath;
  OBJECT_ATTRIBUTES attr;
  HANDLE h;
  NTSTATUS status;

  sys_mbstowcs (wpath, MAX_PATH, dev.native);
  RtlInitUnicodeString (&upath, wpath);
  InitializeObjectAttributes (&attr, &upath, OBJ_CASE_INSENSITIVE, NULL, NULL);
  /* Except for the serial IO devices, the native paths are
     direct device paths, not symlinks, so every status code
     except for "NOT_FOUND" means the device exists. */
  status = NtOpenSymbolicLinkObject (&h, SYMBOLIC_LINK_QUERY, &attr);
  switch (status)
    {
    case STATUS_OBJECT_NAME_NOT_FOUND:
    case STATUS_OBJECT_PATH_NOT_FOUND:
      return false;
    case STATUS_SUCCESS:
      NtClose (h);
    default:
      break;
    }
  return true;
}

/* Don't list via readdir but allow as a direct reference. */
static int
exists_ntdev_silent (const device& dev)
{
  return exists_ntdev (dev) ? -1 : false;
}

static int
exists_console (const device& dev)
{
  fh_devices devn = *const_cast<device *> (&dev);
  switch (devn)
    {
    case FH_CONSOLE:
    case FH_CONIN:
    case FH_CONOUT:
      return fhandler_console::exists ();
    default:
      /* Only show my own console device (for now?) */
      return iscons_dev (myself->ctty) && myself->ctty == devn;
    }
}

static int
exists_pty (const device& dev)
{
  /* Only existing slave ptys. */
  return cygwin_shared->tty.connect (dev.get_minor ()) != -1;
}

const device dev_cygdrive_storage =
  {"/cygdrive", {FH_CYGDRIVE}, "", exists};

const device dev_fs_storage =
  {"", {FH_FS}, "", exists};

const device dev_proc_storage =
  {"", {FH_PROC}, "", exists};

const device dev_procnet_storage =
  {"", {FH_PROCNET}, "", exists};

const device dev_procsys_storage =
  {"", {FH_PROCSYS}, "", exists};

const device dev_procsysvipc_storage =
  {"", {FH_PROCSYSVIPC}, "", exists};

const device dev_netdrive_storage =
  {"", {FH_NETDRIVE}, "", exists};

const device dev_registry_storage =
  {"", {FH_REGISTRY}, "", exists_internal};

const device dev_piper_storage =
  {"", {FH_PIPER}, "", exists_internal};

const device dev_pipew_storage =
  {"", {FH_PIPEW}, "", exists_internal};

const device dev_tcp_storage =
  {"", {FH_TCP}, "", exists_internal};

const device dev_udp_storage =
  {"", {FH_UDP}, "", exists_internal};

const device dev_stream_storage =
  {"", {FH_STREAM}, "", exists_internal};

const device dev_dgram_storage =
  {"", {FH_DGRAM}, "", exists_internal};

const device dev_bad_storage =
  {"", {FH_NADA}, "", exists_internal};

const device dev_error_storage =
  {"", {FH_ERROR}, "", exists_internal};

#define BRACK(x) {devn_int: x}
const _RDATA device dev_storage[] =
{
  {"/dev", BRACK(FH_DEV), "", exists, S_IFDIR, false},
  {"/dev/clipboard", BRACK(FH_CLIPBOARD), "\\Device\\Null", exists_ntdev, S_IFCHR, true},
  {"/dev/com1", BRACK(FHDEV(DEV_SERIAL_MAJOR, 0)), "\\??\\COM1", exists_ntdev_silent, S_IFCHR, true},
  {"/dev/com2", BRACK(FHDEV(DEV_SERIAL_MAJOR, 1)), "\\??\\COM2", exists_ntdev_silent, S_IFCHR, true},
  {"/dev/com3", BRACK(FHDEV(DEV_SERIAL_MAJOR, 2)), "\\??\\COM3", exists_ntdev_silent, S_IFCHR, true},
  {"/dev/com4", BRACK(FHDEV(DEV_SERIAL_MAJOR, 3)), "\\??\\COM4", exists_ntdev_silent, S_IFCHR, true},
  {"/dev/com5", BRACK(FHDEV(DEV_SERIAL_MAJOR, 4)), "\\??\\COM5", exists_ntdev_silent, S_IFCHR, true},
  {"/dev/com6", BRACK(FHDEV(DEV_SERIAL_MAJOR, 5)), "\\??\\COM6", exists_ntdev_silent, S_IFCHR, true},
  {"/dev/com7", BRACK(FHDEV(DEV_SERIAL_MAJOR, 6)), "\\??\\COM7", exists_ntdev_silent, S_IFCHR, true},
  {"/dev/com8", BRACK(FHDEV(DEV_SERIAL_MAJOR, 7)), "\\??\\COM8", exists_ntdev_silent, S_IFCHR, true},
  {"/dev/com9", BRACK(FHDEV(DEV_SERIAL_MAJOR, 8)), "\\??\\COM9", exists_ntdev_silent, S_IFCHR, true},
  {"/dev/com10", BRACK(FHDEV(DEV_SERIAL_MAJOR, 9)), "\\??\\COM10", exists_ntdev_silent, S_IFCHR, true},
  {"/dev/com11", BRACK(FHDEV(DEV_SERIAL_MAJOR, 10)), "\\??\\COM11", exists_ntdev_silent, S_IFCHR, true},
  {"/dev/com12", BRACK(FHDEV(DEV_SERIAL_MAJOR, 11)), "\\??\\COM12", exists_ntdev_silent, S_IFCHR, true},
  {"/dev/com13", BRACK(FHDEV(DEV_SERIAL_MAJOR, 12)), "\\??\\COM13", exists_ntdev_silent, S_IFCHR, true},
  {"/dev/com14", BRACK(FHDEV(DEV_SERIAL_MAJOR, 13)), "\\??\\COM14", exists_ntdev_silent, S_IFCHR, true},
  {"/dev/com15", BRACK(FHDEV(DEV_SERIAL_MAJOR, 14)), "\\??\\COM15", exists_ntdev_silent, S_IFCHR, true},
  {"/dev/com16", BRACK(FHDEV(DEV_SERIAL_MAJOR, 15)), "\\??\\COM16", exists_ntdev_silent, S_IFCHR, true},
  {"/dev/conin", BRACK(FH_CONIN), "/dev/conin", exists_console, S_IFCHR, true},
  {"/dev/conout", BRACK(FH_CONOUT), "/dev/conout", exists_console, S_IFCHR, true},
  {"/dev/cons0", BRACK(FHDEV(DEV_CONS_MAJOR, 0)), "/dev/cons0", exists_console, S_IFCHR, true},
  {"/dev/cons1", BRACK(FHDEV(DEV_CONS_MAJOR, 1)), "/dev/cons1", exists_console, S_IFCHR, true},
  {"/dev/cons2", BRACK(FHDEV(DEV_CONS_MAJOR, 2)), "/dev/cons2", exists_console, S_IFCHR, true},
  {"/dev/cons3", BRACK(FHDEV(DEV_CONS_MAJOR, 3)), "/dev/cons3", exists_console, S_IFCHR, true},
  {"/dev/cons4", BRACK(FHDEV(DEV_CONS_MAJOR, 4)), "/dev/cons4", exists_console, S_IFCHR, true},
  {"/dev/cons5", BRACK(FHDEV(DEV_CONS_MAJOR, 5)), "/dev/cons5", exists_console, S_IFCHR, true},
  {"/dev/cons6", BRACK(FHDEV(DEV_CONS_MAJOR, 6)), "/dev/cons6", exists_console, S_IFCHR, true},
  {"/dev/cons7", BRACK(FHDEV(DEV_CONS_MAJOR, 7)), "/dev/cons7", exists_console, S_IFCHR, true},
  {"/dev/cons8", BRACK(FHDEV(DEV_CONS_MAJOR, 8)), "/dev/cons8", exists_console, S_IFCHR, true},
  {"/dev/cons9", BRACK(FHDEV(DEV_CONS_MAJOR, 9)), "/dev/cons9", exists_console, S_IFCHR, true},
  {"/dev/cons10", BRACK(FHDEV(DEV_CONS_MAJOR, 10)), "/dev/cons10", exists_console, S_IFCHR, true},
  {"/dev/cons11", BRACK(FHDEV(DEV_CONS_MAJOR, 11)), "/dev/cons11", exists_console, S_IFCHR, true},
  {"/dev/cons12", BRACK(FHDEV(DEV_CONS_MAJOR, 12)), "/dev/cons12", exists_console, S_IFCHR, true},
  {"/dev/cons13", BRACK(FHDEV(DEV_CONS_MAJOR, 13)), "/dev/cons13", exists_console, S_IFCHR, true},
  {"/dev/cons14", BRACK(FHDEV(DEV_CONS_MAJOR, 14)), "/dev/cons14", exists_console, S_IFCHR, true},
  {"/dev/cons15", BRACK(FHDEV(DEV_CONS_MAJOR, 15)), "/dev/cons15", exists_console, S_IFCHR, true},
  {"/dev/cons16", BRACK(FHDEV(DEV_CONS_MAJOR, 16)), "/dev/cons16", exists_console, S_IFCHR, true},
  {"/dev/cons17", BRACK(FHDEV(DEV_CONS_MAJOR, 17)), "/dev/cons17", exists_console, S_IFCHR, true},
  {"/dev/cons18", BRACK(FHDEV(DEV_CONS_MAJOR, 18)), "/dev/cons18", exists_console, S_IFCHR, true},
  {"/dev/cons19", BRACK(FHDEV(DEV_CONS_MAJOR, 19)), "/dev/cons19", exists_console, S_IFCHR, true},
  {"/dev/cons20", BRACK(FHDEV(DEV_CONS_MAJOR, 20)), "/dev/cons20", exists_console, S_IFCHR, true},
  {"/dev/cons21", BRACK(FHDEV(DEV_CONS_MAJOR, 21)), "/dev/cons21", exists_console, S_IFCHR, true},
  {"/dev/cons22", BRACK(FHDEV(DEV_CONS_MAJOR, 22)), "/dev/cons22", exists_console, S_IFCHR, true},
  {"/dev/cons23", BRACK(FHDEV(DEV_CONS_MAJOR, 23)), "/dev/cons23", exists_console, S_IFCHR, true},
  {"/dev/cons24", BRACK(FHDEV(DEV_CONS_MAJOR, 24)), "/dev/cons24", exists_console, S_IFCHR, true},
  {"/dev/cons25", BRACK(FHDEV(DEV_CONS_MAJOR, 25)), "/dev/cons25", exists_console, S_IFCHR, true},
  {"/dev/cons26", BRACK(FHDEV(DEV_CONS_MAJOR, 26)), "/dev/cons26", exists_console, S_IFCHR, true},
  {"/dev/cons27", BRACK(FHDEV(DEV_CONS_MAJOR, 27)), "/dev/cons27", exists_console, S_IFCHR, true},
  {"/dev/cons28", BRACK(FHDEV(DEV_CONS_MAJOR, 28)), "/dev/cons28", exists_console, S_IFCHR, true},
  {"/dev/cons29", BRACK(FHDEV(DEV_CONS_MAJOR, 29)), "/dev/cons29", exists_console, S_IFCHR, true},
  {"/dev/cons30", BRACK(FHDEV(DEV_CONS_MAJOR, 30)), "/dev/cons30", exists_console, S_IFCHR, true},
  {"/dev/cons31", BRACK(FHDEV(DEV_CONS_MAJOR, 31)), "/dev/cons31", exists_console, S_IFCHR, true},
  {"/dev/cons32", BRACK(FHDEV(DEV_CONS_MAJOR, 32)), "/dev/cons32", exists_console, S_IFCHR, true},
  {"/dev/cons33", BRACK(FHDEV(DEV_CONS_MAJOR, 33)), "/dev/cons33", exists_console, S_IFCHR, true},
  {"/dev/cons34", BRACK(FHDEV(DEV_CONS_MAJOR, 34)), "/dev/cons34", exists_console, S_IFCHR, true},
  {"/dev/cons35", BRACK(FHDEV(DEV_CONS_MAJOR, 35)), "/dev/cons35", exists_console, S_IFCHR, true},
  {"/dev/cons36", BRACK(FHDEV(DEV_CONS_MAJOR, 36)), "/dev/cons36", exists_console, S_IFCHR, true},
  {"/dev/cons37", BRACK(FHDEV(DEV_CONS_MAJOR, 37)), "/dev/cons37", exists_console, S_IFCHR, true},
  {"/dev/cons38", BRACK(FHDEV(DEV_CONS_MAJOR, 38)), "/dev/cons38", exists_console, S_IFCHR, true},
  {"/dev/cons39", BRACK(FHDEV(DEV_CONS_MAJOR, 39)), "/dev/cons39", exists_console, S_IFCHR, true},
  {"/dev/cons40", BRACK(FHDEV(DEV_CONS_MAJOR, 40)), "/dev/cons40", exists_console, S_IFCHR, true},
  {"/dev/cons41", BRACK(FHDEV(DEV_CONS_MAJOR, 41)), "/dev/cons41", exists_console, S_IFCHR, true},
  {"/dev/cons42", BRACK(FHDEV(DEV_CONS_MAJOR, 42)), "/dev/cons42", exists_console, S_IFCHR, true},
  {"/dev/cons43", BRACK(FHDEV(DEV_CONS_MAJOR, 43)), "/dev/cons43", exists_console, S_IFCHR, true},
  {"/dev/cons44", BRACK(FHDEV(DEV_CONS_MAJOR, 44)), "/dev/cons44", exists_console, S_IFCHR, true},
  {"/dev/cons45", BRACK(FHDEV(DEV_CONS_MAJOR, 45)), "/dev/cons45", exists_console, S_IFCHR, true},
  {"/dev/cons46", BRACK(FHDEV(DEV_CONS_MAJOR, 46)), "/dev/cons46", exists_console, S_IFCHR, true},
  {"/dev/cons47", BRACK(FHDEV(DEV_CONS_MAJOR, 47)), "/dev/cons47", exists_console, S_IFCHR, true},
  {"/dev/cons48", BRACK(FHDEV(DEV_CONS_MAJOR, 48)), "/dev/cons48", exists_console, S_IFCHR, true},
  {"/dev/cons49", BRACK(FHDEV(DEV_CONS_MAJOR, 49)), "/dev/cons49", exists_console, S_IFCHR, true},
  {"/dev/cons50", BRACK(FHDEV(DEV_CONS_MAJOR, 50)), "/dev/cons50", exists_console, S_IFCHR, true},
  {"/dev/cons51", BRACK(FHDEV(DEV_CONS_MAJOR, 51)), "/dev/cons51", exists_console, S_IFCHR, true},
  {"/dev/cons52", BRACK(FHDEV(DEV_CONS_MAJOR, 52)), "/dev/cons52", exists_console, S_IFCHR, true},
  {"/dev/cons53", BRACK(FHDEV(DEV_CONS_MAJOR, 53)), "/dev/cons53", exists_console, S_IFCHR, true},
  {"/dev/cons54", BRACK(FHDEV(DEV_CONS_MAJOR, 54)), "/dev/cons54", exists_console, S_IFCHR, true},
  {"/dev/cons55", BRACK(FHDEV(DEV_CONS_MAJOR, 55)), "/dev/cons55", exists_console, S_IFCHR, true},
  {"/dev/cons56", BRACK(FHDEV(DEV_CONS_MAJOR, 56)), "/dev/cons56", exists_console, S_IFCHR, true},
  {"/dev/cons57", BRACK(FHDEV(DEV_CONS_MAJOR, 57)), "/dev/cons57", exists_console, S_IFCHR, true},
  {"/dev/cons58", BRACK(FHDEV(DEV_CONS_MAJOR, 58)), "/dev/cons58", exists_console, S_IFCHR, true},
  {"/dev/cons59", BRACK(FHDEV(DEV_CONS_MAJOR, 59)), "/dev/cons59", exists_console, S_IFCHR, true},
  {"/dev/cons60", BRACK(FHDEV(DEV_CONS_MAJOR, 60)), "/dev/cons60", exists_console, S_IFCHR, true},
  {"/dev/cons61", BRACK(FHDEV(DEV_CONS_MAJOR, 61)), "/dev/cons61", exists_console, S_IFCHR, true},
  {"/dev/cons62", BRACK(FHDEV(DEV_CONS_MAJOR, 62)), "/dev/cons62", exists_console, S_IFCHR, true},
  {"/dev/cons63", BRACK(FHDEV(DEV_CONS_MAJOR, 63)), "/dev/cons63", exists_console, S_IFCHR, true},
  {"/dev/console", BRACK(FH_CONSOLE), "/dev/console", exists_console, S_IFCHR, true},
  {"/dev/dsp", BRACK(FH_OSS_DSP), "\\Device\\Null", exists_ntdev, S_IFCHR, true},
  {"/dev/fd0", BRACK(FHDEV(DEV_FLOPPY_MAJOR, 0)), "\\Device\\Floppy0", exists_ntdev, S_IFBLK, true},
  {"/dev/fd1", BRACK(FHDEV(DEV_FLOPPY_MAJOR, 1)), "\\Device\\Floppy1", exists_ntdev, S_IFBLK, true},
  {"/dev/fd2", BRACK(FHDEV(DEV_FLOPPY_MAJOR, 2)), "\\Device\\Floppy2", exists_ntdev, S_IFBLK, true},
  {"/dev/fd3", BRACK(FHDEV(DEV_FLOPPY_MAJOR, 3)), "\\Device\\Floppy3", exists_ntdev, S_IFBLK, true},
  {"/dev/fd4", BRACK(FHDEV(DEV_FLOPPY_MAJOR, 4)), "\\Device\\Floppy4", exists_ntdev, S_IFBLK, true},
  {"/dev/fd5", BRACK(FHDEV(DEV_FLOPPY_MAJOR, 5)), "\\Device\\Floppy5", exists_ntdev, S_IFBLK, true},
  {"/dev/fd6", BRACK(FHDEV(DEV_FLOPPY_MAJOR, 6)), "\\Device\\Floppy6", exists_ntdev, S_IFBLK, true},
  {"/dev/fd7", BRACK(FHDEV(DEV_FLOPPY_MAJOR, 7)), "\\Device\\Floppy7", exists_ntdev, S_IFBLK, true},
  {"/dev/fd8", BRACK(FHDEV(DEV_FLOPPY_MAJOR, 8)), "\\Device\\Floppy8", exists_ntdev, S_IFBLK, true},
  {"/dev/fd9", BRACK(FHDEV(DEV_FLOPPY_MAJOR, 9)), "\\Device\\Floppy9", exists_ntdev, S_IFBLK, true},
  {"/dev/fd10", BRACK(FHDEV(DEV_FLOPPY_MAJOR, 10)), "\\Device\\Floppy10", exists_ntdev, S_IFBLK, true},
  {"/dev/fd11", BRACK(FHDEV(DEV_FLOPPY_MAJOR, 11)), "\\Device\\Floppy11", exists_ntdev, S_IFBLK, true},
  {"/dev/fd12", BRACK(FHDEV(DEV_FLOPPY_MAJOR, 12)), "\\Device\\Floppy12", exists_ntdev, S_IFBLK, true},
  {"/dev/fd13", BRACK(FHDEV(DEV_FLOPPY_MAJOR, 13)), "\\Device\\Floppy13", exists_ntdev, S_IFBLK, true},
  {"/dev/fd14", BRACK(FHDEV(DEV_FLOPPY_MAJOR, 14)), "\\Device\\Floppy14", exists_ntdev, S_IFBLK, true},
  {"/dev/fd15", BRACK(FHDEV(DEV_FLOPPY_MAJOR, 15)), "\\Device\\Floppy15", exists_ntdev, S_IFBLK, true},
  {"/dev/full", BRACK(FH_FULL), "\\Device\\Null", exists_ntdev, S_IFCHR, true},
  {"/dev/kmsg", BRACK(FH_KMSG), "\\Device\\MailSlot\\cygwin\\dev\\kmsg", exists_ntdev, S_IFCHR, true},
  {"/dev/nst0", BRACK(FHDEV(DEV_TAPE_MAJOR, 128)), "\\Device\\Tape0", exists_ntdev, S_IFBLK, true},
  {"/dev/nst1", BRACK(FHDEV(DEV_TAPE_MAJOR, 129)), "\\Device\\Tape1", exists_ntdev, S_IFBLK, true},
  {"/dev/nst2", BRACK(FHDEV(DEV_TAPE_MAJOR, 130)), "\\Device\\Tape2", exists_ntdev, S_IFBLK, true},
  {"/dev/nst3", BRACK(FHDEV(DEV_TAPE_MAJOR, 131)), "\\Device\\Tape3", exists_ntdev, S_IFBLK, true},
  {"/dev/nst4", BRACK(FHDEV(DEV_TAPE_MAJOR, 132)), "\\Device\\Tape4", exists_ntdev, S_IFBLK, true},
  {"/dev/nst5", BRACK(FHDEV(DEV_TAPE_MAJOR, 133)), "\\Device\\Tape5", exists_ntdev, S_IFBLK, true},
  {"/dev/nst6", BRACK(FHDEV(DEV_TAPE_MAJOR, 134)), "\\Device\\Tape6", exists_ntdev, S_IFBLK, true},
  {"/dev/nst7", BRACK(FHDEV(DEV_TAPE_MAJOR, 135)), "\\Device\\Tape7", exists_ntdev, S_IFBLK, true},
  {"/dev/nst8", BRACK(FHDEV(DEV_TAPE_MAJOR, 136)), "\\Device\\Tape8", exists_ntdev, S_IFBLK, true},
  {"/dev/nst9", BRACK(FHDEV(DEV_TAPE_MAJOR, 137)), "\\Device\\Tape9", exists_ntdev, S_IFBLK, true},
  {"/dev/nst10", BRACK(FHDEV(DEV_TAPE_MAJOR, 138)), "\\Device\\Tape10", exists_ntdev, S_IFBLK, true},
  {"/dev/nst11", BRACK(FHDEV(DEV_TAPE_MAJOR, 139)), "\\Device\\Tape11", exists_ntdev, S_IFBLK, true},
  {"/dev/nst12", BRACK(FHDEV(DEV_TAPE_MAJOR, 140)), "\\Device\\Tape12", exists_ntdev, S_IFBLK, true},
  {"/dev/nst13", BRACK(FHDEV(DEV_TAPE_MAJOR, 141)), "\\Device\\Tape13", exists_ntdev, S_IFBLK, true},
  {"/dev/nst14", BRACK(FHDEV(DEV_TAPE_MAJOR, 142)), "\\Device\\Tape14", exists_ntdev, S_IFBLK, true},
  {"/dev/nst15", BRACK(FHDEV(DEV_TAPE_MAJOR, 143)), "\\Device\\Tape15", exists_ntdev, S_IFBLK, true},
  {"/dev/nst16", BRACK(FHDEV(DEV_TAPE_MAJOR, 144)), "\\Device\\Tape16", exists_ntdev, S_IFBLK, true},
  {"/dev/nst17", BRACK(FHDEV(DEV_TAPE_MAJOR, 145)), "\\Device\\Tape17", exists_ntdev, S_IFBLK, true},
  {"/dev/nst18", BRACK(FHDEV(DEV_TAPE_MAJOR, 146)), "\\Device\\Tape18", exists_ntdev, S_IFBLK, true},
  {"/dev/nst19", BRACK(FHDEV(DEV_TAPE_MAJOR, 147)), "\\Device\\Tape19", exists_ntdev, S_IFBLK, true},
  {"/dev/nst20", BRACK(FHDEV(DEV_TAPE_MAJOR, 148)), "\\Device\\Tape20", exists_ntdev, S_IFBLK, true},
  {"/dev/nst21", BRACK(FHDEV(DEV_TAPE_MAJOR, 149)), "\\Device\\Tape21", exists_ntdev, S_IFBLK, true},
  {"/dev/nst22", BRACK(FHDEV(DEV_TAPE_MAJOR, 150)), "\\Device\\Tape22", exists_ntdev, S_IFBLK, true},
  {"/dev/nst23", BRACK(FHDEV(DEV_TAPE_MAJOR, 151)), "\\Device\\Tape23", exists_ntdev, S_IFBLK, true},
  {"/dev/nst24", BRACK(FHDEV(DEV_TAPE_MAJOR, 152)), "\\Device\\Tape24", exists_ntdev, S_IFBLK, true},
  {"/dev/nst25", BRACK(FHDEV(DEV_TAPE_MAJOR, 153)), "\\Device\\Tape25", exists_ntdev, S_IFBLK, true},
  {"/dev/nst26", BRACK(FHDEV(DEV_TAPE_MAJOR, 154)), "\\Device\\Tape26", exists_ntdev, S_IFBLK, true},
  {"/dev/nst27", BRACK(FHDEV(DEV_TAPE_MAJOR, 155)), "\\Device\\Tape27", exists_ntdev, S_IFBLK, true},
  {"/dev/nst28", BRACK(FHDEV(DEV_TAPE_MAJOR, 156)), "\\Device\\Tape28", exists_ntdev, S_IFBLK, true},
  {"/dev/nst29", BRACK(FHDEV(DEV_TAPE_MAJOR, 157)), "\\Device\\Tape29", exists_ntdev, S_IFBLK, true},
  {"/dev/nst30", BRACK(FHDEV(DEV_TAPE_MAJOR, 158)), "\\Device\\Tape30", exists_ntdev, S_IFBLK, true},
  {"/dev/nst31", BRACK(FHDEV(DEV_TAPE_MAJOR, 159)), "\\Device\\Tape31", exists_ntdev, S_IFBLK, true},
  {"/dev/nst32", BRACK(FHDEV(DEV_TAPE_MAJOR, 160)), "\\Device\\Tape32", exists_ntdev, S_IFBLK, true},
  {"/dev/nst33", BRACK(FHDEV(DEV_TAPE_MAJOR, 161)), "\\Device\\Tape33", exists_ntdev, S_IFBLK, true},
  {"/dev/nst34", BRACK(FHDEV(DEV_TAPE_MAJOR, 162)), "\\Device\\Tape34", exists_ntdev, S_IFBLK, true},
  {"/dev/nst35", BRACK(FHDEV(DEV_TAPE_MAJOR, 163)), "\\Device\\Tape35", exists_ntdev, S_IFBLK, true},
  {"/dev/nst36", BRACK(FHDEV(DEV_TAPE_MAJOR, 164)), "\\Device\\Tape36", exists_ntdev, S_IFBLK, true},
  {"/dev/nst37", BRACK(FHDEV(DEV_TAPE_MAJOR, 165)), "\\Device\\Tape37", exists_ntdev, S_IFBLK, true},
  {"/dev/nst38", BRACK(FHDEV(DEV_TAPE_MAJOR, 166)), "\\Device\\Tape38", exists_ntdev, S_IFBLK, true},
  {"/dev/nst39", BRACK(FHDEV(DEV_TAPE_MAJOR, 167)), "\\Device\\Tape39", exists_ntdev, S_IFBLK, true},
  {"/dev/nst40", BRACK(FHDEV(DEV_TAPE_MAJOR, 168)), "\\Device\\Tape40", exists_ntdev, S_IFBLK, true},
  {"/dev/nst41", BRACK(FHDEV(DEV_TAPE_MAJOR, 169)), "\\Device\\Tape41", exists_ntdev, S_IFBLK, true},
  {"/dev/nst42", BRACK(FHDEV(DEV_TAPE_MAJOR, 170)), "\\Device\\Tape42", exists_ntdev, S_IFBLK, true},
  {"/dev/nst43", BRACK(FHDEV(DEV_TAPE_MAJOR, 171)), "\\Device\\Tape43", exists_ntdev, S_IFBLK, true},
  {"/dev/nst44", BRACK(FHDEV(DEV_TAPE_MAJOR, 172)), "\\Device\\Tape44", exists_ntdev, S_IFBLK, true},
  {"/dev/nst45", BRACK(FHDEV(DEV_TAPE_MAJOR, 173)), "\\Device\\Tape45", exists_ntdev, S_IFBLK, true},
  {"/dev/nst46", BRACK(FHDEV(DEV_TAPE_MAJOR, 174)), "\\Device\\Tape46", exists_ntdev, S_IFBLK, true},
  {"/dev/nst47", BRACK(FHDEV(DEV_TAPE_MAJOR, 175)), "\\Device\\Tape47", exists_ntdev, S_IFBLK, true},
  {"/dev/nst48", BRACK(FHDEV(DEV_TAPE_MAJOR, 176)), "\\Device\\Tape48", exists_ntdev, S_IFBLK, true},
  {"/dev/nst49", BRACK(FHDEV(DEV_TAPE_MAJOR, 177)), "\\Device\\Tape49", exists_ntdev, S_IFBLK, true},
  {"/dev/nst50", BRACK(FHDEV(DEV_TAPE_MAJOR, 178)), "\\Device\\Tape50", exists_ntdev, S_IFBLK, true},
  {"/dev/nst51", BRACK(FHDEV(DEV_TAPE_MAJOR, 179)), "\\Device\\Tape51", exists_ntdev, S_IFBLK, true},
  {"/dev/nst52", BRACK(FHDEV(DEV_TAPE_MAJOR, 180)), "\\Device\\Tape52", exists_ntdev, S_IFBLK, true},
  {"/dev/nst53", BRACK(FHDEV(DEV_TAPE_MAJOR, 181)), "\\Device\\Tape53", exists_ntdev, S_IFBLK, true},
  {"/dev/nst54", BRACK(FHDEV(DEV_TAPE_MAJOR, 182)), "\\Device\\Tape54", exists_ntdev, S_IFBLK, true},
  {"/dev/nst55", BRACK(FHDEV(DEV_TAPE_MAJOR, 183)), "\\Device\\Tape55", exists_ntdev, S_IFBLK, true},
  {"/dev/nst56", BRACK(FHDEV(DEV_TAPE_MAJOR, 184)), "\\Device\\Tape56", exists_ntdev, S_IFBLK, true},
  {"/dev/nst57", BRACK(FHDEV(DEV_TAPE_MAJOR, 185)), "\\Device\\Tape57", exists_ntdev, S_IFBLK, true},
  {"/dev/nst58", BRACK(FHDEV(DEV_TAPE_MAJOR, 186)), "\\Device\\Tape58", exists_ntdev, S_IFBLK, true},
  {"/dev/nst59", BRACK(FHDEV(DEV_TAPE_MAJOR, 187)), "\\Device\\Tape59", exists_ntdev, S_IFBLK, true},
  {"/dev/nst60", BRACK(FHDEV(DEV_TAPE_MAJOR, 188)), "\\Device\\Tape60", exists_ntdev, S_IFBLK, true},
  {"/dev/nst61", BRACK(FHDEV(DEV_TAPE_MAJOR, 189)), "\\Device\\Tape61", exists_ntdev, S_IFBLK, true},
  {"/dev/nst62", BRACK(FHDEV(DEV_TAPE_MAJOR, 190)), "\\Device\\Tape62", exists_ntdev, S_IFBLK, true},
  {"/dev/nst63", BRACK(FHDEV(DEV_TAPE_MAJOR, 191)), "\\Device\\Tape63", exists_ntdev, S_IFBLK, true},
  {"/dev/nst64", BRACK(FHDEV(DEV_TAPE_MAJOR, 192)), "\\Device\\Tape64", exists_ntdev, S_IFBLK, true},
  {"/dev/nst65", BRACK(FHDEV(DEV_TAPE_MAJOR, 193)), "\\Device\\Tape65", exists_ntdev, S_IFBLK, true},
  {"/dev/nst66", BRACK(FHDEV(DEV_TAPE_MAJOR, 194)), "\\Device\\Tape66", exists_ntdev, S_IFBLK, true},
  {"/dev/nst67", BRACK(FHDEV(DEV_TAPE_MAJOR, 195)), "\\Device\\Tape67", exists_ntdev, S_IFBLK, true},
  {"/dev/nst68", BRACK(FHDEV(DEV_TAPE_MAJOR, 196)), "\\Device\\Tape68", exists_ntdev, S_IFBLK, true},
  {"/dev/nst69", BRACK(FHDEV(DEV_TAPE_MAJOR, 197)), "\\Device\\Tape69", exists_ntdev, S_IFBLK, true},
  {"/dev/nst70", BRACK(FHDEV(DEV_TAPE_MAJOR, 198)), "\\Device\\Tape70", exists_ntdev, S_IFBLK, true},
  {"/dev/nst71", BRACK(FHDEV(DEV_TAPE_MAJOR, 199)), "\\Device\\Tape71", exists_ntdev, S_IFBLK, true},
  {"/dev/nst72", BRACK(FHDEV(DEV_TAPE_MAJOR, 200)), "\\Device\\Tape72", exists_ntdev, S_IFBLK, true},
  {"/dev/nst73", BRACK(FHDEV(DEV_TAPE_MAJOR, 201)), "\\Device\\Tape73", exists_ntdev, S_IFBLK, true},
  {"/dev/nst74", BRACK(FHDEV(DEV_TAPE_MAJOR, 202)), "\\Device\\Tape74", exists_ntdev, S_IFBLK, true},
  {"/dev/nst75", BRACK(FHDEV(DEV_TAPE_MAJOR, 203)), "\\Device\\Tape75", exists_ntdev, S_IFBLK, true},
  {"/dev/nst76", BRACK(FHDEV(DEV_TAPE_MAJOR, 204)), "\\Device\\Tape76", exists_ntdev, S_IFBLK, true},
  {"/dev/nst77", BRACK(FHDEV(DEV_TAPE_MAJOR, 205)), "\\Device\\Tape77", exists_ntdev, S_IFBLK, true},
  {"/dev/nst78", BRACK(FHDEV(DEV_TAPE_MAJOR, 206)), "\\Device\\Tape78", exists_ntdev, S_IFBLK, true},
  {"/dev/nst79", BRACK(FHDEV(DEV_TAPE_MAJOR, 207)), "\\Device\\Tape79", exists_ntdev, S_IFBLK, true},
  {"/dev/nst80", BRACK(FHDEV(DEV_TAPE_MAJOR, 208)), "\\Device\\Tape80", exists_ntdev, S_IFBLK, true},
  {"/dev/nst81", BRACK(FHDEV(DEV_TAPE_MAJOR, 209)), "\\Device\\Tape81", exists_ntdev, S_IFBLK, true},
  {"/dev/nst82", BRACK(FHDEV(DEV_TAPE_MAJOR, 210)), "\\Device\\Tape82", exists_ntdev, S_IFBLK, true},
  {"/dev/nst83", BRACK(FHDEV(DEV_TAPE_MAJOR, 211)), "\\Device\\Tape83", exists_ntdev, S_IFBLK, true},
  {"/dev/nst84", BRACK(FHDEV(DEV_TAPE_MAJOR, 212)), "\\Device\\Tape84", exists_ntdev, S_IFBLK, true},
  {"/dev/nst85", BRACK(FHDEV(DEV_TAPE_MAJOR, 213)), "\\Device\\Tape85", exists_ntdev, S_IFBLK, true},
  {"/dev/nst86", BRACK(FHDEV(DEV_TAPE_MAJOR, 214)), "\\Device\\Tape86", exists_ntdev, S_IFBLK, true},
  {"/dev/nst87", BRACK(FHDEV(DEV_TAPE_MAJOR, 215)), "\\Device\\Tape87", exists_ntdev, S_IFBLK, true},
  {"/dev/nst88", BRACK(FHDEV(DEV_TAPE_MAJOR, 216)), "\\Device\\Tape88", exists_ntdev, S_IFBLK, true},
  {"/dev/nst89", BRACK(FHDEV(DEV_TAPE_MAJOR, 217)), "\\Device\\Tape89", exists_ntdev, S_IFBLK, true},
  {"/dev/nst90", BRACK(FHDEV(DEV_TAPE_MAJOR, 218)), "\\Device\\Tape90", exists_ntdev, S_IFBLK, true},
  {"/dev/nst91", BRACK(FHDEV(DEV_TAPE_MAJOR, 219)), "\\Device\\Tape91", exists_ntdev, S_IFBLK, true},
  {"/dev/nst92", BRACK(FHDEV(DEV_TAPE_MAJOR, 220)), "\\Device\\Tape92", exists_ntdev, S_IFBLK, true},
  {"/dev/nst93", BRACK(FHDEV(DEV_TAPE_MAJOR, 221)), "\\Device\\Tape93", exists_ntdev, S_IFBLK, true},
  {"/dev/nst94", BRACK(FHDEV(DEV_TAPE_MAJOR, 222)), "\\Device\\Tape94", exists_ntdev, S_IFBLK, true},
  {"/dev/nst95", BRACK(FHDEV(DEV_TAPE_MAJOR, 223)), "\\Device\\Tape95", exists_ntdev, S_IFBLK, true},
  {"/dev/nst96", BRACK(FHDEV(DEV_TAPE_MAJOR, 224)), "\\Device\\Tape96", exists_ntdev, S_IFBLK, true},
  {"/dev/nst97", BRACK(FHDEV(DEV_TAPE_MAJOR, 225)), "\\Device\\Tape97", exists_ntdev, S_IFBLK, true},
  {"/dev/nst98", BRACK(FHDEV(DEV_TAPE_MAJOR, 226)), "\\Device\\Tape98", exists_ntdev, S_IFBLK, true},
  {"/dev/nst99", BRACK(FHDEV(DEV_TAPE_MAJOR, 227)), "\\Device\\Tape99", exists_ntdev, S_IFBLK, true},
  {"/dev/nst100", BRACK(FHDEV(DEV_TAPE_MAJOR, 228)), "\\Device\\Tape100", exists_ntdev, S_IFBLK, true},
  {"/dev/nst101", BRACK(FHDEV(DEV_TAPE_MAJOR, 229)), "\\Device\\Tape101", exists_ntdev, S_IFBLK, true},
  {"/dev/nst102", BRACK(FHDEV(DEV_TAPE_MAJOR, 230)), "\\Device\\Tape102", exists_ntdev, S_IFBLK, true},
  {"/dev/nst103", BRACK(FHDEV(DEV_TAPE_MAJOR, 231)), "\\Device\\Tape103", exists_ntdev, S_IFBLK, true},
  {"/dev/nst104", BRACK(FHDEV(DEV_TAPE_MAJOR, 232)), "\\Device\\Tape104", exists_ntdev, S_IFBLK, true},
  {"/dev/nst105", BRACK(FHDEV(DEV_TAPE_MAJOR, 233)), "\\Device\\Tape105", exists_ntdev, S_IFBLK, true},
  {"/dev/nst106", BRACK(FHDEV(DEV_TAPE_MAJOR, 234)), "\\Device\\Tape106", exists_ntdev, S_IFBLK, true},
  {"/dev/nst107", BRACK(FHDEV(DEV_TAPE_MAJOR, 235)), "\\Device\\Tape107", exists_ntdev, S_IFBLK, true},
  {"/dev/nst108", BRACK(FHDEV(DEV_TAPE_MAJOR, 236)), "\\Device\\Tape108", exists_ntdev, S_IFBLK, true},
  {"/dev/nst109", BRACK(FHDEV(DEV_TAPE_MAJOR, 237)), "\\Device\\Tape109", exists_ntdev, S_IFBLK, true},
  {"/dev/nst110", BRACK(FHDEV(DEV_TAPE_MAJOR, 238)), "\\Device\\Tape110", exists_ntdev, S_IFBLK, true},
  {"/dev/nst111", BRACK(FHDEV(DEV_TAPE_MAJOR, 239)), "\\Device\\Tape111", exists_ntdev, S_IFBLK, true},
  {"/dev/nst112", BRACK(FHDEV(DEV_TAPE_MAJOR, 240)), "\\Device\\Tape112", exists_ntdev, S_IFBLK, true},
  {"/dev/nst113", BRACK(FHDEV(DEV_TAPE_MAJOR, 241)), "\\Device\\Tape113", exists_ntdev, S_IFBLK, true},
  {"/dev/nst114", BRACK(FHDEV(DEV_TAPE_MAJOR, 242)), "\\Device\\Tape114", exists_ntdev, S_IFBLK, true},
  {"/dev/nst115", BRACK(FHDEV(DEV_TAPE_MAJOR, 243)), "\\Device\\Tape115", exists_ntdev, S_IFBLK, true},
  {"/dev/nst116", BRACK(FHDEV(DEV_TAPE_MAJOR, 244)), "\\Device\\Tape116", exists_ntdev, S_IFBLK, true},
  {"/dev/nst117", BRACK(FHDEV(DEV_TAPE_MAJOR, 245)), "\\Device\\Tape117", exists_ntdev, S_IFBLK, true},
  {"/dev/nst118", BRACK(FHDEV(DEV_TAPE_MAJOR, 246)), "\\Device\\Tape118", exists_ntdev, S_IFBLK, true},
  {"/dev/nst119", BRACK(FHDEV(DEV_TAPE_MAJOR, 247)), "\\Device\\Tape119", exists_ntdev, S_IFBLK, true},
  {"/dev/nst120", BRACK(FHDEV(DEV_TAPE_MAJOR, 248)), "\\Device\\Tape120", exists_ntdev, S_IFBLK, true},
  {"/dev/nst121", BRACK(FHDEV(DEV_TAPE_MAJOR, 249)), "\\Device\\Tape121", exists_ntdev, S_IFBLK, true},
  {"/dev/nst122", BRACK(FHDEV(DEV_TAPE_MAJOR, 250)), "\\Device\\Tape122", exists_ntdev, S_IFBLK, true},
  {"/dev/nst123", BRACK(FHDEV(DEV_TAPE_MAJOR, 251)), "\\Device\\Tape123", exists_ntdev, S_IFBLK, true},
  {"/dev/nst124", BRACK(FHDEV(DEV_TAPE_MAJOR, 252)), "\\Device\\Tape124", exists_ntdev, S_IFBLK, true},
  {"/dev/nst125", BRACK(FHDEV(DEV_TAPE_MAJOR, 253)), "\\Device\\Tape125", exists_ntdev, S_IFBLK, true},
  {"/dev/nst126", BRACK(FHDEV(DEV_TAPE_MAJOR, 254)), "\\Device\\Tape126", exists_ntdev, S_IFBLK, true},
  {"/dev/nst127", BRACK(FHDEV(DEV_TAPE_MAJOR, 255)), "\\Device\\Tape127", exists_ntdev, S_IFBLK, true},
  {"/dev/null", BRACK(FH_NULL), "\\Device\\Null", exists_ntdev, S_IFCHR, true},
  {"/dev/ptmx", BRACK(FH_PTMX), "/dev/ptmx", exists, S_IFCHR, true},
  {"/dev/pty0", BRACK(FHDEV(DEV_PTYS_MAJOR, 0)), "/dev/pty0", exists_pty, S_IFCHR, true},
  {"/dev/pty1", BRACK(FHDEV(DEV_PTYS_MAJOR, 1)), "/dev/pty1", exists_pty, S_IFCHR, true},
  {"/dev/pty2", BRACK(FHDEV(DEV_PTYS_MAJOR, 2)), "/dev/pty2", exists_pty, S_IFCHR, true},
  {"/dev/pty3", BRACK(FHDEV(DEV_PTYS_MAJOR, 3)), "/dev/pty3", exists_pty, S_IFCHR, true},
  {"/dev/pty4", BRACK(FHDEV(DEV_PTYS_MAJOR, 4)), "/dev/pty4", exists_pty, S_IFCHR, true},
  {"/dev/pty5", BRACK(FHDEV(DEV_PTYS_MAJOR, 5)), "/dev/pty5", exists_pty, S_IFCHR, true},
  {"/dev/pty6", BRACK(FHDEV(DEV_PTYS_MAJOR, 6)), "/dev/pty6", exists_pty, S_IFCHR, true},
  {"/dev/pty7", BRACK(FHDEV(DEV_PTYS_MAJOR, 7)), "/dev/pty7", exists_pty, S_IFCHR, true},
  {"/dev/pty8", BRACK(FHDEV(DEV_PTYS_MAJOR, 8)), "/dev/pty8", exists_pty, S_IFCHR, true},
  {"/dev/pty9", BRACK(FHDEV(DEV_PTYS_MAJOR, 9)), "/dev/pty9", exists_pty, S_IFCHR, true},
  {"/dev/pty10", BRACK(FHDEV(DEV_PTYS_MAJOR, 10)), "/dev/pty10", exists_pty, S_IFCHR, true},
  {"/dev/pty11", BRACK(FHDEV(DEV_PTYS_MAJOR, 11)), "/dev/pty11", exists_pty, S_IFCHR, true},
  {"/dev/pty12", BRACK(FHDEV(DEV_PTYS_MAJOR, 12)), "/dev/pty12", exists_pty, S_IFCHR, true},
  {"/dev/pty13", BRACK(FHDEV(DEV_PTYS_MAJOR, 13)), "/dev/pty13", exists_pty, S_IFCHR, true},
  {"/dev/pty14", BRACK(FHDEV(DEV_PTYS_MAJOR, 14)), "/dev/pty14", exists_pty, S_IFCHR, true},
  {"/dev/pty15", BRACK(FHDEV(DEV_PTYS_MAJOR, 15)), "/dev/pty15", exists_pty, S_IFCHR, true},
  {"/dev/pty16", BRACK(FHDEV(DEV_PTYS_MAJOR, 16)), "/dev/pty16", exists_pty, S_IFCHR, true},
  {"/dev/pty17", BRACK(FHDEV(DEV_PTYS_MAJOR, 17)), "/dev/pty17", exists_pty, S_IFCHR, true},
  {"/dev/pty18", BRACK(FHDEV(DEV_PTYS_MAJOR, 18)), "/dev/pty18", exists_pty, S_IFCHR, true},
  {"/dev/pty19", BRACK(FHDEV(DEV_PTYS_MAJOR, 19)), "/dev/pty19", exists_pty, S_IFCHR, true},
  {"/dev/pty20", BRACK(FHDEV(DEV_PTYS_MAJOR, 20)), "/dev/pty20", exists_pty, S_IFCHR, true},
  {"/dev/pty21", BRACK(FHDEV(DEV_PTYS_MAJOR, 21)), "/dev/pty21", exists_pty, S_IFCHR, true},
  {"/dev/pty22", BRACK(FHDEV(DEV_PTYS_MAJOR, 22)), "/dev/pty22", exists_pty, S_IFCHR, true},
  {"/dev/pty23", BRACK(FHDEV(DEV_PTYS_MAJOR, 23)), "/dev/pty23", exists_pty, S_IFCHR, true},
  {"/dev/pty24", BRACK(FHDEV(DEV_PTYS_MAJOR, 24)), "/dev/pty24", exists_pty, S_IFCHR, true},
  {"/dev/pty25", BRACK(FHDEV(DEV_PTYS_MAJOR, 25)), "/dev/pty25", exists_pty, S_IFCHR, true},
  {"/dev/pty26", BRACK(FHDEV(DEV_PTYS_MAJOR, 26)), "/dev/pty26", exists_pty, S_IFCHR, true},
  {"/dev/pty27", BRACK(FHDEV(DEV_PTYS_MAJOR, 27)), "/dev/pty27", exists_pty, S_IFCHR, true},
  {"/dev/pty28", BRACK(FHDEV(DEV_PTYS_MAJOR, 28)), "/dev/pty28", exists_pty, S_IFCHR, true},
  {"/dev/pty29", BRACK(FHDEV(DEV_PTYS_MAJOR, 29)), "/dev/pty29", exists_pty, S_IFCHR, true},
  {"/dev/pty30", BRACK(FHDEV(DEV_PTYS_MAJOR, 30)), "/dev/pty30", exists_pty, S_IFCHR, true},
  {"/dev/pty31", BRACK(FHDEV(DEV_PTYS_MAJOR, 31)), "/dev/pty31", exists_pty, S_IFCHR, true},
  {"/dev/pty32", BRACK(FHDEV(DEV_PTYS_MAJOR, 32)), "/dev/pty32", exists_pty, S_IFCHR, true},
  {"/dev/pty33", BRACK(FHDEV(DEV_PTYS_MAJOR, 33)), "/dev/pty33", exists_pty, S_IFCHR, true},
  {"/dev/pty34", BRACK(FHDEV(DEV_PTYS_MAJOR, 34)), "/dev/pty34", exists_pty, S_IFCHR, true},
  {"/dev/pty35", BRACK(FHDEV(DEV_PTYS_MAJOR, 35)), "/dev/pty35", exists_pty, S_IFCHR, true},
  {"/dev/pty36", BRACK(FHDEV(DEV_PTYS_MAJOR, 36)), "/dev/pty36", exists_pty, S_IFCHR, true},
  {"/dev/pty37", BRACK(FHDEV(DEV_PTYS_MAJOR, 37)), "/dev/pty37", exists_pty, S_IFCHR, true},
  {"/dev/pty38", BRACK(FHDEV(DEV_PTYS_MAJOR, 38)), "/dev/pty38", exists_pty, S_IFCHR, true},
  {"/dev/pty39", BRACK(FHDEV(DEV_PTYS_MAJOR, 39)), "/dev/pty39", exists_pty, S_IFCHR, true},
  {"/dev/pty40", BRACK(FHDEV(DEV_PTYS_MAJOR, 40)), "/dev/pty40", exists_pty, S_IFCHR, true},
  {"/dev/pty41", BRACK(FHDEV(DEV_PTYS_MAJOR, 41)), "/dev/pty41", exists_pty, S_IFCHR, true},
  {"/dev/pty42", BRACK(FHDEV(DEV_PTYS_MAJOR, 42)), "/dev/pty42", exists_pty, S_IFCHR, true},
  {"/dev/pty43", BRACK(FHDEV(DEV_PTYS_MAJOR, 43)), "/dev/pty43", exists_pty, S_IFCHR, true},
  {"/dev/pty44", BRACK(FHDEV(DEV_PTYS_MAJOR, 44)), "/dev/pty44", exists_pty, S_IFCHR, true},
  {"/dev/pty45", BRACK(FHDEV(DEV_PTYS_MAJOR, 45)), "/dev/pty45", exists_pty, S_IFCHR, true},
  {"/dev/pty46", BRACK(FHDEV(DEV_PTYS_MAJOR, 46)), "/dev/pty46", exists_pty, S_IFCHR, true},
  {"/dev/pty47", BRACK(FHDEV(DEV_PTYS_MAJOR, 47)), "/dev/pty47", exists_pty, S_IFCHR, true},
  {"/dev/pty48", BRACK(FHDEV(DEV_PTYS_MAJOR, 48)), "/dev/pty48", exists_pty, S_IFCHR, true},
  {"/dev/pty49", BRACK(FHDEV(DEV_PTYS_MAJOR, 49)), "/dev/pty49", exists_pty, S_IFCHR, true},
  {"/dev/pty50", BRACK(FHDEV(DEV_PTYS_MAJOR, 50)), "/dev/pty50", exists_pty, S_IFCHR, true},
  {"/dev/pty51", BRACK(FHDEV(DEV_PTYS_MAJOR, 51)), "/dev/pty51", exists_pty, S_IFCHR, true},
  {"/dev/pty52", BRACK(FHDEV(DEV_PTYS_MAJOR, 52)), "/dev/pty52", exists_pty, S_IFCHR, true},
  {"/dev/pty53", BRACK(FHDEV(DEV_PTYS_MAJOR, 53)), "/dev/pty53", exists_pty, S_IFCHR, true},
  {"/dev/pty54", BRACK(FHDEV(DEV_PTYS_MAJOR, 54)), "/dev/pty54", exists_pty, S_IFCHR, true},
  {"/dev/pty55", BRACK(FHDEV(DEV_PTYS_MAJOR, 55)), "/dev/pty55", exists_pty, S_IFCHR, true},
  {"/dev/pty56", BRACK(FHDEV(DEV_PTYS_MAJOR, 56)), "/dev/pty56", exists_pty, S_IFCHR, true},
  {"/dev/pty57", BRACK(FHDEV(DEV_PTYS_MAJOR, 57)), "/dev/pty57", exists_pty, S_IFCHR, true},
  {"/dev/pty58", BRACK(FHDEV(DEV_PTYS_MAJOR, 58)), "/dev/pty58", exists_pty, S_IFCHR, true},
  {"/dev/pty59", BRACK(FHDEV(DEV_PTYS_MAJOR, 59)), "/dev/pty59", exists_pty, S_IFCHR, true},
  {"/dev/pty60", BRACK(FHDEV(DEV_PTYS_MAJOR, 60)), "/dev/pty60", exists_pty, S_IFCHR, true},
  {"/dev/pty61", BRACK(FHDEV(DEV_PTYS_MAJOR, 61)), "/dev/pty61", exists_pty, S_IFCHR, true},
  {"/dev/pty62", BRACK(FHDEV(DEV_PTYS_MAJOR, 62)), "/dev/pty62", exists_pty, S_IFCHR, true},
  {"/dev/pty63", BRACK(FHDEV(DEV_PTYS_MAJOR, 63)), "/dev/pty63", exists_pty, S_IFCHR, true},
  {"/dev/random", BRACK(FH_RANDOM), "\\Device\\Null", exists_ntdev, S_IFCHR, true},
  {"/dev/scd0", BRACK(FHDEV(DEV_CDROM_MAJOR, 0)), "\\Device\\CdRom0", exists_ntdev, S_IFBLK, true},
  {"/dev/scd1", BRACK(FHDEV(DEV_CDROM_MAJOR, 1)), "\\Device\\CdRom1", exists_ntdev, S_IFBLK, true},
  {"/dev/scd2", BRACK(FHDEV(DEV_CDROM_MAJOR, 2)), "\\Device\\CdRom2", exists_ntdev, S_IFBLK, true},
  {"/dev/scd3", BRACK(FHDEV(DEV_CDROM_MAJOR, 3)), "\\Device\\CdRom3", exists_ntdev, S_IFBLK, true},
  {"/dev/scd4", BRACK(FHDEV(DEV_CDROM_MAJOR, 4)), "\\Device\\CdRom4", exists_ntdev, S_IFBLK, true},
  {"/dev/scd5", BRACK(FHDEV(DEV_CDROM_MAJOR, 5)), "\\Device\\CdRom5", exists_ntdev, S_IFBLK, true},
  {"/dev/scd6", BRACK(FHDEV(DEV_CDROM_MAJOR, 6)), "\\Device\\CdRom6", exists_ntdev, S_IFBLK, true},
  {"/dev/scd7", BRACK(FHDEV(DEV_CDROM_MAJOR, 7)), "\\Device\\CdRom7", exists_ntdev, S_IFBLK, true},
  {"/dev/scd8", BRACK(FHDEV(DEV_CDROM_MAJOR, 8)), "\\Device\\CdRom8", exists_ntdev, S_IFBLK, true},
  {"/dev/scd9", BRACK(FHDEV(DEV_CDROM_MAJOR, 9)), "\\Device\\CdRom9", exists_ntdev, S_IFBLK, true},
  {"/dev/scd10", BRACK(FHDEV(DEV_CDROM_MAJOR, 10)), "\\Device\\CdRom10", exists_ntdev, S_IFBLK, true},
  {"/dev/scd11", BRACK(FHDEV(DEV_CDROM_MAJOR, 11)), "\\Device\\CdRom11", exists_ntdev, S_IFBLK, true},
  {"/dev/scd12", BRACK(FHDEV(DEV_CDROM_MAJOR, 12)), "\\Device\\CdRom12", exists_ntdev, S_IFBLK, true},
  {"/dev/scd13", BRACK(FHDEV(DEV_CDROM_MAJOR, 13)), "\\Device\\CdRom13", exists_ntdev, S_IFBLK, true},
  {"/dev/scd14", BRACK(FHDEV(DEV_CDROM_MAJOR, 14)), "\\Device\\CdRom14", exists_ntdev, S_IFBLK, true},
  {"/dev/scd15", BRACK(FHDEV(DEV_CDROM_MAJOR, 15)), "\\Device\\CdRom15", exists_ntdev, S_IFBLK, true},
  {"/dev/sda", BRACK(FH_SDA), "\\Device\\Harddisk0\\Partition0", exists_ntdev, S_IFBLK, true},
  {"/dev/sdb", BRACK(FH_SDB), "\\Device\\Harddisk1\\Partition0", exists_ntdev, S_IFBLK, true},
  {"/dev/sdc", BRACK(FH_SDC), "\\Device\\Harddisk2\\Partition0", exists_ntdev, S_IFBLK, true},
  {"/dev/sdd", BRACK(FH_SDD), "\\Device\\Harddisk3\\Partition0", exists_ntdev, S_IFBLK, true},
  {"/dev/sde", BRACK(FH_SDE), "\\Device\\Harddisk4\\Partition0", exists_ntdev, S_IFBLK, true},
  {"/dev/sdf", BRACK(FH_SDF), "\\Device\\Harddisk5\\Partition0", exists_ntdev, S_IFBLK, true},
  {"/dev/sdg", BRACK(FH_SDG), "\\Device\\Harddisk6\\Partition0", exists_ntdev, S_IFBLK, true},
  {"/dev/sdh", BRACK(FH_SDH), "\\Device\\Harddisk7\\Partition0", exists_ntdev, S_IFBLK, true},
  {"/dev/sdi", BRACK(FH_SDI), "\\Device\\Harddisk8\\Partition0", exists_ntdev, S_IFBLK, true},
  {"/dev/sdj", BRACK(FH_SDJ), "\\Device\\Harddisk9\\Partition0", exists_ntdev, S_IFBLK, true},
  {"/dev/sdk", BRACK(FH_SDK), "\\Device\\Harddisk10\\Partition0", exists_ntdev, S_IFBLK, true},
  {"/dev/sdl", BRACK(FH_SDL), "\\Device\\Harddisk11\\Partition0", exists_ntdev, S_IFBLK, true},
  {"/dev/sdm", BRACK(FH_SDM), "\\Device\\Harddisk12\\Partition0", exists_ntdev, S_IFBLK, true},
  {"/dev/sdn", BRACK(FH_SDN), "\\Device\\Harddisk13\\Partition0", exists_ntdev, S_IFBLK, true},
  {"/dev/sdo", BRACK(FH_SDO), "\\Device\\Harddisk14\\Partition0", exists_ntdev, S_IFBLK, true},
  {"/dev/sdp", BRACK(FH_SDP), "\\Device\\Harddisk15\\Partition0", exists_ntdev, S_IFBLK, true},
  {"/dev/sdq", BRACK(FH_SDQ), "\\Device\\Harddisk16\\Partition0", exists_ntdev, S_IFBLK, true},
  {"/dev/sdr", BRACK(FH_SDR), "\\Device\\Harddisk17\\Partition0", exists_ntdev, S_IFBLK, true},
  {"/dev/sds", BRACK(FH_SDS), "\\Device\\Harddisk18\\Partition0", exists_ntdev, S_IFBLK, true},
  {"/dev/sdt", BRACK(FH_SDT), "\\Device\\Harddisk19\\Partition0", exists_ntdev, S_IFBLK, true},
  {"/dev/sdu", BRACK(FH_SDU), "\\Device\\Harddisk20\\Partition0", exists_ntdev, S_IFBLK, true},
  {"/dev/sdv", BRACK(FH_SDV), "\\Device\\Harddisk21\\Partition0", exists_ntdev, S_IFBLK, true},
  {"/dev/sdw", BRACK(FH_SDW), "\\Device\\Harddisk22\\Partition0", exists_ntdev, S_IFBLK, true},
  {"/dev/sdx", BRACK(FH_SDX), "\\Device\\Harddisk23\\Partition0", exists_ntdev, S_IFBLK, true},
  {"/dev/sdy", BRACK(FH_SDY), "\\Device\\Harddisk24\\Partition0", exists_ntdev, S_IFBLK, true},
  {"/dev/sdz", BRACK(FH_SDZ), "\\Device\\Harddisk25\\Partition0", exists_ntdev, S_IFBLK, true},
  {"/dev/sda1", BRACK(FH_SDA | 1), "\\Device\\Harddisk0\\Partition1", exists_ntdev, S_IFBLK, true},
  {"/dev/sda2", BRACK(FH_SDA | 2), "\\Device\\Harddisk0\\Partition2", exists_ntdev, S_IFBLK, true},
  {"/dev/sda3", BRACK(FH_SDA | 3), "\\Device\\Harddisk0\\Partition3", exists_ntdev, S_IFBLK, true},
  {"/dev/sda4", BRACK(FH_SDA | 4), "\\Device\\Harddisk0\\Partition4", exists_ntdev, S_IFBLK, true},
  {"/dev/sda5", BRACK(FH_SDA | 5), "\\Device\\Harddisk0\\Partition5", exists_ntdev, S_IFBLK, true},
  {"/dev/sda6", BRACK(FH_SDA | 6), "\\Device\\Harddisk0\\Partition6", exists_ntdev, S_IFBLK, true},
  {"/dev/sda7", BRACK(FH_SDA | 7), "\\Device\\Harddisk0\\Partition7", exists_ntdev, S_IFBLK, true},
  {"/dev/sda8", BRACK(FH_SDA | 8), "\\Device\\Harddisk0\\Partition8", exists_ntdev, S_IFBLK, true},
  {"/dev/sda9", BRACK(FH_SDA | 9), "\\Device\\Harddisk0\\Partition9", exists_ntdev, S_IFBLK, true},
  {"/dev/sda10", BRACK(FH_SDA | 10), "\\Device\\Harddisk0\\Partition10", exists_ntdev, S_IFBLK, true},
  {"/dev/sda11", BRACK(FH_SDA | 11), "\\Device\\Harddisk0\\Partition11", exists_ntdev, S_IFBLK, true},
  {"/dev/sda12", BRACK(FH_SDA | 12), "\\Device\\Harddisk0\\Partition12", exists_ntdev, S_IFBLK, true},
  {"/dev/sda13", BRACK(FH_SDA | 13), "\\Device\\Harddisk0\\Partition13", exists_ntdev, S_IFBLK, true},
  {"/dev/sda14", BRACK(FH_SDA | 14), "\\Device\\Harddisk0\\Partition14", exists_ntdev, S_IFBLK, true},
  {"/dev/sda15", BRACK(FH_SDA | 15), "\\Device\\Harddisk0\\Partition15", exists_ntdev, S_IFBLK, true},
  {"/dev/sdb1", BRACK(FH_SDB | 1), "\\Device\\Harddisk1\\Partition1", exists_ntdev, S_IFBLK, true},
  {"/dev/sdb2", BRACK(FH_SDB | 2), "\\Device\\Harddisk1\\Partition2", exists_ntdev, S_IFBLK, true},
  {"/dev/sdb3", BRACK(FH_SDB | 3), "\\Device\\Harddisk1\\Partition3", exists_ntdev, S_IFBLK, true},
  {"/dev/sdb4", BRACK(FH_SDB | 4), "\\Device\\Harddisk1\\Partition4", exists_ntdev, S_IFBLK, true},
  {"/dev/sdb5", BRACK(FH_SDB | 5), "\\Device\\Harddisk1\\Partition5", exists_ntdev, S_IFBLK, true},
  {"/dev/sdb6", BRACK(FH_SDB | 6), "\\Device\\Harddisk1\\Partition6", exists_ntdev, S_IFBLK, true},
  {"/dev/sdb7", BRACK(FH_SDB | 7), "\\Device\\Harddisk1\\Partition7", exists_ntdev, S_IFBLK, true},
  {"/dev/sdb8", BRACK(FH_SDB | 8), "\\Device\\Harddisk1\\Partition8", exists_ntdev, S_IFBLK, true},
  {"/dev/sdb9", BRACK(FH_SDB | 9), "\\Device\\Harddisk1\\Partition9", exists_ntdev, S_IFBLK, true},
  {"/dev/sdb10", BRACK(FH_SDB | 10), "\\Device\\Harddisk1\\Partition10", exists_ntdev, S_IFBLK, true},
  {"/dev/sdb11", BRACK(FH_SDB | 11), "\\Device\\Harddisk1\\Partition11", exists_ntdev, S_IFBLK, true},
  {"/dev/sdb12", BRACK(FH_SDB | 12), "\\Device\\Harddisk1\\Partition12", exists_ntdev, S_IFBLK, true},
  {"/dev/sdb13", BRACK(FH_SDB | 13), "\\Device\\Harddisk1\\Partition13", exists_ntdev, S_IFBLK, true},
  {"/dev/sdb14", BRACK(FH_SDB | 14), "\\Device\\Harddisk1\\Partition14", exists_ntdev, S_IFBLK, true},
  {"/dev/sdb15", BRACK(FH_SDB | 15), "\\Device\\Harddisk1\\Partition15", exists_ntdev, S_IFBLK, true},
  {"/dev/sdc1", BRACK(FH_SDC | 1), "\\Device\\Harddisk2\\Partition1", exists_ntdev, S_IFBLK, true},
  {"/dev/sdc2", BRACK(FH_SDC | 2), "\\Device\\Harddisk2\\Partition2", exists_ntdev, S_IFBLK, true},
  {"/dev/sdc3", BRACK(FH_SDC | 3), "\\Device\\Harddisk2\\Partition3", exists_ntdev, S_IFBLK, true},
  {"/dev/sdc4", BRACK(FH_SDC | 4), "\\Device\\Harddisk2\\Partition4", exists_ntdev, S_IFBLK, true},
  {"/dev/sdc5", BRACK(FH_SDC | 5), "\\Device\\Harddisk2\\Partition5", exists_ntdev, S_IFBLK, true},
  {"/dev/sdc6", BRACK(FH_SDC | 6), "\\Device\\Harddisk2\\Partition6", exists_ntdev, S_IFBLK, true},
  {"/dev/sdc7", BRACK(FH_SDC | 7), "\\Device\\Harddisk2\\Partition7", exists_ntdev, S_IFBLK, true},
  {"/dev/sdc8", BRACK(FH_SDC | 8), "\\Device\\Harddisk2\\Partition8", exists_ntdev, S_IFBLK, true},
  {"/dev/sdc9", BRACK(FH_SDC | 9), "\\Device\\Harddisk2\\Partition9", exists_ntdev, S_IFBLK, true},
  {"/dev/sdc10", BRACK(FH_SDC | 10), "\\Device\\Harddisk2\\Partition10", exists_ntdev, S_IFBLK, true},
  {"/dev/sdc11", BRACK(FH_SDC | 11), "\\Device\\Harddisk2\\Partition11", exists_ntdev, S_IFBLK, true},
  {"/dev/sdc12", BRACK(FH_SDC | 12), "\\Device\\Harddisk2\\Partition12", exists_ntdev, S_IFBLK, true},
  {"/dev/sdc13", BRACK(FH_SDC | 13), "\\Device\\Harddisk2\\Partition13", exists_ntdev, S_IFBLK, true},
  {"/dev/sdc14", BRACK(FH_SDC | 14), "\\Device\\Harddisk2\\Partition14", exists_ntdev, S_IFBLK, true},
  {"/dev/sdc15", BRACK(FH_SDC | 15), "\\Device\\Harddisk2\\Partition15", exists_ntdev, S_IFBLK, true},
  {"/dev/sdd1", BRACK(FH_SDD | 1), "\\Device\\Harddisk3\\Partition1", exists_ntdev, S_IFBLK, true},
  {"/dev/sdd2", BRACK(FH_SDD | 2), "\\Device\\Harddisk3\\Partition2", exists_ntdev, S_IFBLK, true},
  {"/dev/sdd3", BRACK(FH_SDD | 3), "\\Device\\Harddisk3\\Partition3", exists_ntdev, S_IFBLK, true},
  {"/dev/sdd4", BRACK(FH_SDD | 4), "\\Device\\Harddisk3\\Partition4", exists_ntdev, S_IFBLK, true},
  {"/dev/sdd5", BRACK(FH_SDD | 5), "\\Device\\Harddisk3\\Partition5", exists_ntdev, S_IFBLK, true},
  {"/dev/sdd6", BRACK(FH_SDD | 6), "\\Device\\Harddisk3\\Partition6", exists_ntdev, S_IFBLK, true},
  {"/dev/sdd7", BRACK(FH_SDD | 7), "\\Device\\Harddisk3\\Partition7", exists_ntdev, S_IFBLK, true},
  {"/dev/sdd8", BRACK(FH_SDD | 8), "\\Device\\Harddisk3\\Partition8", exists_ntdev, S_IFBLK, true},
  {"/dev/sdd9", BRACK(FH_SDD | 9), "\\Device\\Harddisk3\\Partition9", exists_ntdev, S_IFBLK, true},
  {"/dev/sdd10", BRACK(FH_SDD | 10), "\\Device\\Harddisk3\\Partition10", exists_ntdev, S_IFBLK, true},
  {"/dev/sdd11", BRACK(FH_SDD | 11), "\\Device\\Harddisk3\\Partition11", exists_ntdev, S_IFBLK, true},
  {"/dev/sdd12", BRACK(FH_SDD | 12), "\\Device\\Harddisk3\\Partition12", exists_ntdev, S_IFBLK, true},
  {"/dev/sdd13", BRACK(FH_SDD | 13), "\\Device\\Harddisk3\\Partition13", exists_ntdev, S_IFBLK, true},
  {"/dev/sdd14", BRACK(FH_SDD | 14), "\\Device\\Harddisk3\\Partition14", exists_ntdev, S_IFBLK, true},
  {"/dev/sdd15", BRACK(FH_SDD | 15), "\\Device\\Harddisk3\\Partition15", exists_ntdev, S_IFBLK, true},
  {"/dev/sde1", BRACK(FH_SDE | 1), "\\Device\\Harddisk4\\Partition1", exists_ntdev, S_IFBLK, true},
  {"/dev/sde2", BRACK(FH_SDE | 2), "\\Device\\Harddisk4\\Partition2", exists_ntdev, S_IFBLK, true},
  {"/dev/sde3", BRACK(FH_SDE | 3), "\\Device\\Harddisk4\\Partition3", exists_ntdev, S_IFBLK, true},
  {"/dev/sde4", BRACK(FH_SDE | 4), "\\Device\\Harddisk4\\Partition4", exists_ntdev, S_IFBLK, true},
  {"/dev/sde5", BRACK(FH_SDE | 5), "\\Device\\Harddisk4\\Partition5", exists_ntdev, S_IFBLK, true},
  {"/dev/sde6", BRACK(FH_SDE | 6), "\\Device\\Harddisk4\\Partition6", exists_ntdev, S_IFBLK, true},
  {"/dev/sde7", BRACK(FH_SDE | 7), "\\Device\\Harddisk4\\Partition7", exists_ntdev, S_IFBLK, true},
  {"/dev/sde8", BRACK(FH_SDE | 8), "\\Device\\Harddisk4\\Partition8", exists_ntdev, S_IFBLK, true},
  {"/dev/sde9", BRACK(FH_SDE | 9), "\\Device\\Harddisk4\\Partition9", exists_ntdev, S_IFBLK, true},
  {"/dev/sde10", BRACK(FH_SDE | 10), "\\Device\\Harddisk4\\Partition10", exists_ntdev, S_IFBLK, true},
  {"/dev/sde11", BRACK(FH_SDE | 11), "\\Device\\Harddisk4\\Partition11", exists_ntdev, S_IFBLK, true},
  {"/dev/sde12", BRACK(FH_SDE | 12), "\\Device\\Harddisk4\\Partition12", exists_ntdev, S_IFBLK, true},
  {"/dev/sde13", BRACK(FH_SDE | 13), "\\Device\\Harddisk4\\Partition13", exists_ntdev, S_IFBLK, true},
  {"/dev/sde14", BRACK(FH_SDE | 14), "\\Device\\Harddisk4\\Partition14", exists_ntdev, S_IFBLK, true},
  {"/dev/sde15", BRACK(FH_SDE | 15), "\\Device\\Harddisk4\\Partition15", exists_ntdev, S_IFBLK, true},
  {"/dev/sdf1", BRACK(FH_SDF | 1), "\\Device\\Harddisk5\\Partition1", exists_ntdev, S_IFBLK, true},
  {"/dev/sdf2", BRACK(FH_SDF | 2), "\\Device\\Harddisk5\\Partition2", exists_ntdev, S_IFBLK, true},
  {"/dev/sdf3", BRACK(FH_SDF | 3), "\\Device\\Harddisk5\\Partition3", exists_ntdev, S_IFBLK, true},
  {"/dev/sdf4", BRACK(FH_SDF | 4), "\\Device\\Harddisk5\\Partition4", exists_ntdev, S_IFBLK, true},
  {"/dev/sdf5", BRACK(FH_SDF | 5), "\\Device\\Harddisk5\\Partition5", exists_ntdev, S_IFBLK, true},
  {"/dev/sdf6", BRACK(FH_SDF | 6), "\\Device\\Harddisk5\\Partition6", exists_ntdev, S_IFBLK, true},
  {"/dev/sdf7", BRACK(FH_SDF | 7), "\\Device\\Harddisk5\\Partition7", exists_ntdev, S_IFBLK, true},
  {"/dev/sdf8", BRACK(FH_SDF | 8), "\\Device\\Harddisk5\\Partition8", exists_ntdev, S_IFBLK, true},
  {"/dev/sdf9", BRACK(FH_SDF | 9), "\\Device\\Harddisk5\\Partition9", exists_ntdev, S_IFBLK, true},
  {"/dev/sdf10", BRACK(FH_SDF | 10), "\\Device\\Harddisk5\\Partition10", exists_ntdev, S_IFBLK, true},
  {"/dev/sdf11", BRACK(FH_SDF | 11), "\\Device\\Harddisk5\\Partition11", exists_ntdev, S_IFBLK, true},
  {"/dev/sdf12", BRACK(FH_SDF | 12), "\\Device\\Harddisk5\\Partition12", exists_ntdev, S_IFBLK, true},
  {"/dev/sdf13", BRACK(FH_SDF | 13), "\\Device\\Harddisk5\\Partition13", exists_ntdev, S_IFBLK, true},
  {"/dev/sdf14", BRACK(FH_SDF | 14), "\\Device\\Harddisk5\\Partition14", exists_ntdev, S_IFBLK, true},
  {"/dev/sdf15", BRACK(FH_SDF | 15), "\\Device\\Harddisk5\\Partition15", exists_ntdev, S_IFBLK, true},
  {"/dev/sdg1", BRACK(FH_SDG | 1), "\\Device\\Harddisk6\\Partition1", exists_ntdev, S_IFBLK, true},
  {"/dev/sdg2", BRACK(FH_SDG | 2), "\\Device\\Harddisk6\\Partition2", exists_ntdev, S_IFBLK, true},
  {"/dev/sdg3", BRACK(FH_SDG | 3), "\\Device\\Harddisk6\\Partition3", exists_ntdev, S_IFBLK, true},
  {"/dev/sdg4", BRACK(FH_SDG | 4), "\\Device\\Harddisk6\\Partition4", exists_ntdev, S_IFBLK, true},
  {"/dev/sdg5", BRACK(FH_SDG | 5), "\\Device\\Harddisk6\\Partition5", exists_ntdev, S_IFBLK, true},
  {"/dev/sdg6", BRACK(FH_SDG | 6), "\\Device\\Harddisk6\\Partition6", exists_ntdev, S_IFBLK, true},
  {"/dev/sdg7", BRACK(FH_SDG | 7), "\\Device\\Harddisk6\\Partition7", exists_ntdev, S_IFBLK, true},
  {"/dev/sdg8", BRACK(FH_SDG | 8), "\\Device\\Harddisk6\\Partition8", exists_ntdev, S_IFBLK, true},
  {"/dev/sdg9", BRACK(FH_SDG | 9), "\\Device\\Harddisk6\\Partition9", exists_ntdev, S_IFBLK, true},
  {"/dev/sdg10", BRACK(FH_SDG | 10), "\\Device\\Harddisk6\\Partition10", exists_ntdev, S_IFBLK, true},
  {"/dev/sdg11", BRACK(FH_SDG | 11), "\\Device\\Harddisk6\\Partition11", exists_ntdev, S_IFBLK, true},
  {"/dev/sdg12", BRACK(FH_SDG | 12), "\\Device\\Harddisk6\\Partition12", exists_ntdev, S_IFBLK, true},
  {"/dev/sdg13", BRACK(FH_SDG | 13), "\\Device\\Harddisk6\\Partition13", exists_ntdev, S_IFBLK, true},
  {"/dev/sdg14", BRACK(FH_SDG | 14), "\\Device\\Harddisk6\\Partition14", exists_ntdev, S_IFBLK, true},
  {"/dev/sdg15", BRACK(FH_SDG | 15), "\\Device\\Harddisk6\\Partition15", exists_ntdev, S_IFBLK, true},
  {"/dev/sdh1", BRACK(FH_SDH | 1), "\\Device\\Harddisk7\\Partition1", exists_ntdev, S_IFBLK, true},
  {"/dev/sdh2", BRACK(FH_SDH | 2), "\\Device\\Harddisk7\\Partition2", exists_ntdev, S_IFBLK, true},
  {"/dev/sdh3", BRACK(FH_SDH | 3), "\\Device\\Harddisk7\\Partition3", exists_ntdev, S_IFBLK, true},
  {"/dev/sdh4", BRACK(FH_SDH | 4), "\\Device\\Harddisk7\\Partition4", exists_ntdev, S_IFBLK, true},
  {"/dev/sdh5", BRACK(FH_SDH | 5), "\\Device\\Harddisk7\\Partition5", exists_ntdev, S_IFBLK, true},
  {"/dev/sdh6", BRACK(FH_SDH | 6), "\\Device\\Harddisk7\\Partition6", exists_ntdev, S_IFBLK, true},
  {"/dev/sdh7", BRACK(FH_SDH | 7), "\\Device\\Harddisk7\\Partition7", exists_ntdev, S_IFBLK, true},
  {"/dev/sdh8", BRACK(FH_SDH | 8), "\\Device\\Harddisk7\\Partition8", exists_ntdev, S_IFBLK, true},
  {"/dev/sdh9", BRACK(FH_SDH | 9), "\\Device\\Harddisk7\\Partition9", exists_ntdev, S_IFBLK, true},
  {"/dev/sdh10", BRACK(FH_SDH | 10), "\\Device\\Harddisk7\\Partition10", exists_ntdev, S_IFBLK, true},
  {"/dev/sdh11", BRACK(FH_SDH | 11), "\\Device\\Harddisk7\\Partition11", exists_ntdev, S_IFBLK, true},
  {"/dev/sdh12", BRACK(FH_SDH | 12), "\\Device\\Harddisk7\\Partition12", exists_ntdev, S_IFBLK, true},
  {"/dev/sdh13", BRACK(FH_SDH | 13), "\\Device\\Harddisk7\\Partition13", exists_ntdev, S_IFBLK, true},
  {"/dev/sdh14", BRACK(FH_SDH | 14), "\\Device\\Harddisk7\\Partition14", exists_ntdev, S_IFBLK, true},
  {"/dev/sdh15", BRACK(FH_SDH | 15), "\\Device\\Harddisk7\\Partition15", exists_ntdev, S_IFBLK, true},
  {"/dev/sdi1", BRACK(FH_SDI | 1), "\\Device\\Harddisk8\\Partition1", exists_ntdev, S_IFBLK, true},
  {"/dev/sdi2", BRACK(FH_SDI | 2), "\\Device\\Harddisk8\\Partition2", exists_ntdev, S_IFBLK, true},
  {"/dev/sdi3", BRACK(FH_SDI | 3), "\\Device\\Harddisk8\\Partition3", exists_ntdev, S_IFBLK, true},
  {"/dev/sdi4", BRACK(FH_SDI | 4), "\\Device\\Harddisk8\\Partition4", exists_ntdev, S_IFBLK, true},
  {"/dev/sdi5", BRACK(FH_SDI | 5), "\\Device\\Harddisk8\\Partition5", exists_ntdev, S_IFBLK, true},
  {"/dev/sdi6", BRACK(FH_SDI | 6), "\\Device\\Harddisk8\\Partition6", exists_ntdev, S_IFBLK, true},
  {"/dev/sdi7", BRACK(FH_SDI | 7), "\\Device\\Harddisk8\\Partition7", exists_ntdev, S_IFBLK, true},
  {"/dev/sdi8", BRACK(FH_SDI | 8), "\\Device\\Harddisk8\\Partition8", exists_ntdev, S_IFBLK, true},
  {"/dev/sdi9", BRACK(FH_SDI | 9), "\\Device\\Harddisk8\\Partition9", exists_ntdev, S_IFBLK, true},
  {"/dev/sdi10", BRACK(FH_SDI | 10), "\\Device\\Harddisk8\\Partition10", exists_ntdev, S_IFBLK, true},
  {"/dev/sdi11", BRACK(FH_SDI | 11), "\\Device\\Harddisk8\\Partition11", exists_ntdev, S_IFBLK, true},
  {"/dev/sdi12", BRACK(FH_SDI | 12), "\\Device\\Harddisk8\\Partition12", exists_ntdev, S_IFBLK, true},
  {"/dev/sdi13", BRACK(FH_SDI | 13), "\\Device\\Harddisk8\\Partition13", exists_ntdev, S_IFBLK, true},
  {"/dev/sdi14", BRACK(FH_SDI | 14), "\\Device\\Harddisk8\\Partition14", exists_ntdev, S_IFBLK, true},
  {"/dev/sdi15", BRACK(FH_SDI | 15), "\\Device\\Harddisk8\\Partition15", exists_ntdev, S_IFBLK, true},
  {"/dev/sdj1", BRACK(FH_SDJ | 1), "\\Device\\Harddisk9\\Partition1", exists_ntdev, S_IFBLK, true},
  {"/dev/sdj2", BRACK(FH_SDJ | 2), "\\Device\\Harddisk9\\Partition2", exists_ntdev, S_IFBLK, true},
  {"/dev/sdj3", BRACK(FH_SDJ | 3), "\\Device\\Harddisk9\\Partition3", exists_ntdev, S_IFBLK, true},
  {"/dev/sdj4", BRACK(FH_SDJ | 4), "\\Device\\Harddisk9\\Partition4", exists_ntdev, S_IFBLK, true},
  {"/dev/sdj5", BRACK(FH_SDJ | 5), "\\Device\\Harddisk9\\Partition5", exists_ntdev, S_IFBLK, true},
  {"/dev/sdj6", BRACK(FH_SDJ | 6), "\\Device\\Harddisk9\\Partition6", exists_ntdev, S_IFBLK, true},
  {"/dev/sdj7", BRACK(FH_SDJ | 7), "\\Device\\Harddisk9\\Partition7", exists_ntdev, S_IFBLK, true},
  {"/dev/sdj8", BRACK(FH_SDJ | 8), "\\Device\\Harddisk9\\Partition8", exists_ntdev, S_IFBLK, true},
  {"/dev/sdj9", BRACK(FH_SDJ | 9), "\\Device\\Harddisk9\\Partition9", exists_ntdev, S_IFBLK, true},
  {"/dev/sdj10", BRACK(FH_SDJ | 10), "\\Device\\Harddisk9\\Partition10", exists_ntdev, S_IFBLK, true},
  {"/dev/sdj11", BRACK(FH_SDJ | 11), "\\Device\\Harddisk9\\Partition11", exists_ntdev, S_IFBLK, true},
  {"/dev/sdj12", BRACK(FH_SDJ | 12), "\\Device\\Harddisk9\\Partition12", exists_ntdev, S_IFBLK, true},
  {"/dev/sdj13", BRACK(FH_SDJ | 13), "\\Device\\Harddisk9\\Partition13", exists_ntdev, S_IFBLK, true},
  {"/dev/sdj14", BRACK(FH_SDJ | 14), "\\Device\\Harddisk9\\Partition14", exists_ntdev, S_IFBLK, true},
  {"/dev/sdj15", BRACK(FH_SDJ | 15), "\\Device\\Harddisk9\\Partition15", exists_ntdev, S_IFBLK, true},
  {"/dev/sdk1", BRACK(FH_SDK | 1), "\\Device\\Harddisk10\\Partition1", exists_ntdev, S_IFBLK, true},
  {"/dev/sdk2", BRACK(FH_SDK | 2), "\\Device\\Harddisk10\\Partition2", exists_ntdev, S_IFBLK, true},
  {"/dev/sdk3", BRACK(FH_SDK | 3), "\\Device\\Harddisk10\\Partition3", exists_ntdev, S_IFBLK, true},
  {"/dev/sdk4", BRACK(FH_SDK | 4), "\\Device\\Harddisk10\\Partition4", exists_ntdev, S_IFBLK, true},
  {"/dev/sdk5", BRACK(FH_SDK | 5), "\\Device\\Harddisk10\\Partition5", exists_ntdev, S_IFBLK, true},
  {"/dev/sdk6", BRACK(FH_SDK | 6), "\\Device\\Harddisk10\\Partition6", exists_ntdev, S_IFBLK, true},
  {"/dev/sdk7", BRACK(FH_SDK | 7), "\\Device\\Harddisk10\\Partition7", exists_ntdev, S_IFBLK, true},
  {"/dev/sdk8", BRACK(FH_SDK | 8), "\\Device\\Harddisk10\\Partition8", exists_ntdev, S_IFBLK, true},
  {"/dev/sdk9", BRACK(FH_SDK | 9), "\\Device\\Harddisk10\\Partition9", exists_ntdev, S_IFBLK, true},
  {"/dev/sdk10", BRACK(FH_SDK | 10), "\\Device\\Harddisk10\\Partition10", exists_ntdev, S_IFBLK, true},
  {"/dev/sdk11", BRACK(FH_SDK | 11), "\\Device\\Harddisk10\\Partition11", exists_ntdev, S_IFBLK, true},
  {"/dev/sdk12", BRACK(FH_SDK | 12), "\\Device\\Harddisk10\\Partition12", exists_ntdev, S_IFBLK, true},
  {"/dev/sdk13", BRACK(FH_SDK | 13), "\\Device\\Harddisk10\\Partition13", exists_ntdev, S_IFBLK, true},
  {"/dev/sdk14", BRACK(FH_SDK | 14), "\\Device\\Harddisk10\\Partition14", exists_ntdev, S_IFBLK, true},
  {"/dev/sdk15", BRACK(FH_SDK | 15), "\\Device\\Harddisk10\\Partition15", exists_ntdev, S_IFBLK, true},
  {"/dev/sdl1", BRACK(FH_SDL | 1), "\\Device\\Harddisk11\\Partition1", exists_ntdev, S_IFBLK, true},
  {"/dev/sdl2", BRACK(FH_SDL | 2), "\\Device\\Harddisk11\\Partition2", exists_ntdev, S_IFBLK, true},
  {"/dev/sdl3", BRACK(FH_SDL | 3), "\\Device\\Harddisk11\\Partition3", exists_ntdev, S_IFBLK, true},
  {"/dev/sdl4", BRACK(FH_SDL | 4), "\\Device\\Harddisk11\\Partition4", exists_ntdev, S_IFBLK, true},
  {"/dev/sdl5", BRACK(FH_SDL | 5), "\\Device\\Harddisk11\\Partition5", exists_ntdev, S_IFBLK, true},
  {"/dev/sdl6", BRACK(FH_SDL | 6), "\\Device\\Harddisk11\\Partition6", exists_ntdev, S_IFBLK, true},
  {"/dev/sdl7", BRACK(FH_SDL | 7), "\\Device\\Harddisk11\\Partition7", exists_ntdev, S_IFBLK, true},
  {"/dev/sdl8", BRACK(FH_SDL | 8), "\\Device\\Harddisk11\\Partition8", exists_ntdev, S_IFBLK, true},
  {"/dev/sdl9", BRACK(FH_SDL | 9), "\\Device\\Harddisk11\\Partition9", exists_ntdev, S_IFBLK, true},
  {"/dev/sdl10", BRACK(FH_SDL | 10), "\\Device\\Harddisk11\\Partition10", exists_ntdev, S_IFBLK, true},
  {"/dev/sdl11", BRACK(FH_SDL | 11), "\\Device\\Harddisk11\\Partition11", exists_ntdev, S_IFBLK, true},
  {"/dev/sdl12", BRACK(FH_SDL | 12), "\\Device\\Harddisk11\\Partition12", exists_ntdev, S_IFBLK, true},
  {"/dev/sdl13", BRACK(FH_SDL | 13), "\\Device\\Harddisk11\\Partition13", exists_ntdev, S_IFBLK, true},
  {"/dev/sdl14", BRACK(FH_SDL | 14), "\\Device\\Harddisk11\\Partition14", exists_ntdev, S_IFBLK, true},
  {"/dev/sdl15", BRACK(FH_SDL | 15), "\\Device\\Harddisk11\\Partition15", exists_ntdev, S_IFBLK, true},
  {"/dev/sdm1", BRACK(FH_SDM | 1), "\\Device\\Harddisk12\\Partition1", exists_ntdev, S_IFBLK, true},
  {"/dev/sdm2", BRACK(FH_SDM | 2), "\\Device\\Harddisk12\\Partition2", exists_ntdev, S_IFBLK, true},
  {"/dev/sdm3", BRACK(FH_SDM | 3), "\\Device\\Harddisk12\\Partition3", exists_ntdev, S_IFBLK, true},
  {"/dev/sdm4", BRACK(FH_SDM | 4), "\\Device\\Harddisk12\\Partition4", exists_ntdev, S_IFBLK, true},
  {"/dev/sdm5", BRACK(FH_SDM | 5), "\\Device\\Harddisk12\\Partition5", exists_ntdev, S_IFBLK, true},
  {"/dev/sdm6", BRACK(FH_SDM | 6), "\\Device\\Harddisk12\\Partition6", exists_ntdev, S_IFBLK, true},
  {"/dev/sdm7", BRACK(FH_SDM | 7), "\\Device\\Harddisk12\\Partition7", exists_ntdev, S_IFBLK, true},
  {"/dev/sdm8", BRACK(FH_SDM | 8), "\\Device\\Harddisk12\\Partition8", exists_ntdev, S_IFBLK, true},
  {"/dev/sdm9", BRACK(FH_SDM | 9), "\\Device\\Harddisk12\\Partition9", exists_ntdev, S_IFBLK, true},
  {"/dev/sdm10", BRACK(FH_SDM | 10), "\\Device\\Harddisk12\\Partition10", exists_ntdev, S_IFBLK, true},
  {"/dev/sdm11", BRACK(FH_SDM | 11), "\\Device\\Harddisk12\\Partition11", exists_ntdev, S_IFBLK, true},
  {"/dev/sdm12", BRACK(FH_SDM | 12), "\\Device\\Harddisk12\\Partition12", exists_ntdev, S_IFBLK, true},
  {"/dev/sdm13", BRACK(FH_SDM | 13), "\\Device\\Harddisk12\\Partition13", exists_ntdev, S_IFBLK, true},
  {"/dev/sdm14", BRACK(FH_SDM | 14), "\\Device\\Harddisk12\\Partition14", exists_ntdev, S_IFBLK, true},
  {"/dev/sdm15", BRACK(FH_SDM | 15), "\\Device\\Harddisk12\\Partition15", exists_ntdev, S_IFBLK, true},
  {"/dev/sdn1", BRACK(FH_SDN | 1), "\\Device\\Harddisk13\\Partition1", exists_ntdev, S_IFBLK, true},
  {"/dev/sdn2", BRACK(FH_SDN | 2), "\\Device\\Harddisk13\\Partition2", exists_ntdev, S_IFBLK, true},
  {"/dev/sdn3", BRACK(FH_SDN | 3), "\\Device\\Harddisk13\\Partition3", exists_ntdev, S_IFBLK, true},
  {"/dev/sdn4", BRACK(FH_SDN | 4), "\\Device\\Harddisk13\\Partition4", exists_ntdev, S_IFBLK, true},
  {"/dev/sdn5", BRACK(FH_SDN | 5), "\\Device\\Harddisk13\\Partition5", exists_ntdev, S_IFBLK, true},
  {"/dev/sdn6", BRACK(FH_SDN | 6), "\\Device\\Harddisk13\\Partition6", exists_ntdev, S_IFBLK, true},
  {"/dev/sdn7", BRACK(FH_SDN | 7), "\\Device\\Harddisk13\\Partition7", exists_ntdev, S_IFBLK, true},
  {"/dev/sdn8", BRACK(FH_SDN | 8), "\\Device\\Harddisk13\\Partition8", exists_ntdev, S_IFBLK, true},
  {"/dev/sdn9", BRACK(FH_SDN | 9), "\\Device\\Harddisk13\\Partition9", exists_ntdev, S_IFBLK, true},
  {"/dev/sdn10", BRACK(FH_SDN | 10), "\\Device\\Harddisk13\\Partition10", exists_ntdev, S_IFBLK, true},
  {"/dev/sdn11", BRACK(FH_SDN | 11), "\\Device\\Harddisk13\\Partition11", exists_ntdev, S_IFBLK, true},
  {"/dev/sdn12", BRACK(FH_SDN | 12), "\\Device\\Harddisk13\\Partition12", exists_ntdev, S_IFBLK, true},
  {"/dev/sdn13", BRACK(FH_SDN | 13), "\\Device\\Harddisk13\\Partition13", exists_ntdev, S_IFBLK, true},
  {"/dev/sdn14", BRACK(FH_SDN | 14), "\\Device\\Harddisk13\\Partition14", exists_ntdev, S_IFBLK, true},
  {"/dev/sdn15", BRACK(FH_SDN | 15), "\\Device\\Harddisk13\\Partition15", exists_ntdev, S_IFBLK, true},
  {"/dev/sdo1", BRACK(FH_SDO | 1), "\\Device\\Harddisk14\\Partition1", exists_ntdev, S_IFBLK, true},
  {"/dev/sdo2", BRACK(FH_SDO | 2), "\\Device\\Harddisk14\\Partition2", exists_ntdev, S_IFBLK, true},
  {"/dev/sdo3", BRACK(FH_SDO | 3), "\\Device\\Harddisk14\\Partition3", exists_ntdev, S_IFBLK, true},
  {"/dev/sdo4", BRACK(FH_SDO | 4), "\\Device\\Harddisk14\\Partition4", exists_ntdev, S_IFBLK, true},
  {"/dev/sdo5", BRACK(FH_SDO | 5), "\\Device\\Harddisk14\\Partition5", exists_ntdev, S_IFBLK, true},
  {"/dev/sdo6", BRACK(FH_SDO | 6), "\\Device\\Harddisk14\\Partition6", exists_ntdev, S_IFBLK, true},
  {"/dev/sdo7", BRACK(FH_SDO | 7), "\\Device\\Harddisk14\\Partition7", exists_ntdev, S_IFBLK, true},
  {"/dev/sdo8", BRACK(FH_SDO | 8), "\\Device\\Harddisk14\\Partition8", exists_ntdev, S_IFBLK, true},
  {"/dev/sdo9", BRACK(FH_SDO | 9), "\\Device\\Harddisk14\\Partition9", exists_ntdev, S_IFBLK, true},
  {"/dev/sdo10", BRACK(FH_SDO | 10), "\\Device\\Harddisk14\\Partition10", exists_ntdev, S_IFBLK, true},
  {"/dev/sdo11", BRACK(FH_SDO | 11), "\\Device\\Harddisk14\\Partition11", exists_ntdev, S_IFBLK, true},
  {"/dev/sdo12", BRACK(FH_SDO | 12), "\\Device\\Harddisk14\\Partition12", exists_ntdev, S_IFBLK, true},
  {"/dev/sdo13", BRACK(FH_SDO | 13), "\\Device\\Harddisk14\\Partition13", exists_ntdev, S_IFBLK, true},
  {"/dev/sdo14", BRACK(FH_SDO | 14), "\\Device\\Harddisk14\\Partition14", exists_ntdev, S_IFBLK, true},
  {"/dev/sdo15", BRACK(FH_SDO | 15), "\\Device\\Harddisk14\\Partition15", exists_ntdev, S_IFBLK, true},
  {"/dev/sdp1", BRACK(FH_SDP | 1), "\\Device\\Harddisk15\\Partition1", exists_ntdev, S_IFBLK, true},
  {"/dev/sdp2", BRACK(FH_SDP | 2), "\\Device\\Harddisk15\\Partition2", exists_ntdev, S_IFBLK, true},
  {"/dev/sdp3", BRACK(FH_SDP | 3), "\\Device\\Harddisk15\\Partition3", exists_ntdev, S_IFBLK, true},
  {"/dev/sdp4", BRACK(FH_SDP | 4), "\\Device\\Harddisk15\\Partition4", exists_ntdev, S_IFBLK, true},
  {"/dev/sdp5", BRACK(FH_SDP | 5), "\\Device\\Harddisk15\\Partition5", exists_ntdev, S_IFBLK, true},
  {"/dev/sdp6", BRACK(FH_SDP | 6), "\\Device\\Harddisk15\\Partition6", exists_ntdev, S_IFBLK, true},
  {"/dev/sdp7", BRACK(FH_SDP | 7), "\\Device\\Harddisk15\\Partition7", exists_ntdev, S_IFBLK, true},
  {"/dev/sdp8", BRACK(FH_SDP | 8), "\\Device\\Harddisk15\\Partition8", exists_ntdev, S_IFBLK, true},
  {"/dev/sdp9", BRACK(FH_SDP | 9), "\\Device\\Harddisk15\\Partition9", exists_ntdev, S_IFBLK, true},
  {"/dev/sdp10", BRACK(FH_SDP | 10), "\\Device\\Harddisk15\\Partition10", exists_ntdev, S_IFBLK, true},
  {"/dev/sdp11", BRACK(FH_SDP | 11), "\\Device\\Harddisk15\\Partition11", exists_ntdev, S_IFBLK, true},
  {"/dev/sdp12", BRACK(FH_SDP | 12), "\\Device\\Harddisk15\\Partition12", exists_ntdev, S_IFBLK, true},
  {"/dev/sdp13", BRACK(FH_SDP | 13), "\\Device\\Harddisk15\\Partition13", exists_ntdev, S_IFBLK, true},
  {"/dev/sdp14", BRACK(FH_SDP | 14), "\\Device\\Harddisk15\\Partition14", exists_ntdev, S_IFBLK, true},
  {"/dev/sdp15", BRACK(FH_SDP | 15), "\\Device\\Harddisk15\\Partition15", exists_ntdev, S_IFBLK, true},
  {"/dev/sdq1", BRACK(FH_SDQ | 1), "\\Device\\Harddisk16\\Partition1", exists_ntdev, S_IFBLK, true},
  {"/dev/sdq2", BRACK(FH_SDQ | 2), "\\Device\\Harddisk16\\Partition2", exists_ntdev, S_IFBLK, true},
  {"/dev/sdq3", BRACK(FH_SDQ | 3), "\\Device\\Harddisk16\\Partition3", exists_ntdev, S_IFBLK, true},
  {"/dev/sdq4", BRACK(FH_SDQ | 4), "\\Device\\Harddisk16\\Partition4", exists_ntdev, S_IFBLK, true},
  {"/dev/sdq5", BRACK(FH_SDQ | 5), "\\Device\\Harddisk16\\Partition5", exists_ntdev, S_IFBLK, true},
  {"/dev/sdq6", BRACK(FH_SDQ | 6), "\\Device\\Harddisk16\\Partition6", exists_ntdev, S_IFBLK, true},
  {"/dev/sdq7", BRACK(FH_SDQ | 7), "\\Device\\Harddisk16\\Partition7", exists_ntdev, S_IFBLK, true},
  {"/dev/sdq8", BRACK(FH_SDQ | 8), "\\Device\\Harddisk16\\Partition8", exists_ntdev, S_IFBLK, true},
  {"/dev/sdq9", BRACK(FH_SDQ | 9), "\\Device\\Harddisk16\\Partition9", exists_ntdev, S_IFBLK, true},
  {"/dev/sdq10", BRACK(FH_SDQ | 10), "\\Device\\Harddisk16\\Partition10", exists_ntdev, S_IFBLK, true},
  {"/dev/sdq11", BRACK(FH_SDQ | 11), "\\Device\\Harddisk16\\Partition11", exists_ntdev, S_IFBLK, true},
  {"/dev/sdq12", BRACK(FH_SDQ | 12), "\\Device\\Harddisk16\\Partition12", exists_ntdev, S_IFBLK, true},
  {"/dev/sdq13", BRACK(FH_SDQ | 13), "\\Device\\Harddisk16\\Partition13", exists_ntdev, S_IFBLK, true},
  {"/dev/sdq14", BRACK(FH_SDQ | 14), "\\Device\\Harddisk16\\Partition14", exists_ntdev, S_IFBLK, true},
  {"/dev/sdq15", BRACK(FH_SDQ | 15), "\\Device\\Harddisk16\\Partition15", exists_ntdev, S_IFBLK, true},
  {"/dev/sdr1", BRACK(FH_SDR | 1), "\\Device\\Harddisk17\\Partition1", exists_ntdev, S_IFBLK, true},
  {"/dev/sdr2", BRACK(FH_SDR | 2), "\\Device\\Harddisk17\\Partition2", exists_ntdev, S_IFBLK, true},
  {"/dev/sdr3", BRACK(FH_SDR | 3), "\\Device\\Harddisk17\\Partition3", exists_ntdev, S_IFBLK, true},
  {"/dev/sdr4", BRACK(FH_SDR | 4), "\\Device\\Harddisk17\\Partition4", exists_ntdev, S_IFBLK, true},
  {"/dev/sdr5", BRACK(FH_SDR | 5), "\\Device\\Harddisk17\\Partition5", exists_ntdev, S_IFBLK, true},
  {"/dev/sdr6", BRACK(FH_SDR | 6), "\\Device\\Harddisk17\\Partition6", exists_ntdev, S_IFBLK, true},
  {"/dev/sdr7", BRACK(FH_SDR | 7), "\\Device\\Harddisk17\\Partition7", exists_ntdev, S_IFBLK, true},
  {"/dev/sdr8", BRACK(FH_SDR | 8), "\\Device\\Harddisk17\\Partition8", exists_ntdev, S_IFBLK, true},
  {"/dev/sdr9", BRACK(FH_SDR | 9), "\\Device\\Harddisk17\\Partition9", exists_ntdev, S_IFBLK, true},
  {"/dev/sdr10", BRACK(FH_SDR | 10), "\\Device\\Harddisk17\\Partition10", exists_ntdev, S_IFBLK, true},
  {"/dev/sdr11", BRACK(FH_SDR | 11), "\\Device\\Harddisk17\\Partition11", exists_ntdev, S_IFBLK, true},
  {"/dev/sdr12", BRACK(FH_SDR | 12), "\\Device\\Harddisk17\\Partition12", exists_ntdev, S_IFBLK, true},
  {"/dev/sdr13", BRACK(FH_SDR | 13), "\\Device\\Harddisk17\\Partition13", exists_ntdev, S_IFBLK, true},
  {"/dev/sdr14", BRACK(FH_SDR | 14), "\\Device\\Harddisk17\\Partition14", exists_ntdev, S_IFBLK, true},
  {"/dev/sdr15", BRACK(FH_SDR | 15), "\\Device\\Harddisk17\\Partition15", exists_ntdev, S_IFBLK, true},
  {"/dev/sds1", BRACK(FH_SDS | 1), "\\Device\\Harddisk18\\Partition1", exists_ntdev, S_IFBLK, true},
  {"/dev/sds2", BRACK(FH_SDS | 2), "\\Device\\Harddisk18\\Partition2", exists_ntdev, S_IFBLK, true},
  {"/dev/sds3", BRACK(FH_SDS | 3), "\\Device\\Harddisk18\\Partition3", exists_ntdev, S_IFBLK, true},
  {"/dev/sds4", BRACK(FH_SDS | 4), "\\Device\\Harddisk18\\Partition4", exists_ntdev, S_IFBLK, true},
  {"/dev/sds5", BRACK(FH_SDS | 5), "\\Device\\Harddisk18\\Partition5", exists_ntdev, S_IFBLK, true},
  {"/dev/sds6", BRACK(FH_SDS | 6), "\\Device\\Harddisk18\\Partition6", exists_ntdev, S_IFBLK, true},
  {"/dev/sds7", BRACK(FH_SDS | 7), "\\Device\\Harddisk18\\Partition7", exists_ntdev, S_IFBLK, true},
  {"/dev/sds8", BRACK(FH_SDS | 8), "\\Device\\Harddisk18\\Partition8", exists_ntdev, S_IFBLK, true},
  {"/dev/sds9", BRACK(FH_SDS | 9), "\\Device\\Harddisk18\\Partition9", exists_ntdev, S_IFBLK, true},
  {"/dev/sds10", BRACK(FH_SDS | 10), "\\Device\\Harddisk18\\Partition10", exists_ntdev, S_IFBLK, true},
  {"/dev/sds11", BRACK(FH_SDS | 11), "\\Device\\Harddisk18\\Partition11", exists_ntdev, S_IFBLK, true},
  {"/dev/sds12", BRACK(FH_SDS | 12), "\\Device\\Harddisk18\\Partition12", exists_ntdev, S_IFBLK, true},
  {"/dev/sds13", BRACK(FH_SDS | 13), "\\Device\\Harddisk18\\Partition13", exists_ntdev, S_IFBLK, true},
  {"/dev/sds14", BRACK(FH_SDS | 14), "\\Device\\Harddisk18\\Partition14", exists_ntdev, S_IFBLK, true},
  {"/dev/sds15", BRACK(FH_SDS | 15), "\\Device\\Harddisk18\\Partition15", exists_ntdev, S_IFBLK, true},
  {"/dev/sdt1", BRACK(FH_SDT | 1), "\\Device\\Harddisk19\\Partition1", exists_ntdev, S_IFBLK, true},
  {"/dev/sdt2", BRACK(FH_SDT | 2), "\\Device\\Harddisk19\\Partition2", exists_ntdev, S_IFBLK, true},
  {"/dev/sdt3", BRACK(FH_SDT | 3), "\\Device\\Harddisk19\\Partition3", exists_ntdev, S_IFBLK, true},
  {"/dev/sdt4", BRACK(FH_SDT | 4), "\\Device\\Harddisk19\\Partition4", exists_ntdev, S_IFBLK, true},
  {"/dev/sdt5", BRACK(FH_SDT | 5), "\\Device\\Harddisk19\\Partition5", exists_ntdev, S_IFBLK, true},
  {"/dev/sdt6", BRACK(FH_SDT | 6), "\\Device\\Harddisk19\\Partition6", exists_ntdev, S_IFBLK, true},
  {"/dev/sdt7", BRACK(FH_SDT | 7), "\\Device\\Harddisk19\\Partition7", exists_ntdev, S_IFBLK, true},
  {"/dev/sdt8", BRACK(FH_SDT | 8), "\\Device\\Harddisk19\\Partition8", exists_ntdev, S_IFBLK, true},
  {"/dev/sdt9", BRACK(FH_SDT | 9), "\\Device\\Harddisk19\\Partition9", exists_ntdev, S_IFBLK, true},
  {"/dev/sdt10", BRACK(FH_SDT | 10), "\\Device\\Harddisk19\\Partition10", exists_ntdev, S_IFBLK, true},
  {"/dev/sdt11", BRACK(FH_SDT | 11), "\\Device\\Harddisk19\\Partition11", exists_ntdev, S_IFBLK, true},
  {"/dev/sdt12", BRACK(FH_SDT | 12), "\\Device\\Harddisk19\\Partition12", exists_ntdev, S_IFBLK, true},
  {"/dev/sdt13", BRACK(FH_SDT | 13), "\\Device\\Harddisk19\\Partition13", exists_ntdev, S_IFBLK, true},
  {"/dev/sdt14", BRACK(FH_SDT | 14), "\\Device\\Harddisk19\\Partition14", exists_ntdev, S_IFBLK, true},
  {"/dev/sdt15", BRACK(FH_SDT | 15), "\\Device\\Harddisk19\\Partition15", exists_ntdev, S_IFBLK, true},
  {"/dev/sdu1", BRACK(FH_SDU | 1), "\\Device\\Harddisk20\\Partition1", exists_ntdev, S_IFBLK, true},
  {"/dev/sdu2", BRACK(FH_SDU | 2), "\\Device\\Harddisk20\\Partition2", exists_ntdev, S_IFBLK, true},
  {"/dev/sdu3", BRACK(FH_SDU | 3), "\\Device\\Harddisk20\\Partition3", exists_ntdev, S_IFBLK, true},
  {"/dev/sdu4", BRACK(FH_SDU | 4), "\\Device\\Harddisk20\\Partition4", exists_ntdev, S_IFBLK, true},
  {"/dev/sdu5", BRACK(FH_SDU | 5), "\\Device\\Harddisk20\\Partition5", exists_ntdev, S_IFBLK, true},
  {"/dev/sdu6", BRACK(FH_SDU | 6), "\\Device\\Harddisk20\\Partition6", exists_ntdev, S_IFBLK, true},
  {"/dev/sdu7", BRACK(FH_SDU | 7), "\\Device\\Harddisk20\\Partition7", exists_ntdev, S_IFBLK, true},
  {"/dev/sdu8", BRACK(FH_SDU | 8), "\\Device\\Harddisk20\\Partition8", exists_ntdev, S_IFBLK, true},
  {"/dev/sdu9", BRACK(FH_SDU | 9), "\\Device\\Harddisk20\\Partition9", exists_ntdev, S_IFBLK, true},
  {"/dev/sdu10", BRACK(FH_SDU | 10), "\\Device\\Harddisk20\\Partition10", exists_ntdev, S_IFBLK, true},
  {"/dev/sdu11", BRACK(FH_SDU | 11), "\\Device\\Harddisk20\\Partition11", exists_ntdev, S_IFBLK, true},
  {"/dev/sdu12", BRACK(FH_SDU | 12), "\\Device\\Harddisk20\\Partition12", exists_ntdev, S_IFBLK, true},
  {"/dev/sdu13", BRACK(FH_SDU | 13), "\\Device\\Harddisk20\\Partition13", exists_ntdev, S_IFBLK, true},
  {"/dev/sdu14", BRACK(FH_SDU | 14), "\\Device\\Harddisk20\\Partition14", exists_ntdev, S_IFBLK, true},
  {"/dev/sdu15", BRACK(FH_SDU | 15), "\\Device\\Harddisk20\\Partition15", exists_ntdev, S_IFBLK, true},
  {"/dev/sdv1", BRACK(FH_SDV | 1), "\\Device\\Harddisk21\\Partition1", exists_ntdev, S_IFBLK, true},
  {"/dev/sdv2", BRACK(FH_SDV | 2), "\\Device\\Harddisk21\\Partition2", exists_ntdev, S_IFBLK, true},
  {"/dev/sdv3", BRACK(FH_SDV | 3), "\\Device\\Harddisk21\\Partition3", exists_ntdev, S_IFBLK, true},
  {"/dev/sdv4", BRACK(FH_SDV | 4), "\\Device\\Harddisk21\\Partition4", exists_ntdev, S_IFBLK, true},
  {"/dev/sdv5", BRACK(FH_SDV | 5), "\\Device\\Harddisk21\\Partition5", exists_ntdev, S_IFBLK, true},
  {"/dev/sdv6", BRACK(FH_SDV | 6), "\\Device\\Harddisk21\\Partition6", exists_ntdev, S_IFBLK, true},
  {"/dev/sdv7", BRACK(FH_SDV | 7), "\\Device\\Harddisk21\\Partition7", exists_ntdev, S_IFBLK, true},
  {"/dev/sdv8", BRACK(FH_SDV | 8), "\\Device\\Harddisk21\\Partition8", exists_ntdev, S_IFBLK, true},
  {"/dev/sdv9", BRACK(FH_SDV | 9), "\\Device\\Harddisk21\\Partition9", exists_ntdev, S_IFBLK, true},
  {"/dev/sdv10", BRACK(FH_SDV | 10), "\\Device\\Harddisk21\\Partition10", exists_ntdev, S_IFBLK, true},
  {"/dev/sdv11", BRACK(FH_SDV | 11), "\\Device\\Harddisk21\\Partition11", exists_ntdev, S_IFBLK, true},
  {"/dev/sdv12", BRACK(FH_SDV | 12), "\\Device\\Harddisk21\\Partition12", exists_ntdev, S_IFBLK, true},
  {"/dev/sdv13", BRACK(FH_SDV | 13), "\\Device\\Harddisk21\\Partition13", exists_ntdev, S_IFBLK, true},
  {"/dev/sdv14", BRACK(FH_SDV | 14), "\\Device\\Harddisk21\\Partition14", exists_ntdev, S_IFBLK, true},
  {"/dev/sdv15", BRACK(FH_SDV | 15), "\\Device\\Harddisk21\\Partition15", exists_ntdev, S_IFBLK, true},
  {"/dev/sdw1", BRACK(FH_SDW | 1), "\\Device\\Harddisk22\\Partition1", exists_ntdev, S_IFBLK, true},
  {"/dev/sdw2", BRACK(FH_SDW | 2), "\\Device\\Harddisk22\\Partition2", exists_ntdev, S_IFBLK, true},
  {"/dev/sdw3", BRACK(FH_SDW | 3), "\\Device\\Harddisk22\\Partition3", exists_ntdev, S_IFBLK, true},
  {"/dev/sdw4", BRACK(FH_SDW | 4), "\\Device\\Harddisk22\\Partition4", exists_ntdev, S_IFBLK, true},
  {"/dev/sdw5", BRACK(FH_SDW | 5), "\\Device\\Harddisk22\\Partition5", exists_ntdev, S_IFBLK, true},
  {"/dev/sdw6", BRACK(FH_SDW | 6), "\\Device\\Harddisk22\\Partition6", exists_ntdev, S_IFBLK, true},
  {"/dev/sdw7", BRACK(FH_SDW | 7), "\\Device\\Harddisk22\\Partition7", exists_ntdev, S_IFBLK, true},
  {"/dev/sdw8", BRACK(FH_SDW | 8), "\\Device\\Harddisk22\\Partition8", exists_ntdev, S_IFBLK, true},
  {"/dev/sdw9", BRACK(FH_SDW | 9), "\\Device\\Harddisk22\\Partition9", exists_ntdev, S_IFBLK, true},
  {"/dev/sdw10", BRACK(FH_SDW | 10), "\\Device\\Harddisk22\\Partition10", exists_ntdev, S_IFBLK, true},
  {"/dev/sdw11", BRACK(FH_SDW | 11), "\\Device\\Harddisk22\\Partition11", exists_ntdev, S_IFBLK, true},
  {"/dev/sdw12", BRACK(FH_SDW | 12), "\\Device\\Harddisk22\\Partition12", exists_ntdev, S_IFBLK, true},
  {"/dev/sdw13", BRACK(FH_SDW | 13), "\\Device\\Harddisk22\\Partition13", exists_ntdev, S_IFBLK, true},
  {"/dev/sdw14", BRACK(FH_SDW | 14), "\\Device\\Harddisk22\\Partition14", exists_ntdev, S_IFBLK, true},
  {"/dev/sdw15", BRACK(FH_SDW | 15), "\\Device\\Harddisk22\\Partition15", exists_ntdev, S_IFBLK, true},
  {"/dev/sdx1", BRACK(FH_SDX | 1), "\\Device\\Harddisk23\\Partition1", exists_ntdev, S_IFBLK, true},
  {"/dev/sdx2", BRACK(FH_SDX | 2), "\\Device\\Harddisk23\\Partition2", exists_ntdev, S_IFBLK, true},
  {"/dev/sdx3", BRACK(FH_SDX | 3), "\\Device\\Harddisk23\\Partition3", exists_ntdev, S_IFBLK, true},
  {"/dev/sdx4", BRACK(FH_SDX | 4), "\\Device\\Harddisk23\\Partition4", exists_ntdev, S_IFBLK, true},
  {"/dev/sdx5", BRACK(FH_SDX | 5), "\\Device\\Harddisk23\\Partition5", exists_ntdev, S_IFBLK, true},
  {"/dev/sdx6", BRACK(FH_SDX | 6), "\\Device\\Harddisk23\\Partition6", exists_ntdev, S_IFBLK, true},
  {"/dev/sdx7", BRACK(FH_SDX | 7), "\\Device\\Harddisk23\\Partition7", exists_ntdev, S_IFBLK, true},
  {"/dev/sdx8", BRACK(FH_SDX | 8), "\\Device\\Harddisk23\\Partition8", exists_ntdev, S_IFBLK, true},
  {"/dev/sdx9", BRACK(FH_SDX | 9), "\\Device\\Harddisk23\\Partition9", exists_ntdev, S_IFBLK, true},
  {"/dev/sdx10", BRACK(FH_SDX | 10), "\\Device\\Harddisk23\\Partition10", exists_ntdev, S_IFBLK, true},
  {"/dev/sdx11", BRACK(FH_SDX | 11), "\\Device\\Harddisk23\\Partition11", exists_ntdev, S_IFBLK, true},
  {"/dev/sdx12", BRACK(FH_SDX | 12), "\\Device\\Harddisk23\\Partition12", exists_ntdev, S_IFBLK, true},
  {"/dev/sdx13", BRACK(FH_SDX | 13), "\\Device\\Harddisk23\\Partition13", exists_ntdev, S_IFBLK, true},
  {"/dev/sdx14", BRACK(FH_SDX | 14), "\\Device\\Harddisk23\\Partition14", exists_ntdev, S_IFBLK, true},
  {"/dev/sdx15", BRACK(FH_SDX | 15), "\\Device\\Harddisk23\\Partition15", exists_ntdev, S_IFBLK, true},
  {"/dev/sdy1", BRACK(FH_SDY | 1), "\\Device\\Harddisk24\\Partition1", exists_ntdev, S_IFBLK, true},
  {"/dev/sdy2", BRACK(FH_SDY | 2), "\\Device\\Harddisk24\\Partition2", exists_ntdev, S_IFBLK, true},
  {"/dev/sdy3", BRACK(FH_SDY | 3), "\\Device\\Harddisk24\\Partition3", exists_ntdev, S_IFBLK, true},
  {"/dev/sdy4", BRACK(FH_SDY | 4), "\\Device\\Harddisk24\\Partition4", exists_ntdev, S_IFBLK, true},
  {"/dev/sdy5", BRACK(FH_SDY | 5), "\\Device\\Harddisk24\\Partition5", exists_ntdev, S_IFBLK, true},
  {"/dev/sdy6", BRACK(FH_SDY | 6), "\\Device\\Harddisk24\\Partition6", exists_ntdev, S_IFBLK, true},
  {"/dev/sdy7", BRACK(FH_SDY | 7), "\\Device\\Harddisk24\\Partition7", exists_ntdev, S_IFBLK, true},
  {"/dev/sdy8", BRACK(FH_SDY | 8), "\\Device\\Harddisk24\\Partition8", exists_ntdev, S_IFBLK, true},
  {"/dev/sdy9", BRACK(FH_SDY | 9), "\\Device\\Harddisk24\\Partition9", exists_ntdev, S_IFBLK, true},
  {"/dev/sdy10", BRACK(FH_SDY | 10), "\\Device\\Harddisk24\\Partition10", exists_ntdev, S_IFBLK, true},
  {"/dev/sdy11", BRACK(FH_SDY | 11), "\\Device\\Harddisk24\\Partition11", exists_ntdev, S_IFBLK, true},
  {"/dev/sdy12", BRACK(FH_SDY | 12), "\\Device\\Harddisk24\\Partition12", exists_ntdev, S_IFBLK, true},
  {"/dev/sdy13", BRACK(FH_SDY | 13), "\\Device\\Harddisk24\\Partition13", exists_ntdev, S_IFBLK, true},
  {"/dev/sdy14", BRACK(FH_SDY | 14), "\\Device\\Harddisk24\\Partition14", exists_ntdev, S_IFBLK, true},
  {"/dev/sdy15", BRACK(FH_SDY | 15), "\\Device\\Harddisk24\\Partition15", exists_ntdev, S_IFBLK, true},
  {"/dev/sdz1", BRACK(FH_SDZ | 1), "\\Device\\Harddisk25\\Partition1", exists_ntdev, S_IFBLK, true},
  {"/dev/sdz2", BRACK(FH_SDZ | 2), "\\Device\\Harddisk25\\Partition2", exists_ntdev, S_IFBLK, true},
  {"/dev/sdz3", BRACK(FH_SDZ | 3), "\\Device\\Harddisk25\\Partition3", exists_ntdev, S_IFBLK, true},
  {"/dev/sdz4", BRACK(FH_SDZ | 4), "\\Device\\Harddisk25\\Partition4", exists_ntdev, S_IFBLK, true},
  {"/dev/sdz5", BRACK(FH_SDZ | 5), "\\Device\\Harddisk25\\Partition5", exists_ntdev, S_IFBLK, true},
  {"/dev/sdz6", BRACK(FH_SDZ | 6), "\\Device\\Harddisk25\\Partition6", exists_ntdev, S_IFBLK, true},
  {"/dev/sdz7", BRACK(FH_SDZ | 7), "\\Device\\Harddisk25\\Partition7", exists_ntdev, S_IFBLK, true},
  {"/dev/sdz8", BRACK(FH_SDZ | 8), "\\Device\\Harddisk25\\Partition8", exists_ntdev, S_IFBLK, true},
  {"/dev/sdz9", BRACK(FH_SDZ | 9), "\\Device\\Harddisk25\\Partition9", exists_ntdev, S_IFBLK, true},
  {"/dev/sdz10", BRACK(FH_SDZ | 10), "\\Device\\Harddisk25\\Partition10", exists_ntdev, S_IFBLK, true},
  {"/dev/sdz11", BRACK(FH_SDZ | 11), "\\Device\\Harddisk25\\Partition11", exists_ntdev, S_IFBLK, true},
  {"/dev/sdz12", BRACK(FH_SDZ | 12), "\\Device\\Harddisk25\\Partition12", exists_ntdev, S_IFBLK, true},
  {"/dev/sdz13", BRACK(FH_SDZ | 13), "\\Device\\Harddisk25\\Partition13", exists_ntdev, S_IFBLK, true},
  {"/dev/sdz14", BRACK(FH_SDZ | 14), "\\Device\\Harddisk25\\Partition14", exists_ntdev, S_IFBLK, true},
  {"/dev/sdz15", BRACK(FH_SDZ | 15), "\\Device\\Harddisk25\\Partition15", exists_ntdev, S_IFBLK, true},
  {"/dev/sdaa", BRACK(FH_SDAA), "\\Device\\Harddisk26\\Partition0", exists_ntdev, S_IFBLK, true},
  {"/dev/sdab", BRACK(FH_SDAB), "\\Device\\Harddisk27\\Partition0", exists_ntdev, S_IFBLK, true},
  {"/dev/sdac", BRACK(FH_SDAC), "\\Device\\Harddisk28\\Partition0", exists_ntdev, S_IFBLK, true},
  {"/dev/sdad", BRACK(FH_SDAD), "\\Device\\Harddisk29\\Partition0", exists_ntdev, S_IFBLK, true},
  {"/dev/sdae", BRACK(FH_SDAE), "\\Device\\Harddisk30\\Partition0", exists_ntdev, S_IFBLK, true},
  {"/dev/sdaf", BRACK(FH_SDAF), "\\Device\\Harddisk31\\Partition0", exists_ntdev, S_IFBLK, true},
  {"/dev/sdag", BRACK(FH_SDAG), "\\Device\\Harddisk32\\Partition0", exists_ntdev, S_IFBLK, true},
  {"/dev/sdah", BRACK(FH_SDAH), "\\Device\\Harddisk33\\Partition0", exists_ntdev, S_IFBLK, true},
  {"/dev/sdai", BRACK(FH_SDAI), "\\Device\\Harddisk34\\Partition0", exists_ntdev, S_IFBLK, true},
  {"/dev/sdaj", BRACK(FH_SDAJ), "\\Device\\Harddisk35\\Partition0", exists_ntdev, S_IFBLK, true},
  {"/dev/sdak", BRACK(FH_SDAK), "\\Device\\Harddisk36\\Partition0", exists_ntdev, S_IFBLK, true},
  {"/dev/sdal", BRACK(FH_SDAL), "\\Device\\Harddisk37\\Partition0", exists_ntdev, S_IFBLK, true},
  {"/dev/sdam", BRACK(FH_SDAM), "\\Device\\Harddisk38\\Partition0", exists_ntdev, S_IFBLK, true},
  {"/dev/sdan", BRACK(FH_SDAN), "\\Device\\Harddisk39\\Partition0", exists_ntdev, S_IFBLK, true},
  {"/dev/sdao", BRACK(FH_SDAO), "\\Device\\Harddisk40\\Partition0", exists_ntdev, S_IFBLK, true},
  {"/dev/sdap", BRACK(FH_SDAP), "\\Device\\Harddisk41\\Partition0", exists_ntdev, S_IFBLK, true},
  {"/dev/sdaq", BRACK(FH_SDAQ), "\\Device\\Harddisk42\\Partition0", exists_ntdev, S_IFBLK, true},
  {"/dev/sdar", BRACK(FH_SDAR), "\\Device\\Harddisk43\\Partition0", exists_ntdev, S_IFBLK, true},
  {"/dev/sdas", BRACK(FH_SDAS), "\\Device\\Harddisk44\\Partition0", exists_ntdev, S_IFBLK, true},
  {"/dev/sdat", BRACK(FH_SDAT), "\\Device\\Harddisk45\\Partition0", exists_ntdev, S_IFBLK, true},
  {"/dev/sdau", BRACK(FH_SDAU), "\\Device\\Harddisk46\\Partition0", exists_ntdev, S_IFBLK, true},
  {"/dev/sdav", BRACK(FH_SDAV), "\\Device\\Harddisk47\\Partition0", exists_ntdev, S_IFBLK, true},
  {"/dev/sdaw", BRACK(FH_SDAW), "\\Device\\Harddisk48\\Partition0", exists_ntdev, S_IFBLK, true},
  {"/dev/sdax", BRACK(FH_SDAX), "\\Device\\Harddisk49\\Partition0", exists_ntdev, S_IFBLK, true},
  {"/dev/sday", BRACK(FH_SDAY), "\\Device\\Harddisk50\\Partition0", exists_ntdev, S_IFBLK, true},
  {"/dev/sdaz", BRACK(FH_SDAZ), "\\Device\\Harddisk51\\Partition0", exists_ntdev, S_IFBLK, true},
  {"/dev/sdaa1", BRACK(FH_SDAA | 1), "\\Device\\Harddisk26\\Partition1", exists_ntdev, S_IFBLK, true},
  {"/dev/sdaa2", BRACK(FH_SDAA | 2), "\\Device\\Harddisk26\\Partition2", exists_ntdev, S_IFBLK, true},
  {"/dev/sdaa3", BRACK(FH_SDAA | 3), "\\Device\\Harddisk26\\Partition3", exists_ntdev, S_IFBLK, true},
  {"/dev/sdaa4", BRACK(FH_SDAA | 4), "\\Device\\Harddisk26\\Partition4", exists_ntdev, S_IFBLK, true},
  {"/dev/sdaa5", BRACK(FH_SDAA | 5), "\\Device\\Harddisk26\\Partition5", exists_ntdev, S_IFBLK, true},
  {"/dev/sdaa6", BRACK(FH_SDAA | 6), "\\Device\\Harddisk26\\Partition6", exists_ntdev, S_IFBLK, true},
  {"/dev/sdaa7", BRACK(FH_SDAA | 7), "\\Device\\Harddisk26\\Partition7", exists_ntdev, S_IFBLK, true},
  {"/dev/sdaa8", BRACK(FH_SDAA | 8), "\\Device\\Harddisk26\\Partition8", exists_ntdev, S_IFBLK, true},
  {"/dev/sdaa9", BRACK(FH_SDAA | 9), "\\Device\\Harddisk26\\Partition9", exists_ntdev, S_IFBLK, true},
  {"/dev/sdaa10", BRACK(FH_SDAA | 10), "\\Device\\Harddisk26\\Partition10", exists_ntdev, S_IFBLK, true},
  {"/dev/sdaa11", BRACK(FH_SDAA | 11), "\\Device\\Harddisk26\\Partition11", exists_ntdev, S_IFBLK, true},
  {"/dev/sdaa12", BRACK(FH_SDAA | 12), "\\Device\\Harddisk26\\Partition12", exists_ntdev, S_IFBLK, true},
  {"/dev/sdaa13", BRACK(FH_SDAA | 13), "\\Device\\Harddisk26\\Partition13", exists_ntdev, S_IFBLK, true},
  {"/dev/sdaa14", BRACK(FH_SDAA | 14), "\\Device\\Harddisk26\\Partition14", exists_ntdev, S_IFBLK, true},
  {"/dev/sdaa15", BRACK(FH_SDAA | 15), "\\Device\\Harddisk26\\Partition15", exists_ntdev, S_IFBLK, true},
  {"/dev/sdab1", BRACK(FH_SDAB | 1), "\\Device\\Harddisk27\\Partition1", exists_ntdev, S_IFBLK, true},
  {"/dev/sdab2", BRACK(FH_SDAB | 2), "\\Device\\Harddisk27\\Partition2", exists_ntdev, S_IFBLK, true},
  {"/dev/sdab3", BRACK(FH_SDAB | 3), "\\Device\\Harddisk27\\Partition3", exists_ntdev, S_IFBLK, true},
  {"/dev/sdab4", BRACK(FH_SDAB | 4), "\\Device\\Harddisk27\\Partition4", exists_ntdev, S_IFBLK, true},
  {"/dev/sdab5", BRACK(FH_SDAB | 5), "\\Device\\Harddisk27\\Partition5", exists_ntdev, S_IFBLK, true},
  {"/dev/sdab6", BRACK(FH_SDAB | 6), "\\Device\\Harddisk27\\Partition6", exists_ntdev, S_IFBLK, true},
  {"/dev/sdab7", BRACK(FH_SDAB | 7), "\\Device\\Harddisk27\\Partition7", exists_ntdev, S_IFBLK, true},
  {"/dev/sdab8", BRACK(FH_SDAB | 8), "\\Device\\Harddisk27\\Partition8", exists_ntdev, S_IFBLK, true},
  {"/dev/sdab9", BRACK(FH_SDAB | 9), "\\Device\\Harddisk27\\Partition9", exists_ntdev, S_IFBLK, true},
  {"/dev/sdab10", BRACK(FH_SDAB | 10), "\\Device\\Harddisk27\\Partition10", exists_ntdev, S_IFBLK, true},
  {"/dev/sdab11", BRACK(FH_SDAB | 11), "\\Device\\Harddisk27\\Partition11", exists_ntdev, S_IFBLK, true},
  {"/dev/sdab12", BRACK(FH_SDAB | 12), "\\Device\\Harddisk27\\Partition12", exists_ntdev, S_IFBLK, true},
  {"/dev/sdab13", BRACK(FH_SDAB | 13), "\\Device\\Harddisk27\\Partition13", exists_ntdev, S_IFBLK, true},
  {"/dev/sdab14", BRACK(FH_SDAB | 14), "\\Device\\Harddisk27\\Partition14", exists_ntdev, S_IFBLK, true},
  {"/dev/sdab15", BRACK(FH_SDAB | 15), "\\Device\\Harddisk27\\Partition15", exists_ntdev, S_IFBLK, true},
  {"/dev/sdac1", BRACK(FH_SDAC | 1), "\\Device\\Harddisk28\\Partition1", exists_ntdev, S_IFBLK, true},
  {"/dev/sdac2", BRACK(FH_SDAC | 2), "\\Device\\Harddisk28\\Partition2", exists_ntdev, S_IFBLK, true},
  {"/dev/sdac3", BRACK(FH_SDAC | 3), "\\Device\\Harddisk28\\Partition3", exists_ntdev, S_IFBLK, true},
  {"/dev/sdac4", BRACK(FH_SDAC | 4), "\\Device\\Harddisk28\\Partition4", exists_ntdev, S_IFBLK, true},
  {"/dev/sdac5", BRACK(FH_SDAC | 5), "\\Device\\Harddisk28\\Partition5", exists_ntdev, S_IFBLK, true},
  {"/dev/sdac6", BRACK(FH_SDAC | 6), "\\Device\\Harddisk28\\Partition6", exists_ntdev, S_IFBLK, true},
  {"/dev/sdac7", BRACK(FH_SDAC | 7), "\\Device\\Harddisk28\\Partition7", exists_ntdev, S_IFBLK, true},
  {"/dev/sdac8", BRACK(FH_SDAC | 8), "\\Device\\Harddisk28\\Partition8", exists_ntdev, S_IFBLK, true},
  {"/dev/sdac9", BRACK(FH_SDAC | 9), "\\Device\\Harddisk28\\Partition9", exists_ntdev, S_IFBLK, true},
  {"/dev/sdac10", BRACK(FH_SDAC | 10), "\\Device\\Harddisk28\\Partition10", exists_ntdev, S_IFBLK, true},
  {"/dev/sdac11", BRACK(FH_SDAC | 11), "\\Device\\Harddisk28\\Partition11", exists_ntdev, S_IFBLK, true},
  {"/dev/sdac12", BRACK(FH_SDAC | 12), "\\Device\\Harddisk28\\Partition12", exists_ntdev, S_IFBLK, true},
  {"/dev/sdac13", BRACK(FH_SDAC | 13), "\\Device\\Harddisk28\\Partition13", exists_ntdev, S_IFBLK, true},
  {"/dev/sdac14", BRACK(FH_SDAC | 14), "\\Device\\Harddisk28\\Partition14", exists_ntdev, S_IFBLK, true},
  {"/dev/sdac15", BRACK(FH_SDAC | 15), "\\Device\\Harddisk28\\Partition15", exists_ntdev, S_IFBLK, true},
  {"/dev/sdad1", BRACK(FH_SDAD | 1), "\\Device\\Harddisk29\\Partition1", exists_ntdev, S_IFBLK, true},
  {"/dev/sdad2", BRACK(FH_SDAD | 2), "\\Device\\Harddisk29\\Partition2", exists_ntdev, S_IFBLK, true},
  {"/dev/sdad3", BRACK(FH_SDAD | 3), "\\Device\\Harddisk29\\Partition3", exists_ntdev, S_IFBLK, true},
  {"/dev/sdad4", BRACK(FH_SDAD | 4), "\\Device\\Harddisk29\\Partition4", exists_ntdev, S_IFBLK, true},
  {"/dev/sdad5", BRACK(FH_SDAD | 5), "\\Device\\Harddisk29\\Partition5", exists_ntdev, S_IFBLK, true},
  {"/dev/sdad6", BRACK(FH_SDAD | 6), "\\Device\\Harddisk29\\Partition6", exists_ntdev, S_IFBLK, true},
  {"/dev/sdad7", BRACK(FH_SDAD | 7), "\\Device\\Harddisk29\\Partition7", exists_ntdev, S_IFBLK, true},
  {"/dev/sdad8", BRACK(FH_SDAD | 8), "\\Device\\Harddisk29\\Partition8", exists_ntdev, S_IFBLK, true},
  {"/dev/sdad9", BRACK(FH_SDAD | 9), "\\Device\\Harddisk29\\Partition9", exists_ntdev, S_IFBLK, true},
  {"/dev/sdad10", BRACK(FH_SDAD | 10), "\\Device\\Harddisk29\\Partition10", exists_ntdev, S_IFBLK, true},
  {"/dev/sdad11", BRACK(FH_SDAD | 11), "\\Device\\Harddisk29\\Partition11", exists_ntdev, S_IFBLK, true},
  {"/dev/sdad12", BRACK(FH_SDAD | 12), "\\Device\\Harddisk29\\Partition12", exists_ntdev, S_IFBLK, true},
  {"/dev/sdad13", BRACK(FH_SDAD | 13), "\\Device\\Harddisk29\\Partition13", exists_ntdev, S_IFBLK, true},
  {"/dev/sdad14", BRACK(FH_SDAD | 14), "\\Device\\Harddisk29\\Partition14", exists_ntdev, S_IFBLK, true},
  {"/dev/sdad15", BRACK(FH_SDAD | 15), "\\Device\\Harddisk29\\Partition15", exists_ntdev, S_IFBLK, true},
  {"/dev/sdae1", BRACK(FH_SDAE | 1), "\\Device\\Harddisk30\\Partition1", exists_ntdev, S_IFBLK, true},
  {"/dev/sdae2", BRACK(FH_SDAE | 2), "\\Device\\Harddisk30\\Partition2", exists_ntdev, S_IFBLK, true},
  {"/dev/sdae3", BRACK(FH_SDAE | 3), "\\Device\\Harddisk30\\Partition3", exists_ntdev, S_IFBLK, true},
  {"/dev/sdae4", BRACK(FH_SDAE | 4), "\\Device\\Harddisk30\\Partition4", exists_ntdev, S_IFBLK, true},
  {"/dev/sdae5", BRACK(FH_SDAE | 5), "\\Device\\Harddisk30\\Partition5", exists_ntdev, S_IFBLK, true},
  {"/dev/sdae6", BRACK(FH_SDAE | 6), "\\Device\\Harddisk30\\Partition6", exists_ntdev, S_IFBLK, true},
  {"/dev/sdae7", BRACK(FH_SDAE | 7), "\\Device\\Harddisk30\\Partition7", exists_ntdev, S_IFBLK, true},
  {"/dev/sdae8", BRACK(FH_SDAE | 8), "\\Device\\Harddisk30\\Partition8", exists_ntdev, S_IFBLK, true},
  {"/dev/sdae9", BRACK(FH_SDAE | 9), "\\Device\\Harddisk30\\Partition9", exists_ntdev, S_IFBLK, true},
  {"/dev/sdae10", BRACK(FH_SDAE | 10), "\\Device\\Harddisk30\\Partition10", exists_ntdev, S_IFBLK, true},
  {"/dev/sdae11", BRACK(FH_SDAE | 11), "\\Device\\Harddisk30\\Partition11", exists_ntdev, S_IFBLK, true},
  {"/dev/sdae12", BRACK(FH_SDAE | 12), "\\Device\\Harddisk30\\Partition12", exists_ntdev, S_IFBLK, true},
  {"/dev/sdae13", BRACK(FH_SDAE | 13), "\\Device\\Harddisk30\\Partition13", exists_ntdev, S_IFBLK, true},
  {"/dev/sdae14", BRACK(FH_SDAE | 14), "\\Device\\Harddisk30\\Partition14", exists_ntdev, S_IFBLK, true},
  {"/dev/sdae15", BRACK(FH_SDAE | 15), "\\Device\\Harddisk30\\Partition15", exists_ntdev, S_IFBLK, true},
  {"/dev/sdaf1", BRACK(FH_SDAF | 1), "\\Device\\Harddisk31\\Partition1", exists_ntdev, S_IFBLK, true},
  {"/dev/sdaf2", BRACK(FH_SDAF | 2), "\\Device\\Harddisk31\\Partition2", exists_ntdev, S_IFBLK, true},
  {"/dev/sdaf3", BRACK(FH_SDAF | 3), "\\Device\\Harddisk31\\Partition3", exists_ntdev, S_IFBLK, true},
  {"/dev/sdaf4", BRACK(FH_SDAF | 4), "\\Device\\Harddisk31\\Partition4", exists_ntdev, S_IFBLK, true},
  {"/dev/sdaf5", BRACK(FH_SDAF | 5), "\\Device\\Harddisk31\\Partition5", exists_ntdev, S_IFBLK, true},
  {"/dev/sdaf6", BRACK(FH_SDAF | 6), "\\Device\\Harddisk31\\Partition6", exists_ntdev, S_IFBLK, true},
  {"/dev/sdaf7", BRACK(FH_SDAF | 7), "\\Device\\Harddisk31\\Partition7", exists_ntdev, S_IFBLK, true},
  {"/dev/sdaf8", BRACK(FH_SDAF | 8), "\\Device\\Harddisk31\\Partition8", exists_ntdev, S_IFBLK, true},
  {"/dev/sdaf9", BRACK(FH_SDAF | 9), "\\Device\\Harddisk31\\Partition9", exists_ntdev, S_IFBLK, true},
  {"/dev/sdaf10", BRACK(FH_SDAF | 10), "\\Device\\Harddisk31\\Partition10", exists_ntdev, S_IFBLK, true},
  {"/dev/sdaf11", BRACK(FH_SDAF | 11), "\\Device\\Harddisk31\\Partition11", exists_ntdev, S_IFBLK, true},
  {"/dev/sdaf12", BRACK(FH_SDAF | 12), "\\Device\\Harddisk31\\Partition12", exists_ntdev, S_IFBLK, true},
  {"/dev/sdaf13", BRACK(FH_SDAF | 13), "\\Device\\Harddisk31\\Partition13", exists_ntdev, S_IFBLK, true},
  {"/dev/sdaf14", BRACK(FH_SDAF | 14), "\\Device\\Harddisk31\\Partition14", exists_ntdev, S_IFBLK, true},
  {"/dev/sdaf15", BRACK(FH_SDAF | 15), "\\Device\\Harddisk31\\Partition15", exists_ntdev, S_IFBLK, true},
  {"/dev/sdag1", BRACK(FH_SDAG | 1), "\\Device\\Harddisk32\\Partition1", exists_ntdev, S_IFBLK, true},
  {"/dev/sdag2", BRACK(FH_SDAG | 2), "\\Device\\Harddisk32\\Partition2", exists_ntdev, S_IFBLK, true},
  {"/dev/sdag3", BRACK(FH_SDAG | 3), "\\Device\\Harddisk32\\Partition3", exists_ntdev, S_IFBLK, true},
  {"/dev/sdag4", BRACK(FH_SDAG | 4), "\\Device\\Harddisk32\\Partition4", exists_ntdev, S_IFBLK, true},
  {"/dev/sdag5", BRACK(FH_SDAG | 5), "\\Device\\Harddisk32\\Partition5", exists_ntdev, S_IFBLK, true},
  {"/dev/sdag6", BRACK(FH_SDAG | 6), "\\Device\\Harddisk32\\Partition6", exists_ntdev, S_IFBLK, true},
  {"/dev/sdag7", BRACK(FH_SDAG | 7), "\\Device\\Harddisk32\\Partition7", exists_ntdev, S_IFBLK, true},
  {"/dev/sdag8", BRACK(FH_SDAG | 8), "\\Device\\Harddisk32\\Partition8", exists_ntdev, S_IFBLK, true},
  {"/dev/sdag9", BRACK(FH_SDAG | 9), "\\Device\\Harddisk32\\Partition9", exists_ntdev, S_IFBLK, true},
  {"/dev/sdag10", BRACK(FH_SDAG | 10), "\\Device\\Harddisk32\\Partition10", exists_ntdev, S_IFBLK, true},
  {"/dev/sdag11", BRACK(FH_SDAG | 11), "\\Device\\Harddisk32\\Partition11", exists_ntdev, S_IFBLK, true},
  {"/dev/sdag12", BRACK(FH_SDAG | 12), "\\Device\\Harddisk32\\Partition12", exists_ntdev, S_IFBLK, true},
  {"/dev/sdag13", BRACK(FH_SDAG | 13), "\\Device\\Harddisk32\\Partition13", exists_ntdev, S_IFBLK, true},
  {"/dev/sdag14", BRACK(FH_SDAG | 14), "\\Device\\Harddisk32\\Partition14", exists_ntdev, S_IFBLK, true},
  {"/dev/sdag15", BRACK(FH_SDAG | 15), "\\Device\\Harddisk32\\Partition15", exists_ntdev, S_IFBLK, true},
  {"/dev/sdah1", BRACK(FH_SDAH | 1), "\\Device\\Harddisk33\\Partition1", exists_ntdev, S_IFBLK, true},
  {"/dev/sdah2", BRACK(FH_SDAH | 2), "\\Device\\Harddisk33\\Partition2", exists_ntdev, S_IFBLK, true},
  {"/dev/sdah3", BRACK(FH_SDAH | 3), "\\Device\\Harddisk33\\Partition3", exists_ntdev, S_IFBLK, true},
  {"/dev/sdah4", BRACK(FH_SDAH | 4), "\\Device\\Harddisk33\\Partition4", exists_ntdev, S_IFBLK, true},
  {"/dev/sdah5", BRACK(FH_SDAH | 5), "\\Device\\Harddisk33\\Partition5", exists_ntdev, S_IFBLK, true},
  {"/dev/sdah6", BRACK(FH_SDAH | 6), "\\Device\\Harddisk33\\Partition6", exists_ntdev, S_IFBLK, true},
  {"/dev/sdah7", BRACK(FH_SDAH | 7), "\\Device\\Harddisk33\\Partition7", exists_ntdev, S_IFBLK, true},
  {"/dev/sdah8", BRACK(FH_SDAH | 8), "\\Device\\Harddisk33\\Partition8", exists_ntdev, S_IFBLK, true},
  {"/dev/sdah9", BRACK(FH_SDAH | 9), "\\Device\\Harddisk33\\Partition9", exists_ntdev, S_IFBLK, true},
  {"/dev/sdah10", BRACK(FH_SDAH | 10), "\\Device\\Harddisk33\\Partition10", exists_ntdev, S_IFBLK, true},
  {"/dev/sdah11", BRACK(FH_SDAH | 11), "\\Device\\Harddisk33\\Partition11", exists_ntdev, S_IFBLK, true},
  {"/dev/sdah12", BRACK(FH_SDAH | 12), "\\Device\\Harddisk33\\Partition12", exists_ntdev, S_IFBLK, true},
  {"/dev/sdah13", BRACK(FH_SDAH | 13), "\\Device\\Harddisk33\\Partition13", exists_ntdev, S_IFBLK, true},
  {"/dev/sdah14", BRACK(FH_SDAH | 14), "\\Device\\Harddisk33\\Partition14", exists_ntdev, S_IFBLK, true},
  {"/dev/sdah15", BRACK(FH_SDAH | 15), "\\Device\\Harddisk33\\Partition15", exists_ntdev, S_IFBLK, true},
  {"/dev/sdai1", BRACK(FH_SDAI | 1), "\\Device\\Harddisk34\\Partition1", exists_ntdev, S_IFBLK, true},
  {"/dev/sdai2", BRACK(FH_SDAI | 2), "\\Device\\Harddisk34\\Partition2", exists_ntdev, S_IFBLK, true},
  {"/dev/sdai3", BRACK(FH_SDAI | 3), "\\Device\\Harddisk34\\Partition3", exists_ntdev, S_IFBLK, true},
  {"/dev/sdai4", BRACK(FH_SDAI | 4), "\\Device\\Harddisk34\\Partition4", exists_ntdev, S_IFBLK, true},
  {"/dev/sdai5", BRACK(FH_SDAI | 5), "\\Device\\Harddisk34\\Partition5", exists_ntdev, S_IFBLK, true},
  {"/dev/sdai6", BRACK(FH_SDAI | 6), "\\Device\\Harddisk34\\Partition6", exists_ntdev, S_IFBLK, true},
  {"/dev/sdai7", BRACK(FH_SDAI | 7), "\\Device\\Harddisk34\\Partition7", exists_ntdev, S_IFBLK, true},
  {"/dev/sdai8", BRACK(FH_SDAI | 8), "\\Device\\Harddisk34\\Partition8", exists_ntdev, S_IFBLK, true},
  {"/dev/sdai9", BRACK(FH_SDAI | 9), "\\Device\\Harddisk34\\Partition9", exists_ntdev, S_IFBLK, true},
  {"/dev/sdai10", BRACK(FH_SDAI | 10), "\\Device\\Harddisk34\\Partition10", exists_ntdev, S_IFBLK, true},
  {"/dev/sdai11", BRACK(FH_SDAI | 11), "\\Device\\Harddisk34\\Partition11", exists_ntdev, S_IFBLK, true},
  {"/dev/sdai12", BRACK(FH_SDAI | 12), "\\Device\\Harddisk34\\Partition12", exists_ntdev, S_IFBLK, true},
  {"/dev/sdai13", BRACK(FH_SDAI | 13), "\\Device\\Harddisk34\\Partition13", exists_ntdev, S_IFBLK, true},
  {"/dev/sdai14", BRACK(FH_SDAI | 14), "\\Device\\Harddisk34\\Partition14", exists_ntdev, S_IFBLK, true},
  {"/dev/sdai15", BRACK(FH_SDAI | 15), "\\Device\\Harddisk34\\Partition15", exists_ntdev, S_IFBLK, true},
  {"/dev/sdaj1", BRACK(FH_SDAJ | 1), "\\Device\\Harddisk35\\Partition1", exists_ntdev, S_IFBLK, true},
  {"/dev/sdaj2", BRACK(FH_SDAJ | 2), "\\Device\\Harddisk35\\Partition2", exists_ntdev, S_IFBLK, true},
  {"/dev/sdaj3", BRACK(FH_SDAJ | 3), "\\Device\\Harddisk35\\Partition3", exists_ntdev, S_IFBLK, true},
  {"/dev/sdaj4", BRACK(FH_SDAJ | 4), "\\Device\\Harddisk35\\Partition4", exists_ntdev, S_IFBLK, true},
  {"/dev/sdaj5", BRACK(FH_SDAJ | 5), "\\Device\\Harddisk35\\Partition5", exists_ntdev, S_IFBLK, true},
  {"/dev/sdaj6", BRACK(FH_SDAJ | 6), "\\Device\\Harddisk35\\Partition6", exists_ntdev, S_IFBLK, true},
  {"/dev/sdaj7", BRACK(FH_SDAJ | 7), "\\Device\\Harddisk35\\Partition7", exists_ntdev, S_IFBLK, true},
  {"/dev/sdaj8", BRACK(FH_SDAJ | 8), "\\Device\\Harddisk35\\Partition8", exists_ntdev, S_IFBLK, true},
  {"/dev/sdaj9", BRACK(FH_SDAJ | 9), "\\Device\\Harddisk35\\Partition9", exists_ntdev, S_IFBLK, true},
  {"/dev/sdaj10", BRACK(FH_SDAJ | 10), "\\Device\\Harddisk35\\Partition10", exists_ntdev, S_IFBLK, true},
  {"/dev/sdaj11", BRACK(FH_SDAJ | 11), "\\Device\\Harddisk35\\Partition11", exists_ntdev, S_IFBLK, true},
  {"/dev/sdaj12", BRACK(FH_SDAJ | 12), "\\Device\\Harddisk35\\Partition12", exists_ntdev, S_IFBLK, true},
  {"/dev/sdaj13", BRACK(FH_SDAJ | 13), "\\Device\\Harddisk35\\Partition13", exists_ntdev, S_IFBLK, true},
  {"/dev/sdaj14", BRACK(FH_SDAJ | 14), "\\Device\\Harddisk35\\Partition14", exists_ntdev, S_IFBLK, true},
  {"/dev/sdaj15", BRACK(FH_SDAJ | 15), "\\Device\\Harddisk35\\Partition15", exists_ntdev, S_IFBLK, true},
  {"/dev/sdak1", BRACK(FH_SDAK | 1), "\\Device\\Harddisk36\\Partition1", exists_ntdev, S_IFBLK, true},
  {"/dev/sdak2", BRACK(FH_SDAK | 2), "\\Device\\Harddisk36\\Partition2", exists_ntdev, S_IFBLK, true},
  {"/dev/sdak3", BRACK(FH_SDAK | 3), "\\Device\\Harddisk36\\Partition3", exists_ntdev, S_IFBLK, true},
  {"/dev/sdak4", BRACK(FH_SDAK | 4), "\\Device\\Harddisk36\\Partition4", exists_ntdev, S_IFBLK, true},
  {"/dev/sdak5", BRACK(FH_SDAK | 5), "\\Device\\Harddisk36\\Partition5", exists_ntdev, S_IFBLK, true},
  {"/dev/sdak6", BRACK(FH_SDAK | 6), "\\Device\\Harddisk36\\Partition6", exists_ntdev, S_IFBLK, true},
  {"/dev/sdak7", BRACK(FH_SDAK | 7), "\\Device\\Harddisk36\\Partition7", exists_ntdev, S_IFBLK, true},
  {"/dev/sdak8", BRACK(FH_SDAK | 8), "\\Device\\Harddisk36\\Partition8", exists_ntdev, S_IFBLK, true},
  {"/dev/sdak9", BRACK(FH_SDAK | 9), "\\Device\\Harddisk36\\Partition9", exists_ntdev, S_IFBLK, true},
  {"/dev/sdak10", BRACK(FH_SDAK | 10), "\\Device\\Harddisk36\\Partition10", exists_ntdev, S_IFBLK, true},
  {"/dev/sdak11", BRACK(FH_SDAK | 11), "\\Device\\Harddisk36\\Partition11", exists_ntdev, S_IFBLK, true},
  {"/dev/sdak12", BRACK(FH_SDAK | 12), "\\Device\\Harddisk36\\Partition12", exists_ntdev, S_IFBLK, true},
  {"/dev/sdak13", BRACK(FH_SDAK | 13), "\\Device\\Harddisk36\\Partition13", exists_ntdev, S_IFBLK, true},
  {"/dev/sdak14", BRACK(FH_SDAK | 14), "\\Device\\Harddisk36\\Partition14", exists_ntdev, S_IFBLK, true},
  {"/dev/sdak15", BRACK(FH_SDAK | 15), "\\Device\\Harddisk36\\Partition15", exists_ntdev, S_IFBLK, true},
  {"/dev/sdal1", BRACK(FH_SDAL | 1), "\\Device\\Harddisk37\\Partition1", exists_ntdev, S_IFBLK, true},
  {"/dev/sdal2", BRACK(FH_SDAL | 2), "\\Device\\Harddisk37\\Partition2", exists_ntdev, S_IFBLK, true},
  {"/dev/sdal3", BRACK(FH_SDAL | 3), "\\Device\\Harddisk37\\Partition3", exists_ntdev, S_IFBLK, true},
  {"/dev/sdal4", BRACK(FH_SDAL | 4), "\\Device\\Harddisk37\\Partition4", exists_ntdev, S_IFBLK, true},
  {"/dev/sdal5", BRACK(FH_SDAL | 5), "\\Device\\Harddisk37\\Partition5", exists_ntdev, S_IFBLK, true},
  {"/dev/sdal6", BRACK(FH_SDAL | 6), "\\Device\\Harddisk37\\Partition6", exists_ntdev, S_IFBLK, true},
  {"/dev/sdal7", BRACK(FH_SDAL | 7), "\\Device\\Harddisk37\\Partition7", exists_ntdev, S_IFBLK, true},
  {"/dev/sdal8", BRACK(FH_SDAL | 8), "\\Device\\Harddisk37\\Partition8", exists_ntdev, S_IFBLK, true},
  {"/dev/sdal9", BRACK(FH_SDAL | 9), "\\Device\\Harddisk37\\Partition9", exists_ntdev, S_IFBLK, true},
  {"/dev/sdal10", BRACK(FH_SDAL | 10), "\\Device\\Harddisk37\\Partition10", exists_ntdev, S_IFBLK, true},
  {"/dev/sdal11", BRACK(FH_SDAL | 11), "\\Device\\Harddisk37\\Partition11", exists_ntdev, S_IFBLK, true},
  {"/dev/sdal12", BRACK(FH_SDAL | 12), "\\Device\\Harddisk37\\Partition12", exists_ntdev, S_IFBLK, true},
  {"/dev/sdal13", BRACK(FH_SDAL | 13), "\\Device\\Harddisk37\\Partition13", exists_ntdev, S_IFBLK, true},
  {"/dev/sdal14", BRACK(FH_SDAL | 14), "\\Device\\Harddisk37\\Partition14", exists_ntdev, S_IFBLK, true},
  {"/dev/sdal15", BRACK(FH_SDAL | 15), "\\Device\\Harddisk37\\Partition15", exists_ntdev, S_IFBLK, true},
  {"/dev/sdam1", BRACK(FH_SDAM | 1), "\\Device\\Harddisk38\\Partition1", exists_ntdev, S_IFBLK, true},
  {"/dev/sdam2", BRACK(FH_SDAM | 2), "\\Device\\Harddisk38\\Partition2", exists_ntdev, S_IFBLK, true},
  {"/dev/sdam3", BRACK(FH_SDAM | 3), "\\Device\\Harddisk38\\Partition3", exists_ntdev, S_IFBLK, true},
  {"/dev/sdam4", BRACK(FH_SDAM | 4), "\\Device\\Harddisk38\\Partition4", exists_ntdev, S_IFBLK, true},
  {"/dev/sdam5", BRACK(FH_SDAM | 5), "\\Device\\Harddisk38\\Partition5", exists_ntdev, S_IFBLK, true},
  {"/dev/sdam6", BRACK(FH_SDAM | 6), "\\Device\\Harddisk38\\Partition6", exists_ntdev, S_IFBLK, true},
  {"/dev/sdam7", BRACK(FH_SDAM | 7), "\\Device\\Harddisk38\\Partition7", exists_ntdev, S_IFBLK, true},
  {"/dev/sdam8", BRACK(FH_SDAM | 8), "\\Device\\Harddisk38\\Partition8", exists_ntdev, S_IFBLK, true},
  {"/dev/sdam9", BRACK(FH_SDAM | 9), "\\Device\\Harddisk38\\Partition9", exists_ntdev, S_IFBLK, true},
  {"/dev/sdam10", BRACK(FH_SDAM | 10), "\\Device\\Harddisk38\\Partition10", exists_ntdev, S_IFBLK, true},
  {"/dev/sdam11", BRACK(FH_SDAM | 11), "\\Device\\Harddisk38\\Partition11", exists_ntdev, S_IFBLK, true},
  {"/dev/sdam12", BRACK(FH_SDAM | 12), "\\Device\\Harddisk38\\Partition12", exists_ntdev, S_IFBLK, true},
  {"/dev/sdam13", BRACK(FH_SDAM | 13), "\\Device\\Harddisk38\\Partition13", exists_ntdev, S_IFBLK, true},
  {"/dev/sdam14", BRACK(FH_SDAM | 14), "\\Device\\Harddisk38\\Partition14", exists_ntdev, S_IFBLK, true},
  {"/dev/sdam15", BRACK(FH_SDAM | 15), "\\Device\\Harddisk38\\Partition15", exists_ntdev, S_IFBLK, true},
  {"/dev/sdan1", BRACK(FH_SDAN | 1), "\\Device\\Harddisk39\\Partition1", exists_ntdev, S_IFBLK, true},
  {"/dev/sdan2", BRACK(FH_SDAN | 2), "\\Device\\Harddisk39\\Partition2", exists_ntdev, S_IFBLK, true},
  {"/dev/sdan3", BRACK(FH_SDAN | 3), "\\Device\\Harddisk39\\Partition3", exists_ntdev, S_IFBLK, true},
  {"/dev/sdan4", BRACK(FH_SDAN | 4), "\\Device\\Harddisk39\\Partition4", exists_ntdev, S_IFBLK, true},
  {"/dev/sdan5", BRACK(FH_SDAN | 5), "\\Device\\Harddisk39\\Partition5", exists_ntdev, S_IFBLK, true},
  {"/dev/sdan6", BRACK(FH_SDAN | 6), "\\Device\\Harddisk39\\Partition6", exists_ntdev, S_IFBLK, true},
  {"/dev/sdan7", BRACK(FH_SDAN | 7), "\\Device\\Harddisk39\\Partition7", exists_ntdev, S_IFBLK, true},
  {"/dev/sdan8", BRACK(FH_SDAN | 8), "\\Device\\Harddisk39\\Partition8", exists_ntdev, S_IFBLK, true},
  {"/dev/sdan9", BRACK(FH_SDAN | 9), "\\Device\\Harddisk39\\Partition9", exists_ntdev, S_IFBLK, true},
  {"/dev/sdan10", BRACK(FH_SDAN | 10), "\\Device\\Harddisk39\\Partition10", exists_ntdev, S_IFBLK, true},
  {"/dev/sdan11", BRACK(FH_SDAN | 11), "\\Device\\Harddisk39\\Partition11", exists_ntdev, S_IFBLK, true},
  {"/dev/sdan12", BRACK(FH_SDAN | 12), "\\Device\\Harddisk39\\Partition12", exists_ntdev, S_IFBLK, true},
  {"/dev/sdan13", BRACK(FH_SDAN | 13), "\\Device\\Harddisk39\\Partition13", exists_ntdev, S_IFBLK, true},
  {"/dev/sdan14", BRACK(FH_SDAN | 14), "\\Device\\Harddisk39\\Partition14", exists_ntdev, S_IFBLK, true},
  {"/dev/sdan15", BRACK(FH_SDAN | 15), "\\Device\\Harddisk39\\Partition15", exists_ntdev, S_IFBLK, true},
  {"/dev/sdao1", BRACK(FH_SDAO | 1), "\\Device\\Harddisk40\\Partition1", exists_ntdev, S_IFBLK, true},
  {"/dev/sdao2", BRACK(FH_SDAO | 2), "\\Device\\Harddisk40\\Partition2", exists_ntdev, S_IFBLK, true},
  {"/dev/sdao3", BRACK(FH_SDAO | 3), "\\Device\\Harddisk40\\Partition3", exists_ntdev, S_IFBLK, true},
  {"/dev/sdao4", BRACK(FH_SDAO | 4), "\\Device\\Harddisk40\\Partition4", exists_ntdev, S_IFBLK, true},
  {"/dev/sdao5", BRACK(FH_SDAO | 5), "\\Device\\Harddisk40\\Partition5", exists_ntdev, S_IFBLK, true},
  {"/dev/sdao6", BRACK(FH_SDAO | 6), "\\Device\\Harddisk40\\Partition6", exists_ntdev, S_IFBLK, true},
  {"/dev/sdao7", BRACK(FH_SDAO | 7), "\\Device\\Harddisk40\\Partition7", exists_ntdev, S_IFBLK, true},
  {"/dev/sdao8", BRACK(FH_SDAO | 8), "\\Device\\Harddisk40\\Partition8", exists_ntdev, S_IFBLK, true},
  {"/dev/sdao9", BRACK(FH_SDAO | 9), "\\Device\\Harddisk40\\Partition9", exists_ntdev, S_IFBLK, true},
  {"/dev/sdao10", BRACK(FH_SDAO | 10), "\\Device\\Harddisk40\\Partition10", exists_ntdev, S_IFBLK, true},
  {"/dev/sdao11", BRACK(FH_SDAO | 11), "\\Device\\Harddisk40\\Partition11", exists_ntdev, S_IFBLK, true},
  {"/dev/sdao12", BRACK(FH_SDAO | 12), "\\Device\\Harddisk40\\Partition12", exists_ntdev, S_IFBLK, true},
  {"/dev/sdao13", BRACK(FH_SDAO | 13), "\\Device\\Harddisk40\\Partition13", exists_ntdev, S_IFBLK, true},
  {"/dev/sdao14", BRACK(FH_SDAO | 14), "\\Device\\Harddisk40\\Partition14", exists_ntdev, S_IFBLK, true},
  {"/dev/sdao15", BRACK(FH_SDAO | 15), "\\Device\\Harddisk40\\Partition15", exists_ntdev, S_IFBLK, true},
  {"/dev/sdap1", BRACK(FH_SDAP | 1), "\\Device\\Harddisk41\\Partition1", exists_ntdev, S_IFBLK, true},
  {"/dev/sdap2", BRACK(FH_SDAP | 2), "\\Device\\Harddisk41\\Partition2", exists_ntdev, S_IFBLK, true},
  {"/dev/sdap3", BRACK(FH_SDAP | 3), "\\Device\\Harddisk41\\Partition3", exists_ntdev, S_IFBLK, true},
  {"/dev/sdap4", BRACK(FH_SDAP | 4), "\\Device\\Harddisk41\\Partition4", exists_ntdev, S_IFBLK, true},
  {"/dev/sdap5", BRACK(FH_SDAP | 5), "\\Device\\Harddisk41\\Partition5", exists_ntdev, S_IFBLK, true},
  {"/dev/sdap6", BRACK(FH_SDAP | 6), "\\Device\\Harddisk41\\Partition6", exists_ntdev, S_IFBLK, true},
  {"/dev/sdap7", BRACK(FH_SDAP | 7), "\\Device\\Harddisk41\\Partition7", exists_ntdev, S_IFBLK, true},
  {"/dev/sdap8", BRACK(FH_SDAP | 8), "\\Device\\Harddisk41\\Partition8", exists_ntdev, S_IFBLK, true},
  {"/dev/sdap9", BRACK(FH_SDAP | 9), "\\Device\\Harddisk41\\Partition9", exists_ntdev, S_IFBLK, true},
  {"/dev/sdap10", BRACK(FH_SDAP | 10), "\\Device\\Harddisk41\\Partition10", exists_ntdev, S_IFBLK, true},
  {"/dev/sdap11", BRACK(FH_SDAP | 11), "\\Device\\Harddisk41\\Partition11", exists_ntdev, S_IFBLK, true},
  {"/dev/sdap12", BRACK(FH_SDAP | 12), "\\Device\\Harddisk41\\Partition12", exists_ntdev, S_IFBLK, true},
  {"/dev/sdap13", BRACK(FH_SDAP | 13), "\\Device\\Harddisk41\\Partition13", exists_ntdev, S_IFBLK, true},
  {"/dev/sdap14", BRACK(FH_SDAP | 14), "\\Device\\Harddisk41\\Partition14", exists_ntdev, S_IFBLK, true},
  {"/dev/sdap15", BRACK(FH_SDAP | 15), "\\Device\\Harddisk41\\Partition15", exists_ntdev, S_IFBLK, true},
  {"/dev/sdaq1", BRACK(FH_SDAQ | 1), "\\Device\\Harddisk42\\Partition1", exists_ntdev, S_IFBLK, true},
  {"/dev/sdaq2", BRACK(FH_SDAQ | 2), "\\Device\\Harddisk42\\Partition2", exists_ntdev, S_IFBLK, true},
  {"/dev/sdaq3", BRACK(FH_SDAQ | 3), "\\Device\\Harddisk42\\Partition3", exists_ntdev, S_IFBLK, true},
  {"/dev/sdaq4", BRACK(FH_SDAQ | 4), "\\Device\\Harddisk42\\Partition4", exists_ntdev, S_IFBLK, true},
  {"/dev/sdaq5", BRACK(FH_SDAQ | 5), "\\Device\\Harddisk42\\Partition5", exists_ntdev, S_IFBLK, true},
  {"/dev/sdaq6", BRACK(FH_SDAQ | 6), "\\Device\\Harddisk42\\Partition6", exists_ntdev, S_IFBLK, true},
  {"/dev/sdaq7", BRACK(FH_SDAQ | 7), "\\Device\\Harddisk42\\Partition7", exists_ntdev, S_IFBLK, true},
  {"/dev/sdaq8", BRACK(FH_SDAQ | 8), "\\Device\\Harddisk42\\Partition8", exists_ntdev, S_IFBLK, true},
  {"/dev/sdaq9", BRACK(FH_SDAQ | 9), "\\Device\\Harddisk42\\Partition9", exists_ntdev, S_IFBLK, true},
  {"/dev/sdaq10", BRACK(FH_SDAQ | 10), "\\Device\\Harddisk42\\Partition10", exists_ntdev, S_IFBLK, true},
  {"/dev/sdaq11", BRACK(FH_SDAQ | 11), "\\Device\\Harddisk42\\Partition11", exists_ntdev, S_IFBLK, true},
  {"/dev/sdaq12", BRACK(FH_SDAQ | 12), "\\Device\\Harddisk42\\Partition12", exists_ntdev, S_IFBLK, true},
  {"/dev/sdaq13", BRACK(FH_SDAQ | 13), "\\Device\\Harddisk42\\Partition13", exists_ntdev, S_IFBLK, true},
  {"/dev/sdaq14", BRACK(FH_SDAQ | 14), "\\Device\\Harddisk42\\Partition14", exists_ntdev, S_IFBLK, true},
  {"/dev/sdaq15", BRACK(FH_SDAQ | 15), "\\Device\\Harddisk42\\Partition15", exists_ntdev, S_IFBLK, true},
  {"/dev/sdar1", BRACK(FH_SDAR | 1), "\\Device\\Harddisk43\\Partition1", exists_ntdev, S_IFBLK, true},
  {"/dev/sdar2", BRACK(FH_SDAR | 2), "\\Device\\Harddisk43\\Partition2", exists_ntdev, S_IFBLK, true},
  {"/dev/sdar3", BRACK(FH_SDAR | 3), "\\Device\\Harddisk43\\Partition3", exists_ntdev, S_IFBLK, true},
  {"/dev/sdar4", BRACK(FH_SDAR | 4), "\\Device\\Harddisk43\\Partition4", exists_ntdev, S_IFBLK, true},
  {"/dev/sdar5", BRACK(FH_SDAR | 5), "\\Device\\Harddisk43\\Partition5", exists_ntdev, S_IFBLK, true},
  {"/dev/sdar6", BRACK(FH_SDAR | 6), "\\Device\\Harddisk43\\Partition6", exists_ntdev, S_IFBLK, true},
  {"/dev/sdar7", BRACK(FH_SDAR | 7), "\\Device\\Harddisk43\\Partition7", exists_ntdev, S_IFBLK, true},
  {"/dev/sdar8", BRACK(FH_SDAR | 8), "\\Device\\Harddisk43\\Partition8", exists_ntdev, S_IFBLK, true},
  {"/dev/sdar9", BRACK(FH_SDAR | 9), "\\Device\\Harddisk43\\Partition9", exists_ntdev, S_IFBLK, true},
  {"/dev/sdar10", BRACK(FH_SDAR | 10), "\\Device\\Harddisk43\\Partition10", exists_ntdev, S_IFBLK, true},
  {"/dev/sdar11", BRACK(FH_SDAR | 11), "\\Device\\Harddisk43\\Partition11", exists_ntdev, S_IFBLK, true},
  {"/dev/sdar12", BRACK(FH_SDAR | 12), "\\Device\\Harddisk43\\Partition12", exists_ntdev, S_IFBLK, true},
  {"/dev/sdar13", BRACK(FH_SDAR | 13), "\\Device\\Harddisk43\\Partition13", exists_ntdev, S_IFBLK, true},
  {"/dev/sdar14", BRACK(FH_SDAR | 14), "\\Device\\Harddisk43\\Partition14", exists_ntdev, S_IFBLK, true},
  {"/dev/sdar15", BRACK(FH_SDAR | 15), "\\Device\\Harddisk43\\Partition15", exists_ntdev, S_IFBLK, true},
  {"/dev/sdas1", BRACK(FH_SDAS | 1), "\\Device\\Harddisk44\\Partition1", exists_ntdev, S_IFBLK, true},
  {"/dev/sdas2", BRACK(FH_SDAS | 2), "\\Device\\Harddisk44\\Partition2", exists_ntdev, S_IFBLK, true},
  {"/dev/sdas3", BRACK(FH_SDAS | 3), "\\Device\\Harddisk44\\Partition3", exists_ntdev, S_IFBLK, true},
  {"/dev/sdas4", BRACK(FH_SDAS | 4), "\\Device\\Harddisk44\\Partition4", exists_ntdev, S_IFBLK, true},
  {"/dev/sdas5", BRACK(FH_SDAS | 5), "\\Device\\Harddisk44\\Partition5", exists_ntdev, S_IFBLK, true},
  {"/dev/sdas6", BRACK(FH_SDAS | 6), "\\Device\\Harddisk44\\Partition6", exists_ntdev, S_IFBLK, true},
  {"/dev/sdas7", BRACK(FH_SDAS | 7), "\\Device\\Harddisk44\\Partition7", exists_ntdev, S_IFBLK, true},
  {"/dev/sdas8", BRACK(FH_SDAS | 8), "\\Device\\Harddisk44\\Partition8", exists_ntdev, S_IFBLK, true},
  {"/dev/sdas9", BRACK(FH_SDAS | 9), "\\Device\\Harddisk44\\Partition9", exists_ntdev, S_IFBLK, true},
  {"/dev/sdas10", BRACK(FH_SDAS | 10), "\\Device\\Harddisk44\\Partition10", exists_ntdev, S_IFBLK, true},
  {"/dev/sdas11", BRACK(FH_SDAS | 11), "\\Device\\Harddisk44\\Partition11", exists_ntdev, S_IFBLK, true},
  {"/dev/sdas12", BRACK(FH_SDAS | 12), "\\Device\\Harddisk44\\Partition12", exists_ntdev, S_IFBLK, true},
  {"/dev/sdas13", BRACK(FH_SDAS | 13), "\\Device\\Harddisk44\\Partition13", exists_ntdev, S_IFBLK, true},
  {"/dev/sdas14", BRACK(FH_SDAS | 14), "\\Device\\Harddisk44\\Partition14", exists_ntdev, S_IFBLK, true},
  {"/dev/sdas15", BRACK(FH_SDAS | 15), "\\Device\\Harddisk44\\Partition15", exists_ntdev, S_IFBLK, true},
  {"/dev/sdat1", BRACK(FH_SDAT | 1), "\\Device\\Harddisk45\\Partition1", exists_ntdev, S_IFBLK, true},
  {"/dev/sdat2", BRACK(FH_SDAT | 2), "\\Device\\Harddisk45\\Partition2", exists_ntdev, S_IFBLK, true},
  {"/dev/sdat3", BRACK(FH_SDAT | 3), "\\Device\\Harddisk45\\Partition3", exists_ntdev, S_IFBLK, true},
  {"/dev/sdat4", BRACK(FH_SDAT | 4), "\\Device\\Harddisk45\\Partition4", exists_ntdev, S_IFBLK, true},
  {"/dev/sdat5", BRACK(FH_SDAT | 5), "\\Device\\Harddisk45\\Partition5", exists_ntdev, S_IFBLK, true},
  {"/dev/sdat6", BRACK(FH_SDAT | 6), "\\Device\\Harddisk45\\Partition6", exists_ntdev, S_IFBLK, true},
  {"/dev/sdat7", BRACK(FH_SDAT | 7), "\\Device\\Harddisk45\\Partition7", exists_ntdev, S_IFBLK, true},
  {"/dev/sdat8", BRACK(FH_SDAT | 8), "\\Device\\Harddisk45\\Partition8", exists_ntdev, S_IFBLK, true},
  {"/dev/sdat9", BRACK(FH_SDAT | 9), "\\Device\\Harddisk45\\Partition9", exists_ntdev, S_IFBLK, true},
  {"/dev/sdat10", BRACK(FH_SDAT | 10), "\\Device\\Harddisk45\\Partition10", exists_ntdev, S_IFBLK, true},
  {"/dev/sdat11", BRACK(FH_SDAT | 11), "\\Device\\Harddisk45\\Partition11", exists_ntdev, S_IFBLK, true},
  {"/dev/sdat12", BRACK(FH_SDAT | 12), "\\Device\\Harddisk45\\Partition12", exists_ntdev, S_IFBLK, true},
  {"/dev/sdat13", BRACK(FH_SDAT | 13), "\\Device\\Harddisk45\\Partition13", exists_ntdev, S_IFBLK, true},
  {"/dev/sdat14", BRACK(FH_SDAT | 14), "\\Device\\Harddisk45\\Partition14", exists_ntdev, S_IFBLK, true},
  {"/dev/sdat15", BRACK(FH_SDAT | 15), "\\Device\\Harddisk45\\Partition15", exists_ntdev, S_IFBLK, true},
  {"/dev/sdau1", BRACK(FH_SDAU | 1), "\\Device\\Harddisk46\\Partition1", exists_ntdev, S_IFBLK, true},
  {"/dev/sdau2", BRACK(FH_SDAU | 2), "\\Device\\Harddisk46\\Partition2", exists_ntdev, S_IFBLK, true},
  {"/dev/sdau3", BRACK(FH_SDAU | 3), "\\Device\\Harddisk46\\Partition3", exists_ntdev, S_IFBLK, true},
  {"/dev/sdau4", BRACK(FH_SDAU | 4), "\\Device\\Harddisk46\\Partition4", exists_ntdev, S_IFBLK, true},
  {"/dev/sdau5", BRACK(FH_SDAU | 5), "\\Device\\Harddisk46\\Partition5", exists_ntdev, S_IFBLK, true},
  {"/dev/sdau6", BRACK(FH_SDAU | 6), "\\Device\\Harddisk46\\Partition6", exists_ntdev, S_IFBLK, true},
  {"/dev/sdau7", BRACK(FH_SDAU | 7), "\\Device\\Harddisk46\\Partition7", exists_ntdev, S_IFBLK, true},
  {"/dev/sdau8", BRACK(FH_SDAU | 8), "\\Device\\Harddisk46\\Partition8", exists_ntdev, S_IFBLK, true},
  {"/dev/sdau9", BRACK(FH_SDAU | 9), "\\Device\\Harddisk46\\Partition9", exists_ntdev, S_IFBLK, true},
  {"/dev/sdau10", BRACK(FH_SDAU | 10), "\\Device\\Harddisk46\\Partition10", exists_ntdev, S_IFBLK, true},
  {"/dev/sdau11", BRACK(FH_SDAU | 11), "\\Device\\Harddisk46\\Partition11", exists_ntdev, S_IFBLK, true},
  {"/dev/sdau12", BRACK(FH_SDAU | 12), "\\Device\\Harddisk46\\Partition12", exists_ntdev, S_IFBLK, true},
  {"/dev/sdau13", BRACK(FH_SDAU | 13), "\\Device\\Harddisk46\\Partition13", exists_ntdev, S_IFBLK, true},
  {"/dev/sdau14", BRACK(FH_SDAU | 14), "\\Device\\Harddisk46\\Partition14", exists_ntdev, S_IFBLK, true},
  {"/dev/sdau15", BRACK(FH_SDAU | 15), "\\Device\\Harddisk46\\Partition15", exists_ntdev, S_IFBLK, true},
  {"/dev/sdav1", BRACK(FH_SDAV | 1), "\\Device\\Harddisk47\\Partition1", exists_ntdev, S_IFBLK, true},
  {"/dev/sdav2", BRACK(FH_SDAV | 2), "\\Device\\Harddisk47\\Partition2", exists_ntdev, S_IFBLK, true},
  {"/dev/sdav3", BRACK(FH_SDAV | 3), "\\Device\\Harddisk47\\Partition3", exists_ntdev, S_IFBLK, true},
  {"/dev/sdav4", BRACK(FH_SDAV | 4), "\\Device\\Harddisk47\\Partition4", exists_ntdev, S_IFBLK, true},
  {"/dev/sdav5", BRACK(FH_SDAV | 5), "\\Device\\Harddisk47\\Partition5", exists_ntdev, S_IFBLK, true},
  {"/dev/sdav6", BRACK(FH_SDAV | 6), "\\Device\\Harddisk47\\Partition6", exists_ntdev, S_IFBLK, true},
  {"/dev/sdav7", BRACK(FH_SDAV | 7), "\\Device\\Harddisk47\\Partition7", exists_ntdev, S_IFBLK, true},
  {"/dev/sdav8", BRACK(FH_SDAV | 8), "\\Device\\Harddisk47\\Partition8", exists_ntdev, S_IFBLK, true},
  {"/dev/sdav9", BRACK(FH_SDAV | 9), "\\Device\\Harddisk47\\Partition9", exists_ntdev, S_IFBLK, true},
  {"/dev/sdav10", BRACK(FH_SDAV | 10), "\\Device\\Harddisk47\\Partition10", exists_ntdev, S_IFBLK, true},
  {"/dev/sdav11", BRACK(FH_SDAV | 11), "\\Device\\Harddisk47\\Partition11", exists_ntdev, S_IFBLK, true},
  {"/dev/sdav12", BRACK(FH_SDAV | 12), "\\Device\\Harddisk47\\Partition12", exists_ntdev, S_IFBLK, true},
  {"/dev/sdav13", BRACK(FH_SDAV | 13), "\\Device\\Harddisk47\\Partition13", exists_ntdev, S_IFBLK, true},
  {"/dev/sdav14", BRACK(FH_SDAV | 14), "\\Device\\Harddisk47\\Partition14", exists_ntdev, S_IFBLK, true},
  {"/dev/sdav15", BRACK(FH_SDAV | 15), "\\Device\\Harddisk47\\Partition15", exists_ntdev, S_IFBLK, true},
  {"/dev/sdaw1", BRACK(FH_SDAW | 1), "\\Device\\Harddisk48\\Partition1", exists_ntdev, S_IFBLK, true},
  {"/dev/sdaw2", BRACK(FH_SDAW | 2), "\\Device\\Harddisk48\\Partition2", exists_ntdev, S_IFBLK, true},
  {"/dev/sdaw3", BRACK(FH_SDAW | 3), "\\Device\\Harddisk48\\Partition3", exists_ntdev, S_IFBLK, true},
  {"/dev/sdaw4", BRACK(FH_SDAW | 4), "\\Device\\Harddisk48\\Partition4", exists_ntdev, S_IFBLK, true},
  {"/dev/sdaw5", BRACK(FH_SDAW | 5), "\\Device\\Harddisk48\\Partition5", exists_ntdev, S_IFBLK, true},
  {"/dev/sdaw6", BRACK(FH_SDAW | 6), "\\Device\\Harddisk48\\Partition6", exists_ntdev, S_IFBLK, true},
  {"/dev/sdaw7", BRACK(FH_SDAW | 7), "\\Device\\Harddisk48\\Partition7", exists_ntdev, S_IFBLK, true},
  {"/dev/sdaw8", BRACK(FH_SDAW | 8), "\\Device\\Harddisk48\\Partition8", exists_ntdev, S_IFBLK, true},
  {"/dev/sdaw9", BRACK(FH_SDAW | 9), "\\Device\\Harddisk48\\Partition9", exists_ntdev, S_IFBLK, true},
  {"/dev/sdaw10", BRACK(FH_SDAW | 10), "\\Device\\Harddisk48\\Partition10", exists_ntdev, S_IFBLK, true},
  {"/dev/sdaw11", BRACK(FH_SDAW | 11), "\\Device\\Harddisk48\\Partition11", exists_ntdev, S_IFBLK, true},
  {"/dev/sdaw12", BRACK(FH_SDAW | 12), "\\Device\\Harddisk48\\Partition12", exists_ntdev, S_IFBLK, true},
  {"/dev/sdaw13", BRACK(FH_SDAW | 13), "\\Device\\Harddisk48\\Partition13", exists_ntdev, S_IFBLK, true},
  {"/dev/sdaw14", BRACK(FH_SDAW | 14), "\\Device\\Harddisk48\\Partition14", exists_ntdev, S_IFBLK, true},
  {"/dev/sdaw15", BRACK(FH_SDAW | 15), "\\Device\\Harddisk48\\Partition15", exists_ntdev, S_IFBLK, true},
  {"/dev/sdax1", BRACK(FH_SDAX | 1), "\\Device\\Harddisk49\\Partition1", exists_ntdev, S_IFBLK, true},
  {"/dev/sdax2", BRACK(FH_SDAX | 2), "\\Device\\Harddisk49\\Partition2", exists_ntdev, S_IFBLK, true},
  {"/dev/sdax3", BRACK(FH_SDAX | 3), "\\Device\\Harddisk49\\Partition3", exists_ntdev, S_IFBLK, true},
  {"/dev/sdax4", BRACK(FH_SDAX | 4), "\\Device\\Harddisk49\\Partition4", exists_ntdev, S_IFBLK, true},
  {"/dev/sdax5", BRACK(FH_SDAX | 5), "\\Device\\Harddisk49\\Partition5", exists_ntdev, S_IFBLK, true},
  {"/dev/sdax6", BRACK(FH_SDAX | 6), "\\Device\\Harddisk49\\Partition6", exists_ntdev, S_IFBLK, true},
  {"/dev/sdax7", BRACK(FH_SDAX | 7), "\\Device\\Harddisk49\\Partition7", exists_ntdev, S_IFBLK, true},
  {"/dev/sdax8", BRACK(FH_SDAX | 8), "\\Device\\Harddisk49\\Partition8", exists_ntdev, S_IFBLK, true},
  {"/dev/sdax9", BRACK(FH_SDAX | 9), "\\Device\\Harddisk49\\Partition9", exists_ntdev, S_IFBLK, true},
  {"/dev/sdax10", BRACK(FH_SDAX | 10), "\\Device\\Harddisk49\\Partition10", exists_ntdev, S_IFBLK, true},
  {"/dev/sdax11", BRACK(FH_SDAX | 11), "\\Device\\Harddisk49\\Partition11", exists_ntdev, S_IFBLK, true},
  {"/dev/sdax12", BRACK(FH_SDAX | 12), "\\Device\\Harddisk49\\Partition12", exists_ntdev, S_IFBLK, true},
  {"/dev/sdax13", BRACK(FH_SDAX | 13), "\\Device\\Harddisk49\\Partition13", exists_ntdev, S_IFBLK, true},
  {"/dev/sdax14", BRACK(FH_SDAX | 14), "\\Device\\Harddisk49\\Partition14", exists_ntdev, S_IFBLK, true},
  {"/dev/sdax15", BRACK(FH_SDAX | 15), "\\Device\\Harddisk49\\Partition15", exists_ntdev, S_IFBLK, true},
  {"/dev/sday1", BRACK(FH_SDAY | 1), "\\Device\\Harddisk50\\Partition1", exists_ntdev, S_IFBLK, true},
  {"/dev/sday2", BRACK(FH_SDAY | 2), "\\Device\\Harddisk50\\Partition2", exists_ntdev, S_IFBLK, true},
  {"/dev/sday3", BRACK(FH_SDAY | 3), "\\Device\\Harddisk50\\Partition3", exists_ntdev, S_IFBLK, true},
  {"/dev/sday4", BRACK(FH_SDAY | 4), "\\Device\\Harddisk50\\Partition4", exists_ntdev, S_IFBLK, true},
  {"/dev/sday5", BRACK(FH_SDAY | 5), "\\Device\\Harddisk50\\Partition5", exists_ntdev, S_IFBLK, true},
  {"/dev/sday6", BRACK(FH_SDAY | 6), "\\Device\\Harddisk50\\Partition6", exists_ntdev, S_IFBLK, true},
  {"/dev/sday7", BRACK(FH_SDAY | 7), "\\Device\\Harddisk50\\Partition7", exists_ntdev, S_IFBLK, true},
  {"/dev/sday8", BRACK(FH_SDAY | 8), "\\Device\\Harddisk50\\Partition8", exists_ntdev, S_IFBLK, true},
  {"/dev/sday9", BRACK(FH_SDAY | 9), "\\Device\\Harddisk50\\Partition9", exists_ntdev, S_IFBLK, true},
  {"/dev/sday10", BRACK(FH_SDAY | 10), "\\Device\\Harddisk50\\Partition10", exists_ntdev, S_IFBLK, true},
  {"/dev/sday11", BRACK(FH_SDAY | 11), "\\Device\\Harddisk50\\Partition11", exists_ntdev, S_IFBLK, true},
  {"/dev/sday12", BRACK(FH_SDAY | 12), "\\Device\\Harddisk50\\Partition12", exists_ntdev, S_IFBLK, true},
  {"/dev/sday13", BRACK(FH_SDAY | 13), "\\Device\\Harddisk50\\Partition13", exists_ntdev, S_IFBLK, true},
  {"/dev/sday14", BRACK(FH_SDAY | 14), "\\Device\\Harddisk50\\Partition14", exists_ntdev, S_IFBLK, true},
  {"/dev/sday15", BRACK(FH_SDAY | 15), "\\Device\\Harddisk50\\Partition15", exists_ntdev, S_IFBLK, true},
  {"/dev/sdaz1", BRACK(FH_SDAZ | 1), "\\Device\\Harddisk51\\Partition1", exists_ntdev, S_IFBLK, true},
  {"/dev/sdaz2", BRACK(FH_SDAZ | 2), "\\Device\\Harddisk51\\Partition2", exists_ntdev, S_IFBLK, true},
  {"/dev/sdaz3", BRACK(FH_SDAZ | 3), "\\Device\\Harddisk51\\Partition3", exists_ntdev, S_IFBLK, true},
  {"/dev/sdaz4", BRACK(FH_SDAZ | 4), "\\Device\\Harddisk51\\Partition4", exists_ntdev, S_IFBLK, true},
  {"/dev/sdaz5", BRACK(FH_SDAZ | 5), "\\Device\\Harddisk51\\Partition5", exists_ntdev, S_IFBLK, true},
  {"/dev/sdaz6", BRACK(FH_SDAZ | 6), "\\Device\\Harddisk51\\Partition6", exists_ntdev, S_IFBLK, true},
  {"/dev/sdaz7", BRACK(FH_SDAZ | 7), "\\Device\\Harddisk51\\Partition7", exists_ntdev, S_IFBLK, true},
  {"/dev/sdaz8", BRACK(FH_SDAZ | 8), "\\Device\\Harddisk51\\Partition8", exists_ntdev, S_IFBLK, true},
  {"/dev/sdaz9", BRACK(FH_SDAZ | 9), "\\Device\\Harddisk51\\Partition9", exists_ntdev, S_IFBLK, true},
  {"/dev/sdaz10", BRACK(FH_SDAZ | 10), "\\Device\\Harddisk51\\Partition10", exists_ntdev, S_IFBLK, true},
  {"/dev/sdaz11", BRACK(FH_SDAZ | 11), "\\Device\\Harddisk51\\Partition11", exists_ntdev, S_IFBLK, true},
  {"/dev/sdaz12", BRACK(FH_SDAZ | 12), "\\Device\\Harddisk51\\Partition12", exists_ntdev, S_IFBLK, true},
  {"/dev/sdaz13", BRACK(FH_SDAZ | 13), "\\Device\\Harddisk51\\Partition13", exists_ntdev, S_IFBLK, true},
  {"/dev/sdaz14", BRACK(FH_SDAZ | 14), "\\Device\\Harddisk51\\Partition14", exists_ntdev, S_IFBLK, true},
  {"/dev/sdaz15", BRACK(FH_SDAZ | 15), "\\Device\\Harddisk51\\Partition15", exists_ntdev, S_IFBLK, true},
  {"/dev/sdba", BRACK(FH_SDBA), "\\Device\\Harddisk52\\Partition0", exists_ntdev, S_IFBLK, true},
  {"/dev/sdbb", BRACK(FH_SDBB), "\\Device\\Harddisk53\\Partition0", exists_ntdev, S_IFBLK, true},
  {"/dev/sdbc", BRACK(FH_SDBC), "\\Device\\Harddisk54\\Partition0", exists_ntdev, S_IFBLK, true},
  {"/dev/sdbd", BRACK(FH_SDBD), "\\Device\\Harddisk55\\Partition0", exists_ntdev, S_IFBLK, true},
  {"/dev/sdbe", BRACK(FH_SDBE), "\\Device\\Harddisk56\\Partition0", exists_ntdev, S_IFBLK, true},
  {"/dev/sdbf", BRACK(FH_SDBF), "\\Device\\Harddisk57\\Partition0", exists_ntdev, S_IFBLK, true},
  {"/dev/sdbg", BRACK(FH_SDBG), "\\Device\\Harddisk58\\Partition0", exists_ntdev, S_IFBLK, true},
  {"/dev/sdbh", BRACK(FH_SDBH), "\\Device\\Harddisk59\\Partition0", exists_ntdev, S_IFBLK, true},
  {"/dev/sdbi", BRACK(FH_SDBI), "\\Device\\Harddisk60\\Partition0", exists_ntdev, S_IFBLK, true},
  {"/dev/sdbj", BRACK(FH_SDBJ), "\\Device\\Harddisk61\\Partition0", exists_ntdev, S_IFBLK, true},
  {"/dev/sdbk", BRACK(FH_SDBK), "\\Device\\Harddisk62\\Partition0", exists_ntdev, S_IFBLK, true},
  {"/dev/sdbl", BRACK(FH_SDBL), "\\Device\\Harddisk63\\Partition0", exists_ntdev, S_IFBLK, true},
  {"/dev/sdbm", BRACK(FH_SDBM), "\\Device\\Harddisk64\\Partition0", exists_ntdev, S_IFBLK, true},
  {"/dev/sdbn", BRACK(FH_SDBN), "\\Device\\Harddisk65\\Partition0", exists_ntdev, S_IFBLK, true},
  {"/dev/sdbo", BRACK(FH_SDBO), "\\Device\\Harddisk66\\Partition0", exists_ntdev, S_IFBLK, true},
  {"/dev/sdbp", BRACK(FH_SDBP), "\\Device\\Harddisk67\\Partition0", exists_ntdev, S_IFBLK, true},
  {"/dev/sdbq", BRACK(FH_SDBQ), "\\Device\\Harddisk68\\Partition0", exists_ntdev, S_IFBLK, true},
  {"/dev/sdbr", BRACK(FH_SDBR), "\\Device\\Harddisk69\\Partition0", exists_ntdev, S_IFBLK, true},
  {"/dev/sdbs", BRACK(FH_SDBS), "\\Device\\Harddisk70\\Partition0", exists_ntdev, S_IFBLK, true},
  {"/dev/sdbt", BRACK(FH_SDBT), "\\Device\\Harddisk71\\Partition0", exists_ntdev, S_IFBLK, true},
  {"/dev/sdbu", BRACK(FH_SDBU), "\\Device\\Harddisk72\\Partition0", exists_ntdev, S_IFBLK, true},
  {"/dev/sdbv", BRACK(FH_SDBV), "\\Device\\Harddisk73\\Partition0", exists_ntdev, S_IFBLK, true},
  {"/dev/sdbw", BRACK(FH_SDBW), "\\Device\\Harddisk74\\Partition0", exists_ntdev, S_IFBLK, true},
  {"/dev/sdbx", BRACK(FH_SDBX), "\\Device\\Harddisk75\\Partition0", exists_ntdev, S_IFBLK, true},
  {"/dev/sdby", BRACK(FH_SDBY), "\\Device\\Harddisk76\\Partition0", exists_ntdev, S_IFBLK, true},
  {"/dev/sdbz", BRACK(FH_SDBZ), "\\Device\\Harddisk77\\Partition0", exists_ntdev, S_IFBLK, true},
  {"/dev/sdba1", BRACK(FH_SDBA | 1), "\\Device\\Harddisk52\\Partition1", exists_ntdev, S_IFBLK, true},
  {"/dev/sdba2", BRACK(FH_SDBA | 2), "\\Device\\Harddisk52\\Partition2", exists_ntdev, S_IFBLK, true},
  {"/dev/sdba3", BRACK(FH_SDBA | 3), "\\Device\\Harddisk52\\Partition3", exists_ntdev, S_IFBLK, true},
  {"/dev/sdba4", BRACK(FH_SDBA | 4), "\\Device\\Harddisk52\\Partition4", exists_ntdev, S_IFBLK, true},
  {"/dev/sdba5", BRACK(FH_SDBA | 5), "\\Device\\Harddisk52\\Partition5", exists_ntdev, S_IFBLK, true},
  {"/dev/sdba6", BRACK(FH_SDBA | 6), "\\Device\\Harddisk52\\Partition6", exists_ntdev, S_IFBLK, true},
  {"/dev/sdba7", BRACK(FH_SDBA | 7), "\\Device\\Harddisk52\\Partition7", exists_ntdev, S_IFBLK, true},
  {"/dev/sdba8", BRACK(FH_SDBA | 8), "\\Device\\Harddisk52\\Partition8", exists_ntdev, S_IFBLK, true},
  {"/dev/sdba9", BRACK(FH_SDBA | 9), "\\Device\\Harddisk52\\Partition9", exists_ntdev, S_IFBLK, true},
  {"/dev/sdba10", BRACK(FH_SDBA | 10), "\\Device\\Harddisk52\\Partition10", exists_ntdev, S_IFBLK, true},
  {"/dev/sdba11", BRACK(FH_SDBA | 11), "\\Device\\Harddisk52\\Partition11", exists_ntdev, S_IFBLK, true},
  {"/dev/sdba12", BRACK(FH_SDBA | 12), "\\Device\\Harddisk52\\Partition12", exists_ntdev, S_IFBLK, true},
  {"/dev/sdba13", BRACK(FH_SDBA | 13), "\\Device\\Harddisk52\\Partition13", exists_ntdev, S_IFBLK, true},
  {"/dev/sdba14", BRACK(FH_SDBA | 14), "\\Device\\Harddisk52\\Partition14", exists_ntdev, S_IFBLK, true},
  {"/dev/sdba15", BRACK(FH_SDBA | 15), "\\Device\\Harddisk52\\Partition15", exists_ntdev, S_IFBLK, true},
  {"/dev/sdbb1", BRACK(FH_SDBB | 1), "\\Device\\Harddisk53\\Partition1", exists_ntdev, S_IFBLK, true},
  {"/dev/sdbb2", BRACK(FH_SDBB | 2), "\\Device\\Harddisk53\\Partition2", exists_ntdev, S_IFBLK, true},
  {"/dev/sdbb3", BRACK(FH_SDBB | 3), "\\Device\\Harddisk53\\Partition3", exists_ntdev, S_IFBLK, true},
  {"/dev/sdbb4", BRACK(FH_SDBB | 4), "\\Device\\Harddisk53\\Partition4", exists_ntdev, S_IFBLK, true},
  {"/dev/sdbb5", BRACK(FH_SDBB | 5), "\\Device\\Harddisk53\\Partition5", exists_ntdev, S_IFBLK, true},
  {"/dev/sdbb6", BRACK(FH_SDBB | 6), "\\Device\\Harddisk53\\Partition6", exists_ntdev, S_IFBLK, true},
  {"/dev/sdbb7", BRACK(FH_SDBB | 7), "\\Device\\Harddisk53\\Partition7", exists_ntdev, S_IFBLK, true},
  {"/dev/sdbb8", BRACK(FH_SDBB | 8), "\\Device\\Harddisk53\\Partition8", exists_ntdev, S_IFBLK, true},
  {"/dev/sdbb9", BRACK(FH_SDBB | 9), "\\Device\\Harddisk53\\Partition9", exists_ntdev, S_IFBLK, true},
  {"/dev/sdbb10", BRACK(FH_SDBB | 10), "\\Device\\Harddisk53\\Partition10", exists_ntdev, S_IFBLK, true},
  {"/dev/sdbb11", BRACK(FH_SDBB | 11), "\\Device\\Harddisk53\\Partition11", exists_ntdev, S_IFBLK, true},
  {"/dev/sdbb12", BRACK(FH_SDBB | 12), "\\Device\\Harddisk53\\Partition12", exists_ntdev, S_IFBLK, true},
  {"/dev/sdbb13", BRACK(FH_SDBB | 13), "\\Device\\Harddisk53\\Partition13", exists_ntdev, S_IFBLK, true},
  {"/dev/sdbb14", BRACK(FH_SDBB | 14), "\\Device\\Harddisk53\\Partition14", exists_ntdev, S_IFBLK, true},
  {"/dev/sdbb15", BRACK(FH_SDBB | 15), "\\Device\\Harddisk53\\Partition15", exists_ntdev, S_IFBLK, true},
  {"/dev/sdbc1", BRACK(FH_SDBC | 1), "\\Device\\Harddisk54\\Partition1", exists_ntdev, S_IFBLK, true},
  {"/dev/sdbc2", BRACK(FH_SDBC | 2), "\\Device\\Harddisk54\\Partition2", exists_ntdev, S_IFBLK, true},
  {"/dev/sdbc3", BRACK(FH_SDBC | 3), "\\Device\\Harddisk54\\Partition3", exists_ntdev, S_IFBLK, true},
  {"/dev/sdbc4", BRACK(FH_SDBC | 4), "\\Device\\Harddisk54\\Partition4", exists_ntdev, S_IFBLK, true},
  {"/dev/sdbc5", BRACK(FH_SDBC | 5), "\\Device\\Harddisk54\\Partition5", exists_ntdev, S_IFBLK, true},
  {"/dev/sdbc6", BRACK(FH_SDBC | 6), "\\Device\\Harddisk54\\Partition6", exists_ntdev, S_IFBLK, true},
  {"/dev/sdbc7", BRACK(FH_SDBC | 7), "\\Device\\Harddisk54\\Partition7", exists_ntdev, S_IFBLK, true},
  {"/dev/sdbc8", BRACK(FH_SDBC | 8), "\\Device\\Harddisk54\\Partition8", exists_ntdev, S_IFBLK, true},
  {"/dev/sdbc9", BRACK(FH_SDBC | 9), "\\Device\\Harddisk54\\Partition9", exists_ntdev, S_IFBLK, true},
  {"/dev/sdbc10", BRACK(FH_SDBC | 10), "\\Device\\Harddisk54\\Partition10", exists_ntdev, S_IFBLK, true},
  {"/dev/sdbc11", BRACK(FH_SDBC | 11), "\\Device\\Harddisk54\\Partition11", exists_ntdev, S_IFBLK, true},
  {"/dev/sdbc12", BRACK(FH_SDBC | 12), "\\Device\\Harddisk54\\Partition12", exists_ntdev, S_IFBLK, true},
  {"/dev/sdbc13", BRACK(FH_SDBC | 13), "\\Device\\Harddisk54\\Partition13", exists_ntdev, S_IFBLK, true},
  {"/dev/sdbc14", BRACK(FH_SDBC | 14), "\\Device\\Harddisk54\\Partition14", exists_ntdev, S_IFBLK, true},
  {"/dev/sdbc15", BRACK(FH_SDBC | 15), "\\Device\\Harddisk54\\Partition15", exists_ntdev, S_IFBLK, true},
  {"/dev/sdbd1", BRACK(FH_SDBD | 1), "\\Device\\Harddisk55\\Partition1", exists_ntdev, S_IFBLK, true},
  {"/dev/sdbd2", BRACK(FH_SDBD | 2), "\\Device\\Harddisk55\\Partition2", exists_ntdev, S_IFBLK, true},
  {"/dev/sdbd3", BRACK(FH_SDBD | 3), "\\Device\\Harddisk55\\Partition3", exists_ntdev, S_IFBLK, true},
  {"/dev/sdbd4", BRACK(FH_SDBD | 4), "\\Device\\Harddisk55\\Partition4", exists_ntdev, S_IFBLK, true},
  {"/dev/sdbd5", BRACK(FH_SDBD | 5), "\\Device\\Harddisk55\\Partition5", exists_ntdev, S_IFBLK, true},
  {"/dev/sdbd6", BRACK(FH_SDBD | 6), "\\Device\\Harddisk55\\Partition6", exists_ntdev, S_IFBLK, true},
  {"/dev/sdbd7", BRACK(FH_SDBD | 7), "\\Device\\Harddisk55\\Partition7", exists_ntdev, S_IFBLK, true},
  {"/dev/sdbd8", BRACK(FH_SDBD | 8), "\\Device\\Harddisk55\\Partition8", exists_ntdev, S_IFBLK, true},
  {"/dev/sdbd9", BRACK(FH_SDBD | 9), "\\Device\\Harddisk55\\Partition9", exists_ntdev, S_IFBLK, true},
  {"/dev/sdbd10", BRACK(FH_SDBD | 10), "\\Device\\Harddisk55\\Partition10", exists_ntdev, S_IFBLK, true},
  {"/dev/sdbd11", BRACK(FH_SDBD | 11), "\\Device\\Harddisk55\\Partition11", exists_ntdev, S_IFBLK, true},
  {"/dev/sdbd12", BRACK(FH_SDBD | 12), "\\Device\\Harddisk55\\Partition12", exists_ntdev, S_IFBLK, true},
  {"/dev/sdbd13", BRACK(FH_SDBD | 13), "\\Device\\Harddisk55\\Partition13", exists_ntdev, S_IFBLK, true},
  {"/dev/sdbd14", BRACK(FH_SDBD | 14), "\\Device\\Harddisk55\\Partition14", exists_ntdev, S_IFBLK, true},
  {"/dev/sdbd15", BRACK(FH_SDBD | 15), "\\Device\\Harddisk55\\Partition15", exists_ntdev, S_IFBLK, true},
  {"/dev/sdbe1", BRACK(FH_SDBE | 1), "\\Device\\Harddisk56\\Partition1", exists_ntdev, S_IFBLK, true},
  {"/dev/sdbe2", BRACK(FH_SDBE | 2), "\\Device\\Harddisk56\\Partition2", exists_ntdev, S_IFBLK, true},
  {"/dev/sdbe3", BRACK(FH_SDBE | 3), "\\Device\\Harddisk56\\Partition3", exists_ntdev, S_IFBLK, true},
  {"/dev/sdbe4", BRACK(FH_SDBE | 4), "\\Device\\Harddisk56\\Partition4", exists_ntdev, S_IFBLK, true},
  {"/dev/sdbe5", BRACK(FH_SDBE | 5), "\\Device\\Harddisk56\\Partition5", exists_ntdev, S_IFBLK, true},
  {"/dev/sdbe6", BRACK(FH_SDBE | 6), "\\Device\\Harddisk56\\Partition6", exists_ntdev, S_IFBLK, true},
  {"/dev/sdbe7", BRACK(FH_SDBE | 7), "\\Device\\Harddisk56\\Partition7", exists_ntdev, S_IFBLK, true},
  {"/dev/sdbe8", BRACK(FH_SDBE | 8), "\\Device\\Harddisk56\\Partition8", exists_ntdev, S_IFBLK, true},
  {"/dev/sdbe9", BRACK(FH_SDBE | 9), "\\Device\\Harddisk56\\Partition9", exists_ntdev, S_IFBLK, true},
  {"/dev/sdbe10", BRACK(FH_SDBE | 10), "\\Device\\Harddisk56\\Partition10", exists_ntdev, S_IFBLK, true},
  {"/dev/sdbe11", BRACK(FH_SDBE | 11), "\\Device\\Harddisk56\\Partition11", exists_ntdev, S_IFBLK, true},
  {"/dev/sdbe12", BRACK(FH_SDBE | 12), "\\Device\\Harddisk56\\Partition12", exists_ntdev, S_IFBLK, true},
  {"/dev/sdbe13", BRACK(FH_SDBE | 13), "\\Device\\Harddisk56\\Partition13", exists_ntdev, S_IFBLK, true},
  {"/dev/sdbe14", BRACK(FH_SDBE | 14), "\\Device\\Harddisk56\\Partition14", exists_ntdev, S_IFBLK, true},
  {"/dev/sdbe15", BRACK(FH_SDBE | 15), "\\Device\\Harddisk56\\Partition15", exists_ntdev, S_IFBLK, true},
  {"/dev/sdbf1", BRACK(FH_SDBF | 1), "\\Device\\Harddisk57\\Partition1", exists_ntdev, S_IFBLK, true},
  {"/dev/sdbf2", BRACK(FH_SDBF | 2), "\\Device\\Harddisk57\\Partition2", exists_ntdev, S_IFBLK, true},
  {"/dev/sdbf3", BRACK(FH_SDBF | 3), "\\Device\\Harddisk57\\Partition3", exists_ntdev, S_IFBLK, true},
  {"/dev/sdbf4", BRACK(FH_SDBF | 4), "\\Device\\Harddisk57\\Partition4", exists_ntdev, S_IFBLK, true},
  {"/dev/sdbf5", BRACK(FH_SDBF | 5), "\\Device\\Harddisk57\\Partition5", exists_ntdev, S_IFBLK, true},
  {"/dev/sdbf6", BRACK(FH_SDBF | 6), "\\Device\\Harddisk57\\Partition6", exists_ntdev, S_IFBLK, true},
  {"/dev/sdbf7", BRACK(FH_SDBF | 7), "\\Device\\Harddisk57\\Partition7", exists_ntdev, S_IFBLK, true},
  {"/dev/sdbf8", BRACK(FH_SDBF | 8), "\\Device\\Harddisk57\\Partition8", exists_ntdev, S_IFBLK, true},
  {"/dev/sdbf9", BRACK(FH_SDBF | 9), "\\Device\\Harddisk57\\Partition9", exists_ntdev, S_IFBLK, true},
  {"/dev/sdbf10", BRACK(FH_SDBF | 10), "\\Device\\Harddisk57\\Partition10", exists_ntdev, S_IFBLK, true},
  {"/dev/sdbf11", BRACK(FH_SDBF | 11), "\\Device\\Harddisk57\\Partition11", exists_ntdev, S_IFBLK, true},
  {"/dev/sdbf12", BRACK(FH_SDBF | 12), "\\Device\\Harddisk57\\Partition12", exists_ntdev, S_IFBLK, true},
  {"/dev/sdbf13", BRACK(FH_SDBF | 13), "\\Device\\Harddisk57\\Partition13", exists_ntdev, S_IFBLK, true},
  {"/dev/sdbf14", BRACK(FH_SDBF | 14), "\\Device\\Harddisk57\\Partition14", exists_ntdev, S_IFBLK, true},
  {"/dev/sdbf15", BRACK(FH_SDBF | 15), "\\Device\\Harddisk57\\Partition15", exists_ntdev, S_IFBLK, true},
  {"/dev/sdbg1", BRACK(FH_SDBG | 1), "\\Device\\Harddisk58\\Partition1", exists_ntdev, S_IFBLK, true},
  {"/dev/sdbg2", BRACK(FH_SDBG | 2), "\\Device\\Harddisk58\\Partition2", exists_ntdev, S_IFBLK, true},
  {"/dev/sdbg3", BRACK(FH_SDBG | 3), "\\Device\\Harddisk58\\Partition3", exists_ntdev, S_IFBLK, true},
  {"/dev/sdbg4", BRACK(FH_SDBG | 4), "\\Device\\Harddisk58\\Partition4", exists_ntdev, S_IFBLK, true},
  {"/dev/sdbg5", BRACK(FH_SDBG | 5), "\\Device\\Harddisk58\\Partition5", exists_ntdev, S_IFBLK, true},
  {"/dev/sdbg6", BRACK(FH_SDBG | 6), "\\Device\\Harddisk58\\Partition6", exists_ntdev, S_IFBLK, true},
  {"/dev/sdbg7", BRACK(FH_SDBG | 7), "\\Device\\Harddisk58\\Partition7", exists_ntdev, S_IFBLK, true},
  {"/dev/sdbg8", BRACK(FH_SDBG | 8), "\\Device\\Harddisk58\\Partition8", exists_ntdev, S_IFBLK, true},
  {"/dev/sdbg9", BRACK(FH_SDBG | 9), "\\Device\\Harddisk58\\Partition9", exists_ntdev, S_IFBLK, true},
  {"/dev/sdbg10", BRACK(FH_SDBG | 10), "\\Device\\Harddisk58\\Partition10", exists_ntdev, S_IFBLK, true},
  {"/dev/sdbg11", BRACK(FH_SDBG | 11), "\\Device\\Harddisk58\\Partition11", exists_ntdev, S_IFBLK, true},
  {"/dev/sdbg12", BRACK(FH_SDBG | 12), "\\Device\\Harddisk58\\Partition12", exists_ntdev, S_IFBLK, true},
  {"/dev/sdbg13", BRACK(FH_SDBG | 13), "\\Device\\Harddisk58\\Partition13", exists_ntdev, S_IFBLK, true},
  {"/dev/sdbg14", BRACK(FH_SDBG | 14), "\\Device\\Harddisk58\\Partition14", exists_ntdev, S_IFBLK, true},
  {"/dev/sdbg15", BRACK(FH_SDBG | 15), "\\Device\\Harddisk58\\Partition15", exists_ntdev, S_IFBLK, true},
  {"/dev/sdbh1", BRACK(FH_SDBH | 1), "\\Device\\Harddisk59\\Partition1", exists_ntdev, S_IFBLK, true},
  {"/dev/sdbh2", BRACK(FH_SDBH | 2), "\\Device\\Harddisk59\\Partition2", exists_ntdev, S_IFBLK, true},
  {"/dev/sdbh3", BRACK(FH_SDBH | 3), "\\Device\\Harddisk59\\Partition3", exists_ntdev, S_IFBLK, true},
  {"/dev/sdbh4", BRACK(FH_SDBH | 4), "\\Device\\Harddisk59\\Partition4", exists_ntdev, S_IFBLK, true},
  {"/dev/sdbh5", BRACK(FH_SDBH | 5), "\\Device\\Harddisk59\\Partition5", exists_ntdev, S_IFBLK, true},
  {"/dev/sdbh6", BRACK(FH_SDBH | 6), "\\Device\\Harddisk59\\Partition6", exists_ntdev, S_IFBLK, true},
  {"/dev/sdbh7", BRACK(FH_SDBH | 7), "\\Device\\Harddisk59\\Partition7", exists_ntdev, S_IFBLK, true},
  {"/dev/sdbh8", BRACK(FH_SDBH | 8), "\\Device\\Harddisk59\\Partition8", exists_ntdev, S_IFBLK, true},
  {"/dev/sdbh9", BRACK(FH_SDBH | 9), "\\Device\\Harddisk59\\Partition9", exists_ntdev, S_IFBLK, true},
  {"/dev/sdbh10", BRACK(FH_SDBH | 10), "\\Device\\Harddisk59\\Partition10", exists_ntdev, S_IFBLK, true},
  {"/dev/sdbh11", BRACK(FH_SDBH | 11), "\\Device\\Harddisk59\\Partition11", exists_ntdev, S_IFBLK, true},
  {"/dev/sdbh12", BRACK(FH_SDBH | 12), "\\Device\\Harddisk59\\Partition12", exists_ntdev, S_IFBLK, true},
  {"/dev/sdbh13", BRACK(FH_SDBH | 13), "\\Device\\Harddisk59\\Partition13", exists_ntdev, S_IFBLK, true},
  {"/dev/sdbh14", BRACK(FH_SDBH | 14), "\\Device\\Harddisk59\\Partition14", exists_ntdev, S_IFBLK, true},
  {"/dev/sdbh15", BRACK(FH_SDBH | 15), "\\Device\\Harddisk59\\Partition15", exists_ntdev, S_IFBLK, true},
  {"/dev/sdbi1", BRACK(FH_SDBI | 1), "\\Device\\Harddisk60\\Partition1", exists_ntdev, S_IFBLK, true},
  {"/dev/sdbi2", BRACK(FH_SDBI | 2), "\\Device\\Harddisk60\\Partition2", exists_ntdev, S_IFBLK, true},
  {"/dev/sdbi3", BRACK(FH_SDBI | 3), "\\Device\\Harddisk60\\Partition3", exists_ntdev, S_IFBLK, true},
  {"/dev/sdbi4", BRACK(FH_SDBI | 4), "\\Device\\Harddisk60\\Partition4", exists_ntdev, S_IFBLK, true},
  {"/dev/sdbi5", BRACK(FH_SDBI | 5), "\\Device\\Harddisk60\\Partition5", exists_ntdev, S_IFBLK, true},
  {"/dev/sdbi6", BRACK(FH_SDBI | 6), "\\Device\\Harddisk60\\Partition6", exists_ntdev, S_IFBLK, true},
  {"/dev/sdbi7", BRACK(FH_SDBI | 7), "\\Device\\Harddisk60\\Partition7", exists_ntdev, S_IFBLK, true},
  {"/dev/sdbi8", BRACK(FH_SDBI | 8), "\\Device\\Harddisk60\\Partition8", exists_ntdev, S_IFBLK, true},
  {"/dev/sdbi9", BRACK(FH_SDBI | 9), "\\Device\\Harddisk60\\Partition9", exists_ntdev, S_IFBLK, true},
  {"/dev/sdbi10", BRACK(FH_SDBI | 10), "\\Device\\Harddisk60\\Partition10", exists_ntdev, S_IFBLK, true},
  {"/dev/sdbi11", BRACK(FH_SDBI | 11), "\\Device\\Harddisk60\\Partition11", exists_ntdev, S_IFBLK, true},
  {"/dev/sdbi12", BRACK(FH_SDBI | 12), "\\Device\\Harddisk60\\Partition12", exists_ntdev, S_IFBLK, true},
  {"/dev/sdbi13", BRACK(FH_SDBI | 13), "\\Device\\Harddisk60\\Partition13", exists_ntdev, S_IFBLK, true},
  {"/dev/sdbi14", BRACK(FH_SDBI | 14), "\\Device\\Harddisk60\\Partition14", exists_ntdev, S_IFBLK, true},
  {"/dev/sdbi15", BRACK(FH_SDBI | 15), "\\Device\\Harddisk60\\Partition15", exists_ntdev, S_IFBLK, true},
  {"/dev/sdbj1", BRACK(FH_SDBJ | 1), "\\Device\\Harddisk61\\Partition1", exists_ntdev, S_IFBLK, true},
  {"/dev/sdbj2", BRACK(FH_SDBJ | 2), "\\Device\\Harddisk61\\Partition2", exists_ntdev, S_IFBLK, true},
  {"/dev/sdbj3", BRACK(FH_SDBJ | 3), "\\Device\\Harddisk61\\Partition3", exists_ntdev, S_IFBLK, true},
  {"/dev/sdbj4", BRACK(FH_SDBJ | 4), "\\Device\\Harddisk61\\Partition4", exists_ntdev, S_IFBLK, true},
  {"/dev/sdbj5", BRACK(FH_SDBJ | 5), "\\Device\\Harddisk61\\Partition5", exists_ntdev, S_IFBLK, true},
  {"/dev/sdbj6", BRACK(FH_SDBJ | 6), "\\Device\\Harddisk61\\Partition6", exists_ntdev, S_IFBLK, true},
  {"/dev/sdbj7", BRACK(FH_SDBJ | 7), "\\Device\\Harddisk61\\Partition7", exists_ntdev, S_IFBLK, true},
  {"/dev/sdbj8", BRACK(FH_SDBJ | 8), "\\Device\\Harddisk61\\Partition8", exists_ntdev, S_IFBLK, true},
  {"/dev/sdbj9", BRACK(FH_SDBJ | 9), "\\Device\\Harddisk61\\Partition9", exists_ntdev, S_IFBLK, true},
  {"/dev/sdbj10", BRACK(FH_SDBJ | 10), "\\Device\\Harddisk61\\Partition10", exists_ntdev, S_IFBLK, true},
  {"/dev/sdbj11", BRACK(FH_SDBJ | 11), "\\Device\\Harddisk61\\Partition11", exists_ntdev, S_IFBLK, true},
  {"/dev/sdbj12", BRACK(FH_SDBJ | 12), "\\Device\\Harddisk61\\Partition12", exists_ntdev, S_IFBLK, true},
  {"/dev/sdbj13", BRACK(FH_SDBJ | 13), "\\Device\\Harddisk61\\Partition13", exists_ntdev, S_IFBLK, true},
  {"/dev/sdbj14", BRACK(FH_SDBJ | 14), "\\Device\\Harddisk61\\Partition14", exists_ntdev, S_IFBLK, true},
  {"/dev/sdbj15", BRACK(FH_SDBJ | 15), "\\Device\\Harddisk61\\Partition15", exists_ntdev, S_IFBLK, true},
  {"/dev/sdbk1", BRACK(FH_SDBK | 1), "\\Device\\Harddisk62\\Partition1", exists_ntdev, S_IFBLK, true},
  {"/dev/sdbk2", BRACK(FH_SDBK | 2), "\\Device\\Harddisk62\\Partition2", exists_ntdev, S_IFBLK, true},
  {"/dev/sdbk3", BRACK(FH_SDBK | 3), "\\Device\\Harddisk62\\Partition3", exists_ntdev, S_IFBLK, true},
  {"/dev/sdbk4", BRACK(FH_SDBK | 4), "\\Device\\Harddisk62\\Partition4", exists_ntdev, S_IFBLK, true},
  {"/dev/sdbk5", BRACK(FH_SDBK | 5), "\\Device\\Harddisk62\\Partition5", exists_ntdev, S_IFBLK, true},
  {"/dev/sdbk6", BRACK(FH_SDBK | 6), "\\Device\\Harddisk62\\Partition6", exists_ntdev, S_IFBLK, true},
  {"/dev/sdbk7", BRACK(FH_SDBK | 7), "\\Device\\Harddisk62\\Partition7", exists_ntdev, S_IFBLK, true},
  {"/dev/sdbk8", BRACK(FH_SDBK | 8), "\\Device\\Harddisk62\\Partition8", exists_ntdev, S_IFBLK, true},
  {"/dev/sdbk9", BRACK(FH_SDBK | 9), "\\Device\\Harddisk62\\Partition9", exists_ntdev, S_IFBLK, true},
  {"/dev/sdbk10", BRACK(FH_SDBK | 10), "\\Device\\Harddisk62\\Partition10", exists_ntdev, S_IFBLK, true},
  {"/dev/sdbk11", BRACK(FH_SDBK | 11), "\\Device\\Harddisk62\\Partition11", exists_ntdev, S_IFBLK, true},
  {"/dev/sdbk12", BRACK(FH_SDBK | 12), "\\Device\\Harddisk62\\Partition12", exists_ntdev, S_IFBLK, true},
  {"/dev/sdbk13", BRACK(FH_SDBK | 13), "\\Device\\Harddisk62\\Partition13", exists_ntdev, S_IFBLK, true},
  {"/dev/sdbk14", BRACK(FH_SDBK | 14), "\\Device\\Harddisk62\\Partition14", exists_ntdev, S_IFBLK, true},
  {"/dev/sdbk15", BRACK(FH_SDBK | 15), "\\Device\\Harddisk62\\Partition15", exists_ntdev, S_IFBLK, true},
  {"/dev/sdbl1", BRACK(FH_SDBL | 1), "\\Device\\Harddisk63\\Partition1", exists_ntdev, S_IFBLK, true},
  {"/dev/sdbl2", BRACK(FH_SDBL | 2), "\\Device\\Harddisk63\\Partition2", exists_ntdev, S_IFBLK, true},
  {"/dev/sdbl3", BRACK(FH_SDBL | 3), "\\Device\\Harddisk63\\Partition3", exists_ntdev, S_IFBLK, true},
  {"/dev/sdbl4", BRACK(FH_SDBL | 4), "\\Device\\Harddisk63\\Partition4", exists_ntdev, S_IFBLK, true},
  {"/dev/sdbl5", BRACK(FH_SDBL | 5), "\\Device\\Harddisk63\\Partition5", exists_ntdev, S_IFBLK, true},
  {"/dev/sdbl6", BRACK(FH_SDBL | 6), "\\Device\\Harddisk63\\Partition6", exists_ntdev, S_IFBLK, true},
  {"/dev/sdbl7", BRACK(FH_SDBL | 7), "\\Device\\Harddisk63\\Partition7", exists_ntdev, S_IFBLK, true},
  {"/dev/sdbl8", BRACK(FH_SDBL | 8), "\\Device\\Harddisk63\\Partition8", exists_ntdev, S_IFBLK, true},
  {"/dev/sdbl9", BRACK(FH_SDBL | 9), "\\Device\\Harddisk63\\Partition9", exists_ntdev, S_IFBLK, true},
  {"/dev/sdbl10", BRACK(FH_SDBL | 10), "\\Device\\Harddisk63\\Partition10", exists_ntdev, S_IFBLK, true},
  {"/dev/sdbl11", BRACK(FH_SDBL | 11), "\\Device\\Harddisk63\\Partition11", exists_ntdev, S_IFBLK, true},
  {"/dev/sdbl12", BRACK(FH_SDBL | 12), "\\Device\\Harddisk63\\Partition12", exists_ntdev, S_IFBLK, true},
  {"/dev/sdbl13", BRACK(FH_SDBL | 13), "\\Device\\Harddisk63\\Partition13", exists_ntdev, S_IFBLK, true},
  {"/dev/sdbl14", BRACK(FH_SDBL | 14), "\\Device\\Harddisk63\\Partition14", exists_ntdev, S_IFBLK, true},
  {"/dev/sdbl15", BRACK(FH_SDBL | 15), "\\Device\\Harddisk63\\Partition15", exists_ntdev, S_IFBLK, true},
  {"/dev/sdbm1", BRACK(FH_SDBM | 1), "\\Device\\Harddisk64\\Partition1", exists_ntdev, S_IFBLK, true},
  {"/dev/sdbm2", BRACK(FH_SDBM | 2), "\\Device\\Harddisk64\\Partition2", exists_ntdev, S_IFBLK, true},
  {"/dev/sdbm3", BRACK(FH_SDBM | 3), "\\Device\\Harddisk64\\Partition3", exists_ntdev, S_IFBLK, true},
  {"/dev/sdbm4", BRACK(FH_SDBM | 4), "\\Device\\Harddisk64\\Partition4", exists_ntdev, S_IFBLK, true},
  {"/dev/sdbm5", BRACK(FH_SDBM | 5), "\\Device\\Harddisk64\\Partition5", exists_ntdev, S_IFBLK, true},
  {"/dev/sdbm6", BRACK(FH_SDBM | 6), "\\Device\\Harddisk64\\Partition6", exists_ntdev, S_IFBLK, true},
  {"/dev/sdbm7", BRACK(FH_SDBM | 7), "\\Device\\Harddisk64\\Partition7", exists_ntdev, S_IFBLK, true},
  {"/dev/sdbm8", BRACK(FH_SDBM | 8), "\\Device\\Harddisk64\\Partition8", exists_ntdev, S_IFBLK, true},
  {"/dev/sdbm9", BRACK(FH_SDBM | 9), "\\Device\\Harddisk64\\Partition9", exists_ntdev, S_IFBLK, true},
  {"/dev/sdbm10", BRACK(FH_SDBM | 10), "\\Device\\Harddisk64\\Partition10", exists_ntdev, S_IFBLK, true},
  {"/dev/sdbm11", BRACK(FH_SDBM | 11), "\\Device\\Harddisk64\\Partition11", exists_ntdev, S_IFBLK, true},
  {"/dev/sdbm12", BRACK(FH_SDBM | 12), "\\Device\\Harddisk64\\Partition12", exists_ntdev, S_IFBLK, true},
  {"/dev/sdbm13", BRACK(FH_SDBM | 13), "\\Device\\Harddisk64\\Partition13", exists_ntdev, S_IFBLK, true},
  {"/dev/sdbm14", BRACK(FH_SDBM | 14), "\\Device\\Harddisk64\\Partition14", exists_ntdev, S_IFBLK, true},
  {"/dev/sdbm15", BRACK(FH_SDBM | 15), "\\Device\\Harddisk64\\Partition15", exists_ntdev, S_IFBLK, true},
  {"/dev/sdbn1", BRACK(FH_SDBN | 1), "\\Device\\Harddisk65\\Partition1", exists_ntdev, S_IFBLK, true},
  {"/dev/sdbn2", BRACK(FH_SDBN | 2), "\\Device\\Harddisk65\\Partition2", exists_ntdev, S_IFBLK, true},
  {"/dev/sdbn3", BRACK(FH_SDBN | 3), "\\Device\\Harddisk65\\Partition3", exists_ntdev, S_IFBLK, true},
  {"/dev/sdbn4", BRACK(FH_SDBN | 4), "\\Device\\Harddisk65\\Partition4", exists_ntdev, S_IFBLK, true},
  {"/dev/sdbn5", BRACK(FH_SDBN | 5), "\\Device\\Harddisk65\\Partition5", exists_ntdev, S_IFBLK, true},
  {"/dev/sdbn6", BRACK(FH_SDBN | 6), "\\Device\\Harddisk65\\Partition6", exists_ntdev, S_IFBLK, true},
  {"/dev/sdbn7", BRACK(FH_SDBN | 7), "\\Device\\Harddisk65\\Partition7", exists_ntdev, S_IFBLK, true},
  {"/dev/sdbn8", BRACK(FH_SDBN | 8), "\\Device\\Harddisk65\\Partition8", exists_ntdev, S_IFBLK, true},
  {"/dev/sdbn9", BRACK(FH_SDBN | 9), "\\Device\\Harddisk65\\Partition9", exists_ntdev, S_IFBLK, true},
  {"/dev/sdbn10", BRACK(FH_SDBN | 10), "\\Device\\Harddisk65\\Partition10", exists_ntdev, S_IFBLK, true},
  {"/dev/sdbn11", BRACK(FH_SDBN | 11), "\\Device\\Harddisk65\\Partition11", exists_ntdev, S_IFBLK, true},
  {"/dev/sdbn12", BRACK(FH_SDBN | 12), "\\Device\\Harddisk65\\Partition12", exists_ntdev, S_IFBLK, true},
  {"/dev/sdbn13", BRACK(FH_SDBN | 13), "\\Device\\Harddisk65\\Partition13", exists_ntdev, S_IFBLK, true},
  {"/dev/sdbn14", BRACK(FH_SDBN | 14), "\\Device\\Harddisk65\\Partition14", exists_ntdev, S_IFBLK, true},
  {"/dev/sdbn15", BRACK(FH_SDBN | 15), "\\Device\\Harddisk65\\Partition15", exists_ntdev, S_IFBLK, true},
  {"/dev/sdbo1", BRACK(FH_SDBO | 1), "\\Device\\Harddisk66\\Partition1", exists_ntdev, S_IFBLK, true},
  {"/dev/sdbo2", BRACK(FH_SDBO | 2), "\\Device\\Harddisk66\\Partition2", exists_ntdev, S_IFBLK, true},
  {"/dev/sdbo3", BRACK(FH_SDBO | 3), "\\Device\\Harddisk66\\Partition3", exists_ntdev, S_IFBLK, true},
  {"/dev/sdbo4", BRACK(FH_SDBO | 4), "\\Device\\Harddisk66\\Partition4", exists_ntdev, S_IFBLK, true},
  {"/dev/sdbo5", BRACK(FH_SDBO | 5), "\\Device\\Harddisk66\\Partition5", exists_ntdev, S_IFBLK, true},
  {"/dev/sdbo6", BRACK(FH_SDBO | 6), "\\Device\\Harddisk66\\Partition6", exists_ntdev, S_IFBLK, true},
  {"/dev/sdbo7", BRACK(FH_SDBO | 7), "\\Device\\Harddisk66\\Partition7", exists_ntdev, S_IFBLK, true},
  {"/dev/sdbo8", BRACK(FH_SDBO | 8), "\\Device\\Harddisk66\\Partition8", exists_ntdev, S_IFBLK, true},
  {"/dev/sdbo9", BRACK(FH_SDBO | 9), "\\Device\\Harddisk66\\Partition9", exists_ntdev, S_IFBLK, true},
  {"/dev/sdbo10", BRACK(FH_SDBO | 10), "\\Device\\Harddisk66\\Partition10", exists_ntdev, S_IFBLK, true},
  {"/dev/sdbo11", BRACK(FH_SDBO | 11), "\\Device\\Harddisk66\\Partition11", exists_ntdev, S_IFBLK, true},
  {"/dev/sdbo12", BRACK(FH_SDBO | 12), "\\Device\\Harddisk66\\Partition12", exists_ntdev, S_IFBLK, true},
  {"/dev/sdbo13", BRACK(FH_SDBO | 13), "\\Device\\Harddisk66\\Partition13", exists_ntdev, S_IFBLK, true},
  {"/dev/sdbo14", BRACK(FH_SDBO | 14), "\\Device\\Harddisk66\\Partition14", exists_ntdev, S_IFBLK, true},
  {"/dev/sdbo15", BRACK(FH_SDBO | 15), "\\Device\\Harddisk66\\Partition15", exists_ntdev, S_IFBLK, true},
  {"/dev/sdbp1", BRACK(FH_SDBP | 1), "\\Device\\Harddisk67\\Partition1", exists_ntdev, S_IFBLK, true},
  {"/dev/sdbp2", BRACK(FH_SDBP | 2), "\\Device\\Harddisk67\\Partition2", exists_ntdev, S_IFBLK, true},
  {"/dev/sdbp3", BRACK(FH_SDBP | 3), "\\Device\\Harddisk67\\Partition3", exists_ntdev, S_IFBLK, true},
  {"/dev/sdbp4", BRACK(FH_SDBP | 4), "\\Device\\Harddisk67\\Partition4", exists_ntdev, S_IFBLK, true},
  {"/dev/sdbp5", BRACK(FH_SDBP | 5), "\\Device\\Harddisk67\\Partition5", exists_ntdev, S_IFBLK, true},
  {"/dev/sdbp6", BRACK(FH_SDBP | 6), "\\Device\\Harddisk67\\Partition6", exists_ntdev, S_IFBLK, true},
  {"/dev/sdbp7", BRACK(FH_SDBP | 7), "\\Device\\Harddisk67\\Partition7", exists_ntdev, S_IFBLK, true},
  {"/dev/sdbp8", BRACK(FH_SDBP | 8), "\\Device\\Harddisk67\\Partition8", exists_ntdev, S_IFBLK, true},
  {"/dev/sdbp9", BRACK(FH_SDBP | 9), "\\Device\\Harddisk67\\Partition9", exists_ntdev, S_IFBLK, true},
  {"/dev/sdbp10", BRACK(FH_SDBP | 10), "\\Device\\Harddisk67\\Partition10", exists_ntdev, S_IFBLK, true},
  {"/dev/sdbp11", BRACK(FH_SDBP | 11), "\\Device\\Harddisk67\\Partition11", exists_ntdev, S_IFBLK, true},
  {"/dev/sdbp12", BRACK(FH_SDBP | 12), "\\Device\\Harddisk67\\Partition12", exists_ntdev, S_IFBLK, true},
  {"/dev/sdbp13", BRACK(FH_SDBP | 13), "\\Device\\Harddisk67\\Partition13", exists_ntdev, S_IFBLK, true},
  {"/dev/sdbp14", BRACK(FH_SDBP | 14), "\\Device\\Harddisk67\\Partition14", exists_ntdev, S_IFBLK, true},
  {"/dev/sdbp15", BRACK(FH_SDBP | 15), "\\Device\\Harddisk67\\Partition15", exists_ntdev, S_IFBLK, true},
  {"/dev/sdbq1", BRACK(FH_SDBQ | 1), "\\Device\\Harddisk68\\Partition1", exists_ntdev, S_IFBLK, true},
  {"/dev/sdbq2", BRACK(FH_SDBQ | 2), "\\Device\\Harddisk68\\Partition2", exists_ntdev, S_IFBLK, true},
  {"/dev/sdbq3", BRACK(FH_SDBQ | 3), "\\Device\\Harddisk68\\Partition3", exists_ntdev, S_IFBLK, true},
  {"/dev/sdbq4", BRACK(FH_SDBQ | 4), "\\Device\\Harddisk68\\Partition4", exists_ntdev, S_IFBLK, true},
  {"/dev/sdbq5", BRACK(FH_SDBQ | 5), "\\Device\\Harddisk68\\Partition5", exists_ntdev, S_IFBLK, true},
  {"/dev/sdbq6", BRACK(FH_SDBQ | 6), "\\Device\\Harddisk68\\Partition6", exists_ntdev, S_IFBLK, true},
  {"/dev/sdbq7", BRACK(FH_SDBQ | 7), "\\Device\\Harddisk68\\Partition7", exists_ntdev, S_IFBLK, true},
  {"/dev/sdbq8", BRACK(FH_SDBQ | 8), "\\Device\\Harddisk68\\Partition8", exists_ntdev, S_IFBLK, true},
  {"/dev/sdbq9", BRACK(FH_SDBQ | 9), "\\Device\\Harddisk68\\Partition9", exists_ntdev, S_IFBLK, true},
  {"/dev/sdbq10", BRACK(FH_SDBQ | 10), "\\Device\\Harddisk68\\Partition10", exists_ntdev, S_IFBLK, true},
  {"/dev/sdbq11", BRACK(FH_SDBQ | 11), "\\Device\\Harddisk68\\Partition11", exists_ntdev, S_IFBLK, true},
  {"/dev/sdbq12", BRACK(FH_SDBQ | 12), "\\Device\\Harddisk68\\Partition12", exists_ntdev, S_IFBLK, true},
  {"/dev/sdbq13", BRACK(FH_SDBQ | 13), "\\Device\\Harddisk68\\Partition13", exists_ntdev, S_IFBLK, true},
  {"/dev/sdbq14", BRACK(FH_SDBQ | 14), "\\Device\\Harddisk68\\Partition14", exists_ntdev, S_IFBLK, true},
  {"/dev/sdbq15", BRACK(FH_SDBQ | 15), "\\Device\\Harddisk68\\Partition15", exists_ntdev, S_IFBLK, true},
  {"/dev/sdbr1", BRACK(FH_SDBR | 1), "\\Device\\Harddisk69\\Partition1", exists_ntdev, S_IFBLK, true},
  {"/dev/sdbr2", BRACK(FH_SDBR | 2), "\\Device\\Harddisk69\\Partition2", exists_ntdev, S_IFBLK, true},
  {"/dev/sdbr3", BRACK(FH_SDBR | 3), "\\Device\\Harddisk69\\Partition3", exists_ntdev, S_IFBLK, true},
  {"/dev/sdbr4", BRACK(FH_SDBR | 4), "\\Device\\Harddisk69\\Partition4", exists_ntdev, S_IFBLK, true},
  {"/dev/sdbr5", BRACK(FH_SDBR | 5), "\\Device\\Harddisk69\\Partition5", exists_ntdev, S_IFBLK, true},
  {"/dev/sdbr6", BRACK(FH_SDBR | 6), "\\Device\\Harddisk69\\Partition6", exists_ntdev, S_IFBLK, true},
  {"/dev/sdbr7", BRACK(FH_SDBR | 7), "\\Device\\Harddisk69\\Partition7", exists_ntdev, S_IFBLK, true},
  {"/dev/sdbr8", BRACK(FH_SDBR | 8), "\\Device\\Harddisk69\\Partition8", exists_ntdev, S_IFBLK, true},
  {"/dev/sdbr9", BRACK(FH_SDBR | 9), "\\Device\\Harddisk69\\Partition9", exists_ntdev, S_IFBLK, true},
  {"/dev/sdbr10", BRACK(FH_SDBR | 10), "\\Device\\Harddisk69\\Partition10", exists_ntdev, S_IFBLK, true},
  {"/dev/sdbr11", BRACK(FH_SDBR | 11), "\\Device\\Harddisk69\\Partition11", exists_ntdev, S_IFBLK, true},
  {"/dev/sdbr12", BRACK(FH_SDBR | 12), "\\Device\\Harddisk69\\Partition12", exists_ntdev, S_IFBLK, true},
  {"/dev/sdbr13", BRACK(FH_SDBR | 13), "\\Device\\Harddisk69\\Partition13", exists_ntdev, S_IFBLK, true},
  {"/dev/sdbr14", BRACK(FH_SDBR | 14), "\\Device\\Harddisk69\\Partition14", exists_ntdev, S_IFBLK, true},
  {"/dev/sdbr15", BRACK(FH_SDBR | 15), "\\Device\\Harddisk69\\Partition15", exists_ntdev, S_IFBLK, true},
  {"/dev/sdbs1", BRACK(FH_SDBS | 1), "\\Device\\Harddisk70\\Partition1", exists_ntdev, S_IFBLK, true},
  {"/dev/sdbs2", BRACK(FH_SDBS | 2), "\\Device\\Harddisk70\\Partition2", exists_ntdev, S_IFBLK, true},
  {"/dev/sdbs3", BRACK(FH_SDBS | 3), "\\Device\\Harddisk70\\Partition3", exists_ntdev, S_IFBLK, true},
  {"/dev/sdbs4", BRACK(FH_SDBS | 4), "\\Device\\Harddisk70\\Partition4", exists_ntdev, S_IFBLK, true},
  {"/dev/sdbs5", BRACK(FH_SDBS | 5), "\\Device\\Harddisk70\\Partition5", exists_ntdev, S_IFBLK, true},
  {"/dev/sdbs6", BRACK(FH_SDBS | 6), "\\Device\\Harddisk70\\Partition6", exists_ntdev, S_IFBLK, true},
  {"/dev/sdbs7", BRACK(FH_SDBS | 7), "\\Device\\Harddisk70\\Partition7", exists_ntdev, S_IFBLK, true},
  {"/dev/sdbs8", BRACK(FH_SDBS | 8), "\\Device\\Harddisk70\\Partition8", exists_ntdev, S_IFBLK, true},
  {"/dev/sdbs9", BRACK(FH_SDBS | 9), "\\Device\\Harddisk70\\Partition9", exists_ntdev, S_IFBLK, true},
  {"/dev/sdbs10", BRACK(FH_SDBS | 10), "\\Device\\Harddisk70\\Partition10", exists_ntdev, S_IFBLK, true},
  {"/dev/sdbs11", BRACK(FH_SDBS | 11), "\\Device\\Harddisk70\\Partition11", exists_ntdev, S_IFBLK, true},
  {"/dev/sdbs12", BRACK(FH_SDBS | 12), "\\Device\\Harddisk70\\Partition12", exists_ntdev, S_IFBLK, true},
  {"/dev/sdbs13", BRACK(FH_SDBS | 13), "\\Device\\Harddisk70\\Partition13", exists_ntdev, S_IFBLK, true},
  {"/dev/sdbs14", BRACK(FH_SDBS | 14), "\\Device\\Harddisk70\\Partition14", exists_ntdev, S_IFBLK, true},
  {"/dev/sdbs15", BRACK(FH_SDBS | 15), "\\Device\\Harddisk70\\Partition15", exists_ntdev, S_IFBLK, true},
  {"/dev/sdbt1", BRACK(FH_SDBT | 1), "\\Device\\Harddisk71\\Partition1", exists_ntdev, S_IFBLK, true},
  {"/dev/sdbt2", BRACK(FH_SDBT | 2), "\\Device\\Harddisk71\\Partition2", exists_ntdev, S_IFBLK, true},
  {"/dev/sdbt3", BRACK(FH_SDBT | 3), "\\Device\\Harddisk71\\Partition3", exists_ntdev, S_IFBLK, true},
  {"/dev/sdbt4", BRACK(FH_SDBT | 4), "\\Device\\Harddisk71\\Partition4", exists_ntdev, S_IFBLK, true},
  {"/dev/sdbt5", BRACK(FH_SDBT | 5), "\\Device\\Harddisk71\\Partition5", exists_ntdev, S_IFBLK, true},
  {"/dev/sdbt6", BRACK(FH_SDBT | 6), "\\Device\\Harddisk71\\Partition6", exists_ntdev, S_IFBLK, true},
  {"/dev/sdbt7", BRACK(FH_SDBT | 7), "\\Device\\Harddisk71\\Partition7", exists_ntdev, S_IFBLK, true},
  {"/dev/sdbt8", BRACK(FH_SDBT | 8), "\\Device\\Harddisk71\\Partition8", exists_ntdev, S_IFBLK, true},
  {"/dev/sdbt9", BRACK(FH_SDBT | 9), "\\Device\\Harddisk71\\Partition9", exists_ntdev, S_IFBLK, true},
  {"/dev/sdbt10", BRACK(FH_SDBT | 10), "\\Device\\Harddisk71\\Partition10", exists_ntdev, S_IFBLK, true},
  {"/dev/sdbt11", BRACK(FH_SDBT | 11), "\\Device\\Harddisk71\\Partition11", exists_ntdev, S_IFBLK, true},
  {"/dev/sdbt12", BRACK(FH_SDBT | 12), "\\Device\\Harddisk71\\Partition12", exists_ntdev, S_IFBLK, true},
  {"/dev/sdbt13", BRACK(FH_SDBT | 13), "\\Device\\Harddisk71\\Partition13", exists_ntdev, S_IFBLK, true},
  {"/dev/sdbt14", BRACK(FH_SDBT | 14), "\\Device\\Harddisk71\\Partition14", exists_ntdev, S_IFBLK, true},
  {"/dev/sdbt15", BRACK(FH_SDBT | 15), "\\Device\\Harddisk71\\Partition15", exists_ntdev, S_IFBLK, true},
  {"/dev/sdbu1", BRACK(FH_SDBU | 1), "\\Device\\Harddisk72\\Partition1", exists_ntdev, S_IFBLK, true},
  {"/dev/sdbu2", BRACK(FH_SDBU | 2), "\\Device\\Harddisk72\\Partition2", exists_ntdev, S_IFBLK, true},
  {"/dev/sdbu3", BRACK(FH_SDBU | 3), "\\Device\\Harddisk72\\Partition3", exists_ntdev, S_IFBLK, true},
  {"/dev/sdbu4", BRACK(FH_SDBU | 4), "\\Device\\Harddisk72\\Partition4", exists_ntdev, S_IFBLK, true},
  {"/dev/sdbu5", BRACK(FH_SDBU | 5), "\\Device\\Harddisk72\\Partition5", exists_ntdev, S_IFBLK, true},
  {"/dev/sdbu6", BRACK(FH_SDBU | 6), "\\Device\\Harddisk72\\Partition6", exists_ntdev, S_IFBLK, true},
  {"/dev/sdbu7", BRACK(FH_SDBU | 7), "\\Device\\Harddisk72\\Partition7", exists_ntdev, S_IFBLK, true},
  {"/dev/sdbu8", BRACK(FH_SDBU | 8), "\\Device\\Harddisk72\\Partition8", exists_ntdev, S_IFBLK, true},
  {"/dev/sdbu9", BRACK(FH_SDBU | 9), "\\Device\\Harddisk72\\Partition9", exists_ntdev, S_IFBLK, true},
  {"/dev/sdbu10", BRACK(FH_SDBU | 10), "\\Device\\Harddisk72\\Partition10", exists_ntdev, S_IFBLK, true},
  {"/dev/sdbu11", BRACK(FH_SDBU | 11), "\\Device\\Harddisk72\\Partition11", exists_ntdev, S_IFBLK, true},
  {"/dev/sdbu12", BRACK(FH_SDBU | 12), "\\Device\\Harddisk72\\Partition12", exists_ntdev, S_IFBLK, true},
  {"/dev/sdbu13", BRACK(FH_SDBU | 13), "\\Device\\Harddisk72\\Partition13", exists_ntdev, S_IFBLK, true},
  {"/dev/sdbu14", BRACK(FH_SDBU | 14), "\\Device\\Harddisk72\\Partition14", exists_ntdev, S_IFBLK, true},
  {"/dev/sdbu15", BRACK(FH_SDBU | 15), "\\Device\\Harddisk72\\Partition15", exists_ntdev, S_IFBLK, true},
  {"/dev/sdbv1", BRACK(FH_SDBV | 1), "\\Device\\Harddisk73\\Partition1", exists_ntdev, S_IFBLK, true},
  {"/dev/sdbv2", BRACK(FH_SDBV | 2), "\\Device\\Harddisk73\\Partition2", exists_ntdev, S_IFBLK, true},
  {"/dev/sdbv3", BRACK(FH_SDBV | 3), "\\Device\\Harddisk73\\Partition3", exists_ntdev, S_IFBLK, true},
  {"/dev/sdbv4", BRACK(FH_SDBV | 4), "\\Device\\Harddisk73\\Partition4", exists_ntdev, S_IFBLK, true},
  {"/dev/sdbv5", BRACK(FH_SDBV | 5), "\\Device\\Harddisk73\\Partition5", exists_ntdev, S_IFBLK, true},
  {"/dev/sdbv6", BRACK(FH_SDBV | 6), "\\Device\\Harddisk73\\Partition6", exists_ntdev, S_IFBLK, true},
  {"/dev/sdbv7", BRACK(FH_SDBV | 7), "\\Device\\Harddisk73\\Partition7", exists_ntdev, S_IFBLK, true},
  {"/dev/sdbv8", BRACK(FH_SDBV | 8), "\\Device\\Harddisk73\\Partition8", exists_ntdev, S_IFBLK, true},
  {"/dev/sdbv9", BRACK(FH_SDBV | 9), "\\Device\\Harddisk73\\Partition9", exists_ntdev, S_IFBLK, true},
  {"/dev/sdbv10", BRACK(FH_SDBV | 10), "\\Device\\Harddisk73\\Partition10", exists_ntdev, S_IFBLK, true},
  {"/dev/sdbv11", BRACK(FH_SDBV | 11), "\\Device\\Harddisk73\\Partition11", exists_ntdev, S_IFBLK, true},
  {"/dev/sdbv12", BRACK(FH_SDBV | 12), "\\Device\\Harddisk73\\Partition12", exists_ntdev, S_IFBLK, true},
  {"/dev/sdbv13", BRACK(FH_SDBV | 13), "\\Device\\Harddisk73\\Partition13", exists_ntdev, S_IFBLK, true},
  {"/dev/sdbv14", BRACK(FH_SDBV | 14), "\\Device\\Harddisk73\\Partition14", exists_ntdev, S_IFBLK, true},
  {"/dev/sdbv15", BRACK(FH_SDBV | 15), "\\Device\\Harddisk73\\Partition15", exists_ntdev, S_IFBLK, true},
  {"/dev/sdbw1", BRACK(FH_SDBW | 1), "\\Device\\Harddisk74\\Partition1", exists_ntdev, S_IFBLK, true},
  {"/dev/sdbw2", BRACK(FH_SDBW | 2), "\\Device\\Harddisk74\\Partition2", exists_ntdev, S_IFBLK, true},
  {"/dev/sdbw3", BRACK(FH_SDBW | 3), "\\Device\\Harddisk74\\Partition3", exists_ntdev, S_IFBLK, true},
  {"/dev/sdbw4", BRACK(FH_SDBW | 4), "\\Device\\Harddisk74\\Partition4", exists_ntdev, S_IFBLK, true},
  {"/dev/sdbw5", BRACK(FH_SDBW | 5), "\\Device\\Harddisk74\\Partition5", exists_ntdev, S_IFBLK, true},
  {"/dev/sdbw6", BRACK(FH_SDBW | 6), "\\Device\\Harddisk74\\Partition6", exists_ntdev, S_IFBLK, true},
  {"/dev/sdbw7", BRACK(FH_SDBW | 7), "\\Device\\Harddisk74\\Partition7", exists_ntdev, S_IFBLK, true},
  {"/dev/sdbw8", BRACK(FH_SDBW | 8), "\\Device\\Harddisk74\\Partition8", exists_ntdev, S_IFBLK, true},
  {"/dev/sdbw9", BRACK(FH_SDBW | 9), "\\Device\\Harddisk74\\Partition9", exists_ntdev, S_IFBLK, true},
  {"/dev/sdbw10", BRACK(FH_SDBW | 10), "\\Device\\Harddisk74\\Partition10", exists_ntdev, S_IFBLK, true},
  {"/dev/sdbw11", BRACK(FH_SDBW | 11), "\\Device\\Harddisk74\\Partition11", exists_ntdev, S_IFBLK, true},
  {"/dev/sdbw12", BRACK(FH_SDBW | 12), "\\Device\\Harddisk74\\Partition12", exists_ntdev, S_IFBLK, true},
  {"/dev/sdbw13", BRACK(FH_SDBW | 13), "\\Device\\Harddisk74\\Partition13", exists_ntdev, S_IFBLK, true},
  {"/dev/sdbw14", BRACK(FH_SDBW | 14), "\\Device\\Harddisk74\\Partition14", exists_ntdev, S_IFBLK, true},
  {"/dev/sdbw15", BRACK(FH_SDBW | 15), "\\Device\\Harddisk74\\Partition15", exists_ntdev, S_IFBLK, true},
  {"/dev/sdbx1", BRACK(FH_SDBX | 1), "\\Device\\Harddisk75\\Partition1", exists_ntdev, S_IFBLK, true},
  {"/dev/sdbx2", BRACK(FH_SDBX | 2), "\\Device\\Harddisk75\\Partition2", exists_ntdev, S_IFBLK, true},
  {"/dev/sdbx3", BRACK(FH_SDBX | 3), "\\Device\\Harddisk75\\Partition3", exists_ntdev, S_IFBLK, true},
  {"/dev/sdbx4", BRACK(FH_SDBX | 4), "\\Device\\Harddisk75\\Partition4", exists_ntdev, S_IFBLK, true},
  {"/dev/sdbx5", BRACK(FH_SDBX | 5), "\\Device\\Harddisk75\\Partition5", exists_ntdev, S_IFBLK, true},
  {"/dev/sdbx6", BRACK(FH_SDBX | 6), "\\Device\\Harddisk75\\Partition6", exists_ntdev, S_IFBLK, true},
  {"/dev/sdbx7", BRACK(FH_SDBX | 7), "\\Device\\Harddisk75\\Partition7", exists_ntdev, S_IFBLK, true},
  {"/dev/sdbx8", BRACK(FH_SDBX | 8), "\\Device\\Harddisk75\\Partition8", exists_ntdev, S_IFBLK, true},
  {"/dev/sdbx9", BRACK(FH_SDBX | 9), "\\Device\\Harddisk75\\Partition9", exists_ntdev, S_IFBLK, true},
  {"/dev/sdbx10", BRACK(FH_SDBX | 10), "\\Device\\Harddisk75\\Partition10", exists_ntdev, S_IFBLK, true},
  {"/dev/sdbx11", BRACK(FH_SDBX | 11), "\\Device\\Harddisk75\\Partition11", exists_ntdev, S_IFBLK, true},
  {"/dev/sdbx12", BRACK(FH_SDBX | 12), "\\Device\\Harddisk75\\Partition12", exists_ntdev, S_IFBLK, true},
  {"/dev/sdbx13", BRACK(FH_SDBX | 13), "\\Device\\Harddisk75\\Partition13", exists_ntdev, S_IFBLK, true},
  {"/dev/sdbx14", BRACK(FH_SDBX | 14), "\\Device\\Harddisk75\\Partition14", exists_ntdev, S_IFBLK, true},
  {"/dev/sdbx15", BRACK(FH_SDBX | 15), "\\Device\\Harddisk75\\Partition15", exists_ntdev, S_IFBLK, true},
  {"/dev/sdby1", BRACK(FH_SDBY | 1), "\\Device\\Harddisk76\\Partition1", exists_ntdev, S_IFBLK, true},
  {"/dev/sdby2", BRACK(FH_SDBY | 2), "\\Device\\Harddisk76\\Partition2", exists_ntdev, S_IFBLK, true},
  {"/dev/sdby3", BRACK(FH_SDBY | 3), "\\Device\\Harddisk76\\Partition3", exists_ntdev, S_IFBLK, true},
  {"/dev/sdby4", BRACK(FH_SDBY | 4), "\\Device\\Harddisk76\\Partition4", exists_ntdev, S_IFBLK, true},
  {"/dev/sdby5", BRACK(FH_SDBY | 5), "\\Device\\Harddisk76\\Partition5", exists_ntdev, S_IFBLK, true},
  {"/dev/sdby6", BRACK(FH_SDBY | 6), "\\Device\\Harddisk76\\Partition6", exists_ntdev, S_IFBLK, true},
  {"/dev/sdby7", BRACK(FH_SDBY | 7), "\\Device\\Harddisk76\\Partition7", exists_ntdev, S_IFBLK, true},
  {"/dev/sdby8", BRACK(FH_SDBY | 8), "\\Device\\Harddisk76\\Partition8", exists_ntdev, S_IFBLK, true},
  {"/dev/sdby9", BRACK(FH_SDBY | 9), "\\Device\\Harddisk76\\Partition9", exists_ntdev, S_IFBLK, true},
  {"/dev/sdby10", BRACK(FH_SDBY | 10), "\\Device\\Harddisk76\\Partition10", exists_ntdev, S_IFBLK, true},
  {"/dev/sdby11", BRACK(FH_SDBY | 11), "\\Device\\Harddisk76\\Partition11", exists_ntdev, S_IFBLK, true},
  {"/dev/sdby12", BRACK(FH_SDBY | 12), "\\Device\\Harddisk76\\Partition12", exists_ntdev, S_IFBLK, true},
  {"/dev/sdby13", BRACK(FH_SDBY | 13), "\\Device\\Harddisk76\\Partition13", exists_ntdev, S_IFBLK, true},
  {"/dev/sdby14", BRACK(FH_SDBY | 14), "\\Device\\Harddisk76\\Partition14", exists_ntdev, S_IFBLK, true},
  {"/dev/sdby15", BRACK(FH_SDBY | 15), "\\Device\\Harddisk76\\Partition15", exists_ntdev, S_IFBLK, true},
  {"/dev/sdbz1", BRACK(FH_SDBZ | 1), "\\Device\\Harddisk77\\Partition1", exists_ntdev, S_IFBLK, true},
  {"/dev/sdbz2", BRACK(FH_SDBZ | 2), "\\Device\\Harddisk77\\Partition2", exists_ntdev, S_IFBLK, true},
  {"/dev/sdbz3", BRACK(FH_SDBZ | 3), "\\Device\\Harddisk77\\Partition3", exists_ntdev, S_IFBLK, true},
  {"/dev/sdbz4", BRACK(FH_SDBZ | 4), "\\Device\\Harddisk77\\Partition4", exists_ntdev, S_IFBLK, true},
  {"/dev/sdbz5", BRACK(FH_SDBZ | 5), "\\Device\\Harddisk77\\Partition5", exists_ntdev, S_IFBLK, true},
  {"/dev/sdbz6", BRACK(FH_SDBZ | 6), "\\Device\\Harddisk77\\Partition6", exists_ntdev, S_IFBLK, true},
  {"/dev/sdbz7", BRACK(FH_SDBZ | 7), "\\Device\\Harddisk77\\Partition7", exists_ntdev, S_IFBLK, true},
  {"/dev/sdbz8", BRACK(FH_SDBZ | 8), "\\Device\\Harddisk77\\Partition8", exists_ntdev, S_IFBLK, true},
  {"/dev/sdbz9", BRACK(FH_SDBZ | 9), "\\Device\\Harddisk77\\Partition9", exists_ntdev, S_IFBLK, true},
  {"/dev/sdbz10", BRACK(FH_SDBZ | 10), "\\Device\\Harddisk77\\Partition10", exists_ntdev, S_IFBLK, true},
  {"/dev/sdbz11", BRACK(FH_SDBZ | 11), "\\Device\\Harddisk77\\Partition11", exists_ntdev, S_IFBLK, true},
  {"/dev/sdbz12", BRACK(FH_SDBZ | 12), "\\Device\\Harddisk77\\Partition12", exists_ntdev, S_IFBLK, true},
  {"/dev/sdbz13", BRACK(FH_SDBZ | 13), "\\Device\\Harddisk77\\Partition13", exists_ntdev, S_IFBLK, true},
  {"/dev/sdbz14", BRACK(FH_SDBZ | 14), "\\Device\\Harddisk77\\Partition14", exists_ntdev, S_IFBLK, true},
  {"/dev/sdbz15", BRACK(FH_SDBZ | 15), "\\Device\\Harddisk77\\Partition15", exists_ntdev, S_IFBLK, true},
  {"/dev/sdca", BRACK(FH_SDCA), "\\Device\\Harddisk78\\Partition0", exists_ntdev, S_IFBLK, true},
  {"/dev/sdcb", BRACK(FH_SDCB), "\\Device\\Harddisk79\\Partition0", exists_ntdev, S_IFBLK, true},
  {"/dev/sdcc", BRACK(FH_SDCC), "\\Device\\Harddisk80\\Partition0", exists_ntdev, S_IFBLK, true},
  {"/dev/sdcd", BRACK(FH_SDCD), "\\Device\\Harddisk81\\Partition0", exists_ntdev, S_IFBLK, true},
  {"/dev/sdce", BRACK(FH_SDCE), "\\Device\\Harddisk82\\Partition0", exists_ntdev, S_IFBLK, true},
  {"/dev/sdcf", BRACK(FH_SDCF), "\\Device\\Harddisk83\\Partition0", exists_ntdev, S_IFBLK, true},
  {"/dev/sdcg", BRACK(FH_SDCG), "\\Device\\Harddisk84\\Partition0", exists_ntdev, S_IFBLK, true},
  {"/dev/sdch", BRACK(FH_SDCH), "\\Device\\Harddisk85\\Partition0", exists_ntdev, S_IFBLK, true},
  {"/dev/sdci", BRACK(FH_SDCI), "\\Device\\Harddisk86\\Partition0", exists_ntdev, S_IFBLK, true},
  {"/dev/sdcj", BRACK(FH_SDCJ), "\\Device\\Harddisk87\\Partition0", exists_ntdev, S_IFBLK, true},
  {"/dev/sdck", BRACK(FH_SDCK), "\\Device\\Harddisk88\\Partition0", exists_ntdev, S_IFBLK, true},
  {"/dev/sdcl", BRACK(FH_SDCL), "\\Device\\Harddisk89\\Partition0", exists_ntdev, S_IFBLK, true},
  {"/dev/sdcm", BRACK(FH_SDCM), "\\Device\\Harddisk90\\Partition0", exists_ntdev, S_IFBLK, true},
  {"/dev/sdcn", BRACK(FH_SDCN), "\\Device\\Harddisk91\\Partition0", exists_ntdev, S_IFBLK, true},
  {"/dev/sdco", BRACK(FH_SDCO), "\\Device\\Harddisk92\\Partition0", exists_ntdev, S_IFBLK, true},
  {"/dev/sdcp", BRACK(FH_SDCP), "\\Device\\Harddisk93\\Partition0", exists_ntdev, S_IFBLK, true},
  {"/dev/sdcq", BRACK(FH_SDCQ), "\\Device\\Harddisk94\\Partition0", exists_ntdev, S_IFBLK, true},
  {"/dev/sdcr", BRACK(FH_SDCR), "\\Device\\Harddisk95\\Partition0", exists_ntdev, S_IFBLK, true},
  {"/dev/sdcs", BRACK(FH_SDCS), "\\Device\\Harddisk96\\Partition0", exists_ntdev, S_IFBLK, true},
  {"/dev/sdct", BRACK(FH_SDCT), "\\Device\\Harddisk97\\Partition0", exists_ntdev, S_IFBLK, true},
  {"/dev/sdcu", BRACK(FH_SDCU), "\\Device\\Harddisk98\\Partition0", exists_ntdev, S_IFBLK, true},
  {"/dev/sdcv", BRACK(FH_SDCV), "\\Device\\Harddisk99\\Partition0", exists_ntdev, S_IFBLK, true},
  {"/dev/sdcw", BRACK(FH_SDCW), "\\Device\\Harddisk100\\Partition0", exists_ntdev, S_IFBLK, true},
  {"/dev/sdcx", BRACK(FH_SDCX), "\\Device\\Harddisk101\\Partition0", exists_ntdev, S_IFBLK, true},
  {"/dev/sdcy", BRACK(FH_SDCY), "\\Device\\Harddisk102\\Partition0", exists_ntdev, S_IFBLK, true},
  {"/dev/sdcz", BRACK(FH_SDCZ), "\\Device\\Harddisk103\\Partition0", exists_ntdev, S_IFBLK, true},
  {"/dev/sdca1", BRACK(FH_SDCA | 1), "\\Device\\Harddisk78\\Partition1", exists_ntdev, S_IFBLK, true},
  {"/dev/sdca2", BRACK(FH_SDCA | 2), "\\Device\\Harddisk78\\Partition2", exists_ntdev, S_IFBLK, true},
  {"/dev/sdca3", BRACK(FH_SDCA | 3), "\\Device\\Harddisk78\\Partition3", exists_ntdev, S_IFBLK, true},
  {"/dev/sdca4", BRACK(FH_SDCA | 4), "\\Device\\Harddisk78\\Partition4", exists_ntdev, S_IFBLK, true},
  {"/dev/sdca5", BRACK(FH_SDCA | 5), "\\Device\\Harddisk78\\Partition5", exists_ntdev, S_IFBLK, true},
  {"/dev/sdca6", BRACK(FH_SDCA | 6), "\\Device\\Harddisk78\\Partition6", exists_ntdev, S_IFBLK, true},
  {"/dev/sdca7", BRACK(FH_SDCA | 7), "\\Device\\Harddisk78\\Partition7", exists_ntdev, S_IFBLK, true},
  {"/dev/sdca8", BRACK(FH_SDCA | 8), "\\Device\\Harddisk78\\Partition8", exists_ntdev, S_IFBLK, true},
  {"/dev/sdca9", BRACK(FH_SDCA | 9), "\\Device\\Harddisk78\\Partition9", exists_ntdev, S_IFBLK, true},
  {"/dev/sdca10", BRACK(FH_SDCA | 10), "\\Device\\Harddisk78\\Partition10", exists_ntdev, S_IFBLK, true},
  {"/dev/sdca11", BRACK(FH_SDCA | 11), "\\Device\\Harddisk78\\Partition11", exists_ntdev, S_IFBLK, true},
  {"/dev/sdca12", BRACK(FH_SDCA | 12), "\\Device\\Harddisk78\\Partition12", exists_ntdev, S_IFBLK, true},
  {"/dev/sdca13", BRACK(FH_SDCA | 13), "\\Device\\Harddisk78\\Partition13", exists_ntdev, S_IFBLK, true},
  {"/dev/sdca14", BRACK(FH_SDCA | 14), "\\Device\\Harddisk78\\Partition14", exists_ntdev, S_IFBLK, true},
  {"/dev/sdca15", BRACK(FH_SDCA | 15), "\\Device\\Harddisk78\\Partition15", exists_ntdev, S_IFBLK, true},
  {"/dev/sdcb1", BRACK(FH_SDCB | 1), "\\Device\\Harddisk79\\Partition1", exists_ntdev, S_IFBLK, true},
  {"/dev/sdcb2", BRACK(FH_SDCB | 2), "\\Device\\Harddisk79\\Partition2", exists_ntdev, S_IFBLK, true},
  {"/dev/sdcb3", BRACK(FH_SDCB | 3), "\\Device\\Harddisk79\\Partition3", exists_ntdev, S_IFBLK, true},
  {"/dev/sdcb4", BRACK(FH_SDCB | 4), "\\Device\\Harddisk79\\Partition4", exists_ntdev, S_IFBLK, true},
  {"/dev/sdcb5", BRACK(FH_SDCB | 5), "\\Device\\Harddisk79\\Partition5", exists_ntdev, S_IFBLK, true},
  {"/dev/sdcb6", BRACK(FH_SDCB | 6), "\\Device\\Harddisk79\\Partition6", exists_ntdev, S_IFBLK, true},
  {"/dev/sdcb7", BRACK(FH_SDCB | 7), "\\Device\\Harddisk79\\Partition7", exists_ntdev, S_IFBLK, true},
  {"/dev/sdcb8", BRACK(FH_SDCB | 8), "\\Device\\Harddisk79\\Partition8", exists_ntdev, S_IFBLK, true},
  {"/dev/sdcb9", BRACK(FH_SDCB | 9), "\\Device\\Harddisk79\\Partition9", exists_ntdev, S_IFBLK, true},
  {"/dev/sdcb10", BRACK(FH_SDCB | 10), "\\Device\\Harddisk79\\Partition10", exists_ntdev, S_IFBLK, true},
  {"/dev/sdcb11", BRACK(FH_SDCB | 11), "\\Device\\Harddisk79\\Partition11", exists_ntdev, S_IFBLK, true},
  {"/dev/sdcb12", BRACK(FH_SDCB | 12), "\\Device\\Harddisk79\\Partition12", exists_ntdev, S_IFBLK, true},
  {"/dev/sdcb13", BRACK(FH_SDCB | 13), "\\Device\\Harddisk79\\Partition13", exists_ntdev, S_IFBLK, true},
  {"/dev/sdcb14", BRACK(FH_SDCB | 14), "\\Device\\Harddisk79\\Partition14", exists_ntdev, S_IFBLK, true},
  {"/dev/sdcb15", BRACK(FH_SDCB | 15), "\\Device\\Harddisk79\\Partition15", exists_ntdev, S_IFBLK, true},
  {"/dev/sdcc1", BRACK(FH_SDCC | 1), "\\Device\\Harddisk80\\Partition1", exists_ntdev, S_IFBLK, true},
  {"/dev/sdcc2", BRACK(FH_SDCC | 2), "\\Device\\Harddisk80\\Partition2", exists_ntdev, S_IFBLK, true},
  {"/dev/sdcc3", BRACK(FH_SDCC | 3), "\\Device\\Harddisk80\\Partition3", exists_ntdev, S_IFBLK, true},
  {"/dev/sdcc4", BRACK(FH_SDCC | 4), "\\Device\\Harddisk80\\Partition4", exists_ntdev, S_IFBLK, true},
  {"/dev/sdcc5", BRACK(FH_SDCC | 5), "\\Device\\Harddisk80\\Partition5", exists_ntdev, S_IFBLK, true},
  {"/dev/sdcc6", BRACK(FH_SDCC | 6), "\\Device\\Harddisk80\\Partition6", exists_ntdev, S_IFBLK, true},
  {"/dev/sdcc7", BRACK(FH_SDCC | 7), "\\Device\\Harddisk80\\Partition7", exists_ntdev, S_IFBLK, true},
  {"/dev/sdcc8", BRACK(FH_SDCC | 8), "\\Device\\Harddisk80\\Partition8", exists_ntdev, S_IFBLK, true},
  {"/dev/sdcc9", BRACK(FH_SDCC | 9), "\\Device\\Harddisk80\\Partition9", exists_ntdev, S_IFBLK, true},
  {"/dev/sdcc10", BRACK(FH_SDCC | 10), "\\Device\\Harddisk80\\Partition10", exists_ntdev, S_IFBLK, true},
  {"/dev/sdcc11", BRACK(FH_SDCC | 11), "\\Device\\Harddisk80\\Partition11", exists_ntdev, S_IFBLK, true},
  {"/dev/sdcc12", BRACK(FH_SDCC | 12), "\\Device\\Harddisk80\\Partition12", exists_ntdev, S_IFBLK, true},
  {"/dev/sdcc13", BRACK(FH_SDCC | 13), "\\Device\\Harddisk80\\Partition13", exists_ntdev, S_IFBLK, true},
  {"/dev/sdcc14", BRACK(FH_SDCC | 14), "\\Device\\Harddisk80\\Partition14", exists_ntdev, S_IFBLK, true},
  {"/dev/sdcc15", BRACK(FH_SDCC | 15), "\\Device\\Harddisk80\\Partition15", exists_ntdev, S_IFBLK, true},
  {"/dev/sdcd1", BRACK(FH_SDCD | 1), "\\Device\\Harddisk81\\Partition1", exists_ntdev, S_IFBLK, true},
  {"/dev/sdcd2", BRACK(FH_SDCD | 2), "\\Device\\Harddisk81\\Partition2", exists_ntdev, S_IFBLK, true},
  {"/dev/sdcd3", BRACK(FH_SDCD | 3), "\\Device\\Harddisk81\\Partition3", exists_ntdev, S_IFBLK, true},
  {"/dev/sdcd4", BRACK(FH_SDCD | 4), "\\Device\\Harddisk81\\Partition4", exists_ntdev, S_IFBLK, true},
  {"/dev/sdcd5", BRACK(FH_SDCD | 5), "\\Device\\Harddisk81\\Partition5", exists_ntdev, S_IFBLK, true},
  {"/dev/sdcd6", BRACK(FH_SDCD | 6), "\\Device\\Harddisk81\\Partition6", exists_ntdev, S_IFBLK, true},
  {"/dev/sdcd7", BRACK(FH_SDCD | 7), "\\Device\\Harddisk81\\Partition7", exists_ntdev, S_IFBLK, true},
  {"/dev/sdcd8", BRACK(FH_SDCD | 8), "\\Device\\Harddisk81\\Partition8", exists_ntdev, S_IFBLK, true},
  {"/dev/sdcd9", BRACK(FH_SDCD | 9), "\\Device\\Harddisk81\\Partition9", exists_ntdev, S_IFBLK, true},
  {"/dev/sdcd10", BRACK(FH_SDCD | 10), "\\Device\\Harddisk81\\Partition10", exists_ntdev, S_IFBLK, true},
  {"/dev/sdcd11", BRACK(FH_SDCD | 11), "\\Device\\Harddisk81\\Partition11", exists_ntdev, S_IFBLK, true},
  {"/dev/sdcd12", BRACK(FH_SDCD | 12), "\\Device\\Harddisk81\\Partition12", exists_ntdev, S_IFBLK, true},
  {"/dev/sdcd13", BRACK(FH_SDCD | 13), "\\Device\\Harddisk81\\Partition13", exists_ntdev, S_IFBLK, true},
  {"/dev/sdcd14", BRACK(FH_SDCD | 14), "\\Device\\Harddisk81\\Partition14", exists_ntdev, S_IFBLK, true},
  {"/dev/sdcd15", BRACK(FH_SDCD | 15), "\\Device\\Harddisk81\\Partition15", exists_ntdev, S_IFBLK, true},
  {"/dev/sdce1", BRACK(FH_SDCE | 1), "\\Device\\Harddisk82\\Partition1", exists_ntdev, S_IFBLK, true},
  {"/dev/sdce2", BRACK(FH_SDCE | 2), "\\Device\\Harddisk82\\Partition2", exists_ntdev, S_IFBLK, true},
  {"/dev/sdce3", BRACK(FH_SDCE | 3), "\\Device\\Harddisk82\\Partition3", exists_ntdev, S_IFBLK, true},
  {"/dev/sdce4", BRACK(FH_SDCE | 4), "\\Device\\Harddisk82\\Partition4", exists_ntdev, S_IFBLK, true},
  {"/dev/sdce5", BRACK(FH_SDCE | 5), "\\Device\\Harddisk82\\Partition5", exists_ntdev, S_IFBLK, true},
  {"/dev/sdce6", BRACK(FH_SDCE | 6), "\\Device\\Harddisk82\\Partition6", exists_ntdev, S_IFBLK, true},
  {"/dev/sdce7", BRACK(FH_SDCE | 7), "\\Device\\Harddisk82\\Partition7", exists_ntdev, S_IFBLK, true},
  {"/dev/sdce8", BRACK(FH_SDCE | 8), "\\Device\\Harddisk82\\Partition8", exists_ntdev, S_IFBLK, true},
  {"/dev/sdce9", BRACK(FH_SDCE | 9), "\\Device\\Harddisk82\\Partition9", exists_ntdev, S_IFBLK, true},
  {"/dev/sdce10", BRACK(FH_SDCE | 10), "\\Device\\Harddisk82\\Partition10", exists_ntdev, S_IFBLK, true},
  {"/dev/sdce11", BRACK(FH_SDCE | 11), "\\Device\\Harddisk82\\Partition11", exists_ntdev, S_IFBLK, true},
  {"/dev/sdce12", BRACK(FH_SDCE | 12), "\\Device\\Harddisk82\\Partition12", exists_ntdev, S_IFBLK, true},
  {"/dev/sdce13", BRACK(FH_SDCE | 13), "\\Device\\Harddisk82\\Partition13", exists_ntdev, S_IFBLK, true},
  {"/dev/sdce14", BRACK(FH_SDCE | 14), "\\Device\\Harddisk82\\Partition14", exists_ntdev, S_IFBLK, true},
  {"/dev/sdce15", BRACK(FH_SDCE | 15), "\\Device\\Harddisk82\\Partition15", exists_ntdev, S_IFBLK, true},
  {"/dev/sdcf1", BRACK(FH_SDCF | 1), "\\Device\\Harddisk83\\Partition1", exists_ntdev, S_IFBLK, true},
  {"/dev/sdcf2", BRACK(FH_SDCF | 2), "\\Device\\Harddisk83\\Partition2", exists_ntdev, S_IFBLK, true},
  {"/dev/sdcf3", BRACK(FH_SDCF | 3), "\\Device\\Harddisk83\\Partition3", exists_ntdev, S_IFBLK, true},
  {"/dev/sdcf4", BRACK(FH_SDCF | 4), "\\Device\\Harddisk83\\Partition4", exists_ntdev, S_IFBLK, true},
  {"/dev/sdcf5", BRACK(FH_SDCF | 5), "\\Device\\Harddisk83\\Partition5", exists_ntdev, S_IFBLK, true},
  {"/dev/sdcf6", BRACK(FH_SDCF | 6), "\\Device\\Harddisk83\\Partition6", exists_ntdev, S_IFBLK, true},
  {"/dev/sdcf7", BRACK(FH_SDCF | 7), "\\Device\\Harddisk83\\Partition7", exists_ntdev, S_IFBLK, true},
  {"/dev/sdcf8", BRACK(FH_SDCF | 8), "\\Device\\Harddisk83\\Partition8", exists_ntdev, S_IFBLK, true},
  {"/dev/sdcf9", BRACK(FH_SDCF | 9), "\\Device\\Harddisk83\\Partition9", exists_ntdev, S_IFBLK, true},
  {"/dev/sdcf10", BRACK(FH_SDCF | 10), "\\Device\\Harddisk83\\Partition10", exists_ntdev, S_IFBLK, true},
  {"/dev/sdcf11", BRACK(FH_SDCF | 11), "\\Device\\Harddisk83\\Partition11", exists_ntdev, S_IFBLK, true},
  {"/dev/sdcf12", BRACK(FH_SDCF | 12), "\\Device\\Harddisk83\\Partition12", exists_ntdev, S_IFBLK, true},
  {"/dev/sdcf13", BRACK(FH_SDCF | 13), "\\Device\\Harddisk83\\Partition13", exists_ntdev, S_IFBLK, true},
  {"/dev/sdcf14", BRACK(FH_SDCF | 14), "\\Device\\Harddisk83\\Partition14", exists_ntdev, S_IFBLK, true},
  {"/dev/sdcf15", BRACK(FH_SDCF | 15), "\\Device\\Harddisk83\\Partition15", exists_ntdev, S_IFBLK, true},
  {"/dev/sdcg1", BRACK(FH_SDCG | 1), "\\Device\\Harddisk84\\Partition1", exists_ntdev, S_IFBLK, true},
  {"/dev/sdcg2", BRACK(FH_SDCG | 2), "\\Device\\Harddisk84\\Partition2", exists_ntdev, S_IFBLK, true},
  {"/dev/sdcg3", BRACK(FH_SDCG | 3), "\\Device\\Harddisk84\\Partition3", exists_ntdev, S_IFBLK, true},
  {"/dev/sdcg4", BRACK(FH_SDCG | 4), "\\Device\\Harddisk84\\Partition4", exists_ntdev, S_IFBLK, true},
  {"/dev/sdcg5", BRACK(FH_SDCG | 5), "\\Device\\Harddisk84\\Partition5", exists_ntdev, S_IFBLK, true},
  {"/dev/sdcg6", BRACK(FH_SDCG | 6), "\\Device\\Harddisk84\\Partition6", exists_ntdev, S_IFBLK, true},
  {"/dev/sdcg7", BRACK(FH_SDCG | 7), "\\Device\\Harddisk84\\Partition7", exists_ntdev, S_IFBLK, true},
  {"/dev/sdcg8", BRACK(FH_SDCG | 8), "\\Device\\Harddisk84\\Partition8", exists_ntdev, S_IFBLK, true},
  {"/dev/sdcg9", BRACK(FH_SDCG | 9), "\\Device\\Harddisk84\\Partition9", exists_ntdev, S_IFBLK, true},
  {"/dev/sdcg10", BRACK(FH_SDCG | 10), "\\Device\\Harddisk84\\Partition10", exists_ntdev, S_IFBLK, true},
  {"/dev/sdcg11", BRACK(FH_SDCG | 11), "\\Device\\Harddisk84\\Partition11", exists_ntdev, S_IFBLK, true},
  {"/dev/sdcg12", BRACK(FH_SDCG | 12), "\\Device\\Harddisk84\\Partition12", exists_ntdev, S_IFBLK, true},
  {"/dev/sdcg13", BRACK(FH_SDCG | 13), "\\Device\\Harddisk84\\Partition13", exists_ntdev, S_IFBLK, true},
  {"/dev/sdcg14", BRACK(FH_SDCG | 14), "\\Device\\Harddisk84\\Partition14", exists_ntdev, S_IFBLK, true},
  {"/dev/sdcg15", BRACK(FH_SDCG | 15), "\\Device\\Harddisk84\\Partition15", exists_ntdev, S_IFBLK, true},
  {"/dev/sdch1", BRACK(FH_SDCH | 1), "\\Device\\Harddisk85\\Partition1", exists_ntdev, S_IFBLK, true},
  {"/dev/sdch2", BRACK(FH_SDCH | 2), "\\Device\\Harddisk85\\Partition2", exists_ntdev, S_IFBLK, true},
  {"/dev/sdch3", BRACK(FH_SDCH | 3), "\\Device\\Harddisk85\\Partition3", exists_ntdev, S_IFBLK, true},
  {"/dev/sdch4", BRACK(FH_SDCH | 4), "\\Device\\Harddisk85\\Partition4", exists_ntdev, S_IFBLK, true},
  {"/dev/sdch5", BRACK(FH_SDCH | 5), "\\Device\\Harddisk85\\Partition5", exists_ntdev, S_IFBLK, true},
  {"/dev/sdch6", BRACK(FH_SDCH | 6), "\\Device\\Harddisk85\\Partition6", exists_ntdev, S_IFBLK, true},
  {"/dev/sdch7", BRACK(FH_SDCH | 7), "\\Device\\Harddisk85\\Partition7", exists_ntdev, S_IFBLK, true},
  {"/dev/sdch8", BRACK(FH_SDCH | 8), "\\Device\\Harddisk85\\Partition8", exists_ntdev, S_IFBLK, true},
  {"/dev/sdch9", BRACK(FH_SDCH | 9), "\\Device\\Harddisk85\\Partition9", exists_ntdev, S_IFBLK, true},
  {"/dev/sdch10", BRACK(FH_SDCH | 10), "\\Device\\Harddisk85\\Partition10", exists_ntdev, S_IFBLK, true},
  {"/dev/sdch11", BRACK(FH_SDCH | 11), "\\Device\\Harddisk85\\Partition11", exists_ntdev, S_IFBLK, true},
  {"/dev/sdch12", BRACK(FH_SDCH | 12), "\\Device\\Harddisk85\\Partition12", exists_ntdev, S_IFBLK, true},
  {"/dev/sdch13", BRACK(FH_SDCH | 13), "\\Device\\Harddisk85\\Partition13", exists_ntdev, S_IFBLK, true},
  {"/dev/sdch14", BRACK(FH_SDCH | 14), "\\Device\\Harddisk85\\Partition14", exists_ntdev, S_IFBLK, true},
  {"/dev/sdch15", BRACK(FH_SDCH | 15), "\\Device\\Harddisk85\\Partition15", exists_ntdev, S_IFBLK, true},
  {"/dev/sdci1", BRACK(FH_SDCI | 1), "\\Device\\Harddisk86\\Partition1", exists_ntdev, S_IFBLK, true},
  {"/dev/sdci2", BRACK(FH_SDCI | 2), "\\Device\\Harddisk86\\Partition2", exists_ntdev, S_IFBLK, true},
  {"/dev/sdci3", BRACK(FH_SDCI | 3), "\\Device\\Harddisk86\\Partition3", exists_ntdev, S_IFBLK, true},
  {"/dev/sdci4", BRACK(FH_SDCI | 4), "\\Device\\Harddisk86\\Partition4", exists_ntdev, S_IFBLK, true},
  {"/dev/sdci5", BRACK(FH_SDCI | 5), "\\Device\\Harddisk86\\Partition5", exists_ntdev, S_IFBLK, true},
  {"/dev/sdci6", BRACK(FH_SDCI | 6), "\\Device\\Harddisk86\\Partition6", exists_ntdev, S_IFBLK, true},
  {"/dev/sdci7", BRACK(FH_SDCI | 7), "\\Device\\Harddisk86\\Partition7", exists_ntdev, S_IFBLK, true},
  {"/dev/sdci8", BRACK(FH_SDCI | 8), "\\Device\\Harddisk86\\Partition8", exists_ntdev, S_IFBLK, true},
  {"/dev/sdci9", BRACK(FH_SDCI | 9), "\\Device\\Harddisk86\\Partition9", exists_ntdev, S_IFBLK, true},
  {"/dev/sdci10", BRACK(FH_SDCI | 10), "\\Device\\Harddisk86\\Partition10", exists_ntdev, S_IFBLK, true},
  {"/dev/sdci11", BRACK(FH_SDCI | 11), "\\Device\\Harddisk86\\Partition11", exists_ntdev, S_IFBLK, true},
  {"/dev/sdci12", BRACK(FH_SDCI | 12), "\\Device\\Harddisk86\\Partition12", exists_ntdev, S_IFBLK, true},
  {"/dev/sdci13", BRACK(FH_SDCI | 13), "\\Device\\Harddisk86\\Partition13", exists_ntdev, S_IFBLK, true},
  {"/dev/sdci14", BRACK(FH_SDCI | 14), "\\Device\\Harddisk86\\Partition14", exists_ntdev, S_IFBLK, true},
  {"/dev/sdci15", BRACK(FH_SDCI | 15), "\\Device\\Harddisk86\\Partition15", exists_ntdev, S_IFBLK, true},
  {"/dev/sdcj1", BRACK(FH_SDCJ | 1), "\\Device\\Harddisk87\\Partition1", exists_ntdev, S_IFBLK, true},
  {"/dev/sdcj2", BRACK(FH_SDCJ | 2), "\\Device\\Harddisk87\\Partition2", exists_ntdev, S_IFBLK, true},
  {"/dev/sdcj3", BRACK(FH_SDCJ | 3), "\\Device\\Harddisk87\\Partition3", exists_ntdev, S_IFBLK, true},
  {"/dev/sdcj4", BRACK(FH_SDCJ | 4), "\\Device\\Harddisk87\\Partition4", exists_ntdev, S_IFBLK, true},
  {"/dev/sdcj5", BRACK(FH_SDCJ | 5), "\\Device\\Harddisk87\\Partition5", exists_ntdev, S_IFBLK, true},
  {"/dev/sdcj6", BRACK(FH_SDCJ | 6), "\\Device\\Harddisk87\\Partition6", exists_ntdev, S_IFBLK, true},
  {"/dev/sdcj7", BRACK(FH_SDCJ | 7), "\\Device\\Harddisk87\\Partition7", exists_ntdev, S_IFBLK, true},
  {"/dev/sdcj8", BRACK(FH_SDCJ | 8), "\\Device\\Harddisk87\\Partition8", exists_ntdev, S_IFBLK, true},
  {"/dev/sdcj9", BRACK(FH_SDCJ | 9), "\\Device\\Harddisk87\\Partition9", exists_ntdev, S_IFBLK, true},
  {"/dev/sdcj10", BRACK(FH_SDCJ | 10), "\\Device\\Harddisk87\\Partition10", exists_ntdev, S_IFBLK, true},
  {"/dev/sdcj11", BRACK(FH_SDCJ | 11), "\\Device\\Harddisk87\\Partition11", exists_ntdev, S_IFBLK, true},
  {"/dev/sdcj12", BRACK(FH_SDCJ | 12), "\\Device\\Harddisk87\\Partition12", exists_ntdev, S_IFBLK, true},
  {"/dev/sdcj13", BRACK(FH_SDCJ | 13), "\\Device\\Harddisk87\\Partition13", exists_ntdev, S_IFBLK, true},
  {"/dev/sdcj14", BRACK(FH_SDCJ | 14), "\\Device\\Harddisk87\\Partition14", exists_ntdev, S_IFBLK, true},
  {"/dev/sdcj15", BRACK(FH_SDCJ | 15), "\\Device\\Harddisk87\\Partition15", exists_ntdev, S_IFBLK, true},
  {"/dev/sdck1", BRACK(FH_SDCK | 1), "\\Device\\Harddisk88\\Partition1", exists_ntdev, S_IFBLK, true},
  {"/dev/sdck2", BRACK(FH_SDCK | 2), "\\Device\\Harddisk88\\Partition2", exists_ntdev, S_IFBLK, true},
  {"/dev/sdck3", BRACK(FH_SDCK | 3), "\\Device\\Harddisk88\\Partition3", exists_ntdev, S_IFBLK, true},
  {"/dev/sdck4", BRACK(FH_SDCK | 4), "\\Device\\Harddisk88\\Partition4", exists_ntdev, S_IFBLK, true},
  {"/dev/sdck5", BRACK(FH_SDCK | 5), "\\Device\\Harddisk88\\Partition5", exists_ntdev, S_IFBLK, true},
  {"/dev/sdck6", BRACK(FH_SDCK | 6), "\\Device\\Harddisk88\\Partition6", exists_ntdev, S_IFBLK, true},
  {"/dev/sdck7", BRACK(FH_SDCK | 7), "\\Device\\Harddisk88\\Partition7", exists_ntdev, S_IFBLK, true},
  {"/dev/sdck8", BRACK(FH_SDCK | 8), "\\Device\\Harddisk88\\Partition8", exists_ntdev, S_IFBLK, true},
  {"/dev/sdck9", BRACK(FH_SDCK | 9), "\\Device\\Harddisk88\\Partition9", exists_ntdev, S_IFBLK, true},
  {"/dev/sdck10", BRACK(FH_SDCK | 10), "\\Device\\Harddisk88\\Partition10", exists_ntdev, S_IFBLK, true},
  {"/dev/sdck11", BRACK(FH_SDCK | 11), "\\Device\\Harddisk88\\Partition11", exists_ntdev, S_IFBLK, true},
  {"/dev/sdck12", BRACK(FH_SDCK | 12), "\\Device\\Harddisk88\\Partition12", exists_ntdev, S_IFBLK, true},
  {"/dev/sdck13", BRACK(FH_SDCK | 13), "\\Device\\Harddisk88\\Partition13", exists_ntdev, S_IFBLK, true},
  {"/dev/sdck14", BRACK(FH_SDCK | 14), "\\Device\\Harddisk88\\Partition14", exists_ntdev, S_IFBLK, true},
  {"/dev/sdck15", BRACK(FH_SDCK | 15), "\\Device\\Harddisk88\\Partition15", exists_ntdev, S_IFBLK, true},
  {"/dev/sdcl1", BRACK(FH_SDCL | 1), "\\Device\\Harddisk89\\Partition1", exists_ntdev, S_IFBLK, true},
  {"/dev/sdcl2", BRACK(FH_SDCL | 2), "\\Device\\Harddisk89\\Partition2", exists_ntdev, S_IFBLK, true},
  {"/dev/sdcl3", BRACK(FH_SDCL | 3), "\\Device\\Harddisk89\\Partition3", exists_ntdev, S_IFBLK, true},
  {"/dev/sdcl4", BRACK(FH_SDCL | 4), "\\Device\\Harddisk89\\Partition4", exists_ntdev, S_IFBLK, true},
  {"/dev/sdcl5", BRACK(FH_SDCL | 5), "\\Device\\Harddisk89\\Partition5", exists_ntdev, S_IFBLK, true},
  {"/dev/sdcl6", BRACK(FH_SDCL | 6), "\\Device\\Harddisk89\\Partition6", exists_ntdev, S_IFBLK, true},
  {"/dev/sdcl7", BRACK(FH_SDCL | 7), "\\Device\\Harddisk89\\Partition7", exists_ntdev, S_IFBLK, true},
  {"/dev/sdcl8", BRACK(FH_SDCL | 8), "\\Device\\Harddisk89\\Partition8", exists_ntdev, S_IFBLK, true},
  {"/dev/sdcl9", BRACK(FH_SDCL | 9), "\\Device\\Harddisk89\\Partition9", exists_ntdev, S_IFBLK, true},
  {"/dev/sdcl10", BRACK(FH_SDCL | 10), "\\Device\\Harddisk89\\Partition10", exists_ntdev, S_IFBLK, true},
  {"/dev/sdcl11", BRACK(FH_SDCL | 11), "\\Device\\Harddisk89\\Partition11", exists_ntdev, S_IFBLK, true},
  {"/dev/sdcl12", BRACK(FH_SDCL | 12), "\\Device\\Harddisk89\\Partition12", exists_ntdev, S_IFBLK, true},
  {"/dev/sdcl13", BRACK(FH_SDCL | 13), "\\Device\\Harddisk89\\Partition13", exists_ntdev, S_IFBLK, true},
  {"/dev/sdcl14", BRACK(FH_SDCL | 14), "\\Device\\Harddisk89\\Partition14", exists_ntdev, S_IFBLK, true},
  {"/dev/sdcl15", BRACK(FH_SDCL | 15), "\\Device\\Harddisk89\\Partition15", exists_ntdev, S_IFBLK, true},
  {"/dev/sdcm1", BRACK(FH_SDCM | 1), "\\Device\\Harddisk90\\Partition1", exists_ntdev, S_IFBLK, true},
  {"/dev/sdcm2", BRACK(FH_SDCM | 2), "\\Device\\Harddisk90\\Partition2", exists_ntdev, S_IFBLK, true},
  {"/dev/sdcm3", BRACK(FH_SDCM | 3), "\\Device\\Harddisk90\\Partition3", exists_ntdev, S_IFBLK, true},
  {"/dev/sdcm4", BRACK(FH_SDCM | 4), "\\Device\\Harddisk90\\Partition4", exists_ntdev, S_IFBLK, true},
  {"/dev/sdcm5", BRACK(FH_SDCM | 5), "\\Device\\Harddisk90\\Partition5", exists_ntdev, S_IFBLK, true},
  {"/dev/sdcm6", BRACK(FH_SDCM | 6), "\\Device\\Harddisk90\\Partition6", exists_ntdev, S_IFBLK, true},
  {"/dev/sdcm7", BRACK(FH_SDCM | 7), "\\Device\\Harddisk90\\Partition7", exists_ntdev, S_IFBLK, true},
  {"/dev/sdcm8", BRACK(FH_SDCM | 8), "\\Device\\Harddisk90\\Partition8", exists_ntdev, S_IFBLK, true},
  {"/dev/sdcm9", BRACK(FH_SDCM | 9), "\\Device\\Harddisk90\\Partition9", exists_ntdev, S_IFBLK, true},
  {"/dev/sdcm10", BRACK(FH_SDCM | 10), "\\Device\\Harddisk90\\Partition10", exists_ntdev, S_IFBLK, true},
  {"/dev/sdcm11", BRACK(FH_SDCM | 11), "\\Device\\Harddisk90\\Partition11", exists_ntdev, S_IFBLK, true},
  {"/dev/sdcm12", BRACK(FH_SDCM | 12), "\\Device\\Harddisk90\\Partition12", exists_ntdev, S_IFBLK, true},
  {"/dev/sdcm13", BRACK(FH_SDCM | 13), "\\Device\\Harddisk90\\Partition13", exists_ntdev, S_IFBLK, true},
  {"/dev/sdcm14", BRACK(FH_SDCM | 14), "\\Device\\Harddisk90\\Partition14", exists_ntdev, S_IFBLK, true},
  {"/dev/sdcm15", BRACK(FH_SDCM | 15), "\\Device\\Harddisk90\\Partition15", exists_ntdev, S_IFBLK, true},
  {"/dev/sdcn1", BRACK(FH_SDCN | 1), "\\Device\\Harddisk91\\Partition1", exists_ntdev, S_IFBLK, true},
  {"/dev/sdcn2", BRACK(FH_SDCN | 2), "\\Device\\Harddisk91\\Partition2", exists_ntdev, S_IFBLK, true},
  {"/dev/sdcn3", BRACK(FH_SDCN | 3), "\\Device\\Harddisk91\\Partition3", exists_ntdev, S_IFBLK, true},
  {"/dev/sdcn4", BRACK(FH_SDCN | 4), "\\Device\\Harddisk91\\Partition4", exists_ntdev, S_IFBLK, true},
  {"/dev/sdcn5", BRACK(FH_SDCN | 5), "\\Device\\Harddisk91\\Partition5", exists_ntdev, S_IFBLK, true},
  {"/dev/sdcn6", BRACK(FH_SDCN | 6), "\\Device\\Harddisk91\\Partition6", exists_ntdev, S_IFBLK, true},
  {"/dev/sdcn7", BRACK(FH_SDCN | 7), "\\Device\\Harddisk91\\Partition7", exists_ntdev, S_IFBLK, true},
  {"/dev/sdcn8", BRACK(FH_SDCN | 8), "\\Device\\Harddisk91\\Partition8", exists_ntdev, S_IFBLK, true},
  {"/dev/sdcn9", BRACK(FH_SDCN | 9), "\\Device\\Harddisk91\\Partition9", exists_ntdev, S_IFBLK, true},
  {"/dev/sdcn10", BRACK(FH_SDCN | 10), "\\Device\\Harddisk91\\Partition10", exists_ntdev, S_IFBLK, true},
  {"/dev/sdcn11", BRACK(FH_SDCN | 11), "\\Device\\Harddisk91\\Partition11", exists_ntdev, S_IFBLK, true},
  {"/dev/sdcn12", BRACK(FH_SDCN | 12), "\\Device\\Harddisk91\\Partition12", exists_ntdev, S_IFBLK, true},
  {"/dev/sdcn13", BRACK(FH_SDCN | 13), "\\Device\\Harddisk91\\Partition13", exists_ntdev, S_IFBLK, true},
  {"/dev/sdcn14", BRACK(FH_SDCN | 14), "\\Device\\Harddisk91\\Partition14", exists_ntdev, S_IFBLK, true},
  {"/dev/sdcn15", BRACK(FH_SDCN | 15), "\\Device\\Harddisk91\\Partition15", exists_ntdev, S_IFBLK, true},
  {"/dev/sdco1", BRACK(FH_SDCO | 1), "\\Device\\Harddisk92\\Partition1", exists_ntdev, S_IFBLK, true},
  {"/dev/sdco2", BRACK(FH_SDCO | 2), "\\Device\\Harddisk92\\Partition2", exists_ntdev, S_IFBLK, true},
  {"/dev/sdco3", BRACK(FH_SDCO | 3), "\\Device\\Harddisk92\\Partition3", exists_ntdev, S_IFBLK, true},
  {"/dev/sdco4", BRACK(FH_SDCO | 4), "\\Device\\Harddisk92\\Partition4", exists_ntdev, S_IFBLK, true},
  {"/dev/sdco5", BRACK(FH_SDCO | 5), "\\Device\\Harddisk92\\Partition5", exists_ntdev, S_IFBLK, true},
  {"/dev/sdco6", BRACK(FH_SDCO | 6), "\\Device\\Harddisk92\\Partition6", exists_ntdev, S_IFBLK, true},
  {"/dev/sdco7", BRACK(FH_SDCO | 7), "\\Device\\Harddisk92\\Partition7", exists_ntdev, S_IFBLK, true},
  {"/dev/sdco8", BRACK(FH_SDCO | 8), "\\Device\\Harddisk92\\Partition8", exists_ntdev, S_IFBLK, true},
  {"/dev/sdco9", BRACK(FH_SDCO | 9), "\\Device\\Harddisk92\\Partition9", exists_ntdev, S_IFBLK, true},
  {"/dev/sdco10", BRACK(FH_SDCO | 10), "\\Device\\Harddisk92\\Partition10", exists_ntdev, S_IFBLK, true},
  {"/dev/sdco11", BRACK(FH_SDCO | 11), "\\Device\\Harddisk92\\Partition11", exists_ntdev, S_IFBLK, true},
  {"/dev/sdco12", BRACK(FH_SDCO | 12), "\\Device\\Harddisk92\\Partition12", exists_ntdev, S_IFBLK, true},
  {"/dev/sdco13", BRACK(FH_SDCO | 13), "\\Device\\Harddisk92\\Partition13", exists_ntdev, S_IFBLK, true},
  {"/dev/sdco14", BRACK(FH_SDCO | 14), "\\Device\\Harddisk92\\Partition14", exists_ntdev, S_IFBLK, true},
  {"/dev/sdco15", BRACK(FH_SDCO | 15), "\\Device\\Harddisk92\\Partition15", exists_ntdev, S_IFBLK, true},
  {"/dev/sdcp1", BRACK(FH_SDCP | 1), "\\Device\\Harddisk93\\Partition1", exists_ntdev, S_IFBLK, true},
  {"/dev/sdcp2", BRACK(FH_SDCP | 2), "\\Device\\Harddisk93\\Partition2", exists_ntdev, S_IFBLK, true},
  {"/dev/sdcp3", BRACK(FH_SDCP | 3), "\\Device\\Harddisk93\\Partition3", exists_ntdev, S_IFBLK, true},
  {"/dev/sdcp4", BRACK(FH_SDCP | 4), "\\Device\\Harddisk93\\Partition4", exists_ntdev, S_IFBLK, true},
  {"/dev/sdcp5", BRACK(FH_SDCP | 5), "\\Device\\Harddisk93\\Partition5", exists_ntdev, S_IFBLK, true},
  {"/dev/sdcp6", BRACK(FH_SDCP | 6), "\\Device\\Harddisk93\\Partition6", exists_ntdev, S_IFBLK, true},
  {"/dev/sdcp7", BRACK(FH_SDCP | 7), "\\Device\\Harddisk93\\Partition7", exists_ntdev, S_IFBLK, true},
  {"/dev/sdcp8", BRACK(FH_SDCP | 8), "\\Device\\Harddisk93\\Partition8", exists_ntdev, S_IFBLK, true},
  {"/dev/sdcp9", BRACK(FH_SDCP | 9), "\\Device\\Harddisk93\\Partition9", exists_ntdev, S_IFBLK, true},
  {"/dev/sdcp10", BRACK(FH_SDCP | 10), "\\Device\\Harddisk93\\Partition10", exists_ntdev, S_IFBLK, true},
  {"/dev/sdcp11", BRACK(FH_SDCP | 11), "\\Device\\Harddisk93\\Partition11", exists_ntdev, S_IFBLK, true},
  {"/dev/sdcp12", BRACK(FH_SDCP | 12), "\\Device\\Harddisk93\\Partition12", exists_ntdev, S_IFBLK, true},
  {"/dev/sdcp13", BRACK(FH_SDCP | 13), "\\Device\\Harddisk93\\Partition13", exists_ntdev, S_IFBLK, true},
  {"/dev/sdcp14", BRACK(FH_SDCP | 14), "\\Device\\Harddisk93\\Partition14", exists_ntdev, S_IFBLK, true},
  {"/dev/sdcp15", BRACK(FH_SDCP | 15), "\\Device\\Harddisk93\\Partition15", exists_ntdev, S_IFBLK, true},
  {"/dev/sdcq1", BRACK(FH_SDCQ | 1), "\\Device\\Harddisk94\\Partition1", exists_ntdev, S_IFBLK, true},
  {"/dev/sdcq2", BRACK(FH_SDCQ | 2), "\\Device\\Harddisk94\\Partition2", exists_ntdev, S_IFBLK, true},
  {"/dev/sdcq3", BRACK(FH_SDCQ | 3), "\\Device\\Harddisk94\\Partition3", exists_ntdev, S_IFBLK, true},
  {"/dev/sdcq4", BRACK(FH_SDCQ | 4), "\\Device\\Harddisk94\\Partition4", exists_ntdev, S_IFBLK, true},
  {"/dev/sdcq5", BRACK(FH_SDCQ | 5), "\\Device\\Harddisk94\\Partition5", exists_ntdev, S_IFBLK, true},
  {"/dev/sdcq6", BRACK(FH_SDCQ | 6), "\\Device\\Harddisk94\\Partition6", exists_ntdev, S_IFBLK, true},
  {"/dev/sdcq7", BRACK(FH_SDCQ | 7), "\\Device\\Harddisk94\\Partition7", exists_ntdev, S_IFBLK, true},
  {"/dev/sdcq8", BRACK(FH_SDCQ | 8), "\\Device\\Harddisk94\\Partition8", exists_ntdev, S_IFBLK, true},
  {"/dev/sdcq9", BRACK(FH_SDCQ | 9), "\\Device\\Harddisk94\\Partition9", exists_ntdev, S_IFBLK, true},
  {"/dev/sdcq10", BRACK(FH_SDCQ | 10), "\\Device\\Harddisk94\\Partition10", exists_ntdev, S_IFBLK, true},
  {"/dev/sdcq11", BRACK(FH_SDCQ | 11), "\\Device\\Harddisk94\\Partition11", exists_ntdev, S_IFBLK, true},
  {"/dev/sdcq12", BRACK(FH_SDCQ | 12), "\\Device\\Harddisk94\\Partition12", exists_ntdev, S_IFBLK, true},
  {"/dev/sdcq13", BRACK(FH_SDCQ | 13), "\\Device\\Harddisk94\\Partition13", exists_ntdev, S_IFBLK, true},
  {"/dev/sdcq14", BRACK(FH_SDCQ | 14), "\\Device\\Harddisk94\\Partition14", exists_ntdev, S_IFBLK, true},
  {"/dev/sdcq15", BRACK(FH_SDCQ | 15), "\\Device\\Harddisk94\\Partition15", exists_ntdev, S_IFBLK, true},
  {"/dev/sdcr1", BRACK(FH_SDCR | 1), "\\Device\\Harddisk95\\Partition1", exists_ntdev, S_IFBLK, true},
  {"/dev/sdcr2", BRACK(FH_SDCR | 2), "\\Device\\Harddisk95\\Partition2", exists_ntdev, S_IFBLK, true},
  {"/dev/sdcr3", BRACK(FH_SDCR | 3), "\\Device\\Harddisk95\\Partition3", exists_ntdev, S_IFBLK, true},
  {"/dev/sdcr4", BRACK(FH_SDCR | 4), "\\Device\\Harddisk95\\Partition4", exists_ntdev, S_IFBLK, true},
  {"/dev/sdcr5", BRACK(FH_SDCR | 5), "\\Device\\Harddisk95\\Partition5", exists_ntdev, S_IFBLK, true},
  {"/dev/sdcr6", BRACK(FH_SDCR | 6), "\\Device\\Harddisk95\\Partition6", exists_ntdev, S_IFBLK, true},
  {"/dev/sdcr7", BRACK(FH_SDCR | 7), "\\Device\\Harddisk95\\Partition7", exists_ntdev, S_IFBLK, true},
  {"/dev/sdcr8", BRACK(FH_SDCR | 8), "\\Device\\Harddisk95\\Partition8", exists_ntdev, S_IFBLK, true},
  {"/dev/sdcr9", BRACK(FH_SDCR | 9), "\\Device\\Harddisk95\\Partition9", exists_ntdev, S_IFBLK, true},
  {"/dev/sdcr10", BRACK(FH_SDCR | 10), "\\Device\\Harddisk95\\Partition10", exists_ntdev, S_IFBLK, true},
  {"/dev/sdcr11", BRACK(FH_SDCR | 11), "\\Device\\Harddisk95\\Partition11", exists_ntdev, S_IFBLK, true},
  {"/dev/sdcr12", BRACK(FH_SDCR | 12), "\\Device\\Harddisk95\\Partition12", exists_ntdev, S_IFBLK, true},
  {"/dev/sdcr13", BRACK(FH_SDCR | 13), "\\Device\\Harddisk95\\Partition13", exists_ntdev, S_IFBLK, true},
  {"/dev/sdcr14", BRACK(FH_SDCR | 14), "\\Device\\Harddisk95\\Partition14", exists_ntdev, S_IFBLK, true},
  {"/dev/sdcr15", BRACK(FH_SDCR | 15), "\\Device\\Harddisk95\\Partition15", exists_ntdev, S_IFBLK, true},
  {"/dev/sdcs1", BRACK(FH_SDCS | 1), "\\Device\\Harddisk96\\Partition1", exists_ntdev, S_IFBLK, true},
  {"/dev/sdcs2", BRACK(FH_SDCS | 2), "\\Device\\Harddisk96\\Partition2", exists_ntdev, S_IFBLK, true},
  {"/dev/sdcs3", BRACK(FH_SDCS | 3), "\\Device\\Harddisk96\\Partition3", exists_ntdev, S_IFBLK, true},
  {"/dev/sdcs4", BRACK(FH_SDCS | 4), "\\Device\\Harddisk96\\Partition4", exists_ntdev, S_IFBLK, true},
  {"/dev/sdcs5", BRACK(FH_SDCS | 5), "\\Device\\Harddisk96\\Partition5", exists_ntdev, S_IFBLK, true},
  {"/dev/sdcs6", BRACK(FH_SDCS | 6), "\\Device\\Harddisk96\\Partition6", exists_ntdev, S_IFBLK, true},
  {"/dev/sdcs7", BRACK(FH_SDCS | 7), "\\Device\\Harddisk96\\Partition7", exists_ntdev, S_IFBLK, true},
  {"/dev/sdcs8", BRACK(FH_SDCS | 8), "\\Device\\Harddisk96\\Partition8", exists_ntdev, S_IFBLK, true},
  {"/dev/sdcs9", BRACK(FH_SDCS | 9), "\\Device\\Harddisk96\\Partition9", exists_ntdev, S_IFBLK, true},
  {"/dev/sdcs10", BRACK(FH_SDCS | 10), "\\Device\\Harddisk96\\Partition10", exists_ntdev, S_IFBLK, true},
  {"/dev/sdcs11", BRACK(FH_SDCS | 11), "\\Device\\Harddisk96\\Partition11", exists_ntdev, S_IFBLK, true},
  {"/dev/sdcs12", BRACK(FH_SDCS | 12), "\\Device\\Harddisk96\\Partition12", exists_ntdev, S_IFBLK, true},
  {"/dev/sdcs13", BRACK(FH_SDCS | 13), "\\Device\\Harddisk96\\Partition13", exists_ntdev, S_IFBLK, true},
  {"/dev/sdcs14", BRACK(FH_SDCS | 14), "\\Device\\Harddisk96\\Partition14", exists_ntdev, S_IFBLK, true},
  {"/dev/sdcs15", BRACK(FH_SDCS | 15), "\\Device\\Harddisk96\\Partition15", exists_ntdev, S_IFBLK, true},
  {"/dev/sdct1", BRACK(FH_SDCT | 1), "\\Device\\Harddisk97\\Partition1", exists_ntdev, S_IFBLK, true},
  {"/dev/sdct2", BRACK(FH_SDCT | 2), "\\Device\\Harddisk97\\Partition2", exists_ntdev, S_IFBLK, true},
  {"/dev/sdct3", BRACK(FH_SDCT | 3), "\\Device\\Harddisk97\\Partition3", exists_ntdev, S_IFBLK, true},
  {"/dev/sdct4", BRACK(FH_SDCT | 4), "\\Device\\Harddisk97\\Partition4", exists_ntdev, S_IFBLK, true},
  {"/dev/sdct5", BRACK(FH_SDCT | 5), "\\Device\\Harddisk97\\Partition5", exists_ntdev, S_IFBLK, true},
  {"/dev/sdct6", BRACK(FH_SDCT | 6), "\\Device\\Harddisk97\\Partition6", exists_ntdev, S_IFBLK, true},
  {"/dev/sdct7", BRACK(FH_SDCT | 7), "\\Device\\Harddisk97\\Partition7", exists_ntdev, S_IFBLK, true},
  {"/dev/sdct8", BRACK(FH_SDCT | 8), "\\Device\\Harddisk97\\Partition8", exists_ntdev, S_IFBLK, true},
  {"/dev/sdct9", BRACK(FH_SDCT | 9), "\\Device\\Harddisk97\\Partition9", exists_ntdev, S_IFBLK, true},
  {"/dev/sdct10", BRACK(FH_SDCT | 10), "\\Device\\Harddisk97\\Partition10", exists_ntdev, S_IFBLK, true},
  {"/dev/sdct11", BRACK(FH_SDCT | 11), "\\Device\\Harddisk97\\Partition11", exists_ntdev, S_IFBLK, true},
  {"/dev/sdct12", BRACK(FH_SDCT | 12), "\\Device\\Harddisk97\\Partition12", exists_ntdev, S_IFBLK, true},
  {"/dev/sdct13", BRACK(FH_SDCT | 13), "\\Device\\Harddisk97\\Partition13", exists_ntdev, S_IFBLK, true},
  {"/dev/sdct14", BRACK(FH_SDCT | 14), "\\Device\\Harddisk97\\Partition14", exists_ntdev, S_IFBLK, true},
  {"/dev/sdct15", BRACK(FH_SDCT | 15), "\\Device\\Harddisk97\\Partition15", exists_ntdev, S_IFBLK, true},
  {"/dev/sdcu1", BRACK(FH_SDCU | 1), "\\Device\\Harddisk98\\Partition1", exists_ntdev, S_IFBLK, true},
  {"/dev/sdcu2", BRACK(FH_SDCU | 2), "\\Device\\Harddisk98\\Partition2", exists_ntdev, S_IFBLK, true},
  {"/dev/sdcu3", BRACK(FH_SDCU | 3), "\\Device\\Harddisk98\\Partition3", exists_ntdev, S_IFBLK, true},
  {"/dev/sdcu4", BRACK(FH_SDCU | 4), "\\Device\\Harddisk98\\Partition4", exists_ntdev, S_IFBLK, true},
  {"/dev/sdcu5", BRACK(FH_SDCU | 5), "\\Device\\Harddisk98\\Partition5", exists_ntdev, S_IFBLK, true},
  {"/dev/sdcu6", BRACK(FH_SDCU | 6), "\\Device\\Harddisk98\\Partition6", exists_ntdev, S_IFBLK, true},
  {"/dev/sdcu7", BRACK(FH_SDCU | 7), "\\Device\\Harddisk98\\Partition7", exists_ntdev, S_IFBLK, true},
  {"/dev/sdcu8", BRACK(FH_SDCU | 8), "\\Device\\Harddisk98\\Partition8", exists_ntdev, S_IFBLK, true},
  {"/dev/sdcu9", BRACK(FH_SDCU | 9), "\\Device\\Harddisk98\\Partition9", exists_ntdev, S_IFBLK, true},
  {"/dev/sdcu10", BRACK(FH_SDCU | 10), "\\Device\\Harddisk98\\Partition10", exists_ntdev, S_IFBLK, true},
  {"/dev/sdcu11", BRACK(FH_SDCU | 11), "\\Device\\Harddisk98\\Partition11", exists_ntdev, S_IFBLK, true},
  {"/dev/sdcu12", BRACK(FH_SDCU | 12), "\\Device\\Harddisk98\\Partition12", exists_ntdev, S_IFBLK, true},
  {"/dev/sdcu13", BRACK(FH_SDCU | 13), "\\Device\\Harddisk98\\Partition13", exists_ntdev, S_IFBLK, true},
  {"/dev/sdcu14", BRACK(FH_SDCU | 14), "\\Device\\Harddisk98\\Partition14", exists_ntdev, S_IFBLK, true},
  {"/dev/sdcu15", BRACK(FH_SDCU | 15), "\\Device\\Harddisk98\\Partition15", exists_ntdev, S_IFBLK, true},
  {"/dev/sdcv1", BRACK(FH_SDCV | 1), "\\Device\\Harddisk99\\Partition1", exists_ntdev, S_IFBLK, true},
  {"/dev/sdcv2", BRACK(FH_SDCV | 2), "\\Device\\Harddisk99\\Partition2", exists_ntdev, S_IFBLK, true},
  {"/dev/sdcv3", BRACK(FH_SDCV | 3), "\\Device\\Harddisk99\\Partition3", exists_ntdev, S_IFBLK, true},
  {"/dev/sdcv4", BRACK(FH_SDCV | 4), "\\Device\\Harddisk99\\Partition4", exists_ntdev, S_IFBLK, true},
  {"/dev/sdcv5", BRACK(FH_SDCV | 5), "\\Device\\Harddisk99\\Partition5", exists_ntdev, S_IFBLK, true},
  {"/dev/sdcv6", BRACK(FH_SDCV | 6), "\\Device\\Harddisk99\\Partition6", exists_ntdev, S_IFBLK, true},
  {"/dev/sdcv7", BRACK(FH_SDCV | 7), "\\Device\\Harddisk99\\Partition7", exists_ntdev, S_IFBLK, true},
  {"/dev/sdcv8", BRACK(FH_SDCV | 8), "\\Device\\Harddisk99\\Partition8", exists_ntdev, S_IFBLK, true},
  {"/dev/sdcv9", BRACK(FH_SDCV | 9), "\\Device\\Harddisk99\\Partition9", exists_ntdev, S_IFBLK, true},
  {"/dev/sdcv10", BRACK(FH_SDCV | 10), "\\Device\\Harddisk99\\Partition10", exists_ntdev, S_IFBLK, true},
  {"/dev/sdcv11", BRACK(FH_SDCV | 11), "\\Device\\Harddisk99\\Partition11", exists_ntdev, S_IFBLK, true},
  {"/dev/sdcv12", BRACK(FH_SDCV | 12), "\\Device\\Harddisk99\\Partition12", exists_ntdev, S_IFBLK, true},
  {"/dev/sdcv13", BRACK(FH_SDCV | 13), "\\Device\\Harddisk99\\Partition13", exists_ntdev, S_IFBLK, true},
  {"/dev/sdcv14", BRACK(FH_SDCV | 14), "\\Device\\Harddisk99\\Partition14", exists_ntdev, S_IFBLK, true},
  {"/dev/sdcv15", BRACK(FH_SDCV | 15), "\\Device\\Harddisk99\\Partition15", exists_ntdev, S_IFBLK, true},
  {"/dev/sdcw1", BRACK(FH_SDCW | 1), "\\Device\\Harddisk100\\Partition1", exists_ntdev, S_IFBLK, true},
  {"/dev/sdcw2", BRACK(FH_SDCW | 2), "\\Device\\Harddisk100\\Partition2", exists_ntdev, S_IFBLK, true},
  {"/dev/sdcw3", BRACK(FH_SDCW | 3), "\\Device\\Harddisk100\\Partition3", exists_ntdev, S_IFBLK, true},
  {"/dev/sdcw4", BRACK(FH_SDCW | 4), "\\Device\\Harddisk100\\Partition4", exists_ntdev, S_IFBLK, true},
  {"/dev/sdcw5", BRACK(FH_SDCW | 5), "\\Device\\Harddisk100\\Partition5", exists_ntdev, S_IFBLK, true},
  {"/dev/sdcw6", BRACK(FH_SDCW | 6), "\\Device\\Harddisk100\\Partition6", exists_ntdev, S_IFBLK, true},
  {"/dev/sdcw7", BRACK(FH_SDCW | 7), "\\Device\\Harddisk100\\Partition7", exists_ntdev, S_IFBLK, true},
  {"/dev/sdcw8", BRACK(FH_SDCW | 8), "\\Device\\Harddisk100\\Partition8", exists_ntdev, S_IFBLK, true},
  {"/dev/sdcw9", BRACK(FH_SDCW | 9), "\\Device\\Harddisk100\\Partition9", exists_ntdev, S_IFBLK, true},
  {"/dev/sdcw10", BRACK(FH_SDCW | 10), "\\Device\\Harddisk100\\Partition10", exists_ntdev, S_IFBLK, true},
  {"/dev/sdcw11", BRACK(FH_SDCW | 11), "\\Device\\Harddisk100\\Partition11", exists_ntdev, S_IFBLK, true},
  {"/dev/sdcw12", BRACK(FH_SDCW | 12), "\\Device\\Harddisk100\\Partition12", exists_ntdev, S_IFBLK, true},
  {"/dev/sdcw13", BRACK(FH_SDCW | 13), "\\Device\\Harddisk100\\Partition13", exists_ntdev, S_IFBLK, true},
  {"/dev/sdcw14", BRACK(FH_SDCW | 14), "\\Device\\Harddisk100\\Partition14", exists_ntdev, S_IFBLK, true},
  {"/dev/sdcw15", BRACK(FH_SDCW | 15), "\\Device\\Harddisk100\\Partition15", exists_ntdev, S_IFBLK, true},
  {"/dev/sdcx1", BRACK(FH_SDCX | 1), "\\Device\\Harddisk101\\Partition1", exists_ntdev, S_IFBLK, true},
  {"/dev/sdcx2", BRACK(FH_SDCX | 2), "\\Device\\Harddisk101\\Partition2", exists_ntdev, S_IFBLK, true},
  {"/dev/sdcx3", BRACK(FH_SDCX | 3), "\\Device\\Harddisk101\\Partition3", exists_ntdev, S_IFBLK, true},
  {"/dev/sdcx4", BRACK(FH_SDCX | 4), "\\Device\\Harddisk101\\Partition4", exists_ntdev, S_IFBLK, true},
  {"/dev/sdcx5", BRACK(FH_SDCX | 5), "\\Device\\Harddisk101\\Partition5", exists_ntdev, S_IFBLK, true},
  {"/dev/sdcx6", BRACK(FH_SDCX | 6), "\\Device\\Harddisk101\\Partition6", exists_ntdev, S_IFBLK, true},
  {"/dev/sdcx7", BRACK(FH_SDCX | 7), "\\Device\\Harddisk101\\Partition7", exists_ntdev, S_IFBLK, true},
  {"/dev/sdcx8", BRACK(FH_SDCX | 8), "\\Device\\Harddisk101\\Partition8", exists_ntdev, S_IFBLK, true},
  {"/dev/sdcx9", BRACK(FH_SDCX | 9), "\\Device\\Harddisk101\\Partition9", exists_ntdev, S_IFBLK, true},
  {"/dev/sdcx10", BRACK(FH_SDCX | 10), "\\Device\\Harddisk101\\Partition10", exists_ntdev, S_IFBLK, true},
  {"/dev/sdcx11", BRACK(FH_SDCX | 11), "\\Device\\Harddisk101\\Partition11", exists_ntdev, S_IFBLK, true},
  {"/dev/sdcx12", BRACK(FH_SDCX | 12), "\\Device\\Harddisk101\\Partition12", exists_ntdev, S_IFBLK, true},
  {"/dev/sdcx13", BRACK(FH_SDCX | 13), "\\Device\\Harddisk101\\Partition13", exists_ntdev, S_IFBLK, true},
  {"/dev/sdcx14", BRACK(FH_SDCX | 14), "\\Device\\Harddisk101\\Partition14", exists_ntdev, S_IFBLK, true},
  {"/dev/sdcx15", BRACK(FH_SDCX | 15), "\\Device\\Harddisk101\\Partition15", exists_ntdev, S_IFBLK, true},
  {"/dev/sdcy1", BRACK(FH_SDCY | 1), "\\Device\\Harddisk102\\Partition1", exists_ntdev, S_IFBLK, true},
  {"/dev/sdcy2", BRACK(FH_SDCY | 2), "\\Device\\Harddisk102\\Partition2", exists_ntdev, S_IFBLK, true},
  {"/dev/sdcy3", BRACK(FH_SDCY | 3), "\\Device\\Harddisk102\\Partition3", exists_ntdev, S_IFBLK, true},
  {"/dev/sdcy4", BRACK(FH_SDCY | 4), "\\Device\\Harddisk102\\Partition4", exists_ntdev, S_IFBLK, true},
  {"/dev/sdcy5", BRACK(FH_SDCY | 5), "\\Device\\Harddisk102\\Partition5", exists_ntdev, S_IFBLK, true},
  {"/dev/sdcy6", BRACK(FH_SDCY | 6), "\\Device\\Harddisk102\\Partition6", exists_ntdev, S_IFBLK, true},
  {"/dev/sdcy7", BRACK(FH_SDCY | 7), "\\Device\\Harddisk102\\Partition7", exists_ntdev, S_IFBLK, true},
  {"/dev/sdcy8", BRACK(FH_SDCY | 8), "\\Device\\Harddisk102\\Partition8", exists_ntdev, S_IFBLK, true},
  {"/dev/sdcy9", BRACK(FH_SDCY | 9), "\\Device\\Harddisk102\\Partition9", exists_ntdev, S_IFBLK, true},
  {"/dev/sdcy10", BRACK(FH_SDCY | 10), "\\Device\\Harddisk102\\Partition10", exists_ntdev, S_IFBLK, true},
  {"/dev/sdcy11", BRACK(FH_SDCY | 11), "\\Device\\Harddisk102\\Partition11", exists_ntdev, S_IFBLK, true},
  {"/dev/sdcy12", BRACK(FH_SDCY | 12), "\\Device\\Harddisk102\\Partition12", exists_ntdev, S_IFBLK, true},
  {"/dev/sdcy13", BRACK(FH_SDCY | 13), "\\Device\\Harddisk102\\Partition13", exists_ntdev, S_IFBLK, true},
  {"/dev/sdcy14", BRACK(FH_SDCY | 14), "\\Device\\Harddisk102\\Partition14", exists_ntdev, S_IFBLK, true},
  {"/dev/sdcy15", BRACK(FH_SDCY | 15), "\\Device\\Harddisk102\\Partition15", exists_ntdev, S_IFBLK, true},
  {"/dev/sdcz1", BRACK(FH_SDCZ | 1), "\\Device\\Harddisk103\\Partition1", exists_ntdev, S_IFBLK, true},
  {"/dev/sdcz2", BRACK(FH_SDCZ | 2), "\\Device\\Harddisk103\\Partition2", exists_ntdev, S_IFBLK, true},
  {"/dev/sdcz3", BRACK(FH_SDCZ | 3), "\\Device\\Harddisk103\\Partition3", exists_ntdev, S_IFBLK, true},
  {"/dev/sdcz4", BRACK(FH_SDCZ | 4), "\\Device\\Harddisk103\\Partition4", exists_ntdev, S_IFBLK, true},
  {"/dev/sdcz5", BRACK(FH_SDCZ | 5), "\\Device\\Harddisk103\\Partition5", exists_ntdev, S_IFBLK, true},
  {"/dev/sdcz6", BRACK(FH_SDCZ | 6), "\\Device\\Harddisk103\\Partition6", exists_ntdev, S_IFBLK, true},
  {"/dev/sdcz7", BRACK(FH_SDCZ | 7), "\\Device\\Harddisk103\\Partition7", exists_ntdev, S_IFBLK, true},
  {"/dev/sdcz8", BRACK(FH_SDCZ | 8), "\\Device\\Harddisk103\\Partition8", exists_ntdev, S_IFBLK, true},
  {"/dev/sdcz9", BRACK(FH_SDCZ | 9), "\\Device\\Harddisk103\\Partition9", exists_ntdev, S_IFBLK, true},
  {"/dev/sdcz10", BRACK(FH_SDCZ | 10), "\\Device\\Harddisk103\\Partition10", exists_ntdev, S_IFBLK, true},
  {"/dev/sdcz11", BRACK(FH_SDCZ | 11), "\\Device\\Harddisk103\\Partition11", exists_ntdev, S_IFBLK, true},
  {"/dev/sdcz12", BRACK(FH_SDCZ | 12), "\\Device\\Harddisk103\\Partition12", exists_ntdev, S_IFBLK, true},
  {"/dev/sdcz13", BRACK(FH_SDCZ | 13), "\\Device\\Harddisk103\\Partition13", exists_ntdev, S_IFBLK, true},
  {"/dev/sdcz14", BRACK(FH_SDCZ | 14), "\\Device\\Harddisk103\\Partition14", exists_ntdev, S_IFBLK, true},
  {"/dev/sdcz15", BRACK(FH_SDCZ | 15), "\\Device\\Harddisk103\\Partition15", exists_ntdev, S_IFBLK, true},
  {"/dev/sdda", BRACK(FH_SDDA), "\\Device\\Harddisk104\\Partition0", exists_ntdev, S_IFBLK, true},
  {"/dev/sddb", BRACK(FH_SDDB), "\\Device\\Harddisk105\\Partition0", exists_ntdev, S_IFBLK, true},
  {"/dev/sddc", BRACK(FH_SDDC), "\\Device\\Harddisk106\\Partition0", exists_ntdev, S_IFBLK, true},
  {"/dev/sddd", BRACK(FH_SDDD), "\\Device\\Harddisk107\\Partition0", exists_ntdev, S_IFBLK, true},
  {"/dev/sdde", BRACK(FH_SDDE), "\\Device\\Harddisk108\\Partition0", exists_ntdev, S_IFBLK, true},
  {"/dev/sddf", BRACK(FH_SDDF), "\\Device\\Harddisk109\\Partition0", exists_ntdev, S_IFBLK, true},
  {"/dev/sddg", BRACK(FH_SDDG), "\\Device\\Harddisk110\\Partition0", exists_ntdev, S_IFBLK, true},
  {"/dev/sddh", BRACK(FH_SDDH), "\\Device\\Harddisk111\\Partition0", exists_ntdev, S_IFBLK, true},
  {"/dev/sddi", BRACK(FH_SDDI), "\\Device\\Harddisk112\\Partition0", exists_ntdev, S_IFBLK, true},
  {"/dev/sddj", BRACK(FH_SDDJ), "\\Device\\Harddisk113\\Partition0", exists_ntdev, S_IFBLK, true},
  {"/dev/sddk", BRACK(FH_SDDK), "\\Device\\Harddisk114\\Partition0", exists_ntdev, S_IFBLK, true},
  {"/dev/sddl", BRACK(FH_SDDL), "\\Device\\Harddisk115\\Partition0", exists_ntdev, S_IFBLK, true},
  {"/dev/sddm", BRACK(FH_SDDM), "\\Device\\Harddisk116\\Partition0", exists_ntdev, S_IFBLK, true},
  {"/dev/sddn", BRACK(FH_SDDN), "\\Device\\Harddisk117\\Partition0", exists_ntdev, S_IFBLK, true},
  {"/dev/sddo", BRACK(FH_SDDO), "\\Device\\Harddisk118\\Partition0", exists_ntdev, S_IFBLK, true},
  {"/dev/sddp", BRACK(FH_SDDP), "\\Device\\Harddisk119\\Partition0", exists_ntdev, S_IFBLK, true},
  {"/dev/sddq", BRACK(FH_SDDQ), "\\Device\\Harddisk120\\Partition0", exists_ntdev, S_IFBLK, true},
  {"/dev/sddr", BRACK(FH_SDDR), "\\Device\\Harddisk121\\Partition0", exists_ntdev, S_IFBLK, true},
  {"/dev/sdds", BRACK(FH_SDDS), "\\Device\\Harddisk122\\Partition0", exists_ntdev, S_IFBLK, true},
  {"/dev/sddt", BRACK(FH_SDDT), "\\Device\\Harddisk123\\Partition0", exists_ntdev, S_IFBLK, true},
  {"/dev/sddu", BRACK(FH_SDDU), "\\Device\\Harddisk124\\Partition0", exists_ntdev, S_IFBLK, true},
  {"/dev/sddv", BRACK(FH_SDDV), "\\Device\\Harddisk125\\Partition0", exists_ntdev, S_IFBLK, true},
  {"/dev/sddw", BRACK(FH_SDDW), "\\Device\\Harddisk126\\Partition0", exists_ntdev, S_IFBLK, true},
  {"/dev/sddx", BRACK(FH_SDDX), "\\Device\\Harddisk127\\Partition0", exists_ntdev, S_IFBLK, true},
  {"/dev/sdda1", BRACK(FH_SDDA | 1), "\\Device\\Harddisk104\\Partition1", exists_ntdev, S_IFBLK, true},
  {"/dev/sdda2", BRACK(FH_SDDA | 2), "\\Device\\Harddisk104\\Partition2", exists_ntdev, S_IFBLK, true},
  {"/dev/sdda3", BRACK(FH_SDDA | 3), "\\Device\\Harddisk104\\Partition3", exists_ntdev, S_IFBLK, true},
  {"/dev/sdda4", BRACK(FH_SDDA | 4), "\\Device\\Harddisk104\\Partition4", exists_ntdev, S_IFBLK, true},
  {"/dev/sdda5", BRACK(FH_SDDA | 5), "\\Device\\Harddisk104\\Partition5", exists_ntdev, S_IFBLK, true},
  {"/dev/sdda6", BRACK(FH_SDDA | 6), "\\Device\\Harddisk104\\Partition6", exists_ntdev, S_IFBLK, true},
  {"/dev/sdda7", BRACK(FH_SDDA | 7), "\\Device\\Harddisk104\\Partition7", exists_ntdev, S_IFBLK, true},
  {"/dev/sdda8", BRACK(FH_SDDA | 8), "\\Device\\Harddisk104\\Partition8", exists_ntdev, S_IFBLK, true},
  {"/dev/sdda9", BRACK(FH_SDDA | 9), "\\Device\\Harddisk104\\Partition9", exists_ntdev, S_IFBLK, true},
  {"/dev/sdda10", BRACK(FH_SDDA | 10), "\\Device\\Harddisk104\\Partition10", exists_ntdev, S_IFBLK, true},
  {"/dev/sdda11", BRACK(FH_SDDA | 11), "\\Device\\Harddisk104\\Partition11", exists_ntdev, S_IFBLK, true},
  {"/dev/sdda12", BRACK(FH_SDDA | 12), "\\Device\\Harddisk104\\Partition12", exists_ntdev, S_IFBLK, true},
  {"/dev/sdda13", BRACK(FH_SDDA | 13), "\\Device\\Harddisk104\\Partition13", exists_ntdev, S_IFBLK, true},
  {"/dev/sdda14", BRACK(FH_SDDA | 14), "\\Device\\Harddisk104\\Partition14", exists_ntdev, S_IFBLK, true},
  {"/dev/sdda15", BRACK(FH_SDDA | 15), "\\Device\\Harddisk104\\Partition15", exists_ntdev, S_IFBLK, true},
  {"/dev/sddb1", BRACK(FH_SDDB | 1), "\\Device\\Harddisk105\\Partition1", exists_ntdev, S_IFBLK, true},
  {"/dev/sddb2", BRACK(FH_SDDB | 2), "\\Device\\Harddisk105\\Partition2", exists_ntdev, S_IFBLK, true},
  {"/dev/sddb3", BRACK(FH_SDDB | 3), "\\Device\\Harddisk105\\Partition3", exists_ntdev, S_IFBLK, true},
  {"/dev/sddb4", BRACK(FH_SDDB | 4), "\\Device\\Harddisk105\\Partition4", exists_ntdev, S_IFBLK, true},
  {"/dev/sddb5", BRACK(FH_SDDB | 5), "\\Device\\Harddisk105\\Partition5", exists_ntdev, S_IFBLK, true},
  {"/dev/sddb6", BRACK(FH_SDDB | 6), "\\Device\\Harddisk105\\Partition6", exists_ntdev, S_IFBLK, true},
  {"/dev/sddb7", BRACK(FH_SDDB | 7), "\\Device\\Harddisk105\\Partition7", exists_ntdev, S_IFBLK, true},
  {"/dev/sddb8", BRACK(FH_SDDB | 8), "\\Device\\Harddisk105\\Partition8", exists_ntdev, S_IFBLK, true},
  {"/dev/sddb9", BRACK(FH_SDDB | 9), "\\Device\\Harddisk105\\Partition9", exists_ntdev, S_IFBLK, true},
  {"/dev/sddb10", BRACK(FH_SDDB | 10), "\\Device\\Harddisk105\\Partition10", exists_ntdev, S_IFBLK, true},
  {"/dev/sddb11", BRACK(FH_SDDB | 11), "\\Device\\Harddisk105\\Partition11", exists_ntdev, S_IFBLK, true},
  {"/dev/sddb12", BRACK(FH_SDDB | 12), "\\Device\\Harddisk105\\Partition12", exists_ntdev, S_IFBLK, true},
  {"/dev/sddb13", BRACK(FH_SDDB | 13), "\\Device\\Harddisk105\\Partition13", exists_ntdev, S_IFBLK, true},
  {"/dev/sddb14", BRACK(FH_SDDB | 14), "\\Device\\Harddisk105\\Partition14", exists_ntdev, S_IFBLK, true},
  {"/dev/sddb15", BRACK(FH_SDDB | 15), "\\Device\\Harddisk105\\Partition15", exists_ntdev, S_IFBLK, true},
  {"/dev/sddc1", BRACK(FH_SDDC | 1), "\\Device\\Harddisk106\\Partition1", exists_ntdev, S_IFBLK, true},
  {"/dev/sddc2", BRACK(FH_SDDC | 2), "\\Device\\Harddisk106\\Partition2", exists_ntdev, S_IFBLK, true},
  {"/dev/sddc3", BRACK(FH_SDDC | 3), "\\Device\\Harddisk106\\Partition3", exists_ntdev, S_IFBLK, true},
  {"/dev/sddc4", BRACK(FH_SDDC | 4), "\\Device\\Harddisk106\\Partition4", exists_ntdev, S_IFBLK, true},
  {"/dev/sddc5", BRACK(FH_SDDC | 5), "\\Device\\Harddisk106\\Partition5", exists_ntdev, S_IFBLK, true},
  {"/dev/sddc6", BRACK(FH_SDDC | 6), "\\Device\\Harddisk106\\Partition6", exists_ntdev, S_IFBLK, true},
  {"/dev/sddc7", BRACK(FH_SDDC | 7), "\\Device\\Harddisk106\\Partition7", exists_ntdev, S_IFBLK, true},
  {"/dev/sddc8", BRACK(FH_SDDC | 8), "\\Device\\Harddisk106\\Partition8", exists_ntdev, S_IFBLK, true},
  {"/dev/sddc9", BRACK(FH_SDDC | 9), "\\Device\\Harddisk106\\Partition9", exists_ntdev, S_IFBLK, true},
  {"/dev/sddc10", BRACK(FH_SDDC | 10), "\\Device\\Harddisk106\\Partition10", exists_ntdev, S_IFBLK, true},
  {"/dev/sddc11", BRACK(FH_SDDC | 11), "\\Device\\Harddisk106\\Partition11", exists_ntdev, S_IFBLK, true},
  {"/dev/sddc12", BRACK(FH_SDDC | 12), "\\Device\\Harddisk106\\Partition12", exists_ntdev, S_IFBLK, true},
  {"/dev/sddc13", BRACK(FH_SDDC | 13), "\\Device\\Harddisk106\\Partition13", exists_ntdev, S_IFBLK, true},
  {"/dev/sddc14", BRACK(FH_SDDC | 14), "\\Device\\Harddisk106\\Partition14", exists_ntdev, S_IFBLK, true},
  {"/dev/sddc15", BRACK(FH_SDDC | 15), "\\Device\\Harddisk106\\Partition15", exists_ntdev, S_IFBLK, true},
  {"/dev/sddd1", BRACK(FH_SDDD | 1), "\\Device\\Harddisk107\\Partition1", exists_ntdev, S_IFBLK, true},
  {"/dev/sddd2", BRACK(FH_SDDD | 2), "\\Device\\Harddisk107\\Partition2", exists_ntdev, S_IFBLK, true},
  {"/dev/sddd3", BRACK(FH_SDDD | 3), "\\Device\\Harddisk107\\Partition3", exists_ntdev, S_IFBLK, true},
  {"/dev/sddd4", BRACK(FH_SDDD | 4), "\\Device\\Harddisk107\\Partition4", exists_ntdev, S_IFBLK, true},
  {"/dev/sddd5", BRACK(FH_SDDD | 5), "\\Device\\Harddisk107\\Partition5", exists_ntdev, S_IFBLK, true},
  {"/dev/sddd6", BRACK(FH_SDDD | 6), "\\Device\\Harddisk107\\Partition6", exists_ntdev, S_IFBLK, true},
  {"/dev/sddd7", BRACK(FH_SDDD | 7), "\\Device\\Harddisk107\\Partition7", exists_ntdev, S_IFBLK, true},
  {"/dev/sddd8", BRACK(FH_SDDD | 8), "\\Device\\Harddisk107\\Partition8", exists_ntdev, S_IFBLK, true},
  {"/dev/sddd9", BRACK(FH_SDDD | 9), "\\Device\\Harddisk107\\Partition9", exists_ntdev, S_IFBLK, true},
  {"/dev/sddd10", BRACK(FH_SDDD | 10), "\\Device\\Harddisk107\\Partition10", exists_ntdev, S_IFBLK, true},
  {"/dev/sddd11", BRACK(FH_SDDD | 11), "\\Device\\Harddisk107\\Partition11", exists_ntdev, S_IFBLK, true},
  {"/dev/sddd12", BRACK(FH_SDDD | 12), "\\Device\\Harddisk107\\Partition12", exists_ntdev, S_IFBLK, true},
  {"/dev/sddd13", BRACK(FH_SDDD | 13), "\\Device\\Harddisk107\\Partition13", exists_ntdev, S_IFBLK, true},
  {"/dev/sddd14", BRACK(FH_SDDD | 14), "\\Device\\Harddisk107\\Partition14", exists_ntdev, S_IFBLK, true},
  {"/dev/sddd15", BRACK(FH_SDDD | 15), "\\Device\\Harddisk107\\Partition15", exists_ntdev, S_IFBLK, true},
  {"/dev/sdde1", BRACK(FH_SDDE | 1), "\\Device\\Harddisk108\\Partition1", exists_ntdev, S_IFBLK, true},
  {"/dev/sdde2", BRACK(FH_SDDE | 2), "\\Device\\Harddisk108\\Partition2", exists_ntdev, S_IFBLK, true},
  {"/dev/sdde3", BRACK(FH_SDDE | 3), "\\Device\\Harddisk108\\Partition3", exists_ntdev, S_IFBLK, true},
  {"/dev/sdde4", BRACK(FH_SDDE | 4), "\\Device\\Harddisk108\\Partition4", exists_ntdev, S_IFBLK, true},
  {"/dev/sdde5", BRACK(FH_SDDE | 5), "\\Device\\Harddisk108\\Partition5", exists_ntdev, S_IFBLK, true},
  {"/dev/sdde6", BRACK(FH_SDDE | 6), "\\Device\\Harddisk108\\Partition6", exists_ntdev, S_IFBLK, true},
  {"/dev/sdde7", BRACK(FH_SDDE | 7), "\\Device\\Harddisk108\\Partition7", exists_ntdev, S_IFBLK, true},
  {"/dev/sdde8", BRACK(FH_SDDE | 8), "\\Device\\Harddisk108\\Partition8", exists_ntdev, S_IFBLK, true},
  {"/dev/sdde9", BRACK(FH_SDDE | 9), "\\Device\\Harddisk108\\Partition9", exists_ntdev, S_IFBLK, true},
  {"/dev/sdde10", BRACK(FH_SDDE | 10), "\\Device\\Harddisk108\\Partition10", exists_ntdev, S_IFBLK, true},
  {"/dev/sdde11", BRACK(FH_SDDE | 11), "\\Device\\Harddisk108\\Partition11", exists_ntdev, S_IFBLK, true},
  {"/dev/sdde12", BRACK(FH_SDDE | 12), "\\Device\\Harddisk108\\Partition12", exists_ntdev, S_IFBLK, true},
  {"/dev/sdde13", BRACK(FH_SDDE | 13), "\\Device\\Harddisk108\\Partition13", exists_ntdev, S_IFBLK, true},
  {"/dev/sdde14", BRACK(FH_SDDE | 14), "\\Device\\Harddisk108\\Partition14", exists_ntdev, S_IFBLK, true},
  {"/dev/sdde15", BRACK(FH_SDDE | 15), "\\Device\\Harddisk108\\Partition15", exists_ntdev, S_IFBLK, true},
  {"/dev/sddf1", BRACK(FH_SDDF | 1), "\\Device\\Harddisk109\\Partition1", exists_ntdev, S_IFBLK, true},
  {"/dev/sddf2", BRACK(FH_SDDF | 2), "\\Device\\Harddisk109\\Partition2", exists_ntdev, S_IFBLK, true},
  {"/dev/sddf3", BRACK(FH_SDDF | 3), "\\Device\\Harddisk109\\Partition3", exists_ntdev, S_IFBLK, true},
  {"/dev/sddf4", BRACK(FH_SDDF | 4), "\\Device\\Harddisk109\\Partition4", exists_ntdev, S_IFBLK, true},
  {"/dev/sddf5", BRACK(FH_SDDF | 5), "\\Device\\Harddisk109\\Partition5", exists_ntdev, S_IFBLK, true},
  {"/dev/sddf6", BRACK(FH_SDDF | 6), "\\Device\\Harddisk109\\Partition6", exists_ntdev, S_IFBLK, true},
  {"/dev/sddf7", BRACK(FH_SDDF | 7), "\\Device\\Harddisk109\\Partition7", exists_ntdev, S_IFBLK, true},
  {"/dev/sddf8", BRACK(FH_SDDF | 8), "\\Device\\Harddisk109\\Partition8", exists_ntdev, S_IFBLK, true},
  {"/dev/sddf9", BRACK(FH_SDDF | 9), "\\Device\\Harddisk109\\Partition9", exists_ntdev, S_IFBLK, true},
  {"/dev/sddf10", BRACK(FH_SDDF | 10), "\\Device\\Harddisk109\\Partition10", exists_ntdev, S_IFBLK, true},
  {"/dev/sddf11", BRACK(FH_SDDF | 11), "\\Device\\Harddisk109\\Partition11", exists_ntdev, S_IFBLK, true},
  {"/dev/sddf12", BRACK(FH_SDDF | 12), "\\Device\\Harddisk109\\Partition12", exists_ntdev, S_IFBLK, true},
  {"/dev/sddf13", BRACK(FH_SDDF | 13), "\\Device\\Harddisk109\\Partition13", exists_ntdev, S_IFBLK, true},
  {"/dev/sddf14", BRACK(FH_SDDF | 14), "\\Device\\Harddisk109\\Partition14", exists_ntdev, S_IFBLK, true},
  {"/dev/sddf15", BRACK(FH_SDDF | 15), "\\Device\\Harddisk109\\Partition15", exists_ntdev, S_IFBLK, true},
  {"/dev/sddg1", BRACK(FH_SDDG | 1), "\\Device\\Harddisk110\\Partition1", exists_ntdev, S_IFBLK, true},
  {"/dev/sddg2", BRACK(FH_SDDG | 2), "\\Device\\Harddisk110\\Partition2", exists_ntdev, S_IFBLK, true},
  {"/dev/sddg3", BRACK(FH_SDDG | 3), "\\Device\\Harddisk110\\Partition3", exists_ntdev, S_IFBLK, true},
  {"/dev/sddg4", BRACK(FH_SDDG | 4), "\\Device\\Harddisk110\\Partition4", exists_ntdev, S_IFBLK, true},
  {"/dev/sddg5", BRACK(FH_SDDG | 5), "\\Device\\Harddisk110\\Partition5", exists_ntdev, S_IFBLK, true},
  {"/dev/sddg6", BRACK(FH_SDDG | 6), "\\Device\\Harddisk110\\Partition6", exists_ntdev, S_IFBLK, true},
  {"/dev/sddg7", BRACK(FH_SDDG | 7), "\\Device\\Harddisk110\\Partition7", exists_ntdev, S_IFBLK, true},
  {"/dev/sddg8", BRACK(FH_SDDG | 8), "\\Device\\Harddisk110\\Partition8", exists_ntdev, S_IFBLK, true},
  {"/dev/sddg9", BRACK(FH_SDDG | 9), "\\Device\\Harddisk110\\Partition9", exists_ntdev, S_IFBLK, true},
  {"/dev/sddg10", BRACK(FH_SDDG | 10), "\\Device\\Harddisk110\\Partition10", exists_ntdev, S_IFBLK, true},
  {"/dev/sddg11", BRACK(FH_SDDG | 11), "\\Device\\Harddisk110\\Partition11", exists_ntdev, S_IFBLK, true},
  {"/dev/sddg12", BRACK(FH_SDDG | 12), "\\Device\\Harddisk110\\Partition12", exists_ntdev, S_IFBLK, true},
  {"/dev/sddg13", BRACK(FH_SDDG | 13), "\\Device\\Harddisk110\\Partition13", exists_ntdev, S_IFBLK, true},
  {"/dev/sddg14", BRACK(FH_SDDG | 14), "\\Device\\Harddisk110\\Partition14", exists_ntdev, S_IFBLK, true},
  {"/dev/sddg15", BRACK(FH_SDDG | 15), "\\Device\\Harddisk110\\Partition15", exists_ntdev, S_IFBLK, true},
  {"/dev/sddh1", BRACK(FH_SDDH | 1), "\\Device\\Harddisk111\\Partition1", exists_ntdev, S_IFBLK, true},
  {"/dev/sddh2", BRACK(FH_SDDH | 2), "\\Device\\Harddisk111\\Partition2", exists_ntdev, S_IFBLK, true},
  {"/dev/sddh3", BRACK(FH_SDDH | 3), "\\Device\\Harddisk111\\Partition3", exists_ntdev, S_IFBLK, true},
  {"/dev/sddh4", BRACK(FH_SDDH | 4), "\\Device\\Harddisk111\\Partition4", exists_ntdev, S_IFBLK, true},
  {"/dev/sddh5", BRACK(FH_SDDH | 5), "\\Device\\Harddisk111\\Partition5", exists_ntdev, S_IFBLK, true},
  {"/dev/sddh6", BRACK(FH_SDDH | 6), "\\Device\\Harddisk111\\Partition6", exists_ntdev, S_IFBLK, true},
  {"/dev/sddh7", BRACK(FH_SDDH | 7), "\\Device\\Harddisk111\\Partition7", exists_ntdev, S_IFBLK, true},
  {"/dev/sddh8", BRACK(FH_SDDH | 8), "\\Device\\Harddisk111\\Partition8", exists_ntdev, S_IFBLK, true},
  {"/dev/sddh9", BRACK(FH_SDDH | 9), "\\Device\\Harddisk111\\Partition9", exists_ntdev, S_IFBLK, true},
  {"/dev/sddh10", BRACK(FH_SDDH | 10), "\\Device\\Harddisk111\\Partition10", exists_ntdev, S_IFBLK, true},
  {"/dev/sddh11", BRACK(FH_SDDH | 11), "\\Device\\Harddisk111\\Partition11", exists_ntdev, S_IFBLK, true},
  {"/dev/sddh12", BRACK(FH_SDDH | 12), "\\Device\\Harddisk111\\Partition12", exists_ntdev, S_IFBLK, true},
  {"/dev/sddh13", BRACK(FH_SDDH | 13), "\\Device\\Harddisk111\\Partition13", exists_ntdev, S_IFBLK, true},
  {"/dev/sddh14", BRACK(FH_SDDH | 14), "\\Device\\Harddisk111\\Partition14", exists_ntdev, S_IFBLK, true},
  {"/dev/sddh15", BRACK(FH_SDDH | 15), "\\Device\\Harddisk111\\Partition15", exists_ntdev, S_IFBLK, true},
  {"/dev/sddi1", BRACK(FH_SDDI | 1), "\\Device\\Harddisk112\\Partition1", exists_ntdev, S_IFBLK, true},
  {"/dev/sddi2", BRACK(FH_SDDI | 2), "\\Device\\Harddisk112\\Partition2", exists_ntdev, S_IFBLK, true},
  {"/dev/sddi3", BRACK(FH_SDDI | 3), "\\Device\\Harddisk112\\Partition3", exists_ntdev, S_IFBLK, true},
  {"/dev/sddi4", BRACK(FH_SDDI | 4), "\\Device\\Harddisk112\\Partition4", exists_ntdev, S_IFBLK, true},
  {"/dev/sddi5", BRACK(FH_SDDI | 5), "\\Device\\Harddisk112\\Partition5", exists_ntdev, S_IFBLK, true},
  {"/dev/sddi6", BRACK(FH_SDDI | 6), "\\Device\\Harddisk112\\Partition6", exists_ntdev, S_IFBLK, true},
  {"/dev/sddi7", BRACK(FH_SDDI | 7), "\\Device\\Harddisk112\\Partition7", exists_ntdev, S_IFBLK, true},
  {"/dev/sddi8", BRACK(FH_SDDI | 8), "\\Device\\Harddisk112\\Partition8", exists_ntdev, S_IFBLK, true},
  {"/dev/sddi9", BRACK(FH_SDDI | 9), "\\Device\\Harddisk112\\Partition9", exists_ntdev, S_IFBLK, true},
  {"/dev/sddi10", BRACK(FH_SDDI | 10), "\\Device\\Harddisk112\\Partition10", exists_ntdev, S_IFBLK, true},
  {"/dev/sddi11", BRACK(FH_SDDI | 11), "\\Device\\Harddisk112\\Partition11", exists_ntdev, S_IFBLK, true},
  {"/dev/sddi12", BRACK(FH_SDDI | 12), "\\Device\\Harddisk112\\Partition12", exists_ntdev, S_IFBLK, true},
  {"/dev/sddi13", BRACK(FH_SDDI | 13), "\\Device\\Harddisk112\\Partition13", exists_ntdev, S_IFBLK, true},
  {"/dev/sddi14", BRACK(FH_SDDI | 14), "\\Device\\Harddisk112\\Partition14", exists_ntdev, S_IFBLK, true},
  {"/dev/sddi15", BRACK(FH_SDDI | 15), "\\Device\\Harddisk112\\Partition15", exists_ntdev, S_IFBLK, true},
  {"/dev/sddj1", BRACK(FH_SDDJ | 1), "\\Device\\Harddisk113\\Partition1", exists_ntdev, S_IFBLK, true},
  {"/dev/sddj2", BRACK(FH_SDDJ | 2), "\\Device\\Harddisk113\\Partition2", exists_ntdev, S_IFBLK, true},
  {"/dev/sddj3", BRACK(FH_SDDJ | 3), "\\Device\\Harddisk113\\Partition3", exists_ntdev, S_IFBLK, true},
  {"/dev/sddj4", BRACK(FH_SDDJ | 4), "\\Device\\Harddisk113\\Partition4", exists_ntdev, S_IFBLK, true},
  {"/dev/sddj5", BRACK(FH_SDDJ | 5), "\\Device\\Harddisk113\\Partition5", exists_ntdev, S_IFBLK, true},
  {"/dev/sddj6", BRACK(FH_SDDJ | 6), "\\Device\\Harddisk113\\Partition6", exists_ntdev, S_IFBLK, true},
  {"/dev/sddj7", BRACK(FH_SDDJ | 7), "\\Device\\Harddisk113\\Partition7", exists_ntdev, S_IFBLK, true},
  {"/dev/sddj8", BRACK(FH_SDDJ | 8), "\\Device\\Harddisk113\\Partition8", exists_ntdev, S_IFBLK, true},
  {"/dev/sddj9", BRACK(FH_SDDJ | 9), "\\Device\\Harddisk113\\Partition9", exists_ntdev, S_IFBLK, true},
  {"/dev/sddj10", BRACK(FH_SDDJ | 10), "\\Device\\Harddisk113\\Partition10", exists_ntdev, S_IFBLK, true},
  {"/dev/sddj11", BRACK(FH_SDDJ | 11), "\\Device\\Harddisk113\\Partition11", exists_ntdev, S_IFBLK, true},
  {"/dev/sddj12", BRACK(FH_SDDJ | 12), "\\Device\\Harddisk113\\Partition12", exists_ntdev, S_IFBLK, true},
  {"/dev/sddj13", BRACK(FH_SDDJ | 13), "\\Device\\Harddisk113\\Partition13", exists_ntdev, S_IFBLK, true},
  {"/dev/sddj14", BRACK(FH_SDDJ | 14), "\\Device\\Harddisk113\\Partition14", exists_ntdev, S_IFBLK, true},
  {"/dev/sddj15", BRACK(FH_SDDJ | 15), "\\Device\\Harddisk113\\Partition15", exists_ntdev, S_IFBLK, true},
  {"/dev/sddk1", BRACK(FH_SDDK | 1), "\\Device\\Harddisk114\\Partition1", exists_ntdev, S_IFBLK, true},
  {"/dev/sddk2", BRACK(FH_SDDK | 2), "\\Device\\Harddisk114\\Partition2", exists_ntdev, S_IFBLK, true},
  {"/dev/sddk3", BRACK(FH_SDDK | 3), "\\Device\\Harddisk114\\Partition3", exists_ntdev, S_IFBLK, true},
  {"/dev/sddk4", BRACK(FH_SDDK | 4), "\\Device\\Harddisk114\\Partition4", exists_ntdev, S_IFBLK, true},
  {"/dev/sddk5", BRACK(FH_SDDK | 5), "\\Device\\Harddisk114\\Partition5", exists_ntdev, S_IFBLK, true},
  {"/dev/sddk6", BRACK(FH_SDDK | 6), "\\Device\\Harddisk114\\Partition6", exists_ntdev, S_IFBLK, true},
  {"/dev/sddk7", BRACK(FH_SDDK | 7), "\\Device\\Harddisk114\\Partition7", exists_ntdev, S_IFBLK, true},
  {"/dev/sddk8", BRACK(FH_SDDK | 8), "\\Device\\Harddisk114\\Partition8", exists_ntdev, S_IFBLK, true},
  {"/dev/sddk9", BRACK(FH_SDDK | 9), "\\Device\\Harddisk114\\Partition9", exists_ntdev, S_IFBLK, true},
  {"/dev/sddk10", BRACK(FH_SDDK | 10), "\\Device\\Harddisk114\\Partition10", exists_ntdev, S_IFBLK, true},
  {"/dev/sddk11", BRACK(FH_SDDK | 11), "\\Device\\Harddisk114\\Partition11", exists_ntdev, S_IFBLK, true},
  {"/dev/sddk12", BRACK(FH_SDDK | 12), "\\Device\\Harddisk114\\Partition12", exists_ntdev, S_IFBLK, true},
  {"/dev/sddk13", BRACK(FH_SDDK | 13), "\\Device\\Harddisk114\\Partition13", exists_ntdev, S_IFBLK, true},
  {"/dev/sddk14", BRACK(FH_SDDK | 14), "\\Device\\Harddisk114\\Partition14", exists_ntdev, S_IFBLK, true},
  {"/dev/sddk15", BRACK(FH_SDDK | 15), "\\Device\\Harddisk114\\Partition15", exists_ntdev, S_IFBLK, true},
  {"/dev/sddl1", BRACK(FH_SDDL | 1), "\\Device\\Harddisk115\\Partition1", exists_ntdev, S_IFBLK, true},
  {"/dev/sddl2", BRACK(FH_SDDL | 2), "\\Device\\Harddisk115\\Partition2", exists_ntdev, S_IFBLK, true},
  {"/dev/sddl3", BRACK(FH_SDDL | 3), "\\Device\\Harddisk115\\Partition3", exists_ntdev, S_IFBLK, true},
  {"/dev/sddl4", BRACK(FH_SDDL | 4), "\\Device\\Harddisk115\\Partition4", exists_ntdev, S_IFBLK, true},
  {"/dev/sddl5", BRACK(FH_SDDL | 5), "\\Device\\Harddisk115\\Partition5", exists_ntdev, S_IFBLK, true},
  {"/dev/sddl6", BRACK(FH_SDDL | 6), "\\Device\\Harddisk115\\Partition6", exists_ntdev, S_IFBLK, true},
  {"/dev/sddl7", BRACK(FH_SDDL | 7), "\\Device\\Harddisk115\\Partition7", exists_ntdev, S_IFBLK, true},
  {"/dev/sddl8", BRACK(FH_SDDL | 8), "\\Device\\Harddisk115\\Partition8", exists_ntdev, S_IFBLK, true},
  {"/dev/sddl9", BRACK(FH_SDDL | 9), "\\Device\\Harddisk115\\Partition9", exists_ntdev, S_IFBLK, true},
  {"/dev/sddl10", BRACK(FH_SDDL | 10), "\\Device\\Harddisk115\\Partition10", exists_ntdev, S_IFBLK, true},
  {"/dev/sddl11", BRACK(FH_SDDL | 11), "\\Device\\Harddisk115\\Partition11", exists_ntdev, S_IFBLK, true},
  {"/dev/sddl12", BRACK(FH_SDDL | 12), "\\Device\\Harddisk115\\Partition12", exists_ntdev, S_IFBLK, true},
  {"/dev/sddl13", BRACK(FH_SDDL | 13), "\\Device\\Harddisk115\\Partition13", exists_ntdev, S_IFBLK, true},
  {"/dev/sddl14", BRACK(FH_SDDL | 14), "\\Device\\Harddisk115\\Partition14", exists_ntdev, S_IFBLK, true},
  {"/dev/sddl15", BRACK(FH_SDDL | 15), "\\Device\\Harddisk115\\Partition15", exists_ntdev, S_IFBLK, true},
  {"/dev/sddm1", BRACK(FH_SDDM | 1), "\\Device\\Harddisk116\\Partition1", exists_ntdev, S_IFBLK, true},
  {"/dev/sddm2", BRACK(FH_SDDM | 2), "\\Device\\Harddisk116\\Partition2", exists_ntdev, S_IFBLK, true},
  {"/dev/sddm3", BRACK(FH_SDDM | 3), "\\Device\\Harddisk116\\Partition3", exists_ntdev, S_IFBLK, true},
  {"/dev/sddm4", BRACK(FH_SDDM | 4), "\\Device\\Harddisk116\\Partition4", exists_ntdev, S_IFBLK, true},
  {"/dev/sddm5", BRACK(FH_SDDM | 5), "\\Device\\Harddisk116\\Partition5", exists_ntdev, S_IFBLK, true},
  {"/dev/sddm6", BRACK(FH_SDDM | 6), "\\Device\\Harddisk116\\Partition6", exists_ntdev, S_IFBLK, true},
  {"/dev/sddm7", BRACK(FH_SDDM | 7), "\\Device\\Harddisk116\\Partition7", exists_ntdev, S_IFBLK, true},
  {"/dev/sddm8", BRACK(FH_SDDM | 8), "\\Device\\Harddisk116\\Partition8", exists_ntdev, S_IFBLK, true},
  {"/dev/sddm9", BRACK(FH_SDDM | 9), "\\Device\\Harddisk116\\Partition9", exists_ntdev, S_IFBLK, true},
  {"/dev/sddm10", BRACK(FH_SDDM | 10), "\\Device\\Harddisk116\\Partition10", exists_ntdev, S_IFBLK, true},
  {"/dev/sddm11", BRACK(FH_SDDM | 11), "\\Device\\Harddisk116\\Partition11", exists_ntdev, S_IFBLK, true},
  {"/dev/sddm12", BRACK(FH_SDDM | 12), "\\Device\\Harddisk116\\Partition12", exists_ntdev, S_IFBLK, true},
  {"/dev/sddm13", BRACK(FH_SDDM | 13), "\\Device\\Harddisk116\\Partition13", exists_ntdev, S_IFBLK, true},
  {"/dev/sddm14", BRACK(FH_SDDM | 14), "\\Device\\Harddisk116\\Partition14", exists_ntdev, S_IFBLK, true},
  {"/dev/sddm15", BRACK(FH_SDDM | 15), "\\Device\\Harddisk116\\Partition15", exists_ntdev, S_IFBLK, true},
  {"/dev/sddn1", BRACK(FH_SDDN | 1), "\\Device\\Harddisk117\\Partition1", exists_ntdev, S_IFBLK, true},
  {"/dev/sddn2", BRACK(FH_SDDN | 2), "\\Device\\Harddisk117\\Partition2", exists_ntdev, S_IFBLK, true},
  {"/dev/sddn3", BRACK(FH_SDDN | 3), "\\Device\\Harddisk117\\Partition3", exists_ntdev, S_IFBLK, true},
  {"/dev/sddn4", BRACK(FH_SDDN | 4), "\\Device\\Harddisk117\\Partition4", exists_ntdev, S_IFBLK, true},
  {"/dev/sddn5", BRACK(FH_SDDN | 5), "\\Device\\Harddisk117\\Partition5", exists_ntdev, S_IFBLK, true},
  {"/dev/sddn6", BRACK(FH_SDDN | 6), "\\Device\\Harddisk117\\Partition6", exists_ntdev, S_IFBLK, true},
  {"/dev/sddn7", BRACK(FH_SDDN | 7), "\\Device\\Harddisk117\\Partition7", exists_ntdev, S_IFBLK, true},
  {"/dev/sddn8", BRACK(FH_SDDN | 8), "\\Device\\Harddisk117\\Partition8", exists_ntdev, S_IFBLK, true},
  {"/dev/sddn9", BRACK(FH_SDDN | 9), "\\Device\\Harddisk117\\Partition9", exists_ntdev, S_IFBLK, true},
  {"/dev/sddn10", BRACK(FH_SDDN | 10), "\\Device\\Harddisk117\\Partition10", exists_ntdev, S_IFBLK, true},
  {"/dev/sddn11", BRACK(FH_SDDN | 11), "\\Device\\Harddisk117\\Partition11", exists_ntdev, S_IFBLK, true},
  {"/dev/sddn12", BRACK(FH_SDDN | 12), "\\Device\\Harddisk117\\Partition12", exists_ntdev, S_IFBLK, true},
  {"/dev/sddn13", BRACK(FH_SDDN | 13), "\\Device\\Harddisk117\\Partition13", exists_ntdev, S_IFBLK, true},
  {"/dev/sddn14", BRACK(FH_SDDN | 14), "\\Device\\Harddisk117\\Partition14", exists_ntdev, S_IFBLK, true},
  {"/dev/sddn15", BRACK(FH_SDDN | 15), "\\Device\\Harddisk117\\Partition15", exists_ntdev, S_IFBLK, true},
  {"/dev/sddo1", BRACK(FH_SDDO | 1), "\\Device\\Harddisk118\\Partition1", exists_ntdev, S_IFBLK, true},
  {"/dev/sddo2", BRACK(FH_SDDO | 2), "\\Device\\Harddisk118\\Partition2", exists_ntdev, S_IFBLK, true},
  {"/dev/sddo3", BRACK(FH_SDDO | 3), "\\Device\\Harddisk118\\Partition3", exists_ntdev, S_IFBLK, true},
  {"/dev/sddo4", BRACK(FH_SDDO | 4), "\\Device\\Harddisk118\\Partition4", exists_ntdev, S_IFBLK, true},
  {"/dev/sddo5", BRACK(FH_SDDO | 5), "\\Device\\Harddisk118\\Partition5", exists_ntdev, S_IFBLK, true},
  {"/dev/sddo6", BRACK(FH_SDDO | 6), "\\Device\\Harddisk118\\Partition6", exists_ntdev, S_IFBLK, true},
  {"/dev/sddo7", BRACK(FH_SDDO | 7), "\\Device\\Harddisk118\\Partition7", exists_ntdev, S_IFBLK, true},
  {"/dev/sddo8", BRACK(FH_SDDO | 8), "\\Device\\Harddisk118\\Partition8", exists_ntdev, S_IFBLK, true},
  {"/dev/sddo9", BRACK(FH_SDDO | 9), "\\Device\\Harddisk118\\Partition9", exists_ntdev, S_IFBLK, true},
  {"/dev/sddo10", BRACK(FH_SDDO | 10), "\\Device\\Harddisk118\\Partition10", exists_ntdev, S_IFBLK, true},
  {"/dev/sddo11", BRACK(FH_SDDO | 11), "\\Device\\Harddisk118\\Partition11", exists_ntdev, S_IFBLK, true},
  {"/dev/sddo12", BRACK(FH_SDDO | 12), "\\Device\\Harddisk118\\Partition12", exists_ntdev, S_IFBLK, true},
  {"/dev/sddo13", BRACK(FH_SDDO | 13), "\\Device\\Harddisk118\\Partition13", exists_ntdev, S_IFBLK, true},
  {"/dev/sddo14", BRACK(FH_SDDO | 14), "\\Device\\Harddisk118\\Partition14", exists_ntdev, S_IFBLK, true},
  {"/dev/sddo15", BRACK(FH_SDDO | 15), "\\Device\\Harddisk118\\Partition15", exists_ntdev, S_IFBLK, true},
  {"/dev/sddp1", BRACK(FH_SDDP | 1), "\\Device\\Harddisk119\\Partition1", exists_ntdev, S_IFBLK, true},
  {"/dev/sddp2", BRACK(FH_SDDP | 2), "\\Device\\Harddisk119\\Partition2", exists_ntdev, S_IFBLK, true},
  {"/dev/sddp3", BRACK(FH_SDDP | 3), "\\Device\\Harddisk119\\Partition3", exists_ntdev, S_IFBLK, true},
  {"/dev/sddp4", BRACK(FH_SDDP | 4), "\\Device\\Harddisk119\\Partition4", exists_ntdev, S_IFBLK, true},
  {"/dev/sddp5", BRACK(FH_SDDP | 5), "\\Device\\Harddisk119\\Partition5", exists_ntdev, S_IFBLK, true},
  {"/dev/sddp6", BRACK(FH_SDDP | 6), "\\Device\\Harddisk119\\Partition6", exists_ntdev, S_IFBLK, true},
  {"/dev/sddp7", BRACK(FH_SDDP | 7), "\\Device\\Harddisk119\\Partition7", exists_ntdev, S_IFBLK, true},
  {"/dev/sddp8", BRACK(FH_SDDP | 8), "\\Device\\Harddisk119\\Partition8", exists_ntdev, S_IFBLK, true},
  {"/dev/sddp9", BRACK(FH_SDDP | 9), "\\Device\\Harddisk119\\Partition9", exists_ntdev, S_IFBLK, true},
  {"/dev/sddp10", BRACK(FH_SDDP | 10), "\\Device\\Harddisk119\\Partition10", exists_ntdev, S_IFBLK, true},
  {"/dev/sddp11", BRACK(FH_SDDP | 11), "\\Device\\Harddisk119\\Partition11", exists_ntdev, S_IFBLK, true},
  {"/dev/sddp12", BRACK(FH_SDDP | 12), "\\Device\\Harddisk119\\Partition12", exists_ntdev, S_IFBLK, true},
  {"/dev/sddp13", BRACK(FH_SDDP | 13), "\\Device\\Harddisk119\\Partition13", exists_ntdev, S_IFBLK, true},
  {"/dev/sddp14", BRACK(FH_SDDP | 14), "\\Device\\Harddisk119\\Partition14", exists_ntdev, S_IFBLK, true},
  {"/dev/sddp15", BRACK(FH_SDDP | 15), "\\Device\\Harddisk119\\Partition15", exists_ntdev, S_IFBLK, true},
  {"/dev/sddq1", BRACK(FH_SDDQ | 1), "\\Device\\Harddisk120\\Partition1", exists_ntdev, S_IFBLK, true},
  {"/dev/sddq2", BRACK(FH_SDDQ | 2), "\\Device\\Harddisk120\\Partition2", exists_ntdev, S_IFBLK, true},
  {"/dev/sddq3", BRACK(FH_SDDQ | 3), "\\Device\\Harddisk120\\Partition3", exists_ntdev, S_IFBLK, true},
  {"/dev/sddq4", BRACK(FH_SDDQ | 4), "\\Device\\Harddisk120\\Partition4", exists_ntdev, S_IFBLK, true},
  {"/dev/sddq5", BRACK(FH_SDDQ | 5), "\\Device\\Harddisk120\\Partition5", exists_ntdev, S_IFBLK, true},
  {"/dev/sddq6", BRACK(FH_SDDQ | 6), "\\Device\\Harddisk120\\Partition6", exists_ntdev, S_IFBLK, true},
  {"/dev/sddq7", BRACK(FH_SDDQ | 7), "\\Device\\Harddisk120\\Partition7", exists_ntdev, S_IFBLK, true},
  {"/dev/sddq8", BRACK(FH_SDDQ | 8), "\\Device\\Harddisk120\\Partition8", exists_ntdev, S_IFBLK, true},
  {"/dev/sddq9", BRACK(FH_SDDQ | 9), "\\Device\\Harddisk120\\Partition9", exists_ntdev, S_IFBLK, true},
  {"/dev/sddq10", BRACK(FH_SDDQ | 10), "\\Device\\Harddisk120\\Partition10", exists_ntdev, S_IFBLK, true},
  {"/dev/sddq11", BRACK(FH_SDDQ | 11), "\\Device\\Harddisk120\\Partition11", exists_ntdev, S_IFBLK, true},
  {"/dev/sddq12", BRACK(FH_SDDQ | 12), "\\Device\\Harddisk120\\Partition12", exists_ntdev, S_IFBLK, true},
  {"/dev/sddq13", BRACK(FH_SDDQ | 13), "\\Device\\Harddisk120\\Partition13", exists_ntdev, S_IFBLK, true},
  {"/dev/sddq14", BRACK(FH_SDDQ | 14), "\\Device\\Harddisk120\\Partition14", exists_ntdev, S_IFBLK, true},
  {"/dev/sddq15", BRACK(FH_SDDQ | 15), "\\Device\\Harddisk120\\Partition15", exists_ntdev, S_IFBLK, true},
  {"/dev/sddr1", BRACK(FH_SDDR | 1), "\\Device\\Harddisk121\\Partition1", exists_ntdev, S_IFBLK, true},
  {"/dev/sddr2", BRACK(FH_SDDR | 2), "\\Device\\Harddisk121\\Partition2", exists_ntdev, S_IFBLK, true},
  {"/dev/sddr3", BRACK(FH_SDDR | 3), "\\Device\\Harddisk121\\Partition3", exists_ntdev, S_IFBLK, true},
  {"/dev/sddr4", BRACK(FH_SDDR | 4), "\\Device\\Harddisk121\\Partition4", exists_ntdev, S_IFBLK, true},
  {"/dev/sddr5", BRACK(FH_SDDR | 5), "\\Device\\Harddisk121\\Partition5", exists_ntdev, S_IFBLK, true},
  {"/dev/sddr6", BRACK(FH_SDDR | 6), "\\Device\\Harddisk121\\Partition6", exists_ntdev, S_IFBLK, true},
  {"/dev/sddr7", BRACK(FH_SDDR | 7), "\\Device\\Harddisk121\\Partition7", exists_ntdev, S_IFBLK, true},
  {"/dev/sddr8", BRACK(FH_SDDR | 8), "\\Device\\Harddisk121\\Partition8", exists_ntdev, S_IFBLK, true},
  {"/dev/sddr9", BRACK(FH_SDDR | 9), "\\Device\\Harddisk121\\Partition9", exists_ntdev, S_IFBLK, true},
  {"/dev/sddr10", BRACK(FH_SDDR | 10), "\\Device\\Harddisk121\\Partition10", exists_ntdev, S_IFBLK, true},
  {"/dev/sddr11", BRACK(FH_SDDR | 11), "\\Device\\Harddisk121\\Partition11", exists_ntdev, S_IFBLK, true},
  {"/dev/sddr12", BRACK(FH_SDDR | 12), "\\Device\\Harddisk121\\Partition12", exists_ntdev, S_IFBLK, true},
  {"/dev/sddr13", BRACK(FH_SDDR | 13), "\\Device\\Harddisk121\\Partition13", exists_ntdev, S_IFBLK, true},
  {"/dev/sddr14", BRACK(FH_SDDR | 14), "\\Device\\Harddisk121\\Partition14", exists_ntdev, S_IFBLK, true},
  {"/dev/sddr15", BRACK(FH_SDDR | 15), "\\Device\\Harddisk121\\Partition15", exists_ntdev, S_IFBLK, true},
  {"/dev/sdds1", BRACK(FH_SDDS | 1), "\\Device\\Harddisk122\\Partition1", exists_ntdev, S_IFBLK, true},
  {"/dev/sdds2", BRACK(FH_SDDS | 2), "\\Device\\Harddisk122\\Partition2", exists_ntdev, S_IFBLK, true},
  {"/dev/sdds3", BRACK(FH_SDDS | 3), "\\Device\\Harddisk122\\Partition3", exists_ntdev, S_IFBLK, true},
  {"/dev/sdds4", BRACK(FH_SDDS | 4), "\\Device\\Harddisk122\\Partition4", exists_ntdev, S_IFBLK, true},
  {"/dev/sdds5", BRACK(FH_SDDS | 5), "\\Device\\Harddisk122\\Partition5", exists_ntdev, S_IFBLK, true},
  {"/dev/sdds6", BRACK(FH_SDDS | 6), "\\Device\\Harddisk122\\Partition6", exists_ntdev, S_IFBLK, true},
  {"/dev/sdds7", BRACK(FH_SDDS | 7), "\\Device\\Harddisk122\\Partition7", exists_ntdev, S_IFBLK, true},
  {"/dev/sdds8", BRACK(FH_SDDS | 8), "\\Device\\Harddisk122\\Partition8", exists_ntdev, S_IFBLK, true},
  {"/dev/sdds9", BRACK(FH_SDDS | 9), "\\Device\\Harddisk122\\Partition9", exists_ntdev, S_IFBLK, true},
  {"/dev/sdds10", BRACK(FH_SDDS | 10), "\\Device\\Harddisk122\\Partition10", exists_ntdev, S_IFBLK, true},
  {"/dev/sdds11", BRACK(FH_SDDS | 11), "\\Device\\Harddisk122\\Partition11", exists_ntdev, S_IFBLK, true},
  {"/dev/sdds12", BRACK(FH_SDDS | 12), "\\Device\\Harddisk122\\Partition12", exists_ntdev, S_IFBLK, true},
  {"/dev/sdds13", BRACK(FH_SDDS | 13), "\\Device\\Harddisk122\\Partition13", exists_ntdev, S_IFBLK, true},
  {"/dev/sdds14", BRACK(FH_SDDS | 14), "\\Device\\Harddisk122\\Partition14", exists_ntdev, S_IFBLK, true},
  {"/dev/sdds15", BRACK(FH_SDDS | 15), "\\Device\\Harddisk122\\Partition15", exists_ntdev, S_IFBLK, true},
  {"/dev/sddt1", BRACK(FH_SDDT | 1), "\\Device\\Harddisk123\\Partition1", exists_ntdev, S_IFBLK, true},
  {"/dev/sddt2", BRACK(FH_SDDT | 2), "\\Device\\Harddisk123\\Partition2", exists_ntdev, S_IFBLK, true},
  {"/dev/sddt3", BRACK(FH_SDDT | 3), "\\Device\\Harddisk123\\Partition3", exists_ntdev, S_IFBLK, true},
  {"/dev/sddt4", BRACK(FH_SDDT | 4), "\\Device\\Harddisk123\\Partition4", exists_ntdev, S_IFBLK, true},
  {"/dev/sddt5", BRACK(FH_SDDT | 5), "\\Device\\Harddisk123\\Partition5", exists_ntdev, S_IFBLK, true},
  {"/dev/sddt6", BRACK(FH_SDDT | 6), "\\Device\\Harddisk123\\Partition6", exists_ntdev, S_IFBLK, true},
  {"/dev/sddt7", BRACK(FH_SDDT | 7), "\\Device\\Harddisk123\\Partition7", exists_ntdev, S_IFBLK, true},
  {"/dev/sddt8", BRACK(FH_SDDT | 8), "\\Device\\Harddisk123\\Partition8", exists_ntdev, S_IFBLK, true},
  {"/dev/sddt9", BRACK(FH_SDDT | 9), "\\Device\\Harddisk123\\Partition9", exists_ntdev, S_IFBLK, true},
  {"/dev/sddt10", BRACK(FH_SDDT | 10), "\\Device\\Harddisk123\\Partition10", exists_ntdev, S_IFBLK, true},
  {"/dev/sddt11", BRACK(FH_SDDT | 11), "\\Device\\Harddisk123\\Partition11", exists_ntdev, S_IFBLK, true},
  {"/dev/sddt12", BRACK(FH_SDDT | 12), "\\Device\\Harddisk123\\Partition12", exists_ntdev, S_IFBLK, true},
  {"/dev/sddt13", BRACK(FH_SDDT | 13), "\\Device\\Harddisk123\\Partition13", exists_ntdev, S_IFBLK, true},
  {"/dev/sddt14", BRACK(FH_SDDT | 14), "\\Device\\Harddisk123\\Partition14", exists_ntdev, S_IFBLK, true},
  {"/dev/sddt15", BRACK(FH_SDDT | 15), "\\Device\\Harddisk123\\Partition15", exists_ntdev, S_IFBLK, true},
  {"/dev/sddu1", BRACK(FH_SDDU | 1), "\\Device\\Harddisk124\\Partition1", exists_ntdev, S_IFBLK, true},
  {"/dev/sddu2", BRACK(FH_SDDU | 2), "\\Device\\Harddisk124\\Partition2", exists_ntdev, S_IFBLK, true},
  {"/dev/sddu3", BRACK(FH_SDDU | 3), "\\Device\\Harddisk124\\Partition3", exists_ntdev, S_IFBLK, true},
  {"/dev/sddu4", BRACK(FH_SDDU | 4), "\\Device\\Harddisk124\\Partition4", exists_ntdev, S_IFBLK, true},
  {"/dev/sddu5", BRACK(FH_SDDU | 5), "\\Device\\Harddisk124\\Partition5", exists_ntdev, S_IFBLK, true},
  {"/dev/sddu6", BRACK(FH_SDDU | 6), "\\Device\\Harddisk124\\Partition6", exists_ntdev, S_IFBLK, true},
  {"/dev/sddu7", BRACK(FH_SDDU | 7), "\\Device\\Harddisk124\\Partition7", exists_ntdev, S_IFBLK, true},
  {"/dev/sddu8", BRACK(FH_SDDU | 8), "\\Device\\Harddisk124\\Partition8", exists_ntdev, S_IFBLK, true},
  {"/dev/sddu9", BRACK(FH_SDDU | 9), "\\Device\\Harddisk124\\Partition9", exists_ntdev, S_IFBLK, true},
  {"/dev/sddu10", BRACK(FH_SDDU | 10), "\\Device\\Harddisk124\\Partition10", exists_ntdev, S_IFBLK, true},
  {"/dev/sddu11", BRACK(FH_SDDU | 11), "\\Device\\Harddisk124\\Partition11", exists_ntdev, S_IFBLK, true},
  {"/dev/sddu12", BRACK(FH_SDDU | 12), "\\Device\\Harddisk124\\Partition12", exists_ntdev, S_IFBLK, true},
  {"/dev/sddu13", BRACK(FH_SDDU | 13), "\\Device\\Harddisk124\\Partition13", exists_ntdev, S_IFBLK, true},
  {"/dev/sddu14", BRACK(FH_SDDU | 14), "\\Device\\Harddisk124\\Partition14", exists_ntdev, S_IFBLK, true},
  {"/dev/sddu15", BRACK(FH_SDDU | 15), "\\Device\\Harddisk124\\Partition15", exists_ntdev, S_IFBLK, true},
  {"/dev/sddv1", BRACK(FH_SDDV | 1), "\\Device\\Harddisk125\\Partition1", exists_ntdev, S_IFBLK, true},
  {"/dev/sddv2", BRACK(FH_SDDV | 2), "\\Device\\Harddisk125\\Partition2", exists_ntdev, S_IFBLK, true},
  {"/dev/sddv3", BRACK(FH_SDDV | 3), "\\Device\\Harddisk125\\Partition3", exists_ntdev, S_IFBLK, true},
  {"/dev/sddv4", BRACK(FH_SDDV | 4), "\\Device\\Harddisk125\\Partition4", exists_ntdev, S_IFBLK, true},
  {"/dev/sddv5", BRACK(FH_SDDV | 5), "\\Device\\Harddisk125\\Partition5", exists_ntdev, S_IFBLK, true},
  {"/dev/sddv6", BRACK(FH_SDDV | 6), "\\Device\\Harddisk125\\Partition6", exists_ntdev, S_IFBLK, true},
  {"/dev/sddv7", BRACK(FH_SDDV | 7), "\\Device\\Harddisk125\\Partition7", exists_ntdev, S_IFBLK, true},
  {"/dev/sddv8", BRACK(FH_SDDV | 8), "\\Device\\Harddisk125\\Partition8", exists_ntdev, S_IFBLK, true},
  {"/dev/sddv9", BRACK(FH_SDDV | 9), "\\Device\\Harddisk125\\Partition9", exists_ntdev, S_IFBLK, true},
  {"/dev/sddv10", BRACK(FH_SDDV | 10), "\\Device\\Harddisk125\\Partition10", exists_ntdev, S_IFBLK, true},
  {"/dev/sddv11", BRACK(FH_SDDV | 11), "\\Device\\Harddisk125\\Partition11", exists_ntdev, S_IFBLK, true},
  {"/dev/sddv12", BRACK(FH_SDDV | 12), "\\Device\\Harddisk125\\Partition12", exists_ntdev, S_IFBLK, true},
  {"/dev/sddv13", BRACK(FH_SDDV | 13), "\\Device\\Harddisk125\\Partition13", exists_ntdev, S_IFBLK, true},
  {"/dev/sddv14", BRACK(FH_SDDV | 14), "\\Device\\Harddisk125\\Partition14", exists_ntdev, S_IFBLK, true},
  {"/dev/sddv15", BRACK(FH_SDDV | 15), "\\Device\\Harddisk125\\Partition15", exists_ntdev, S_IFBLK, true},
  {"/dev/sddw1", BRACK(FH_SDDW | 1), "\\Device\\Harddisk126\\Partition1", exists_ntdev, S_IFBLK, true},
  {"/dev/sddw2", BRACK(FH_SDDW | 2), "\\Device\\Harddisk126\\Partition2", exists_ntdev, S_IFBLK, true},
  {"/dev/sddw3", BRACK(FH_SDDW | 3), "\\Device\\Harddisk126\\Partition3", exists_ntdev, S_IFBLK, true},
  {"/dev/sddw4", BRACK(FH_SDDW | 4), "\\Device\\Harddisk126\\Partition4", exists_ntdev, S_IFBLK, true},
  {"/dev/sddw5", BRACK(FH_SDDW | 5), "\\Device\\Harddisk126\\Partition5", exists_ntdev, S_IFBLK, true},
  {"/dev/sddw6", BRACK(FH_SDDW | 6), "\\Device\\Harddisk126\\Partition6", exists_ntdev, S_IFBLK, true},
  {"/dev/sddw7", BRACK(FH_SDDW | 7), "\\Device\\Harddisk126\\Partition7", exists_ntdev, S_IFBLK, true},
  {"/dev/sddw8", BRACK(FH_SDDW | 8), "\\Device\\Harddisk126\\Partition8", exists_ntdev, S_IFBLK, true},
  {"/dev/sddw9", BRACK(FH_SDDW | 9), "\\Device\\Harddisk126\\Partition9", exists_ntdev, S_IFBLK, true},
  {"/dev/sddw10", BRACK(FH_SDDW | 10), "\\Device\\Harddisk126\\Partition10", exists_ntdev, S_IFBLK, true},
  {"/dev/sddw11", BRACK(FH_SDDW | 11), "\\Device\\Harddisk126\\Partition11", exists_ntdev, S_IFBLK, true},
  {"/dev/sddw12", BRACK(FH_SDDW | 12), "\\Device\\Harddisk126\\Partition12", exists_ntdev, S_IFBLK, true},
  {"/dev/sddw13", BRACK(FH_SDDW | 13), "\\Device\\Harddisk126\\Partition13", exists_ntdev, S_IFBLK, true},
  {"/dev/sddw14", BRACK(FH_SDDW | 14), "\\Device\\Harddisk126\\Partition14", exists_ntdev, S_IFBLK, true},
  {"/dev/sddw15", BRACK(FH_SDDW | 15), "\\Device\\Harddisk126\\Partition15", exists_ntdev, S_IFBLK, true},
  {"/dev/sddx1", BRACK(FH_SDDX | 1), "\\Device\\Harddisk127\\Partition1", exists_ntdev, S_IFBLK, true},
  {"/dev/sddx2", BRACK(FH_SDDX | 2), "\\Device\\Harddisk127\\Partition2", exists_ntdev, S_IFBLK, true},
  {"/dev/sddx3", BRACK(FH_SDDX | 3), "\\Device\\Harddisk127\\Partition3", exists_ntdev, S_IFBLK, true},
  {"/dev/sddx4", BRACK(FH_SDDX | 4), "\\Device\\Harddisk127\\Partition4", exists_ntdev, S_IFBLK, true},
  {"/dev/sddx5", BRACK(FH_SDDX | 5), "\\Device\\Harddisk127\\Partition5", exists_ntdev, S_IFBLK, true},
  {"/dev/sddx6", BRACK(FH_SDDX | 6), "\\Device\\Harddisk127\\Partition6", exists_ntdev, S_IFBLK, true},
  {"/dev/sddx7", BRACK(FH_SDDX | 7), "\\Device\\Harddisk127\\Partition7", exists_ntdev, S_IFBLK, true},
  {"/dev/sddx8", BRACK(FH_SDDX | 8), "\\Device\\Harddisk127\\Partition8", exists_ntdev, S_IFBLK, true},
  {"/dev/sddx9", BRACK(FH_SDDX | 9), "\\Device\\Harddisk127\\Partition9", exists_ntdev, S_IFBLK, true},
  {"/dev/sddx10", BRACK(FH_SDDX | 10), "\\Device\\Harddisk127\\Partition10", exists_ntdev, S_IFBLK, true},
  {"/dev/sddx11", BRACK(FH_SDDX | 11), "\\Device\\Harddisk127\\Partition11", exists_ntdev, S_IFBLK, true},
  {"/dev/sddx12", BRACK(FH_SDDX | 12), "\\Device\\Harddisk127\\Partition12", exists_ntdev, S_IFBLK, true},
  {"/dev/sddx13", BRACK(FH_SDDX | 13), "\\Device\\Harddisk127\\Partition13", exists_ntdev, S_IFBLK, true},
  {"/dev/sddx14", BRACK(FH_SDDX | 14), "\\Device\\Harddisk127\\Partition14", exists_ntdev, S_IFBLK, true},
  {"/dev/sddx15", BRACK(FH_SDDX | 15), "\\Device\\Harddisk127\\Partition15", exists_ntdev, S_IFBLK, true},
  {"/dev/sr0", BRACK(FHDEV(DEV_CDROM_MAJOR, 0)), "\\Device\\CdRom0", exists_ntdev, S_IFBLK, true},
  {"/dev/sr1", BRACK(FHDEV(DEV_CDROM_MAJOR, 1)), "\\Device\\CdRom1", exists_ntdev, S_IFBLK, true},
  {"/dev/sr2", BRACK(FHDEV(DEV_CDROM_MAJOR, 2)), "\\Device\\CdRom2", exists_ntdev, S_IFBLK, true},
  {"/dev/sr3", BRACK(FHDEV(DEV_CDROM_MAJOR, 3)), "\\Device\\CdRom3", exists_ntdev, S_IFBLK, true},
  {"/dev/sr4", BRACK(FHDEV(DEV_CDROM_MAJOR, 4)), "\\Device\\CdRom4", exists_ntdev, S_IFBLK, true},
  {"/dev/sr5", BRACK(FHDEV(DEV_CDROM_MAJOR, 5)), "\\Device\\CdRom5", exists_ntdev, S_IFBLK, true},
  {"/dev/sr6", BRACK(FHDEV(DEV_CDROM_MAJOR, 6)), "\\Device\\CdRom6", exists_ntdev, S_IFBLK, true},
  {"/dev/sr7", BRACK(FHDEV(DEV_CDROM_MAJOR, 7)), "\\Device\\CdRom7", exists_ntdev, S_IFBLK, true},
  {"/dev/sr8", BRACK(FHDEV(DEV_CDROM_MAJOR, 8)), "\\Device\\CdRom8", exists_ntdev, S_IFBLK, true},
  {"/dev/sr9", BRACK(FHDEV(DEV_CDROM_MAJOR, 9)), "\\Device\\CdRom9", exists_ntdev, S_IFBLK, true},
  {"/dev/sr10", BRACK(FHDEV(DEV_CDROM_MAJOR, 10)), "\\Device\\CdRom10", exists_ntdev, S_IFBLK, true},
  {"/dev/sr11", BRACK(FHDEV(DEV_CDROM_MAJOR, 11)), "\\Device\\CdRom11", exists_ntdev, S_IFBLK, true},
  {"/dev/sr12", BRACK(FHDEV(DEV_CDROM_MAJOR, 12)), "\\Device\\CdRom12", exists_ntdev, S_IFBLK, true},
  {"/dev/sr13", BRACK(FHDEV(DEV_CDROM_MAJOR, 13)), "\\Device\\CdRom13", exists_ntdev, S_IFBLK, true},
  {"/dev/sr14", BRACK(FHDEV(DEV_CDROM_MAJOR, 14)), "\\Device\\CdRom14", exists_ntdev, S_IFBLK, true},
  {"/dev/sr15", BRACK(FHDEV(DEV_CDROM_MAJOR, 15)), "\\Device\\CdRom15", exists_ntdev, S_IFBLK, true},
  {"/dev/st0", BRACK(FHDEV(DEV_TAPE_MAJOR, 0)), "\\Device\\Tape0", exists_ntdev, S_IFBLK, true},
  {"/dev/st1", BRACK(FHDEV(DEV_TAPE_MAJOR, 1)), "\\Device\\Tape1", exists_ntdev, S_IFBLK, true},
  {"/dev/st2", BRACK(FHDEV(DEV_TAPE_MAJOR, 2)), "\\Device\\Tape2", exists_ntdev, S_IFBLK, true},
  {"/dev/st3", BRACK(FHDEV(DEV_TAPE_MAJOR, 3)), "\\Device\\Tape3", exists_ntdev, S_IFBLK, true},
  {"/dev/st4", BRACK(FHDEV(DEV_TAPE_MAJOR, 4)), "\\Device\\Tape4", exists_ntdev, S_IFBLK, true},
  {"/dev/st5", BRACK(FHDEV(DEV_TAPE_MAJOR, 5)), "\\Device\\Tape5", exists_ntdev, S_IFBLK, true},
  {"/dev/st6", BRACK(FHDEV(DEV_TAPE_MAJOR, 6)), "\\Device\\Tape6", exists_ntdev, S_IFBLK, true},
  {"/dev/st7", BRACK(FHDEV(DEV_TAPE_MAJOR, 7)), "\\Device\\Tape7", exists_ntdev, S_IFBLK, true},
  {"/dev/st8", BRACK(FHDEV(DEV_TAPE_MAJOR, 8)), "\\Device\\Tape8", exists_ntdev, S_IFBLK, true},
  {"/dev/st9", BRACK(FHDEV(DEV_TAPE_MAJOR, 9)), "\\Device\\Tape9", exists_ntdev, S_IFBLK, true},
  {"/dev/st10", BRACK(FHDEV(DEV_TAPE_MAJOR, 10)), "\\Device\\Tape10", exists_ntdev, S_IFBLK, true},
  {"/dev/st11", BRACK(FHDEV(DEV_TAPE_MAJOR, 11)), "\\Device\\Tape11", exists_ntdev, S_IFBLK, true},
  {"/dev/st12", BRACK(FHDEV(DEV_TAPE_MAJOR, 12)), "\\Device\\Tape12", exists_ntdev, S_IFBLK, true},
  {"/dev/st13", BRACK(FHDEV(DEV_TAPE_MAJOR, 13)), "\\Device\\Tape13", exists_ntdev, S_IFBLK, true},
  {"/dev/st14", BRACK(FHDEV(DEV_TAPE_MAJOR, 14)), "\\Device\\Tape14", exists_ntdev, S_IFBLK, true},
  {"/dev/st15", BRACK(FHDEV(DEV_TAPE_MAJOR, 15)), "\\Device\\Tape15", exists_ntdev, S_IFBLK, true},
  {"/dev/st16", BRACK(FHDEV(DEV_TAPE_MAJOR, 16)), "\\Device\\Tape16", exists_ntdev, S_IFBLK, true},
  {"/dev/st17", BRACK(FHDEV(DEV_TAPE_MAJOR, 17)), "\\Device\\Tape17", exists_ntdev, S_IFBLK, true},
  {"/dev/st18", BRACK(FHDEV(DEV_TAPE_MAJOR, 18)), "\\Device\\Tape18", exists_ntdev, S_IFBLK, true},
  {"/dev/st19", BRACK(FHDEV(DEV_TAPE_MAJOR, 19)), "\\Device\\Tape19", exists_ntdev, S_IFBLK, true},
  {"/dev/st20", BRACK(FHDEV(DEV_TAPE_MAJOR, 20)), "\\Device\\Tape20", exists_ntdev, S_IFBLK, true},
  {"/dev/st21", BRACK(FHDEV(DEV_TAPE_MAJOR, 21)), "\\Device\\Tape21", exists_ntdev, S_IFBLK, true},
  {"/dev/st22", BRACK(FHDEV(DEV_TAPE_MAJOR, 22)), "\\Device\\Tape22", exists_ntdev, S_IFBLK, true},
  {"/dev/st23", BRACK(FHDEV(DEV_TAPE_MAJOR, 23)), "\\Device\\Tape23", exists_ntdev, S_IFBLK, true},
  {"/dev/st24", BRACK(FHDEV(DEV_TAPE_MAJOR, 24)), "\\Device\\Tape24", exists_ntdev, S_IFBLK, true},
  {"/dev/st25", BRACK(FHDEV(DEV_TAPE_MAJOR, 25)), "\\Device\\Tape25", exists_ntdev, S_IFBLK, true},
  {"/dev/st26", BRACK(FHDEV(DEV_TAPE_MAJOR, 26)), "\\Device\\Tape26", exists_ntdev, S_IFBLK, true},
  {"/dev/st27", BRACK(FHDEV(DEV_TAPE_MAJOR, 27)), "\\Device\\Tape27", exists_ntdev, S_IFBLK, true},
  {"/dev/st28", BRACK(FHDEV(DEV_TAPE_MAJOR, 28)), "\\Device\\Tape28", exists_ntdev, S_IFBLK, true},
  {"/dev/st29", BRACK(FHDEV(DEV_TAPE_MAJOR, 29)), "\\Device\\Tape29", exists_ntdev, S_IFBLK, true},
  {"/dev/st30", BRACK(FHDEV(DEV_TAPE_MAJOR, 30)), "\\Device\\Tape30", exists_ntdev, S_IFBLK, true},
  {"/dev/st31", BRACK(FHDEV(DEV_TAPE_MAJOR, 31)), "\\Device\\Tape31", exists_ntdev, S_IFBLK, true},
  {"/dev/st32", BRACK(FHDEV(DEV_TAPE_MAJOR, 32)), "\\Device\\Tape32", exists_ntdev, S_IFBLK, true},
  {"/dev/st33", BRACK(FHDEV(DEV_TAPE_MAJOR, 33)), "\\Device\\Tape33", exists_ntdev, S_IFBLK, true},
  {"/dev/st34", BRACK(FHDEV(DEV_TAPE_MAJOR, 34)), "\\Device\\Tape34", exists_ntdev, S_IFBLK, true},
  {"/dev/st35", BRACK(FHDEV(DEV_TAPE_MAJOR, 35)), "\\Device\\Tape35", exists_ntdev, S_IFBLK, true},
  {"/dev/st36", BRACK(FHDEV(DEV_TAPE_MAJOR, 36)), "\\Device\\Tape36", exists_ntdev, S_IFBLK, true},
  {"/dev/st37", BRACK(FHDEV(DEV_TAPE_MAJOR, 37)), "\\Device\\Tape37", exists_ntdev, S_IFBLK, true},
  {"/dev/st38", BRACK(FHDEV(DEV_TAPE_MAJOR, 38)), "\\Device\\Tape38", exists_ntdev, S_IFBLK, true},
  {"/dev/st39", BRACK(FHDEV(DEV_TAPE_MAJOR, 39)), "\\Device\\Tape39", exists_ntdev, S_IFBLK, true},
  {"/dev/st40", BRACK(FHDEV(DEV_TAPE_MAJOR, 40)), "\\Device\\Tape40", exists_ntdev, S_IFBLK, true},
  {"/dev/st41", BRACK(FHDEV(DEV_TAPE_MAJOR, 41)), "\\Device\\Tape41", exists_ntdev, S_IFBLK, true},
  {"/dev/st42", BRACK(FHDEV(DEV_TAPE_MAJOR, 42)), "\\Device\\Tape42", exists_ntdev, S_IFBLK, true},
  {"/dev/st43", BRACK(FHDEV(DEV_TAPE_MAJOR, 43)), "\\Device\\Tape43", exists_ntdev, S_IFBLK, true},
  {"/dev/st44", BRACK(FHDEV(DEV_TAPE_MAJOR, 44)), "\\Device\\Tape44", exists_ntdev, S_IFBLK, true},
  {"/dev/st45", BRACK(FHDEV(DEV_TAPE_MAJOR, 45)), "\\Device\\Tape45", exists_ntdev, S_IFBLK, true},
  {"/dev/st46", BRACK(FHDEV(DEV_TAPE_MAJOR, 46)), "\\Device\\Tape46", exists_ntdev, S_IFBLK, true},
  {"/dev/st47", BRACK(FHDEV(DEV_TAPE_MAJOR, 47)), "\\Device\\Tape47", exists_ntdev, S_IFBLK, true},
  {"/dev/st48", BRACK(FHDEV(DEV_TAPE_MAJOR, 48)), "\\Device\\Tape48", exists_ntdev, S_IFBLK, true},
  {"/dev/st49", BRACK(FHDEV(DEV_TAPE_MAJOR, 49)), "\\Device\\Tape49", exists_ntdev, S_IFBLK, true},
  {"/dev/st50", BRACK(FHDEV(DEV_TAPE_MAJOR, 50)), "\\Device\\Tape50", exists_ntdev, S_IFBLK, true},
  {"/dev/st51", BRACK(FHDEV(DEV_TAPE_MAJOR, 51)), "\\Device\\Tape51", exists_ntdev, S_IFBLK, true},
  {"/dev/st52", BRACK(FHDEV(DEV_TAPE_MAJOR, 52)), "\\Device\\Tape52", exists_ntdev, S_IFBLK, true},
  {"/dev/st53", BRACK(FHDEV(DEV_TAPE_MAJOR, 53)), "\\Device\\Tape53", exists_ntdev, S_IFBLK, true},
  {"/dev/st54", BRACK(FHDEV(DEV_TAPE_MAJOR, 54)), "\\Device\\Tape54", exists_ntdev, S_IFBLK, true},
  {"/dev/st55", BRACK(FHDEV(DEV_TAPE_MAJOR, 55)), "\\Device\\Tape55", exists_ntdev, S_IFBLK, true},
  {"/dev/st56", BRACK(FHDEV(DEV_TAPE_MAJOR, 56)), "\\Device\\Tape56", exists_ntdev, S_IFBLK, true},
  {"/dev/st57", BRACK(FHDEV(DEV_TAPE_MAJOR, 57)), "\\Device\\Tape57", exists_ntdev, S_IFBLK, true},
  {"/dev/st58", BRACK(FHDEV(DEV_TAPE_MAJOR, 58)), "\\Device\\Tape58", exists_ntdev, S_IFBLK, true},
  {"/dev/st59", BRACK(FHDEV(DEV_TAPE_MAJOR, 59)), "\\Device\\Tape59", exists_ntdev, S_IFBLK, true},
  {"/dev/st60", BRACK(FHDEV(DEV_TAPE_MAJOR, 60)), "\\Device\\Tape60", exists_ntdev, S_IFBLK, true},
  {"/dev/st61", BRACK(FHDEV(DEV_TAPE_MAJOR, 61)), "\\Device\\Tape61", exists_ntdev, S_IFBLK, true},
  {"/dev/st62", BRACK(FHDEV(DEV_TAPE_MAJOR, 62)), "\\Device\\Tape62", exists_ntdev, S_IFBLK, true},
  {"/dev/st63", BRACK(FHDEV(DEV_TAPE_MAJOR, 63)), "\\Device\\Tape63", exists_ntdev, S_IFBLK, true},
  {"/dev/st64", BRACK(FHDEV(DEV_TAPE_MAJOR, 64)), "\\Device\\Tape64", exists_ntdev, S_IFBLK, true},
  {"/dev/st65", BRACK(FHDEV(DEV_TAPE_MAJOR, 65)), "\\Device\\Tape65", exists_ntdev, S_IFBLK, true},
  {"/dev/st66", BRACK(FHDEV(DEV_TAPE_MAJOR, 66)), "\\Device\\Tape66", exists_ntdev, S_IFBLK, true},
  {"/dev/st67", BRACK(FHDEV(DEV_TAPE_MAJOR, 67)), "\\Device\\Tape67", exists_ntdev, S_IFBLK, true},
  {"/dev/st68", BRACK(FHDEV(DEV_TAPE_MAJOR, 68)), "\\Device\\Tape68", exists_ntdev, S_IFBLK, true},
  {"/dev/st69", BRACK(FHDEV(DEV_TAPE_MAJOR, 69)), "\\Device\\Tape69", exists_ntdev, S_IFBLK, true},
  {"/dev/st70", BRACK(FHDEV(DEV_TAPE_MAJOR, 70)), "\\Device\\Tape70", exists_ntdev, S_IFBLK, true},
  {"/dev/st71", BRACK(FHDEV(DEV_TAPE_MAJOR, 71)), "\\Device\\Tape71", exists_ntdev, S_IFBLK, true},
  {"/dev/st72", BRACK(FHDEV(DEV_TAPE_MAJOR, 72)), "\\Device\\Tape72", exists_ntdev, S_IFBLK, true},
  {"/dev/st73", BRACK(FHDEV(DEV_TAPE_MAJOR, 73)), "\\Device\\Tape73", exists_ntdev, S_IFBLK, true},
  {"/dev/st74", BRACK(FHDEV(DEV_TAPE_MAJOR, 74)), "\\Device\\Tape74", exists_ntdev, S_IFBLK, true},
  {"/dev/st75", BRACK(FHDEV(DEV_TAPE_MAJOR, 75)), "\\Device\\Tape75", exists_ntdev, S_IFBLK, true},
  {"/dev/st76", BRACK(FHDEV(DEV_TAPE_MAJOR, 76)), "\\Device\\Tape76", exists_ntdev, S_IFBLK, true},
  {"/dev/st77", BRACK(FHDEV(DEV_TAPE_MAJOR, 77)), "\\Device\\Tape77", exists_ntdev, S_IFBLK, true},
  {"/dev/st78", BRACK(FHDEV(DEV_TAPE_MAJOR, 78)), "\\Device\\Tape78", exists_ntdev, S_IFBLK, true},
  {"/dev/st79", BRACK(FHDEV(DEV_TAPE_MAJOR, 79)), "\\Device\\Tape79", exists_ntdev, S_IFBLK, true},
  {"/dev/st80", BRACK(FHDEV(DEV_TAPE_MAJOR, 80)), "\\Device\\Tape80", exists_ntdev, S_IFBLK, true},
  {"/dev/st81", BRACK(FHDEV(DEV_TAPE_MAJOR, 81)), "\\Device\\Tape81", exists_ntdev, S_IFBLK, true},
  {"/dev/st82", BRACK(FHDEV(DEV_TAPE_MAJOR, 82)), "\\Device\\Tape82", exists_ntdev, S_IFBLK, true},
  {"/dev/st83", BRACK(FHDEV(DEV_TAPE_MAJOR, 83)), "\\Device\\Tape83", exists_ntdev, S_IFBLK, true},
  {"/dev/st84", BRACK(FHDEV(DEV_TAPE_MAJOR, 84)), "\\Device\\Tape84", exists_ntdev, S_IFBLK, true},
  {"/dev/st85", BRACK(FHDEV(DEV_TAPE_MAJOR, 85)), "\\Device\\Tape85", exists_ntdev, S_IFBLK, true},
  {"/dev/st86", BRACK(FHDEV(DEV_TAPE_MAJOR, 86)), "\\Device\\Tape86", exists_ntdev, S_IFBLK, true},
  {"/dev/st87", BRACK(FHDEV(DEV_TAPE_MAJOR, 87)), "\\Device\\Tape87", exists_ntdev, S_IFBLK, true},
  {"/dev/st88", BRACK(FHDEV(DEV_TAPE_MAJOR, 88)), "\\Device\\Tape88", exists_ntdev, S_IFBLK, true},
  {"/dev/st89", BRACK(FHDEV(DEV_TAPE_MAJOR, 89)), "\\Device\\Tape89", exists_ntdev, S_IFBLK, true},
  {"/dev/st90", BRACK(FHDEV(DEV_TAPE_MAJOR, 90)), "\\Device\\Tape90", exists_ntdev, S_IFBLK, true},
  {"/dev/st91", BRACK(FHDEV(DEV_TAPE_MAJOR, 91)), "\\Device\\Tape91", exists_ntdev, S_IFBLK, true},
  {"/dev/st92", BRACK(FHDEV(DEV_TAPE_MAJOR, 92)), "\\Device\\Tape92", exists_ntdev, S_IFBLK, true},
  {"/dev/st93", BRACK(FHDEV(DEV_TAPE_MAJOR, 93)), "\\Device\\Tape93", exists_ntdev, S_IFBLK, true},
  {"/dev/st94", BRACK(FHDEV(DEV_TAPE_MAJOR, 94)), "\\Device\\Tape94", exists_ntdev, S_IFBLK, true},
  {"/dev/st95", BRACK(FHDEV(DEV_TAPE_MAJOR, 95)), "\\Device\\Tape95", exists_ntdev, S_IFBLK, true},
  {"/dev/st96", BRACK(FHDEV(DEV_TAPE_MAJOR, 96)), "\\Device\\Tape96", exists_ntdev, S_IFBLK, true},
  {"/dev/st97", BRACK(FHDEV(DEV_TAPE_MAJOR, 97)), "\\Device\\Tape97", exists_ntdev, S_IFBLK, true},
  {"/dev/st98", BRACK(FHDEV(DEV_TAPE_MAJOR, 98)), "\\Device\\Tape98", exists_ntdev, S_IFBLK, true},
  {"/dev/st99", BRACK(FHDEV(DEV_TAPE_MAJOR, 99)), "\\Device\\Tape99", exists_ntdev, S_IFBLK, true},
  {"/dev/st100", BRACK(FHDEV(DEV_TAPE_MAJOR, 100)), "\\Device\\Tape100", exists_ntdev, S_IFBLK, true},
  {"/dev/st101", BRACK(FHDEV(DEV_TAPE_MAJOR, 101)), "\\Device\\Tape101", exists_ntdev, S_IFBLK, true},
  {"/dev/st102", BRACK(FHDEV(DEV_TAPE_MAJOR, 102)), "\\Device\\Tape102", exists_ntdev, S_IFBLK, true},
  {"/dev/st103", BRACK(FHDEV(DEV_TAPE_MAJOR, 103)), "\\Device\\Tape103", exists_ntdev, S_IFBLK, true},
  {"/dev/st104", BRACK(FHDEV(DEV_TAPE_MAJOR, 104)), "\\Device\\Tape104", exists_ntdev, S_IFBLK, true},
  {"/dev/st105", BRACK(FHDEV(DEV_TAPE_MAJOR, 105)), "\\Device\\Tape105", exists_ntdev, S_IFBLK, true},
  {"/dev/st106", BRACK(FHDEV(DEV_TAPE_MAJOR, 106)), "\\Device\\Tape106", exists_ntdev, S_IFBLK, true},
  {"/dev/st107", BRACK(FHDEV(DEV_TAPE_MAJOR, 107)), "\\Device\\Tape107", exists_ntdev, S_IFBLK, true},
  {"/dev/st108", BRACK(FHDEV(DEV_TAPE_MAJOR, 108)), "\\Device\\Tape108", exists_ntdev, S_IFBLK, true},
  {"/dev/st109", BRACK(FHDEV(DEV_TAPE_MAJOR, 109)), "\\Device\\Tape109", exists_ntdev, S_IFBLK, true},
  {"/dev/st110", BRACK(FHDEV(DEV_TAPE_MAJOR, 110)), "\\Device\\Tape110", exists_ntdev, S_IFBLK, true},
  {"/dev/st111", BRACK(FHDEV(DEV_TAPE_MAJOR, 111)), "\\Device\\Tape111", exists_ntdev, S_IFBLK, true},
  {"/dev/st112", BRACK(FHDEV(DEV_TAPE_MAJOR, 112)), "\\Device\\Tape112", exists_ntdev, S_IFBLK, true},
  {"/dev/st113", BRACK(FHDEV(DEV_TAPE_MAJOR, 113)), "\\Device\\Tape113", exists_ntdev, S_IFBLK, true},
  {"/dev/st114", BRACK(FHDEV(DEV_TAPE_MAJOR, 114)), "\\Device\\Tape114", exists_ntdev, S_IFBLK, true},
  {"/dev/st115", BRACK(FHDEV(DEV_TAPE_MAJOR, 115)), "\\Device\\Tape115", exists_ntdev, S_IFBLK, true},
  {"/dev/st116", BRACK(FHDEV(DEV_TAPE_MAJOR, 116)), "\\Device\\Tape116", exists_ntdev, S_IFBLK, true},
  {"/dev/st117", BRACK(FHDEV(DEV_TAPE_MAJOR, 117)), "\\Device\\Tape117", exists_ntdev, S_IFBLK, true},
  {"/dev/st118", BRACK(FHDEV(DEV_TAPE_MAJOR, 118)), "\\Device\\Tape118", exists_ntdev, S_IFBLK, true},
  {"/dev/st119", BRACK(FHDEV(DEV_TAPE_MAJOR, 119)), "\\Device\\Tape119", exists_ntdev, S_IFBLK, true},
  {"/dev/st120", BRACK(FHDEV(DEV_TAPE_MAJOR, 120)), "\\Device\\Tape120", exists_ntdev, S_IFBLK, true},
  {"/dev/st121", BRACK(FHDEV(DEV_TAPE_MAJOR, 121)), "\\Device\\Tape121", exists_ntdev, S_IFBLK, true},
  {"/dev/st122", BRACK(FHDEV(DEV_TAPE_MAJOR, 122)), "\\Device\\Tape122", exists_ntdev, S_IFBLK, true},
  {"/dev/st123", BRACK(FHDEV(DEV_TAPE_MAJOR, 123)), "\\Device\\Tape123", exists_ntdev, S_IFBLK, true},
  {"/dev/st124", BRACK(FHDEV(DEV_TAPE_MAJOR, 124)), "\\Device\\Tape124", exists_ntdev, S_IFBLK, true},
  {"/dev/st125", BRACK(FHDEV(DEV_TAPE_MAJOR, 125)), "\\Device\\Tape125", exists_ntdev, S_IFBLK, true},
  {"/dev/st126", BRACK(FHDEV(DEV_TAPE_MAJOR, 126)), "\\Device\\Tape126", exists_ntdev, S_IFBLK, true},
  {"/dev/st127", BRACK(FHDEV(DEV_TAPE_MAJOR, 127)), "\\Device\\Tape127", exists_ntdev, S_IFBLK, true},
  {"/dev/tty", BRACK(FH_TTY), "/dev/tty", exists, S_IFCHR, true},
  {"/dev/ttyS0", BRACK(FHDEV(DEV_SERIAL_MAJOR, 0)), "\\??\\COM1", exists_ntdev, S_IFCHR, true},
  {"/dev/ttyS1", BRACK(FHDEV(DEV_SERIAL_MAJOR, 1)), "\\??\\COM2", exists_ntdev, S_IFCHR, true},
  {"/dev/ttyS2", BRACK(FHDEV(DEV_SERIAL_MAJOR, 2)), "\\??\\COM3", exists_ntdev, S_IFCHR, true},
  {"/dev/ttyS3", BRACK(FHDEV(DEV_SERIAL_MAJOR, 3)), "\\??\\COM4", exists_ntdev, S_IFCHR, true},
  {"/dev/ttyS4", BRACK(FHDEV(DEV_SERIAL_MAJOR, 4)), "\\??\\COM5", exists_ntdev, S_IFCHR, true},
  {"/dev/ttyS5", BRACK(FHDEV(DEV_SERIAL_MAJOR, 5)), "\\??\\COM6", exists_ntdev, S_IFCHR, true},
  {"/dev/ttyS6", BRACK(FHDEV(DEV_SERIAL_MAJOR, 6)), "\\??\\COM7", exists_ntdev, S_IFCHR, true},
  {"/dev/ttyS7", BRACK(FHDEV(DEV_SERIAL_MAJOR, 7)), "\\??\\COM8", exists_ntdev, S_IFCHR, true},
  {"/dev/ttyS8", BRACK(FHDEV(DEV_SERIAL_MAJOR, 8)), "\\??\\COM9", exists_ntdev, S_IFCHR, true},
  {"/dev/ttyS9", BRACK(FHDEV(DEV_SERIAL_MAJOR, 9)), "\\??\\COM10", exists_ntdev, S_IFCHR, true},
  {"/dev/ttyS10", BRACK(FHDEV(DEV_SERIAL_MAJOR, 10)), "\\??\\COM11", exists_ntdev, S_IFCHR, true},
  {"/dev/ttyS11", BRACK(FHDEV(DEV_SERIAL_MAJOR, 11)), "\\??\\COM12", exists_ntdev, S_IFCHR, true},
  {"/dev/ttyS12", BRACK(FHDEV(DEV_SERIAL_MAJOR, 12)), "\\??\\COM13", exists_ntdev, S_IFCHR, true},
  {"/dev/ttyS13", BRACK(FHDEV(DEV_SERIAL_MAJOR, 13)), "\\??\\COM14", exists_ntdev, S_IFCHR, true},
  {"/dev/ttyS14", BRACK(FHDEV(DEV_SERIAL_MAJOR, 14)), "\\??\\COM15", exists_ntdev, S_IFCHR, true},
  {"/dev/ttyS15", BRACK(FHDEV(DEV_SERIAL_MAJOR, 15)), "\\??\\COM16", exists_ntdev, S_IFCHR, true},
  {"/dev/ttyS16", BRACK(FHDEV(DEV_SERIAL_MAJOR, 16)), "\\??\\COM17", exists_ntdev, S_IFCHR, true},
  {"/dev/ttyS17", BRACK(FHDEV(DEV_SERIAL_MAJOR, 17)), "\\??\\COM18", exists_ntdev, S_IFCHR, true},
  {"/dev/ttyS18", BRACK(FHDEV(DEV_SERIAL_MAJOR, 18)), "\\??\\COM19", exists_ntdev, S_IFCHR, true},
  {"/dev/ttyS19", BRACK(FHDEV(DEV_SERIAL_MAJOR, 19)), "\\??\\COM20", exists_ntdev, S_IFCHR, true},
  {"/dev/ttyS20", BRACK(FHDEV(DEV_SERIAL_MAJOR, 20)), "\\??\\COM21", exists_ntdev, S_IFCHR, true},
  {"/dev/ttyS21", BRACK(FHDEV(DEV_SERIAL_MAJOR, 21)), "\\??\\COM22", exists_ntdev, S_IFCHR, true},
  {"/dev/ttyS22", BRACK(FHDEV(DEV_SERIAL_MAJOR, 22)), "\\??\\COM23", exists_ntdev, S_IFCHR, true},
  {"/dev/ttyS23", BRACK(FHDEV(DEV_SERIAL_MAJOR, 23)), "\\??\\COM24", exists_ntdev, S_IFCHR, true},
  {"/dev/ttyS24", BRACK(FHDEV(DEV_SERIAL_MAJOR, 24)), "\\??\\COM25", exists_ntdev, S_IFCHR, true},
  {"/dev/ttyS25", BRACK(FHDEV(DEV_SERIAL_MAJOR, 25)), "\\??\\COM26", exists_ntdev, S_IFCHR, true},
  {"/dev/ttyS26", BRACK(FHDEV(DEV_SERIAL_MAJOR, 26)), "\\??\\COM27", exists_ntdev, S_IFCHR, true},
  {"/dev/ttyS27", BRACK(FHDEV(DEV_SERIAL_MAJOR, 27)), "\\??\\COM28", exists_ntdev, S_IFCHR, true},
  {"/dev/ttyS28", BRACK(FHDEV(DEV_SERIAL_MAJOR, 28)), "\\??\\COM29", exists_ntdev, S_IFCHR, true},
  {"/dev/ttyS29", BRACK(FHDEV(DEV_SERIAL_MAJOR, 29)), "\\??\\COM30", exists_ntdev, S_IFCHR, true},
  {"/dev/ttyS30", BRACK(FHDEV(DEV_SERIAL_MAJOR, 30)), "\\??\\COM31", exists_ntdev, S_IFCHR, true},
  {"/dev/ttyS31", BRACK(FHDEV(DEV_SERIAL_MAJOR, 31)), "\\??\\COM32", exists_ntdev, S_IFCHR, true},
  {"/dev/ttyS32", BRACK(FHDEV(DEV_SERIAL_MAJOR, 32)), "\\??\\COM33", exists_ntdev, S_IFCHR, true},
  {"/dev/ttyS33", BRACK(FHDEV(DEV_SERIAL_MAJOR, 33)), "\\??\\COM34", exists_ntdev, S_IFCHR, true},
  {"/dev/ttyS34", BRACK(FHDEV(DEV_SERIAL_MAJOR, 34)), "\\??\\COM35", exists_ntdev, S_IFCHR, true},
  {"/dev/ttyS35", BRACK(FHDEV(DEV_SERIAL_MAJOR, 35)), "\\??\\COM36", exists_ntdev, S_IFCHR, true},
  {"/dev/ttyS36", BRACK(FHDEV(DEV_SERIAL_MAJOR, 36)), "\\??\\COM37", exists_ntdev, S_IFCHR, true},
  {"/dev/ttyS37", BRACK(FHDEV(DEV_SERIAL_MAJOR, 37)), "\\??\\COM38", exists_ntdev, S_IFCHR, true},
  {"/dev/ttyS38", BRACK(FHDEV(DEV_SERIAL_MAJOR, 38)), "\\??\\COM39", exists_ntdev, S_IFCHR, true},
  {"/dev/ttyS39", BRACK(FHDEV(DEV_SERIAL_MAJOR, 39)), "\\??\\COM40", exists_ntdev, S_IFCHR, true},
  {"/dev/ttyS40", BRACK(FHDEV(DEV_SERIAL_MAJOR, 40)), "\\??\\COM41", exists_ntdev, S_IFCHR, true},
  {"/dev/ttyS41", BRACK(FHDEV(DEV_SERIAL_MAJOR, 41)), "\\??\\COM42", exists_ntdev, S_IFCHR, true},
  {"/dev/ttyS42", BRACK(FHDEV(DEV_SERIAL_MAJOR, 42)), "\\??\\COM43", exists_ntdev, S_IFCHR, true},
  {"/dev/ttyS43", BRACK(FHDEV(DEV_SERIAL_MAJOR, 43)), "\\??\\COM44", exists_ntdev, S_IFCHR, true},
  {"/dev/ttyS44", BRACK(FHDEV(DEV_SERIAL_MAJOR, 44)), "\\??\\COM45", exists_ntdev, S_IFCHR, true},
  {"/dev/ttyS45", BRACK(FHDEV(DEV_SERIAL_MAJOR, 45)), "\\??\\COM46", exists_ntdev, S_IFCHR, true},
  {"/dev/ttyS46", BRACK(FHDEV(DEV_SERIAL_MAJOR, 46)), "\\??\\COM47", exists_ntdev, S_IFCHR, true},
  {"/dev/ttyS47", BRACK(FHDEV(DEV_SERIAL_MAJOR, 47)), "\\??\\COM48", exists_ntdev, S_IFCHR, true},
  {"/dev/ttyS48", BRACK(FHDEV(DEV_SERIAL_MAJOR, 48)), "\\??\\COM49", exists_ntdev, S_IFCHR, true},
  {"/dev/ttyS49", BRACK(FHDEV(DEV_SERIAL_MAJOR, 49)), "\\??\\COM50", exists_ntdev, S_IFCHR, true},
  {"/dev/ttyS50", BRACK(FHDEV(DEV_SERIAL_MAJOR, 50)), "\\??\\COM51", exists_ntdev, S_IFCHR, true},
  {"/dev/ttyS51", BRACK(FHDEV(DEV_SERIAL_MAJOR, 51)), "\\??\\COM52", exists_ntdev, S_IFCHR, true},
  {"/dev/ttyS52", BRACK(FHDEV(DEV_SERIAL_MAJOR, 52)), "\\??\\COM53", exists_ntdev, S_IFCHR, true},
  {"/dev/ttyS53", BRACK(FHDEV(DEV_SERIAL_MAJOR, 53)), "\\??\\COM54", exists_ntdev, S_IFCHR, true},
  {"/dev/ttyS54", BRACK(FHDEV(DEV_SERIAL_MAJOR, 54)), "\\??\\COM55", exists_ntdev, S_IFCHR, true},
  {"/dev/ttyS55", BRACK(FHDEV(DEV_SERIAL_MAJOR, 55)), "\\??\\COM56", exists_ntdev, S_IFCHR, true},
  {"/dev/ttyS56", BRACK(FHDEV(DEV_SERIAL_MAJOR, 56)), "\\??\\COM57", exists_ntdev, S_IFCHR, true},
  {"/dev/ttyS57", BRACK(FHDEV(DEV_SERIAL_MAJOR, 57)), "\\??\\COM58", exists_ntdev, S_IFCHR, true},
  {"/dev/ttyS58", BRACK(FHDEV(DEV_SERIAL_MAJOR, 58)), "\\??\\COM59", exists_ntdev, S_IFCHR, true},
  {"/dev/ttyS59", BRACK(FHDEV(DEV_SERIAL_MAJOR, 59)), "\\??\\COM60", exists_ntdev, S_IFCHR, true},
  {"/dev/ttyS60", BRACK(FHDEV(DEV_SERIAL_MAJOR, 60)), "\\??\\COM61", exists_ntdev, S_IFCHR, true},
  {"/dev/ttyS61", BRACK(FHDEV(DEV_SERIAL_MAJOR, 61)), "\\??\\COM62", exists_ntdev, S_IFCHR, true},
  {"/dev/ttyS62", BRACK(FHDEV(DEV_SERIAL_MAJOR, 62)), "\\??\\COM63", exists_ntdev, S_IFCHR, true},
  {"/dev/ttyS63", BRACK(FHDEV(DEV_SERIAL_MAJOR, 63)), "\\??\\COM64", exists_ntdev, S_IFCHR, true},
  {"/dev/urandom", BRACK(FH_URANDOM), "\\Device\\Null", exists_ntdev, S_IFCHR, true},
  {"/dev/windows", BRACK(FH_WINDOWS), "\\Device\\Null", exists_ntdev, S_IFCHR, true},
  {"/dev/zero", BRACK(FH_ZERO), "\\Device\\Null", exists_ntdev, S_IFCHR, true},
  {":fifo", BRACK(FH_FIFO), "/dev/fifo", exists_internal, S_IFCHR, false},
  {":pipe", BRACK(FH_PIPE), "/dev/pipe", exists_internal, S_IFCHR, false},
  {":ptym0", BRACK(FHDEV(DEV_PTYM_MAJOR, 0)), "/dev/ptym0", exists_internal, S_IFCHR, false},
  {":ptym1", BRACK(FHDEV(DEV_PTYM_MAJOR, 1)), "/dev/ptym1", exists_internal, S_IFCHR, false},
  {":ptym2", BRACK(FHDEV(DEV_PTYM_MAJOR, 2)), "/dev/ptym2", exists_internal, S_IFCHR, false},
  {":ptym3", BRACK(FHDEV(DEV_PTYM_MAJOR, 3)), "/dev/ptym3", exists_internal, S_IFCHR, false},
  {":ptym4", BRACK(FHDEV(DEV_PTYM_MAJOR, 4)), "/dev/ptym4", exists_internal, S_IFCHR, false},
  {":ptym5", BRACK(FHDEV(DEV_PTYM_MAJOR, 5)), "/dev/ptym5", exists_internal, S_IFCHR, false},
  {":ptym6", BRACK(FHDEV(DEV_PTYM_MAJOR, 6)), "/dev/ptym6", exists_internal, S_IFCHR, false},
  {":ptym7", BRACK(FHDEV(DEV_PTYM_MAJOR, 7)), "/dev/ptym7", exists_internal, S_IFCHR, false},
  {":ptym8", BRACK(FHDEV(DEV_PTYM_MAJOR, 8)), "/dev/ptym8", exists_internal, S_IFCHR, false},
  {":ptym9", BRACK(FHDEV(DEV_PTYM_MAJOR, 9)), "/dev/ptym9", exists_internal, S_IFCHR, false},
  {":ptym10", BRACK(FHDEV(DEV_PTYM_MAJOR, 10)), "/dev/ptym10", exists_internal, S_IFCHR, false},
  {":ptym11", BRACK(FHDEV(DEV_PTYM_MAJOR, 11)), "/dev/ptym11", exists_internal, S_IFCHR, false},
  {":ptym12", BRACK(FHDEV(DEV_PTYM_MAJOR, 12)), "/dev/ptym12", exists_internal, S_IFCHR, false},
  {":ptym13", BRACK(FHDEV(DEV_PTYM_MAJOR, 13)), "/dev/ptym13", exists_internal, S_IFCHR, false},
  {":ptym14", BRACK(FHDEV(DEV_PTYM_MAJOR, 14)), "/dev/ptym14", exists_internal, S_IFCHR, false},
  {":ptym15", BRACK(FHDEV(DEV_PTYM_MAJOR, 15)), "/dev/ptym15", exists_internal, S_IFCHR, false},
  {":ptym16", BRACK(FHDEV(DEV_PTYM_MAJOR, 16)), "/dev/ptym16", exists_internal, S_IFCHR, false},
  {":ptym17", BRACK(FHDEV(DEV_PTYM_MAJOR, 17)), "/dev/ptym17", exists_internal, S_IFCHR, false},
  {":ptym18", BRACK(FHDEV(DEV_PTYM_MAJOR, 18)), "/dev/ptym18", exists_internal, S_IFCHR, false},
  {":ptym19", BRACK(FHDEV(DEV_PTYM_MAJOR, 19)), "/dev/ptym19", exists_internal, S_IFCHR, false},
  {":ptym20", BRACK(FHDEV(DEV_PTYM_MAJOR, 20)), "/dev/ptym20", exists_internal, S_IFCHR, false},
  {":ptym21", BRACK(FHDEV(DEV_PTYM_MAJOR, 21)), "/dev/ptym21", exists_internal, S_IFCHR, false},
  {":ptym22", BRACK(FHDEV(DEV_PTYM_MAJOR, 22)), "/dev/ptym22", exists_internal, S_IFCHR, false},
  {":ptym23", BRACK(FHDEV(DEV_PTYM_MAJOR, 23)), "/dev/ptym23", exists_internal, S_IFCHR, false},
  {":ptym24", BRACK(FHDEV(DEV_PTYM_MAJOR, 24)), "/dev/ptym24", exists_internal, S_IFCHR, false},
  {":ptym25", BRACK(FHDEV(DEV_PTYM_MAJOR, 25)), "/dev/ptym25", exists_internal, S_IFCHR, false},
  {":ptym26", BRACK(FHDEV(DEV_PTYM_MAJOR, 26)), "/dev/ptym26", exists_internal, S_IFCHR, false},
  {":ptym27", BRACK(FHDEV(DEV_PTYM_MAJOR, 27)), "/dev/ptym27", exists_internal, S_IFCHR, false},
  {":ptym28", BRACK(FHDEV(DEV_PTYM_MAJOR, 28)), "/dev/ptym28", exists_internal, S_IFCHR, false},
  {":ptym29", BRACK(FHDEV(DEV_PTYM_MAJOR, 29)), "/dev/ptym29", exists_internal, S_IFCHR, false},
  {":ptym30", BRACK(FHDEV(DEV_PTYM_MAJOR, 30)), "/dev/ptym30", exists_internal, S_IFCHR, false},
  {":ptym31", BRACK(FHDEV(DEV_PTYM_MAJOR, 31)), "/dev/ptym31", exists_internal, S_IFCHR, false},
  {":ptym32", BRACK(FHDEV(DEV_PTYM_MAJOR, 32)), "/dev/ptym32", exists_internal, S_IFCHR, false},
  {":ptym33", BRACK(FHDEV(DEV_PTYM_MAJOR, 33)), "/dev/ptym33", exists_internal, S_IFCHR, false},
  {":ptym34", BRACK(FHDEV(DEV_PTYM_MAJOR, 34)), "/dev/ptym34", exists_internal, S_IFCHR, false},
  {":ptym35", BRACK(FHDEV(DEV_PTYM_MAJOR, 35)), "/dev/ptym35", exists_internal, S_IFCHR, false},
  {":ptym36", BRACK(FHDEV(DEV_PTYM_MAJOR, 36)), "/dev/ptym36", exists_internal, S_IFCHR, false},
  {":ptym37", BRACK(FHDEV(DEV_PTYM_MAJOR, 37)), "/dev/ptym37", exists_internal, S_IFCHR, false},
  {":ptym38", BRACK(FHDEV(DEV_PTYM_MAJOR, 38)), "/dev/ptym38", exists_internal, S_IFCHR, false},
  {":ptym39", BRACK(FHDEV(DEV_PTYM_MAJOR, 39)), "/dev/ptym39", exists_internal, S_IFCHR, false},
  {":ptym40", BRACK(FHDEV(DEV_PTYM_MAJOR, 40)), "/dev/ptym40", exists_internal, S_IFCHR, false},
  {":ptym41", BRACK(FHDEV(DEV_PTYM_MAJOR, 41)), "/dev/ptym41", exists_internal, S_IFCHR, false},
  {":ptym42", BRACK(FHDEV(DEV_PTYM_MAJOR, 42)), "/dev/ptym42", exists_internal, S_IFCHR, false},
  {":ptym43", BRACK(FHDEV(DEV_PTYM_MAJOR, 43)), "/dev/ptym43", exists_internal, S_IFCHR, false},
  {":ptym44", BRACK(FHDEV(DEV_PTYM_MAJOR, 44)), "/dev/ptym44", exists_internal, S_IFCHR, false},
  {":ptym45", BRACK(FHDEV(DEV_PTYM_MAJOR, 45)), "/dev/ptym45", exists_internal, S_IFCHR, false},
  {":ptym46", BRACK(FHDEV(DEV_PTYM_MAJOR, 46)), "/dev/ptym46", exists_internal, S_IFCHR, false},
  {":ptym47", BRACK(FHDEV(DEV_PTYM_MAJOR, 47)), "/dev/ptym47", exists_internal, S_IFCHR, false},
  {":ptym48", BRACK(FHDEV(DEV_PTYM_MAJOR, 48)), "/dev/ptym48", exists_internal, S_IFCHR, false},
  {":ptym49", BRACK(FHDEV(DEV_PTYM_MAJOR, 49)), "/dev/ptym49", exists_internal, S_IFCHR, false},
  {":ptym50", BRACK(FHDEV(DEV_PTYM_MAJOR, 50)), "/dev/ptym50", exists_internal, S_IFCHR, false},
  {":ptym51", BRACK(FHDEV(DEV_PTYM_MAJOR, 51)), "/dev/ptym51", exists_internal, S_IFCHR, false},
  {":ptym52", BRACK(FHDEV(DEV_PTYM_MAJOR, 52)), "/dev/ptym52", exists_internal, S_IFCHR, false},
  {":ptym53", BRACK(FHDEV(DEV_PTYM_MAJOR, 53)), "/dev/ptym53", exists_internal, S_IFCHR, false},
  {":ptym54", BRACK(FHDEV(DEV_PTYM_MAJOR, 54)), "/dev/ptym54", exists_internal, S_IFCHR, false},
  {":ptym55", BRACK(FHDEV(DEV_PTYM_MAJOR, 55)), "/dev/ptym55", exists_internal, S_IFCHR, false},
  {":ptym56", BRACK(FHDEV(DEV_PTYM_MAJOR, 56)), "/dev/ptym56", exists_internal, S_IFCHR, false},
  {":ptym57", BRACK(FHDEV(DEV_PTYM_MAJOR, 57)), "/dev/ptym57", exists_internal, S_IFCHR, false},
  {":ptym58", BRACK(FHDEV(DEV_PTYM_MAJOR, 58)), "/dev/ptym58", exists_internal, S_IFCHR, false},
  {":ptym59", BRACK(FHDEV(DEV_PTYM_MAJOR, 59)), "/dev/ptym59", exists_internal, S_IFCHR, false},
  {":ptym60", BRACK(FHDEV(DEV_PTYM_MAJOR, 60)), "/dev/ptym60", exists_internal, S_IFCHR, false},
  {":ptym61", BRACK(FHDEV(DEV_PTYM_MAJOR, 61)), "/dev/ptym61", exists_internal, S_IFCHR, false},
  {":ptym62", BRACK(FHDEV(DEV_PTYM_MAJOR, 62)), "/dev/ptym62", exists_internal, S_IFCHR, false},
  {":ptym63", BRACK(FHDEV(DEV_PTYM_MAJOR, 63)), "/dev/ptym63", exists_internal, S_IFCHR, false}
};

const device *cons_dev = dev_storage + 20;
const device *console_dev = dev_storage + 84;
const device *ptym_dev = dev_storage + 2577;
const device *ptys_dev = dev_storage + 234;
const device *urandom_dev = dev_storage + 2572;


static KR_device_t KR_find_keyword (const char *KR_keyword, int KR_length)
{

  switch (KR_length)
    {
    case 4:
          if (strncmp (KR_keyword, "/dev", 4) == 0)
            {
{
return dev_storage + 0;

}
            }
          else
            {
{
return	NULL;

}
            }
    case 5:
      switch (KR_keyword [1])
        {
        case 'p':
          if (strncmp (KR_keyword, ":pipe", 5) == 0)
            {
{
return dev_storage + 2576;

}
            }
          else
            {
{
return	NULL;

}
            }
        case 'f':
          if (strncmp (KR_keyword, ":fifo", 5) == 0)
            {
{
return dev_storage + 2575;

}
            }
          else
            {
{
return	NULL;

}
            }
        default:
{
return	NULL;

}
        }
    case 6:
      switch (KR_keyword [5])
        {
        case '9':
          if (strncmp (KR_keyword, ":ptym9", 6) == 0)
            {
{
return dev_storage + 2586;

}
            }
          else
            {
{
return	NULL;

}
            }
        case '8':
          if (strncmp (KR_keyword, ":ptym8", 6) == 0)
            {
{
return dev_storage + 2585;

}
            }
          else
            {
{
return	NULL;

}
            }
        case '7':
          if (strncmp (KR_keyword, ":ptym7", 6) == 0)
            {
{
return dev_storage + 2584;

}
            }
          else
            {
{
return	NULL;

}
            }
        case '6':
          if (strncmp (KR_keyword, ":ptym6", 6) == 0)
            {
{
return dev_storage + 2583;

}
            }
          else
            {
{
return	NULL;

}
            }
        case '5':
          if (strncmp (KR_keyword, ":ptym5", 6) == 0)
            {
{
return dev_storage + 2582;

}
            }
          else
            {
{
return	NULL;

}
            }
        case '4':
          if (strncmp (KR_keyword, ":ptym4", 6) == 0)
            {
{
return dev_storage + 2581;

}
            }
          else
            {
{
return	NULL;

}
            }
        case '3':
          if (strncmp (KR_keyword, ":ptym3", 6) == 0)
            {
{
return dev_storage + 2580;

}
            }
          else
            {
{
return	NULL;

}
            }
        case '2':
          if (strncmp (KR_keyword, ":ptym2", 6) == 0)
            {
{
return dev_storage + 2579;

}
            }
          else
            {
{
return	NULL;

}
            }
        case '1':
          if (strncmp (KR_keyword, ":ptym1", 6) == 0)
            {
{
return dev_storage + 2578;

}
            }
          else
            {
{
return	NULL;

}
            }
        case '0':
          if (strncmp (KR_keyword, ":ptym0", 6) == 0)
            {
{
return dev_storage + 2577;

}
            }
          else
            {
{
return	NULL;

}
            }
        default:
{
return	NULL;

}
        }
    case 7:
      switch (KR_keyword [5])
        {
        case '6':
          switch (KR_keyword [6])
            {
            case '3':
              if (strncmp (KR_keyword, ":ptym63", 7) == 0)
                {
{
return dev_storage + 2640;

}
                }
              else
                {
{
return	NULL;

}
                }
            case '2':
              if (strncmp (KR_keyword, ":ptym62", 7) == 0)
                {
{
return dev_storage + 2639;

}
                }
              else
                {
{
return	NULL;

}
                }
            case '1':
              if (strncmp (KR_keyword, ":ptym61", 7) == 0)
                {
{
return dev_storage + 2638;

}
                }
              else
                {
{
return	NULL;

}
                }
            case '0':
              if (strncmp (KR_keyword, ":ptym60", 7) == 0)
                {
{
return dev_storage + 2637;

}
                }
              else
                {
{
return	NULL;

}
                }
            default:
{
return	NULL;

}
            }
        case '5':
          switch (KR_keyword [6])
            {
            case '9':
              if (strncmp (KR_keyword, ":ptym59", 7) == 0)
                {
{
return dev_storage + 2636;

}
                }
              else
                {
{
return	NULL;

}
                }
            case '8':
              if (strncmp (KR_keyword, ":ptym58", 7) == 0)
                {
{
return dev_storage + 2635;

}
                }
              else
                {
{
return	NULL;

}
                }
            case '7':
              if (strncmp (KR_keyword, ":ptym57", 7) == 0)
                {
{
return dev_storage + 2634;

}
                }
              else
                {
{
return	NULL;

}
                }
            case '6':
              if (strncmp (KR_keyword, ":ptym56", 7) == 0)
                {
{
return dev_storage + 2633;

}
                }
              else
                {
{
return	NULL;

}
                }
            case '5':
              if (strncmp (KR_keyword, ":ptym55", 7) == 0)
                {
{
return dev_storage + 2632;

}
                }
              else
                {
{
return	NULL;

}
                }
            case '4':
              if (strncmp (KR_keyword, ":ptym54", 7) == 0)
                {
{
return dev_storage + 2631;

}
                }
              else
                {
{
return	NULL;

}
                }
            case '3':
              if (strncmp (KR_keyword, ":ptym53", 7) == 0)
                {
{
return dev_storage + 2630;

}
                }
              else
                {
{
return	NULL;

}
                }
            case '2':
              if (strncmp (KR_keyword, ":ptym52", 7) == 0)
                {
{
return dev_storage + 2629;

}
                }
              else
                {
{
return	NULL;

}
                }
            case '1':
              if (strncmp (KR_keyword, ":ptym51", 7) == 0)
                {
{
return dev_storage + 2628;

}
                }
              else
                {
{
return	NULL;

}
                }
            case '0':
              if (strncmp (KR_keyword, ":ptym50", 7) == 0)
                {
{
return dev_storage + 2627;

}
                }
              else
                {
{
return	NULL;

}
                }
            default:
{
return	NULL;

}
            }
        case '4':
          switch (KR_keyword [6])
            {
            case '9':
              if (strncmp (KR_keyword, ":ptym49", 7) == 0)
                {
{
return dev_storage + 2626;

}
                }
              else
                {
{
return	NULL;

}
                }
            case '8':
              if (strncmp (KR_keyword, ":ptym48", 7) == 0)
                {
{
return dev_storage + 2625;

}
                }
              else
                {
{
return	NULL;

}
                }
            case '7':
              if (strncmp (KR_keyword, ":ptym47", 7) == 0)
                {
{
return dev_storage + 2624;

}
                }
              else
                {
{
return	NULL;

}
                }
            case '6':
              if (strncmp (KR_keyword, ":ptym46", 7) == 0)
                {
{
return dev_storage + 2623;

}
                }
              else
                {
{
return	NULL;

}
                }
            case '5':
              if (strncmp (KR_keyword, ":ptym45", 7) == 0)
                {
{
return dev_storage + 2622;

}
                }
              else
                {
{
return	NULL;

}
                }
            case '4':
              if (strncmp (KR_keyword, ":ptym44", 7) == 0)
                {
{
return dev_storage + 2621;

}
                }
              else
                {
{
return	NULL;

}
                }
            case '3':
              if (strncmp (KR_keyword, ":ptym43", 7) == 0)
                {
{
return dev_storage + 2620;

}
                }
              else
                {
{
return	NULL;

}
                }
            case '2':
              if (strncmp (KR_keyword, ":ptym42", 7) == 0)
                {
{
return dev_storage + 2619;

}
                }
              else
                {
{
return	NULL;

}
                }
            case '1':
              if (strncmp (KR_keyword, ":ptym41", 7) == 0)
                {
{
return dev_storage + 2618;

}
                }
              else
                {
{
return	NULL;

}
                }
            case '0':
              if (strncmp (KR_keyword, ":ptym40", 7) == 0)
                {
{
return dev_storage + 2617;

}
                }
              else
                {
{
return	NULL;

}
                }
            default:
{
return	NULL;

}
            }
        case '3':
          switch (KR_keyword [6])
            {
            case '9':
              if (strncmp (KR_keyword, ":ptym39", 7) == 0)
                {
{
return dev_storage + 2616;

}
                }
              else
                {
{
return	NULL;

}
                }
            case '8':
              if (strncmp (KR_keyword, ":ptym38", 7) == 0)
                {
{
return dev_storage + 2615;

}
                }
              else
                {
{
return	NULL;

}
                }
            case '7':
              if (strncmp (KR_keyword, ":ptym37", 7) == 0)
                {
{
return dev_storage + 2614;

}
                }
              else
                {
{
return	NULL;

}
                }
            case '6':
              if (strncmp (KR_keyword, ":ptym36", 7) == 0)
                {
{
return dev_storage + 2613;

}
                }
              else
                {
{
return	NULL;

}
                }
            case '5':
              if (strncmp (KR_keyword, ":ptym35", 7) == 0)
                {
{
return dev_storage + 2612;

}
                }
              else
                {
{
return	NULL;

}
                }
            case '4':
              if (strncmp (KR_keyword, ":ptym34", 7) == 0)
                {
{
return dev_storage + 2611;

}
                }
              else
                {
{
return	NULL;

}
                }
            case '3':
              if (strncmp (KR_keyword, ":ptym33", 7) == 0)
                {
{
return dev_storage + 2610;

}
                }
              else
                {
{
return	NULL;

}
                }
            case '2':
              if (strncmp (KR_keyword, ":ptym32", 7) == 0)
                {
{
return dev_storage + 2609;

}
                }
              else
                {
{
return	NULL;

}
                }
            case '1':
              if (strncmp (KR_keyword, ":ptym31", 7) == 0)
                {
{
return dev_storage + 2608;

}
                }
              else
                {
{
return	NULL;

}
                }
            case '0':
              if (strncmp (KR_keyword, ":ptym30", 7) == 0)
                {
{
return dev_storage + 2607;

}
                }
              else
                {
{
return	NULL;

}
                }
            default:
{
return	NULL;

}
            }
        case '2':
          switch (KR_keyword [6])
            {
            case '9':
              if (strncmp (KR_keyword, ":ptym29", 7) == 0)
                {
{
return dev_storage + 2606;

}
                }
              else
                {
{
return	NULL;

}
                }
            case '8':
              if (strncmp (KR_keyword, ":ptym28", 7) == 0)
                {
{
return dev_storage + 2605;

}
                }
              else
                {
{
return	NULL;

}
                }
            case '7':
              if (strncmp (KR_keyword, ":ptym27", 7) == 0)
                {
{
return dev_storage + 2604;

}
                }
              else
                {
{
return	NULL;

}
                }
            case '6':
              if (strncmp (KR_keyword, ":ptym26", 7) == 0)
                {
{
return dev_storage + 2603;

}
                }
              else
                {
{
return	NULL;

}
                }
            case '5':
              if (strncmp (KR_keyword, ":ptym25", 7) == 0)
                {
{
return dev_storage + 2602;

}
                }
              else
                {
{
return	NULL;

}
                }
            case '4':
              if (strncmp (KR_keyword, ":ptym24", 7) == 0)
                {
{
return dev_storage + 2601;

}
                }
              else
                {
{
return	NULL;

}
                }
            case '3':
              if (strncmp (KR_keyword, ":ptym23", 7) == 0)
                {
{
return dev_storage + 2600;

}
                }
              else
                {
{
return	NULL;

}
                }
            case '2':
              if (strncmp (KR_keyword, ":ptym22", 7) == 0)
                {
{
return dev_storage + 2599;

}
                }
              else
                {
{
return	NULL;

}
                }
            case '1':
              if (strncmp (KR_keyword, ":ptym21", 7) == 0)
                {
{
return dev_storage + 2598;

}
                }
              else
                {
{
return	NULL;

}
                }
            case '0':
              if (strncmp (KR_keyword, ":ptym20", 7) == 0)
                {
{
return dev_storage + 2597;

}
                }
              else
                {
{
return	NULL;

}
                }
            default:
{
return	NULL;

}
            }
        case '1':
          switch (KR_keyword [6])
            {
            case '9':
              if (strncmp (KR_keyword, ":ptym19", 7) == 0)
                {
{
return dev_storage + 2596;

}
                }
              else
                {
{
return	NULL;

}
                }
            case '8':
              if (strncmp (KR_keyword, ":ptym18", 7) == 0)
                {
{
return dev_storage + 2595;

}
                }
              else
                {
{
return	NULL;

}
                }
            case '7':
              if (strncmp (KR_keyword, ":ptym17", 7) == 0)
                {
{
return dev_storage + 2594;

}
                }
              else
                {
{
return	NULL;

}
                }
            case '6':
              if (strncmp (KR_keyword, ":ptym16", 7) == 0)
                {
{
return dev_storage + 2593;

}
                }
              else
                {
{
return	NULL;

}
                }
            case '5':
              if (strncmp (KR_keyword, ":ptym15", 7) == 0)
                {
{
return dev_storage + 2592;

}
                }
              else
                {
{
return	NULL;

}
                }
            case '4':
              if (strncmp (KR_keyword, ":ptym14", 7) == 0)
                {
{
return dev_storage + 2591;

}
                }
              else
                {
{
return	NULL;

}
                }
            case '3':
              if (strncmp (KR_keyword, ":ptym13", 7) == 0)
                {
{
return dev_storage + 2590;

}
                }
              else
                {
{
return	NULL;

}
                }
            case '2':
              if (strncmp (KR_keyword, ":ptym12", 7) == 0)
                {
{
return dev_storage + 2589;

}
                }
              else
                {
{
return	NULL;

}
                }
            case '1':
              if (strncmp (KR_keyword, ":ptym11", 7) == 0)
                {
{
return dev_storage + 2588;

}
                }
              else
                {
{
return	NULL;

}
                }
            case '0':
              if (strncmp (KR_keyword, ":ptym10", 7) == 0)
                {
{
return dev_storage + 2587;

}
                }
              else
                {
{
return	NULL;

}
                }
            default:
{
return	NULL;

}
            }
        default:
{
return	NULL;

}
        }
    case 8:
      switch (KR_keyword [7])
        {
        case 'z':
          if (strncmp (KR_keyword, "/dev/sdz", 8) == 0)
            {
{
return dev_storage + 340;

}
            }
          else
            {
{
return	NULL;

}
            }
        case 'y':
          switch (KR_keyword [5])
            {
            case 't':
              if (strncmp (KR_keyword, "/dev/tty", 8) == 0)
                {
{
return dev_storage + 2507;

}
                }
              else
                {
{
return	NULL;

}
                }
            case 's':
              if (strncmp (KR_keyword, "/dev/sdy", 8) == 0)
                {
{
return dev_storage + 339;

}
                }
              else
                {
{
return	NULL;

}
                }
            default:
{
return	NULL;

}
            }
        case 'x':
          if (strncmp (KR_keyword, "/dev/sdx", 8) == 0)
            {
{
return dev_storage + 338;

}
            }
          else
            {
{
return	NULL;

}
            }
        case 'w':
          if (strncmp (KR_keyword, "/dev/sdw", 8) == 0)
            {
{
return dev_storage + 337;

}
            }
          else
            {
{
return	NULL;

}
            }
        case 'v':
          if (strncmp (KR_keyword, "/dev/sdv", 8) == 0)
            {
{
return dev_storage + 336;

}
            }
          else
            {
{
return	NULL;

}
            }
        case 'u':
          if (strncmp (KR_keyword, "/dev/sdu", 8) == 0)
            {
{
return dev_storage + 335;

}
            }
          else
            {
{
return	NULL;

}
            }
        case 't':
          if (strncmp (KR_keyword, "/dev/sdt", 8) == 0)
            {
{
return dev_storage + 334;

}
            }
          else
            {
{
return	NULL;

}
            }
        case 's':
          if (strncmp (KR_keyword, "/dev/sds", 8) == 0)
            {
{
return dev_storage + 333;

}
            }
          else
            {
{
return	NULL;

}
            }
        case 'r':
          if (strncmp (KR_keyword, "/dev/sdr", 8) == 0)
            {
{
return dev_storage + 332;

}
            }
          else
            {
{
return	NULL;

}
            }
        case 'q':
          if (strncmp (KR_keyword, "/dev/sdq", 8) == 0)
            {
{
return dev_storage + 331;

}
            }
          else
            {
{
return	NULL;

}
            }
        case 'p':
          switch (KR_keyword [5])
            {
            case 's':
              if (strncmp (KR_keyword, "/dev/sdp", 8) == 0)
                {
{
return dev_storage + 330;

}
                }
              else
                {
{
return	NULL;

}
                }
            case 'd':
              if (strncmp (KR_keyword, "/dev/dsp", 8) == 0)
                {
{
return dev_storage + 85;

}
                }
              else
                {
{
return	NULL;

}
                }
            default:
{
return	NULL;

}
            }
        case 'o':
          if (strncmp (KR_keyword, "/dev/sdo", 8) == 0)
            {
{
return dev_storage + 329;

}
            }
          else
            {
{
return	NULL;

}
            }
        case 'n':
          if (strncmp (KR_keyword, "/dev/sdn", 8) == 0)
            {
{
return dev_storage + 328;

}
            }
          else
            {
{
return	NULL;

}
            }
        case 'm':
          if (strncmp (KR_keyword, "/dev/sdm", 8) == 0)
            {
{
return dev_storage + 327;

}
            }
          else
            {
{
return	NULL;

}
            }
        case 'l':
          if (strncmp (KR_keyword, "/dev/sdl", 8) == 0)
            {
{
return dev_storage + 326;

}
            }
          else
            {
{
return	NULL;

}
            }
        case 'k':
          if (strncmp (KR_keyword, "/dev/sdk", 8) == 0)
            {
{
return dev_storage + 325;

}
            }
          else
            {
{
return	NULL;

}
            }
        case 'j':
          if (strncmp (KR_keyword, "/dev/sdj", 8) == 0)
            {
{
return dev_storage + 324;

}
            }
          else
            {
{
return	NULL;

}
            }
        case 'i':
          if (strncmp (KR_keyword, "/dev/sdi", 8) == 0)
            {
{
return dev_storage + 323;

}
            }
          else
            {
{
return	NULL;

}
            }
        case 'h':
          if (strncmp (KR_keyword, "/dev/sdh", 8) == 0)
            {
{
return dev_storage + 322;

}
            }
          else
            {
{
return	NULL;

}
            }
        case 'g':
          if (strncmp (KR_keyword, "/dev/sdg", 8) == 0)
            {
{
return dev_storage + 321;

}
            }
          else
            {
{
return	NULL;

}
            }
        case 'f':
          if (strncmp (KR_keyword, "/dev/sdf", 8) == 0)
            {
{
return dev_storage + 320;

}
            }
          else
            {
{
return	NULL;

}
            }
        case 'e':
          if (strncmp (KR_keyword, "/dev/sde", 8) == 0)
            {
{
return dev_storage + 319;

}
            }
          else
            {
{
return	NULL;

}
            }
        case 'd':
          if (strncmp (KR_keyword, "/dev/sdd", 8) == 0)
            {
{
return dev_storage + 318;

}
            }
          else
            {
{
return	NULL;

}
            }
        case 'c':
          if (strncmp (KR_keyword, "/dev/sdc", 8) == 0)
            {
{
return dev_storage + 317;

}
            }
          else
            {
{
return	NULL;

}
            }
        case 'b':
          if (strncmp (KR_keyword, "/dev/sdb", 8) == 0)
            {
{
return dev_storage + 316;

}
            }
          else
            {
{
return	NULL;

}
            }
        case 'a':
          if (strncmp (KR_keyword, "/dev/sda", 8) == 0)
            {
{
return dev_storage + 315;

}
            }
          else
            {
{
return	NULL;

}
            }
        case '9':
          switch (KR_keyword [6])
            {
            case 't':
              if (strncmp (KR_keyword, "/dev/st9", 8) == 0)
                {
{
return dev_storage + 2388;

}
                }
              else
                {
{
return	NULL;

}
                }
            case 'r':
              if (strncmp (KR_keyword, "/dev/sr9", 8) == 0)
                {
{
return dev_storage + 2372;

}
                }
              else
                {
{
return	NULL;

}
                }
            case 'd':
              if (strncmp (KR_keyword, "/dev/fd9", 8) == 0)
                {
{
return dev_storage + 95;

}
                }
              else
                {
{
return	NULL;

}
                }
            default:
{
return	NULL;

}
            }
        case '8':
          switch (KR_keyword [6])
            {
            case 't':
              if (strncmp (KR_keyword, "/dev/st8", 8) == 0)
                {
{
return dev_storage + 2387;

}
                }
              else
                {
{
return	NULL;

}
                }
            case 'r':
              if (strncmp (KR_keyword, "/dev/sr8", 8) == 0)
                {
{
return dev_storage + 2371;

}
                }
              else
                {
{
return	NULL;

}
                }
            case 'd':
              if (strncmp (KR_keyword, "/dev/fd8", 8) == 0)
                {
{
return dev_storage + 94;

}
                }
              else
                {
{
return	NULL;

}
                }
            default:
{
return	NULL;

}
            }
        case '7':
          switch (KR_keyword [6])
            {
            case 't':
              if (strncmp (KR_keyword, "/dev/st7", 8) == 0)
                {
{
return dev_storage + 2386;

}
                }
              else
                {
{
return	NULL;

}
                }
            case 'r':
              if (strncmp (KR_keyword, "/dev/sr7", 8) == 0)
                {
{
return dev_storage + 2370;

}
                }
              else
                {
{
return	NULL;

}
                }
            case 'd':
              if (strncmp (KR_keyword, "/dev/fd7", 8) == 0)
                {
{
return dev_storage + 93;

}
                }
              else
                {
{
return	NULL;

}
                }
            default:
{
return	NULL;

}
            }
        case '6':
          switch (KR_keyword [6])
            {
            case 't':
              if (strncmp (KR_keyword, "/dev/st6", 8) == 0)
                {
{
return dev_storage + 2385;

}
                }
              else
                {
{
return	NULL;

}
                }
            case 'r':
              if (strncmp (KR_keyword, "/dev/sr6", 8) == 0)
                {
{
return dev_storage + 2369;

}
                }
              else
                {
{
return	NULL;

}
                }
            case 'd':
              if (strncmp (KR_keyword, "/dev/fd6", 8) == 0)
                {
{
return dev_storage + 92;

}
                }
              else
                {
{
return	NULL;

}
                }
            default:
{
return	NULL;

}
            }
        case '5':
          switch (KR_keyword [6])
            {
            case 't':
              if (strncmp (KR_keyword, "/dev/st5", 8) == 0)
                {
{
return dev_storage + 2384;

}
                }
              else
                {
{
return	NULL;

}
                }
            case 'r':
              if (strncmp (KR_keyword, "/dev/sr5", 8) == 0)
                {
{
return dev_storage + 2368;

}
                }
              else
                {
{
return	NULL;

}
                }
            case 'd':
              if (strncmp (KR_keyword, "/dev/fd5", 8) == 0)
                {
{
return dev_storage + 91;

}
                }
              else
                {
{
return	NULL;

}
                }
            default:
{
return	NULL;

}
            }
        case '4':
          switch (KR_keyword [6])
            {
            case 't':
              if (strncmp (KR_keyword, "/dev/st4", 8) == 0)
                {
{
return dev_storage + 2383;

}
                }
              else
                {
{
return	NULL;

}
                }
            case 'r':
              if (strncmp (KR_keyword, "/dev/sr4", 8) == 0)
                {
{
return dev_storage + 2367;

}
                }
              else
                {
{
return	NULL;

}
                }
            case 'd':
              if (strncmp (KR_keyword, "/dev/fd4", 8) == 0)
                {
{
return dev_storage + 90;

}
                }
              else
                {
{
return	NULL;

}
                }
            default:
{
return	NULL;

}
            }
        case '3':
          switch (KR_keyword [6])
            {
            case 't':
              if (strncmp (KR_keyword, "/dev/st3", 8) == 0)
                {
{
return dev_storage + 2382;

}
                }
              else
                {
{
return	NULL;

}
                }
            case 'r':
              if (strncmp (KR_keyword, "/dev/sr3", 8) == 0)
                {
{
return dev_storage + 2366;

}
                }
              else
                {
{
return	NULL;

}
                }
            case 'd':
              if (strncmp (KR_keyword, "/dev/fd3", 8) == 0)
                {
{
return dev_storage + 89;

}
                }
              else
                {
{
return	NULL;

}
                }
            default:
{
return	NULL;

}
            }
        case '2':
          switch (KR_keyword [6])
            {
            case 't':
              if (strncmp (KR_keyword, "/dev/st2", 8) == 0)
                {
{
return dev_storage + 2381;

}
                }
              else
                {
{
return	NULL;

}
                }
            case 'r':
              if (strncmp (KR_keyword, "/dev/sr2", 8) == 0)
                {
{
return dev_storage + 2365;

}
                }
              else
                {
{
return	NULL;

}
                }
            case 'd':
              if (strncmp (KR_keyword, "/dev/fd2", 8) == 0)
                {
{
return dev_storage + 88;

}
                }
              else
                {
{
return	NULL;

}
                }
            default:
{
return	NULL;

}
            }
        case '1':
          switch (KR_keyword [6])
            {
            case 't':
              if (strncmp (KR_keyword, "/dev/st1", 8) == 0)
                {
{
return dev_storage + 2380;

}
                }
              else
                {
{
return	NULL;

}
                }
            case 'r':
              if (strncmp (KR_keyword, "/dev/sr1", 8) == 0)
                {
{
return dev_storage + 2364;

}
                }
              else
                {
{
return	NULL;

}
                }
            case 'd':
              if (strncmp (KR_keyword, "/dev/fd1", 8) == 0)
                {
{
return dev_storage + 87;

}
                }
              else
                {
{
return	NULL;

}
                }
            default:
{
return	NULL;

}
            }
        case '0':
          switch (KR_keyword [6])
            {
            case 't':
              if (strncmp (KR_keyword, "/dev/st0", 8) == 0)
                {
{
return dev_storage + 2379;

}
                }
              else
                {
{
return	NULL;

}
                }
            case 'r':
              if (strncmp (KR_keyword, "/dev/sr0", 8) == 0)
                {
{
return dev_storage + 2363;

}
                }
              else
                {
{
return	NULL;

}
                }
            case 'd':
              if (strncmp (KR_keyword, "/dev/fd0", 8) == 0)
                {
{
return dev_storage + 86;

}
                }
              else
                {
{
return	NULL;

}
                }
            default:
{
return	NULL;

}
            }
        default:
{
return	NULL;

}
        }
    case 9:
      switch (KR_keyword [7])
        {
        case 'z':
          switch (KR_keyword [8])
            {
            case '9':
              if (strncmp (KR_keyword, "/dev/sdz9", 9) == 0)
                {
{
return dev_storage + 724;

}
                }
              else
                {
{
return	NULL;

}
                }
            case '8':
              if (strncmp (KR_keyword, "/dev/sdz8", 9) == 0)
                {
{
return dev_storage + 723;

}
                }
              else
                {
{
return	NULL;

}
                }
            case '7':
              if (strncmp (KR_keyword, "/dev/sdz7", 9) == 0)
                {
{
return dev_storage + 722;

}
                }
              else
                {
{
return	NULL;

}
                }
            case '6':
              if (strncmp (KR_keyword, "/dev/sdz6", 9) == 0)
                {
{
return dev_storage + 721;

}
                }
              else
                {
{
return	NULL;

}
                }
            case '5':
              if (strncmp (KR_keyword, "/dev/sdz5", 9) == 0)
                {
{
return dev_storage + 720;

}
                }
              else
                {
{
return	NULL;

}
                }
            case '4':
              if (strncmp (KR_keyword, "/dev/sdz4", 9) == 0)
                {
{
return dev_storage + 719;

}
                }
              else
                {
{
return	NULL;

}
                }
            case '3':
              if (strncmp (KR_keyword, "/dev/sdz3", 9) == 0)
                {
{
return dev_storage + 718;

}
                }
              else
                {
{
return	NULL;

}
                }
            case '2':
              if (strncmp (KR_keyword, "/dev/sdz2", 9) == 0)
                {
{
return dev_storage + 717;

}
                }
              else
                {
{
return	NULL;

}
                }
            case '1':
              if (strncmp (KR_keyword, "/dev/sdz1", 9) == 0)
                {
{
return dev_storage + 716;

}
                }
              else
                {
{
return	NULL;

}
                }
            default:
{
return	NULL;

}
            }
        case 'y':
          switch (KR_keyword [8])
            {
            case '9':
              switch (KR_keyword [5])
                {
                case 's':
                  if (strncmp (KR_keyword, "/dev/sdy9", 9) == 0)
                    {
{
return dev_storage + 709;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'p':
                  if (strncmp (KR_keyword, "/dev/pty9", 9) == 0)
                    {
{
return dev_storage + 243;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                default:
{
return	NULL;

}
                }
            case '8':
              switch (KR_keyword [5])
                {
                case 's':
                  if (strncmp (KR_keyword, "/dev/sdy8", 9) == 0)
                    {
{
return dev_storage + 708;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'p':
                  if (strncmp (KR_keyword, "/dev/pty8", 9) == 0)
                    {
{
return dev_storage + 242;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                default:
{
return	NULL;

}
                }
            case '7':
              switch (KR_keyword [5])
                {
                case 's':
                  if (strncmp (KR_keyword, "/dev/sdy7", 9) == 0)
                    {
{
return dev_storage + 707;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'p':
                  if (strncmp (KR_keyword, "/dev/pty7", 9) == 0)
                    {
{
return dev_storage + 241;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                default:
{
return	NULL;

}
                }
            case '6':
              switch (KR_keyword [5])
                {
                case 's':
                  if (strncmp (KR_keyword, "/dev/sdy6", 9) == 0)
                    {
{
return dev_storage + 706;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'p':
                  if (strncmp (KR_keyword, "/dev/pty6", 9) == 0)
                    {
{
return dev_storage + 240;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                default:
{
return	NULL;

}
                }
            case '5':
              switch (KR_keyword [5])
                {
                case 's':
                  if (strncmp (KR_keyword, "/dev/sdy5", 9) == 0)
                    {
{
return dev_storage + 705;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'p':
                  if (strncmp (KR_keyword, "/dev/pty5", 9) == 0)
                    {
{
return dev_storage + 239;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                default:
{
return	NULL;

}
                }
            case '4':
              switch (KR_keyword [5])
                {
                case 's':
                  if (strncmp (KR_keyword, "/dev/sdy4", 9) == 0)
                    {
{
return dev_storage + 704;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'p':
                  if (strncmp (KR_keyword, "/dev/pty4", 9) == 0)
                    {
{
return dev_storage + 238;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                default:
{
return	NULL;

}
                }
            case '3':
              switch (KR_keyword [5])
                {
                case 's':
                  if (strncmp (KR_keyword, "/dev/sdy3", 9) == 0)
                    {
{
return dev_storage + 703;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'p':
                  if (strncmp (KR_keyword, "/dev/pty3", 9) == 0)
                    {
{
return dev_storage + 237;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                default:
{
return	NULL;

}
                }
            case '2':
              switch (KR_keyword [5])
                {
                case 's':
                  if (strncmp (KR_keyword, "/dev/sdy2", 9) == 0)
                    {
{
return dev_storage + 702;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'p':
                  if (strncmp (KR_keyword, "/dev/pty2", 9) == 0)
                    {
{
return dev_storage + 236;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                default:
{
return	NULL;

}
                }
            case '1':
              switch (KR_keyword [5])
                {
                case 's':
                  if (strncmp (KR_keyword, "/dev/sdy1", 9) == 0)
                    {
{
return dev_storage + 701;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'p':
                  if (strncmp (KR_keyword, "/dev/pty1", 9) == 0)
                    {
{
return dev_storage + 235;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                default:
{
return	NULL;

}
                }
            case '0':
              if (strncmp (KR_keyword, "/dev/pty0", 9) == 0)
                {
{
return dev_storage + 234;

}
                }
              else
                {
{
return	NULL;

}
                }
            default:
{
return	NULL;

}
            }
        case 'x':
          switch (KR_keyword [8])
            {
            case '9':
              if (strncmp (KR_keyword, "/dev/sdx9", 9) == 0)
                {
{
return dev_storage + 694;

}
                }
              else
                {
{
return	NULL;

}
                }
            case '8':
              if (strncmp (KR_keyword, "/dev/sdx8", 9) == 0)
                {
{
return dev_storage + 693;

}
                }
              else
                {
{
return	NULL;

}
                }
            case '7':
              if (strncmp (KR_keyword, "/dev/sdx7", 9) == 0)
                {
{
return dev_storage + 692;

}
                }
              else
                {
{
return	NULL;

}
                }
            case '6':
              if (strncmp (KR_keyword, "/dev/sdx6", 9) == 0)
                {
{
return dev_storage + 691;

}
                }
              else
                {
{
return	NULL;

}
                }
            case '5':
              if (strncmp (KR_keyword, "/dev/sdx5", 9) == 0)
                {
{
return dev_storage + 690;

}
                }
              else
                {
{
return	NULL;

}
                }
            case '4':
              if (strncmp (KR_keyword, "/dev/sdx4", 9) == 0)
                {
{
return dev_storage + 689;

}
                }
              else
                {
{
return	NULL;

}
                }
            case '3':
              if (strncmp (KR_keyword, "/dev/sdx3", 9) == 0)
                {
{
return dev_storage + 688;

}
                }
              else
                {
{
return	NULL;

}
                }
            case '2':
              if (strncmp (KR_keyword, "/dev/sdx2", 9) == 0)
                {
{
return dev_storage + 687;

}
                }
              else
                {
{
return	NULL;

}
                }
            case '1':
              if (strncmp (KR_keyword, "/dev/sdx1", 9) == 0)
                {
{
return dev_storage + 686;

}
                }
              else
                {
{
return	NULL;

}
                }
            default:
{
return	NULL;

}
            }
        case 'w':
          switch (KR_keyword [8])
            {
            case '9':
              if (strncmp (KR_keyword, "/dev/sdw9", 9) == 0)
                {
{
return dev_storage + 679;

}
                }
              else
                {
{
return	NULL;

}
                }
            case '8':
              if (strncmp (KR_keyword, "/dev/sdw8", 9) == 0)
                {
{
return dev_storage + 678;

}
                }
              else
                {
{
return	NULL;

}
                }
            case '7':
              if (strncmp (KR_keyword, "/dev/sdw7", 9) == 0)
                {
{
return dev_storage + 677;

}
                }
              else
                {
{
return	NULL;

}
                }
            case '6':
              if (strncmp (KR_keyword, "/dev/sdw6", 9) == 0)
                {
{
return dev_storage + 676;

}
                }
              else
                {
{
return	NULL;

}
                }
            case '5':
              if (strncmp (KR_keyword, "/dev/sdw5", 9) == 0)
                {
{
return dev_storage + 675;

}
                }
              else
                {
{
return	NULL;

}
                }
            case '4':
              if (strncmp (KR_keyword, "/dev/sdw4", 9) == 0)
                {
{
return dev_storage + 674;

}
                }
              else
                {
{
return	NULL;

}
                }
            case '3':
              if (strncmp (KR_keyword, "/dev/sdw3", 9) == 0)
                {
{
return dev_storage + 673;

}
                }
              else
                {
{
return	NULL;

}
                }
            case '2':
              if (strncmp (KR_keyword, "/dev/sdw2", 9) == 0)
                {
{
return dev_storage + 672;

}
                }
              else
                {
{
return	NULL;

}
                }
            case '1':
              if (strncmp (KR_keyword, "/dev/sdw1", 9) == 0)
                {
{
return dev_storage + 671;

}
                }
              else
                {
{
return	NULL;

}
                }
            default:
{
return	NULL;

}
            }
        case 'v':
          switch (KR_keyword [8])
            {
            case '9':
              if (strncmp (KR_keyword, "/dev/sdv9", 9) == 0)
                {
{
return dev_storage + 664;

}
                }
              else
                {
{
return	NULL;

}
                }
            case '8':
              if (strncmp (KR_keyword, "/dev/sdv8", 9) == 0)
                {
{
return dev_storage + 663;

}
                }
              else
                {
{
return	NULL;

}
                }
            case '7':
              if (strncmp (KR_keyword, "/dev/sdv7", 9) == 0)
                {
{
return dev_storage + 662;

}
                }
              else
                {
{
return	NULL;

}
                }
            case '6':
              if (strncmp (KR_keyword, "/dev/sdv6", 9) == 0)
                {
{
return dev_storage + 661;

}
                }
              else
                {
{
return	NULL;

}
                }
            case '5':
              if (strncmp (KR_keyword, "/dev/sdv5", 9) == 0)
                {
{
return dev_storage + 660;

}
                }
              else
                {
{
return	NULL;

}
                }
            case '4':
              if (strncmp (KR_keyword, "/dev/sdv4", 9) == 0)
                {
{
return dev_storage + 659;

}
                }
              else
                {
{
return	NULL;

}
                }
            case '3':
              if (strncmp (KR_keyword, "/dev/sdv3", 9) == 0)
                {
{
return dev_storage + 658;

}
                }
              else
                {
{
return	NULL;

}
                }
            case '2':
              if (strncmp (KR_keyword, "/dev/sdv2", 9) == 0)
                {
{
return dev_storage + 657;

}
                }
              else
                {
{
return	NULL;

}
                }
            case '1':
              if (strncmp (KR_keyword, "/dev/sdv1", 9) == 0)
                {
{
return dev_storage + 656;

}
                }
              else
                {
{
return	NULL;

}
                }
            default:
{
return	NULL;

}
            }
        case 'u':
          switch (KR_keyword [8])
            {
            case '9':
              if (strncmp (KR_keyword, "/dev/sdu9", 9) == 0)
                {
{
return dev_storage + 649;

}
                }
              else
                {
{
return	NULL;

}
                }
            case '8':
              if (strncmp (KR_keyword, "/dev/sdu8", 9) == 0)
                {
{
return dev_storage + 648;

}
                }
              else
                {
{
return	NULL;

}
                }
            case '7':
              if (strncmp (KR_keyword, "/dev/sdu7", 9) == 0)
                {
{
return dev_storage + 647;

}
                }
              else
                {
{
return	NULL;

}
                }
            case '6':
              if (strncmp (KR_keyword, "/dev/sdu6", 9) == 0)
                {
{
return dev_storage + 646;

}
                }
              else
                {
{
return	NULL;

}
                }
            case '5':
              if (strncmp (KR_keyword, "/dev/sdu5", 9) == 0)
                {
{
return dev_storage + 645;

}
                }
              else
                {
{
return	NULL;

}
                }
            case '4':
              if (strncmp (KR_keyword, "/dev/sdu4", 9) == 0)
                {
{
return dev_storage + 644;

}
                }
              else
                {
{
return	NULL;

}
                }
            case '3':
              if (strncmp (KR_keyword, "/dev/sdu3", 9) == 0)
                {
{
return dev_storage + 643;

}
                }
              else
                {
{
return	NULL;

}
                }
            case '2':
              if (strncmp (KR_keyword, "/dev/sdu2", 9) == 0)
                {
{
return dev_storage + 642;

}
                }
              else
                {
{
return	NULL;

}
                }
            case '1':
              if (strncmp (KR_keyword, "/dev/sdu1", 9) == 0)
                {
{
return dev_storage + 641;

}
                }
              else
                {
{
return	NULL;

}
                }
            default:
{
return	NULL;

}
            }
        case 't':
          switch (KR_keyword [8])
            {
            case '9':
              switch (KR_keyword [5])
                {
                case 's':
                  if (strncmp (KR_keyword, "/dev/sdt9", 9) == 0)
                    {
{
return dev_storage + 634;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'n':
                  if (strncmp (KR_keyword, "/dev/nst9", 9) == 0)
                    {
{
return dev_storage + 113;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                default:
{
return	NULL;

}
                }
            case '8':
              switch (KR_keyword [5])
                {
                case 's':
                  if (strncmp (KR_keyword, "/dev/sdt8", 9) == 0)
                    {
{
return dev_storage + 633;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'n':
                  if (strncmp (KR_keyword, "/dev/nst8", 9) == 0)
                    {
{
return dev_storage + 112;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                default:
{
return	NULL;

}
                }
            case '7':
              switch (KR_keyword [5])
                {
                case 's':
                  if (strncmp (KR_keyword, "/dev/sdt7", 9) == 0)
                    {
{
return dev_storage + 632;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'n':
                  if (strncmp (KR_keyword, "/dev/nst7", 9) == 0)
                    {
{
return dev_storage + 111;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                default:
{
return	NULL;

}
                }
            case '6':
              switch (KR_keyword [5])
                {
                case 's':
                  if (strncmp (KR_keyword, "/dev/sdt6", 9) == 0)
                    {
{
return dev_storage + 631;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'n':
                  if (strncmp (KR_keyword, "/dev/nst6", 9) == 0)
                    {
{
return dev_storage + 110;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                default:
{
return	NULL;

}
                }
            case '5':
              switch (KR_keyword [5])
                {
                case 's':
                  if (strncmp (KR_keyword, "/dev/sdt5", 9) == 0)
                    {
{
return dev_storage + 630;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'n':
                  if (strncmp (KR_keyword, "/dev/nst5", 9) == 0)
                    {
{
return dev_storage + 109;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                default:
{
return	NULL;

}
                }
            case '4':
              switch (KR_keyword [5])
                {
                case 's':
                  if (strncmp (KR_keyword, "/dev/sdt4", 9) == 0)
                    {
{
return dev_storage + 629;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'n':
                  if (strncmp (KR_keyword, "/dev/nst4", 9) == 0)
                    {
{
return dev_storage + 108;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                default:
{
return	NULL;

}
                }
            case '3':
              switch (KR_keyword [5])
                {
                case 's':
                  if (strncmp (KR_keyword, "/dev/sdt3", 9) == 0)
                    {
{
return dev_storage + 628;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'n':
                  if (strncmp (KR_keyword, "/dev/nst3", 9) == 0)
                    {
{
return dev_storage + 107;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                default:
{
return	NULL;

}
                }
            case '2':
              switch (KR_keyword [5])
                {
                case 's':
                  if (strncmp (KR_keyword, "/dev/sdt2", 9) == 0)
                    {
{
return dev_storage + 627;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'n':
                  if (strncmp (KR_keyword, "/dev/nst2", 9) == 0)
                    {
{
return dev_storage + 106;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                default:
{
return	NULL;

}
                }
            case '1':
              switch (KR_keyword [5])
                {
                case 's':
                  if (strncmp (KR_keyword, "/dev/sdt1", 9) == 0)
                    {
{
return dev_storage + 626;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'n':
                  if (strncmp (KR_keyword, "/dev/nst1", 9) == 0)
                    {
{
return dev_storage + 105;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                default:
{
return	NULL;

}
                }
            case '0':
              if (strncmp (KR_keyword, "/dev/nst0", 9) == 0)
                {
{
return dev_storage + 104;

}
                }
              else
                {
{
return	NULL;

}
                }
            default:
{
return	NULL;

}
            }
        case 's':
          switch (KR_keyword [8])
            {
            case 'g':
              if (strncmp (KR_keyword, "/dev/kmsg", 9) == 0)
                {
{
return dev_storage + 103;

}
                }
              else
                {
{
return	NULL;

}
                }
            case '9':
              if (strncmp (KR_keyword, "/dev/sds9", 9) == 0)
                {
{
return dev_storage + 619;

}
                }
              else
                {
{
return	NULL;

}
                }
            case '8':
              if (strncmp (KR_keyword, "/dev/sds8", 9) == 0)
                {
{
return dev_storage + 618;

}
                }
              else
                {
{
return	NULL;

}
                }
            case '7':
              if (strncmp (KR_keyword, "/dev/sds7", 9) == 0)
                {
{
return dev_storage + 617;

}
                }
              else
                {
{
return	NULL;

}
                }
            case '6':
              if (strncmp (KR_keyword, "/dev/sds6", 9) == 0)
                {
{
return dev_storage + 616;

}
                }
              else
                {
{
return	NULL;

}
                }
            case '5':
              if (strncmp (KR_keyword, "/dev/sds5", 9) == 0)
                {
{
return dev_storage + 615;

}
                }
              else
                {
{
return	NULL;

}
                }
            case '4':
              if (strncmp (KR_keyword, "/dev/sds4", 9) == 0)
                {
{
return dev_storage + 614;

}
                }
              else
                {
{
return	NULL;

}
                }
            case '3':
              if (strncmp (KR_keyword, "/dev/sds3", 9) == 0)
                {
{
return dev_storage + 613;

}
                }
              else
                {
{
return	NULL;

}
                }
            case '2':
              if (strncmp (KR_keyword, "/dev/sds2", 9) == 0)
                {
{
return dev_storage + 612;

}
                }
              else
                {
{
return	NULL;

}
                }
            case '1':
              if (strncmp (KR_keyword, "/dev/sds1", 9) == 0)
                {
{
return dev_storage + 611;

}
                }
              else
                {
{
return	NULL;

}
                }
            default:
{
return	NULL;

}
            }
        case 'r':
          switch (KR_keyword [8])
            {
            case 'o':
              if (strncmp (KR_keyword, "/dev/zero", 9) == 0)
                {
{
return dev_storage + 2574;

}
                }
              else
                {
{
return	NULL;

}
                }
            case '9':
              if (strncmp (KR_keyword, "/dev/sdr9", 9) == 0)
                {
{
return dev_storage + 604;

}
                }
              else
                {
{
return	NULL;

}
                }
            case '8':
              if (strncmp (KR_keyword, "/dev/sdr8", 9) == 0)
                {
{
return dev_storage + 603;

}
                }
              else
                {
{
return	NULL;

}
                }
            case '7':
              if (strncmp (KR_keyword, "/dev/sdr7", 9) == 0)
                {
{
return dev_storage + 602;

}
                }
              else
                {
{
return	NULL;

}
                }
            case '6':
              if (strncmp (KR_keyword, "/dev/sdr6", 9) == 0)
                {
{
return dev_storage + 601;

}
                }
              else
                {
{
return	NULL;

}
                }
            case '5':
              if (strncmp (KR_keyword, "/dev/sdr5", 9) == 0)
                {
{
return dev_storage + 600;

}
                }
              else
                {
{
return	NULL;

}
                }
            case '4':
              if (strncmp (KR_keyword, "/dev/sdr4", 9) == 0)
                {
{
return dev_storage + 599;

}
                }
              else
                {
{
return	NULL;

}
                }
            case '3':
              if (strncmp (KR_keyword, "/dev/sdr3", 9) == 0)
                {
{
return dev_storage + 598;

}
                }
              else
                {
{
return	NULL;

}
                }
            case '2':
              if (strncmp (KR_keyword, "/dev/sdr2", 9) == 0)
                {
{
return dev_storage + 597;

}
                }
              else
                {
{
return	NULL;

}
                }
            case '1':
              if (strncmp (KR_keyword, "/dev/sdr1", 9) == 0)
                {
{
return dev_storage + 596;

}
                }
              else
                {
{
return	NULL;

}
                }
            default:
{
return	NULL;

}
            }
        case 'q':
          switch (KR_keyword [8])
            {
            case '9':
              if (strncmp (KR_keyword, "/dev/sdq9", 9) == 0)
                {
{
return dev_storage + 589;

}
                }
              else
                {
{
return	NULL;

}
                }
            case '8':
              if (strncmp (KR_keyword, "/dev/sdq8", 9) == 0)
                {
{
return dev_storage + 588;

}
                }
              else
                {
{
return	NULL;

}
                }
            case '7':
              if (strncmp (KR_keyword, "/dev/sdq7", 9) == 0)
                {
{
return dev_storage + 587;

}
                }
              else
                {
{
return	NULL;

}
                }
            case '6':
              if (strncmp (KR_keyword, "/dev/sdq6", 9) == 0)
                {
{
return dev_storage + 586;

}
                }
              else
                {
{
return	NULL;

}
                }
            case '5':
              if (strncmp (KR_keyword, "/dev/sdq5", 9) == 0)
                {
{
return dev_storage + 585;

}
                }
              else
                {
{
return	NULL;

}
                }
            case '4':
              if (strncmp (KR_keyword, "/dev/sdq4", 9) == 0)
                {
{
return dev_storage + 584;

}
                }
              else
                {
{
return	NULL;

}
                }
            case '3':
              if (strncmp (KR_keyword, "/dev/sdq3", 9) == 0)
                {
{
return dev_storage + 583;

}
                }
              else
                {
{
return	NULL;

}
                }
            case '2':
              if (strncmp (KR_keyword, "/dev/sdq2", 9) == 0)
                {
{
return dev_storage + 582;

}
                }
              else
                {
{
return	NULL;

}
                }
            case '1':
              if (strncmp (KR_keyword, "/dev/sdq1", 9) == 0)
                {
{
return dev_storage + 581;

}
                }
              else
                {
{
return	NULL;

}
                }
            default:
{
return	NULL;

}
            }
        case 'p':
          switch (KR_keyword [8])
            {
            case '9':
              if (strncmp (KR_keyword, "/dev/sdp9", 9) == 0)
                {
{
return dev_storage + 574;

}
                }
              else
                {
{
return	NULL;

}
                }
            case '8':
              if (strncmp (KR_keyword, "/dev/sdp8", 9) == 0)
                {
{
return dev_storage + 573;

}
                }
              else
                {
{
return	NULL;

}
                }
            case '7':
              if (strncmp (KR_keyword, "/dev/sdp7", 9) == 0)
                {
{
return dev_storage + 572;

}
                }
              else
                {
{
return	NULL;

}
                }
            case '6':
              if (strncmp (KR_keyword, "/dev/sdp6", 9) == 0)
                {
{
return dev_storage + 571;

}
                }
              else
                {
{
return	NULL;

}
                }
            case '5':
              if (strncmp (KR_keyword, "/dev/sdp5", 9) == 0)
                {
{
return dev_storage + 570;

}
                }
              else
                {
{
return	NULL;

}
                }
            case '4':
              if (strncmp (KR_keyword, "/dev/sdp4", 9) == 0)
                {
{
return dev_storage + 569;

}
                }
              else
                {
{
return	NULL;

}
                }
            case '3':
              if (strncmp (KR_keyword, "/dev/sdp3", 9) == 0)
                {
{
return dev_storage + 568;

}
                }
              else
                {
{
return	NULL;

}
                }
            case '2':
              if (strncmp (KR_keyword, "/dev/sdp2", 9) == 0)
                {
{
return dev_storage + 567;

}
                }
              else
                {
{
return	NULL;

}
                }
            case '1':
              if (strncmp (KR_keyword, "/dev/sdp1", 9) == 0)
                {
{
return dev_storage + 566;

}
                }
              else
                {
{
return	NULL;

}
                }
            default:
{
return	NULL;

}
            }
        case 'o':
          switch (KR_keyword [8])
            {
            case '9':
              if (strncmp (KR_keyword, "/dev/sdo9", 9) == 0)
                {
{
return dev_storage + 559;

}
                }
              else
                {
{
return	NULL;

}
                }
            case '8':
              if (strncmp (KR_keyword, "/dev/sdo8", 9) == 0)
                {
{
return dev_storage + 558;

}
                }
              else
                {
{
return	NULL;

}
                }
            case '7':
              if (strncmp (KR_keyword, "/dev/sdo7", 9) == 0)
                {
{
return dev_storage + 557;

}
                }
              else
                {
{
return	NULL;

}
                }
            case '6':
              if (strncmp (KR_keyword, "/dev/sdo6", 9) == 0)
                {
{
return dev_storage + 556;

}
                }
              else
                {
{
return	NULL;

}
                }
            case '5':
              if (strncmp (KR_keyword, "/dev/sdo5", 9) == 0)
                {
{
return dev_storage + 555;

}
                }
              else
                {
{
return	NULL;

}
                }
            case '4':
              if (strncmp (KR_keyword, "/dev/sdo4", 9) == 0)
                {
{
return dev_storage + 554;

}
                }
              else
                {
{
return	NULL;

}
                }
            case '3':
              if (strncmp (KR_keyword, "/dev/sdo3", 9) == 0)
                {
{
return dev_storage + 553;

}
                }
              else
                {
{
return	NULL;

}
                }
            case '2':
              if (strncmp (KR_keyword, "/dev/sdo2", 9) == 0)
                {
{
return dev_storage + 552;

}
                }
              else
                {
{
return	NULL;

}
                }
            case '1':
              if (strncmp (KR_keyword, "/dev/sdo1", 9) == 0)
                {
{
return dev_storage + 551;

}
                }
              else
                {
{
return	NULL;

}
                }
            default:
{
return	NULL;

}
            }
        case 'n':
          switch (KR_keyword [8])
            {
            case '9':
              if (strncmp (KR_keyword, "/dev/sdn9", 9) == 0)
                {
{
return dev_storage + 544;

}
                }
              else
                {
{
return	NULL;

}
                }
            case '8':
              if (strncmp (KR_keyword, "/dev/sdn8", 9) == 0)
                {
{
return dev_storage + 543;

}
                }
              else
                {
{
return	NULL;

}
                }
            case '7':
              if (strncmp (KR_keyword, "/dev/sdn7", 9) == 0)
                {
{
return dev_storage + 542;

}
                }
              else
                {
{
return	NULL;

}
                }
            case '6':
              if (strncmp (KR_keyword, "/dev/sdn6", 9) == 0)
                {
{
return dev_storage + 541;

}
                }
              else
                {
{
return	NULL;

}
                }
            case '5':
              if (strncmp (KR_keyword, "/dev/sdn5", 9) == 0)
                {
{
return dev_storage + 540;

}
                }
              else
                {
{
return	NULL;

}
                }
            case '4':
              if (strncmp (KR_keyword, "/dev/sdn4", 9) == 0)
                {
{
return dev_storage + 539;

}
                }
              else
                {
{
return	NULL;

}
                }
            case '3':
              if (strncmp (KR_keyword, "/dev/sdn3", 9) == 0)
                {
{
return dev_storage + 538;

}
                }
              else
                {
{
return	NULL;

}
                }
            case '2':
              if (strncmp (KR_keyword, "/dev/sdn2", 9) == 0)
                {
{
return dev_storage + 537;

}
                }
              else
                {
{
return	NULL;

}
                }
            case '1':
              if (strncmp (KR_keyword, "/dev/sdn1", 9) == 0)
                {
{
return dev_storage + 536;

}
                }
              else
                {
{
return	NULL;

}
                }
            default:
{
return	NULL;

}
            }
        case 'm':
          switch (KR_keyword [5])
            {
            case 's':
              switch (KR_keyword [8])
                {
                case '9':
                  if (strncmp (KR_keyword, "/dev/sdm9", 9) == 0)
                    {
{
return dev_storage + 529;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case '8':
                  if (strncmp (KR_keyword, "/dev/sdm8", 9) == 0)
                    {
{
return dev_storage + 528;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case '7':
                  if (strncmp (KR_keyword, "/dev/sdm7", 9) == 0)
                    {
{
return dev_storage + 527;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case '6':
                  if (strncmp (KR_keyword, "/dev/sdm6", 9) == 0)
                    {
{
return dev_storage + 526;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case '5':
                  if (strncmp (KR_keyword, "/dev/sdm5", 9) == 0)
                    {
{
return dev_storage + 525;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case '4':
                  if (strncmp (KR_keyword, "/dev/sdm4", 9) == 0)
                    {
{
return dev_storage + 524;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case '3':
                  if (strncmp (KR_keyword, "/dev/sdm3", 9) == 0)
                    {
{
return dev_storage + 523;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case '2':
                  if (strncmp (KR_keyword, "/dev/sdm2", 9) == 0)
                    {
{
return dev_storage + 522;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case '1':
                  if (strncmp (KR_keyword, "/dev/sdm1", 9) == 0)
                    {
{
return dev_storage + 521;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                default:
{
return	NULL;

}
                }
            case 'p':
              if (strncmp (KR_keyword, "/dev/ptmx", 9) == 0)
                {
{
return dev_storage + 233;

}
                }
              else
                {
{
return	NULL;

}
                }
            case 'c':
              switch (KR_keyword [8])
                {
                case '9':
                  if (strncmp (KR_keyword, "/dev/com9", 9) == 0)
                    {
{
return dev_storage + 10;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case '8':
                  if (strncmp (KR_keyword, "/dev/com8", 9) == 0)
                    {
{
return dev_storage + 9;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case '7':
                  if (strncmp (KR_keyword, "/dev/com7", 9) == 0)
                    {
{
return dev_storage + 8;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case '6':
                  if (strncmp (KR_keyword, "/dev/com6", 9) == 0)
                    {
{
return dev_storage + 7;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case '5':
                  if (strncmp (KR_keyword, "/dev/com5", 9) == 0)
                    {
{
return dev_storage + 6;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case '4':
                  if (strncmp (KR_keyword, "/dev/com4", 9) == 0)
                    {
{
return dev_storage + 5;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case '3':
                  if (strncmp (KR_keyword, "/dev/com3", 9) == 0)
                    {
{
return dev_storage + 4;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case '2':
                  if (strncmp (KR_keyword, "/dev/com2", 9) == 0)
                    {
{
return dev_storage + 3;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case '1':
                  if (strncmp (KR_keyword, "/dev/com1", 9) == 0)
                    {
{
return dev_storage + 2;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                default:
{
return	NULL;

}
                }
            default:
{
return	NULL;

}
            }
        case 'l':
          switch (KR_keyword [8])
            {
            case 'l':
              switch (KR_keyword [5])
                {
                case 'n':
                  if (strncmp (KR_keyword, "/dev/null", 9) == 0)
                    {
{
return dev_storage + 232;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'f':
                  if (strncmp (KR_keyword, "/dev/full", 9) == 0)
                    {
{
return dev_storage + 102;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                default:
{
return	NULL;

}
                }
            case '9':
              if (strncmp (KR_keyword, "/dev/sdl9", 9) == 0)
                {
{
return dev_storage + 514;

}
                }
              else
                {
{
return	NULL;

}
                }
            case '8':
              if (strncmp (KR_keyword, "/dev/sdl8", 9) == 0)
                {
{
return dev_storage + 513;

}
                }
              else
                {
{
return	NULL;

}
                }
            case '7':
              if (strncmp (KR_keyword, "/dev/sdl7", 9) == 0)
                {
{
return dev_storage + 512;

}
                }
              else
                {
{
return	NULL;

}
                }
            case '6':
              if (strncmp (KR_keyword, "/dev/sdl6", 9) == 0)
                {
{
return dev_storage + 511;

}
                }
              else
                {
{
return	NULL;

}
                }
            case '5':
              if (strncmp (KR_keyword, "/dev/sdl5", 9) == 0)
                {
{
return dev_storage + 510;

}
                }
              else
                {
{
return	NULL;

}
                }
            case '4':
              if (strncmp (KR_keyword, "/dev/sdl4", 9) == 0)
                {
{
return dev_storage + 509;

}
                }
              else
                {
{
return	NULL;

}
                }
            case '3':
              if (strncmp (KR_keyword, "/dev/sdl3", 9) == 0)
                {
{
return dev_storage + 508;

}
                }
              else
                {
{
return	NULL;

}
                }
            case '2':
              if (strncmp (KR_keyword, "/dev/sdl2", 9) == 0)
                {
{
return dev_storage + 507;

}
                }
              else
                {
{
return	NULL;

}
                }
            case '1':
              if (strncmp (KR_keyword, "/dev/sdl1", 9) == 0)
                {
{
return dev_storage + 506;

}
                }
              else
                {
{
return	NULL;

}
                }
            default:
{
return	NULL;

}
            }
        case 'k':
          switch (KR_keyword [8])
            {
            case '9':
              if (strncmp (KR_keyword, "/dev/sdk9", 9) == 0)
                {
{
return dev_storage + 499;

}
                }
              else
                {
{
return	NULL;

}
                }
            case '8':
              if (strncmp (KR_keyword, "/dev/sdk8", 9) == 0)
                {
{
return dev_storage + 498;

}
                }
              else
                {
{
return	NULL;

}
                }
            case '7':
              if (strncmp (KR_keyword, "/dev/sdk7", 9) == 0)
                {
{
return dev_storage + 497;

}
                }
              else
                {
{
return	NULL;

}
                }
            case '6':
              if (strncmp (KR_keyword, "/dev/sdk6", 9) == 0)
                {
{
return dev_storage + 496;

}
                }
              else
                {
{
return	NULL;

}
                }
            case '5':
              if (strncmp (KR_keyword, "/dev/sdk5", 9) == 0)
                {
{
return dev_storage + 495;

}
                }
              else
                {
{
return	NULL;

}
                }
            case '4':
              if (strncmp (KR_keyword, "/dev/sdk4", 9) == 0)
                {
{
return dev_storage + 494;

}
                }
              else
                {
{
return	NULL;

}
                }
            case '3':
              if (strncmp (KR_keyword, "/dev/sdk3", 9) == 0)
                {
{
return dev_storage + 493;

}
                }
              else
                {
{
return	NULL;

}
                }
            case '2':
              if (strncmp (KR_keyword, "/dev/sdk2", 9) == 0)
                {
{
return dev_storage + 492;

}
                }
              else
                {
{
return	NULL;

}
                }
            case '1':
              if (strncmp (KR_keyword, "/dev/sdk1", 9) == 0)
                {
{
return dev_storage + 491;

}
                }
              else
                {
{
return	NULL;

}
                }
            default:
{
return	NULL;

}
            }
        case 'j':
          switch (KR_keyword [8])
            {
            case '9':
              if (strncmp (KR_keyword, "/dev/sdj9", 9) == 0)
                {
{
return dev_storage + 484;

}
                }
              else
                {
{
return	NULL;

}
                }
            case '8':
              if (strncmp (KR_keyword, "/dev/sdj8", 9) == 0)
                {
{
return dev_storage + 483;

}
                }
              else
                {
{
return	NULL;

}
                }
            case '7':
              if (strncmp (KR_keyword, "/dev/sdj7", 9) == 0)
                {
{
return dev_storage + 482;

}
                }
              else
                {
{
return	NULL;

}
                }
            case '6':
              if (strncmp (KR_keyword, "/dev/sdj6", 9) == 0)
                {
{
return dev_storage + 481;

}
                }
              else
                {
{
return	NULL;

}
                }
            case '5':
              if (strncmp (KR_keyword, "/dev/sdj5", 9) == 0)
                {
{
return dev_storage + 480;

}
                }
              else
                {
{
return	NULL;

}
                }
            case '4':
              if (strncmp (KR_keyword, "/dev/sdj4", 9) == 0)
                {
{
return dev_storage + 479;

}
                }
              else
                {
{
return	NULL;

}
                }
            case '3':
              if (strncmp (KR_keyword, "/dev/sdj3", 9) == 0)
                {
{
return dev_storage + 478;

}
                }
              else
                {
{
return	NULL;

}
                }
            case '2':
              if (strncmp (KR_keyword, "/dev/sdj2", 9) == 0)
                {
{
return dev_storage + 477;

}
                }
              else
                {
{
return	NULL;

}
                }
            case '1':
              if (strncmp (KR_keyword, "/dev/sdj1", 9) == 0)
                {
{
return dev_storage + 476;

}
                }
              else
                {
{
return	NULL;

}
                }
            default:
{
return	NULL;

}
            }
        case 'i':
          switch (KR_keyword [8])
            {
            case '9':
              if (strncmp (KR_keyword, "/dev/sdi9", 9) == 0)
                {
{
return dev_storage + 469;

}
                }
              else
                {
{
return	NULL;

}
                }
            case '8':
              if (strncmp (KR_keyword, "/dev/sdi8", 9) == 0)
                {
{
return dev_storage + 468;

}
                }
              else
                {
{
return	NULL;

}
                }
            case '7':
              if (strncmp (KR_keyword, "/dev/sdi7", 9) == 0)
                {
{
return dev_storage + 467;

}
                }
              else
                {
{
return	NULL;

}
                }
            case '6':
              if (strncmp (KR_keyword, "/dev/sdi6", 9) == 0)
                {
{
return dev_storage + 466;

}
                }
              else
                {
{
return	NULL;

}
                }
            case '5':
              if (strncmp (KR_keyword, "/dev/sdi5", 9) == 0)
                {
{
return dev_storage + 465;

}
                }
              else
                {
{
return	NULL;

}
                }
            case '4':
              if (strncmp (KR_keyword, "/dev/sdi4", 9) == 0)
                {
{
return dev_storage + 464;

}
                }
              else
                {
{
return	NULL;

}
                }
            case '3':
              if (strncmp (KR_keyword, "/dev/sdi3", 9) == 0)
                {
{
return dev_storage + 463;

}
                }
              else
                {
{
return	NULL;

}
                }
            case '2':
              if (strncmp (KR_keyword, "/dev/sdi2", 9) == 0)
                {
{
return dev_storage + 462;

}
                }
              else
                {
{
return	NULL;

}
                }
            case '1':
              if (strncmp (KR_keyword, "/dev/sdi1", 9) == 0)
                {
{
return dev_storage + 461;

}
                }
              else
                {
{
return	NULL;

}
                }
            default:
{
return	NULL;

}
            }
        case 'h':
          switch (KR_keyword [8])
            {
            case '9':
              if (strncmp (KR_keyword, "/dev/sdh9", 9) == 0)
                {
{
return dev_storage + 454;

}
                }
              else
                {
{
return	NULL;

}
                }
            case '8':
              if (strncmp (KR_keyword, "/dev/sdh8", 9) == 0)
                {
{
return dev_storage + 453;

}
                }
              else
                {
{
return	NULL;

}
                }
            case '7':
              if (strncmp (KR_keyword, "/dev/sdh7", 9) == 0)
                {
{
return dev_storage + 452;

}
                }
              else
                {
{
return	NULL;

}
                }
            case '6':
              if (strncmp (KR_keyword, "/dev/sdh6", 9) == 0)
                {
{
return dev_storage + 451;

}
                }
              else
                {
{
return	NULL;

}
                }
            case '5':
              if (strncmp (KR_keyword, "/dev/sdh5", 9) == 0)
                {
{
return dev_storage + 450;

}
                }
              else
                {
{
return	NULL;

}
                }
            case '4':
              if (strncmp (KR_keyword, "/dev/sdh4", 9) == 0)
                {
{
return dev_storage + 449;

}
                }
              else
                {
{
return	NULL;

}
                }
            case '3':
              if (strncmp (KR_keyword, "/dev/sdh3", 9) == 0)
                {
{
return dev_storage + 448;

}
                }
              else
                {
{
return	NULL;

}
                }
            case '2':
              if (strncmp (KR_keyword, "/dev/sdh2", 9) == 0)
                {
{
return dev_storage + 447;

}
                }
              else
                {
{
return	NULL;

}
                }
            case '1':
              if (strncmp (KR_keyword, "/dev/sdh1", 9) == 0)
                {
{
return dev_storage + 446;

}
                }
              else
                {
{
return	NULL;

}
                }
            default:
{
return	NULL;

}
            }
        case 'g':
          switch (KR_keyword [8])
            {
            case '9':
              if (strncmp (KR_keyword, "/dev/sdg9", 9) == 0)
                {
{
return dev_storage + 439;

}
                }
              else
                {
{
return	NULL;

}
                }
            case '8':
              if (strncmp (KR_keyword, "/dev/sdg8", 9) == 0)
                {
{
return dev_storage + 438;

}
                }
              else
                {
{
return	NULL;

}
                }
            case '7':
              if (strncmp (KR_keyword, "/dev/sdg7", 9) == 0)
                {
{
return dev_storage + 437;

}
                }
              else
                {
{
return	NULL;

}
                }
            case '6':
              if (strncmp (KR_keyword, "/dev/sdg6", 9) == 0)
                {
{
return dev_storage + 436;

}
                }
              else
                {
{
return	NULL;

}
                }
            case '5':
              if (strncmp (KR_keyword, "/dev/sdg5", 9) == 0)
                {
{
return dev_storage + 435;

}
                }
              else
                {
{
return	NULL;

}
                }
            case '4':
              if (strncmp (KR_keyword, "/dev/sdg4", 9) == 0)
                {
{
return dev_storage + 434;

}
                }
              else
                {
{
return	NULL;

}
                }
            case '3':
              if (strncmp (KR_keyword, "/dev/sdg3", 9) == 0)
                {
{
return dev_storage + 433;

}
                }
              else
                {
{
return	NULL;

}
                }
            case '2':
              if (strncmp (KR_keyword, "/dev/sdg2", 9) == 0)
                {
{
return dev_storage + 432;

}
                }
              else
                {
{
return	NULL;

}
                }
            case '1':
              if (strncmp (KR_keyword, "/dev/sdg1", 9) == 0)
                {
{
return dev_storage + 431;

}
                }
              else
                {
{
return	NULL;

}
                }
            default:
{
return	NULL;

}
            }
        case 'f':
          switch (KR_keyword [8])
            {
            case '9':
              if (strncmp (KR_keyword, "/dev/sdf9", 9) == 0)
                {
{
return dev_storage + 424;

}
                }
              else
                {
{
return	NULL;

}
                }
            case '8':
              if (strncmp (KR_keyword, "/dev/sdf8", 9) == 0)
                {
{
return dev_storage + 423;

}
                }
              else
                {
{
return	NULL;

}
                }
            case '7':
              if (strncmp (KR_keyword, "/dev/sdf7", 9) == 0)
                {
{
return dev_storage + 422;

}
                }
              else
                {
{
return	NULL;

}
                }
            case '6':
              if (strncmp (KR_keyword, "/dev/sdf6", 9) == 0)
                {
{
return dev_storage + 421;

}
                }
              else
                {
{
return	NULL;

}
                }
            case '5':
              if (strncmp (KR_keyword, "/dev/sdf5", 9) == 0)
                {
{
return dev_storage + 420;

}
                }
              else
                {
{
return	NULL;

}
                }
            case '4':
              if (strncmp (KR_keyword, "/dev/sdf4", 9) == 0)
                {
{
return dev_storage + 419;

}
                }
              else
                {
{
return	NULL;

}
                }
            case '3':
              if (strncmp (KR_keyword, "/dev/sdf3", 9) == 0)
                {
{
return dev_storage + 418;

}
                }
              else
                {
{
return	NULL;

}
                }
            case '2':
              if (strncmp (KR_keyword, "/dev/sdf2", 9) == 0)
                {
{
return dev_storage + 417;

}
                }
              else
                {
{
return	NULL;

}
                }
            case '1':
              if (strncmp (KR_keyword, "/dev/sdf1", 9) == 0)
                {
{
return dev_storage + 416;

}
                }
              else
                {
{
return	NULL;

}
                }
            default:
{
return	NULL;

}
            }
        case 'e':
          switch (KR_keyword [8])
            {
            case '9':
              if (strncmp (KR_keyword, "/dev/sde9", 9) == 0)
                {
{
return dev_storage + 409;

}
                }
              else
                {
{
return	NULL;

}
                }
            case '8':
              if (strncmp (KR_keyword, "/dev/sde8", 9) == 0)
                {
{
return dev_storage + 408;

}
                }
              else
                {
{
return	NULL;

}
                }
            case '7':
              if (strncmp (KR_keyword, "/dev/sde7", 9) == 0)
                {
{
return dev_storage + 407;

}
                }
              else
                {
{
return	NULL;

}
                }
            case '6':
              if (strncmp (KR_keyword, "/dev/sde6", 9) == 0)
                {
{
return dev_storage + 406;

}
                }
              else
                {
{
return	NULL;

}
                }
            case '5':
              if (strncmp (KR_keyword, "/dev/sde5", 9) == 0)
                {
{
return dev_storage + 405;

}
                }
              else
                {
{
return	NULL;

}
                }
            case '4':
              if (strncmp (KR_keyword, "/dev/sde4", 9) == 0)
                {
{
return dev_storage + 404;

}
                }
              else
                {
{
return	NULL;

}
                }
            case '3':
              if (strncmp (KR_keyword, "/dev/sde3", 9) == 0)
                {
{
return dev_storage + 403;

}
                }
              else
                {
{
return	NULL;

}
                }
            case '2':
              if (strncmp (KR_keyword, "/dev/sde2", 9) == 0)
                {
{
return dev_storage + 402;

}
                }
              else
                {
{
return	NULL;

}
                }
            case '1':
              if (strncmp (KR_keyword, "/dev/sde1", 9) == 0)
                {
{
return dev_storage + 401;

}
                }
              else
                {
{
return	NULL;

}
                }
            default:
{
return	NULL;

}
            }
        case 'd':
          switch (KR_keyword [8])
            {
            case 'x':
              if (strncmp (KR_keyword, "/dev/sddx", 9) == 0)
                {
{
return dev_storage + 2002;

}
                }
              else
                {
{
return	NULL;

}
                }
            case 'w':
              if (strncmp (KR_keyword, "/dev/sddw", 9) == 0)
                {
{
return dev_storage + 2001;

}
                }
              else
                {
{
return	NULL;

}
                }
            case 'v':
              if (strncmp (KR_keyword, "/dev/sddv", 9) == 0)
                {
{
return dev_storage + 2000;

}
                }
              else
                {
{
return	NULL;

}
                }
            case 'u':
              if (strncmp (KR_keyword, "/dev/sddu", 9) == 0)
                {
{
return dev_storage + 1999;

}
                }
              else
                {
{
return	NULL;

}
                }
            case 't':
              if (strncmp (KR_keyword, "/dev/sddt", 9) == 0)
                {
{
return dev_storage + 1998;

}
                }
              else
                {
{
return	NULL;

}
                }
            case 's':
              if (strncmp (KR_keyword, "/dev/sdds", 9) == 0)
                {
{
return dev_storage + 1997;

}
                }
              else
                {
{
return	NULL;

}
                }
            case 'r':
              if (strncmp (KR_keyword, "/dev/sddr", 9) == 0)
                {
{
return dev_storage + 1996;

}
                }
              else
                {
{
return	NULL;

}
                }
            case 'q':
              if (strncmp (KR_keyword, "/dev/sddq", 9) == 0)
                {
{
return dev_storage + 1995;

}
                }
              else
                {
{
return	NULL;

}
                }
            case 'p':
              if (strncmp (KR_keyword, "/dev/sddp", 9) == 0)
                {
{
return dev_storage + 1994;

}
                }
              else
                {
{
return	NULL;

}
                }
            case 'o':
              if (strncmp (KR_keyword, "/dev/sddo", 9) == 0)
                {
{
return dev_storage + 1993;

}
                }
              else
                {
{
return	NULL;

}
                }
            case 'n':
              if (strncmp (KR_keyword, "/dev/sddn", 9) == 0)
                {
{
return dev_storage + 1992;

}
                }
              else
                {
{
return	NULL;

}
                }
            case 'm':
              if (strncmp (KR_keyword, "/dev/sddm", 9) == 0)
                {
{
return dev_storage + 1991;

}
                }
              else
                {
{
return	NULL;

}
                }
            case 'l':
              if (strncmp (KR_keyword, "/dev/sddl", 9) == 0)
                {
{
return dev_storage + 1990;

}
                }
              else
                {
{
return	NULL;

}
                }
            case 'k':
              if (strncmp (KR_keyword, "/dev/sddk", 9) == 0)
                {
{
return dev_storage + 1989;

}
                }
              else
                {
{
return	NULL;

}
                }
            case 'j':
              if (strncmp (KR_keyword, "/dev/sddj", 9) == 0)
                {
{
return dev_storage + 1988;

}
                }
              else
                {
{
return	NULL;

}
                }
            case 'i':
              if (strncmp (KR_keyword, "/dev/sddi", 9) == 0)
                {
{
return dev_storage + 1987;

}
                }
              else
                {
{
return	NULL;

}
                }
            case 'h':
              if (strncmp (KR_keyword, "/dev/sddh", 9) == 0)
                {
{
return dev_storage + 1986;

}
                }
              else
                {
{
return	NULL;

}
                }
            case 'g':
              if (strncmp (KR_keyword, "/dev/sddg", 9) == 0)
                {
{
return dev_storage + 1985;

}
                }
              else
                {
{
return	NULL;

}
                }
            case 'f':
              if (strncmp (KR_keyword, "/dev/sddf", 9) == 0)
                {
{
return dev_storage + 1984;

}
                }
              else
                {
{
return	NULL;

}
                }
            case 'e':
              if (strncmp (KR_keyword, "/dev/sdde", 9) == 0)
                {
{
return dev_storage + 1983;

}
                }
              else
                {
{
return	NULL;

}
                }
            case 'd':
              if (strncmp (KR_keyword, "/dev/sddd", 9) == 0)
                {
{
return dev_storage + 1982;

}
                }
              else
                {
{
return	NULL;

}
                }
            case 'c':
              if (strncmp (KR_keyword, "/dev/sddc", 9) == 0)
                {
{
return dev_storage + 1981;

}
                }
              else
                {
{
return	NULL;

}
                }
            case 'b':
              if (strncmp (KR_keyword, "/dev/sddb", 9) == 0)
                {
{
return dev_storage + 1980;

}
                }
              else
                {
{
return	NULL;

}
                }
            case 'a':
              if (strncmp (KR_keyword, "/dev/sdda", 9) == 0)
                {
{
return dev_storage + 1979;

}
                }
              else
                {
{
return	NULL;

}
                }
            case '9':
              switch (KR_keyword [6])
                {
                case 'd':
                  if (strncmp (KR_keyword, "/dev/sdd9", 9) == 0)
                    {
{
return dev_storage + 394;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'c':
                  if (strncmp (KR_keyword, "/dev/scd9", 9) == 0)
                    {
{
return dev_storage + 308;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                default:
{
return	NULL;

}
                }
            case '8':
              switch (KR_keyword [6])
                {
                case 'd':
                  if (strncmp (KR_keyword, "/dev/sdd8", 9) == 0)
                    {
{
return dev_storage + 393;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'c':
                  if (strncmp (KR_keyword, "/dev/scd8", 9) == 0)
                    {
{
return dev_storage + 307;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                default:
{
return	NULL;

}
                }
            case '7':
              switch (KR_keyword [6])
                {
                case 'd':
                  if (strncmp (KR_keyword, "/dev/sdd7", 9) == 0)
                    {
{
return dev_storage + 392;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'c':
                  if (strncmp (KR_keyword, "/dev/scd7", 9) == 0)
                    {
{
return dev_storage + 306;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                default:
{
return	NULL;

}
                }
            case '6':
              switch (KR_keyword [6])
                {
                case 'd':
                  if (strncmp (KR_keyword, "/dev/sdd6", 9) == 0)
                    {
{
return dev_storage + 391;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'c':
                  if (strncmp (KR_keyword, "/dev/scd6", 9) == 0)
                    {
{
return dev_storage + 305;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                default:
{
return	NULL;

}
                }
            case '5':
              switch (KR_keyword [6])
                {
                case 'd':
                  if (strncmp (KR_keyword, "/dev/sdd5", 9) == 0)
                    {
{
return dev_storage + 390;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'c':
                  if (strncmp (KR_keyword, "/dev/scd5", 9) == 0)
                    {
{
return dev_storage + 304;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                default:
{
return	NULL;

}
                }
            case '4':
              switch (KR_keyword [6])
                {
                case 'd':
                  if (strncmp (KR_keyword, "/dev/sdd4", 9) == 0)
                    {
{
return dev_storage + 389;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'c':
                  if (strncmp (KR_keyword, "/dev/scd4", 9) == 0)
                    {
{
return dev_storage + 303;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                default:
{
return	NULL;

}
                }
            case '3':
              switch (KR_keyword [6])
                {
                case 'd':
                  if (strncmp (KR_keyword, "/dev/sdd3", 9) == 0)
                    {
{
return dev_storage + 388;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'c':
                  if (strncmp (KR_keyword, "/dev/scd3", 9) == 0)
                    {
{
return dev_storage + 302;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                default:
{
return	NULL;

}
                }
            case '2':
              switch (KR_keyword [6])
                {
                case 'd':
                  if (strncmp (KR_keyword, "/dev/sdd2", 9) == 0)
                    {
{
return dev_storage + 387;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'c':
                  if (strncmp (KR_keyword, "/dev/scd2", 9) == 0)
                    {
{
return dev_storage + 301;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                default:
{
return	NULL;

}
                }
            case '1':
              switch (KR_keyword [6])
                {
                case 'd':
                  if (strncmp (KR_keyword, "/dev/sdd1", 9) == 0)
                    {
{
return dev_storage + 386;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'c':
                  if (strncmp (KR_keyword, "/dev/scd1", 9) == 0)
                    {
{
return dev_storage + 300;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                default:
{
return	NULL;

}
                }
            case '0':
              if (strncmp (KR_keyword, "/dev/scd0", 9) == 0)
                {
{
return dev_storage + 299;

}
                }
              else
                {
{
return	NULL;

}
                }
            default:
{
return	NULL;

}
            }
        case 'c':
          switch (KR_keyword [8])
            {
            case 'z':
              if (strncmp (KR_keyword, "/dev/sdcz", 9) == 0)
                {
{
return dev_storage + 1588;

}
                }
              else
                {
{
return	NULL;

}
                }
            case 'y':
              if (strncmp (KR_keyword, "/dev/sdcy", 9) == 0)
                {
{
return dev_storage + 1587;

}
                }
              else
                {
{
return	NULL;

}
                }
            case 'x':
              if (strncmp (KR_keyword, "/dev/sdcx", 9) == 0)
                {
{
return dev_storage + 1586;

}
                }
              else
                {
{
return	NULL;

}
                }
            case 'w':
              if (strncmp (KR_keyword, "/dev/sdcw", 9) == 0)
                {
{
return dev_storage + 1585;

}
                }
              else
                {
{
return	NULL;

}
                }
            case 'v':
              if (strncmp (KR_keyword, "/dev/sdcv", 9) == 0)
                {
{
return dev_storage + 1584;

}
                }
              else
                {
{
return	NULL;

}
                }
            case 'u':
              if (strncmp (KR_keyword, "/dev/sdcu", 9) == 0)
                {
{
return dev_storage + 1583;

}
                }
              else
                {
{
return	NULL;

}
                }
            case 't':
              if (strncmp (KR_keyword, "/dev/sdct", 9) == 0)
                {
{
return dev_storage + 1582;

}
                }
              else
                {
{
return	NULL;

}
                }
            case 's':
              if (strncmp (KR_keyword, "/dev/sdcs", 9) == 0)
                {
{
return dev_storage + 1581;

}
                }
              else
                {
{
return	NULL;

}
                }
            case 'r':
              if (strncmp (KR_keyword, "/dev/sdcr", 9) == 0)
                {
{
return dev_storage + 1580;

}
                }
              else
                {
{
return	NULL;

}
                }
            case 'q':
              if (strncmp (KR_keyword, "/dev/sdcq", 9) == 0)
                {
{
return dev_storage + 1579;

}
                }
              else
                {
{
return	NULL;

}
                }
            case 'p':
              if (strncmp (KR_keyword, "/dev/sdcp", 9) == 0)
                {
{
return dev_storage + 1578;

}
                }
              else
                {
{
return	NULL;

}
                }
            case 'o':
              if (strncmp (KR_keyword, "/dev/sdco", 9) == 0)
                {
{
return dev_storage + 1577;

}
                }
              else
                {
{
return	NULL;

}
                }
            case 'n':
              if (strncmp (KR_keyword, "/dev/sdcn", 9) == 0)
                {
{
return dev_storage + 1576;

}
                }
              else
                {
{
return	NULL;

}
                }
            case 'm':
              if (strncmp (KR_keyword, "/dev/sdcm", 9) == 0)
                {
{
return dev_storage + 1575;

}
                }
              else
                {
{
return	NULL;

}
                }
            case 'l':
              if (strncmp (KR_keyword, "/dev/sdcl", 9) == 0)
                {
{
return dev_storage + 1574;

}
                }
              else
                {
{
return	NULL;

}
                }
            case 'k':
              if (strncmp (KR_keyword, "/dev/sdck", 9) == 0)
                {
{
return dev_storage + 1573;

}
                }
              else
                {
{
return	NULL;

}
                }
            case 'j':
              if (strncmp (KR_keyword, "/dev/sdcj", 9) == 0)
                {
{
return dev_storage + 1572;

}
                }
              else
                {
{
return	NULL;

}
                }
            case 'i':
              if (strncmp (KR_keyword, "/dev/sdci", 9) == 0)
                {
{
return dev_storage + 1571;

}
                }
              else
                {
{
return	NULL;

}
                }
            case 'h':
              if (strncmp (KR_keyword, "/dev/sdch", 9) == 0)
                {
{
return dev_storage + 1570;

}
                }
              else
                {
{
return	NULL;

}
                }
            case 'g':
              if (strncmp (KR_keyword, "/dev/sdcg", 9) == 0)
                {
{
return dev_storage + 1569;

}
                }
              else
                {
{
return	NULL;

}
                }
            case 'f':
              if (strncmp (KR_keyword, "/dev/sdcf", 9) == 0)
                {
{
return dev_storage + 1568;

}
                }
              else
                {
{
return	NULL;

}
                }
            case 'e':
              if (strncmp (KR_keyword, "/dev/sdce", 9) == 0)
                {
{
return dev_storage + 1567;

}
                }
              else
                {
{
return	NULL;

}
                }
            case 'd':
              if (strncmp (KR_keyword, "/dev/sdcd", 9) == 0)
                {
{
return dev_storage + 1566;

}
                }
              else
                {
{
return	NULL;

}
                }
            case 'c':
              if (strncmp (KR_keyword, "/dev/sdcc", 9) == 0)
                {
{
return dev_storage + 1565;

}
                }
              else
                {
{
return	NULL;

}
                }
            case 'b':
              if (strncmp (KR_keyword, "/dev/sdcb", 9) == 0)
                {
{
return dev_storage + 1564;

}
                }
              else
                {
{
return	NULL;

}
                }
            case 'a':
              if (strncmp (KR_keyword, "/dev/sdca", 9) == 0)
                {
{
return dev_storage + 1563;

}
                }
              else
                {
{
return	NULL;

}
                }
            case '9':
              if (strncmp (KR_keyword, "/dev/sdc9", 9) == 0)
                {
{
return dev_storage + 379;

}
                }
              else
                {
{
return	NULL;

}
                }
            case '8':
              if (strncmp (KR_keyword, "/dev/sdc8", 9) == 0)
                {
{
return dev_storage + 378;

}
                }
              else
                {
{
return	NULL;

}
                }
            case '7':
              if (strncmp (KR_keyword, "/dev/sdc7", 9) == 0)
                {
{
return dev_storage + 377;

}
                }
              else
                {
{
return	NULL;

}
                }
            case '6':
              if (strncmp (KR_keyword, "/dev/sdc6", 9) == 0)
                {
{
return dev_storage + 376;

}
                }
              else
                {
{
return	NULL;

}
                }
            case '5':
              if (strncmp (KR_keyword, "/dev/sdc5", 9) == 0)
                {
{
return dev_storage + 375;

}
                }
              else
                {
{
return	NULL;

}
                }
            case '4':
              if (strncmp (KR_keyword, "/dev/sdc4", 9) == 0)
                {
{
return dev_storage + 374;

}
                }
              else
                {
{
return	NULL;

}
                }
            case '3':
              if (strncmp (KR_keyword, "/dev/sdc3", 9) == 0)
                {
{
return dev_storage + 373;

}
                }
              else
                {
{
return	NULL;

}
                }
            case '2':
              if (strncmp (KR_keyword, "/dev/sdc2", 9) == 0)
                {
{
return dev_storage + 372;

}
                }
              else
                {
{
return	NULL;

}
                }
            case '1':
              if (strncmp (KR_keyword, "/dev/sdc1", 9) == 0)
                {
{
return dev_storage + 371;

}
                }
              else
                {
{
return	NULL;

}
                }
            default:
{
return	NULL;

}
            }
        case 'b':
          switch (KR_keyword [8])
            {
            case 'z':
              if (strncmp (KR_keyword, "/dev/sdbz", 9) == 0)
                {
{
return dev_storage + 1172;

}
                }
              else
                {
{
return	NULL;

}
                }
            case 'y':
              if (strncmp (KR_keyword, "/dev/sdby", 9) == 0)
                {
{
return dev_storage + 1171;

}
                }
              else
                {
{
return	NULL;

}
                }
            case 'x':
              if (strncmp (KR_keyword, "/dev/sdbx", 9) == 0)
                {
{
return dev_storage + 1170;

}
                }
              else
                {
{
return	NULL;

}
                }
            case 'w':
              if (strncmp (KR_keyword, "/dev/sdbw", 9) == 0)
                {
{
return dev_storage + 1169;

}
                }
              else
                {
{
return	NULL;

}
                }
            case 'v':
              if (strncmp (KR_keyword, "/dev/sdbv", 9) == 0)
                {
{
return dev_storage + 1168;

}
                }
              else
                {
{
return	NULL;

}
                }
            case 'u':
              if (strncmp (KR_keyword, "/dev/sdbu", 9) == 0)
                {
{
return dev_storage + 1167;

}
                }
              else
                {
{
return	NULL;

}
                }
            case 't':
              if (strncmp (KR_keyword, "/dev/sdbt", 9) == 0)
                {
{
return dev_storage + 1166;

}
                }
              else
                {
{
return	NULL;

}
                }
            case 's':
              if (strncmp (KR_keyword, "/dev/sdbs", 9) == 0)
                {
{
return dev_storage + 1165;

}
                }
              else
                {
{
return	NULL;

}
                }
            case 'r':
              if (strncmp (KR_keyword, "/dev/sdbr", 9) == 0)
                {
{
return dev_storage + 1164;

}
                }
              else
                {
{
return	NULL;

}
                }
            case 'q':
              if (strncmp (KR_keyword, "/dev/sdbq", 9) == 0)
                {
{
return dev_storage + 1163;

}
                }
              else
                {
{
return	NULL;

}
                }
            case 'p':
              if (strncmp (KR_keyword, "/dev/sdbp", 9) == 0)
                {
{
return dev_storage + 1162;

}
                }
              else
                {
{
return	NULL;

}
                }
            case 'o':
              if (strncmp (KR_keyword, "/dev/sdbo", 9) == 0)
                {
{
return dev_storage + 1161;

}
                }
              else
                {
{
return	NULL;

}
                }
            case 'n':
              if (strncmp (KR_keyword, "/dev/sdbn", 9) == 0)
                {
{
return dev_storage + 1160;

}
                }
              else
                {
{
return	NULL;

}
                }
            case 'm':
              if (strncmp (KR_keyword, "/dev/sdbm", 9) == 0)
                {
{
return dev_storage + 1159;

}
                }
              else
                {
{
return	NULL;

}
                }
            case 'l':
              if (strncmp (KR_keyword, "/dev/sdbl", 9) == 0)
                {
{
return dev_storage + 1158;

}
                }
              else
                {
{
return	NULL;

}
                }
            case 'k':
              if (strncmp (KR_keyword, "/dev/sdbk", 9) == 0)
                {
{
return dev_storage + 1157;

}
                }
              else
                {
{
return	NULL;

}
                }
            case 'j':
              if (strncmp (KR_keyword, "/dev/sdbj", 9) == 0)
                {
{
return dev_storage + 1156;

}
                }
              else
                {
{
return	NULL;

}
                }
            case 'i':
              if (strncmp (KR_keyword, "/dev/sdbi", 9) == 0)
                {
{
return dev_storage + 1155;

}
                }
              else
                {
{
return	NULL;

}
                }
            case 'h':
              if (strncmp (KR_keyword, "/dev/sdbh", 9) == 0)
                {
{
return dev_storage + 1154;

}
                }
              else
                {
{
return	NULL;

}
                }
            case 'g':
              if (strncmp (KR_keyword, "/dev/sdbg", 9) == 0)
                {
{
return dev_storage + 1153;

}
                }
              else
                {
{
return	NULL;

}
                }
            case 'f':
              if (strncmp (KR_keyword, "/dev/sdbf", 9) == 0)
                {
{
return dev_storage + 1152;

}
                }
              else
                {
{
return	NULL;

}
                }
            case 'e':
              if (strncmp (KR_keyword, "/dev/sdbe", 9) == 0)
                {
{
return dev_storage + 1151;

}
                }
              else
                {
{
return	NULL;

}
                }
            case 'd':
              if (strncmp (KR_keyword, "/dev/sdbd", 9) == 0)
                {
{
return dev_storage + 1150;

}
                }
              else
                {
{
return	NULL;

}
                }
            case 'c':
              if (strncmp (KR_keyword, "/dev/sdbc", 9) == 0)
                {
{
return dev_storage + 1149;

}
                }
              else
                {
{
return	NULL;

}
                }
            case 'b':
              if (strncmp (KR_keyword, "/dev/sdbb", 9) == 0)
                {
{
return dev_storage + 1148;

}
                }
              else
                {
{
return	NULL;

}
                }
            case 'a':
              if (strncmp (KR_keyword, "/dev/sdba", 9) == 0)
                {
{
return dev_storage + 1147;

}
                }
              else
                {
{
return	NULL;

}
                }
            case '9':
              if (strncmp (KR_keyword, "/dev/sdb9", 9) == 0)
                {
{
return dev_storage + 364;

}
                }
              else
                {
{
return	NULL;

}
                }
            case '8':
              if (strncmp (KR_keyword, "/dev/sdb8", 9) == 0)
                {
{
return dev_storage + 363;

}
                }
              else
                {
{
return	NULL;

}
                }
            case '7':
              if (strncmp (KR_keyword, "/dev/sdb7", 9) == 0)
                {
{
return dev_storage + 362;

}
                }
              else
                {
{
return	NULL;

}
                }
            case '6':
              if (strncmp (KR_keyword, "/dev/sdb6", 9) == 0)
                {
{
return dev_storage + 361;

}
                }
              else
                {
{
return	NULL;

}
                }
            case '5':
              if (strncmp (KR_keyword, "/dev/sdb5", 9) == 0)
                {
{
return dev_storage + 360;

}
                }
              else
                {
{
return	NULL;

}
                }
            case '4':
              if (strncmp (KR_keyword, "/dev/sdb4", 9) == 0)
                {
{
return dev_storage + 359;

}
                }
              else
                {
{
return	NULL;

}
                }
            case '3':
              if (strncmp (KR_keyword, "/dev/sdb3", 9) == 0)
                {
{
return dev_storage + 358;

}
                }
              else
                {
{
return	NULL;

}
                }
            case '2':
              if (strncmp (KR_keyword, "/dev/sdb2", 9) == 0)
                {
{
return dev_storage + 357;

}
                }
              else
                {
{
return	NULL;

}
                }
            case '1':
              if (strncmp (KR_keyword, "/dev/sdb1", 9) == 0)
                {
{
return dev_storage + 356;

}
                }
              else
                {
{
return	NULL;

}
                }
            default:
{
return	NULL;

}
            }
        case 'a':
          switch (KR_keyword [8])
            {
            case 'z':
              if (strncmp (KR_keyword, "/dev/sdaz", 9) == 0)
                {
{
return dev_storage + 756;

}
                }
              else
                {
{
return	NULL;

}
                }
            case 'y':
              if (strncmp (KR_keyword, "/dev/sday", 9) == 0)
                {
{
return dev_storage + 755;

}
                }
              else
                {
{
return	NULL;

}
                }
            case 'x':
              if (strncmp (KR_keyword, "/dev/sdax", 9) == 0)
                {
{
return dev_storage + 754;

}
                }
              else
                {
{
return	NULL;

}
                }
            case 'w':
              if (strncmp (KR_keyword, "/dev/sdaw", 9) == 0)
                {
{
return dev_storage + 753;

}
                }
              else
                {
{
return	NULL;

}
                }
            case 'v':
              if (strncmp (KR_keyword, "/dev/sdav", 9) == 0)
                {
{
return dev_storage + 752;

}
                }
              else
                {
{
return	NULL;

}
                }
            case 'u':
              if (strncmp (KR_keyword, "/dev/sdau", 9) == 0)
                {
{
return dev_storage + 751;

}
                }
              else
                {
{
return	NULL;

}
                }
            case 't':
              if (strncmp (KR_keyword, "/dev/sdat", 9) == 0)
                {
{
return dev_storage + 750;

}
                }
              else
                {
{
return	NULL;

}
                }
            case 's':
              if (strncmp (KR_keyword, "/dev/sdas", 9) == 0)
                {
{
return dev_storage + 749;

}
                }
              else
                {
{
return	NULL;

}
                }
            case 'r':
              if (strncmp (KR_keyword, "/dev/sdar", 9) == 0)
                {
{
return dev_storage + 748;

}
                }
              else
                {
{
return	NULL;

}
                }
            case 'q':
              if (strncmp (KR_keyword, "/dev/sdaq", 9) == 0)
                {
{
return dev_storage + 747;

}
                }
              else
                {
{
return	NULL;

}
                }
            case 'p':
              if (strncmp (KR_keyword, "/dev/sdap", 9) == 0)
                {
{
return dev_storage + 746;

}
                }
              else
                {
{
return	NULL;

}
                }
            case 'o':
              if (strncmp (KR_keyword, "/dev/sdao", 9) == 0)
                {
{
return dev_storage + 745;

}
                }
              else
                {
{
return	NULL;

}
                }
            case 'n':
              if (strncmp (KR_keyword, "/dev/sdan", 9) == 0)
                {
{
return dev_storage + 744;

}
                }
              else
                {
{
return	NULL;

}
                }
            case 'm':
              if (strncmp (KR_keyword, "/dev/sdam", 9) == 0)
                {
{
return dev_storage + 743;

}
                }
              else
                {
{
return	NULL;

}
                }
            case 'l':
              if (strncmp (KR_keyword, "/dev/sdal", 9) == 0)
                {
{
return dev_storage + 742;

}
                }
              else
                {
{
return	NULL;

}
                }
            case 'k':
              if (strncmp (KR_keyword, "/dev/sdak", 9) == 0)
                {
{
return dev_storage + 741;

}
                }
              else
                {
{
return	NULL;

}
                }
            case 'j':
              if (strncmp (KR_keyword, "/dev/sdaj", 9) == 0)
                {
{
return dev_storage + 740;

}
                }
              else
                {
{
return	NULL;

}
                }
            case 'i':
              if (strncmp (KR_keyword, "/dev/sdai", 9) == 0)
                {
{
return dev_storage + 739;

}
                }
              else
                {
{
return	NULL;

}
                }
            case 'h':
              if (strncmp (KR_keyword, "/dev/sdah", 9) == 0)
                {
{
return dev_storage + 738;

}
                }
              else
                {
{
return	NULL;

}
                }
            case 'g':
              if (strncmp (KR_keyword, "/dev/sdag", 9) == 0)
                {
{
return dev_storage + 737;

}
                }
              else
                {
{
return	NULL;

}
                }
            case 'f':
              if (strncmp (KR_keyword, "/dev/sdaf", 9) == 0)
                {
{
return dev_storage + 736;

}
                }
              else
                {
{
return	NULL;

}
                }
            case 'e':
              if (strncmp (KR_keyword, "/dev/sdae", 9) == 0)
                {
{
return dev_storage + 735;

}
                }
              else
                {
{
return	NULL;

}
                }
            case 'd':
              if (strncmp (KR_keyword, "/dev/sdad", 9) == 0)
                {
{
return dev_storage + 734;

}
                }
              else
                {
{
return	NULL;

}
                }
            case 'c':
              if (strncmp (KR_keyword, "/dev/sdac", 9) == 0)
                {
{
return dev_storage + 733;

}
                }
              else
                {
{
return	NULL;

}
                }
            case 'b':
              if (strncmp (KR_keyword, "/dev/sdab", 9) == 0)
                {
{
return dev_storage + 732;

}
                }
              else
                {
{
return	NULL;

}
                }
            case 'a':
              if (strncmp (KR_keyword, "/dev/sdaa", 9) == 0)
                {
{
return dev_storage + 731;

}
                }
              else
                {
{
return	NULL;

}
                }
            case '9':
              if (strncmp (KR_keyword, "/dev/sda9", 9) == 0)
                {
{
return dev_storage + 349;

}
                }
              else
                {
{
return	NULL;

}
                }
            case '8':
              if (strncmp (KR_keyword, "/dev/sda8", 9) == 0)
                {
{
return dev_storage + 348;

}
                }
              else
                {
{
return	NULL;

}
                }
            case '7':
              if (strncmp (KR_keyword, "/dev/sda7", 9) == 0)
                {
{
return dev_storage + 347;

}
                }
              else
                {
{
return	NULL;

}
                }
            case '6':
              if (strncmp (KR_keyword, "/dev/sda6", 9) == 0)
                {
{
return dev_storage + 346;

}
                }
              else
                {
{
return	NULL;

}
                }
            case '5':
              if (strncmp (KR_keyword, "/dev/sda5", 9) == 0)
                {
{
return dev_storage + 345;

}
                }
              else
                {
{
return	NULL;

}
                }
            case '4':
              if (strncmp (KR_keyword, "/dev/sda4", 9) == 0)
                {
{
return dev_storage + 344;

}
                }
              else
                {
{
return	NULL;

}
                }
            case '3':
              if (strncmp (KR_keyword, "/dev/sda3", 9) == 0)
                {
{
return dev_storage + 343;

}
                }
              else
                {
{
return	NULL;

}
                }
            case '2':
              if (strncmp (KR_keyword, "/dev/sda2", 9) == 0)
                {
{
return dev_storage + 342;

}
                }
              else
                {
{
return	NULL;

}
                }
            case '1':
              if (strncmp (KR_keyword, "/dev/sda1", 9) == 0)
                {
{
return dev_storage + 341;

}
                }
              else
                {
{
return	NULL;

}
                }
            default:
{
return	NULL;

}
            }
        case '9':
          switch (KR_keyword [8])
            {
            case '9':
              if (strncmp (KR_keyword, "/dev/st99", 9) == 0)
                {
{
return dev_storage + 2478;

}
                }
              else
                {
{
return	NULL;

}
                }
            case '8':
              if (strncmp (KR_keyword, "/dev/st98", 9) == 0)
                {
{
return dev_storage + 2477;

}
                }
              else
                {
{
return	NULL;

}
                }
            case '7':
              if (strncmp (KR_keyword, "/dev/st97", 9) == 0)
                {
{
return dev_storage + 2476;

}
                }
              else
                {
{
return	NULL;

}
                }
            case '6':
              if (strncmp (KR_keyword, "/dev/st96", 9) == 0)
                {
{
return dev_storage + 2475;

}
                }
              else
                {
{
return	NULL;

}
                }
            case '5':
              if (strncmp (KR_keyword, "/dev/st95", 9) == 0)
                {
{
return dev_storage + 2474;

}
                }
              else
                {
{
return	NULL;

}
                }
            case '4':
              if (strncmp (KR_keyword, "/dev/st94", 9) == 0)
                {
{
return dev_storage + 2473;

}
                }
              else
                {
{
return	NULL;

}
                }
            case '3':
              if (strncmp (KR_keyword, "/dev/st93", 9) == 0)
                {
{
return dev_storage + 2472;

}
                }
              else
                {
{
return	NULL;

}
                }
            case '2':
              if (strncmp (KR_keyword, "/dev/st92", 9) == 0)
                {
{
return dev_storage + 2471;

}
                }
              else
                {
{
return	NULL;

}
                }
            case '1':
              if (strncmp (KR_keyword, "/dev/st91", 9) == 0)
                {
{
return dev_storage + 2470;

}
                }
              else
                {
{
return	NULL;

}
                }
            case '0':
              if (strncmp (KR_keyword, "/dev/st90", 9) == 0)
                {
{
return dev_storage + 2469;

}
                }
              else
                {
{
return	NULL;

}
                }
            default:
{
return	NULL;

}
            }
        case '8':
          switch (KR_keyword [8])
            {
            case '9':
              if (strncmp (KR_keyword, "/dev/st89", 9) == 0)
                {
{
return dev_storage + 2468;

}
                }
              else
                {
{
return	NULL;

}
                }
            case '8':
              if (strncmp (KR_keyword, "/dev/st88", 9) == 0)
                {
{
return dev_storage + 2467;

}
                }
              else
                {
{
return	NULL;

}
                }
            case '7':
              if (strncmp (KR_keyword, "/dev/st87", 9) == 0)
                {
{
return dev_storage + 2466;

}
                }
              else
                {
{
return	NULL;

}
                }
            case '6':
              if (strncmp (KR_keyword, "/dev/st86", 9) == 0)
                {
{
return dev_storage + 2465;

}
                }
              else
                {
{
return	NULL;

}
                }
            case '5':
              if (strncmp (KR_keyword, "/dev/st85", 9) == 0)
                {
{
return dev_storage + 2464;

}
                }
              else
                {
{
return	NULL;

}
                }
            case '4':
              if (strncmp (KR_keyword, "/dev/st84", 9) == 0)
                {
{
return dev_storage + 2463;

}
                }
              else
                {
{
return	NULL;

}
                }
            case '3':
              if (strncmp (KR_keyword, "/dev/st83", 9) == 0)
                {
{
return dev_storage + 2462;

}
                }
              else
                {
{
return	NULL;

}
                }
            case '2':
              if (strncmp (KR_keyword, "/dev/st82", 9) == 0)
                {
{
return dev_storage + 2461;

}
                }
              else
                {
{
return	NULL;

}
                }
            case '1':
              if (strncmp (KR_keyword, "/dev/st81", 9) == 0)
                {
{
return dev_storage + 2460;

}
                }
              else
                {
{
return	NULL;

}
                }
            case '0':
              if (strncmp (KR_keyword, "/dev/st80", 9) == 0)
                {
{
return dev_storage + 2459;

}
                }
              else
                {
{
return	NULL;

}
                }
            default:
{
return	NULL;

}
            }
        case '7':
          switch (KR_keyword [8])
            {
            case '9':
              if (strncmp (KR_keyword, "/dev/st79", 9) == 0)
                {
{
return dev_storage + 2458;

}
                }
              else
                {
{
return	NULL;

}
                }
            case '8':
              if (strncmp (KR_keyword, "/dev/st78", 9) == 0)
                {
{
return dev_storage + 2457;

}
                }
              else
                {
{
return	NULL;

}
                }
            case '7':
              if (strncmp (KR_keyword, "/dev/st77", 9) == 0)
                {
{
return dev_storage + 2456;

}
                }
              else
                {
{
return	NULL;

}
                }
            case '6':
              if (strncmp (KR_keyword, "/dev/st76", 9) == 0)
                {
{
return dev_storage + 2455;

}
                }
              else
                {
{
return	NULL;

}
                }
            case '5':
              if (strncmp (KR_keyword, "/dev/st75", 9) == 0)
                {
{
return dev_storage + 2454;

}
                }
              else
                {
{
return	NULL;

}
                }
            case '4':
              if (strncmp (KR_keyword, "/dev/st74", 9) == 0)
                {
{
return dev_storage + 2453;

}
                }
              else
                {
{
return	NULL;

}
                }
            case '3':
              if (strncmp (KR_keyword, "/dev/st73", 9) == 0)
                {
{
return dev_storage + 2452;

}
                }
              else
                {
{
return	NULL;

}
                }
            case '2':
              if (strncmp (KR_keyword, "/dev/st72", 9) == 0)
                {
{
return dev_storage + 2451;

}
                }
              else
                {
{
return	NULL;

}
                }
            case '1':
              if (strncmp (KR_keyword, "/dev/st71", 9) == 0)
                {
{
return dev_storage + 2450;

}
                }
              else
                {
{
return	NULL;

}
                }
            case '0':
              if (strncmp (KR_keyword, "/dev/st70", 9) == 0)
                {
{
return dev_storage + 2449;

}
                }
              else
                {
{
return	NULL;

}
                }
            default:
{
return	NULL;

}
            }
        case '6':
          switch (KR_keyword [8])
            {
            case '9':
              if (strncmp (KR_keyword, "/dev/st69", 9) == 0)
                {
{
return dev_storage + 2448;

}
                }
              else
                {
{
return	NULL;

}
                }
            case '8':
              if (strncmp (KR_keyword, "/dev/st68", 9) == 0)
                {
{
return dev_storage + 2447;

}
                }
              else
                {
{
return	NULL;

}
                }
            case '7':
              if (strncmp (KR_keyword, "/dev/st67", 9) == 0)
                {
{
return dev_storage + 2446;

}
                }
              else
                {
{
return	NULL;

}
                }
            case '6':
              if (strncmp (KR_keyword, "/dev/st66", 9) == 0)
                {
{
return dev_storage + 2445;

}
                }
              else
                {
{
return	NULL;

}
                }
            case '5':
              if (strncmp (KR_keyword, "/dev/st65", 9) == 0)
                {
{
return dev_storage + 2444;

}
                }
              else
                {
{
return	NULL;

}
                }
            case '4':
              if (strncmp (KR_keyword, "/dev/st64", 9) == 0)
                {
{
return dev_storage + 2443;

}
                }
              else
                {
{
return	NULL;

}
                }
            case '3':
              if (strncmp (KR_keyword, "/dev/st63", 9) == 0)
                {
{
return dev_storage + 2442;

}
                }
              else
                {
{
return	NULL;

}
                }
            case '2':
              if (strncmp (KR_keyword, "/dev/st62", 9) == 0)
                {
{
return dev_storage + 2441;

}
                }
              else
                {
{
return	NULL;

}
                }
            case '1':
              if (strncmp (KR_keyword, "/dev/st61", 9) == 0)
                {
{
return dev_storage + 2440;

}
                }
              else
                {
{
return	NULL;

}
                }
            case '0':
              if (strncmp (KR_keyword, "/dev/st60", 9) == 0)
                {
{
return dev_storage + 2439;

}
                }
              else
                {
{
return	NULL;

}
                }
            default:
{
return	NULL;

}
            }
        case '5':
          switch (KR_keyword [8])
            {
            case '9':
              if (strncmp (KR_keyword, "/dev/st59", 9) == 0)
                {
{
return dev_storage + 2438;

}
                }
              else
                {
{
return	NULL;

}
                }
            case '8':
              if (strncmp (KR_keyword, "/dev/st58", 9) == 0)
                {
{
return dev_storage + 2437;

}
                }
              else
                {
{
return	NULL;

}
                }
            case '7':
              if (strncmp (KR_keyword, "/dev/st57", 9) == 0)
                {
{
return dev_storage + 2436;

}
                }
              else
                {
{
return	NULL;

}
                }
            case '6':
              if (strncmp (KR_keyword, "/dev/st56", 9) == 0)
                {
{
return dev_storage + 2435;

}
                }
              else
                {
{
return	NULL;

}
                }
            case '5':
              if (strncmp (KR_keyword, "/dev/st55", 9) == 0)
                {
{
return dev_storage + 2434;

}
                }
              else
                {
{
return	NULL;

}
                }
            case '4':
              if (strncmp (KR_keyword, "/dev/st54", 9) == 0)
                {
{
return dev_storage + 2433;

}
                }
              else
                {
{
return	NULL;

}
                }
            case '3':
              if (strncmp (KR_keyword, "/dev/st53", 9) == 0)
                {
{
return dev_storage + 2432;

}
                }
              else
                {
{
return	NULL;

}
                }
            case '2':
              if (strncmp (KR_keyword, "/dev/st52", 9) == 0)
                {
{
return dev_storage + 2431;

}
                }
              else
                {
{
return	NULL;

}
                }
            case '1':
              if (strncmp (KR_keyword, "/dev/st51", 9) == 0)
                {
{
return dev_storage + 2430;

}
                }
              else
                {
{
return	NULL;

}
                }
            case '0':
              if (strncmp (KR_keyword, "/dev/st50", 9) == 0)
                {
{
return dev_storage + 2429;

}
                }
              else
                {
{
return	NULL;

}
                }
            default:
{
return	NULL;

}
            }
        case '4':
          switch (KR_keyword [8])
            {
            case '9':
              if (strncmp (KR_keyword, "/dev/st49", 9) == 0)
                {
{
return dev_storage + 2428;

}
                }
              else
                {
{
return	NULL;

}
                }
            case '8':
              if (strncmp (KR_keyword, "/dev/st48", 9) == 0)
                {
{
return dev_storage + 2427;

}
                }
              else
                {
{
return	NULL;

}
                }
            case '7':
              if (strncmp (KR_keyword, "/dev/st47", 9) == 0)
                {
{
return dev_storage + 2426;

}
                }
              else
                {
{
return	NULL;

}
                }
            case '6':
              if (strncmp (KR_keyword, "/dev/st46", 9) == 0)
                {
{
return dev_storage + 2425;

}
                }
              else
                {
{
return	NULL;

}
                }
            case '5':
              if (strncmp (KR_keyword, "/dev/st45", 9) == 0)
                {
{
return dev_storage + 2424;

}
                }
              else
                {
{
return	NULL;

}
                }
            case '4':
              if (strncmp (KR_keyword, "/dev/st44", 9) == 0)
                {
{
return dev_storage + 2423;

}
                }
              else
                {
{
return	NULL;

}
                }
            case '3':
              if (strncmp (KR_keyword, "/dev/st43", 9) == 0)
                {
{
return dev_storage + 2422;

}
                }
              else
                {
{
return	NULL;

}
                }
            case '2':
              if (strncmp (KR_keyword, "/dev/st42", 9) == 0)
                {
{
return dev_storage + 2421;

}
                }
              else
                {
{
return	NULL;

}
                }
            case '1':
              if (strncmp (KR_keyword, "/dev/st41", 9) == 0)
                {
{
return dev_storage + 2420;

}
                }
              else
                {
{
return	NULL;

}
                }
            case '0':
              if (strncmp (KR_keyword, "/dev/st40", 9) == 0)
                {
{
return dev_storage + 2419;

}
                }
              else
                {
{
return	NULL;

}
                }
            default:
{
return	NULL;

}
            }
        case '3':
          switch (KR_keyword [8])
            {
            case '9':
              if (strncmp (KR_keyword, "/dev/st39", 9) == 0)
                {
{
return dev_storage + 2418;

}
                }
              else
                {
{
return	NULL;

}
                }
            case '8':
              if (strncmp (KR_keyword, "/dev/st38", 9) == 0)
                {
{
return dev_storage + 2417;

}
                }
              else
                {
{
return	NULL;

}
                }
            case '7':
              if (strncmp (KR_keyword, "/dev/st37", 9) == 0)
                {
{
return dev_storage + 2416;

}
                }
              else
                {
{
return	NULL;

}
                }
            case '6':
              if (strncmp (KR_keyword, "/dev/st36", 9) == 0)
                {
{
return dev_storage + 2415;

}
                }
              else
                {
{
return	NULL;

}
                }
            case '5':
              if (strncmp (KR_keyword, "/dev/st35", 9) == 0)
                {
{
return dev_storage + 2414;

}
                }
              else
                {
{
return	NULL;

}
                }
            case '4':
              if (strncmp (KR_keyword, "/dev/st34", 9) == 0)
                {
{
return dev_storage + 2413;

}
                }
              else
                {
{
return	NULL;

}
                }
            case '3':
              if (strncmp (KR_keyword, "/dev/st33", 9) == 0)
                {
{
return dev_storage + 2412;

}
                }
              else
                {
{
return	NULL;

}
                }
            case '2':
              if (strncmp (KR_keyword, "/dev/st32", 9) == 0)
                {
{
return dev_storage + 2411;

}
                }
              else
                {
{
return	NULL;

}
                }
            case '1':
              if (strncmp (KR_keyword, "/dev/st31", 9) == 0)
                {
{
return dev_storage + 2410;

}
                }
              else
                {
{
return	NULL;

}
                }
            case '0':
              if (strncmp (KR_keyword, "/dev/st30", 9) == 0)
                {
{
return dev_storage + 2409;

}
                }
              else
                {
{
return	NULL;

}
                }
            default:
{
return	NULL;

}
            }
        case '2':
          switch (KR_keyword [8])
            {
            case '9':
              if (strncmp (KR_keyword, "/dev/st29", 9) == 0)
                {
{
return dev_storage + 2408;

}
                }
              else
                {
{
return	NULL;

}
                }
            case '8':
              if (strncmp (KR_keyword, "/dev/st28", 9) == 0)
                {
{
return dev_storage + 2407;

}
                }
              else
                {
{
return	NULL;

}
                }
            case '7':
              if (strncmp (KR_keyword, "/dev/st27", 9) == 0)
                {
{
return dev_storage + 2406;

}
                }
              else
                {
{
return	NULL;

}
                }
            case '6':
              if (strncmp (KR_keyword, "/dev/st26", 9) == 0)
                {
{
return dev_storage + 2405;

}
                }
              else
                {
{
return	NULL;

}
                }
            case '5':
              if (strncmp (KR_keyword, "/dev/st25", 9) == 0)
                {
{
return dev_storage + 2404;

}
                }
              else
                {
{
return	NULL;

}
                }
            case '4':
              if (strncmp (KR_keyword, "/dev/st24", 9) == 0)
                {
{
return dev_storage + 2403;

}
                }
              else
                {
{
return	NULL;

}
                }
            case '3':
              if (strncmp (KR_keyword, "/dev/st23", 9) == 0)
                {
{
return dev_storage + 2402;

}
                }
              else
                {
{
return	NULL;

}
                }
            case '2':
              if (strncmp (KR_keyword, "/dev/st22", 9) == 0)
                {
{
return dev_storage + 2401;

}
                }
              else
                {
{
return	NULL;

}
                }
            case '1':
              if (strncmp (KR_keyword, "/dev/st21", 9) == 0)
                {
{
return dev_storage + 2400;

}
                }
              else
                {
{
return	NULL;

}
                }
            case '0':
              if (strncmp (KR_keyword, "/dev/st20", 9) == 0)
                {
{
return dev_storage + 2399;

}
                }
              else
                {
{
return	NULL;

}
                }
            default:
{
return	NULL;

}
            }
        case '1':
          switch (KR_keyword [8])
            {
            case '9':
              if (strncmp (KR_keyword, "/dev/st19", 9) == 0)
                {
{
return dev_storage + 2398;

}
                }
              else
                {
{
return	NULL;

}
                }
            case '8':
              if (strncmp (KR_keyword, "/dev/st18", 9) == 0)
                {
{
return dev_storage + 2397;

}
                }
              else
                {
{
return	NULL;

}
                }
            case '7':
              if (strncmp (KR_keyword, "/dev/st17", 9) == 0)
                {
{
return dev_storage + 2396;

}
                }
              else
                {
{
return	NULL;

}
                }
            case '6':
              if (strncmp (KR_keyword, "/dev/st16", 9) == 0)
                {
{
return dev_storage + 2395;

}
                }
              else
                {
{
return	NULL;

}
                }
            case '5':
              switch (KR_keyword [6])
                {
                case 't':
                  if (strncmp (KR_keyword, "/dev/st15", 9) == 0)
                    {
{
return dev_storage + 2394;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'r':
                  if (strncmp (KR_keyword, "/dev/sr15", 9) == 0)
                    {
{
return dev_storage + 2378;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'd':
                  if (strncmp (KR_keyword, "/dev/fd15", 9) == 0)
                    {
{
return dev_storage + 101;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                default:
{
return	NULL;

}
                }
            case '4':
              switch (KR_keyword [6])
                {
                case 't':
                  if (strncmp (KR_keyword, "/dev/st14", 9) == 0)
                    {
{
return dev_storage + 2393;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'r':
                  if (strncmp (KR_keyword, "/dev/sr14", 9) == 0)
                    {
{
return dev_storage + 2377;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'd':
                  if (strncmp (KR_keyword, "/dev/fd14", 9) == 0)
                    {
{
return dev_storage + 100;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                default:
{
return	NULL;

}
                }
            case '3':
              switch (KR_keyword [6])
                {
                case 't':
                  if (strncmp (KR_keyword, "/dev/st13", 9) == 0)
                    {
{
return dev_storage + 2392;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'r':
                  if (strncmp (KR_keyword, "/dev/sr13", 9) == 0)
                    {
{
return dev_storage + 2376;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'd':
                  if (strncmp (KR_keyword, "/dev/fd13", 9) == 0)
                    {
{
return dev_storage + 99;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                default:
{
return	NULL;

}
                }
            case '2':
              switch (KR_keyword [6])
                {
                case 't':
                  if (strncmp (KR_keyword, "/dev/st12", 9) == 0)
                    {
{
return dev_storage + 2391;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'r':
                  if (strncmp (KR_keyword, "/dev/sr12", 9) == 0)
                    {
{
return dev_storage + 2375;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'd':
                  if (strncmp (KR_keyword, "/dev/fd12", 9) == 0)
                    {
{
return dev_storage + 98;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                default:
{
return	NULL;

}
                }
            case '1':
              switch (KR_keyword [6])
                {
                case 't':
                  if (strncmp (KR_keyword, "/dev/st11", 9) == 0)
                    {
{
return dev_storage + 2390;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'r':
                  if (strncmp (KR_keyword, "/dev/sr11", 9) == 0)
                    {
{
return dev_storage + 2374;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'd':
                  if (strncmp (KR_keyword, "/dev/fd11", 9) == 0)
                    {
{
return dev_storage + 97;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                default:
{
return	NULL;

}
                }
            case '0':
              switch (KR_keyword [6])
                {
                case 't':
                  if (strncmp (KR_keyword, "/dev/st10", 9) == 0)
                    {
{
return dev_storage + 2389;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'r':
                  if (strncmp (KR_keyword, "/dev/sr10", 9) == 0)
                    {
{
return dev_storage + 2373;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'd':
                  if (strncmp (KR_keyword, "/dev/fd10", 9) == 0)
                    {
{
return dev_storage + 96;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                default:
{
return	NULL;

}
                }
            default:
{
return	NULL;

}
            }
        default:
{
return	NULL;

}
        }
    case 10:
      switch (KR_keyword [9])
        {
        case 'n':
          if (strncmp (KR_keyword, "/dev/conin", 10) == 0)
            {
{
return dev_storage + 18;

}
            }
          else
            {
{
return	NULL;

}
            }
        case '9':
          switch (KR_keyword [8])
            {
            case 'z':
              switch (KR_keyword [7])
                {
                case 'c':
                  if (strncmp (KR_keyword, "/dev/sdcz9", 10) == 0)
                    {
{
return dev_storage + 1972;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'b':
                  if (strncmp (KR_keyword, "/dev/sdbz9", 10) == 0)
                    {
{
return dev_storage + 1556;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'a':
                  if (strncmp (KR_keyword, "/dev/sdaz9", 10) == 0)
                    {
{
return dev_storage + 1140;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                default:
{
return	NULL;

}
                }
            case 'y':
              switch (KR_keyword [7])
                {
                case 'c':
                  if (strncmp (KR_keyword, "/dev/sdcy9", 10) == 0)
                    {
{
return dev_storage + 1957;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'b':
                  if (strncmp (KR_keyword, "/dev/sdby9", 10) == 0)
                    {
{
return dev_storage + 1541;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'a':
                  if (strncmp (KR_keyword, "/dev/sday9", 10) == 0)
                    {
{
return dev_storage + 1125;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                default:
{
return	NULL;

}
                }
            case 'x':
              switch (KR_keyword [7])
                {
                case 'd':
                  if (strncmp (KR_keyword, "/dev/sddx9", 10) == 0)
                    {
{
return dev_storage + 2356;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'c':
                  if (strncmp (KR_keyword, "/dev/sdcx9", 10) == 0)
                    {
{
return dev_storage + 1942;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'b':
                  if (strncmp (KR_keyword, "/dev/sdbx9", 10) == 0)
                    {
{
return dev_storage + 1526;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'a':
                  if (strncmp (KR_keyword, "/dev/sdax9", 10) == 0)
                    {
{
return dev_storage + 1110;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                default:
{
return	NULL;

}
                }
            case 'w':
              switch (KR_keyword [7])
                {
                case 'd':
                  if (strncmp (KR_keyword, "/dev/sddw9", 10) == 0)
                    {
{
return dev_storage + 2341;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'c':
                  if (strncmp (KR_keyword, "/dev/sdcw9", 10) == 0)
                    {
{
return dev_storage + 1927;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'b':
                  if (strncmp (KR_keyword, "/dev/sdbw9", 10) == 0)
                    {
{
return dev_storage + 1511;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'a':
                  if (strncmp (KR_keyword, "/dev/sdaw9", 10) == 0)
                    {
{
return dev_storage + 1095;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                default:
{
return	NULL;

}
                }
            case 'v':
              switch (KR_keyword [7])
                {
                case 'd':
                  if (strncmp (KR_keyword, "/dev/sddv9", 10) == 0)
                    {
{
return dev_storage + 2326;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'c':
                  if (strncmp (KR_keyword, "/dev/sdcv9", 10) == 0)
                    {
{
return dev_storage + 1912;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'b':
                  if (strncmp (KR_keyword, "/dev/sdbv9", 10) == 0)
                    {
{
return dev_storage + 1496;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'a':
                  if (strncmp (KR_keyword, "/dev/sdav9", 10) == 0)
                    {
{
return dev_storage + 1080;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                default:
{
return	NULL;

}
                }
            case 'u':
              switch (KR_keyword [7])
                {
                case 'd':
                  if (strncmp (KR_keyword, "/dev/sddu9", 10) == 0)
                    {
{
return dev_storage + 2311;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'c':
                  if (strncmp (KR_keyword, "/dev/sdcu9", 10) == 0)
                    {
{
return dev_storage + 1897;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'b':
                  if (strncmp (KR_keyword, "/dev/sdbu9", 10) == 0)
                    {
{
return dev_storage + 1481;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'a':
                  if (strncmp (KR_keyword, "/dev/sdau9", 10) == 0)
                    {
{
return dev_storage + 1065;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                default:
{
return	NULL;

}
                }
            case 't':
              switch (KR_keyword [7])
                {
                case 'd':
                  if (strncmp (KR_keyword, "/dev/sddt9", 10) == 0)
                    {
{
return dev_storage + 2296;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'c':
                  if (strncmp (KR_keyword, "/dev/sdct9", 10) == 0)
                    {
{
return dev_storage + 1882;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'b':
                  if (strncmp (KR_keyword, "/dev/sdbt9", 10) == 0)
                    {
{
return dev_storage + 1466;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'a':
                  if (strncmp (KR_keyword, "/dev/sdat9", 10) == 0)
                    {
{
return dev_storage + 1050;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                default:
{
return	NULL;

}
                }
            case 's':
              switch (KR_keyword [7])
                {
                case 'n':
                  if (strncmp (KR_keyword, "/dev/cons9", 10) == 0)
                    {
{
return dev_storage + 29;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'd':
                  if (strncmp (KR_keyword, "/dev/sdds9", 10) == 0)
                    {
{
return dev_storage + 2281;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'c':
                  if (strncmp (KR_keyword, "/dev/sdcs9", 10) == 0)
                    {
{
return dev_storage + 1867;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'b':
                  if (strncmp (KR_keyword, "/dev/sdbs9", 10) == 0)
                    {
{
return dev_storage + 1451;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'a':
                  if (strncmp (KR_keyword, "/dev/sdas9", 10) == 0)
                    {
{
return dev_storage + 1035;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                default:
{
return	NULL;

}
                }
            case 'r':
              switch (KR_keyword [7])
                {
                case 'd':
                  if (strncmp (KR_keyword, "/dev/sddr9", 10) == 0)
                    {
{
return dev_storage + 2266;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'c':
                  if (strncmp (KR_keyword, "/dev/sdcr9", 10) == 0)
                    {
{
return dev_storage + 1852;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'b':
                  if (strncmp (KR_keyword, "/dev/sdbr9", 10) == 0)
                    {
{
return dev_storage + 1436;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'a':
                  if (strncmp (KR_keyword, "/dev/sdar9", 10) == 0)
                    {
{
return dev_storage + 1020;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                default:
{
return	NULL;

}
                }
            case 'q':
              switch (KR_keyword [7])
                {
                case 'd':
                  if (strncmp (KR_keyword, "/dev/sddq9", 10) == 0)
                    {
{
return dev_storage + 2251;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'c':
                  if (strncmp (KR_keyword, "/dev/sdcq9", 10) == 0)
                    {
{
return dev_storage + 1837;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'b':
                  if (strncmp (KR_keyword, "/dev/sdbq9", 10) == 0)
                    {
{
return dev_storage + 1421;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'a':
                  if (strncmp (KR_keyword, "/dev/sdaq9", 10) == 0)
                    {
{
return dev_storage + 1005;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                default:
{
return	NULL;

}
                }
            case 'p':
              switch (KR_keyword [7])
                {
                case 'd':
                  if (strncmp (KR_keyword, "/dev/sddp9", 10) == 0)
                    {
{
return dev_storage + 2236;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'c':
                  if (strncmp (KR_keyword, "/dev/sdcp9", 10) == 0)
                    {
{
return dev_storage + 1822;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'b':
                  if (strncmp (KR_keyword, "/dev/sdbp9", 10) == 0)
                    {
{
return dev_storage + 1406;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'a':
                  if (strncmp (KR_keyword, "/dev/sdap9", 10) == 0)
                    {
{
return dev_storage + 990;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                default:
{
return	NULL;

}
                }
            case 'o':
              switch (KR_keyword [7])
                {
                case 'd':
                  if (strncmp (KR_keyword, "/dev/sddo9", 10) == 0)
                    {
{
return dev_storage + 2221;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'c':
                  if (strncmp (KR_keyword, "/dev/sdco9", 10) == 0)
                    {
{
return dev_storage + 1807;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'b':
                  if (strncmp (KR_keyword, "/dev/sdbo9", 10) == 0)
                    {
{
return dev_storage + 1391;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'a':
                  if (strncmp (KR_keyword, "/dev/sdao9", 10) == 0)
                    {
{
return dev_storage + 975;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                default:
{
return	NULL;

}
                }
            case 'n':
              switch (KR_keyword [7])
                {
                case 'd':
                  if (strncmp (KR_keyword, "/dev/sddn9", 10) == 0)
                    {
{
return dev_storage + 2206;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'c':
                  if (strncmp (KR_keyword, "/dev/sdcn9", 10) == 0)
                    {
{
return dev_storage + 1792;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'b':
                  if (strncmp (KR_keyword, "/dev/sdbn9", 10) == 0)
                    {
{
return dev_storage + 1376;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'a':
                  if (strncmp (KR_keyword, "/dev/sdan9", 10) == 0)
                    {
{
return dev_storage + 960;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                default:
{
return	NULL;

}
                }
            case 'm':
              switch (KR_keyword [7])
                {
                case 'd':
                  if (strncmp (KR_keyword, "/dev/sddm9", 10) == 0)
                    {
{
return dev_storage + 2191;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'c':
                  if (strncmp (KR_keyword, "/dev/sdcm9", 10) == 0)
                    {
{
return dev_storage + 1777;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'b':
                  if (strncmp (KR_keyword, "/dev/sdbm9", 10) == 0)
                    {
{
return dev_storage + 1361;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'a':
                  if (strncmp (KR_keyword, "/dev/sdam9", 10) == 0)
                    {
{
return dev_storage + 945;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                default:
{
return	NULL;

}
                }
            case 'l':
              switch (KR_keyword [7])
                {
                case 'd':
                  if (strncmp (KR_keyword, "/dev/sddl9", 10) == 0)
                    {
{
return dev_storage + 2176;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'c':
                  if (strncmp (KR_keyword, "/dev/sdcl9", 10) == 0)
                    {
{
return dev_storage + 1762;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'b':
                  if (strncmp (KR_keyword, "/dev/sdbl9", 10) == 0)
                    {
{
return dev_storage + 1346;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'a':
                  if (strncmp (KR_keyword, "/dev/sdal9", 10) == 0)
                    {
{
return dev_storage + 930;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                default:
{
return	NULL;

}
                }
            case 'k':
              switch (KR_keyword [7])
                {
                case 'd':
                  if (strncmp (KR_keyword, "/dev/sddk9", 10) == 0)
                    {
{
return dev_storage + 2161;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'c':
                  if (strncmp (KR_keyword, "/dev/sdck9", 10) == 0)
                    {
{
return dev_storage + 1747;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'b':
                  if (strncmp (KR_keyword, "/dev/sdbk9", 10) == 0)
                    {
{
return dev_storage + 1331;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'a':
                  if (strncmp (KR_keyword, "/dev/sdak9", 10) == 0)
                    {
{
return dev_storage + 915;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                default:
{
return	NULL;

}
                }
            case 'j':
              switch (KR_keyword [7])
                {
                case 'd':
                  if (strncmp (KR_keyword, "/dev/sddj9", 10) == 0)
                    {
{
return dev_storage + 2146;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'c':
                  if (strncmp (KR_keyword, "/dev/sdcj9", 10) == 0)
                    {
{
return dev_storage + 1732;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'b':
                  if (strncmp (KR_keyword, "/dev/sdbj9", 10) == 0)
                    {
{
return dev_storage + 1316;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'a':
                  if (strncmp (KR_keyword, "/dev/sdaj9", 10) == 0)
                    {
{
return dev_storage + 900;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                default:
{
return	NULL;

}
                }
            case 'i':
              switch (KR_keyword [7])
                {
                case 'd':
                  if (strncmp (KR_keyword, "/dev/sddi9", 10) == 0)
                    {
{
return dev_storage + 2131;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'c':
                  if (strncmp (KR_keyword, "/dev/sdci9", 10) == 0)
                    {
{
return dev_storage + 1717;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'b':
                  if (strncmp (KR_keyword, "/dev/sdbi9", 10) == 0)
                    {
{
return dev_storage + 1301;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'a':
                  if (strncmp (KR_keyword, "/dev/sdai9", 10) == 0)
                    {
{
return dev_storage + 885;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                default:
{
return	NULL;

}
                }
            case 'h':
              switch (KR_keyword [7])
                {
                case 'd':
                  if (strncmp (KR_keyword, "/dev/sddh9", 10) == 0)
                    {
{
return dev_storage + 2116;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'c':
                  if (strncmp (KR_keyword, "/dev/sdch9", 10) == 0)
                    {
{
return dev_storage + 1702;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'b':
                  if (strncmp (KR_keyword, "/dev/sdbh9", 10) == 0)
                    {
{
return dev_storage + 1286;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'a':
                  if (strncmp (KR_keyword, "/dev/sdah9", 10) == 0)
                    {
{
return dev_storage + 870;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                default:
{
return	NULL;

}
                }
            case 'g':
              switch (KR_keyword [7])
                {
                case 'd':
                  if (strncmp (KR_keyword, "/dev/sddg9", 10) == 0)
                    {
{
return dev_storage + 2101;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'c':
                  if (strncmp (KR_keyword, "/dev/sdcg9", 10) == 0)
                    {
{
return dev_storage + 1687;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'b':
                  if (strncmp (KR_keyword, "/dev/sdbg9", 10) == 0)
                    {
{
return dev_storage + 1271;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'a':
                  if (strncmp (KR_keyword, "/dev/sdag9", 10) == 0)
                    {
{
return dev_storage + 855;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                default:
{
return	NULL;

}
                }
            case 'f':
              switch (KR_keyword [7])
                {
                case 'd':
                  if (strncmp (KR_keyword, "/dev/sddf9", 10) == 0)
                    {
{
return dev_storage + 2086;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'c':
                  if (strncmp (KR_keyword, "/dev/sdcf9", 10) == 0)
                    {
{
return dev_storage + 1672;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'b':
                  if (strncmp (KR_keyword, "/dev/sdbf9", 10) == 0)
                    {
{
return dev_storage + 1256;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'a':
                  if (strncmp (KR_keyword, "/dev/sdaf9", 10) == 0)
                    {
{
return dev_storage + 840;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                default:
{
return	NULL;

}
                }
            case 'e':
              switch (KR_keyword [7])
                {
                case 'd':
                  if (strncmp (KR_keyword, "/dev/sdde9", 10) == 0)
                    {
{
return dev_storage + 2071;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'c':
                  if (strncmp (KR_keyword, "/dev/sdce9", 10) == 0)
                    {
{
return dev_storage + 1657;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'b':
                  if (strncmp (KR_keyword, "/dev/sdbe9", 10) == 0)
                    {
{
return dev_storage + 1241;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'a':
                  if (strncmp (KR_keyword, "/dev/sdae9", 10) == 0)
                    {
{
return dev_storage + 825;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                default:
{
return	NULL;

}
                }
            case 'd':
              switch (KR_keyword [7])
                {
                case 'd':
                  if (strncmp (KR_keyword, "/dev/sddd9", 10) == 0)
                    {
{
return dev_storage + 2056;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'c':
                  if (strncmp (KR_keyword, "/dev/sdcd9", 10) == 0)
                    {
{
return dev_storage + 1642;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'b':
                  if (strncmp (KR_keyword, "/dev/sdbd9", 10) == 0)
                    {
{
return dev_storage + 1226;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'a':
                  if (strncmp (KR_keyword, "/dev/sdad9", 10) == 0)
                    {
{
return dev_storage + 810;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                default:
{
return	NULL;

}
                }
            case 'c':
              switch (KR_keyword [7])
                {
                case 'd':
                  if (strncmp (KR_keyword, "/dev/sddc9", 10) == 0)
                    {
{
return dev_storage + 2041;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'c':
                  if (strncmp (KR_keyword, "/dev/sdcc9", 10) == 0)
                    {
{
return dev_storage + 1627;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'b':
                  if (strncmp (KR_keyword, "/dev/sdbc9", 10) == 0)
                    {
{
return dev_storage + 1211;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'a':
                  if (strncmp (KR_keyword, "/dev/sdac9", 10) == 0)
                    {
{
return dev_storage + 795;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                default:
{
return	NULL;

}
                }
            case 'b':
              switch (KR_keyword [7])
                {
                case 'd':
                  if (strncmp (KR_keyword, "/dev/sddb9", 10) == 0)
                    {
{
return dev_storage + 2026;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'c':
                  if (strncmp (KR_keyword, "/dev/sdcb9", 10) == 0)
                    {
{
return dev_storage + 1612;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'b':
                  if (strncmp (KR_keyword, "/dev/sdbb9", 10) == 0)
                    {
{
return dev_storage + 1196;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'a':
                  if (strncmp (KR_keyword, "/dev/sdab9", 10) == 0)
                    {
{
return dev_storage + 780;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                default:
{
return	NULL;

}
                }
            case 'a':
              switch (KR_keyword [7])
                {
                case 'd':
                  if (strncmp (KR_keyword, "/dev/sdda9", 10) == 0)
                    {
{
return dev_storage + 2011;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'c':
                  if (strncmp (KR_keyword, "/dev/sdca9", 10) == 0)
                    {
{
return dev_storage + 1597;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'b':
                  if (strncmp (KR_keyword, "/dev/sdba9", 10) == 0)
                    {
{
return dev_storage + 1181;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'a':
                  if (strncmp (KR_keyword, "/dev/sdaa9", 10) == 0)
                    {
{
return dev_storage + 765;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                default:
{
return	NULL;

}
                }
            case 'S':
              if (strncmp (KR_keyword, "/dev/ttyS9", 10) == 0)
                {
{
return dev_storage + 2517;

}
                }
              else
                {
{
return	NULL;

}
                }
            case '9':
              if (strncmp (KR_keyword, "/dev/nst99", 10) == 0)
                {
{
return dev_storage + 203;

}
                }
              else
                {
{
return	NULL;

}
                }
            case '8':
              if (strncmp (KR_keyword, "/dev/nst89", 10) == 0)
                {
{
return dev_storage + 193;

}
                }
              else
                {
{
return	NULL;

}
                }
            case '7':
              if (strncmp (KR_keyword, "/dev/nst79", 10) == 0)
                {
{
return dev_storage + 183;

}
                }
              else
                {
{
return	NULL;

}
                }
            case '6':
              if (strncmp (KR_keyword, "/dev/nst69", 10) == 0)
                {
{
return dev_storage + 173;

}
                }
              else
                {
{
return	NULL;

}
                }
            case '5':
              switch (KR_keyword [5])
                {
                case 'p':
                  if (strncmp (KR_keyword, "/dev/pty59", 10) == 0)
                    {
{
return dev_storage + 293;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'n':
                  if (strncmp (KR_keyword, "/dev/nst59", 10) == 0)
                    {
{
return dev_storage + 163;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                default:
{
return	NULL;

}
                }
            case '4':
              switch (KR_keyword [5])
                {
                case 'p':
                  if (strncmp (KR_keyword, "/dev/pty49", 10) == 0)
                    {
{
return dev_storage + 283;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'n':
                  if (strncmp (KR_keyword, "/dev/nst49", 10) == 0)
                    {
{
return dev_storage + 153;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                default:
{
return	NULL;

}
                }
            case '3':
              switch (KR_keyword [5])
                {
                case 'p':
                  if (strncmp (KR_keyword, "/dev/pty39", 10) == 0)
                    {
{
return dev_storage + 273;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'n':
                  if (strncmp (KR_keyword, "/dev/nst39", 10) == 0)
                    {
{
return dev_storage + 143;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                default:
{
return	NULL;

}
                }
            case '2':
              switch (KR_keyword [5])
                {
                case 'p':
                  if (strncmp (KR_keyword, "/dev/pty29", 10) == 0)
                    {
{
return dev_storage + 263;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'n':
                  if (strncmp (KR_keyword, "/dev/nst29", 10) == 0)
                    {
{
return dev_storage + 133;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                default:
{
return	NULL;

}
                }
            case '1':
              switch (KR_keyword [5])
                {
                case 's':
                  if (strncmp (KR_keyword, "/dev/st119", 10) == 0)
                    {
{
return dev_storage + 2498;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'p':
                  if (strncmp (KR_keyword, "/dev/pty19", 10) == 0)
                    {
{
return dev_storage + 253;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'n':
                  if (strncmp (KR_keyword, "/dev/nst19", 10) == 0)
                    {
{
return dev_storage + 123;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                default:
{
return	NULL;

}
                }
            case '0':
              if (strncmp (KR_keyword, "/dev/st109", 10) == 0)
                {
{
return dev_storage + 2488;

}
                }
              else
                {
{
return	NULL;

}
                }
            default:
{
return	NULL;

}
            }
        case '8':
          switch (KR_keyword [8])
            {
            case 'z':
              switch (KR_keyword [7])
                {
                case 'c':
                  if (strncmp (KR_keyword, "/dev/sdcz8", 10) == 0)
                    {
{
return dev_storage + 1971;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'b':
                  if (strncmp (KR_keyword, "/dev/sdbz8", 10) == 0)
                    {
{
return dev_storage + 1555;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'a':
                  if (strncmp (KR_keyword, "/dev/sdaz8", 10) == 0)
                    {
{
return dev_storage + 1139;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                default:
{
return	NULL;

}
                }
            case 'y':
              switch (KR_keyword [7])
                {
                case 'c':
                  if (strncmp (KR_keyword, "/dev/sdcy8", 10) == 0)
                    {
{
return dev_storage + 1956;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'b':
                  if (strncmp (KR_keyword, "/dev/sdby8", 10) == 0)
                    {
{
return dev_storage + 1540;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'a':
                  if (strncmp (KR_keyword, "/dev/sday8", 10) == 0)
                    {
{
return dev_storage + 1124;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                default:
{
return	NULL;

}
                }
            case 'x':
              switch (KR_keyword [7])
                {
                case 'd':
                  if (strncmp (KR_keyword, "/dev/sddx8", 10) == 0)
                    {
{
return dev_storage + 2355;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'c':
                  if (strncmp (KR_keyword, "/dev/sdcx8", 10) == 0)
                    {
{
return dev_storage + 1941;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'b':
                  if (strncmp (KR_keyword, "/dev/sdbx8", 10) == 0)
                    {
{
return dev_storage + 1525;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'a':
                  if (strncmp (KR_keyword, "/dev/sdax8", 10) == 0)
                    {
{
return dev_storage + 1109;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                default:
{
return	NULL;

}
                }
            case 'w':
              switch (KR_keyword [7])
                {
                case 'd':
                  if (strncmp (KR_keyword, "/dev/sddw8", 10) == 0)
                    {
{
return dev_storage + 2340;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'c':
                  if (strncmp (KR_keyword, "/dev/sdcw8", 10) == 0)
                    {
{
return dev_storage + 1926;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'b':
                  if (strncmp (KR_keyword, "/dev/sdbw8", 10) == 0)
                    {
{
return dev_storage + 1510;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'a':
                  if (strncmp (KR_keyword, "/dev/sdaw8", 10) == 0)
                    {
{
return dev_storage + 1094;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                default:
{
return	NULL;

}
                }
            case 'v':
              switch (KR_keyword [7])
                {
                case 'd':
                  if (strncmp (KR_keyword, "/dev/sddv8", 10) == 0)
                    {
{
return dev_storage + 2325;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'c':
                  if (strncmp (KR_keyword, "/dev/sdcv8", 10) == 0)
                    {
{
return dev_storage + 1911;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'b':
                  if (strncmp (KR_keyword, "/dev/sdbv8", 10) == 0)
                    {
{
return dev_storage + 1495;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'a':
                  if (strncmp (KR_keyword, "/dev/sdav8", 10) == 0)
                    {
{
return dev_storage + 1079;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                default:
{
return	NULL;

}
                }
            case 'u':
              switch (KR_keyword [7])
                {
                case 'd':
                  if (strncmp (KR_keyword, "/dev/sddu8", 10) == 0)
                    {
{
return dev_storage + 2310;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'c':
                  if (strncmp (KR_keyword, "/dev/sdcu8", 10) == 0)
                    {
{
return dev_storage + 1896;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'b':
                  if (strncmp (KR_keyword, "/dev/sdbu8", 10) == 0)
                    {
{
return dev_storage + 1480;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'a':
                  if (strncmp (KR_keyword, "/dev/sdau8", 10) == 0)
                    {
{
return dev_storage + 1064;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                default:
{
return	NULL;

}
                }
            case 't':
              switch (KR_keyword [7])
                {
                case 'd':
                  if (strncmp (KR_keyword, "/dev/sddt8", 10) == 0)
                    {
{
return dev_storage + 2295;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'c':
                  if (strncmp (KR_keyword, "/dev/sdct8", 10) == 0)
                    {
{
return dev_storage + 1881;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'b':
                  if (strncmp (KR_keyword, "/dev/sdbt8", 10) == 0)
                    {
{
return dev_storage + 1465;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'a':
                  if (strncmp (KR_keyword, "/dev/sdat8", 10) == 0)
                    {
{
return dev_storage + 1049;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                default:
{
return	NULL;

}
                }
            case 's':
              switch (KR_keyword [7])
                {
                case 'n':
                  if (strncmp (KR_keyword, "/dev/cons8", 10) == 0)
                    {
{
return dev_storage + 28;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'd':
                  if (strncmp (KR_keyword, "/dev/sdds8", 10) == 0)
                    {
{
return dev_storage + 2280;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'c':
                  if (strncmp (KR_keyword, "/dev/sdcs8", 10) == 0)
                    {
{
return dev_storage + 1866;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'b':
                  if (strncmp (KR_keyword, "/dev/sdbs8", 10) == 0)
                    {
{
return dev_storage + 1450;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'a':
                  if (strncmp (KR_keyword, "/dev/sdas8", 10) == 0)
                    {
{
return dev_storage + 1034;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                default:
{
return	NULL;

}
                }
            case 'r':
              switch (KR_keyword [7])
                {
                case 'd':
                  if (strncmp (KR_keyword, "/dev/sddr8", 10) == 0)
                    {
{
return dev_storage + 2265;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'c':
                  if (strncmp (KR_keyword, "/dev/sdcr8", 10) == 0)
                    {
{
return dev_storage + 1851;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'b':
                  if (strncmp (KR_keyword, "/dev/sdbr8", 10) == 0)
                    {
{
return dev_storage + 1435;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'a':
                  if (strncmp (KR_keyword, "/dev/sdar8", 10) == 0)
                    {
{
return dev_storage + 1019;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                default:
{
return	NULL;

}
                }
            case 'q':
              switch (KR_keyword [7])
                {
                case 'd':
                  if (strncmp (KR_keyword, "/dev/sddq8", 10) == 0)
                    {
{
return dev_storage + 2250;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'c':
                  if (strncmp (KR_keyword, "/dev/sdcq8", 10) == 0)
                    {
{
return dev_storage + 1836;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'b':
                  if (strncmp (KR_keyword, "/dev/sdbq8", 10) == 0)
                    {
{
return dev_storage + 1420;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'a':
                  if (strncmp (KR_keyword, "/dev/sdaq8", 10) == 0)
                    {
{
return dev_storage + 1004;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                default:
{
return	NULL;

}
                }
            case 'p':
              switch (KR_keyword [7])
                {
                case 'd':
                  if (strncmp (KR_keyword, "/dev/sddp8", 10) == 0)
                    {
{
return dev_storage + 2235;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'c':
                  if (strncmp (KR_keyword, "/dev/sdcp8", 10) == 0)
                    {
{
return dev_storage + 1821;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'b':
                  if (strncmp (KR_keyword, "/dev/sdbp8", 10) == 0)
                    {
{
return dev_storage + 1405;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'a':
                  if (strncmp (KR_keyword, "/dev/sdap8", 10) == 0)
                    {
{
return dev_storage + 989;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                default:
{
return	NULL;

}
                }
            case 'o':
              switch (KR_keyword [7])
                {
                case 'd':
                  if (strncmp (KR_keyword, "/dev/sddo8", 10) == 0)
                    {
{
return dev_storage + 2220;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'c':
                  if (strncmp (KR_keyword, "/dev/sdco8", 10) == 0)
                    {
{
return dev_storage + 1806;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'b':
                  if (strncmp (KR_keyword, "/dev/sdbo8", 10) == 0)
                    {
{
return dev_storage + 1390;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'a':
                  if (strncmp (KR_keyword, "/dev/sdao8", 10) == 0)
                    {
{
return dev_storage + 974;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                default:
{
return	NULL;

}
                }
            case 'n':
              switch (KR_keyword [7])
                {
                case 'd':
                  if (strncmp (KR_keyword, "/dev/sddn8", 10) == 0)
                    {
{
return dev_storage + 2205;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'c':
                  if (strncmp (KR_keyword, "/dev/sdcn8", 10) == 0)
                    {
{
return dev_storage + 1791;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'b':
                  if (strncmp (KR_keyword, "/dev/sdbn8", 10) == 0)
                    {
{
return dev_storage + 1375;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'a':
                  if (strncmp (KR_keyword, "/dev/sdan8", 10) == 0)
                    {
{
return dev_storage + 959;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                default:
{
return	NULL;

}
                }
            case 'm':
              switch (KR_keyword [7])
                {
                case 'd':
                  if (strncmp (KR_keyword, "/dev/sddm8", 10) == 0)
                    {
{
return dev_storage + 2190;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'c':
                  if (strncmp (KR_keyword, "/dev/sdcm8", 10) == 0)
                    {
{
return dev_storage + 1776;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'b':
                  if (strncmp (KR_keyword, "/dev/sdbm8", 10) == 0)
                    {
{
return dev_storage + 1360;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'a':
                  if (strncmp (KR_keyword, "/dev/sdam8", 10) == 0)
                    {
{
return dev_storage + 944;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                default:
{
return	NULL;

}
                }
            case 'l':
              switch (KR_keyword [7])
                {
                case 'd':
                  if (strncmp (KR_keyword, "/dev/sddl8", 10) == 0)
                    {
{
return dev_storage + 2175;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'c':
                  if (strncmp (KR_keyword, "/dev/sdcl8", 10) == 0)
                    {
{
return dev_storage + 1761;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'b':
                  if (strncmp (KR_keyword, "/dev/sdbl8", 10) == 0)
                    {
{
return dev_storage + 1345;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'a':
                  if (strncmp (KR_keyword, "/dev/sdal8", 10) == 0)
                    {
{
return dev_storage + 929;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                default:
{
return	NULL;

}
                }
            case 'k':
              switch (KR_keyword [7])
                {
                case 'd':
                  if (strncmp (KR_keyword, "/dev/sddk8", 10) == 0)
                    {
{
return dev_storage + 2160;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'c':
                  if (strncmp (KR_keyword, "/dev/sdck8", 10) == 0)
                    {
{
return dev_storage + 1746;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'b':
                  if (strncmp (KR_keyword, "/dev/sdbk8", 10) == 0)
                    {
{
return dev_storage + 1330;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'a':
                  if (strncmp (KR_keyword, "/dev/sdak8", 10) == 0)
                    {
{
return dev_storage + 914;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                default:
{
return	NULL;

}
                }
            case 'j':
              switch (KR_keyword [7])
                {
                case 'd':
                  if (strncmp (KR_keyword, "/dev/sddj8", 10) == 0)
                    {
{
return dev_storage + 2145;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'c':
                  if (strncmp (KR_keyword, "/dev/sdcj8", 10) == 0)
                    {
{
return dev_storage + 1731;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'b':
                  if (strncmp (KR_keyword, "/dev/sdbj8", 10) == 0)
                    {
{
return dev_storage + 1315;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'a':
                  if (strncmp (KR_keyword, "/dev/sdaj8", 10) == 0)
                    {
{
return dev_storage + 899;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                default:
{
return	NULL;

}
                }
            case 'i':
              switch (KR_keyword [7])
                {
                case 'd':
                  if (strncmp (KR_keyword, "/dev/sddi8", 10) == 0)
                    {
{
return dev_storage + 2130;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'c':
                  if (strncmp (KR_keyword, "/dev/sdci8", 10) == 0)
                    {
{
return dev_storage + 1716;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'b':
                  if (strncmp (KR_keyword, "/dev/sdbi8", 10) == 0)
                    {
{
return dev_storage + 1300;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'a':
                  if (strncmp (KR_keyword, "/dev/sdai8", 10) == 0)
                    {
{
return dev_storage + 884;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                default:
{
return	NULL;

}
                }
            case 'h':
              switch (KR_keyword [7])
                {
                case 'd':
                  if (strncmp (KR_keyword, "/dev/sddh8", 10) == 0)
                    {
{
return dev_storage + 2115;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'c':
                  if (strncmp (KR_keyword, "/dev/sdch8", 10) == 0)
                    {
{
return dev_storage + 1701;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'b':
                  if (strncmp (KR_keyword, "/dev/sdbh8", 10) == 0)
                    {
{
return dev_storage + 1285;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'a':
                  if (strncmp (KR_keyword, "/dev/sdah8", 10) == 0)
                    {
{
return dev_storage + 869;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                default:
{
return	NULL;

}
                }
            case 'g':
              switch (KR_keyword [7])
                {
                case 'd':
                  if (strncmp (KR_keyword, "/dev/sddg8", 10) == 0)
                    {
{
return dev_storage + 2100;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'c':
                  if (strncmp (KR_keyword, "/dev/sdcg8", 10) == 0)
                    {
{
return dev_storage + 1686;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'b':
                  if (strncmp (KR_keyword, "/dev/sdbg8", 10) == 0)
                    {
{
return dev_storage + 1270;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'a':
                  if (strncmp (KR_keyword, "/dev/sdag8", 10) == 0)
                    {
{
return dev_storage + 854;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                default:
{
return	NULL;

}
                }
            case 'f':
              switch (KR_keyword [7])
                {
                case 'd':
                  if (strncmp (KR_keyword, "/dev/sddf8", 10) == 0)
                    {
{
return dev_storage + 2085;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'c':
                  if (strncmp (KR_keyword, "/dev/sdcf8", 10) == 0)
                    {
{
return dev_storage + 1671;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'b':
                  if (strncmp (KR_keyword, "/dev/sdbf8", 10) == 0)
                    {
{
return dev_storage + 1255;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'a':
                  if (strncmp (KR_keyword, "/dev/sdaf8", 10) == 0)
                    {
{
return dev_storage + 839;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                default:
{
return	NULL;

}
                }
            case 'e':
              switch (KR_keyword [7])
                {
                case 'd':
                  if (strncmp (KR_keyword, "/dev/sdde8", 10) == 0)
                    {
{
return dev_storage + 2070;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'c':
                  if (strncmp (KR_keyword, "/dev/sdce8", 10) == 0)
                    {
{
return dev_storage + 1656;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'b':
                  if (strncmp (KR_keyword, "/dev/sdbe8", 10) == 0)
                    {
{
return dev_storage + 1240;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'a':
                  if (strncmp (KR_keyword, "/dev/sdae8", 10) == 0)
                    {
{
return dev_storage + 824;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                default:
{
return	NULL;

}
                }
            case 'd':
              switch (KR_keyword [7])
                {
                case 'd':
                  if (strncmp (KR_keyword, "/dev/sddd8", 10) == 0)
                    {
{
return dev_storage + 2055;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'c':
                  if (strncmp (KR_keyword, "/dev/sdcd8", 10) == 0)
                    {
{
return dev_storage + 1641;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'b':
                  if (strncmp (KR_keyword, "/dev/sdbd8", 10) == 0)
                    {
{
return dev_storage + 1225;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'a':
                  if (strncmp (KR_keyword, "/dev/sdad8", 10) == 0)
                    {
{
return dev_storage + 809;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                default:
{
return	NULL;

}
                }
            case 'c':
              switch (KR_keyword [7])
                {
                case 'd':
                  if (strncmp (KR_keyword, "/dev/sddc8", 10) == 0)
                    {
{
return dev_storage + 2040;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'c':
                  if (strncmp (KR_keyword, "/dev/sdcc8", 10) == 0)
                    {
{
return dev_storage + 1626;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'b':
                  if (strncmp (KR_keyword, "/dev/sdbc8", 10) == 0)
                    {
{
return dev_storage + 1210;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'a':
                  if (strncmp (KR_keyword, "/dev/sdac8", 10) == 0)
                    {
{
return dev_storage + 794;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                default:
{
return	NULL;

}
                }
            case 'b':
              switch (KR_keyword [7])
                {
                case 'd':
                  if (strncmp (KR_keyword, "/dev/sddb8", 10) == 0)
                    {
{
return dev_storage + 2025;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'c':
                  if (strncmp (KR_keyword, "/dev/sdcb8", 10) == 0)
                    {
{
return dev_storage + 1611;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'b':
                  if (strncmp (KR_keyword, "/dev/sdbb8", 10) == 0)
                    {
{
return dev_storage + 1195;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'a':
                  if (strncmp (KR_keyword, "/dev/sdab8", 10) == 0)
                    {
{
return dev_storage + 779;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                default:
{
return	NULL;

}
                }
            case 'a':
              switch (KR_keyword [7])
                {
                case 'd':
                  if (strncmp (KR_keyword, "/dev/sdda8", 10) == 0)
                    {
{
return dev_storage + 2010;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'c':
                  if (strncmp (KR_keyword, "/dev/sdca8", 10) == 0)
                    {
{
return dev_storage + 1596;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'b':
                  if (strncmp (KR_keyword, "/dev/sdba8", 10) == 0)
                    {
{
return dev_storage + 1180;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'a':
                  if (strncmp (KR_keyword, "/dev/sdaa8", 10) == 0)
                    {
{
return dev_storage + 764;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                default:
{
return	NULL;

}
                }
            case 'S':
              if (strncmp (KR_keyword, "/dev/ttyS8", 10) == 0)
                {
{
return dev_storage + 2516;

}
                }
              else
                {
{
return	NULL;

}
                }
            case '9':
              if (strncmp (KR_keyword, "/dev/nst98", 10) == 0)
                {
{
return dev_storage + 202;

}
                }
              else
                {
{
return	NULL;

}
                }
            case '8':
              if (strncmp (KR_keyword, "/dev/nst88", 10) == 0)
                {
{
return dev_storage + 192;

}
                }
              else
                {
{
return	NULL;

}
                }
            case '7':
              if (strncmp (KR_keyword, "/dev/nst78", 10) == 0)
                {
{
return dev_storage + 182;

}
                }
              else
                {
{
return	NULL;

}
                }
            case '6':
              if (strncmp (KR_keyword, "/dev/nst68", 10) == 0)
                {
{
return dev_storage + 172;

}
                }
              else
                {
{
return	NULL;

}
                }
            case '5':
              switch (KR_keyword [5])
                {
                case 'p':
                  if (strncmp (KR_keyword, "/dev/pty58", 10) == 0)
                    {
{
return dev_storage + 292;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'n':
                  if (strncmp (KR_keyword, "/dev/nst58", 10) == 0)
                    {
{
return dev_storage + 162;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                default:
{
return	NULL;

}
                }
            case '4':
              switch (KR_keyword [5])
                {
                case 'p':
                  if (strncmp (KR_keyword, "/dev/pty48", 10) == 0)
                    {
{
return dev_storage + 282;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'n':
                  if (strncmp (KR_keyword, "/dev/nst48", 10) == 0)
                    {
{
return dev_storage + 152;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                default:
{
return	NULL;

}
                }
            case '3':
              switch (KR_keyword [5])
                {
                case 'p':
                  if (strncmp (KR_keyword, "/dev/pty38", 10) == 0)
                    {
{
return dev_storage + 272;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'n':
                  if (strncmp (KR_keyword, "/dev/nst38", 10) == 0)
                    {
{
return dev_storage + 142;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                default:
{
return	NULL;

}
                }
            case '2':
              switch (KR_keyword [5])
                {
                case 'p':
                  if (strncmp (KR_keyword, "/dev/pty28", 10) == 0)
                    {
{
return dev_storage + 262;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'n':
                  if (strncmp (KR_keyword, "/dev/nst28", 10) == 0)
                    {
{
return dev_storage + 132;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                default:
{
return	NULL;

}
                }
            case '1':
              switch (KR_keyword [5])
                {
                case 's':
                  if (strncmp (KR_keyword, "/dev/st118", 10) == 0)
                    {
{
return dev_storage + 2497;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'p':
                  if (strncmp (KR_keyword, "/dev/pty18", 10) == 0)
                    {
{
return dev_storage + 252;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'n':
                  if (strncmp (KR_keyword, "/dev/nst18", 10) == 0)
                    {
{
return dev_storage + 122;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                default:
{
return	NULL;

}
                }
            case '0':
              if (strncmp (KR_keyword, "/dev/st108", 10) == 0)
                {
{
return dev_storage + 2487;

}
                }
              else
                {
{
return	NULL;

}
                }
            default:
{
return	NULL;

}
            }
        case '7':
          switch (KR_keyword [8])
            {
            case 'z':
              switch (KR_keyword [7])
                {
                case 'c':
                  if (strncmp (KR_keyword, "/dev/sdcz7", 10) == 0)
                    {
{
return dev_storage + 1970;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'b':
                  if (strncmp (KR_keyword, "/dev/sdbz7", 10) == 0)
                    {
{
return dev_storage + 1554;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'a':
                  if (strncmp (KR_keyword, "/dev/sdaz7", 10) == 0)
                    {
{
return dev_storage + 1138;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                default:
{
return	NULL;

}
                }
            case 'y':
              switch (KR_keyword [7])
                {
                case 'c':
                  if (strncmp (KR_keyword, "/dev/sdcy7", 10) == 0)
                    {
{
return dev_storage + 1955;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'b':
                  if (strncmp (KR_keyword, "/dev/sdby7", 10) == 0)
                    {
{
return dev_storage + 1539;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'a':
                  if (strncmp (KR_keyword, "/dev/sday7", 10) == 0)
                    {
{
return dev_storage + 1123;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                default:
{
return	NULL;

}
                }
            case 'x':
              switch (KR_keyword [7])
                {
                case 'd':
                  if (strncmp (KR_keyword, "/dev/sddx7", 10) == 0)
                    {
{
return dev_storage + 2354;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'c':
                  if (strncmp (KR_keyword, "/dev/sdcx7", 10) == 0)
                    {
{
return dev_storage + 1940;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'b':
                  if (strncmp (KR_keyword, "/dev/sdbx7", 10) == 0)
                    {
{
return dev_storage + 1524;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'a':
                  if (strncmp (KR_keyword, "/dev/sdax7", 10) == 0)
                    {
{
return dev_storage + 1108;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                default:
{
return	NULL;

}
                }
            case 'w':
              switch (KR_keyword [7])
                {
                case 'd':
                  if (strncmp (KR_keyword, "/dev/sddw7", 10) == 0)
                    {
{
return dev_storage + 2339;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'c':
                  if (strncmp (KR_keyword, "/dev/sdcw7", 10) == 0)
                    {
{
return dev_storage + 1925;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'b':
                  if (strncmp (KR_keyword, "/dev/sdbw7", 10) == 0)
                    {
{
return dev_storage + 1509;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'a':
                  if (strncmp (KR_keyword, "/dev/sdaw7", 10) == 0)
                    {
{
return dev_storage + 1093;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                default:
{
return	NULL;

}
                }
            case 'v':
              switch (KR_keyword [7])
                {
                case 'd':
                  if (strncmp (KR_keyword, "/dev/sddv7", 10) == 0)
                    {
{
return dev_storage + 2324;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'c':
                  if (strncmp (KR_keyword, "/dev/sdcv7", 10) == 0)
                    {
{
return dev_storage + 1910;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'b':
                  if (strncmp (KR_keyword, "/dev/sdbv7", 10) == 0)
                    {
{
return dev_storage + 1494;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'a':
                  if (strncmp (KR_keyword, "/dev/sdav7", 10) == 0)
                    {
{
return dev_storage + 1078;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                default:
{
return	NULL;

}
                }
            case 'u':
              switch (KR_keyword [7])
                {
                case 'd':
                  if (strncmp (KR_keyword, "/dev/sddu7", 10) == 0)
                    {
{
return dev_storage + 2309;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'c':
                  if (strncmp (KR_keyword, "/dev/sdcu7", 10) == 0)
                    {
{
return dev_storage + 1895;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'b':
                  if (strncmp (KR_keyword, "/dev/sdbu7", 10) == 0)
                    {
{
return dev_storage + 1479;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'a':
                  if (strncmp (KR_keyword, "/dev/sdau7", 10) == 0)
                    {
{
return dev_storage + 1063;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                default:
{
return	NULL;

}
                }
            case 't':
              switch (KR_keyword [7])
                {
                case 'd':
                  if (strncmp (KR_keyword, "/dev/sddt7", 10) == 0)
                    {
{
return dev_storage + 2294;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'c':
                  if (strncmp (KR_keyword, "/dev/sdct7", 10) == 0)
                    {
{
return dev_storage + 1880;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'b':
                  if (strncmp (KR_keyword, "/dev/sdbt7", 10) == 0)
                    {
{
return dev_storage + 1464;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'a':
                  if (strncmp (KR_keyword, "/dev/sdat7", 10) == 0)
                    {
{
return dev_storage + 1048;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                default:
{
return	NULL;

}
                }
            case 's':
              switch (KR_keyword [7])
                {
                case 'n':
                  if (strncmp (KR_keyword, "/dev/cons7", 10) == 0)
                    {
{
return dev_storage + 27;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'd':
                  if (strncmp (KR_keyword, "/dev/sdds7", 10) == 0)
                    {
{
return dev_storage + 2279;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'c':
                  if (strncmp (KR_keyword, "/dev/sdcs7", 10) == 0)
                    {
{
return dev_storage + 1865;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'b':
                  if (strncmp (KR_keyword, "/dev/sdbs7", 10) == 0)
                    {
{
return dev_storage + 1449;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'a':
                  if (strncmp (KR_keyword, "/dev/sdas7", 10) == 0)
                    {
{
return dev_storage + 1033;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                default:
{
return	NULL;

}
                }
            case 'r':
              switch (KR_keyword [7])
                {
                case 'd':
                  if (strncmp (KR_keyword, "/dev/sddr7", 10) == 0)
                    {
{
return dev_storage + 2264;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'c':
                  if (strncmp (KR_keyword, "/dev/sdcr7", 10) == 0)
                    {
{
return dev_storage + 1850;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'b':
                  if (strncmp (KR_keyword, "/dev/sdbr7", 10) == 0)
                    {
{
return dev_storage + 1434;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'a':
                  if (strncmp (KR_keyword, "/dev/sdar7", 10) == 0)
                    {
{
return dev_storage + 1018;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                default:
{
return	NULL;

}
                }
            case 'q':
              switch (KR_keyword [7])
                {
                case 'd':
                  if (strncmp (KR_keyword, "/dev/sddq7", 10) == 0)
                    {
{
return dev_storage + 2249;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'c':
                  if (strncmp (KR_keyword, "/dev/sdcq7", 10) == 0)
                    {
{
return dev_storage + 1835;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'b':
                  if (strncmp (KR_keyword, "/dev/sdbq7", 10) == 0)
                    {
{
return dev_storage + 1419;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'a':
                  if (strncmp (KR_keyword, "/dev/sdaq7", 10) == 0)
                    {
{
return dev_storage + 1003;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                default:
{
return	NULL;

}
                }
            case 'p':
              switch (KR_keyword [7])
                {
                case 'd':
                  if (strncmp (KR_keyword, "/dev/sddp7", 10) == 0)
                    {
{
return dev_storage + 2234;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'c':
                  if (strncmp (KR_keyword, "/dev/sdcp7", 10) == 0)
                    {
{
return dev_storage + 1820;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'b':
                  if (strncmp (KR_keyword, "/dev/sdbp7", 10) == 0)
                    {
{
return dev_storage + 1404;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'a':
                  if (strncmp (KR_keyword, "/dev/sdap7", 10) == 0)
                    {
{
return dev_storage + 988;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                default:
{
return	NULL;

}
                }
            case 'o':
              switch (KR_keyword [7])
                {
                case 'd':
                  if (strncmp (KR_keyword, "/dev/sddo7", 10) == 0)
                    {
{
return dev_storage + 2219;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'c':
                  if (strncmp (KR_keyword, "/dev/sdco7", 10) == 0)
                    {
{
return dev_storage + 1805;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'b':
                  if (strncmp (KR_keyword, "/dev/sdbo7", 10) == 0)
                    {
{
return dev_storage + 1389;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'a':
                  if (strncmp (KR_keyword, "/dev/sdao7", 10) == 0)
                    {
{
return dev_storage + 973;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                default:
{
return	NULL;

}
                }
            case 'n':
              switch (KR_keyword [7])
                {
                case 'd':
                  if (strncmp (KR_keyword, "/dev/sddn7", 10) == 0)
                    {
{
return dev_storage + 2204;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'c':
                  if (strncmp (KR_keyword, "/dev/sdcn7", 10) == 0)
                    {
{
return dev_storage + 1790;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'b':
                  if (strncmp (KR_keyword, "/dev/sdbn7", 10) == 0)
                    {
{
return dev_storage + 1374;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'a':
                  if (strncmp (KR_keyword, "/dev/sdan7", 10) == 0)
                    {
{
return dev_storage + 958;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                default:
{
return	NULL;

}
                }
            case 'm':
              switch (KR_keyword [7])
                {
                case 'd':
                  if (strncmp (KR_keyword, "/dev/sddm7", 10) == 0)
                    {
{
return dev_storage + 2189;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'c':
                  if (strncmp (KR_keyword, "/dev/sdcm7", 10) == 0)
                    {
{
return dev_storage + 1775;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'b':
                  if (strncmp (KR_keyword, "/dev/sdbm7", 10) == 0)
                    {
{
return dev_storage + 1359;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'a':
                  if (strncmp (KR_keyword, "/dev/sdam7", 10) == 0)
                    {
{
return dev_storage + 943;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                default:
{
return	NULL;

}
                }
            case 'l':
              switch (KR_keyword [7])
                {
                case 'd':
                  if (strncmp (KR_keyword, "/dev/sddl7", 10) == 0)
                    {
{
return dev_storage + 2174;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'c':
                  if (strncmp (KR_keyword, "/dev/sdcl7", 10) == 0)
                    {
{
return dev_storage + 1760;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'b':
                  if (strncmp (KR_keyword, "/dev/sdbl7", 10) == 0)
                    {
{
return dev_storage + 1344;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'a':
                  if (strncmp (KR_keyword, "/dev/sdal7", 10) == 0)
                    {
{
return dev_storage + 928;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                default:
{
return	NULL;

}
                }
            case 'k':
              switch (KR_keyword [7])
                {
                case 'd':
                  if (strncmp (KR_keyword, "/dev/sddk7", 10) == 0)
                    {
{
return dev_storage + 2159;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'c':
                  if (strncmp (KR_keyword, "/dev/sdck7", 10) == 0)
                    {
{
return dev_storage + 1745;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'b':
                  if (strncmp (KR_keyword, "/dev/sdbk7", 10) == 0)
                    {
{
return dev_storage + 1329;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'a':
                  if (strncmp (KR_keyword, "/dev/sdak7", 10) == 0)
                    {
{
return dev_storage + 913;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                default:
{
return	NULL;

}
                }
            case 'j':
              switch (KR_keyword [7])
                {
                case 'd':
                  if (strncmp (KR_keyword, "/dev/sddj7", 10) == 0)
                    {
{
return dev_storage + 2144;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'c':
                  if (strncmp (KR_keyword, "/dev/sdcj7", 10) == 0)
                    {
{
return dev_storage + 1730;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'b':
                  if (strncmp (KR_keyword, "/dev/sdbj7", 10) == 0)
                    {
{
return dev_storage + 1314;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'a':
                  if (strncmp (KR_keyword, "/dev/sdaj7", 10) == 0)
                    {
{
return dev_storage + 898;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                default:
{
return	NULL;

}
                }
            case 'i':
              switch (KR_keyword [7])
                {
                case 'd':
                  if (strncmp (KR_keyword, "/dev/sddi7", 10) == 0)
                    {
{
return dev_storage + 2129;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'c':
                  if (strncmp (KR_keyword, "/dev/sdci7", 10) == 0)
                    {
{
return dev_storage + 1715;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'b':
                  if (strncmp (KR_keyword, "/dev/sdbi7", 10) == 0)
                    {
{
return dev_storage + 1299;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'a':
                  if (strncmp (KR_keyword, "/dev/sdai7", 10) == 0)
                    {
{
return dev_storage + 883;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                default:
{
return	NULL;

}
                }
            case 'h':
              switch (KR_keyword [7])
                {
                case 'd':
                  if (strncmp (KR_keyword, "/dev/sddh7", 10) == 0)
                    {
{
return dev_storage + 2114;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'c':
                  if (strncmp (KR_keyword, "/dev/sdch7", 10) == 0)
                    {
{
return dev_storage + 1700;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'b':
                  if (strncmp (KR_keyword, "/dev/sdbh7", 10) == 0)
                    {
{
return dev_storage + 1284;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'a':
                  if (strncmp (KR_keyword, "/dev/sdah7", 10) == 0)
                    {
{
return dev_storage + 868;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                default:
{
return	NULL;

}
                }
            case 'g':
              switch (KR_keyword [7])
                {
                case 'd':
                  if (strncmp (KR_keyword, "/dev/sddg7", 10) == 0)
                    {
{
return dev_storage + 2099;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'c':
                  if (strncmp (KR_keyword, "/dev/sdcg7", 10) == 0)
                    {
{
return dev_storage + 1685;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'b':
                  if (strncmp (KR_keyword, "/dev/sdbg7", 10) == 0)
                    {
{
return dev_storage + 1269;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'a':
                  if (strncmp (KR_keyword, "/dev/sdag7", 10) == 0)
                    {
{
return dev_storage + 853;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                default:
{
return	NULL;

}
                }
            case 'f':
              switch (KR_keyword [7])
                {
                case 'd':
                  if (strncmp (KR_keyword, "/dev/sddf7", 10) == 0)
                    {
{
return dev_storage + 2084;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'c':
                  if (strncmp (KR_keyword, "/dev/sdcf7", 10) == 0)
                    {
{
return dev_storage + 1670;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'b':
                  if (strncmp (KR_keyword, "/dev/sdbf7", 10) == 0)
                    {
{
return dev_storage + 1254;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'a':
                  if (strncmp (KR_keyword, "/dev/sdaf7", 10) == 0)
                    {
{
return dev_storage + 838;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                default:
{
return	NULL;

}
                }
            case 'e':
              switch (KR_keyword [7])
                {
                case 'd':
                  if (strncmp (KR_keyword, "/dev/sdde7", 10) == 0)
                    {
{
return dev_storage + 2069;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'c':
                  if (strncmp (KR_keyword, "/dev/sdce7", 10) == 0)
                    {
{
return dev_storage + 1655;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'b':
                  if (strncmp (KR_keyword, "/dev/sdbe7", 10) == 0)
                    {
{
return dev_storage + 1239;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'a':
                  if (strncmp (KR_keyword, "/dev/sdae7", 10) == 0)
                    {
{
return dev_storage + 823;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                default:
{
return	NULL;

}
                }
            case 'd':
              switch (KR_keyword [7])
                {
                case 'd':
                  if (strncmp (KR_keyword, "/dev/sddd7", 10) == 0)
                    {
{
return dev_storage + 2054;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'c':
                  if (strncmp (KR_keyword, "/dev/sdcd7", 10) == 0)
                    {
{
return dev_storage + 1640;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'b':
                  if (strncmp (KR_keyword, "/dev/sdbd7", 10) == 0)
                    {
{
return dev_storage + 1224;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'a':
                  if (strncmp (KR_keyword, "/dev/sdad7", 10) == 0)
                    {
{
return dev_storage + 808;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                default:
{
return	NULL;

}
                }
            case 'c':
              switch (KR_keyword [7])
                {
                case 'd':
                  if (strncmp (KR_keyword, "/dev/sddc7", 10) == 0)
                    {
{
return dev_storage + 2039;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'c':
                  if (strncmp (KR_keyword, "/dev/sdcc7", 10) == 0)
                    {
{
return dev_storage + 1625;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'b':
                  if (strncmp (KR_keyword, "/dev/sdbc7", 10) == 0)
                    {
{
return dev_storage + 1209;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'a':
                  if (strncmp (KR_keyword, "/dev/sdac7", 10) == 0)
                    {
{
return dev_storage + 793;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                default:
{
return	NULL;

}
                }
            case 'b':
              switch (KR_keyword [7])
                {
                case 'd':
                  if (strncmp (KR_keyword, "/dev/sddb7", 10) == 0)
                    {
{
return dev_storage + 2024;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'c':
                  if (strncmp (KR_keyword, "/dev/sdcb7", 10) == 0)
                    {
{
return dev_storage + 1610;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'b':
                  if (strncmp (KR_keyword, "/dev/sdbb7", 10) == 0)
                    {
{
return dev_storage + 1194;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'a':
                  if (strncmp (KR_keyword, "/dev/sdab7", 10) == 0)
                    {
{
return dev_storage + 778;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                default:
{
return	NULL;

}
                }
            case 'a':
              switch (KR_keyword [7])
                {
                case 'd':
                  if (strncmp (KR_keyword, "/dev/sdda7", 10) == 0)
                    {
{
return dev_storage + 2009;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'c':
                  if (strncmp (KR_keyword, "/dev/sdca7", 10) == 0)
                    {
{
return dev_storage + 1595;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'b':
                  if (strncmp (KR_keyword, "/dev/sdba7", 10) == 0)
                    {
{
return dev_storage + 1179;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'a':
                  if (strncmp (KR_keyword, "/dev/sdaa7", 10) == 0)
                    {
{
return dev_storage + 763;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                default:
{
return	NULL;

}
                }
            case 'S':
              if (strncmp (KR_keyword, "/dev/ttyS7", 10) == 0)
                {
{
return dev_storage + 2515;

}
                }
              else
                {
{
return	NULL;

}
                }
            case '9':
              if (strncmp (KR_keyword, "/dev/nst97", 10) == 0)
                {
{
return dev_storage + 201;

}
                }
              else
                {
{
return	NULL;

}
                }
            case '8':
              if (strncmp (KR_keyword, "/dev/nst87", 10) == 0)
                {
{
return dev_storage + 191;

}
                }
              else
                {
{
return	NULL;

}
                }
            case '7':
              if (strncmp (KR_keyword, "/dev/nst77", 10) == 0)
                {
{
return dev_storage + 181;

}
                }
              else
                {
{
return	NULL;

}
                }
            case '6':
              if (strncmp (KR_keyword, "/dev/nst67", 10) == 0)
                {
{
return dev_storage + 171;

}
                }
              else
                {
{
return	NULL;

}
                }
            case '5':
              switch (KR_keyword [5])
                {
                case 'p':
                  if (strncmp (KR_keyword, "/dev/pty57", 10) == 0)
                    {
{
return dev_storage + 291;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'n':
                  if (strncmp (KR_keyword, "/dev/nst57", 10) == 0)
                    {
{
return dev_storage + 161;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                default:
{
return	NULL;

}
                }
            case '4':
              switch (KR_keyword [5])
                {
                case 'p':
                  if (strncmp (KR_keyword, "/dev/pty47", 10) == 0)
                    {
{
return dev_storage + 281;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'n':
                  if (strncmp (KR_keyword, "/dev/nst47", 10) == 0)
                    {
{
return dev_storage + 151;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                default:
{
return	NULL;

}
                }
            case '3':
              switch (KR_keyword [5])
                {
                case 'p':
                  if (strncmp (KR_keyword, "/dev/pty37", 10) == 0)
                    {
{
return dev_storage + 271;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'n':
                  if (strncmp (KR_keyword, "/dev/nst37", 10) == 0)
                    {
{
return dev_storage + 141;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                default:
{
return	NULL;

}
                }
            case '2':
              switch (KR_keyword [5])
                {
                case 's':
                  if (strncmp (KR_keyword, "/dev/st127", 10) == 0)
                    {
{
return dev_storage + 2506;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'p':
                  if (strncmp (KR_keyword, "/dev/pty27", 10) == 0)
                    {
{
return dev_storage + 261;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'n':
                  if (strncmp (KR_keyword, "/dev/nst27", 10) == 0)
                    {
{
return dev_storage + 131;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                default:
{
return	NULL;

}
                }
            case '1':
              switch (KR_keyword [5])
                {
                case 's':
                  if (strncmp (KR_keyword, "/dev/st117", 10) == 0)
                    {
{
return dev_storage + 2496;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'p':
                  if (strncmp (KR_keyword, "/dev/pty17", 10) == 0)
                    {
{
return dev_storage + 251;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'n':
                  if (strncmp (KR_keyword, "/dev/nst17", 10) == 0)
                    {
{
return dev_storage + 121;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                default:
{
return	NULL;

}
                }
            case '0':
              if (strncmp (KR_keyword, "/dev/st107", 10) == 0)
                {
{
return dev_storage + 2486;

}
                }
              else
                {
{
return	NULL;

}
                }
            default:
{
return	NULL;

}
            }
        case '6':
          switch (KR_keyword [8])
            {
            case 'z':
              switch (KR_keyword [7])
                {
                case 'c':
                  if (strncmp (KR_keyword, "/dev/sdcz6", 10) == 0)
                    {
{
return dev_storage + 1969;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'b':
                  if (strncmp (KR_keyword, "/dev/sdbz6", 10) == 0)
                    {
{
return dev_storage + 1553;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'a':
                  if (strncmp (KR_keyword, "/dev/sdaz6", 10) == 0)
                    {
{
return dev_storage + 1137;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                default:
{
return	NULL;

}
                }
            case 'y':
              switch (KR_keyword [7])
                {
                case 'c':
                  if (strncmp (KR_keyword, "/dev/sdcy6", 10) == 0)
                    {
{
return dev_storage + 1954;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'b':
                  if (strncmp (KR_keyword, "/dev/sdby6", 10) == 0)
                    {
{
return dev_storage + 1538;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'a':
                  if (strncmp (KR_keyword, "/dev/sday6", 10) == 0)
                    {
{
return dev_storage + 1122;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                default:
{
return	NULL;

}
                }
            case 'x':
              switch (KR_keyword [7])
                {
                case 'd':
                  if (strncmp (KR_keyword, "/dev/sddx6", 10) == 0)
                    {
{
return dev_storage + 2353;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'c':
                  if (strncmp (KR_keyword, "/dev/sdcx6", 10) == 0)
                    {
{
return dev_storage + 1939;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'b':
                  if (strncmp (KR_keyword, "/dev/sdbx6", 10) == 0)
                    {
{
return dev_storage + 1523;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'a':
                  if (strncmp (KR_keyword, "/dev/sdax6", 10) == 0)
                    {
{
return dev_storage + 1107;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                default:
{
return	NULL;

}
                }
            case 'w':
              switch (KR_keyword [7])
                {
                case 'd':
                  if (strncmp (KR_keyword, "/dev/sddw6", 10) == 0)
                    {
{
return dev_storage + 2338;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'c':
                  if (strncmp (KR_keyword, "/dev/sdcw6", 10) == 0)
                    {
{
return dev_storage + 1924;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'b':
                  if (strncmp (KR_keyword, "/dev/sdbw6", 10) == 0)
                    {
{
return dev_storage + 1508;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'a':
                  if (strncmp (KR_keyword, "/dev/sdaw6", 10) == 0)
                    {
{
return dev_storage + 1092;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                default:
{
return	NULL;

}
                }
            case 'v':
              switch (KR_keyword [7])
                {
                case 'd':
                  if (strncmp (KR_keyword, "/dev/sddv6", 10) == 0)
                    {
{
return dev_storage + 2323;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'c':
                  if (strncmp (KR_keyword, "/dev/sdcv6", 10) == 0)
                    {
{
return dev_storage + 1909;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'b':
                  if (strncmp (KR_keyword, "/dev/sdbv6", 10) == 0)
                    {
{
return dev_storage + 1493;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'a':
                  if (strncmp (KR_keyword, "/dev/sdav6", 10) == 0)
                    {
{
return dev_storage + 1077;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                default:
{
return	NULL;

}
                }
            case 'u':
              switch (KR_keyword [7])
                {
                case 'd':
                  if (strncmp (KR_keyword, "/dev/sddu6", 10) == 0)
                    {
{
return dev_storage + 2308;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'c':
                  if (strncmp (KR_keyword, "/dev/sdcu6", 10) == 0)
                    {
{
return dev_storage + 1894;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'b':
                  if (strncmp (KR_keyword, "/dev/sdbu6", 10) == 0)
                    {
{
return dev_storage + 1478;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'a':
                  if (strncmp (KR_keyword, "/dev/sdau6", 10) == 0)
                    {
{
return dev_storage + 1062;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                default:
{
return	NULL;

}
                }
            case 't':
              switch (KR_keyword [7])
                {
                case 'd':
                  if (strncmp (KR_keyword, "/dev/sddt6", 10) == 0)
                    {
{
return dev_storage + 2293;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'c':
                  if (strncmp (KR_keyword, "/dev/sdct6", 10) == 0)
                    {
{
return dev_storage + 1879;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'b':
                  if (strncmp (KR_keyword, "/dev/sdbt6", 10) == 0)
                    {
{
return dev_storage + 1463;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'a':
                  if (strncmp (KR_keyword, "/dev/sdat6", 10) == 0)
                    {
{
return dev_storage + 1047;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                default:
{
return	NULL;

}
                }
            case 's':
              switch (KR_keyword [7])
                {
                case 'n':
                  if (strncmp (KR_keyword, "/dev/cons6", 10) == 0)
                    {
{
return dev_storage + 26;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'd':
                  if (strncmp (KR_keyword, "/dev/sdds6", 10) == 0)
                    {
{
return dev_storage + 2278;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'c':
                  if (strncmp (KR_keyword, "/dev/sdcs6", 10) == 0)
                    {
{
return dev_storage + 1864;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'b':
                  if (strncmp (KR_keyword, "/dev/sdbs6", 10) == 0)
                    {
{
return dev_storage + 1448;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'a':
                  if (strncmp (KR_keyword, "/dev/sdas6", 10) == 0)
                    {
{
return dev_storage + 1032;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                default:
{
return	NULL;

}
                }
            case 'r':
              switch (KR_keyword [7])
                {
                case 'd':
                  if (strncmp (KR_keyword, "/dev/sddr6", 10) == 0)
                    {
{
return dev_storage + 2263;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'c':
                  if (strncmp (KR_keyword, "/dev/sdcr6", 10) == 0)
                    {
{
return dev_storage + 1849;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'b':
                  if (strncmp (KR_keyword, "/dev/sdbr6", 10) == 0)
                    {
{
return dev_storage + 1433;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'a':
                  if (strncmp (KR_keyword, "/dev/sdar6", 10) == 0)
                    {
{
return dev_storage + 1017;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                default:
{
return	NULL;

}
                }
            case 'q':
              switch (KR_keyword [7])
                {
                case 'd':
                  if (strncmp (KR_keyword, "/dev/sddq6", 10) == 0)
                    {
{
return dev_storage + 2248;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'c':
                  if (strncmp (KR_keyword, "/dev/sdcq6", 10) == 0)
                    {
{
return dev_storage + 1834;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'b':
                  if (strncmp (KR_keyword, "/dev/sdbq6", 10) == 0)
                    {
{
return dev_storage + 1418;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'a':
                  if (strncmp (KR_keyword, "/dev/sdaq6", 10) == 0)
                    {
{
return dev_storage + 1002;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                default:
{
return	NULL;

}
                }
            case 'p':
              switch (KR_keyword [7])
                {
                case 'd':
                  if (strncmp (KR_keyword, "/dev/sddp6", 10) == 0)
                    {
{
return dev_storage + 2233;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'c':
                  if (strncmp (KR_keyword, "/dev/sdcp6", 10) == 0)
                    {
{
return dev_storage + 1819;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'b':
                  if (strncmp (KR_keyword, "/dev/sdbp6", 10) == 0)
                    {
{
return dev_storage + 1403;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'a':
                  if (strncmp (KR_keyword, "/dev/sdap6", 10) == 0)
                    {
{
return dev_storage + 987;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                default:
{
return	NULL;

}
                }
            case 'o':
              switch (KR_keyword [7])
                {
                case 'd':
                  if (strncmp (KR_keyword, "/dev/sddo6", 10) == 0)
                    {
{
return dev_storage + 2218;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'c':
                  if (strncmp (KR_keyword, "/dev/sdco6", 10) == 0)
                    {
{
return dev_storage + 1804;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'b':
                  if (strncmp (KR_keyword, "/dev/sdbo6", 10) == 0)
                    {
{
return dev_storage + 1388;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'a':
                  if (strncmp (KR_keyword, "/dev/sdao6", 10) == 0)
                    {
{
return dev_storage + 972;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                default:
{
return	NULL;

}
                }
            case 'n':
              switch (KR_keyword [7])
                {
                case 'd':
                  if (strncmp (KR_keyword, "/dev/sddn6", 10) == 0)
                    {
{
return dev_storage + 2203;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'c':
                  if (strncmp (KR_keyword, "/dev/sdcn6", 10) == 0)
                    {
{
return dev_storage + 1789;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'b':
                  if (strncmp (KR_keyword, "/dev/sdbn6", 10) == 0)
                    {
{
return dev_storage + 1373;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'a':
                  if (strncmp (KR_keyword, "/dev/sdan6", 10) == 0)
                    {
{
return dev_storage + 957;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                default:
{
return	NULL;

}
                }
            case 'm':
              switch (KR_keyword [7])
                {
                case 'd':
                  if (strncmp (KR_keyword, "/dev/sddm6", 10) == 0)
                    {
{
return dev_storage + 2188;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'c':
                  if (strncmp (KR_keyword, "/dev/sdcm6", 10) == 0)
                    {
{
return dev_storage + 1774;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'b':
                  if (strncmp (KR_keyword, "/dev/sdbm6", 10) == 0)
                    {
{
return dev_storage + 1358;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'a':
                  if (strncmp (KR_keyword, "/dev/sdam6", 10) == 0)
                    {
{
return dev_storage + 942;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                default:
{
return	NULL;

}
                }
            case 'l':
              switch (KR_keyword [7])
                {
                case 'd':
                  if (strncmp (KR_keyword, "/dev/sddl6", 10) == 0)
                    {
{
return dev_storage + 2173;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'c':
                  if (strncmp (KR_keyword, "/dev/sdcl6", 10) == 0)
                    {
{
return dev_storage + 1759;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'b':
                  if (strncmp (KR_keyword, "/dev/sdbl6", 10) == 0)
                    {
{
return dev_storage + 1343;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'a':
                  if (strncmp (KR_keyword, "/dev/sdal6", 10) == 0)
                    {
{
return dev_storage + 927;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                default:
{
return	NULL;

}
                }
            case 'k':
              switch (KR_keyword [7])
                {
                case 'd':
                  if (strncmp (KR_keyword, "/dev/sddk6", 10) == 0)
                    {
{
return dev_storage + 2158;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'c':
                  if (strncmp (KR_keyword, "/dev/sdck6", 10) == 0)
                    {
{
return dev_storage + 1744;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'b':
                  if (strncmp (KR_keyword, "/dev/sdbk6", 10) == 0)
                    {
{
return dev_storage + 1328;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'a':
                  if (strncmp (KR_keyword, "/dev/sdak6", 10) == 0)
                    {
{
return dev_storage + 912;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                default:
{
return	NULL;

}
                }
            case 'j':
              switch (KR_keyword [7])
                {
                case 'd':
                  if (strncmp (KR_keyword, "/dev/sddj6", 10) == 0)
                    {
{
return dev_storage + 2143;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'c':
                  if (strncmp (KR_keyword, "/dev/sdcj6", 10) == 0)
                    {
{
return dev_storage + 1729;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'b':
                  if (strncmp (KR_keyword, "/dev/sdbj6", 10) == 0)
                    {
{
return dev_storage + 1313;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'a':
                  if (strncmp (KR_keyword, "/dev/sdaj6", 10) == 0)
                    {
{
return dev_storage + 897;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                default:
{
return	NULL;

}
                }
            case 'i':
              switch (KR_keyword [7])
                {
                case 'd':
                  if (strncmp (KR_keyword, "/dev/sddi6", 10) == 0)
                    {
{
return dev_storage + 2128;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'c':
                  if (strncmp (KR_keyword, "/dev/sdci6", 10) == 0)
                    {
{
return dev_storage + 1714;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'b':
                  if (strncmp (KR_keyword, "/dev/sdbi6", 10) == 0)
                    {
{
return dev_storage + 1298;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'a':
                  if (strncmp (KR_keyword, "/dev/sdai6", 10) == 0)
                    {
{
return dev_storage + 882;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                default:
{
return	NULL;

}
                }
            case 'h':
              switch (KR_keyword [7])
                {
                case 'd':
                  if (strncmp (KR_keyword, "/dev/sddh6", 10) == 0)
                    {
{
return dev_storage + 2113;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'c':
                  if (strncmp (KR_keyword, "/dev/sdch6", 10) == 0)
                    {
{
return dev_storage + 1699;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'b':
                  if (strncmp (KR_keyword, "/dev/sdbh6", 10) == 0)
                    {
{
return dev_storage + 1283;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'a':
                  if (strncmp (KR_keyword, "/dev/sdah6", 10) == 0)
                    {
{
return dev_storage + 867;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                default:
{
return	NULL;

}
                }
            case 'g':
              switch (KR_keyword [7])
                {
                case 'd':
                  if (strncmp (KR_keyword, "/dev/sddg6", 10) == 0)
                    {
{
return dev_storage + 2098;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'c':
                  if (strncmp (KR_keyword, "/dev/sdcg6", 10) == 0)
                    {
{
return dev_storage + 1684;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'b':
                  if (strncmp (KR_keyword, "/dev/sdbg6", 10) == 0)
                    {
{
return dev_storage + 1268;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'a':
                  if (strncmp (KR_keyword, "/dev/sdag6", 10) == 0)
                    {
{
return dev_storage + 852;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                default:
{
return	NULL;

}
                }
            case 'f':
              switch (KR_keyword [7])
                {
                case 'd':
                  if (strncmp (KR_keyword, "/dev/sddf6", 10) == 0)
                    {
{
return dev_storage + 2083;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'c':
                  if (strncmp (KR_keyword, "/dev/sdcf6", 10) == 0)
                    {
{
return dev_storage + 1669;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'b':
                  if (strncmp (KR_keyword, "/dev/sdbf6", 10) == 0)
                    {
{
return dev_storage + 1253;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'a':
                  if (strncmp (KR_keyword, "/dev/sdaf6", 10) == 0)
                    {
{
return dev_storage + 837;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                default:
{
return	NULL;

}
                }
            case 'e':
              switch (KR_keyword [7])
                {
                case 'd':
                  if (strncmp (KR_keyword, "/dev/sdde6", 10) == 0)
                    {
{
return dev_storage + 2068;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'c':
                  if (strncmp (KR_keyword, "/dev/sdce6", 10) == 0)
                    {
{
return dev_storage + 1654;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'b':
                  if (strncmp (KR_keyword, "/dev/sdbe6", 10) == 0)
                    {
{
return dev_storage + 1238;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'a':
                  if (strncmp (KR_keyword, "/dev/sdae6", 10) == 0)
                    {
{
return dev_storage + 822;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                default:
{
return	NULL;

}
                }
            case 'd':
              switch (KR_keyword [7])
                {
                case 'd':
                  if (strncmp (KR_keyword, "/dev/sddd6", 10) == 0)
                    {
{
return dev_storage + 2053;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'c':
                  if (strncmp (KR_keyword, "/dev/sdcd6", 10) == 0)
                    {
{
return dev_storage + 1639;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'b':
                  if (strncmp (KR_keyword, "/dev/sdbd6", 10) == 0)
                    {
{
return dev_storage + 1223;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'a':
                  if (strncmp (KR_keyword, "/dev/sdad6", 10) == 0)
                    {
{
return dev_storage + 807;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                default:
{
return	NULL;

}
                }
            case 'c':
              switch (KR_keyword [7])
                {
                case 'd':
                  if (strncmp (KR_keyword, "/dev/sddc6", 10) == 0)
                    {
{
return dev_storage + 2038;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'c':
                  if (strncmp (KR_keyword, "/dev/sdcc6", 10) == 0)
                    {
{
return dev_storage + 1624;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'b':
                  if (strncmp (KR_keyword, "/dev/sdbc6", 10) == 0)
                    {
{
return dev_storage + 1208;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'a':
                  if (strncmp (KR_keyword, "/dev/sdac6", 10) == 0)
                    {
{
return dev_storage + 792;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                default:
{
return	NULL;

}
                }
            case 'b':
              switch (KR_keyword [7])
                {
                case 'd':
                  if (strncmp (KR_keyword, "/dev/sddb6", 10) == 0)
                    {
{
return dev_storage + 2023;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'c':
                  if (strncmp (KR_keyword, "/dev/sdcb6", 10) == 0)
                    {
{
return dev_storage + 1609;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'b':
                  if (strncmp (KR_keyword, "/dev/sdbb6", 10) == 0)
                    {
{
return dev_storage + 1193;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'a':
                  if (strncmp (KR_keyword, "/dev/sdab6", 10) == 0)
                    {
{
return dev_storage + 777;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                default:
{
return	NULL;

}
                }
            case 'a':
              switch (KR_keyword [7])
                {
                case 'd':
                  if (strncmp (KR_keyword, "/dev/sdda6", 10) == 0)
                    {
{
return dev_storage + 2008;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'c':
                  if (strncmp (KR_keyword, "/dev/sdca6", 10) == 0)
                    {
{
return dev_storage + 1594;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'b':
                  if (strncmp (KR_keyword, "/dev/sdba6", 10) == 0)
                    {
{
return dev_storage + 1178;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'a':
                  if (strncmp (KR_keyword, "/dev/sdaa6", 10) == 0)
                    {
{
return dev_storage + 762;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                default:
{
return	NULL;

}
                }
            case 'S':
              if (strncmp (KR_keyword, "/dev/ttyS6", 10) == 0)
                {
{
return dev_storage + 2514;

}
                }
              else
                {
{
return	NULL;

}
                }
            case '9':
              if (strncmp (KR_keyword, "/dev/nst96", 10) == 0)
                {
{
return dev_storage + 200;

}
                }
              else
                {
{
return	NULL;

}
                }
            case '8':
              if (strncmp (KR_keyword, "/dev/nst86", 10) == 0)
                {
{
return dev_storage + 190;

}
                }
              else
                {
{
return	NULL;

}
                }
            case '7':
              if (strncmp (KR_keyword, "/dev/nst76", 10) == 0)
                {
{
return dev_storage + 180;

}
                }
              else
                {
{
return	NULL;

}
                }
            case '6':
              if (strncmp (KR_keyword, "/dev/nst66", 10) == 0)
                {
{
return dev_storage + 170;

}
                }
              else
                {
{
return	NULL;

}
                }
            case '5':
              switch (KR_keyword [5])
                {
                case 'p':
                  if (strncmp (KR_keyword, "/dev/pty56", 10) == 0)
                    {
{
return dev_storage + 290;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'n':
                  if (strncmp (KR_keyword, "/dev/nst56", 10) == 0)
                    {
{
return dev_storage + 160;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                default:
{
return	NULL;

}
                }
            case '4':
              switch (KR_keyword [5])
                {
                case 'p':
                  if (strncmp (KR_keyword, "/dev/pty46", 10) == 0)
                    {
{
return dev_storage + 280;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'n':
                  if (strncmp (KR_keyword, "/dev/nst46", 10) == 0)
                    {
{
return dev_storage + 150;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                default:
{
return	NULL;

}
                }
            case '3':
              switch (KR_keyword [5])
                {
                case 'p':
                  if (strncmp (KR_keyword, "/dev/pty36", 10) == 0)
                    {
{
return dev_storage + 270;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'n':
                  if (strncmp (KR_keyword, "/dev/nst36", 10) == 0)
                    {
{
return dev_storage + 140;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                default:
{
return	NULL;

}
                }
            case '2':
              switch (KR_keyword [5])
                {
                case 's':
                  if (strncmp (KR_keyword, "/dev/st126", 10) == 0)
                    {
{
return dev_storage + 2505;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'p':
                  if (strncmp (KR_keyword, "/dev/pty26", 10) == 0)
                    {
{
return dev_storage + 260;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'n':
                  if (strncmp (KR_keyword, "/dev/nst26", 10) == 0)
                    {
{
return dev_storage + 130;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                default:
{
return	NULL;

}
                }
            case '1':
              switch (KR_keyword [5])
                {
                case 's':
                  if (strncmp (KR_keyword, "/dev/st116", 10) == 0)
                    {
{
return dev_storage + 2495;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'p':
                  if (strncmp (KR_keyword, "/dev/pty16", 10) == 0)
                    {
{
return dev_storage + 250;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'n':
                  if (strncmp (KR_keyword, "/dev/nst16", 10) == 0)
                    {
{
return dev_storage + 120;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'c':
                  if (strncmp (KR_keyword, "/dev/com16", 10) == 0)
                    {
{
return dev_storage + 17;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                default:
{
return	NULL;

}
                }
            case '0':
              if (strncmp (KR_keyword, "/dev/st106", 10) == 0)
                {
{
return dev_storage + 2485;

}
                }
              else
                {
{
return	NULL;

}
                }
            default:
{
return	NULL;

}
            }
        case '5':
          switch (KR_keyword [7])
            {
            case 'z':
              if (strncmp (KR_keyword, "/dev/sdz15", 10) == 0)
                {
{
return dev_storage + 730;

}
                }
              else
                {
{
return	NULL;

}
                }
            case 'y':
              switch (KR_keyword [8])
                {
                case 'S':
                  if (strncmp (KR_keyword, "/dev/ttyS5", 10) == 0)
                    {
{
return dev_storage + 2513;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case '5':
                  if (strncmp (KR_keyword, "/dev/pty55", 10) == 0)
                    {
{
return dev_storage + 289;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case '4':
                  if (strncmp (KR_keyword, "/dev/pty45", 10) == 0)
                    {
{
return dev_storage + 279;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case '3':
                  if (strncmp (KR_keyword, "/dev/pty35", 10) == 0)
                    {
{
return dev_storage + 269;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case '2':
                  if (strncmp (KR_keyword, "/dev/pty25", 10) == 0)
                    {
{
return dev_storage + 259;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case '1':
                  switch (KR_keyword [5])
                    {
                    case 's':
                      if (strncmp (KR_keyword, "/dev/sdy15", 10) == 0)
                        {
{
return dev_storage + 715;

}
                        }
                      else
                        {
{
return	NULL;

}
                        }
                    case 'p':
                      if (strncmp (KR_keyword, "/dev/pty15", 10) == 0)
                        {
{
return dev_storage + 249;

}
                        }
                      else
                        {
{
return	NULL;

}
                        }
                    default:
{
return	NULL;

}
                    }
                default:
{
return	NULL;

}
                }
            case 'x':
              if (strncmp (KR_keyword, "/dev/sdx15", 10) == 0)
                {
{
return dev_storage + 700;

}
                }
              else
                {
{
return	NULL;

}
                }
            case 'w':
              if (strncmp (KR_keyword, "/dev/sdw15", 10) == 0)
                {
{
return dev_storage + 685;

}
                }
              else
                {
{
return	NULL;

}
                }
            case 'v':
              if (strncmp (KR_keyword, "/dev/sdv15", 10) == 0)
                {
{
return dev_storage + 670;

}
                }
              else
                {
{
return	NULL;

}
                }
            case 'u':
              if (strncmp (KR_keyword, "/dev/sdu15", 10) == 0)
                {
{
return dev_storage + 655;

}
                }
              else
                {
{
return	NULL;

}
                }
            case 't':
              switch (KR_keyword [8])
                {
                case '9':
                  if (strncmp (KR_keyword, "/dev/nst95", 10) == 0)
                    {
{
return dev_storage + 199;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case '8':
                  if (strncmp (KR_keyword, "/dev/nst85", 10) == 0)
                    {
{
return dev_storage + 189;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case '7':
                  if (strncmp (KR_keyword, "/dev/nst75", 10) == 0)
                    {
{
return dev_storage + 179;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case '6':
                  if (strncmp (KR_keyword, "/dev/nst65", 10) == 0)
                    {
{
return dev_storage + 169;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case '5':
                  if (strncmp (KR_keyword, "/dev/nst55", 10) == 0)
                    {
{
return dev_storage + 159;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case '4':
                  if (strncmp (KR_keyword, "/dev/nst45", 10) == 0)
                    {
{
return dev_storage + 149;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case '3':
                  if (strncmp (KR_keyword, "/dev/nst35", 10) == 0)
                    {
{
return dev_storage + 139;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case '2':
                  if (strncmp (KR_keyword, "/dev/nst25", 10) == 0)
                    {
{
return dev_storage + 129;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case '1':
                  switch (KR_keyword [5])
                    {
                    case 's':
                      if (strncmp (KR_keyword, "/dev/sdt15", 10) == 0)
                        {
{
return dev_storage + 640;

}
                        }
                      else
                        {
{
return	NULL;

}
                        }
                    case 'n':
                      if (strncmp (KR_keyword, "/dev/nst15", 10) == 0)
                        {
{
return dev_storage + 119;

}
                        }
                      else
                        {
{
return	NULL;

}
                        }
                    default:
{
return	NULL;

}
                    }
                default:
{
return	NULL;

}
                }
            case 's':
              if (strncmp (KR_keyword, "/dev/sds15", 10) == 0)
                {
{
return dev_storage + 625;

}
                }
              else
                {
{
return	NULL;

}
                }
            case 'r':
              if (strncmp (KR_keyword, "/dev/sdr15", 10) == 0)
                {
{
return dev_storage + 610;

}
                }
              else
                {
{
return	NULL;

}
                }
            case 'q':
              if (strncmp (KR_keyword, "/dev/sdq15", 10) == 0)
                {
{
return dev_storage + 595;

}
                }
              else
                {
{
return	NULL;

}
                }
            case 'p':
              if (strncmp (KR_keyword, "/dev/sdp15", 10) == 0)
                {
{
return dev_storage + 580;

}
                }
              else
                {
{
return	NULL;

}
                }
            case 'o':
              if (strncmp (KR_keyword, "/dev/sdo15", 10) == 0)
                {
{
return dev_storage + 565;

}
                }
              else
                {
{
return	NULL;

}
                }
            case 'n':
              switch (KR_keyword [5])
                {
                case 's':
                  if (strncmp (KR_keyword, "/dev/sdn15", 10) == 0)
                    {
{
return dev_storage + 550;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'c':
                  if (strncmp (KR_keyword, "/dev/cons5", 10) == 0)
                    {
{
return dev_storage + 25;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                default:
{
return	NULL;

}
                }
            case 'm':
              switch (KR_keyword [5])
                {
                case 's':
                  if (strncmp (KR_keyword, "/dev/sdm15", 10) == 0)
                    {
{
return dev_storage + 535;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'c':
                  if (strncmp (KR_keyword, "/dev/com15", 10) == 0)
                    {
{
return dev_storage + 16;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                default:
{
return	NULL;

}
                }
            case 'l':
              if (strncmp (KR_keyword, "/dev/sdl15", 10) == 0)
                {
{
return dev_storage + 520;

}
                }
              else
                {
{
return	NULL;

}
                }
            case 'k':
              if (strncmp (KR_keyword, "/dev/sdk15", 10) == 0)
                {
{
return dev_storage + 505;

}
                }
              else
                {
{
return	NULL;

}
                }
            case 'j':
              if (strncmp (KR_keyword, "/dev/sdj15", 10) == 0)
                {
{
return dev_storage + 490;

}
                }
              else
                {
{
return	NULL;

}
                }
            case 'i':
              if (strncmp (KR_keyword, "/dev/sdi15", 10) == 0)
                {
{
return dev_storage + 475;

}
                }
              else
                {
{
return	NULL;

}
                }
            case 'h':
              if (strncmp (KR_keyword, "/dev/sdh15", 10) == 0)
                {
{
return dev_storage + 460;

}
                }
              else
                {
{
return	NULL;

}
                }
            case 'g':
              if (strncmp (KR_keyword, "/dev/sdg15", 10) == 0)
                {
{
return dev_storage + 445;

}
                }
              else
                {
{
return	NULL;

}
                }
            case 'f':
              if (strncmp (KR_keyword, "/dev/sdf15", 10) == 0)
                {
{
return dev_storage + 430;

}
                }
              else
                {
{
return	NULL;

}
                }
            case 'e':
              if (strncmp (KR_keyword, "/dev/sde15", 10) == 0)
                {
{
return dev_storage + 415;

}
                }
              else
                {
{
return	NULL;

}
                }
            case 'd':
              switch (KR_keyword [8])
                {
                case 'x':
                  if (strncmp (KR_keyword, "/dev/sddx5", 10) == 0)
                    {
{
return dev_storage + 2352;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'w':
                  if (strncmp (KR_keyword, "/dev/sddw5", 10) == 0)
                    {
{
return dev_storage + 2337;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'v':
                  if (strncmp (KR_keyword, "/dev/sddv5", 10) == 0)
                    {
{
return dev_storage + 2322;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'u':
                  if (strncmp (KR_keyword, "/dev/sddu5", 10) == 0)
                    {
{
return dev_storage + 2307;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 't':
                  if (strncmp (KR_keyword, "/dev/sddt5", 10) == 0)
                    {
{
return dev_storage + 2292;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 's':
                  if (strncmp (KR_keyword, "/dev/sdds5", 10) == 0)
                    {
{
return dev_storage + 2277;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'r':
                  if (strncmp (KR_keyword, "/dev/sddr5", 10) == 0)
                    {
{
return dev_storage + 2262;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'q':
                  if (strncmp (KR_keyword, "/dev/sddq5", 10) == 0)
                    {
{
return dev_storage + 2247;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'p':
                  if (strncmp (KR_keyword, "/dev/sddp5", 10) == 0)
                    {
{
return dev_storage + 2232;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'o':
                  if (strncmp (KR_keyword, "/dev/sddo5", 10) == 0)
                    {
{
return dev_storage + 2217;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'n':
                  if (strncmp (KR_keyword, "/dev/sddn5", 10) == 0)
                    {
{
return dev_storage + 2202;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'm':
                  if (strncmp (KR_keyword, "/dev/sddm5", 10) == 0)
                    {
{
return dev_storage + 2187;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'l':
                  if (strncmp (KR_keyword, "/dev/sddl5", 10) == 0)
                    {
{
return dev_storage + 2172;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'k':
                  if (strncmp (KR_keyword, "/dev/sddk5", 10) == 0)
                    {
{
return dev_storage + 2157;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'j':
                  if (strncmp (KR_keyword, "/dev/sddj5", 10) == 0)
                    {
{
return dev_storage + 2142;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'i':
                  if (strncmp (KR_keyword, "/dev/sddi5", 10) == 0)
                    {
{
return dev_storage + 2127;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'h':
                  if (strncmp (KR_keyword, "/dev/sddh5", 10) == 0)
                    {
{
return dev_storage + 2112;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'g':
                  if (strncmp (KR_keyword, "/dev/sddg5", 10) == 0)
                    {
{
return dev_storage + 2097;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'f':
                  if (strncmp (KR_keyword, "/dev/sddf5", 10) == 0)
                    {
{
return dev_storage + 2082;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'e':
                  if (strncmp (KR_keyword, "/dev/sdde5", 10) == 0)
                    {
{
return dev_storage + 2067;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'd':
                  if (strncmp (KR_keyword, "/dev/sddd5", 10) == 0)
                    {
{
return dev_storage + 2052;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'c':
                  if (strncmp (KR_keyword, "/dev/sddc5", 10) == 0)
                    {
{
return dev_storage + 2037;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'b':
                  if (strncmp (KR_keyword, "/dev/sddb5", 10) == 0)
                    {
{
return dev_storage + 2022;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'a':
                  if (strncmp (KR_keyword, "/dev/sdda5", 10) == 0)
                    {
{
return dev_storage + 2007;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case '1':
                  switch (KR_keyword [6])
                    {
                    case 'd':
                      if (strncmp (KR_keyword, "/dev/sdd15", 10) == 0)
                        {
{
return dev_storage + 400;

}
                        }
                      else
                        {
{
return	NULL;

}
                        }
                    case 'c':
                      if (strncmp (KR_keyword, "/dev/scd15", 10) == 0)
                        {
{
return dev_storage + 314;

}
                        }
                      else
                        {
{
return	NULL;

}
                        }
                    default:
{
return	NULL;

}
                    }
                default:
{
return	NULL;

}
                }
            case 'c':
              switch (KR_keyword [8])
                {
                case 'z':
                  if (strncmp (KR_keyword, "/dev/sdcz5", 10) == 0)
                    {
{
return dev_storage + 1968;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'y':
                  if (strncmp (KR_keyword, "/dev/sdcy5", 10) == 0)
                    {
{
return dev_storage + 1953;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'x':
                  if (strncmp (KR_keyword, "/dev/sdcx5", 10) == 0)
                    {
{
return dev_storage + 1938;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'w':
                  if (strncmp (KR_keyword, "/dev/sdcw5", 10) == 0)
                    {
{
return dev_storage + 1923;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'v':
                  if (strncmp (KR_keyword, "/dev/sdcv5", 10) == 0)
                    {
{
return dev_storage + 1908;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'u':
                  if (strncmp (KR_keyword, "/dev/sdcu5", 10) == 0)
                    {
{
return dev_storage + 1893;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 't':
                  if (strncmp (KR_keyword, "/dev/sdct5", 10) == 0)
                    {
{
return dev_storage + 1878;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 's':
                  if (strncmp (KR_keyword, "/dev/sdcs5", 10) == 0)
                    {
{
return dev_storage + 1863;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'r':
                  if (strncmp (KR_keyword, "/dev/sdcr5", 10) == 0)
                    {
{
return dev_storage + 1848;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'q':
                  if (strncmp (KR_keyword, "/dev/sdcq5", 10) == 0)
                    {
{
return dev_storage + 1833;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'p':
                  if (strncmp (KR_keyword, "/dev/sdcp5", 10) == 0)
                    {
{
return dev_storage + 1818;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'o':
                  if (strncmp (KR_keyword, "/dev/sdco5", 10) == 0)
                    {
{
return dev_storage + 1803;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'n':
                  if (strncmp (KR_keyword, "/dev/sdcn5", 10) == 0)
                    {
{
return dev_storage + 1788;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'm':
                  if (strncmp (KR_keyword, "/dev/sdcm5", 10) == 0)
                    {
{
return dev_storage + 1773;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'l':
                  if (strncmp (KR_keyword, "/dev/sdcl5", 10) == 0)
                    {
{
return dev_storage + 1758;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'k':
                  if (strncmp (KR_keyword, "/dev/sdck5", 10) == 0)
                    {
{
return dev_storage + 1743;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'j':
                  if (strncmp (KR_keyword, "/dev/sdcj5", 10) == 0)
                    {
{
return dev_storage + 1728;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'i':
                  if (strncmp (KR_keyword, "/dev/sdci5", 10) == 0)
                    {
{
return dev_storage + 1713;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'h':
                  if (strncmp (KR_keyword, "/dev/sdch5", 10) == 0)
                    {
{
return dev_storage + 1698;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'g':
                  if (strncmp (KR_keyword, "/dev/sdcg5", 10) == 0)
                    {
{
return dev_storage + 1683;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'f':
                  if (strncmp (KR_keyword, "/dev/sdcf5", 10) == 0)
                    {
{
return dev_storage + 1668;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'e':
                  if (strncmp (KR_keyword, "/dev/sdce5", 10) == 0)
                    {
{
return dev_storage + 1653;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'd':
                  if (strncmp (KR_keyword, "/dev/sdcd5", 10) == 0)
                    {
{
return dev_storage + 1638;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'c':
                  if (strncmp (KR_keyword, "/dev/sdcc5", 10) == 0)
                    {
{
return dev_storage + 1623;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'b':
                  if (strncmp (KR_keyword, "/dev/sdcb5", 10) == 0)
                    {
{
return dev_storage + 1608;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'a':
                  if (strncmp (KR_keyword, "/dev/sdca5", 10) == 0)
                    {
{
return dev_storage + 1593;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case '1':
                  if (strncmp (KR_keyword, "/dev/sdc15", 10) == 0)
                    {
{
return dev_storage + 385;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                default:
{
return	NULL;

}
                }
            case 'b':
              switch (KR_keyword [8])
                {
                case 'z':
                  if (strncmp (KR_keyword, "/dev/sdbz5", 10) == 0)
                    {
{
return dev_storage + 1552;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'y':
                  if (strncmp (KR_keyword, "/dev/sdby5", 10) == 0)
                    {
{
return dev_storage + 1537;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'x':
                  if (strncmp (KR_keyword, "/dev/sdbx5", 10) == 0)
                    {
{
return dev_storage + 1522;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'w':
                  if (strncmp (KR_keyword, "/dev/sdbw5", 10) == 0)
                    {
{
return dev_storage + 1507;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'v':
                  if (strncmp (KR_keyword, "/dev/sdbv5", 10) == 0)
                    {
{
return dev_storage + 1492;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'u':
                  if (strncmp (KR_keyword, "/dev/sdbu5", 10) == 0)
                    {
{
return dev_storage + 1477;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 't':
                  if (strncmp (KR_keyword, "/dev/sdbt5", 10) == 0)
                    {
{
return dev_storage + 1462;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 's':
                  if (strncmp (KR_keyword, "/dev/sdbs5", 10) == 0)
                    {
{
return dev_storage + 1447;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'r':
                  if (strncmp (KR_keyword, "/dev/sdbr5", 10) == 0)
                    {
{
return dev_storage + 1432;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'q':
                  if (strncmp (KR_keyword, "/dev/sdbq5", 10) == 0)
                    {
{
return dev_storage + 1417;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'p':
                  if (strncmp (KR_keyword, "/dev/sdbp5", 10) == 0)
                    {
{
return dev_storage + 1402;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'o':
                  if (strncmp (KR_keyword, "/dev/sdbo5", 10) == 0)
                    {
{
return dev_storage + 1387;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'n':
                  if (strncmp (KR_keyword, "/dev/sdbn5", 10) == 0)
                    {
{
return dev_storage + 1372;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'm':
                  if (strncmp (KR_keyword, "/dev/sdbm5", 10) == 0)
                    {
{
return dev_storage + 1357;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'l':
                  if (strncmp (KR_keyword, "/dev/sdbl5", 10) == 0)
                    {
{
return dev_storage + 1342;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'k':
                  if (strncmp (KR_keyword, "/dev/sdbk5", 10) == 0)
                    {
{
return dev_storage + 1327;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'j':
                  if (strncmp (KR_keyword, "/dev/sdbj5", 10) == 0)
                    {
{
return dev_storage + 1312;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'i':
                  if (strncmp (KR_keyword, "/dev/sdbi5", 10) == 0)
                    {
{
return dev_storage + 1297;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'h':
                  if (strncmp (KR_keyword, "/dev/sdbh5", 10) == 0)
                    {
{
return dev_storage + 1282;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'g':
                  if (strncmp (KR_keyword, "/dev/sdbg5", 10) == 0)
                    {
{
return dev_storage + 1267;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'f':
                  if (strncmp (KR_keyword, "/dev/sdbf5", 10) == 0)
                    {
{
return dev_storage + 1252;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'e':
                  if (strncmp (KR_keyword, "/dev/sdbe5", 10) == 0)
                    {
{
return dev_storage + 1237;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'd':
                  if (strncmp (KR_keyword, "/dev/sdbd5", 10) == 0)
                    {
{
return dev_storage + 1222;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'c':
                  if (strncmp (KR_keyword, "/dev/sdbc5", 10) == 0)
                    {
{
return dev_storage + 1207;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'b':
                  if (strncmp (KR_keyword, "/dev/sdbb5", 10) == 0)
                    {
{
return dev_storage + 1192;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'a':
                  if (strncmp (KR_keyword, "/dev/sdba5", 10) == 0)
                    {
{
return dev_storage + 1177;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case '1':
                  if (strncmp (KR_keyword, "/dev/sdb15", 10) == 0)
                    {
{
return dev_storage + 370;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                default:
{
return	NULL;

}
                }
            case 'a':
              switch (KR_keyword [8])
                {
                case 'z':
                  if (strncmp (KR_keyword, "/dev/sdaz5", 10) == 0)
                    {
{
return dev_storage + 1136;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'y':
                  if (strncmp (KR_keyword, "/dev/sday5", 10) == 0)
                    {
{
return dev_storage + 1121;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'x':
                  if (strncmp (KR_keyword, "/dev/sdax5", 10) == 0)
                    {
{
return dev_storage + 1106;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'w':
                  if (strncmp (KR_keyword, "/dev/sdaw5", 10) == 0)
                    {
{
return dev_storage + 1091;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'v':
                  if (strncmp (KR_keyword, "/dev/sdav5", 10) == 0)
                    {
{
return dev_storage + 1076;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'u':
                  if (strncmp (KR_keyword, "/dev/sdau5", 10) == 0)
                    {
{
return dev_storage + 1061;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 't':
                  if (strncmp (KR_keyword, "/dev/sdat5", 10) == 0)
                    {
{
return dev_storage + 1046;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 's':
                  if (strncmp (KR_keyword, "/dev/sdas5", 10) == 0)
                    {
{
return dev_storage + 1031;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'r':
                  if (strncmp (KR_keyword, "/dev/sdar5", 10) == 0)
                    {
{
return dev_storage + 1016;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'q':
                  if (strncmp (KR_keyword, "/dev/sdaq5", 10) == 0)
                    {
{
return dev_storage + 1001;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'p':
                  if (strncmp (KR_keyword, "/dev/sdap5", 10) == 0)
                    {
{
return dev_storage + 986;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'o':
                  if (strncmp (KR_keyword, "/dev/sdao5", 10) == 0)
                    {
{
return dev_storage + 971;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'n':
                  if (strncmp (KR_keyword, "/dev/sdan5", 10) == 0)
                    {
{
return dev_storage + 956;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'm':
                  if (strncmp (KR_keyword, "/dev/sdam5", 10) == 0)
                    {
{
return dev_storage + 941;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'l':
                  if (strncmp (KR_keyword, "/dev/sdal5", 10) == 0)
                    {
{
return dev_storage + 926;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'k':
                  if (strncmp (KR_keyword, "/dev/sdak5", 10) == 0)
                    {
{
return dev_storage + 911;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'j':
                  if (strncmp (KR_keyword, "/dev/sdaj5", 10) == 0)
                    {
{
return dev_storage + 896;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'i':
                  if (strncmp (KR_keyword, "/dev/sdai5", 10) == 0)
                    {
{
return dev_storage + 881;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'h':
                  if (strncmp (KR_keyword, "/dev/sdah5", 10) == 0)
                    {
{
return dev_storage + 866;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'g':
                  if (strncmp (KR_keyword, "/dev/sdag5", 10) == 0)
                    {
{
return dev_storage + 851;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'f':
                  if (strncmp (KR_keyword, "/dev/sdaf5", 10) == 0)
                    {
{
return dev_storage + 836;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'e':
                  if (strncmp (KR_keyword, "/dev/sdae5", 10) == 0)
                    {
{
return dev_storage + 821;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'd':
                  if (strncmp (KR_keyword, "/dev/sdad5", 10) == 0)
                    {
{
return dev_storage + 806;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'c':
                  if (strncmp (KR_keyword, "/dev/sdac5", 10) == 0)
                    {
{
return dev_storage + 791;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'b':
                  if (strncmp (KR_keyword, "/dev/sdab5", 10) == 0)
                    {
{
return dev_storage + 776;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'a':
                  if (strncmp (KR_keyword, "/dev/sdaa5", 10) == 0)
                    {
{
return dev_storage + 761;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case '1':
                  if (strncmp (KR_keyword, "/dev/sda15", 10) == 0)
                    {
{
return dev_storage + 355;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                default:
{
return	NULL;

}
                }
            case '1':
              switch (KR_keyword [8])
                {
                case '2':
                  if (strncmp (KR_keyword, "/dev/st125", 10) == 0)
                    {
{
return dev_storage + 2504;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case '1':
                  if (strncmp (KR_keyword, "/dev/st115", 10) == 0)
                    {
{
return dev_storage + 2494;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case '0':
                  if (strncmp (KR_keyword, "/dev/st105", 10) == 0)
                    {
{
return dev_storage + 2484;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                default:
{
return	NULL;

}
                }
            default:
{
return	NULL;

}
            }
        case '4':
          switch (KR_keyword [7])
            {
            case 'z':
              if (strncmp (KR_keyword, "/dev/sdz14", 10) == 0)
                {
{
return dev_storage + 729;

}
                }
              else
                {
{
return	NULL;

}
                }
            case 'y':
              switch (KR_keyword [8])
                {
                case 'S':
                  if (strncmp (KR_keyword, "/dev/ttyS4", 10) == 0)
                    {
{
return dev_storage + 2512;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case '5':
                  if (strncmp (KR_keyword, "/dev/pty54", 10) == 0)
                    {
{
return dev_storage + 288;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case '4':
                  if (strncmp (KR_keyword, "/dev/pty44", 10) == 0)
                    {
{
return dev_storage + 278;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case '3':
                  if (strncmp (KR_keyword, "/dev/pty34", 10) == 0)
                    {
{
return dev_storage + 268;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case '2':
                  if (strncmp (KR_keyword, "/dev/pty24", 10) == 0)
                    {
{
return dev_storage + 258;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case '1':
                  switch (KR_keyword [5])
                    {
                    case 's':
                      if (strncmp (KR_keyword, "/dev/sdy14", 10) == 0)
                        {
{
return dev_storage + 714;

}
                        }
                      else
                        {
{
return	NULL;

}
                        }
                    case 'p':
                      if (strncmp (KR_keyword, "/dev/pty14", 10) == 0)
                        {
{
return dev_storage + 248;

}
                        }
                      else
                        {
{
return	NULL;

}
                        }
                    default:
{
return	NULL;

}
                    }
                default:
{
return	NULL;

}
                }
            case 'x':
              if (strncmp (KR_keyword, "/dev/sdx14", 10) == 0)
                {
{
return dev_storage + 699;

}
                }
              else
                {
{
return	NULL;

}
                }
            case 'w':
              if (strncmp (KR_keyword, "/dev/sdw14", 10) == 0)
                {
{
return dev_storage + 684;

}
                }
              else
                {
{
return	NULL;

}
                }
            case 'v':
              if (strncmp (KR_keyword, "/dev/sdv14", 10) == 0)
                {
{
return dev_storage + 669;

}
                }
              else
                {
{
return	NULL;

}
                }
            case 'u':
              if (strncmp (KR_keyword, "/dev/sdu14", 10) == 0)
                {
{
return dev_storage + 654;

}
                }
              else
                {
{
return	NULL;

}
                }
            case 't':
              switch (KR_keyword [8])
                {
                case '9':
                  if (strncmp (KR_keyword, "/dev/nst94", 10) == 0)
                    {
{
return dev_storage + 198;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case '8':
                  if (strncmp (KR_keyword, "/dev/nst84", 10) == 0)
                    {
{
return dev_storage + 188;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case '7':
                  if (strncmp (KR_keyword, "/dev/nst74", 10) == 0)
                    {
{
return dev_storage + 178;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case '6':
                  if (strncmp (KR_keyword, "/dev/nst64", 10) == 0)
                    {
{
return dev_storage + 168;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case '5':
                  if (strncmp (KR_keyword, "/dev/nst54", 10) == 0)
                    {
{
return dev_storage + 158;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case '4':
                  if (strncmp (KR_keyword, "/dev/nst44", 10) == 0)
                    {
{
return dev_storage + 148;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case '3':
                  if (strncmp (KR_keyword, "/dev/nst34", 10) == 0)
                    {
{
return dev_storage + 138;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case '2':
                  if (strncmp (KR_keyword, "/dev/nst24", 10) == 0)
                    {
{
return dev_storage + 128;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case '1':
                  switch (KR_keyword [5])
                    {
                    case 's':
                      if (strncmp (KR_keyword, "/dev/sdt14", 10) == 0)
                        {
{
return dev_storage + 639;

}
                        }
                      else
                        {
{
return	NULL;

}
                        }
                    case 'n':
                      if (strncmp (KR_keyword, "/dev/nst14", 10) == 0)
                        {
{
return dev_storage + 118;

}
                        }
                      else
                        {
{
return	NULL;

}
                        }
                    default:
{
return	NULL;

}
                    }
                default:
{
return	NULL;

}
                }
            case 's':
              if (strncmp (KR_keyword, "/dev/sds14", 10) == 0)
                {
{
return dev_storage + 624;

}
                }
              else
                {
{
return	NULL;

}
                }
            case 'r':
              if (strncmp (KR_keyword, "/dev/sdr14", 10) == 0)
                {
{
return dev_storage + 609;

}
                }
              else
                {
{
return	NULL;

}
                }
            case 'q':
              if (strncmp (KR_keyword, "/dev/sdq14", 10) == 0)
                {
{
return dev_storage + 594;

}
                }
              else
                {
{
return	NULL;

}
                }
            case 'p':
              if (strncmp (KR_keyword, "/dev/sdp14", 10) == 0)
                {
{
return dev_storage + 579;

}
                }
              else
                {
{
return	NULL;

}
                }
            case 'o':
              if (strncmp (KR_keyword, "/dev/sdo14", 10) == 0)
                {
{
return dev_storage + 564;

}
                }
              else
                {
{
return	NULL;

}
                }
            case 'n':
              switch (KR_keyword [5])
                {
                case 's':
                  if (strncmp (KR_keyword, "/dev/sdn14", 10) == 0)
                    {
{
return dev_storage + 549;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'c':
                  if (strncmp (KR_keyword, "/dev/cons4", 10) == 0)
                    {
{
return dev_storage + 24;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                default:
{
return	NULL;

}
                }
            case 'm':
              switch (KR_keyword [5])
                {
                case 's':
                  if (strncmp (KR_keyword, "/dev/sdm14", 10) == 0)
                    {
{
return dev_storage + 534;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'c':
                  if (strncmp (KR_keyword, "/dev/com14", 10) == 0)
                    {
{
return dev_storage + 15;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                default:
{
return	NULL;

}
                }
            case 'l':
              if (strncmp (KR_keyword, "/dev/sdl14", 10) == 0)
                {
{
return dev_storage + 519;

}
                }
              else
                {
{
return	NULL;

}
                }
            case 'k':
              if (strncmp (KR_keyword, "/dev/sdk14", 10) == 0)
                {
{
return dev_storage + 504;

}
                }
              else
                {
{
return	NULL;

}
                }
            case 'j':
              if (strncmp (KR_keyword, "/dev/sdj14", 10) == 0)
                {
{
return dev_storage + 489;

}
                }
              else
                {
{
return	NULL;

}
                }
            case 'i':
              if (strncmp (KR_keyword, "/dev/sdi14", 10) == 0)
                {
{
return dev_storage + 474;

}
                }
              else
                {
{
return	NULL;

}
                }
            case 'h':
              if (strncmp (KR_keyword, "/dev/sdh14", 10) == 0)
                {
{
return dev_storage + 459;

}
                }
              else
                {
{
return	NULL;

}
                }
            case 'g':
              if (strncmp (KR_keyword, "/dev/sdg14", 10) == 0)
                {
{
return dev_storage + 444;

}
                }
              else
                {
{
return	NULL;

}
                }
            case 'f':
              if (strncmp (KR_keyword, "/dev/sdf14", 10) == 0)
                {
{
return dev_storage + 429;

}
                }
              else
                {
{
return	NULL;

}
                }
            case 'e':
              if (strncmp (KR_keyword, "/dev/sde14", 10) == 0)
                {
{
return dev_storage + 414;

}
                }
              else
                {
{
return	NULL;

}
                }
            case 'd':
              switch (KR_keyword [8])
                {
                case 'x':
                  if (strncmp (KR_keyword, "/dev/sddx4", 10) == 0)
                    {
{
return dev_storage + 2351;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'w':
                  if (strncmp (KR_keyword, "/dev/sddw4", 10) == 0)
                    {
{
return dev_storage + 2336;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'v':
                  if (strncmp (KR_keyword, "/dev/sddv4", 10) == 0)
                    {
{
return dev_storage + 2321;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'u':
                  if (strncmp (KR_keyword, "/dev/sddu4", 10) == 0)
                    {
{
return dev_storage + 2306;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 't':
                  if (strncmp (KR_keyword, "/dev/sddt4", 10) == 0)
                    {
{
return dev_storage + 2291;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 's':
                  if (strncmp (KR_keyword, "/dev/sdds4", 10) == 0)
                    {
{
return dev_storage + 2276;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'r':
                  if (strncmp (KR_keyword, "/dev/sddr4", 10) == 0)
                    {
{
return dev_storage + 2261;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'q':
                  if (strncmp (KR_keyword, "/dev/sddq4", 10) == 0)
                    {
{
return dev_storage + 2246;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'p':
                  if (strncmp (KR_keyword, "/dev/sddp4", 10) == 0)
                    {
{
return dev_storage + 2231;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'o':
                  if (strncmp (KR_keyword, "/dev/sddo4", 10) == 0)
                    {
{
return dev_storage + 2216;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'n':
                  if (strncmp (KR_keyword, "/dev/sddn4", 10) == 0)
                    {
{
return dev_storage + 2201;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'm':
                  if (strncmp (KR_keyword, "/dev/sddm4", 10) == 0)
                    {
{
return dev_storage + 2186;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'l':
                  if (strncmp (KR_keyword, "/dev/sddl4", 10) == 0)
                    {
{
return dev_storage + 2171;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'k':
                  if (strncmp (KR_keyword, "/dev/sddk4", 10) == 0)
                    {
{
return dev_storage + 2156;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'j':
                  if (strncmp (KR_keyword, "/dev/sddj4", 10) == 0)
                    {
{
return dev_storage + 2141;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'i':
                  if (strncmp (KR_keyword, "/dev/sddi4", 10) == 0)
                    {
{
return dev_storage + 2126;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'h':
                  if (strncmp (KR_keyword, "/dev/sddh4", 10) == 0)
                    {
{
return dev_storage + 2111;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'g':
                  if (strncmp (KR_keyword, "/dev/sddg4", 10) == 0)
                    {
{
return dev_storage + 2096;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'f':
                  if (strncmp (KR_keyword, "/dev/sddf4", 10) == 0)
                    {
{
return dev_storage + 2081;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'e':
                  if (strncmp (KR_keyword, "/dev/sdde4", 10) == 0)
                    {
{
return dev_storage + 2066;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'd':
                  if (strncmp (KR_keyword, "/dev/sddd4", 10) == 0)
                    {
{
return dev_storage + 2051;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'c':
                  if (strncmp (KR_keyword, "/dev/sddc4", 10) == 0)
                    {
{
return dev_storage + 2036;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'b':
                  if (strncmp (KR_keyword, "/dev/sddb4", 10) == 0)
                    {
{
return dev_storage + 2021;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'a':
                  if (strncmp (KR_keyword, "/dev/sdda4", 10) == 0)
                    {
{
return dev_storage + 2006;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case '1':
                  switch (KR_keyword [6])
                    {
                    case 'd':
                      if (strncmp (KR_keyword, "/dev/sdd14", 10) == 0)
                        {
{
return dev_storage + 399;

}
                        }
                      else
                        {
{
return	NULL;

}
                        }
                    case 'c':
                      if (strncmp (KR_keyword, "/dev/scd14", 10) == 0)
                        {
{
return dev_storage + 313;

}
                        }
                      else
                        {
{
return	NULL;

}
                        }
                    default:
{
return	NULL;

}
                    }
                default:
{
return	NULL;

}
                }
            case 'c':
              switch (KR_keyword [8])
                {
                case 'z':
                  if (strncmp (KR_keyword, "/dev/sdcz4", 10) == 0)
                    {
{
return dev_storage + 1967;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'y':
                  if (strncmp (KR_keyword, "/dev/sdcy4", 10) == 0)
                    {
{
return dev_storage + 1952;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'x':
                  if (strncmp (KR_keyword, "/dev/sdcx4", 10) == 0)
                    {
{
return dev_storage + 1937;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'w':
                  if (strncmp (KR_keyword, "/dev/sdcw4", 10) == 0)
                    {
{
return dev_storage + 1922;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'v':
                  if (strncmp (KR_keyword, "/dev/sdcv4", 10) == 0)
                    {
{
return dev_storage + 1907;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'u':
                  if (strncmp (KR_keyword, "/dev/sdcu4", 10) == 0)
                    {
{
return dev_storage + 1892;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 't':
                  if (strncmp (KR_keyword, "/dev/sdct4", 10) == 0)
                    {
{
return dev_storage + 1877;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 's':
                  if (strncmp (KR_keyword, "/dev/sdcs4", 10) == 0)
                    {
{
return dev_storage + 1862;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'r':
                  if (strncmp (KR_keyword, "/dev/sdcr4", 10) == 0)
                    {
{
return dev_storage + 1847;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'q':
                  if (strncmp (KR_keyword, "/dev/sdcq4", 10) == 0)
                    {
{
return dev_storage + 1832;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'p':
                  if (strncmp (KR_keyword, "/dev/sdcp4", 10) == 0)
                    {
{
return dev_storage + 1817;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'o':
                  if (strncmp (KR_keyword, "/dev/sdco4", 10) == 0)
                    {
{
return dev_storage + 1802;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'n':
                  if (strncmp (KR_keyword, "/dev/sdcn4", 10) == 0)
                    {
{
return dev_storage + 1787;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'm':
                  if (strncmp (KR_keyword, "/dev/sdcm4", 10) == 0)
                    {
{
return dev_storage + 1772;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'l':
                  if (strncmp (KR_keyword, "/dev/sdcl4", 10) == 0)
                    {
{
return dev_storage + 1757;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'k':
                  if (strncmp (KR_keyword, "/dev/sdck4", 10) == 0)
                    {
{
return dev_storage + 1742;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'j':
                  if (strncmp (KR_keyword, "/dev/sdcj4", 10) == 0)
                    {
{
return dev_storage + 1727;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'i':
                  if (strncmp (KR_keyword, "/dev/sdci4", 10) == 0)
                    {
{
return dev_storage + 1712;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'h':
                  if (strncmp (KR_keyword, "/dev/sdch4", 10) == 0)
                    {
{
return dev_storage + 1697;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'g':
                  if (strncmp (KR_keyword, "/dev/sdcg4", 10) == 0)
                    {
{
return dev_storage + 1682;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'f':
                  if (strncmp (KR_keyword, "/dev/sdcf4", 10) == 0)
                    {
{
return dev_storage + 1667;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'e':
                  if (strncmp (KR_keyword, "/dev/sdce4", 10) == 0)
                    {
{
return dev_storage + 1652;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'd':
                  if (strncmp (KR_keyword, "/dev/sdcd4", 10) == 0)
                    {
{
return dev_storage + 1637;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'c':
                  if (strncmp (KR_keyword, "/dev/sdcc4", 10) == 0)
                    {
{
return dev_storage + 1622;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'b':
                  if (strncmp (KR_keyword, "/dev/sdcb4", 10) == 0)
                    {
{
return dev_storage + 1607;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'a':
                  if (strncmp (KR_keyword, "/dev/sdca4", 10) == 0)
                    {
{
return dev_storage + 1592;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case '1':
                  if (strncmp (KR_keyword, "/dev/sdc14", 10) == 0)
                    {
{
return dev_storage + 384;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                default:
{
return	NULL;

}
                }
            case 'b':
              switch (KR_keyword [8])
                {
                case 'z':
                  if (strncmp (KR_keyword, "/dev/sdbz4", 10) == 0)
                    {
{
return dev_storage + 1551;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'y':
                  if (strncmp (KR_keyword, "/dev/sdby4", 10) == 0)
                    {
{
return dev_storage + 1536;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'x':
                  if (strncmp (KR_keyword, "/dev/sdbx4", 10) == 0)
                    {
{
return dev_storage + 1521;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'w':
                  if (strncmp (KR_keyword, "/dev/sdbw4", 10) == 0)
                    {
{
return dev_storage + 1506;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'v':
                  if (strncmp (KR_keyword, "/dev/sdbv4", 10) == 0)
                    {
{
return dev_storage + 1491;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'u':
                  if (strncmp (KR_keyword, "/dev/sdbu4", 10) == 0)
                    {
{
return dev_storage + 1476;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 't':
                  if (strncmp (KR_keyword, "/dev/sdbt4", 10) == 0)
                    {
{
return dev_storage + 1461;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 's':
                  if (strncmp (KR_keyword, "/dev/sdbs4", 10) == 0)
                    {
{
return dev_storage + 1446;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'r':
                  if (strncmp (KR_keyword, "/dev/sdbr4", 10) == 0)
                    {
{
return dev_storage + 1431;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'q':
                  if (strncmp (KR_keyword, "/dev/sdbq4", 10) == 0)
                    {
{
return dev_storage + 1416;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'p':
                  if (strncmp (KR_keyword, "/dev/sdbp4", 10) == 0)
                    {
{
return dev_storage + 1401;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'o':
                  if (strncmp (KR_keyword, "/dev/sdbo4", 10) == 0)
                    {
{
return dev_storage + 1386;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'n':
                  if (strncmp (KR_keyword, "/dev/sdbn4", 10) == 0)
                    {
{
return dev_storage + 1371;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'm':
                  if (strncmp (KR_keyword, "/dev/sdbm4", 10) == 0)
                    {
{
return dev_storage + 1356;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'l':
                  if (strncmp (KR_keyword, "/dev/sdbl4", 10) == 0)
                    {
{
return dev_storage + 1341;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'k':
                  if (strncmp (KR_keyword, "/dev/sdbk4", 10) == 0)
                    {
{
return dev_storage + 1326;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'j':
                  if (strncmp (KR_keyword, "/dev/sdbj4", 10) == 0)
                    {
{
return dev_storage + 1311;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'i':
                  if (strncmp (KR_keyword, "/dev/sdbi4", 10) == 0)
                    {
{
return dev_storage + 1296;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'h':
                  if (strncmp (KR_keyword, "/dev/sdbh4", 10) == 0)
                    {
{
return dev_storage + 1281;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'g':
                  if (strncmp (KR_keyword, "/dev/sdbg4", 10) == 0)
                    {
{
return dev_storage + 1266;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'f':
                  if (strncmp (KR_keyword, "/dev/sdbf4", 10) == 0)
                    {
{
return dev_storage + 1251;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'e':
                  if (strncmp (KR_keyword, "/dev/sdbe4", 10) == 0)
                    {
{
return dev_storage + 1236;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'd':
                  if (strncmp (KR_keyword, "/dev/sdbd4", 10) == 0)
                    {
{
return dev_storage + 1221;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'c':
                  if (strncmp (KR_keyword, "/dev/sdbc4", 10) == 0)
                    {
{
return dev_storage + 1206;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'b':
                  if (strncmp (KR_keyword, "/dev/sdbb4", 10) == 0)
                    {
{
return dev_storage + 1191;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'a':
                  if (strncmp (KR_keyword, "/dev/sdba4", 10) == 0)
                    {
{
return dev_storage + 1176;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case '1':
                  if (strncmp (KR_keyword, "/dev/sdb14", 10) == 0)
                    {
{
return dev_storage + 369;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                default:
{
return	NULL;

}
                }
            case 'a':
              switch (KR_keyword [8])
                {
                case 'z':
                  if (strncmp (KR_keyword, "/dev/sdaz4", 10) == 0)
                    {
{
return dev_storage + 1135;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'y':
                  if (strncmp (KR_keyword, "/dev/sday4", 10) == 0)
                    {
{
return dev_storage + 1120;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'x':
                  if (strncmp (KR_keyword, "/dev/sdax4", 10) == 0)
                    {
{
return dev_storage + 1105;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'w':
                  if (strncmp (KR_keyword, "/dev/sdaw4", 10) == 0)
                    {
{
return dev_storage + 1090;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'v':
                  if (strncmp (KR_keyword, "/dev/sdav4", 10) == 0)
                    {
{
return dev_storage + 1075;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'u':
                  if (strncmp (KR_keyword, "/dev/sdau4", 10) == 0)
                    {
{
return dev_storage + 1060;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 't':
                  if (strncmp (KR_keyword, "/dev/sdat4", 10) == 0)
                    {
{
return dev_storage + 1045;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 's':
                  if (strncmp (KR_keyword, "/dev/sdas4", 10) == 0)
                    {
{
return dev_storage + 1030;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'r':
                  if (strncmp (KR_keyword, "/dev/sdar4", 10) == 0)
                    {
{
return dev_storage + 1015;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'q':
                  if (strncmp (KR_keyword, "/dev/sdaq4", 10) == 0)
                    {
{
return dev_storage + 1000;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'p':
                  if (strncmp (KR_keyword, "/dev/sdap4", 10) == 0)
                    {
{
return dev_storage + 985;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'o':
                  if (strncmp (KR_keyword, "/dev/sdao4", 10) == 0)
                    {
{
return dev_storage + 970;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'n':
                  if (strncmp (KR_keyword, "/dev/sdan4", 10) == 0)
                    {
{
return dev_storage + 955;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'm':
                  if (strncmp (KR_keyword, "/dev/sdam4", 10) == 0)
                    {
{
return dev_storage + 940;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'l':
                  if (strncmp (KR_keyword, "/dev/sdal4", 10) == 0)
                    {
{
return dev_storage + 925;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'k':
                  if (strncmp (KR_keyword, "/dev/sdak4", 10) == 0)
                    {
{
return dev_storage + 910;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'j':
                  if (strncmp (KR_keyword, "/dev/sdaj4", 10) == 0)
                    {
{
return dev_storage + 895;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'i':
                  if (strncmp (KR_keyword, "/dev/sdai4", 10) == 0)
                    {
{
return dev_storage + 880;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'h':
                  if (strncmp (KR_keyword, "/dev/sdah4", 10) == 0)
                    {
{
return dev_storage + 865;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'g':
                  if (strncmp (KR_keyword, "/dev/sdag4", 10) == 0)
                    {
{
return dev_storage + 850;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'f':
                  if (strncmp (KR_keyword, "/dev/sdaf4", 10) == 0)
                    {
{
return dev_storage + 835;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'e':
                  if (strncmp (KR_keyword, "/dev/sdae4", 10) == 0)
                    {
{
return dev_storage + 820;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'd':
                  if (strncmp (KR_keyword, "/dev/sdad4", 10) == 0)
                    {
{
return dev_storage + 805;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'c':
                  if (strncmp (KR_keyword, "/dev/sdac4", 10) == 0)
                    {
{
return dev_storage + 790;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'b':
                  if (strncmp (KR_keyword, "/dev/sdab4", 10) == 0)
                    {
{
return dev_storage + 775;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'a':
                  if (strncmp (KR_keyword, "/dev/sdaa4", 10) == 0)
                    {
{
return dev_storage + 760;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case '1':
                  if (strncmp (KR_keyword, "/dev/sda14", 10) == 0)
                    {
{
return dev_storage + 354;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                default:
{
return	NULL;

}
                }
            case '1':
              switch (KR_keyword [8])
                {
                case '2':
                  if (strncmp (KR_keyword, "/dev/st124", 10) == 0)
                    {
{
return dev_storage + 2503;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case '1':
                  if (strncmp (KR_keyword, "/dev/st114", 10) == 0)
                    {
{
return dev_storage + 2493;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case '0':
                  if (strncmp (KR_keyword, "/dev/st104", 10) == 0)
                    {
{
return dev_storage + 2483;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                default:
{
return	NULL;

}
                }
            default:
{
return	NULL;

}
            }
        case '3':
          switch (KR_keyword [7])
            {
            case 'z':
              if (strncmp (KR_keyword, "/dev/sdz13", 10) == 0)
                {
{
return dev_storage + 728;

}
                }
              else
                {
{
return	NULL;

}
                }
            case 'y':
              switch (KR_keyword [8])
                {
                case 'S':
                  if (strncmp (KR_keyword, "/dev/ttyS3", 10) == 0)
                    {
{
return dev_storage + 2511;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case '6':
                  if (strncmp (KR_keyword, "/dev/pty63", 10) == 0)
                    {
{
return dev_storage + 297;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case '5':
                  if (strncmp (KR_keyword, "/dev/pty53", 10) == 0)
                    {
{
return dev_storage + 287;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case '4':
                  if (strncmp (KR_keyword, "/dev/pty43", 10) == 0)
                    {
{
return dev_storage + 277;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case '3':
                  if (strncmp (KR_keyword, "/dev/pty33", 10) == 0)
                    {
{
return dev_storage + 267;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case '2':
                  if (strncmp (KR_keyword, "/dev/pty23", 10) == 0)
                    {
{
return dev_storage + 257;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case '1':
                  switch (KR_keyword [5])
                    {
                    case 's':
                      if (strncmp (KR_keyword, "/dev/sdy13", 10) == 0)
                        {
{
return dev_storage + 713;

}
                        }
                      else
                        {
{
return	NULL;

}
                        }
                    case 'p':
                      if (strncmp (KR_keyword, "/dev/pty13", 10) == 0)
                        {
{
return dev_storage + 247;

}
                        }
                      else
                        {
{
return	NULL;

}
                        }
                    default:
{
return	NULL;

}
                    }
                default:
{
return	NULL;

}
                }
            case 'x':
              if (strncmp (KR_keyword, "/dev/sdx13", 10) == 0)
                {
{
return dev_storage + 698;

}
                }
              else
                {
{
return	NULL;

}
                }
            case 'w':
              if (strncmp (KR_keyword, "/dev/sdw13", 10) == 0)
                {
{
return dev_storage + 683;

}
                }
              else
                {
{
return	NULL;

}
                }
            case 'v':
              if (strncmp (KR_keyword, "/dev/sdv13", 10) == 0)
                {
{
return dev_storage + 668;

}
                }
              else
                {
{
return	NULL;

}
                }
            case 'u':
              if (strncmp (KR_keyword, "/dev/sdu13", 10) == 0)
                {
{
return dev_storage + 653;

}
                }
              else
                {
{
return	NULL;

}
                }
            case 't':
              switch (KR_keyword [8])
                {
                case '9':
                  if (strncmp (KR_keyword, "/dev/nst93", 10) == 0)
                    {
{
return dev_storage + 197;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case '8':
                  if (strncmp (KR_keyword, "/dev/nst83", 10) == 0)
                    {
{
return dev_storage + 187;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case '7':
                  if (strncmp (KR_keyword, "/dev/nst73", 10) == 0)
                    {
{
return dev_storage + 177;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case '6':
                  if (strncmp (KR_keyword, "/dev/nst63", 10) == 0)
                    {
{
return dev_storage + 167;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case '5':
                  if (strncmp (KR_keyword, "/dev/nst53", 10) == 0)
                    {
{
return dev_storage + 157;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case '4':
                  if (strncmp (KR_keyword, "/dev/nst43", 10) == 0)
                    {
{
return dev_storage + 147;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case '3':
                  if (strncmp (KR_keyword, "/dev/nst33", 10) == 0)
                    {
{
return dev_storage + 137;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case '2':
                  if (strncmp (KR_keyword, "/dev/nst23", 10) == 0)
                    {
{
return dev_storage + 127;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case '1':
                  switch (KR_keyword [5])
                    {
                    case 's':
                      if (strncmp (KR_keyword, "/dev/sdt13", 10) == 0)
                        {
{
return dev_storage + 638;

}
                        }
                      else
                        {
{
return	NULL;

}
                        }
                    case 'n':
                      if (strncmp (KR_keyword, "/dev/nst13", 10) == 0)
                        {
{
return dev_storage + 117;

}
                        }
                      else
                        {
{
return	NULL;

}
                        }
                    default:
{
return	NULL;

}
                    }
                default:
{
return	NULL;

}
                }
            case 's':
              if (strncmp (KR_keyword, "/dev/sds13", 10) == 0)
                {
{
return dev_storage + 623;

}
                }
              else
                {
{
return	NULL;

}
                }
            case 'r':
              if (strncmp (KR_keyword, "/dev/sdr13", 10) == 0)
                {
{
return dev_storage + 608;

}
                }
              else
                {
{
return	NULL;

}
                }
            case 'q':
              if (strncmp (KR_keyword, "/dev/sdq13", 10) == 0)
                {
{
return dev_storage + 593;

}
                }
              else
                {
{
return	NULL;

}
                }
            case 'p':
              if (strncmp (KR_keyword, "/dev/sdp13", 10) == 0)
                {
{
return dev_storage + 578;

}
                }
              else
                {
{
return	NULL;

}
                }
            case 'o':
              if (strncmp (KR_keyword, "/dev/sdo13", 10) == 0)
                {
{
return dev_storage + 563;

}
                }
              else
                {
{
return	NULL;

}
                }
            case 'n':
              switch (KR_keyword [5])
                {
                case 's':
                  if (strncmp (KR_keyword, "/dev/sdn13", 10) == 0)
                    {
{
return dev_storage + 548;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'c':
                  if (strncmp (KR_keyword, "/dev/cons3", 10) == 0)
                    {
{
return dev_storage + 23;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                default:
{
return	NULL;

}
                }
            case 'm':
              switch (KR_keyword [5])
                {
                case 's':
                  if (strncmp (KR_keyword, "/dev/sdm13", 10) == 0)
                    {
{
return dev_storage + 533;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'c':
                  if (strncmp (KR_keyword, "/dev/com13", 10) == 0)
                    {
{
return dev_storage + 14;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                default:
{
return	NULL;

}
                }
            case 'l':
              if (strncmp (KR_keyword, "/dev/sdl13", 10) == 0)
                {
{
return dev_storage + 518;

}
                }
              else
                {
{
return	NULL;

}
                }
            case 'k':
              if (strncmp (KR_keyword, "/dev/sdk13", 10) == 0)
                {
{
return dev_storage + 503;

}
                }
              else
                {
{
return	NULL;

}
                }
            case 'j':
              if (strncmp (KR_keyword, "/dev/sdj13", 10) == 0)
                {
{
return dev_storage + 488;

}
                }
              else
                {
{
return	NULL;

}
                }
            case 'i':
              if (strncmp (KR_keyword, "/dev/sdi13", 10) == 0)
                {
{
return dev_storage + 473;

}
                }
              else
                {
{
return	NULL;

}
                }
            case 'h':
              if (strncmp (KR_keyword, "/dev/sdh13", 10) == 0)
                {
{
return dev_storage + 458;

}
                }
              else
                {
{
return	NULL;

}
                }
            case 'g':
              if (strncmp (KR_keyword, "/dev/sdg13", 10) == 0)
                {
{
return dev_storage + 443;

}
                }
              else
                {
{
return	NULL;

}
                }
            case 'f':
              if (strncmp (KR_keyword, "/dev/sdf13", 10) == 0)
                {
{
return dev_storage + 428;

}
                }
              else
                {
{
return	NULL;

}
                }
            case 'e':
              if (strncmp (KR_keyword, "/dev/sde13", 10) == 0)
                {
{
return dev_storage + 413;

}
                }
              else
                {
{
return	NULL;

}
                }
            case 'd':
              switch (KR_keyword [8])
                {
                case 'x':
                  if (strncmp (KR_keyword, "/dev/sddx3", 10) == 0)
                    {
{
return dev_storage + 2350;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'w':
                  if (strncmp (KR_keyword, "/dev/sddw3", 10) == 0)
                    {
{
return dev_storage + 2335;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'v':
                  if (strncmp (KR_keyword, "/dev/sddv3", 10) == 0)
                    {
{
return dev_storage + 2320;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'u':
                  if (strncmp (KR_keyword, "/dev/sddu3", 10) == 0)
                    {
{
return dev_storage + 2305;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 't':
                  if (strncmp (KR_keyword, "/dev/sddt3", 10) == 0)
                    {
{
return dev_storage + 2290;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 's':
                  if (strncmp (KR_keyword, "/dev/sdds3", 10) == 0)
                    {
{
return dev_storage + 2275;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'r':
                  if (strncmp (KR_keyword, "/dev/sddr3", 10) == 0)
                    {
{
return dev_storage + 2260;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'q':
                  if (strncmp (KR_keyword, "/dev/sddq3", 10) == 0)
                    {
{
return dev_storage + 2245;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'p':
                  if (strncmp (KR_keyword, "/dev/sddp3", 10) == 0)
                    {
{
return dev_storage + 2230;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'o':
                  if (strncmp (KR_keyword, "/dev/sddo3", 10) == 0)
                    {
{
return dev_storage + 2215;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'n':
                  if (strncmp (KR_keyword, "/dev/sddn3", 10) == 0)
                    {
{
return dev_storage + 2200;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'm':
                  if (strncmp (KR_keyword, "/dev/sddm3", 10) == 0)
                    {
{
return dev_storage + 2185;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'l':
                  if (strncmp (KR_keyword, "/dev/sddl3", 10) == 0)
                    {
{
return dev_storage + 2170;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'k':
                  if (strncmp (KR_keyword, "/dev/sddk3", 10) == 0)
                    {
{
return dev_storage + 2155;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'j':
                  if (strncmp (KR_keyword, "/dev/sddj3", 10) == 0)
                    {
{
return dev_storage + 2140;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'i':
                  if (strncmp (KR_keyword, "/dev/sddi3", 10) == 0)
                    {
{
return dev_storage + 2125;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'h':
                  if (strncmp (KR_keyword, "/dev/sddh3", 10) == 0)
                    {
{
return dev_storage + 2110;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'g':
                  if (strncmp (KR_keyword, "/dev/sddg3", 10) == 0)
                    {
{
return dev_storage + 2095;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'f':
                  if (strncmp (KR_keyword, "/dev/sddf3", 10) == 0)
                    {
{
return dev_storage + 2080;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'e':
                  if (strncmp (KR_keyword, "/dev/sdde3", 10) == 0)
                    {
{
return dev_storage + 2065;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'd':
                  if (strncmp (KR_keyword, "/dev/sddd3", 10) == 0)
                    {
{
return dev_storage + 2050;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'c':
                  if (strncmp (KR_keyword, "/dev/sddc3", 10) == 0)
                    {
{
return dev_storage + 2035;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'b':
                  if (strncmp (KR_keyword, "/dev/sddb3", 10) == 0)
                    {
{
return dev_storage + 2020;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'a':
                  if (strncmp (KR_keyword, "/dev/sdda3", 10) == 0)
                    {
{
return dev_storage + 2005;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case '1':
                  switch (KR_keyword [6])
                    {
                    case 'd':
                      if (strncmp (KR_keyword, "/dev/sdd13", 10) == 0)
                        {
{
return dev_storage + 398;

}
                        }
                      else
                        {
{
return	NULL;

}
                        }
                    case 'c':
                      if (strncmp (KR_keyword, "/dev/scd13", 10) == 0)
                        {
{
return dev_storage + 312;

}
                        }
                      else
                        {
{
return	NULL;

}
                        }
                    default:
{
return	NULL;

}
                    }
                default:
{
return	NULL;

}
                }
            case 'c':
              switch (KR_keyword [8])
                {
                case 'z':
                  if (strncmp (KR_keyword, "/dev/sdcz3", 10) == 0)
                    {
{
return dev_storage + 1966;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'y':
                  if (strncmp (KR_keyword, "/dev/sdcy3", 10) == 0)
                    {
{
return dev_storage + 1951;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'x':
                  if (strncmp (KR_keyword, "/dev/sdcx3", 10) == 0)
                    {
{
return dev_storage + 1936;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'w':
                  if (strncmp (KR_keyword, "/dev/sdcw3", 10) == 0)
                    {
{
return dev_storage + 1921;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'v':
                  if (strncmp (KR_keyword, "/dev/sdcv3", 10) == 0)
                    {
{
return dev_storage + 1906;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'u':
                  if (strncmp (KR_keyword, "/dev/sdcu3", 10) == 0)
                    {
{
return dev_storage + 1891;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 't':
                  if (strncmp (KR_keyword, "/dev/sdct3", 10) == 0)
                    {
{
return dev_storage + 1876;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 's':
                  if (strncmp (KR_keyword, "/dev/sdcs3", 10) == 0)
                    {
{
return dev_storage + 1861;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'r':
                  if (strncmp (KR_keyword, "/dev/sdcr3", 10) == 0)
                    {
{
return dev_storage + 1846;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'q':
                  if (strncmp (KR_keyword, "/dev/sdcq3", 10) == 0)
                    {
{
return dev_storage + 1831;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'p':
                  if (strncmp (KR_keyword, "/dev/sdcp3", 10) == 0)
                    {
{
return dev_storage + 1816;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'o':
                  if (strncmp (KR_keyword, "/dev/sdco3", 10) == 0)
                    {
{
return dev_storage + 1801;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'n':
                  if (strncmp (KR_keyword, "/dev/sdcn3", 10) == 0)
                    {
{
return dev_storage + 1786;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'm':
                  if (strncmp (KR_keyword, "/dev/sdcm3", 10) == 0)
                    {
{
return dev_storage + 1771;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'l':
                  if (strncmp (KR_keyword, "/dev/sdcl3", 10) == 0)
                    {
{
return dev_storage + 1756;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'k':
                  if (strncmp (KR_keyword, "/dev/sdck3", 10) == 0)
                    {
{
return dev_storage + 1741;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'j':
                  if (strncmp (KR_keyword, "/dev/sdcj3", 10) == 0)
                    {
{
return dev_storage + 1726;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'i':
                  if (strncmp (KR_keyword, "/dev/sdci3", 10) == 0)
                    {
{
return dev_storage + 1711;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'h':
                  if (strncmp (KR_keyword, "/dev/sdch3", 10) == 0)
                    {
{
return dev_storage + 1696;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'g':
                  if (strncmp (KR_keyword, "/dev/sdcg3", 10) == 0)
                    {
{
return dev_storage + 1681;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'f':
                  if (strncmp (KR_keyword, "/dev/sdcf3", 10) == 0)
                    {
{
return dev_storage + 1666;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'e':
                  if (strncmp (KR_keyword, "/dev/sdce3", 10) == 0)
                    {
{
return dev_storage + 1651;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'd':
                  if (strncmp (KR_keyword, "/dev/sdcd3", 10) == 0)
                    {
{
return dev_storage + 1636;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'c':
                  if (strncmp (KR_keyword, "/dev/sdcc3", 10) == 0)
                    {
{
return dev_storage + 1621;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'b':
                  if (strncmp (KR_keyword, "/dev/sdcb3", 10) == 0)
                    {
{
return dev_storage + 1606;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'a':
                  if (strncmp (KR_keyword, "/dev/sdca3", 10) == 0)
                    {
{
return dev_storage + 1591;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case '1':
                  if (strncmp (KR_keyword, "/dev/sdc13", 10) == 0)
                    {
{
return dev_storage + 383;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                default:
{
return	NULL;

}
                }
            case 'b':
              switch (KR_keyword [8])
                {
                case 'z':
                  if (strncmp (KR_keyword, "/dev/sdbz3", 10) == 0)
                    {
{
return dev_storage + 1550;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'y':
                  if (strncmp (KR_keyword, "/dev/sdby3", 10) == 0)
                    {
{
return dev_storage + 1535;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'x':
                  if (strncmp (KR_keyword, "/dev/sdbx3", 10) == 0)
                    {
{
return dev_storage + 1520;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'w':
                  if (strncmp (KR_keyword, "/dev/sdbw3", 10) == 0)
                    {
{
return dev_storage + 1505;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'v':
                  if (strncmp (KR_keyword, "/dev/sdbv3", 10) == 0)
                    {
{
return dev_storage + 1490;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'u':
                  if (strncmp (KR_keyword, "/dev/sdbu3", 10) == 0)
                    {
{
return dev_storage + 1475;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 't':
                  if (strncmp (KR_keyword, "/dev/sdbt3", 10) == 0)
                    {
{
return dev_storage + 1460;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 's':
                  if (strncmp (KR_keyword, "/dev/sdbs3", 10) == 0)
                    {
{
return dev_storage + 1445;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'r':
                  if (strncmp (KR_keyword, "/dev/sdbr3", 10) == 0)
                    {
{
return dev_storage + 1430;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'q':
                  if (strncmp (KR_keyword, "/dev/sdbq3", 10) == 0)
                    {
{
return dev_storage + 1415;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'p':
                  if (strncmp (KR_keyword, "/dev/sdbp3", 10) == 0)
                    {
{
return dev_storage + 1400;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'o':
                  if (strncmp (KR_keyword, "/dev/sdbo3", 10) == 0)
                    {
{
return dev_storage + 1385;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'n':
                  if (strncmp (KR_keyword, "/dev/sdbn3", 10) == 0)
                    {
{
return dev_storage + 1370;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'm':
                  if (strncmp (KR_keyword, "/dev/sdbm3", 10) == 0)
                    {
{
return dev_storage + 1355;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'l':
                  if (strncmp (KR_keyword, "/dev/sdbl3", 10) == 0)
                    {
{
return dev_storage + 1340;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'k':
                  if (strncmp (KR_keyword, "/dev/sdbk3", 10) == 0)
                    {
{
return dev_storage + 1325;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'j':
                  if (strncmp (KR_keyword, "/dev/sdbj3", 10) == 0)
                    {
{
return dev_storage + 1310;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'i':
                  if (strncmp (KR_keyword, "/dev/sdbi3", 10) == 0)
                    {
{
return dev_storage + 1295;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'h':
                  if (strncmp (KR_keyword, "/dev/sdbh3", 10) == 0)
                    {
{
return dev_storage + 1280;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'g':
                  if (strncmp (KR_keyword, "/dev/sdbg3", 10) == 0)
                    {
{
return dev_storage + 1265;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'f':
                  if (strncmp (KR_keyword, "/dev/sdbf3", 10) == 0)
                    {
{
return dev_storage + 1250;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'e':
                  if (strncmp (KR_keyword, "/dev/sdbe3", 10) == 0)
                    {
{
return dev_storage + 1235;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'd':
                  if (strncmp (KR_keyword, "/dev/sdbd3", 10) == 0)
                    {
{
return dev_storage + 1220;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'c':
                  if (strncmp (KR_keyword, "/dev/sdbc3", 10) == 0)
                    {
{
return dev_storage + 1205;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'b':
                  if (strncmp (KR_keyword, "/dev/sdbb3", 10) == 0)
                    {
{
return dev_storage + 1190;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'a':
                  if (strncmp (KR_keyword, "/dev/sdba3", 10) == 0)
                    {
{
return dev_storage + 1175;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case '1':
                  if (strncmp (KR_keyword, "/dev/sdb13", 10) == 0)
                    {
{
return dev_storage + 368;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                default:
{
return	NULL;

}
                }
            case 'a':
              switch (KR_keyword [8])
                {
                case 'z':
                  if (strncmp (KR_keyword, "/dev/sdaz3", 10) == 0)
                    {
{
return dev_storage + 1134;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'y':
                  if (strncmp (KR_keyword, "/dev/sday3", 10) == 0)
                    {
{
return dev_storage + 1119;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'x':
                  if (strncmp (KR_keyword, "/dev/sdax3", 10) == 0)
                    {
{
return dev_storage + 1104;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'w':
                  if (strncmp (KR_keyword, "/dev/sdaw3", 10) == 0)
                    {
{
return dev_storage + 1089;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'v':
                  if (strncmp (KR_keyword, "/dev/sdav3", 10) == 0)
                    {
{
return dev_storage + 1074;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'u':
                  if (strncmp (KR_keyword, "/dev/sdau3", 10) == 0)
                    {
{
return dev_storage + 1059;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 't':
                  if (strncmp (KR_keyword, "/dev/sdat3", 10) == 0)
                    {
{
return dev_storage + 1044;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 's':
                  if (strncmp (KR_keyword, "/dev/sdas3", 10) == 0)
                    {
{
return dev_storage + 1029;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'r':
                  if (strncmp (KR_keyword, "/dev/sdar3", 10) == 0)
                    {
{
return dev_storage + 1014;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'q':
                  if (strncmp (KR_keyword, "/dev/sdaq3", 10) == 0)
                    {
{
return dev_storage + 999;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'p':
                  if (strncmp (KR_keyword, "/dev/sdap3", 10) == 0)
                    {
{
return dev_storage + 984;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'o':
                  if (strncmp (KR_keyword, "/dev/sdao3", 10) == 0)
                    {
{
return dev_storage + 969;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'n':
                  if (strncmp (KR_keyword, "/dev/sdan3", 10) == 0)
                    {
{
return dev_storage + 954;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'm':
                  if (strncmp (KR_keyword, "/dev/sdam3", 10) == 0)
                    {
{
return dev_storage + 939;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'l':
                  if (strncmp (KR_keyword, "/dev/sdal3", 10) == 0)
                    {
{
return dev_storage + 924;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'k':
                  if (strncmp (KR_keyword, "/dev/sdak3", 10) == 0)
                    {
{
return dev_storage + 909;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'j':
                  if (strncmp (KR_keyword, "/dev/sdaj3", 10) == 0)
                    {
{
return dev_storage + 894;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'i':
                  if (strncmp (KR_keyword, "/dev/sdai3", 10) == 0)
                    {
{
return dev_storage + 879;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'h':
                  if (strncmp (KR_keyword, "/dev/sdah3", 10) == 0)
                    {
{
return dev_storage + 864;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'g':
                  if (strncmp (KR_keyword, "/dev/sdag3", 10) == 0)
                    {
{
return dev_storage + 849;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'f':
                  if (strncmp (KR_keyword, "/dev/sdaf3", 10) == 0)
                    {
{
return dev_storage + 834;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'e':
                  if (strncmp (KR_keyword, "/dev/sdae3", 10) == 0)
                    {
{
return dev_storage + 819;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'd':
                  if (strncmp (KR_keyword, "/dev/sdad3", 10) == 0)
                    {
{
return dev_storage + 804;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'c':
                  if (strncmp (KR_keyword, "/dev/sdac3", 10) == 0)
                    {
{
return dev_storage + 789;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'b':
                  if (strncmp (KR_keyword, "/dev/sdab3", 10) == 0)
                    {
{
return dev_storage + 774;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'a':
                  if (strncmp (KR_keyword, "/dev/sdaa3", 10) == 0)
                    {
{
return dev_storage + 759;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case '1':
                  if (strncmp (KR_keyword, "/dev/sda13", 10) == 0)
                    {
{
return dev_storage + 353;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                default:
{
return	NULL;

}
                }
            case '1':
              switch (KR_keyword [8])
                {
                case '2':
                  if (strncmp (KR_keyword, "/dev/st123", 10) == 0)
                    {
{
return dev_storage + 2502;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case '1':
                  if (strncmp (KR_keyword, "/dev/st113", 10) == 0)
                    {
{
return dev_storage + 2492;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case '0':
                  if (strncmp (KR_keyword, "/dev/st103", 10) == 0)
                    {
{
return dev_storage + 2482;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                default:
{
return	NULL;

}
                }
            default:
{
return	NULL;

}
            }
        case '2':
          switch (KR_keyword [7])
            {
            case 'z':
              if (strncmp (KR_keyword, "/dev/sdz12", 10) == 0)
                {
{
return dev_storage + 727;

}
                }
              else
                {
{
return	NULL;

}
                }
            case 'y':
              switch (KR_keyword [8])
                {
                case 'S':
                  if (strncmp (KR_keyword, "/dev/ttyS2", 10) == 0)
                    {
{
return dev_storage + 2510;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case '6':
                  if (strncmp (KR_keyword, "/dev/pty62", 10) == 0)
                    {
{
return dev_storage + 296;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case '5':
                  if (strncmp (KR_keyword, "/dev/pty52", 10) == 0)
                    {
{
return dev_storage + 286;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case '4':
                  if (strncmp (KR_keyword, "/dev/pty42", 10) == 0)
                    {
{
return dev_storage + 276;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case '3':
                  if (strncmp (KR_keyword, "/dev/pty32", 10) == 0)
                    {
{
return dev_storage + 266;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case '2':
                  if (strncmp (KR_keyword, "/dev/pty22", 10) == 0)
                    {
{
return dev_storage + 256;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case '1':
                  switch (KR_keyword [5])
                    {
                    case 's':
                      if (strncmp (KR_keyword, "/dev/sdy12", 10) == 0)
                        {
{
return dev_storage + 712;

}
                        }
                      else
                        {
{
return	NULL;

}
                        }
                    case 'p':
                      if (strncmp (KR_keyword, "/dev/pty12", 10) == 0)
                        {
{
return dev_storage + 246;

}
                        }
                      else
                        {
{
return	NULL;

}
                        }
                    default:
{
return	NULL;

}
                    }
                default:
{
return	NULL;

}
                }
            case 'x':
              if (strncmp (KR_keyword, "/dev/sdx12", 10) == 0)
                {
{
return dev_storage + 697;

}
                }
              else
                {
{
return	NULL;

}
                }
            case 'w':
              if (strncmp (KR_keyword, "/dev/sdw12", 10) == 0)
                {
{
return dev_storage + 682;

}
                }
              else
                {
{
return	NULL;

}
                }
            case 'v':
              if (strncmp (KR_keyword, "/dev/sdv12", 10) == 0)
                {
{
return dev_storage + 667;

}
                }
              else
                {
{
return	NULL;

}
                }
            case 'u':
              if (strncmp (KR_keyword, "/dev/sdu12", 10) == 0)
                {
{
return dev_storage + 652;

}
                }
              else
                {
{
return	NULL;

}
                }
            case 't':
              switch (KR_keyword [8])
                {
                case '9':
                  if (strncmp (KR_keyword, "/dev/nst92", 10) == 0)
                    {
{
return dev_storage + 196;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case '8':
                  if (strncmp (KR_keyword, "/dev/nst82", 10) == 0)
                    {
{
return dev_storage + 186;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case '7':
                  if (strncmp (KR_keyword, "/dev/nst72", 10) == 0)
                    {
{
return dev_storage + 176;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case '6':
                  if (strncmp (KR_keyword, "/dev/nst62", 10) == 0)
                    {
{
return dev_storage + 166;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case '5':
                  if (strncmp (KR_keyword, "/dev/nst52", 10) == 0)
                    {
{
return dev_storage + 156;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case '4':
                  if (strncmp (KR_keyword, "/dev/nst42", 10) == 0)
                    {
{
return dev_storage + 146;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case '3':
                  if (strncmp (KR_keyword, "/dev/nst32", 10) == 0)
                    {
{
return dev_storage + 136;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case '2':
                  if (strncmp (KR_keyword, "/dev/nst22", 10) == 0)
                    {
{
return dev_storage + 126;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case '1':
                  switch (KR_keyword [5])
                    {
                    case 's':
                      if (strncmp (KR_keyword, "/dev/sdt12", 10) == 0)
                        {
{
return dev_storage + 637;

}
                        }
                      else
                        {
{
return	NULL;

}
                        }
                    case 'n':
                      if (strncmp (KR_keyword, "/dev/nst12", 10) == 0)
                        {
{
return dev_storage + 116;

}
                        }
                      else
                        {
{
return	NULL;

}
                        }
                    default:
{
return	NULL;

}
                    }
                default:
{
return	NULL;

}
                }
            case 's':
              if (strncmp (KR_keyword, "/dev/sds12", 10) == 0)
                {
{
return dev_storage + 622;

}
                }
              else
                {
{
return	NULL;

}
                }
            case 'r':
              if (strncmp (KR_keyword, "/dev/sdr12", 10) == 0)
                {
{
return dev_storage + 607;

}
                }
              else
                {
{
return	NULL;

}
                }
            case 'q':
              if (strncmp (KR_keyword, "/dev/sdq12", 10) == 0)
                {
{
return dev_storage + 592;

}
                }
              else
                {
{
return	NULL;

}
                }
            case 'p':
              if (strncmp (KR_keyword, "/dev/sdp12", 10) == 0)
                {
{
return dev_storage + 577;

}
                }
              else
                {
{
return	NULL;

}
                }
            case 'o':
              if (strncmp (KR_keyword, "/dev/sdo12", 10) == 0)
                {
{
return dev_storage + 562;

}
                }
              else
                {
{
return	NULL;

}
                }
            case 'n':
              switch (KR_keyword [5])
                {
                case 's':
                  if (strncmp (KR_keyword, "/dev/sdn12", 10) == 0)
                    {
{
return dev_storage + 547;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'c':
                  if (strncmp (KR_keyword, "/dev/cons2", 10) == 0)
                    {
{
return dev_storage + 22;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                default:
{
return	NULL;

}
                }
            case 'm':
              switch (KR_keyword [5])
                {
                case 's':
                  if (strncmp (KR_keyword, "/dev/sdm12", 10) == 0)
                    {
{
return dev_storage + 532;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'c':
                  if (strncmp (KR_keyword, "/dev/com12", 10) == 0)
                    {
{
return dev_storage + 13;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                default:
{
return	NULL;

}
                }
            case 'l':
              if (strncmp (KR_keyword, "/dev/sdl12", 10) == 0)
                {
{
return dev_storage + 517;

}
                }
              else
                {
{
return	NULL;

}
                }
            case 'k':
              if (strncmp (KR_keyword, "/dev/sdk12", 10) == 0)
                {
{
return dev_storage + 502;

}
                }
              else
                {
{
return	NULL;

}
                }
            case 'j':
              if (strncmp (KR_keyword, "/dev/sdj12", 10) == 0)
                {
{
return dev_storage + 487;

}
                }
              else
                {
{
return	NULL;

}
                }
            case 'i':
              if (strncmp (KR_keyword, "/dev/sdi12", 10) == 0)
                {
{
return dev_storage + 472;

}
                }
              else
                {
{
return	NULL;

}
                }
            case 'h':
              if (strncmp (KR_keyword, "/dev/sdh12", 10) == 0)
                {
{
return dev_storage + 457;

}
                }
              else
                {
{
return	NULL;

}
                }
            case 'g':
              if (strncmp (KR_keyword, "/dev/sdg12", 10) == 0)
                {
{
return dev_storage + 442;

}
                }
              else
                {
{
return	NULL;

}
                }
            case 'f':
              if (strncmp (KR_keyword, "/dev/sdf12", 10) == 0)
                {
{
return dev_storage + 427;

}
                }
              else
                {
{
return	NULL;

}
                }
            case 'e':
              if (strncmp (KR_keyword, "/dev/sde12", 10) == 0)
                {
{
return dev_storage + 412;

}
                }
              else
                {
{
return	NULL;

}
                }
            case 'd':
              switch (KR_keyword [8])
                {
                case 'x':
                  if (strncmp (KR_keyword, "/dev/sddx2", 10) == 0)
                    {
{
return dev_storage + 2349;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'w':
                  if (strncmp (KR_keyword, "/dev/sddw2", 10) == 0)
                    {
{
return dev_storage + 2334;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'v':
                  if (strncmp (KR_keyword, "/dev/sddv2", 10) == 0)
                    {
{
return dev_storage + 2319;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'u':
                  if (strncmp (KR_keyword, "/dev/sddu2", 10) == 0)
                    {
{
return dev_storage + 2304;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 't':
                  if (strncmp (KR_keyword, "/dev/sddt2", 10) == 0)
                    {
{
return dev_storage + 2289;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 's':
                  if (strncmp (KR_keyword, "/dev/sdds2", 10) == 0)
                    {
{
return dev_storage + 2274;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'r':
                  if (strncmp (KR_keyword, "/dev/sddr2", 10) == 0)
                    {
{
return dev_storage + 2259;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'q':
                  if (strncmp (KR_keyword, "/dev/sddq2", 10) == 0)
                    {
{
return dev_storage + 2244;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'p':
                  if (strncmp (KR_keyword, "/dev/sddp2", 10) == 0)
                    {
{
return dev_storage + 2229;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'o':
                  if (strncmp (KR_keyword, "/dev/sddo2", 10) == 0)
                    {
{
return dev_storage + 2214;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'n':
                  if (strncmp (KR_keyword, "/dev/sddn2", 10) == 0)
                    {
{
return dev_storage + 2199;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'm':
                  if (strncmp (KR_keyword, "/dev/sddm2", 10) == 0)
                    {
{
return dev_storage + 2184;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'l':
                  if (strncmp (KR_keyword, "/dev/sddl2", 10) == 0)
                    {
{
return dev_storage + 2169;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'k':
                  if (strncmp (KR_keyword, "/dev/sddk2", 10) == 0)
                    {
{
return dev_storage + 2154;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'j':
                  if (strncmp (KR_keyword, "/dev/sddj2", 10) == 0)
                    {
{
return dev_storage + 2139;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'i':
                  if (strncmp (KR_keyword, "/dev/sddi2", 10) == 0)
                    {
{
return dev_storage + 2124;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'h':
                  if (strncmp (KR_keyword, "/dev/sddh2", 10) == 0)
                    {
{
return dev_storage + 2109;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'g':
                  if (strncmp (KR_keyword, "/dev/sddg2", 10) == 0)
                    {
{
return dev_storage + 2094;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'f':
                  if (strncmp (KR_keyword, "/dev/sddf2", 10) == 0)
                    {
{
return dev_storage + 2079;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'e':
                  if (strncmp (KR_keyword, "/dev/sdde2", 10) == 0)
                    {
{
return dev_storage + 2064;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'd':
                  if (strncmp (KR_keyword, "/dev/sddd2", 10) == 0)
                    {
{
return dev_storage + 2049;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'c':
                  if (strncmp (KR_keyword, "/dev/sddc2", 10) == 0)
                    {
{
return dev_storage + 2034;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'b':
                  if (strncmp (KR_keyword, "/dev/sddb2", 10) == 0)
                    {
{
return dev_storage + 2019;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'a':
                  if (strncmp (KR_keyword, "/dev/sdda2", 10) == 0)
                    {
{
return dev_storage + 2004;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case '1':
                  switch (KR_keyword [6])
                    {
                    case 'd':
                      if (strncmp (KR_keyword, "/dev/sdd12", 10) == 0)
                        {
{
return dev_storage + 397;

}
                        }
                      else
                        {
{
return	NULL;

}
                        }
                    case 'c':
                      if (strncmp (KR_keyword, "/dev/scd12", 10) == 0)
                        {
{
return dev_storage + 311;

}
                        }
                      else
                        {
{
return	NULL;

}
                        }
                    default:
{
return	NULL;

}
                    }
                default:
{
return	NULL;

}
                }
            case 'c':
              switch (KR_keyword [8])
                {
                case 'z':
                  if (strncmp (KR_keyword, "/dev/sdcz2", 10) == 0)
                    {
{
return dev_storage + 1965;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'y':
                  if (strncmp (KR_keyword, "/dev/sdcy2", 10) == 0)
                    {
{
return dev_storage + 1950;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'x':
                  if (strncmp (KR_keyword, "/dev/sdcx2", 10) == 0)
                    {
{
return dev_storage + 1935;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'w':
                  if (strncmp (KR_keyword, "/dev/sdcw2", 10) == 0)
                    {
{
return dev_storage + 1920;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'v':
                  if (strncmp (KR_keyword, "/dev/sdcv2", 10) == 0)
                    {
{
return dev_storage + 1905;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'u':
                  if (strncmp (KR_keyword, "/dev/sdcu2", 10) == 0)
                    {
{
return dev_storage + 1890;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 't':
                  if (strncmp (KR_keyword, "/dev/sdct2", 10) == 0)
                    {
{
return dev_storage + 1875;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 's':
                  if (strncmp (KR_keyword, "/dev/sdcs2", 10) == 0)
                    {
{
return dev_storage + 1860;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'r':
                  if (strncmp (KR_keyword, "/dev/sdcr2", 10) == 0)
                    {
{
return dev_storage + 1845;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'q':
                  if (strncmp (KR_keyword, "/dev/sdcq2", 10) == 0)
                    {
{
return dev_storage + 1830;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'p':
                  if (strncmp (KR_keyword, "/dev/sdcp2", 10) == 0)
                    {
{
return dev_storage + 1815;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'o':
                  if (strncmp (KR_keyword, "/dev/sdco2", 10) == 0)
                    {
{
return dev_storage + 1800;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'n':
                  if (strncmp (KR_keyword, "/dev/sdcn2", 10) == 0)
                    {
{
return dev_storage + 1785;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'm':
                  if (strncmp (KR_keyword, "/dev/sdcm2", 10) == 0)
                    {
{
return dev_storage + 1770;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'l':
                  if (strncmp (KR_keyword, "/dev/sdcl2", 10) == 0)
                    {
{
return dev_storage + 1755;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'k':
                  if (strncmp (KR_keyword, "/dev/sdck2", 10) == 0)
                    {
{
return dev_storage + 1740;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'j':
                  if (strncmp (KR_keyword, "/dev/sdcj2", 10) == 0)
                    {
{
return dev_storage + 1725;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'i':
                  if (strncmp (KR_keyword, "/dev/sdci2", 10) == 0)
                    {
{
return dev_storage + 1710;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'h':
                  if (strncmp (KR_keyword, "/dev/sdch2", 10) == 0)
                    {
{
return dev_storage + 1695;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'g':
                  if (strncmp (KR_keyword, "/dev/sdcg2", 10) == 0)
                    {
{
return dev_storage + 1680;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'f':
                  if (strncmp (KR_keyword, "/dev/sdcf2", 10) == 0)
                    {
{
return dev_storage + 1665;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'e':
                  if (strncmp (KR_keyword, "/dev/sdce2", 10) == 0)
                    {
{
return dev_storage + 1650;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'd':
                  if (strncmp (KR_keyword, "/dev/sdcd2", 10) == 0)
                    {
{
return dev_storage + 1635;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'c':
                  if (strncmp (KR_keyword, "/dev/sdcc2", 10) == 0)
                    {
{
return dev_storage + 1620;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'b':
                  if (strncmp (KR_keyword, "/dev/sdcb2", 10) == 0)
                    {
{
return dev_storage + 1605;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'a':
                  if (strncmp (KR_keyword, "/dev/sdca2", 10) == 0)
                    {
{
return dev_storage + 1590;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case '1':
                  if (strncmp (KR_keyword, "/dev/sdc12", 10) == 0)
                    {
{
return dev_storage + 382;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                default:
{
return	NULL;

}
                }
            case 'b':
              switch (KR_keyword [8])
                {
                case 'z':
                  if (strncmp (KR_keyword, "/dev/sdbz2", 10) == 0)
                    {
{
return dev_storage + 1549;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'y':
                  if (strncmp (KR_keyword, "/dev/sdby2", 10) == 0)
                    {
{
return dev_storage + 1534;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'x':
                  if (strncmp (KR_keyword, "/dev/sdbx2", 10) == 0)
                    {
{
return dev_storage + 1519;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'w':
                  if (strncmp (KR_keyword, "/dev/sdbw2", 10) == 0)
                    {
{
return dev_storage + 1504;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'v':
                  if (strncmp (KR_keyword, "/dev/sdbv2", 10) == 0)
                    {
{
return dev_storage + 1489;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'u':
                  if (strncmp (KR_keyword, "/dev/sdbu2", 10) == 0)
                    {
{
return dev_storage + 1474;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 't':
                  if (strncmp (KR_keyword, "/dev/sdbt2", 10) == 0)
                    {
{
return dev_storage + 1459;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 's':
                  if (strncmp (KR_keyword, "/dev/sdbs2", 10) == 0)
                    {
{
return dev_storage + 1444;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'r':
                  if (strncmp (KR_keyword, "/dev/sdbr2", 10) == 0)
                    {
{
return dev_storage + 1429;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'q':
                  if (strncmp (KR_keyword, "/dev/sdbq2", 10) == 0)
                    {
{
return dev_storage + 1414;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'p':
                  if (strncmp (KR_keyword, "/dev/sdbp2", 10) == 0)
                    {
{
return dev_storage + 1399;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'o':
                  if (strncmp (KR_keyword, "/dev/sdbo2", 10) == 0)
                    {
{
return dev_storage + 1384;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'n':
                  if (strncmp (KR_keyword, "/dev/sdbn2", 10) == 0)
                    {
{
return dev_storage + 1369;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'm':
                  if (strncmp (KR_keyword, "/dev/sdbm2", 10) == 0)
                    {
{
return dev_storage + 1354;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'l':
                  if (strncmp (KR_keyword, "/dev/sdbl2", 10) == 0)
                    {
{
return dev_storage + 1339;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'k':
                  if (strncmp (KR_keyword, "/dev/sdbk2", 10) == 0)
                    {
{
return dev_storage + 1324;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'j':
                  if (strncmp (KR_keyword, "/dev/sdbj2", 10) == 0)
                    {
{
return dev_storage + 1309;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'i':
                  if (strncmp (KR_keyword, "/dev/sdbi2", 10) == 0)
                    {
{
return dev_storage + 1294;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'h':
                  if (strncmp (KR_keyword, "/dev/sdbh2", 10) == 0)
                    {
{
return dev_storage + 1279;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'g':
                  if (strncmp (KR_keyword, "/dev/sdbg2", 10) == 0)
                    {
{
return dev_storage + 1264;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'f':
                  if (strncmp (KR_keyword, "/dev/sdbf2", 10) == 0)
                    {
{
return dev_storage + 1249;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'e':
                  if (strncmp (KR_keyword, "/dev/sdbe2", 10) == 0)
                    {
{
return dev_storage + 1234;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'd':
                  if (strncmp (KR_keyword, "/dev/sdbd2", 10) == 0)
                    {
{
return dev_storage + 1219;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'c':
                  if (strncmp (KR_keyword, "/dev/sdbc2", 10) == 0)
                    {
{
return dev_storage + 1204;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'b':
                  if (strncmp (KR_keyword, "/dev/sdbb2", 10) == 0)
                    {
{
return dev_storage + 1189;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'a':
                  if (strncmp (KR_keyword, "/dev/sdba2", 10) == 0)
                    {
{
return dev_storage + 1174;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case '1':
                  if (strncmp (KR_keyword, "/dev/sdb12", 10) == 0)
                    {
{
return dev_storage + 367;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                default:
{
return	NULL;

}
                }
            case 'a':
              switch (KR_keyword [8])
                {
                case 'z':
                  if (strncmp (KR_keyword, "/dev/sdaz2", 10) == 0)
                    {
{
return dev_storage + 1133;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'y':
                  if (strncmp (KR_keyword, "/dev/sday2", 10) == 0)
                    {
{
return dev_storage + 1118;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'x':
                  if (strncmp (KR_keyword, "/dev/sdax2", 10) == 0)
                    {
{
return dev_storage + 1103;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'w':
                  if (strncmp (KR_keyword, "/dev/sdaw2", 10) == 0)
                    {
{
return dev_storage + 1088;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'v':
                  if (strncmp (KR_keyword, "/dev/sdav2", 10) == 0)
                    {
{
return dev_storage + 1073;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'u':
                  if (strncmp (KR_keyword, "/dev/sdau2", 10) == 0)
                    {
{
return dev_storage + 1058;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 't':
                  if (strncmp (KR_keyword, "/dev/sdat2", 10) == 0)
                    {
{
return dev_storage + 1043;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 's':
                  if (strncmp (KR_keyword, "/dev/sdas2", 10) == 0)
                    {
{
return dev_storage + 1028;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'r':
                  if (strncmp (KR_keyword, "/dev/sdar2", 10) == 0)
                    {
{
return dev_storage + 1013;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'q':
                  if (strncmp (KR_keyword, "/dev/sdaq2", 10) == 0)
                    {
{
return dev_storage + 998;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'p':
                  if (strncmp (KR_keyword, "/dev/sdap2", 10) == 0)
                    {
{
return dev_storage + 983;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'o':
                  if (strncmp (KR_keyword, "/dev/sdao2", 10) == 0)
                    {
{
return dev_storage + 968;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'n':
                  if (strncmp (KR_keyword, "/dev/sdan2", 10) == 0)
                    {
{
return dev_storage + 953;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'm':
                  if (strncmp (KR_keyword, "/dev/sdam2", 10) == 0)
                    {
{
return dev_storage + 938;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'l':
                  if (strncmp (KR_keyword, "/dev/sdal2", 10) == 0)
                    {
{
return dev_storage + 923;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'k':
                  if (strncmp (KR_keyword, "/dev/sdak2", 10) == 0)
                    {
{
return dev_storage + 908;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'j':
                  if (strncmp (KR_keyword, "/dev/sdaj2", 10) == 0)
                    {
{
return dev_storage + 893;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'i':
                  if (strncmp (KR_keyword, "/dev/sdai2", 10) == 0)
                    {
{
return dev_storage + 878;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'h':
                  if (strncmp (KR_keyword, "/dev/sdah2", 10) == 0)
                    {
{
return dev_storage + 863;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'g':
                  if (strncmp (KR_keyword, "/dev/sdag2", 10) == 0)
                    {
{
return dev_storage + 848;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'f':
                  if (strncmp (KR_keyword, "/dev/sdaf2", 10) == 0)
                    {
{
return dev_storage + 833;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'e':
                  if (strncmp (KR_keyword, "/dev/sdae2", 10) == 0)
                    {
{
return dev_storage + 818;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'd':
                  if (strncmp (KR_keyword, "/dev/sdad2", 10) == 0)
                    {
{
return dev_storage + 803;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'c':
                  if (strncmp (KR_keyword, "/dev/sdac2", 10) == 0)
                    {
{
return dev_storage + 788;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'b':
                  if (strncmp (KR_keyword, "/dev/sdab2", 10) == 0)
                    {
{
return dev_storage + 773;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'a':
                  if (strncmp (KR_keyword, "/dev/sdaa2", 10) == 0)
                    {
{
return dev_storage + 758;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case '1':
                  if (strncmp (KR_keyword, "/dev/sda12", 10) == 0)
                    {
{
return dev_storage + 352;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                default:
{
return	NULL;

}
                }
            case '1':
              switch (KR_keyword [8])
                {
                case '2':
                  if (strncmp (KR_keyword, "/dev/st122", 10) == 0)
                    {
{
return dev_storage + 2501;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case '1':
                  if (strncmp (KR_keyword, "/dev/st112", 10) == 0)
                    {
{
return dev_storage + 2491;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case '0':
                  if (strncmp (KR_keyword, "/dev/st102", 10) == 0)
                    {
{
return dev_storage + 2481;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                default:
{
return	NULL;

}
                }
            default:
{
return	NULL;

}
            }
        case '1':
          switch (KR_keyword [7])
            {
            case 'z':
              if (strncmp (KR_keyword, "/dev/sdz11", 10) == 0)
                {
{
return dev_storage + 726;

}
                }
              else
                {
{
return	NULL;

}
                }
            case 'y':
              switch (KR_keyword [8])
                {
                case 'S':
                  if (strncmp (KR_keyword, "/dev/ttyS1", 10) == 0)
                    {
{
return dev_storage + 2509;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case '6':
                  if (strncmp (KR_keyword, "/dev/pty61", 10) == 0)
                    {
{
return dev_storage + 295;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case '5':
                  if (strncmp (KR_keyword, "/dev/pty51", 10) == 0)
                    {
{
return dev_storage + 285;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case '4':
                  if (strncmp (KR_keyword, "/dev/pty41", 10) == 0)
                    {
{
return dev_storage + 275;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case '3':
                  if (strncmp (KR_keyword, "/dev/pty31", 10) == 0)
                    {
{
return dev_storage + 265;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case '2':
                  if (strncmp (KR_keyword, "/dev/pty21", 10) == 0)
                    {
{
return dev_storage + 255;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case '1':
                  switch (KR_keyword [5])
                    {
                    case 's':
                      if (strncmp (KR_keyword, "/dev/sdy11", 10) == 0)
                        {
{
return dev_storage + 711;

}
                        }
                      else
                        {
{
return	NULL;

}
                        }
                    case 'p':
                      if (strncmp (KR_keyword, "/dev/pty11", 10) == 0)
                        {
{
return dev_storage + 245;

}
                        }
                      else
                        {
{
return	NULL;

}
                        }
                    default:
{
return	NULL;

}
                    }
                default:
{
return	NULL;

}
                }
            case 'x':
              if (strncmp (KR_keyword, "/dev/sdx11", 10) == 0)
                {
{
return dev_storage + 696;

}
                }
              else
                {
{
return	NULL;

}
                }
            case 'w':
              if (strncmp (KR_keyword, "/dev/sdw11", 10) == 0)
                {
{
return dev_storage + 681;

}
                }
              else
                {
{
return	NULL;

}
                }
            case 'v':
              if (strncmp (KR_keyword, "/dev/sdv11", 10) == 0)
                {
{
return dev_storage + 666;

}
                }
              else
                {
{
return	NULL;

}
                }
            case 'u':
              if (strncmp (KR_keyword, "/dev/sdu11", 10) == 0)
                {
{
return dev_storage + 651;

}
                }
              else
                {
{
return	NULL;

}
                }
            case 't':
              switch (KR_keyword [8])
                {
                case '9':
                  if (strncmp (KR_keyword, "/dev/nst91", 10) == 0)
                    {
{
return dev_storage + 195;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case '8':
                  if (strncmp (KR_keyword, "/dev/nst81", 10) == 0)
                    {
{
return dev_storage + 185;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case '7':
                  if (strncmp (KR_keyword, "/dev/nst71", 10) == 0)
                    {
{
return dev_storage + 175;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case '6':
                  if (strncmp (KR_keyword, "/dev/nst61", 10) == 0)
                    {
{
return dev_storage + 165;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case '5':
                  if (strncmp (KR_keyword, "/dev/nst51", 10) == 0)
                    {
{
return dev_storage + 155;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case '4':
                  if (strncmp (KR_keyword, "/dev/nst41", 10) == 0)
                    {
{
return dev_storage + 145;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case '3':
                  if (strncmp (KR_keyword, "/dev/nst31", 10) == 0)
                    {
{
return dev_storage + 135;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case '2':
                  if (strncmp (KR_keyword, "/dev/nst21", 10) == 0)
                    {
{
return dev_storage + 125;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case '1':
                  switch (KR_keyword [5])
                    {
                    case 's':
                      if (strncmp (KR_keyword, "/dev/sdt11", 10) == 0)
                        {
{
return dev_storage + 636;

}
                        }
                      else
                        {
{
return	NULL;

}
                        }
                    case 'n':
                      if (strncmp (KR_keyword, "/dev/nst11", 10) == 0)
                        {
{
return dev_storage + 115;

}
                        }
                      else
                        {
{
return	NULL;

}
                        }
                    default:
{
return	NULL;

}
                    }
                default:
{
return	NULL;

}
                }
            case 's':
              if (strncmp (KR_keyword, "/dev/sds11", 10) == 0)
                {
{
return dev_storage + 621;

}
                }
              else
                {
{
return	NULL;

}
                }
            case 'r':
              if (strncmp (KR_keyword, "/dev/sdr11", 10) == 0)
                {
{
return dev_storage + 606;

}
                }
              else
                {
{
return	NULL;

}
                }
            case 'q':
              if (strncmp (KR_keyword, "/dev/sdq11", 10) == 0)
                {
{
return dev_storage + 591;

}
                }
              else
                {
{
return	NULL;

}
                }
            case 'p':
              if (strncmp (KR_keyword, "/dev/sdp11", 10) == 0)
                {
{
return dev_storage + 576;

}
                }
              else
                {
{
return	NULL;

}
                }
            case 'o':
              if (strncmp (KR_keyword, "/dev/sdo11", 10) == 0)
                {
{
return dev_storage + 561;

}
                }
              else
                {
{
return	NULL;

}
                }
            case 'n':
              switch (KR_keyword [5])
                {
                case 's':
                  if (strncmp (KR_keyword, "/dev/sdn11", 10) == 0)
                    {
{
return dev_storage + 546;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'c':
                  if (strncmp (KR_keyword, "/dev/cons1", 10) == 0)
                    {
{
return dev_storage + 21;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                default:
{
return	NULL;

}
                }
            case 'm':
              switch (KR_keyword [5])
                {
                case 's':
                  if (strncmp (KR_keyword, "/dev/sdm11", 10) == 0)
                    {
{
return dev_storage + 531;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'c':
                  if (strncmp (KR_keyword, "/dev/com11", 10) == 0)
                    {
{
return dev_storage + 12;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                default:
{
return	NULL;

}
                }
            case 'l':
              if (strncmp (KR_keyword, "/dev/sdl11", 10) == 0)
                {
{
return dev_storage + 516;

}
                }
              else
                {
{
return	NULL;

}
                }
            case 'k':
              if (strncmp (KR_keyword, "/dev/sdk11", 10) == 0)
                {
{
return dev_storage + 501;

}
                }
              else
                {
{
return	NULL;

}
                }
            case 'j':
              if (strncmp (KR_keyword, "/dev/sdj11", 10) == 0)
                {
{
return dev_storage + 486;

}
                }
              else
                {
{
return	NULL;

}
                }
            case 'i':
              if (strncmp (KR_keyword, "/dev/sdi11", 10) == 0)
                {
{
return dev_storage + 471;

}
                }
              else
                {
{
return	NULL;

}
                }
            case 'h':
              if (strncmp (KR_keyword, "/dev/sdh11", 10) == 0)
                {
{
return dev_storage + 456;

}
                }
              else
                {
{
return	NULL;

}
                }
            case 'g':
              if (strncmp (KR_keyword, "/dev/sdg11", 10) == 0)
                {
{
return dev_storage + 441;

}
                }
              else
                {
{
return	NULL;

}
                }
            case 'f':
              if (strncmp (KR_keyword, "/dev/sdf11", 10) == 0)
                {
{
return dev_storage + 426;

}
                }
              else
                {
{
return	NULL;

}
                }
            case 'e':
              if (strncmp (KR_keyword, "/dev/sde11", 10) == 0)
                {
{
return dev_storage + 411;

}
                }
              else
                {
{
return	NULL;

}
                }
            case 'd':
              switch (KR_keyword [8])
                {
                case 'x':
                  if (strncmp (KR_keyword, "/dev/sddx1", 10) == 0)
                    {
{
return dev_storage + 2348;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'w':
                  if (strncmp (KR_keyword, "/dev/sddw1", 10) == 0)
                    {
{
return dev_storage + 2333;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'v':
                  if (strncmp (KR_keyword, "/dev/sddv1", 10) == 0)
                    {
{
return dev_storage + 2318;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'u':
                  if (strncmp (KR_keyword, "/dev/sddu1", 10) == 0)
                    {
{
return dev_storage + 2303;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 't':
                  if (strncmp (KR_keyword, "/dev/sddt1", 10) == 0)
                    {
{
return dev_storage + 2288;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 's':
                  if (strncmp (KR_keyword, "/dev/sdds1", 10) == 0)
                    {
{
return dev_storage + 2273;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'r':
                  if (strncmp (KR_keyword, "/dev/sddr1", 10) == 0)
                    {
{
return dev_storage + 2258;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'q':
                  if (strncmp (KR_keyword, "/dev/sddq1", 10) == 0)
                    {
{
return dev_storage + 2243;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'p':
                  if (strncmp (KR_keyword, "/dev/sddp1", 10) == 0)
                    {
{
return dev_storage + 2228;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'o':
                  if (strncmp (KR_keyword, "/dev/sddo1", 10) == 0)
                    {
{
return dev_storage + 2213;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'n':
                  if (strncmp (KR_keyword, "/dev/sddn1", 10) == 0)
                    {
{
return dev_storage + 2198;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'm':
                  if (strncmp (KR_keyword, "/dev/sddm1", 10) == 0)
                    {
{
return dev_storage + 2183;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'l':
                  if (strncmp (KR_keyword, "/dev/sddl1", 10) == 0)
                    {
{
return dev_storage + 2168;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'k':
                  if (strncmp (KR_keyword, "/dev/sddk1", 10) == 0)
                    {
{
return dev_storage + 2153;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'j':
                  if (strncmp (KR_keyword, "/dev/sddj1", 10) == 0)
                    {
{
return dev_storage + 2138;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'i':
                  if (strncmp (KR_keyword, "/dev/sddi1", 10) == 0)
                    {
{
return dev_storage + 2123;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'h':
                  if (strncmp (KR_keyword, "/dev/sddh1", 10) == 0)
                    {
{
return dev_storage + 2108;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'g':
                  if (strncmp (KR_keyword, "/dev/sddg1", 10) == 0)
                    {
{
return dev_storage + 2093;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'f':
                  if (strncmp (KR_keyword, "/dev/sddf1", 10) == 0)
                    {
{
return dev_storage + 2078;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'e':
                  if (strncmp (KR_keyword, "/dev/sdde1", 10) == 0)
                    {
{
return dev_storage + 2063;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'd':
                  if (strncmp (KR_keyword, "/dev/sddd1", 10) == 0)
                    {
{
return dev_storage + 2048;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'c':
                  if (strncmp (KR_keyword, "/dev/sddc1", 10) == 0)
                    {
{
return dev_storage + 2033;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'b':
                  if (strncmp (KR_keyword, "/dev/sddb1", 10) == 0)
                    {
{
return dev_storage + 2018;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'a':
                  if (strncmp (KR_keyword, "/dev/sdda1", 10) == 0)
                    {
{
return dev_storage + 2003;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case '1':
                  switch (KR_keyword [6])
                    {
                    case 'd':
                      if (strncmp (KR_keyword, "/dev/sdd11", 10) == 0)
                        {
{
return dev_storage + 396;

}
                        }
                      else
                        {
{
return	NULL;

}
                        }
                    case 'c':
                      if (strncmp (KR_keyword, "/dev/scd11", 10) == 0)
                        {
{
return dev_storage + 310;

}
                        }
                      else
                        {
{
return	NULL;

}
                        }
                    default:
{
return	NULL;

}
                    }
                default:
{
return	NULL;

}
                }
            case 'c':
              switch (KR_keyword [8])
                {
                case 'z':
                  if (strncmp (KR_keyword, "/dev/sdcz1", 10) == 0)
                    {
{
return dev_storage + 1964;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'y':
                  if (strncmp (KR_keyword, "/dev/sdcy1", 10) == 0)
                    {
{
return dev_storage + 1949;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'x':
                  if (strncmp (KR_keyword, "/dev/sdcx1", 10) == 0)
                    {
{
return dev_storage + 1934;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'w':
                  if (strncmp (KR_keyword, "/dev/sdcw1", 10) == 0)
                    {
{
return dev_storage + 1919;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'v':
                  if (strncmp (KR_keyword, "/dev/sdcv1", 10) == 0)
                    {
{
return dev_storage + 1904;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'u':
                  if (strncmp (KR_keyword, "/dev/sdcu1", 10) == 0)
                    {
{
return dev_storage + 1889;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 't':
                  if (strncmp (KR_keyword, "/dev/sdct1", 10) == 0)
                    {
{
return dev_storage + 1874;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 's':
                  if (strncmp (KR_keyword, "/dev/sdcs1", 10) == 0)
                    {
{
return dev_storage + 1859;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'r':
                  if (strncmp (KR_keyword, "/dev/sdcr1", 10) == 0)
                    {
{
return dev_storage + 1844;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'q':
                  if (strncmp (KR_keyword, "/dev/sdcq1", 10) == 0)
                    {
{
return dev_storage + 1829;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'p':
                  if (strncmp (KR_keyword, "/dev/sdcp1", 10) == 0)
                    {
{
return dev_storage + 1814;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'o':
                  if (strncmp (KR_keyword, "/dev/sdco1", 10) == 0)
                    {
{
return dev_storage + 1799;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'n':
                  if (strncmp (KR_keyword, "/dev/sdcn1", 10) == 0)
                    {
{
return dev_storage + 1784;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'm':
                  if (strncmp (KR_keyword, "/dev/sdcm1", 10) == 0)
                    {
{
return dev_storage + 1769;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'l':
                  if (strncmp (KR_keyword, "/dev/sdcl1", 10) == 0)
                    {
{
return dev_storage + 1754;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'k':
                  if (strncmp (KR_keyword, "/dev/sdck1", 10) == 0)
                    {
{
return dev_storage + 1739;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'j':
                  if (strncmp (KR_keyword, "/dev/sdcj1", 10) == 0)
                    {
{
return dev_storage + 1724;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'i':
                  if (strncmp (KR_keyword, "/dev/sdci1", 10) == 0)
                    {
{
return dev_storage + 1709;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'h':
                  if (strncmp (KR_keyword, "/dev/sdch1", 10) == 0)
                    {
{
return dev_storage + 1694;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'g':
                  if (strncmp (KR_keyword, "/dev/sdcg1", 10) == 0)
                    {
{
return dev_storage + 1679;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'f':
                  if (strncmp (KR_keyword, "/dev/sdcf1", 10) == 0)
                    {
{
return dev_storage + 1664;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'e':
                  if (strncmp (KR_keyword, "/dev/sdce1", 10) == 0)
                    {
{
return dev_storage + 1649;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'd':
                  if (strncmp (KR_keyword, "/dev/sdcd1", 10) == 0)
                    {
{
return dev_storage + 1634;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'c':
                  if (strncmp (KR_keyword, "/dev/sdcc1", 10) == 0)
                    {
{
return dev_storage + 1619;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'b':
                  if (strncmp (KR_keyword, "/dev/sdcb1", 10) == 0)
                    {
{
return dev_storage + 1604;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'a':
                  if (strncmp (KR_keyword, "/dev/sdca1", 10) == 0)
                    {
{
return dev_storage + 1589;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case '1':
                  if (strncmp (KR_keyword, "/dev/sdc11", 10) == 0)
                    {
{
return dev_storage + 381;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                default:
{
return	NULL;

}
                }
            case 'b':
              switch (KR_keyword [8])
                {
                case 'z':
                  if (strncmp (KR_keyword, "/dev/sdbz1", 10) == 0)
                    {
{
return dev_storage + 1548;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'y':
                  if (strncmp (KR_keyword, "/dev/sdby1", 10) == 0)
                    {
{
return dev_storage + 1533;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'x':
                  if (strncmp (KR_keyword, "/dev/sdbx1", 10) == 0)
                    {
{
return dev_storage + 1518;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'w':
                  if (strncmp (KR_keyword, "/dev/sdbw1", 10) == 0)
                    {
{
return dev_storage + 1503;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'v':
                  if (strncmp (KR_keyword, "/dev/sdbv1", 10) == 0)
                    {
{
return dev_storage + 1488;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'u':
                  if (strncmp (KR_keyword, "/dev/sdbu1", 10) == 0)
                    {
{
return dev_storage + 1473;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 't':
                  if (strncmp (KR_keyword, "/dev/sdbt1", 10) == 0)
                    {
{
return dev_storage + 1458;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 's':
                  if (strncmp (KR_keyword, "/dev/sdbs1", 10) == 0)
                    {
{
return dev_storage + 1443;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'r':
                  if (strncmp (KR_keyword, "/dev/sdbr1", 10) == 0)
                    {
{
return dev_storage + 1428;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'q':
                  if (strncmp (KR_keyword, "/dev/sdbq1", 10) == 0)
                    {
{
return dev_storage + 1413;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'p':
                  if (strncmp (KR_keyword, "/dev/sdbp1", 10) == 0)
                    {
{
return dev_storage + 1398;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'o':
                  if (strncmp (KR_keyword, "/dev/sdbo1", 10) == 0)
                    {
{
return dev_storage + 1383;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'n':
                  if (strncmp (KR_keyword, "/dev/sdbn1", 10) == 0)
                    {
{
return dev_storage + 1368;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'm':
                  if (strncmp (KR_keyword, "/dev/sdbm1", 10) == 0)
                    {
{
return dev_storage + 1353;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'l':
                  if (strncmp (KR_keyword, "/dev/sdbl1", 10) == 0)
                    {
{
return dev_storage + 1338;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'k':
                  if (strncmp (KR_keyword, "/dev/sdbk1", 10) == 0)
                    {
{
return dev_storage + 1323;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'j':
                  if (strncmp (KR_keyword, "/dev/sdbj1", 10) == 0)
                    {
{
return dev_storage + 1308;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'i':
                  if (strncmp (KR_keyword, "/dev/sdbi1", 10) == 0)
                    {
{
return dev_storage + 1293;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'h':
                  if (strncmp (KR_keyword, "/dev/sdbh1", 10) == 0)
                    {
{
return dev_storage + 1278;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'g':
                  if (strncmp (KR_keyword, "/dev/sdbg1", 10) == 0)
                    {
{
return dev_storage + 1263;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'f':
                  if (strncmp (KR_keyword, "/dev/sdbf1", 10) == 0)
                    {
{
return dev_storage + 1248;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'e':
                  if (strncmp (KR_keyword, "/dev/sdbe1", 10) == 0)
                    {
{
return dev_storage + 1233;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'd':
                  if (strncmp (KR_keyword, "/dev/sdbd1", 10) == 0)
                    {
{
return dev_storage + 1218;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'c':
                  if (strncmp (KR_keyword, "/dev/sdbc1", 10) == 0)
                    {
{
return dev_storage + 1203;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'b':
                  if (strncmp (KR_keyword, "/dev/sdbb1", 10) == 0)
                    {
{
return dev_storage + 1188;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'a':
                  if (strncmp (KR_keyword, "/dev/sdba1", 10) == 0)
                    {
{
return dev_storage + 1173;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case '1':
                  if (strncmp (KR_keyword, "/dev/sdb11", 10) == 0)
                    {
{
return dev_storage + 366;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                default:
{
return	NULL;

}
                }
            case 'a':
              switch (KR_keyword [8])
                {
                case 'z':
                  if (strncmp (KR_keyword, "/dev/sdaz1", 10) == 0)
                    {
{
return dev_storage + 1132;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'y':
                  if (strncmp (KR_keyword, "/dev/sday1", 10) == 0)
                    {
{
return dev_storage + 1117;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'x':
                  if (strncmp (KR_keyword, "/dev/sdax1", 10) == 0)
                    {
{
return dev_storage + 1102;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'w':
                  if (strncmp (KR_keyword, "/dev/sdaw1", 10) == 0)
                    {
{
return dev_storage + 1087;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'v':
                  if (strncmp (KR_keyword, "/dev/sdav1", 10) == 0)
                    {
{
return dev_storage + 1072;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'u':
                  if (strncmp (KR_keyword, "/dev/sdau1", 10) == 0)
                    {
{
return dev_storage + 1057;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 't':
                  if (strncmp (KR_keyword, "/dev/sdat1", 10) == 0)
                    {
{
return dev_storage + 1042;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 's':
                  if (strncmp (KR_keyword, "/dev/sdas1", 10) == 0)
                    {
{
return dev_storage + 1027;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'r':
                  if (strncmp (KR_keyword, "/dev/sdar1", 10) == 0)
                    {
{
return dev_storage + 1012;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'q':
                  if (strncmp (KR_keyword, "/dev/sdaq1", 10) == 0)
                    {
{
return dev_storage + 997;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'p':
                  if (strncmp (KR_keyword, "/dev/sdap1", 10) == 0)
                    {
{
return dev_storage + 982;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'o':
                  if (strncmp (KR_keyword, "/dev/sdao1", 10) == 0)
                    {
{
return dev_storage + 967;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'n':
                  if (strncmp (KR_keyword, "/dev/sdan1", 10) == 0)
                    {
{
return dev_storage + 952;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'm':
                  if (strncmp (KR_keyword, "/dev/sdam1", 10) == 0)
                    {
{
return dev_storage + 937;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'l':
                  if (strncmp (KR_keyword, "/dev/sdal1", 10) == 0)
                    {
{
return dev_storage + 922;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'k':
                  if (strncmp (KR_keyword, "/dev/sdak1", 10) == 0)
                    {
{
return dev_storage + 907;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'j':
                  if (strncmp (KR_keyword, "/dev/sdaj1", 10) == 0)
                    {
{
return dev_storage + 892;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'i':
                  if (strncmp (KR_keyword, "/dev/sdai1", 10) == 0)
                    {
{
return dev_storage + 877;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'h':
                  if (strncmp (KR_keyword, "/dev/sdah1", 10) == 0)
                    {
{
return dev_storage + 862;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'g':
                  if (strncmp (KR_keyword, "/dev/sdag1", 10) == 0)
                    {
{
return dev_storage + 847;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'f':
                  if (strncmp (KR_keyword, "/dev/sdaf1", 10) == 0)
                    {
{
return dev_storage + 832;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'e':
                  if (strncmp (KR_keyword, "/dev/sdae1", 10) == 0)
                    {
{
return dev_storage + 817;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'd':
                  if (strncmp (KR_keyword, "/dev/sdad1", 10) == 0)
                    {
{
return dev_storage + 802;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'c':
                  if (strncmp (KR_keyword, "/dev/sdac1", 10) == 0)
                    {
{
return dev_storage + 787;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'b':
                  if (strncmp (KR_keyword, "/dev/sdab1", 10) == 0)
                    {
{
return dev_storage + 772;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'a':
                  if (strncmp (KR_keyword, "/dev/sdaa1", 10) == 0)
                    {
{
return dev_storage + 757;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case '1':
                  if (strncmp (KR_keyword, "/dev/sda11", 10) == 0)
                    {
{
return dev_storage + 351;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                default:
{
return	NULL;

}
                }
            case '1':
              switch (KR_keyword [8])
                {
                case '2':
                  if (strncmp (KR_keyword, "/dev/st121", 10) == 0)
                    {
{
return dev_storage + 2500;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case '1':
                  if (strncmp (KR_keyword, "/dev/st111", 10) == 0)
                    {
{
return dev_storage + 2490;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case '0':
                  if (strncmp (KR_keyword, "/dev/st101", 10) == 0)
                    {
{
return dev_storage + 2480;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                default:
{
return	NULL;

}
                }
            default:
{
return	NULL;

}
            }
        case '0':
          switch (KR_keyword [7])
            {
            case 'z':
              if (strncmp (KR_keyword, "/dev/sdz10", 10) == 0)
                {
{
return dev_storage + 725;

}
                }
              else
                {
{
return	NULL;

}
                }
            case 'y':
              switch (KR_keyword [8])
                {
                case 'S':
                  if (strncmp (KR_keyword, "/dev/ttyS0", 10) == 0)
                    {
{
return dev_storage + 2508;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case '6':
                  if (strncmp (KR_keyword, "/dev/pty60", 10) == 0)
                    {
{
return dev_storage + 294;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case '5':
                  if (strncmp (KR_keyword, "/dev/pty50", 10) == 0)
                    {
{
return dev_storage + 284;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case '4':
                  if (strncmp (KR_keyword, "/dev/pty40", 10) == 0)
                    {
{
return dev_storage + 274;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case '3':
                  if (strncmp (KR_keyword, "/dev/pty30", 10) == 0)
                    {
{
return dev_storage + 264;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case '2':
                  if (strncmp (KR_keyword, "/dev/pty20", 10) == 0)
                    {
{
return dev_storage + 254;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case '1':
                  switch (KR_keyword [5])
                    {
                    case 's':
                      if (strncmp (KR_keyword, "/dev/sdy10", 10) == 0)
                        {
{
return dev_storage + 710;

}
                        }
                      else
                        {
{
return	NULL;

}
                        }
                    case 'p':
                      if (strncmp (KR_keyword, "/dev/pty10", 10) == 0)
                        {
{
return dev_storage + 244;

}
                        }
                      else
                        {
{
return	NULL;

}
                        }
                    default:
{
return	NULL;

}
                    }
                default:
{
return	NULL;

}
                }
            case 'x':
              if (strncmp (KR_keyword, "/dev/sdx10", 10) == 0)
                {
{
return dev_storage + 695;

}
                }
              else
                {
{
return	NULL;

}
                }
            case 'w':
              if (strncmp (KR_keyword, "/dev/sdw10", 10) == 0)
                {
{
return dev_storage + 680;

}
                }
              else
                {
{
return	NULL;

}
                }
            case 'v':
              if (strncmp (KR_keyword, "/dev/sdv10", 10) == 0)
                {
{
return dev_storage + 665;

}
                }
              else
                {
{
return	NULL;

}
                }
            case 'u':
              if (strncmp (KR_keyword, "/dev/sdu10", 10) == 0)
                {
{
return dev_storage + 650;

}
                }
              else
                {
{
return	NULL;

}
                }
            case 't':
              switch (KR_keyword [8])
                {
                case '9':
                  if (strncmp (KR_keyword, "/dev/nst90", 10) == 0)
                    {
{
return dev_storage + 194;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case '8':
                  if (strncmp (KR_keyword, "/dev/nst80", 10) == 0)
                    {
{
return dev_storage + 184;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case '7':
                  if (strncmp (KR_keyword, "/dev/nst70", 10) == 0)
                    {
{
return dev_storage + 174;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case '6':
                  if (strncmp (KR_keyword, "/dev/nst60", 10) == 0)
                    {
{
return dev_storage + 164;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case '5':
                  if (strncmp (KR_keyword, "/dev/nst50", 10) == 0)
                    {
{
return dev_storage + 154;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case '4':
                  if (strncmp (KR_keyword, "/dev/nst40", 10) == 0)
                    {
{
return dev_storage + 144;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case '3':
                  if (strncmp (KR_keyword, "/dev/nst30", 10) == 0)
                    {
{
return dev_storage + 134;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case '2':
                  if (strncmp (KR_keyword, "/dev/nst20", 10) == 0)
                    {
{
return dev_storage + 124;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case '1':
                  switch (KR_keyword [5])
                    {
                    case 's':
                      if (strncmp (KR_keyword, "/dev/sdt10", 10) == 0)
                        {
{
return dev_storage + 635;

}
                        }
                      else
                        {
{
return	NULL;

}
                        }
                    case 'n':
                      if (strncmp (KR_keyword, "/dev/nst10", 10) == 0)
                        {
{
return dev_storage + 114;

}
                        }
                      else
                        {
{
return	NULL;

}
                        }
                    default:
{
return	NULL;

}
                    }
                default:
{
return	NULL;

}
                }
            case 's':
              if (strncmp (KR_keyword, "/dev/sds10", 10) == 0)
                {
{
return dev_storage + 620;

}
                }
              else
                {
{
return	NULL;

}
                }
            case 'r':
              if (strncmp (KR_keyword, "/dev/sdr10", 10) == 0)
                {
{
return dev_storage + 605;

}
                }
              else
                {
{
return	NULL;

}
                }
            case 'q':
              if (strncmp (KR_keyword, "/dev/sdq10", 10) == 0)
                {
{
return dev_storage + 590;

}
                }
              else
                {
{
return	NULL;

}
                }
            case 'p':
              if (strncmp (KR_keyword, "/dev/sdp10", 10) == 0)
                {
{
return dev_storage + 575;

}
                }
              else
                {
{
return	NULL;

}
                }
            case 'o':
              if (strncmp (KR_keyword, "/dev/sdo10", 10) == 0)
                {
{
return dev_storage + 560;

}
                }
              else
                {
{
return	NULL;

}
                }
            case 'n':
              switch (KR_keyword [5])
                {
                case 's':
                  if (strncmp (KR_keyword, "/dev/sdn10", 10) == 0)
                    {
{
return dev_storage + 545;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'c':
                  if (strncmp (KR_keyword, "/dev/cons0", 10) == 0)
                    {
{
return dev_storage + 20;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                default:
{
return	NULL;

}
                }
            case 'm':
              switch (KR_keyword [5])
                {
                case 's':
                  if (strncmp (KR_keyword, "/dev/sdm10", 10) == 0)
                    {
{
return dev_storage + 530;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'c':
                  if (strncmp (KR_keyword, "/dev/com10", 10) == 0)
                    {
{
return dev_storage + 11;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                default:
{
return	NULL;

}
                }
            case 'l':
              if (strncmp (KR_keyword, "/dev/sdl10", 10) == 0)
                {
{
return dev_storage + 515;

}
                }
              else
                {
{
return	NULL;

}
                }
            case 'k':
              if (strncmp (KR_keyword, "/dev/sdk10", 10) == 0)
                {
{
return dev_storage + 500;

}
                }
              else
                {
{
return	NULL;

}
                }
            case 'j':
              if (strncmp (KR_keyword, "/dev/sdj10", 10) == 0)
                {
{
return dev_storage + 485;

}
                }
              else
                {
{
return	NULL;

}
                }
            case 'i':
              if (strncmp (KR_keyword, "/dev/sdi10", 10) == 0)
                {
{
return dev_storage + 470;

}
                }
              else
                {
{
return	NULL;

}
                }
            case 'h':
              if (strncmp (KR_keyword, "/dev/sdh10", 10) == 0)
                {
{
return dev_storage + 455;

}
                }
              else
                {
{
return	NULL;

}
                }
            case 'g':
              if (strncmp (KR_keyword, "/dev/sdg10", 10) == 0)
                {
{
return dev_storage + 440;

}
                }
              else
                {
{
return	NULL;

}
                }
            case 'f':
              if (strncmp (KR_keyword, "/dev/sdf10", 10) == 0)
                {
{
return dev_storage + 425;

}
                }
              else
                {
{
return	NULL;

}
                }
            case 'e':
              if (strncmp (KR_keyword, "/dev/sde10", 10) == 0)
                {
{
return dev_storage + 410;

}
                }
              else
                {
{
return	NULL;

}
                }
            case 'd':
              switch (KR_keyword [6])
                {
                case 'd':
                  if (strncmp (KR_keyword, "/dev/sdd10", 10) == 0)
                    {
{
return dev_storage + 395;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'c':
                  if (strncmp (KR_keyword, "/dev/scd10", 10) == 0)
                    {
{
return dev_storage + 309;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                default:
{
return	NULL;

}
                }
            case 'c':
              if (strncmp (KR_keyword, "/dev/sdc10", 10) == 0)
                {
{
return dev_storage + 380;

}
                }
              else
                {
{
return	NULL;

}
                }
            case 'b':
              if (strncmp (KR_keyword, "/dev/sdb10", 10) == 0)
                {
{
return dev_storage + 365;

}
                }
              else
                {
{
return	NULL;

}
                }
            case 'a':
              if (strncmp (KR_keyword, "/dev/sda10", 10) == 0)
                {
{
return dev_storage + 350;

}
                }
              else
                {
{
return	NULL;

}
                }
            case '1':
              switch (KR_keyword [8])
                {
                case '2':
                  if (strncmp (KR_keyword, "/dev/st120", 10) == 0)
                    {
{
return dev_storage + 2499;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case '1':
                  if (strncmp (KR_keyword, "/dev/st110", 10) == 0)
                    {
{
return dev_storage + 2489;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case '0':
                  if (strncmp (KR_keyword, "/dev/st100", 10) == 0)
                    {
{
return dev_storage + 2479;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                default:
{
return	NULL;

}
                }
            default:
{
return	NULL;

}
            }
        default:
{
return	NULL;

}
        }
    case 11:
      switch (KR_keyword [10])
        {
        case 't':
          if (strncmp (KR_keyword, "/dev/conout", 11) == 0)
            {
{
return dev_storage + 19;

}
            }
          else
            {
{
return	NULL;

}
            }
        case 'm':
          if (strncmp (KR_keyword, "/dev/random", 11) == 0)
            {
{
return dev_storage + 298;

}
            }
          else
            {
{
return	NULL;

}
            }
        case '9':
          switch (KR_keyword [9])
            {
            case '5':
              switch (KR_keyword [5])
                {
                case 't':
                  if (strncmp (KR_keyword, "/dev/ttyS59", 11) == 0)
                    {
{
return dev_storage + 2567;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'c':
                  if (strncmp (KR_keyword, "/dev/cons59", 11) == 0)
                    {
{
return dev_storage + 79;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                default:
{
return	NULL;

}
                }
            case '4':
              switch (KR_keyword [5])
                {
                case 't':
                  if (strncmp (KR_keyword, "/dev/ttyS49", 11) == 0)
                    {
{
return dev_storage + 2557;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'c':
                  if (strncmp (KR_keyword, "/dev/cons49", 11) == 0)
                    {
{
return dev_storage + 69;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                default:
{
return	NULL;

}
                }
            case '3':
              switch (KR_keyword [5])
                {
                case 't':
                  if (strncmp (KR_keyword, "/dev/ttyS39", 11) == 0)
                    {
{
return dev_storage + 2547;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'c':
                  if (strncmp (KR_keyword, "/dev/cons39", 11) == 0)
                    {
{
return dev_storage + 59;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                default:
{
return	NULL;

}
                }
            case '2':
              switch (KR_keyword [5])
                {
                case 't':
                  if (strncmp (KR_keyword, "/dev/ttyS29", 11) == 0)
                    {
{
return dev_storage + 2537;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'c':
                  if (strncmp (KR_keyword, "/dev/cons29", 11) == 0)
                    {
{
return dev_storage + 49;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                default:
{
return	NULL;

}
                }
            case '1':
              switch (KR_keyword [5])
                {
                case 't':
                  if (strncmp (KR_keyword, "/dev/ttyS19", 11) == 0)
                    {
{
return dev_storage + 2527;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'n':
                  if (strncmp (KR_keyword, "/dev/nst119", 11) == 0)
                    {
{
return dev_storage + 223;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'c':
                  if (strncmp (KR_keyword, "/dev/cons19", 11) == 0)
                    {
{
return dev_storage + 39;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                default:
{
return	NULL;

}
                }
            case '0':
              if (strncmp (KR_keyword, "/dev/nst109", 11) == 0)
                {
{
return dev_storage + 213;

}
                }
              else
                {
{
return	NULL;

}
                }
            default:
{
return	NULL;

}
            }
        case '8':
          switch (KR_keyword [9])
            {
            case '5':
              switch (KR_keyword [5])
                {
                case 't':
                  if (strncmp (KR_keyword, "/dev/ttyS58", 11) == 0)
                    {
{
return dev_storage + 2566;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'c':
                  if (strncmp (KR_keyword, "/dev/cons58", 11) == 0)
                    {
{
return dev_storage + 78;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                default:
{
return	NULL;

}
                }
            case '4':
              switch (KR_keyword [5])
                {
                case 't':
                  if (strncmp (KR_keyword, "/dev/ttyS48", 11) == 0)
                    {
{
return dev_storage + 2556;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'c':
                  if (strncmp (KR_keyword, "/dev/cons48", 11) == 0)
                    {
{
return dev_storage + 68;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                default:
{
return	NULL;

}
                }
            case '3':
              switch (KR_keyword [5])
                {
                case 't':
                  if (strncmp (KR_keyword, "/dev/ttyS38", 11) == 0)
                    {
{
return dev_storage + 2546;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'c':
                  if (strncmp (KR_keyword, "/dev/cons38", 11) == 0)
                    {
{
return dev_storage + 58;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                default:
{
return	NULL;

}
                }
            case '2':
              switch (KR_keyword [5])
                {
                case 't':
                  if (strncmp (KR_keyword, "/dev/ttyS28", 11) == 0)
                    {
{
return dev_storage + 2536;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'c':
                  if (strncmp (KR_keyword, "/dev/cons28", 11) == 0)
                    {
{
return dev_storage + 48;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                default:
{
return	NULL;

}
                }
            case '1':
              switch (KR_keyword [5])
                {
                case 't':
                  if (strncmp (KR_keyword, "/dev/ttyS18", 11) == 0)
                    {
{
return dev_storage + 2526;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'n':
                  if (strncmp (KR_keyword, "/dev/nst118", 11) == 0)
                    {
{
return dev_storage + 222;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'c':
                  if (strncmp (KR_keyword, "/dev/cons18", 11) == 0)
                    {
{
return dev_storage + 38;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                default:
{
return	NULL;

}
                }
            case '0':
              if (strncmp (KR_keyword, "/dev/nst108", 11) == 0)
                {
{
return dev_storage + 212;

}
                }
              else
                {
{
return	NULL;

}
                }
            default:
{
return	NULL;

}
            }
        case '7':
          switch (KR_keyword [9])
            {
            case '5':
              switch (KR_keyword [5])
                {
                case 't':
                  if (strncmp (KR_keyword, "/dev/ttyS57", 11) == 0)
                    {
{
return dev_storage + 2565;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'c':
                  if (strncmp (KR_keyword, "/dev/cons57", 11) == 0)
                    {
{
return dev_storage + 77;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                default:
{
return	NULL;

}
                }
            case '4':
              switch (KR_keyword [5])
                {
                case 't':
                  if (strncmp (KR_keyword, "/dev/ttyS47", 11) == 0)
                    {
{
return dev_storage + 2555;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'c':
                  if (strncmp (KR_keyword, "/dev/cons47", 11) == 0)
                    {
{
return dev_storage + 67;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                default:
{
return	NULL;

}
                }
            case '3':
              switch (KR_keyword [5])
                {
                case 't':
                  if (strncmp (KR_keyword, "/dev/ttyS37", 11) == 0)
                    {
{
return dev_storage + 2545;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'c':
                  if (strncmp (KR_keyword, "/dev/cons37", 11) == 0)
                    {
{
return dev_storage + 57;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                default:
{
return	NULL;

}
                }
            case '2':
              switch (KR_keyword [5])
                {
                case 't':
                  if (strncmp (KR_keyword, "/dev/ttyS27", 11) == 0)
                    {
{
return dev_storage + 2535;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'n':
                  if (strncmp (KR_keyword, "/dev/nst127", 11) == 0)
                    {
{
return dev_storage + 231;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'c':
                  if (strncmp (KR_keyword, "/dev/cons27", 11) == 0)
                    {
{
return dev_storage + 47;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                default:
{
return	NULL;

}
                }
            case '1':
              switch (KR_keyword [5])
                {
                case 't':
                  if (strncmp (KR_keyword, "/dev/ttyS17", 11) == 0)
                    {
{
return dev_storage + 2525;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'n':
                  if (strncmp (KR_keyword, "/dev/nst117", 11) == 0)
                    {
{
return dev_storage + 221;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'c':
                  if (strncmp (KR_keyword, "/dev/cons17", 11) == 0)
                    {
{
return dev_storage + 37;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                default:
{
return	NULL;

}
                }
            case '0':
              if (strncmp (KR_keyword, "/dev/nst107", 11) == 0)
                {
{
return dev_storage + 211;

}
                }
              else
                {
{
return	NULL;

}
                }
            default:
{
return	NULL;

}
            }
        case '6':
          switch (KR_keyword [9])
            {
            case '5':
              switch (KR_keyword [5])
                {
                case 't':
                  if (strncmp (KR_keyword, "/dev/ttyS56", 11) == 0)
                    {
{
return dev_storage + 2564;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'c':
                  if (strncmp (KR_keyword, "/dev/cons56", 11) == 0)
                    {
{
return dev_storage + 76;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                default:
{
return	NULL;

}
                }
            case '4':
              switch (KR_keyword [5])
                {
                case 't':
                  if (strncmp (KR_keyword, "/dev/ttyS46", 11) == 0)
                    {
{
return dev_storage + 2554;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'c':
                  if (strncmp (KR_keyword, "/dev/cons46", 11) == 0)
                    {
{
return dev_storage + 66;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                default:
{
return	NULL;

}
                }
            case '3':
              switch (KR_keyword [5])
                {
                case 't':
                  if (strncmp (KR_keyword, "/dev/ttyS36", 11) == 0)
                    {
{
return dev_storage + 2544;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'c':
                  if (strncmp (KR_keyword, "/dev/cons36", 11) == 0)
                    {
{
return dev_storage + 56;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                default:
{
return	NULL;

}
                }
            case '2':
              switch (KR_keyword [5])
                {
                case 't':
                  if (strncmp (KR_keyword, "/dev/ttyS26", 11) == 0)
                    {
{
return dev_storage + 2534;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'n':
                  if (strncmp (KR_keyword, "/dev/nst126", 11) == 0)
                    {
{
return dev_storage + 230;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'c':
                  if (strncmp (KR_keyword, "/dev/cons26", 11) == 0)
                    {
{
return dev_storage + 46;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                default:
{
return	NULL;

}
                }
            case '1':
              switch (KR_keyword [5])
                {
                case 't':
                  if (strncmp (KR_keyword, "/dev/ttyS16", 11) == 0)
                    {
{
return dev_storage + 2524;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'n':
                  if (strncmp (KR_keyword, "/dev/nst116", 11) == 0)
                    {
{
return dev_storage + 220;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'c':
                  if (strncmp (KR_keyword, "/dev/cons16", 11) == 0)
                    {
{
return dev_storage + 36;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                default:
{
return	NULL;

}
                }
            case '0':
              if (strncmp (KR_keyword, "/dev/nst106", 11) == 0)
                {
{
return dev_storage + 210;

}
                }
              else
                {
{
return	NULL;

}
                }
            default:
{
return	NULL;

}
            }
        case '5':
          switch (KR_keyword [7])
            {
            case 'y':
              switch (KR_keyword [9])
                {
                case '5':
                  if (strncmp (KR_keyword, "/dev/ttyS55", 11) == 0)
                    {
{
return dev_storage + 2563;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case '4':
                  if (strncmp (KR_keyword, "/dev/ttyS45", 11) == 0)
                    {
{
return dev_storage + 2553;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case '3':
                  if (strncmp (KR_keyword, "/dev/ttyS35", 11) == 0)
                    {
{
return dev_storage + 2543;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case '2':
                  if (strncmp (KR_keyword, "/dev/ttyS25", 11) == 0)
                    {
{
return dev_storage + 2533;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case '1':
                  if (strncmp (KR_keyword, "/dev/ttyS15", 11) == 0)
                    {
{
return dev_storage + 2523;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                default:
{
return	NULL;

}
                }
            case 't':
              switch (KR_keyword [9])
                {
                case '2':
                  if (strncmp (KR_keyword, "/dev/nst125", 11) == 0)
                    {
{
return dev_storage + 229;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case '1':
                  if (strncmp (KR_keyword, "/dev/nst115", 11) == 0)
                    {
{
return dev_storage + 219;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case '0':
                  if (strncmp (KR_keyword, "/dev/nst105", 11) == 0)
                    {
{
return dev_storage + 209;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                default:
{
return	NULL;

}
                }
            case 'n':
              switch (KR_keyword [9])
                {
                case '5':
                  if (strncmp (KR_keyword, "/dev/cons55", 11) == 0)
                    {
{
return dev_storage + 75;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case '4':
                  if (strncmp (KR_keyword, "/dev/cons45", 11) == 0)
                    {
{
return dev_storage + 65;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case '3':
                  if (strncmp (KR_keyword, "/dev/cons35", 11) == 0)
                    {
{
return dev_storage + 55;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case '2':
                  if (strncmp (KR_keyword, "/dev/cons25", 11) == 0)
                    {
{
return dev_storage + 45;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case '1':
                  if (strncmp (KR_keyword, "/dev/cons15", 11) == 0)
                    {
{
return dev_storage + 35;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                default:
{
return	NULL;

}
                }
            case 'd':
              switch (KR_keyword [8])
                {
                case 'x':
                  if (strncmp (KR_keyword, "/dev/sddx15", 11) == 0)
                    {
{
return dev_storage + 2362;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'w':
                  if (strncmp (KR_keyword, "/dev/sddw15", 11) == 0)
                    {
{
return dev_storage + 2347;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'v':
                  if (strncmp (KR_keyword, "/dev/sddv15", 11) == 0)
                    {
{
return dev_storage + 2332;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'u':
                  if (strncmp (KR_keyword, "/dev/sddu15", 11) == 0)
                    {
{
return dev_storage + 2317;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 't':
                  if (strncmp (KR_keyword, "/dev/sddt15", 11) == 0)
                    {
{
return dev_storage + 2302;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 's':
                  if (strncmp (KR_keyword, "/dev/sdds15", 11) == 0)
                    {
{
return dev_storage + 2287;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'r':
                  if (strncmp (KR_keyword, "/dev/sddr15", 11) == 0)
                    {
{
return dev_storage + 2272;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'q':
                  if (strncmp (KR_keyword, "/dev/sddq15", 11) == 0)
                    {
{
return dev_storage + 2257;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'p':
                  if (strncmp (KR_keyword, "/dev/sddp15", 11) == 0)
                    {
{
return dev_storage + 2242;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'o':
                  if (strncmp (KR_keyword, "/dev/sddo15", 11) == 0)
                    {
{
return dev_storage + 2227;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'n':
                  if (strncmp (KR_keyword, "/dev/sddn15", 11) == 0)
                    {
{
return dev_storage + 2212;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'm':
                  if (strncmp (KR_keyword, "/dev/sddm15", 11) == 0)
                    {
{
return dev_storage + 2197;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'l':
                  if (strncmp (KR_keyword, "/dev/sddl15", 11) == 0)
                    {
{
return dev_storage + 2182;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'k':
                  if (strncmp (KR_keyword, "/dev/sddk15", 11) == 0)
                    {
{
return dev_storage + 2167;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'j':
                  if (strncmp (KR_keyword, "/dev/sddj15", 11) == 0)
                    {
{
return dev_storage + 2152;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'i':
                  if (strncmp (KR_keyword, "/dev/sddi15", 11) == 0)
                    {
{
return dev_storage + 2137;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'h':
                  if (strncmp (KR_keyword, "/dev/sddh15", 11) == 0)
                    {
{
return dev_storage + 2122;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'g':
                  if (strncmp (KR_keyword, "/dev/sddg15", 11) == 0)
                    {
{
return dev_storage + 2107;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'f':
                  if (strncmp (KR_keyword, "/dev/sddf15", 11) == 0)
                    {
{
return dev_storage + 2092;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'e':
                  if (strncmp (KR_keyword, "/dev/sdde15", 11) == 0)
                    {
{
return dev_storage + 2077;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'd':
                  if (strncmp (KR_keyword, "/dev/sddd15", 11) == 0)
                    {
{
return dev_storage + 2062;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'c':
                  if (strncmp (KR_keyword, "/dev/sddc15", 11) == 0)
                    {
{
return dev_storage + 2047;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'b':
                  if (strncmp (KR_keyword, "/dev/sddb15", 11) == 0)
                    {
{
return dev_storage + 2032;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'a':
                  if (strncmp (KR_keyword, "/dev/sdda15", 11) == 0)
                    {
{
return dev_storage + 2017;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                default:
{
return	NULL;

}
                }
            case 'c':
              switch (KR_keyword [8])
                {
                case 'z':
                  if (strncmp (KR_keyword, "/dev/sdcz15", 11) == 0)
                    {
{
return dev_storage + 1978;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'y':
                  if (strncmp (KR_keyword, "/dev/sdcy15", 11) == 0)
                    {
{
return dev_storage + 1963;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'x':
                  if (strncmp (KR_keyword, "/dev/sdcx15", 11) == 0)
                    {
{
return dev_storage + 1948;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'w':
                  if (strncmp (KR_keyword, "/dev/sdcw15", 11) == 0)
                    {
{
return dev_storage + 1933;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'v':
                  if (strncmp (KR_keyword, "/dev/sdcv15", 11) == 0)
                    {
{
return dev_storage + 1918;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'u':
                  if (strncmp (KR_keyword, "/dev/sdcu15", 11) == 0)
                    {
{
return dev_storage + 1903;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 't':
                  if (strncmp (KR_keyword, "/dev/sdct15", 11) == 0)
                    {
{
return dev_storage + 1888;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 's':
                  if (strncmp (KR_keyword, "/dev/sdcs15", 11) == 0)
                    {
{
return dev_storage + 1873;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'r':
                  if (strncmp (KR_keyword, "/dev/sdcr15", 11) == 0)
                    {
{
return dev_storage + 1858;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'q':
                  if (strncmp (KR_keyword, "/dev/sdcq15", 11) == 0)
                    {
{
return dev_storage + 1843;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'p':
                  if (strncmp (KR_keyword, "/dev/sdcp15", 11) == 0)
                    {
{
return dev_storage + 1828;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'o':
                  if (strncmp (KR_keyword, "/dev/sdco15", 11) == 0)
                    {
{
return dev_storage + 1813;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'n':
                  if (strncmp (KR_keyword, "/dev/sdcn15", 11) == 0)
                    {
{
return dev_storage + 1798;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'm':
                  if (strncmp (KR_keyword, "/dev/sdcm15", 11) == 0)
                    {
{
return dev_storage + 1783;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'l':
                  if (strncmp (KR_keyword, "/dev/sdcl15", 11) == 0)
                    {
{
return dev_storage + 1768;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'k':
                  if (strncmp (KR_keyword, "/dev/sdck15", 11) == 0)
                    {
{
return dev_storage + 1753;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'j':
                  if (strncmp (KR_keyword, "/dev/sdcj15", 11) == 0)
                    {
{
return dev_storage + 1738;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'i':
                  if (strncmp (KR_keyword, "/dev/sdci15", 11) == 0)
                    {
{
return dev_storage + 1723;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'h':
                  if (strncmp (KR_keyword, "/dev/sdch15", 11) == 0)
                    {
{
return dev_storage + 1708;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'g':
                  if (strncmp (KR_keyword, "/dev/sdcg15", 11) == 0)
                    {
{
return dev_storage + 1693;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'f':
                  if (strncmp (KR_keyword, "/dev/sdcf15", 11) == 0)
                    {
{
return dev_storage + 1678;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'e':
                  if (strncmp (KR_keyword, "/dev/sdce15", 11) == 0)
                    {
{
return dev_storage + 1663;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'd':
                  if (strncmp (KR_keyword, "/dev/sdcd15", 11) == 0)
                    {
{
return dev_storage + 1648;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'c':
                  if (strncmp (KR_keyword, "/dev/sdcc15", 11) == 0)
                    {
{
return dev_storage + 1633;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'b':
                  if (strncmp (KR_keyword, "/dev/sdcb15", 11) == 0)
                    {
{
return dev_storage + 1618;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'a':
                  if (strncmp (KR_keyword, "/dev/sdca15", 11) == 0)
                    {
{
return dev_storage + 1603;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                default:
{
return	NULL;

}
                }
            case 'b':
              switch (KR_keyword [8])
                {
                case 'z':
                  if (strncmp (KR_keyword, "/dev/sdbz15", 11) == 0)
                    {
{
return dev_storage + 1562;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'y':
                  if (strncmp (KR_keyword, "/dev/sdby15", 11) == 0)
                    {
{
return dev_storage + 1547;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'x':
                  if (strncmp (KR_keyword, "/dev/sdbx15", 11) == 0)
                    {
{
return dev_storage + 1532;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'w':
                  if (strncmp (KR_keyword, "/dev/sdbw15", 11) == 0)
                    {
{
return dev_storage + 1517;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'v':
                  if (strncmp (KR_keyword, "/dev/sdbv15", 11) == 0)
                    {
{
return dev_storage + 1502;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'u':
                  if (strncmp (KR_keyword, "/dev/sdbu15", 11) == 0)
                    {
{
return dev_storage + 1487;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 't':
                  if (strncmp (KR_keyword, "/dev/sdbt15", 11) == 0)
                    {
{
return dev_storage + 1472;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 's':
                  if (strncmp (KR_keyword, "/dev/sdbs15", 11) == 0)
                    {
{
return dev_storage + 1457;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'r':
                  if (strncmp (KR_keyword, "/dev/sdbr15", 11) == 0)
                    {
{
return dev_storage + 1442;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'q':
                  if (strncmp (KR_keyword, "/dev/sdbq15", 11) == 0)
                    {
{
return dev_storage + 1427;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'p':
                  if (strncmp (KR_keyword, "/dev/sdbp15", 11) == 0)
                    {
{
return dev_storage + 1412;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'o':
                  if (strncmp (KR_keyword, "/dev/sdbo15", 11) == 0)
                    {
{
return dev_storage + 1397;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'n':
                  if (strncmp (KR_keyword, "/dev/sdbn15", 11) == 0)
                    {
{
return dev_storage + 1382;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'm':
                  if (strncmp (KR_keyword, "/dev/sdbm15", 11) == 0)
                    {
{
return dev_storage + 1367;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'l':
                  if (strncmp (KR_keyword, "/dev/sdbl15", 11) == 0)
                    {
{
return dev_storage + 1352;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'k':
                  if (strncmp (KR_keyword, "/dev/sdbk15", 11) == 0)
                    {
{
return dev_storage + 1337;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'j':
                  if (strncmp (KR_keyword, "/dev/sdbj15", 11) == 0)
                    {
{
return dev_storage + 1322;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'i':
                  if (strncmp (KR_keyword, "/dev/sdbi15", 11) == 0)
                    {
{
return dev_storage + 1307;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'h':
                  if (strncmp (KR_keyword, "/dev/sdbh15", 11) == 0)
                    {
{
return dev_storage + 1292;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'g':
                  if (strncmp (KR_keyword, "/dev/sdbg15", 11) == 0)
                    {
{
return dev_storage + 1277;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'f':
                  if (strncmp (KR_keyword, "/dev/sdbf15", 11) == 0)
                    {
{
return dev_storage + 1262;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'e':
                  if (strncmp (KR_keyword, "/dev/sdbe15", 11) == 0)
                    {
{
return dev_storage + 1247;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'd':
                  if (strncmp (KR_keyword, "/dev/sdbd15", 11) == 0)
                    {
{
return dev_storage + 1232;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'c':
                  if (strncmp (KR_keyword, "/dev/sdbc15", 11) == 0)
                    {
{
return dev_storage + 1217;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'b':
                  if (strncmp (KR_keyword, "/dev/sdbb15", 11) == 0)
                    {
{
return dev_storage + 1202;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'a':
                  if (strncmp (KR_keyword, "/dev/sdba15", 11) == 0)
                    {
{
return dev_storage + 1187;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                default:
{
return	NULL;

}
                }
            case 'a':
              switch (KR_keyword [8])
                {
                case 'z':
                  if (strncmp (KR_keyword, "/dev/sdaz15", 11) == 0)
                    {
{
return dev_storage + 1146;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'y':
                  if (strncmp (KR_keyword, "/dev/sday15", 11) == 0)
                    {
{
return dev_storage + 1131;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'x':
                  if (strncmp (KR_keyword, "/dev/sdax15", 11) == 0)
                    {
{
return dev_storage + 1116;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'w':
                  if (strncmp (KR_keyword, "/dev/sdaw15", 11) == 0)
                    {
{
return dev_storage + 1101;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'v':
                  if (strncmp (KR_keyword, "/dev/sdav15", 11) == 0)
                    {
{
return dev_storage + 1086;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'u':
                  if (strncmp (KR_keyword, "/dev/sdau15", 11) == 0)
                    {
{
return dev_storage + 1071;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 't':
                  if (strncmp (KR_keyword, "/dev/sdat15", 11) == 0)
                    {
{
return dev_storage + 1056;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 's':
                  if (strncmp (KR_keyword, "/dev/sdas15", 11) == 0)
                    {
{
return dev_storage + 1041;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'r':
                  if (strncmp (KR_keyword, "/dev/sdar15", 11) == 0)
                    {
{
return dev_storage + 1026;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'q':
                  if (strncmp (KR_keyword, "/dev/sdaq15", 11) == 0)
                    {
{
return dev_storage + 1011;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'p':
                  if (strncmp (KR_keyword, "/dev/sdap15", 11) == 0)
                    {
{
return dev_storage + 996;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'o':
                  if (strncmp (KR_keyword, "/dev/sdao15", 11) == 0)
                    {
{
return dev_storage + 981;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'n':
                  if (strncmp (KR_keyword, "/dev/sdan15", 11) == 0)
                    {
{
return dev_storage + 966;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'm':
                  if (strncmp (KR_keyword, "/dev/sdam15", 11) == 0)
                    {
{
return dev_storage + 951;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'l':
                  if (strncmp (KR_keyword, "/dev/sdal15", 11) == 0)
                    {
{
return dev_storage + 936;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'k':
                  if (strncmp (KR_keyword, "/dev/sdak15", 11) == 0)
                    {
{
return dev_storage + 921;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'j':
                  if (strncmp (KR_keyword, "/dev/sdaj15", 11) == 0)
                    {
{
return dev_storage + 906;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'i':
                  if (strncmp (KR_keyword, "/dev/sdai15", 11) == 0)
                    {
{
return dev_storage + 891;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'h':
                  if (strncmp (KR_keyword, "/dev/sdah15", 11) == 0)
                    {
{
return dev_storage + 876;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'g':
                  if (strncmp (KR_keyword, "/dev/sdag15", 11) == 0)
                    {
{
return dev_storage + 861;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'f':
                  if (strncmp (KR_keyword, "/dev/sdaf15", 11) == 0)
                    {
{
return dev_storage + 846;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'e':
                  if (strncmp (KR_keyword, "/dev/sdae15", 11) == 0)
                    {
{
return dev_storage + 831;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'd':
                  if (strncmp (KR_keyword, "/dev/sdad15", 11) == 0)
                    {
{
return dev_storage + 816;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'c':
                  if (strncmp (KR_keyword, "/dev/sdac15", 11) == 0)
                    {
{
return dev_storage + 801;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'b':
                  if (strncmp (KR_keyword, "/dev/sdab15", 11) == 0)
                    {
{
return dev_storage + 786;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'a':
                  if (strncmp (KR_keyword, "/dev/sdaa15", 11) == 0)
                    {
{
return dev_storage + 771;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                default:
{
return	NULL;

}
                }
            default:
{
return	NULL;

}
            }
        case '4':
          switch (KR_keyword [7])
            {
            case 'y':
              switch (KR_keyword [9])
                {
                case '5':
                  if (strncmp (KR_keyword, "/dev/ttyS54", 11) == 0)
                    {
{
return dev_storage + 2562;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case '4':
                  if (strncmp (KR_keyword, "/dev/ttyS44", 11) == 0)
                    {
{
return dev_storage + 2552;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case '3':
                  if (strncmp (KR_keyword, "/dev/ttyS34", 11) == 0)
                    {
{
return dev_storage + 2542;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case '2':
                  if (strncmp (KR_keyword, "/dev/ttyS24", 11) == 0)
                    {
{
return dev_storage + 2532;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case '1':
                  if (strncmp (KR_keyword, "/dev/ttyS14", 11) == 0)
                    {
{
return dev_storage + 2522;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                default:
{
return	NULL;

}
                }
            case 't':
              switch (KR_keyword [9])
                {
                case '2':
                  if (strncmp (KR_keyword, "/dev/nst124", 11) == 0)
                    {
{
return dev_storage + 228;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case '1':
                  if (strncmp (KR_keyword, "/dev/nst114", 11) == 0)
                    {
{
return dev_storage + 218;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case '0':
                  if (strncmp (KR_keyword, "/dev/nst104", 11) == 0)
                    {
{
return dev_storage + 208;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                default:
{
return	NULL;

}
                }
            case 'n':
              switch (KR_keyword [9])
                {
                case '5':
                  if (strncmp (KR_keyword, "/dev/cons54", 11) == 0)
                    {
{
return dev_storage + 74;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case '4':
                  if (strncmp (KR_keyword, "/dev/cons44", 11) == 0)
                    {
{
return dev_storage + 64;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case '3':
                  if (strncmp (KR_keyword, "/dev/cons34", 11) == 0)
                    {
{
return dev_storage + 54;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case '2':
                  if (strncmp (KR_keyword, "/dev/cons24", 11) == 0)
                    {
{
return dev_storage + 44;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case '1':
                  if (strncmp (KR_keyword, "/dev/cons14", 11) == 0)
                    {
{
return dev_storage + 34;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                default:
{
return	NULL;

}
                }
            case 'd':
              switch (KR_keyword [8])
                {
                case 'x':
                  if (strncmp (KR_keyword, "/dev/sddx14", 11) == 0)
                    {
{
return dev_storage + 2361;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'w':
                  if (strncmp (KR_keyword, "/dev/sddw14", 11) == 0)
                    {
{
return dev_storage + 2346;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'v':
                  if (strncmp (KR_keyword, "/dev/sddv14", 11) == 0)
                    {
{
return dev_storage + 2331;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'u':
                  if (strncmp (KR_keyword, "/dev/sddu14", 11) == 0)
                    {
{
return dev_storage + 2316;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 't':
                  if (strncmp (KR_keyword, "/dev/sddt14", 11) == 0)
                    {
{
return dev_storage + 2301;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 's':
                  if (strncmp (KR_keyword, "/dev/sdds14", 11) == 0)
                    {
{
return dev_storage + 2286;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'r':
                  if (strncmp (KR_keyword, "/dev/sddr14", 11) == 0)
                    {
{
return dev_storage + 2271;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'q':
                  if (strncmp (KR_keyword, "/dev/sddq14", 11) == 0)
                    {
{
return dev_storage + 2256;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'p':
                  if (strncmp (KR_keyword, "/dev/sddp14", 11) == 0)
                    {
{
return dev_storage + 2241;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'o':
                  if (strncmp (KR_keyword, "/dev/sddo14", 11) == 0)
                    {
{
return dev_storage + 2226;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'n':
                  if (strncmp (KR_keyword, "/dev/sddn14", 11) == 0)
                    {
{
return dev_storage + 2211;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'm':
                  if (strncmp (KR_keyword, "/dev/sddm14", 11) == 0)
                    {
{
return dev_storage + 2196;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'l':
                  if (strncmp (KR_keyword, "/dev/sddl14", 11) == 0)
                    {
{
return dev_storage + 2181;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'k':
                  if (strncmp (KR_keyword, "/dev/sddk14", 11) == 0)
                    {
{
return dev_storage + 2166;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'j':
                  if (strncmp (KR_keyword, "/dev/sddj14", 11) == 0)
                    {
{
return dev_storage + 2151;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'i':
                  if (strncmp (KR_keyword, "/dev/sddi14", 11) == 0)
                    {
{
return dev_storage + 2136;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'h':
                  if (strncmp (KR_keyword, "/dev/sddh14", 11) == 0)
                    {
{
return dev_storage + 2121;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'g':
                  if (strncmp (KR_keyword, "/dev/sddg14", 11) == 0)
                    {
{
return dev_storage + 2106;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'f':
                  if (strncmp (KR_keyword, "/dev/sddf14", 11) == 0)
                    {
{
return dev_storage + 2091;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'e':
                  if (strncmp (KR_keyword, "/dev/sdde14", 11) == 0)
                    {
{
return dev_storage + 2076;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'd':
                  if (strncmp (KR_keyword, "/dev/sddd14", 11) == 0)
                    {
{
return dev_storage + 2061;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'c':
                  if (strncmp (KR_keyword, "/dev/sddc14", 11) == 0)
                    {
{
return dev_storage + 2046;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'b':
                  if (strncmp (KR_keyword, "/dev/sddb14", 11) == 0)
                    {
{
return dev_storage + 2031;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'a':
                  if (strncmp (KR_keyword, "/dev/sdda14", 11) == 0)
                    {
{
return dev_storage + 2016;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                default:
{
return	NULL;

}
                }
            case 'c':
              switch (KR_keyword [8])
                {
                case 'z':
                  if (strncmp (KR_keyword, "/dev/sdcz14", 11) == 0)
                    {
{
return dev_storage + 1977;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'y':
                  if (strncmp (KR_keyword, "/dev/sdcy14", 11) == 0)
                    {
{
return dev_storage + 1962;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'x':
                  if (strncmp (KR_keyword, "/dev/sdcx14", 11) == 0)
                    {
{
return dev_storage + 1947;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'w':
                  if (strncmp (KR_keyword, "/dev/sdcw14", 11) == 0)
                    {
{
return dev_storage + 1932;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'v':
                  if (strncmp (KR_keyword, "/dev/sdcv14", 11) == 0)
                    {
{
return dev_storage + 1917;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'u':
                  if (strncmp (KR_keyword, "/dev/sdcu14", 11) == 0)
                    {
{
return dev_storage + 1902;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 't':
                  if (strncmp (KR_keyword, "/dev/sdct14", 11) == 0)
                    {
{
return dev_storage + 1887;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 's':
                  if (strncmp (KR_keyword, "/dev/sdcs14", 11) == 0)
                    {
{
return dev_storage + 1872;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'r':
                  if (strncmp (KR_keyword, "/dev/sdcr14", 11) == 0)
                    {
{
return dev_storage + 1857;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'q':
                  if (strncmp (KR_keyword, "/dev/sdcq14", 11) == 0)
                    {
{
return dev_storage + 1842;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'p':
                  if (strncmp (KR_keyword, "/dev/sdcp14", 11) == 0)
                    {
{
return dev_storage + 1827;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'o':
                  if (strncmp (KR_keyword, "/dev/sdco14", 11) == 0)
                    {
{
return dev_storage + 1812;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'n':
                  if (strncmp (KR_keyword, "/dev/sdcn14", 11) == 0)
                    {
{
return dev_storage + 1797;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'm':
                  if (strncmp (KR_keyword, "/dev/sdcm14", 11) == 0)
                    {
{
return dev_storage + 1782;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'l':
                  if (strncmp (KR_keyword, "/dev/sdcl14", 11) == 0)
                    {
{
return dev_storage + 1767;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'k':
                  if (strncmp (KR_keyword, "/dev/sdck14", 11) == 0)
                    {
{
return dev_storage + 1752;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'j':
                  if (strncmp (KR_keyword, "/dev/sdcj14", 11) == 0)
                    {
{
return dev_storage + 1737;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'i':
                  if (strncmp (KR_keyword, "/dev/sdci14", 11) == 0)
                    {
{
return dev_storage + 1722;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'h':
                  if (strncmp (KR_keyword, "/dev/sdch14", 11) == 0)
                    {
{
return dev_storage + 1707;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'g':
                  if (strncmp (KR_keyword, "/dev/sdcg14", 11) == 0)
                    {
{
return dev_storage + 1692;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'f':
                  if (strncmp (KR_keyword, "/dev/sdcf14", 11) == 0)
                    {
{
return dev_storage + 1677;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'e':
                  if (strncmp (KR_keyword, "/dev/sdce14", 11) == 0)
                    {
{
return dev_storage + 1662;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'd':
                  if (strncmp (KR_keyword, "/dev/sdcd14", 11) == 0)
                    {
{
return dev_storage + 1647;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'c':
                  if (strncmp (KR_keyword, "/dev/sdcc14", 11) == 0)
                    {
{
return dev_storage + 1632;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'b':
                  if (strncmp (KR_keyword, "/dev/sdcb14", 11) == 0)
                    {
{
return dev_storage + 1617;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'a':
                  if (strncmp (KR_keyword, "/dev/sdca14", 11) == 0)
                    {
{
return dev_storage + 1602;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                default:
{
return	NULL;

}
                }
            case 'b':
              switch (KR_keyword [8])
                {
                case 'z':
                  if (strncmp (KR_keyword, "/dev/sdbz14", 11) == 0)
                    {
{
return dev_storage + 1561;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'y':
                  if (strncmp (KR_keyword, "/dev/sdby14", 11) == 0)
                    {
{
return dev_storage + 1546;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'x':
                  if (strncmp (KR_keyword, "/dev/sdbx14", 11) == 0)
                    {
{
return dev_storage + 1531;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'w':
                  if (strncmp (KR_keyword, "/dev/sdbw14", 11) == 0)
                    {
{
return dev_storage + 1516;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'v':
                  if (strncmp (KR_keyword, "/dev/sdbv14", 11) == 0)
                    {
{
return dev_storage + 1501;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'u':
                  if (strncmp (KR_keyword, "/dev/sdbu14", 11) == 0)
                    {
{
return dev_storage + 1486;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 't':
                  if (strncmp (KR_keyword, "/dev/sdbt14", 11) == 0)
                    {
{
return dev_storage + 1471;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 's':
                  if (strncmp (KR_keyword, "/dev/sdbs14", 11) == 0)
                    {
{
return dev_storage + 1456;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'r':
                  if (strncmp (KR_keyword, "/dev/sdbr14", 11) == 0)
                    {
{
return dev_storage + 1441;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'q':
                  if (strncmp (KR_keyword, "/dev/sdbq14", 11) == 0)
                    {
{
return dev_storage + 1426;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'p':
                  if (strncmp (KR_keyword, "/dev/sdbp14", 11) == 0)
                    {
{
return dev_storage + 1411;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'o':
                  if (strncmp (KR_keyword, "/dev/sdbo14", 11) == 0)
                    {
{
return dev_storage + 1396;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'n':
                  if (strncmp (KR_keyword, "/dev/sdbn14", 11) == 0)
                    {
{
return dev_storage + 1381;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'm':
                  if (strncmp (KR_keyword, "/dev/sdbm14", 11) == 0)
                    {
{
return dev_storage + 1366;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'l':
                  if (strncmp (KR_keyword, "/dev/sdbl14", 11) == 0)
                    {
{
return dev_storage + 1351;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'k':
                  if (strncmp (KR_keyword, "/dev/sdbk14", 11) == 0)
                    {
{
return dev_storage + 1336;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'j':
                  if (strncmp (KR_keyword, "/dev/sdbj14", 11) == 0)
                    {
{
return dev_storage + 1321;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'i':
                  if (strncmp (KR_keyword, "/dev/sdbi14", 11) == 0)
                    {
{
return dev_storage + 1306;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'h':
                  if (strncmp (KR_keyword, "/dev/sdbh14", 11) == 0)
                    {
{
return dev_storage + 1291;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'g':
                  if (strncmp (KR_keyword, "/dev/sdbg14", 11) == 0)
                    {
{
return dev_storage + 1276;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'f':
                  if (strncmp (KR_keyword, "/dev/sdbf14", 11) == 0)
                    {
{
return dev_storage + 1261;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'e':
                  if (strncmp (KR_keyword, "/dev/sdbe14", 11) == 0)
                    {
{
return dev_storage + 1246;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'd':
                  if (strncmp (KR_keyword, "/dev/sdbd14", 11) == 0)
                    {
{
return dev_storage + 1231;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'c':
                  if (strncmp (KR_keyword, "/dev/sdbc14", 11) == 0)
                    {
{
return dev_storage + 1216;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'b':
                  if (strncmp (KR_keyword, "/dev/sdbb14", 11) == 0)
                    {
{
return dev_storage + 1201;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'a':
                  if (strncmp (KR_keyword, "/dev/sdba14", 11) == 0)
                    {
{
return dev_storage + 1186;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                default:
{
return	NULL;

}
                }
            case 'a':
              switch (KR_keyword [8])
                {
                case 'z':
                  if (strncmp (KR_keyword, "/dev/sdaz14", 11) == 0)
                    {
{
return dev_storage + 1145;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'y':
                  if (strncmp (KR_keyword, "/dev/sday14", 11) == 0)
                    {
{
return dev_storage + 1130;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'x':
                  if (strncmp (KR_keyword, "/dev/sdax14", 11) == 0)
                    {
{
return dev_storage + 1115;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'w':
                  if (strncmp (KR_keyword, "/dev/sdaw14", 11) == 0)
                    {
{
return dev_storage + 1100;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'v':
                  if (strncmp (KR_keyword, "/dev/sdav14", 11) == 0)
                    {
{
return dev_storage + 1085;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'u':
                  if (strncmp (KR_keyword, "/dev/sdau14", 11) == 0)
                    {
{
return dev_storage + 1070;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 't':
                  if (strncmp (KR_keyword, "/dev/sdat14", 11) == 0)
                    {
{
return dev_storage + 1055;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 's':
                  if (strncmp (KR_keyword, "/dev/sdas14", 11) == 0)
                    {
{
return dev_storage + 1040;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'r':
                  if (strncmp (KR_keyword, "/dev/sdar14", 11) == 0)
                    {
{
return dev_storage + 1025;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'q':
                  if (strncmp (KR_keyword, "/dev/sdaq14", 11) == 0)
                    {
{
return dev_storage + 1010;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'p':
                  if (strncmp (KR_keyword, "/dev/sdap14", 11) == 0)
                    {
{
return dev_storage + 995;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'o':
                  if (strncmp (KR_keyword, "/dev/sdao14", 11) == 0)
                    {
{
return dev_storage + 980;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'n':
                  if (strncmp (KR_keyword, "/dev/sdan14", 11) == 0)
                    {
{
return dev_storage + 965;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'm':
                  if (strncmp (KR_keyword, "/dev/sdam14", 11) == 0)
                    {
{
return dev_storage + 950;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'l':
                  if (strncmp (KR_keyword, "/dev/sdal14", 11) == 0)
                    {
{
return dev_storage + 935;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'k':
                  if (strncmp (KR_keyword, "/dev/sdak14", 11) == 0)
                    {
{
return dev_storage + 920;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'j':
                  if (strncmp (KR_keyword, "/dev/sdaj14", 11) == 0)
                    {
{
return dev_storage + 905;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'i':
                  if (strncmp (KR_keyword, "/dev/sdai14", 11) == 0)
                    {
{
return dev_storage + 890;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'h':
                  if (strncmp (KR_keyword, "/dev/sdah14", 11) == 0)
                    {
{
return dev_storage + 875;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'g':
                  if (strncmp (KR_keyword, "/dev/sdag14", 11) == 0)
                    {
{
return dev_storage + 860;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'f':
                  if (strncmp (KR_keyword, "/dev/sdaf14", 11) == 0)
                    {
{
return dev_storage + 845;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'e':
                  if (strncmp (KR_keyword, "/dev/sdae14", 11) == 0)
                    {
{
return dev_storage + 830;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'd':
                  if (strncmp (KR_keyword, "/dev/sdad14", 11) == 0)
                    {
{
return dev_storage + 815;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'c':
                  if (strncmp (KR_keyword, "/dev/sdac14", 11) == 0)
                    {
{
return dev_storage + 800;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'b':
                  if (strncmp (KR_keyword, "/dev/sdab14", 11) == 0)
                    {
{
return dev_storage + 785;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'a':
                  if (strncmp (KR_keyword, "/dev/sdaa14", 11) == 0)
                    {
{
return dev_storage + 770;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                default:
{
return	NULL;

}
                }
            default:
{
return	NULL;

}
            }
        case '3':
          switch (KR_keyword [7])
            {
            case 'y':
              switch (KR_keyword [9])
                {
                case '6':
                  if (strncmp (KR_keyword, "/dev/ttyS63", 11) == 0)
                    {
{
return dev_storage + 2571;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case '5':
                  if (strncmp (KR_keyword, "/dev/ttyS53", 11) == 0)
                    {
{
return dev_storage + 2561;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case '4':
                  if (strncmp (KR_keyword, "/dev/ttyS43", 11) == 0)
                    {
{
return dev_storage + 2551;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case '3':
                  if (strncmp (KR_keyword, "/dev/ttyS33", 11) == 0)
                    {
{
return dev_storage + 2541;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case '2':
                  if (strncmp (KR_keyword, "/dev/ttyS23", 11) == 0)
                    {
{
return dev_storage + 2531;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case '1':
                  if (strncmp (KR_keyword, "/dev/ttyS13", 11) == 0)
                    {
{
return dev_storage + 2521;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                default:
{
return	NULL;

}
                }
            case 't':
              switch (KR_keyword [9])
                {
                case '2':
                  if (strncmp (KR_keyword, "/dev/nst123", 11) == 0)
                    {
{
return dev_storage + 227;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case '1':
                  if (strncmp (KR_keyword, "/dev/nst113", 11) == 0)
                    {
{
return dev_storage + 217;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case '0':
                  if (strncmp (KR_keyword, "/dev/nst103", 11) == 0)
                    {
{
return dev_storage + 207;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                default:
{
return	NULL;

}
                }
            case 'n':
              switch (KR_keyword [9])
                {
                case '6':
                  if (strncmp (KR_keyword, "/dev/cons63", 11) == 0)
                    {
{
return dev_storage + 83;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case '5':
                  if (strncmp (KR_keyword, "/dev/cons53", 11) == 0)
                    {
{
return dev_storage + 73;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case '4':
                  if (strncmp (KR_keyword, "/dev/cons43", 11) == 0)
                    {
{
return dev_storage + 63;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case '3':
                  if (strncmp (KR_keyword, "/dev/cons33", 11) == 0)
                    {
{
return dev_storage + 53;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case '2':
                  if (strncmp (KR_keyword, "/dev/cons23", 11) == 0)
                    {
{
return dev_storage + 43;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case '1':
                  if (strncmp (KR_keyword, "/dev/cons13", 11) == 0)
                    {
{
return dev_storage + 33;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                default:
{
return	NULL;

}
                }
            case 'd':
              switch (KR_keyword [8])
                {
                case 'x':
                  if (strncmp (KR_keyword, "/dev/sddx13", 11) == 0)
                    {
{
return dev_storage + 2360;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'w':
                  if (strncmp (KR_keyword, "/dev/sddw13", 11) == 0)
                    {
{
return dev_storage + 2345;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'v':
                  if (strncmp (KR_keyword, "/dev/sddv13", 11) == 0)
                    {
{
return dev_storage + 2330;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'u':
                  if (strncmp (KR_keyword, "/dev/sddu13", 11) == 0)
                    {
{
return dev_storage + 2315;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 't':
                  if (strncmp (KR_keyword, "/dev/sddt13", 11) == 0)
                    {
{
return dev_storage + 2300;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 's':
                  if (strncmp (KR_keyword, "/dev/sdds13", 11) == 0)
                    {
{
return dev_storage + 2285;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'r':
                  if (strncmp (KR_keyword, "/dev/sddr13", 11) == 0)
                    {
{
return dev_storage + 2270;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'q':
                  if (strncmp (KR_keyword, "/dev/sddq13", 11) == 0)
                    {
{
return dev_storage + 2255;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'p':
                  if (strncmp (KR_keyword, "/dev/sddp13", 11) == 0)
                    {
{
return dev_storage + 2240;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'o':
                  if (strncmp (KR_keyword, "/dev/sddo13", 11) == 0)
                    {
{
return dev_storage + 2225;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'n':
                  if (strncmp (KR_keyword, "/dev/sddn13", 11) == 0)
                    {
{
return dev_storage + 2210;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'm':
                  if (strncmp (KR_keyword, "/dev/sddm13", 11) == 0)
                    {
{
return dev_storage + 2195;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'l':
                  if (strncmp (KR_keyword, "/dev/sddl13", 11) == 0)
                    {
{
return dev_storage + 2180;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'k':
                  if (strncmp (KR_keyword, "/dev/sddk13", 11) == 0)
                    {
{
return dev_storage + 2165;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'j':
                  if (strncmp (KR_keyword, "/dev/sddj13", 11) == 0)
                    {
{
return dev_storage + 2150;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'i':
                  if (strncmp (KR_keyword, "/dev/sddi13", 11) == 0)
                    {
{
return dev_storage + 2135;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'h':
                  if (strncmp (KR_keyword, "/dev/sddh13", 11) == 0)
                    {
{
return dev_storage + 2120;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'g':
                  if (strncmp (KR_keyword, "/dev/sddg13", 11) == 0)
                    {
{
return dev_storage + 2105;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'f':
                  if (strncmp (KR_keyword, "/dev/sddf13", 11) == 0)
                    {
{
return dev_storage + 2090;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'e':
                  if (strncmp (KR_keyword, "/dev/sdde13", 11) == 0)
                    {
{
return dev_storage + 2075;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'd':
                  if (strncmp (KR_keyword, "/dev/sddd13", 11) == 0)
                    {
{
return dev_storage + 2060;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'c':
                  if (strncmp (KR_keyword, "/dev/sddc13", 11) == 0)
                    {
{
return dev_storage + 2045;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'b':
                  if (strncmp (KR_keyword, "/dev/sddb13", 11) == 0)
                    {
{
return dev_storage + 2030;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'a':
                  if (strncmp (KR_keyword, "/dev/sdda13", 11) == 0)
                    {
{
return dev_storage + 2015;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                default:
{
return	NULL;

}
                }
            case 'c':
              switch (KR_keyword [8])
                {
                case 'z':
                  if (strncmp (KR_keyword, "/dev/sdcz13", 11) == 0)
                    {
{
return dev_storage + 1976;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'y':
                  if (strncmp (KR_keyword, "/dev/sdcy13", 11) == 0)
                    {
{
return dev_storage + 1961;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'x':
                  if (strncmp (KR_keyword, "/dev/sdcx13", 11) == 0)
                    {
{
return dev_storage + 1946;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'w':
                  if (strncmp (KR_keyword, "/dev/sdcw13", 11) == 0)
                    {
{
return dev_storage + 1931;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'v':
                  if (strncmp (KR_keyword, "/dev/sdcv13", 11) == 0)
                    {
{
return dev_storage + 1916;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'u':
                  if (strncmp (KR_keyword, "/dev/sdcu13", 11) == 0)
                    {
{
return dev_storage + 1901;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 't':
                  if (strncmp (KR_keyword, "/dev/sdct13", 11) == 0)
                    {
{
return dev_storage + 1886;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 's':
                  if (strncmp (KR_keyword, "/dev/sdcs13", 11) == 0)
                    {
{
return dev_storage + 1871;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'r':
                  if (strncmp (KR_keyword, "/dev/sdcr13", 11) == 0)
                    {
{
return dev_storage + 1856;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'q':
                  if (strncmp (KR_keyword, "/dev/sdcq13", 11) == 0)
                    {
{
return dev_storage + 1841;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'p':
                  if (strncmp (KR_keyword, "/dev/sdcp13", 11) == 0)
                    {
{
return dev_storage + 1826;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'o':
                  if (strncmp (KR_keyword, "/dev/sdco13", 11) == 0)
                    {
{
return dev_storage + 1811;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'n':
                  if (strncmp (KR_keyword, "/dev/sdcn13", 11) == 0)
                    {
{
return dev_storage + 1796;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'm':
                  if (strncmp (KR_keyword, "/dev/sdcm13", 11) == 0)
                    {
{
return dev_storage + 1781;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'l':
                  if (strncmp (KR_keyword, "/dev/sdcl13", 11) == 0)
                    {
{
return dev_storage + 1766;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'k':
                  if (strncmp (KR_keyword, "/dev/sdck13", 11) == 0)
                    {
{
return dev_storage + 1751;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'j':
                  if (strncmp (KR_keyword, "/dev/sdcj13", 11) == 0)
                    {
{
return dev_storage + 1736;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'i':
                  if (strncmp (KR_keyword, "/dev/sdci13", 11) == 0)
                    {
{
return dev_storage + 1721;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'h':
                  if (strncmp (KR_keyword, "/dev/sdch13", 11) == 0)
                    {
{
return dev_storage + 1706;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'g':
                  if (strncmp (KR_keyword, "/dev/sdcg13", 11) == 0)
                    {
{
return dev_storage + 1691;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'f':
                  if (strncmp (KR_keyword, "/dev/sdcf13", 11) == 0)
                    {
{
return dev_storage + 1676;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'e':
                  if (strncmp (KR_keyword, "/dev/sdce13", 11) == 0)
                    {
{
return dev_storage + 1661;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'd':
                  if (strncmp (KR_keyword, "/dev/sdcd13", 11) == 0)
                    {
{
return dev_storage + 1646;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'c':
                  if (strncmp (KR_keyword, "/dev/sdcc13", 11) == 0)
                    {
{
return dev_storage + 1631;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'b':
                  if (strncmp (KR_keyword, "/dev/sdcb13", 11) == 0)
                    {
{
return dev_storage + 1616;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'a':
                  if (strncmp (KR_keyword, "/dev/sdca13", 11) == 0)
                    {
{
return dev_storage + 1601;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                default:
{
return	NULL;

}
                }
            case 'b':
              switch (KR_keyword [8])
                {
                case 'z':
                  if (strncmp (KR_keyword, "/dev/sdbz13", 11) == 0)
                    {
{
return dev_storage + 1560;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'y':
                  if (strncmp (KR_keyword, "/dev/sdby13", 11) == 0)
                    {
{
return dev_storage + 1545;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'x':
                  if (strncmp (KR_keyword, "/dev/sdbx13", 11) == 0)
                    {
{
return dev_storage + 1530;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'w':
                  if (strncmp (KR_keyword, "/dev/sdbw13", 11) == 0)
                    {
{
return dev_storage + 1515;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'v':
                  if (strncmp (KR_keyword, "/dev/sdbv13", 11) == 0)
                    {
{
return dev_storage + 1500;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'u':
                  if (strncmp (KR_keyword, "/dev/sdbu13", 11) == 0)
                    {
{
return dev_storage + 1485;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 't':
                  if (strncmp (KR_keyword, "/dev/sdbt13", 11) == 0)
                    {
{
return dev_storage + 1470;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 's':
                  if (strncmp (KR_keyword, "/dev/sdbs13", 11) == 0)
                    {
{
return dev_storage + 1455;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'r':
                  if (strncmp (KR_keyword, "/dev/sdbr13", 11) == 0)
                    {
{
return dev_storage + 1440;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'q':
                  if (strncmp (KR_keyword, "/dev/sdbq13", 11) == 0)
                    {
{
return dev_storage + 1425;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'p':
                  if (strncmp (KR_keyword, "/dev/sdbp13", 11) == 0)
                    {
{
return dev_storage + 1410;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'o':
                  if (strncmp (KR_keyword, "/dev/sdbo13", 11) == 0)
                    {
{
return dev_storage + 1395;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'n':
                  if (strncmp (KR_keyword, "/dev/sdbn13", 11) == 0)
                    {
{
return dev_storage + 1380;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'm':
                  if (strncmp (KR_keyword, "/dev/sdbm13", 11) == 0)
                    {
{
return dev_storage + 1365;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'l':
                  if (strncmp (KR_keyword, "/dev/sdbl13", 11) == 0)
                    {
{
return dev_storage + 1350;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'k':
                  if (strncmp (KR_keyword, "/dev/sdbk13", 11) == 0)
                    {
{
return dev_storage + 1335;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'j':
                  if (strncmp (KR_keyword, "/dev/sdbj13", 11) == 0)
                    {
{
return dev_storage + 1320;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'i':
                  if (strncmp (KR_keyword, "/dev/sdbi13", 11) == 0)
                    {
{
return dev_storage + 1305;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'h':
                  if (strncmp (KR_keyword, "/dev/sdbh13", 11) == 0)
                    {
{
return dev_storage + 1290;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'g':
                  if (strncmp (KR_keyword, "/dev/sdbg13", 11) == 0)
                    {
{
return dev_storage + 1275;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'f':
                  if (strncmp (KR_keyword, "/dev/sdbf13", 11) == 0)
                    {
{
return dev_storage + 1260;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'e':
                  if (strncmp (KR_keyword, "/dev/sdbe13", 11) == 0)
                    {
{
return dev_storage + 1245;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'd':
                  if (strncmp (KR_keyword, "/dev/sdbd13", 11) == 0)
                    {
{
return dev_storage + 1230;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'c':
                  if (strncmp (KR_keyword, "/dev/sdbc13", 11) == 0)
                    {
{
return dev_storage + 1215;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'b':
                  if (strncmp (KR_keyword, "/dev/sdbb13", 11) == 0)
                    {
{
return dev_storage + 1200;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'a':
                  if (strncmp (KR_keyword, "/dev/sdba13", 11) == 0)
                    {
{
return dev_storage + 1185;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                default:
{
return	NULL;

}
                }
            case 'a':
              switch (KR_keyword [8])
                {
                case 'z':
                  if (strncmp (KR_keyword, "/dev/sdaz13", 11) == 0)
                    {
{
return dev_storage + 1144;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'y':
                  if (strncmp (KR_keyword, "/dev/sday13", 11) == 0)
                    {
{
return dev_storage + 1129;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'x':
                  if (strncmp (KR_keyword, "/dev/sdax13", 11) == 0)
                    {
{
return dev_storage + 1114;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'w':
                  if (strncmp (KR_keyword, "/dev/sdaw13", 11) == 0)
                    {
{
return dev_storage + 1099;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'v':
                  if (strncmp (KR_keyword, "/dev/sdav13", 11) == 0)
                    {
{
return dev_storage + 1084;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'u':
                  if (strncmp (KR_keyword, "/dev/sdau13", 11) == 0)
                    {
{
return dev_storage + 1069;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 't':
                  if (strncmp (KR_keyword, "/dev/sdat13", 11) == 0)
                    {
{
return dev_storage + 1054;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 's':
                  if (strncmp (KR_keyword, "/dev/sdas13", 11) == 0)
                    {
{
return dev_storage + 1039;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'r':
                  if (strncmp (KR_keyword, "/dev/sdar13", 11) == 0)
                    {
{
return dev_storage + 1024;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'q':
                  if (strncmp (KR_keyword, "/dev/sdaq13", 11) == 0)
                    {
{
return dev_storage + 1009;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'p':
                  if (strncmp (KR_keyword, "/dev/sdap13", 11) == 0)
                    {
{
return dev_storage + 994;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'o':
                  if (strncmp (KR_keyword, "/dev/sdao13", 11) == 0)
                    {
{
return dev_storage + 979;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'n':
                  if (strncmp (KR_keyword, "/dev/sdan13", 11) == 0)
                    {
{
return dev_storage + 964;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'm':
                  if (strncmp (KR_keyword, "/dev/sdam13", 11) == 0)
                    {
{
return dev_storage + 949;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'l':
                  if (strncmp (KR_keyword, "/dev/sdal13", 11) == 0)
                    {
{
return dev_storage + 934;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'k':
                  if (strncmp (KR_keyword, "/dev/sdak13", 11) == 0)
                    {
{
return dev_storage + 919;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'j':
                  if (strncmp (KR_keyword, "/dev/sdaj13", 11) == 0)
                    {
{
return dev_storage + 904;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'i':
                  if (strncmp (KR_keyword, "/dev/sdai13", 11) == 0)
                    {
{
return dev_storage + 889;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'h':
                  if (strncmp (KR_keyword, "/dev/sdah13", 11) == 0)
                    {
{
return dev_storage + 874;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'g':
                  if (strncmp (KR_keyword, "/dev/sdag13", 11) == 0)
                    {
{
return dev_storage + 859;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'f':
                  if (strncmp (KR_keyword, "/dev/sdaf13", 11) == 0)
                    {
{
return dev_storage + 844;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'e':
                  if (strncmp (KR_keyword, "/dev/sdae13", 11) == 0)
                    {
{
return dev_storage + 829;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'd':
                  if (strncmp (KR_keyword, "/dev/sdad13", 11) == 0)
                    {
{
return dev_storage + 814;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'c':
                  if (strncmp (KR_keyword, "/dev/sdac13", 11) == 0)
                    {
{
return dev_storage + 799;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'b':
                  if (strncmp (KR_keyword, "/dev/sdab13", 11) == 0)
                    {
{
return dev_storage + 784;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'a':
                  if (strncmp (KR_keyword, "/dev/sdaa13", 11) == 0)
                    {
{
return dev_storage + 769;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                default:
{
return	NULL;

}
                }
            default:
{
return	NULL;

}
            }
        case '2':
          switch (KR_keyword [7])
            {
            case 'y':
              switch (KR_keyword [9])
                {
                case '6':
                  if (strncmp (KR_keyword, "/dev/ttyS62", 11) == 0)
                    {
{
return dev_storage + 2570;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case '5':
                  if (strncmp (KR_keyword, "/dev/ttyS52", 11) == 0)
                    {
{
return dev_storage + 2560;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case '4':
                  if (strncmp (KR_keyword, "/dev/ttyS42", 11) == 0)
                    {
{
return dev_storage + 2550;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case '3':
                  if (strncmp (KR_keyword, "/dev/ttyS32", 11) == 0)
                    {
{
return dev_storage + 2540;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case '2':
                  if (strncmp (KR_keyword, "/dev/ttyS22", 11) == 0)
                    {
{
return dev_storage + 2530;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case '1':
                  if (strncmp (KR_keyword, "/dev/ttyS12", 11) == 0)
                    {
{
return dev_storage + 2520;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                default:
{
return	NULL;

}
                }
            case 't':
              switch (KR_keyword [9])
                {
                case '2':
                  if (strncmp (KR_keyword, "/dev/nst122", 11) == 0)
                    {
{
return dev_storage + 226;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case '1':
                  if (strncmp (KR_keyword, "/dev/nst112", 11) == 0)
                    {
{
return dev_storage + 216;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case '0':
                  if (strncmp (KR_keyword, "/dev/nst102", 11) == 0)
                    {
{
return dev_storage + 206;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                default:
{
return	NULL;

}
                }
            case 'n':
              switch (KR_keyword [9])
                {
                case '6':
                  if (strncmp (KR_keyword, "/dev/cons62", 11) == 0)
                    {
{
return dev_storage + 82;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case '5':
                  if (strncmp (KR_keyword, "/dev/cons52", 11) == 0)
                    {
{
return dev_storage + 72;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case '4':
                  if (strncmp (KR_keyword, "/dev/cons42", 11) == 0)
                    {
{
return dev_storage + 62;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case '3':
                  if (strncmp (KR_keyword, "/dev/cons32", 11) == 0)
                    {
{
return dev_storage + 52;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case '2':
                  if (strncmp (KR_keyword, "/dev/cons22", 11) == 0)
                    {
{
return dev_storage + 42;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case '1':
                  if (strncmp (KR_keyword, "/dev/cons12", 11) == 0)
                    {
{
return dev_storage + 32;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                default:
{
return	NULL;

}
                }
            case 'd':
              switch (KR_keyword [8])
                {
                case 'x':
                  if (strncmp (KR_keyword, "/dev/sddx12", 11) == 0)
                    {
{
return dev_storage + 2359;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'w':
                  if (strncmp (KR_keyword, "/dev/sddw12", 11) == 0)
                    {
{
return dev_storage + 2344;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'v':
                  if (strncmp (KR_keyword, "/dev/sddv12", 11) == 0)
                    {
{
return dev_storage + 2329;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'u':
                  if (strncmp (KR_keyword, "/dev/sddu12", 11) == 0)
                    {
{
return dev_storage + 2314;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 't':
                  if (strncmp (KR_keyword, "/dev/sddt12", 11) == 0)
                    {
{
return dev_storage + 2299;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 's':
                  if (strncmp (KR_keyword, "/dev/sdds12", 11) == 0)
                    {
{
return dev_storage + 2284;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'r':
                  if (strncmp (KR_keyword, "/dev/sddr12", 11) == 0)
                    {
{
return dev_storage + 2269;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'q':
                  if (strncmp (KR_keyword, "/dev/sddq12", 11) == 0)
                    {
{
return dev_storage + 2254;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'p':
                  if (strncmp (KR_keyword, "/dev/sddp12", 11) == 0)
                    {
{
return dev_storage + 2239;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'o':
                  if (strncmp (KR_keyword, "/dev/sddo12", 11) == 0)
                    {
{
return dev_storage + 2224;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'n':
                  if (strncmp (KR_keyword, "/dev/sddn12", 11) == 0)
                    {
{
return dev_storage + 2209;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'm':
                  if (strncmp (KR_keyword, "/dev/sddm12", 11) == 0)
                    {
{
return dev_storage + 2194;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'l':
                  if (strncmp (KR_keyword, "/dev/sddl12", 11) == 0)
                    {
{
return dev_storage + 2179;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'k':
                  if (strncmp (KR_keyword, "/dev/sddk12", 11) == 0)
                    {
{
return dev_storage + 2164;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'j':
                  if (strncmp (KR_keyword, "/dev/sddj12", 11) == 0)
                    {
{
return dev_storage + 2149;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'i':
                  if (strncmp (KR_keyword, "/dev/sddi12", 11) == 0)
                    {
{
return dev_storage + 2134;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'h':
                  if (strncmp (KR_keyword, "/dev/sddh12", 11) == 0)
                    {
{
return dev_storage + 2119;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'g':
                  if (strncmp (KR_keyword, "/dev/sddg12", 11) == 0)
                    {
{
return dev_storage + 2104;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'f':
                  if (strncmp (KR_keyword, "/dev/sddf12", 11) == 0)
                    {
{
return dev_storage + 2089;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'e':
                  if (strncmp (KR_keyword, "/dev/sdde12", 11) == 0)
                    {
{
return dev_storage + 2074;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'd':
                  if (strncmp (KR_keyword, "/dev/sddd12", 11) == 0)
                    {
{
return dev_storage + 2059;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'c':
                  if (strncmp (KR_keyword, "/dev/sddc12", 11) == 0)
                    {
{
return dev_storage + 2044;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'b':
                  if (strncmp (KR_keyword, "/dev/sddb12", 11) == 0)
                    {
{
return dev_storage + 2029;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'a':
                  if (strncmp (KR_keyword, "/dev/sdda12", 11) == 0)
                    {
{
return dev_storage + 2014;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                default:
{
return	NULL;

}
                }
            case 'c':
              switch (KR_keyword [8])
                {
                case 'z':
                  if (strncmp (KR_keyword, "/dev/sdcz12", 11) == 0)
                    {
{
return dev_storage + 1975;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'y':
                  if (strncmp (KR_keyword, "/dev/sdcy12", 11) == 0)
                    {
{
return dev_storage + 1960;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'x':
                  if (strncmp (KR_keyword, "/dev/sdcx12", 11) == 0)
                    {
{
return dev_storage + 1945;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'w':
                  if (strncmp (KR_keyword, "/dev/sdcw12", 11) == 0)
                    {
{
return dev_storage + 1930;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'v':
                  if (strncmp (KR_keyword, "/dev/sdcv12", 11) == 0)
                    {
{
return dev_storage + 1915;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'u':
                  if (strncmp (KR_keyword, "/dev/sdcu12", 11) == 0)
                    {
{
return dev_storage + 1900;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 't':
                  if (strncmp (KR_keyword, "/dev/sdct12", 11) == 0)
                    {
{
return dev_storage + 1885;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 's':
                  if (strncmp (KR_keyword, "/dev/sdcs12", 11) == 0)
                    {
{
return dev_storage + 1870;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'r':
                  if (strncmp (KR_keyword, "/dev/sdcr12", 11) == 0)
                    {
{
return dev_storage + 1855;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'q':
                  if (strncmp (KR_keyword, "/dev/sdcq12", 11) == 0)
                    {
{
return dev_storage + 1840;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'p':
                  if (strncmp (KR_keyword, "/dev/sdcp12", 11) == 0)
                    {
{
return dev_storage + 1825;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'o':
                  if (strncmp (KR_keyword, "/dev/sdco12", 11) == 0)
                    {
{
return dev_storage + 1810;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'n':
                  if (strncmp (KR_keyword, "/dev/sdcn12", 11) == 0)
                    {
{
return dev_storage + 1795;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'm':
                  if (strncmp (KR_keyword, "/dev/sdcm12", 11) == 0)
                    {
{
return dev_storage + 1780;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'l':
                  if (strncmp (KR_keyword, "/dev/sdcl12", 11) == 0)
                    {
{
return dev_storage + 1765;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'k':
                  if (strncmp (KR_keyword, "/dev/sdck12", 11) == 0)
                    {
{
return dev_storage + 1750;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'j':
                  if (strncmp (KR_keyword, "/dev/sdcj12", 11) == 0)
                    {
{
return dev_storage + 1735;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'i':
                  if (strncmp (KR_keyword, "/dev/sdci12", 11) == 0)
                    {
{
return dev_storage + 1720;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'h':
                  if (strncmp (KR_keyword, "/dev/sdch12", 11) == 0)
                    {
{
return dev_storage + 1705;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'g':
                  if (strncmp (KR_keyword, "/dev/sdcg12", 11) == 0)
                    {
{
return dev_storage + 1690;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'f':
                  if (strncmp (KR_keyword, "/dev/sdcf12", 11) == 0)
                    {
{
return dev_storage + 1675;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'e':
                  if (strncmp (KR_keyword, "/dev/sdce12", 11) == 0)
                    {
{
return dev_storage + 1660;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'd':
                  if (strncmp (KR_keyword, "/dev/sdcd12", 11) == 0)
                    {
{
return dev_storage + 1645;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'c':
                  if (strncmp (KR_keyword, "/dev/sdcc12", 11) == 0)
                    {
{
return dev_storage + 1630;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'b':
                  if (strncmp (KR_keyword, "/dev/sdcb12", 11) == 0)
                    {
{
return dev_storage + 1615;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'a':
                  if (strncmp (KR_keyword, "/dev/sdca12", 11) == 0)
                    {
{
return dev_storage + 1600;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                default:
{
return	NULL;

}
                }
            case 'b':
              switch (KR_keyword [8])
                {
                case 'z':
                  if (strncmp (KR_keyword, "/dev/sdbz12", 11) == 0)
                    {
{
return dev_storage + 1559;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'y':
                  if (strncmp (KR_keyword, "/dev/sdby12", 11) == 0)
                    {
{
return dev_storage + 1544;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'x':
                  if (strncmp (KR_keyword, "/dev/sdbx12", 11) == 0)
                    {
{
return dev_storage + 1529;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'w':
                  if (strncmp (KR_keyword, "/dev/sdbw12", 11) == 0)
                    {
{
return dev_storage + 1514;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'v':
                  if (strncmp (KR_keyword, "/dev/sdbv12", 11) == 0)
                    {
{
return dev_storage + 1499;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'u':
                  if (strncmp (KR_keyword, "/dev/sdbu12", 11) == 0)
                    {
{
return dev_storage + 1484;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 't':
                  if (strncmp (KR_keyword, "/dev/sdbt12", 11) == 0)
                    {
{
return dev_storage + 1469;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 's':
                  if (strncmp (KR_keyword, "/dev/sdbs12", 11) == 0)
                    {
{
return dev_storage + 1454;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'r':
                  if (strncmp (KR_keyword, "/dev/sdbr12", 11) == 0)
                    {
{
return dev_storage + 1439;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'q':
                  if (strncmp (KR_keyword, "/dev/sdbq12", 11) == 0)
                    {
{
return dev_storage + 1424;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'p':
                  if (strncmp (KR_keyword, "/dev/sdbp12", 11) == 0)
                    {
{
return dev_storage + 1409;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'o':
                  if (strncmp (KR_keyword, "/dev/sdbo12", 11) == 0)
                    {
{
return dev_storage + 1394;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'n':
                  if (strncmp (KR_keyword, "/dev/sdbn12", 11) == 0)
                    {
{
return dev_storage + 1379;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'm':
                  if (strncmp (KR_keyword, "/dev/sdbm12", 11) == 0)
                    {
{
return dev_storage + 1364;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'l':
                  if (strncmp (KR_keyword, "/dev/sdbl12", 11) == 0)
                    {
{
return dev_storage + 1349;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'k':
                  if (strncmp (KR_keyword, "/dev/sdbk12", 11) == 0)
                    {
{
return dev_storage + 1334;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'j':
                  if (strncmp (KR_keyword, "/dev/sdbj12", 11) == 0)
                    {
{
return dev_storage + 1319;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'i':
                  if (strncmp (KR_keyword, "/dev/sdbi12", 11) == 0)
                    {
{
return dev_storage + 1304;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'h':
                  if (strncmp (KR_keyword, "/dev/sdbh12", 11) == 0)
                    {
{
return dev_storage + 1289;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'g':
                  if (strncmp (KR_keyword, "/dev/sdbg12", 11) == 0)
                    {
{
return dev_storage + 1274;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'f':
                  if (strncmp (KR_keyword, "/dev/sdbf12", 11) == 0)
                    {
{
return dev_storage + 1259;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'e':
                  if (strncmp (KR_keyword, "/dev/sdbe12", 11) == 0)
                    {
{
return dev_storage + 1244;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'd':
                  if (strncmp (KR_keyword, "/dev/sdbd12", 11) == 0)
                    {
{
return dev_storage + 1229;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'c':
                  if (strncmp (KR_keyword, "/dev/sdbc12", 11) == 0)
                    {
{
return dev_storage + 1214;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'b':
                  if (strncmp (KR_keyword, "/dev/sdbb12", 11) == 0)
                    {
{
return dev_storage + 1199;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'a':
                  if (strncmp (KR_keyword, "/dev/sdba12", 11) == 0)
                    {
{
return dev_storage + 1184;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                default:
{
return	NULL;

}
                }
            case 'a':
              switch (KR_keyword [8])
                {
                case 'z':
                  if (strncmp (KR_keyword, "/dev/sdaz12", 11) == 0)
                    {
{
return dev_storage + 1143;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'y':
                  if (strncmp (KR_keyword, "/dev/sday12", 11) == 0)
                    {
{
return dev_storage + 1128;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'x':
                  if (strncmp (KR_keyword, "/dev/sdax12", 11) == 0)
                    {
{
return dev_storage + 1113;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'w':
                  if (strncmp (KR_keyword, "/dev/sdaw12", 11) == 0)
                    {
{
return dev_storage + 1098;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'v':
                  if (strncmp (KR_keyword, "/dev/sdav12", 11) == 0)
                    {
{
return dev_storage + 1083;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'u':
                  if (strncmp (KR_keyword, "/dev/sdau12", 11) == 0)
                    {
{
return dev_storage + 1068;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 't':
                  if (strncmp (KR_keyword, "/dev/sdat12", 11) == 0)
                    {
{
return dev_storage + 1053;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 's':
                  if (strncmp (KR_keyword, "/dev/sdas12", 11) == 0)
                    {
{
return dev_storage + 1038;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'r':
                  if (strncmp (KR_keyword, "/dev/sdar12", 11) == 0)
                    {
{
return dev_storage + 1023;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'q':
                  if (strncmp (KR_keyword, "/dev/sdaq12", 11) == 0)
                    {
{
return dev_storage + 1008;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'p':
                  if (strncmp (KR_keyword, "/dev/sdap12", 11) == 0)
                    {
{
return dev_storage + 993;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'o':
                  if (strncmp (KR_keyword, "/dev/sdao12", 11) == 0)
                    {
{
return dev_storage + 978;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'n':
                  if (strncmp (KR_keyword, "/dev/sdan12", 11) == 0)
                    {
{
return dev_storage + 963;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'm':
                  if (strncmp (KR_keyword, "/dev/sdam12", 11) == 0)
                    {
{
return dev_storage + 948;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'l':
                  if (strncmp (KR_keyword, "/dev/sdal12", 11) == 0)
                    {
{
return dev_storage + 933;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'k':
                  if (strncmp (KR_keyword, "/dev/sdak12", 11) == 0)
                    {
{
return dev_storage + 918;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'j':
                  if (strncmp (KR_keyword, "/dev/sdaj12", 11) == 0)
                    {
{
return dev_storage + 903;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'i':
                  if (strncmp (KR_keyword, "/dev/sdai12", 11) == 0)
                    {
{
return dev_storage + 888;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'h':
                  if (strncmp (KR_keyword, "/dev/sdah12", 11) == 0)
                    {
{
return dev_storage + 873;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'g':
                  if (strncmp (KR_keyword, "/dev/sdag12", 11) == 0)
                    {
{
return dev_storage + 858;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'f':
                  if (strncmp (KR_keyword, "/dev/sdaf12", 11) == 0)
                    {
{
return dev_storage + 843;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'e':
                  if (strncmp (KR_keyword, "/dev/sdae12", 11) == 0)
                    {
{
return dev_storage + 828;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'd':
                  if (strncmp (KR_keyword, "/dev/sdad12", 11) == 0)
                    {
{
return dev_storage + 813;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'c':
                  if (strncmp (KR_keyword, "/dev/sdac12", 11) == 0)
                    {
{
return dev_storage + 798;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'b':
                  if (strncmp (KR_keyword, "/dev/sdab12", 11) == 0)
                    {
{
return dev_storage + 783;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'a':
                  if (strncmp (KR_keyword, "/dev/sdaa12", 11) == 0)
                    {
{
return dev_storage + 768;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                default:
{
return	NULL;

}
                }
            default:
{
return	NULL;

}
            }
        case '1':
          switch (KR_keyword [7])
            {
            case 'y':
              switch (KR_keyword [9])
                {
                case '6':
                  if (strncmp (KR_keyword, "/dev/ttyS61", 11) == 0)
                    {
{
return dev_storage + 2569;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case '5':
                  if (strncmp (KR_keyword, "/dev/ttyS51", 11) == 0)
                    {
{
return dev_storage + 2559;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case '4':
                  if (strncmp (KR_keyword, "/dev/ttyS41", 11) == 0)
                    {
{
return dev_storage + 2549;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case '3':
                  if (strncmp (KR_keyword, "/dev/ttyS31", 11) == 0)
                    {
{
return dev_storage + 2539;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case '2':
                  if (strncmp (KR_keyword, "/dev/ttyS21", 11) == 0)
                    {
{
return dev_storage + 2529;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case '1':
                  if (strncmp (KR_keyword, "/dev/ttyS11", 11) == 0)
                    {
{
return dev_storage + 2519;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                default:
{
return	NULL;

}
                }
            case 't':
              switch (KR_keyword [9])
                {
                case '2':
                  if (strncmp (KR_keyword, "/dev/nst121", 11) == 0)
                    {
{
return dev_storage + 225;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case '1':
                  if (strncmp (KR_keyword, "/dev/nst111", 11) == 0)
                    {
{
return dev_storage + 215;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case '0':
                  if (strncmp (KR_keyword, "/dev/nst101", 11) == 0)
                    {
{
return dev_storage + 205;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                default:
{
return	NULL;

}
                }
            case 'n':
              switch (KR_keyword [9])
                {
                case '6':
                  if (strncmp (KR_keyword, "/dev/cons61", 11) == 0)
                    {
{
return dev_storage + 81;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case '5':
                  if (strncmp (KR_keyword, "/dev/cons51", 11) == 0)
                    {
{
return dev_storage + 71;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case '4':
                  if (strncmp (KR_keyword, "/dev/cons41", 11) == 0)
                    {
{
return dev_storage + 61;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case '3':
                  if (strncmp (KR_keyword, "/dev/cons31", 11) == 0)
                    {
{
return dev_storage + 51;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case '2':
                  if (strncmp (KR_keyword, "/dev/cons21", 11) == 0)
                    {
{
return dev_storage + 41;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case '1':
                  if (strncmp (KR_keyword, "/dev/cons11", 11) == 0)
                    {
{
return dev_storage + 31;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                default:
{
return	NULL;

}
                }
            case 'd':
              switch (KR_keyword [8])
                {
                case 'x':
                  if (strncmp (KR_keyword, "/dev/sddx11", 11) == 0)
                    {
{
return dev_storage + 2358;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'w':
                  if (strncmp (KR_keyword, "/dev/sddw11", 11) == 0)
                    {
{
return dev_storage + 2343;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'v':
                  if (strncmp (KR_keyword, "/dev/sddv11", 11) == 0)
                    {
{
return dev_storage + 2328;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'u':
                  if (strncmp (KR_keyword, "/dev/sddu11", 11) == 0)
                    {
{
return dev_storage + 2313;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 't':
                  if (strncmp (KR_keyword, "/dev/sddt11", 11) == 0)
                    {
{
return dev_storage + 2298;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 's':
                  if (strncmp (KR_keyword, "/dev/sdds11", 11) == 0)
                    {
{
return dev_storage + 2283;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'r':
                  if (strncmp (KR_keyword, "/dev/sddr11", 11) == 0)
                    {
{
return dev_storage + 2268;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'q':
                  if (strncmp (KR_keyword, "/dev/sddq11", 11) == 0)
                    {
{
return dev_storage + 2253;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'p':
                  if (strncmp (KR_keyword, "/dev/sddp11", 11) == 0)
                    {
{
return dev_storage + 2238;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'o':
                  if (strncmp (KR_keyword, "/dev/sddo11", 11) == 0)
                    {
{
return dev_storage + 2223;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'n':
                  if (strncmp (KR_keyword, "/dev/sddn11", 11) == 0)
                    {
{
return dev_storage + 2208;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'm':
                  if (strncmp (KR_keyword, "/dev/sddm11", 11) == 0)
                    {
{
return dev_storage + 2193;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'l':
                  if (strncmp (KR_keyword, "/dev/sddl11", 11) == 0)
                    {
{
return dev_storage + 2178;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'k':
                  if (strncmp (KR_keyword, "/dev/sddk11", 11) == 0)
                    {
{
return dev_storage + 2163;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'j':
                  if (strncmp (KR_keyword, "/dev/sddj11", 11) == 0)
                    {
{
return dev_storage + 2148;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'i':
                  if (strncmp (KR_keyword, "/dev/sddi11", 11) == 0)
                    {
{
return dev_storage + 2133;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'h':
                  if (strncmp (KR_keyword, "/dev/sddh11", 11) == 0)
                    {
{
return dev_storage + 2118;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'g':
                  if (strncmp (KR_keyword, "/dev/sddg11", 11) == 0)
                    {
{
return dev_storage + 2103;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'f':
                  if (strncmp (KR_keyword, "/dev/sddf11", 11) == 0)
                    {
{
return dev_storage + 2088;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'e':
                  if (strncmp (KR_keyword, "/dev/sdde11", 11) == 0)
                    {
{
return dev_storage + 2073;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'd':
                  if (strncmp (KR_keyword, "/dev/sddd11", 11) == 0)
                    {
{
return dev_storage + 2058;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'c':
                  if (strncmp (KR_keyword, "/dev/sddc11", 11) == 0)
                    {
{
return dev_storage + 2043;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'b':
                  if (strncmp (KR_keyword, "/dev/sddb11", 11) == 0)
                    {
{
return dev_storage + 2028;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'a':
                  if (strncmp (KR_keyword, "/dev/sdda11", 11) == 0)
                    {
{
return dev_storage + 2013;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                default:
{
return	NULL;

}
                }
            case 'c':
              switch (KR_keyword [8])
                {
                case 'z':
                  if (strncmp (KR_keyword, "/dev/sdcz11", 11) == 0)
                    {
{
return dev_storage + 1974;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'y':
                  if (strncmp (KR_keyword, "/dev/sdcy11", 11) == 0)
                    {
{
return dev_storage + 1959;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'x':
                  if (strncmp (KR_keyword, "/dev/sdcx11", 11) == 0)
                    {
{
return dev_storage + 1944;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'w':
                  if (strncmp (KR_keyword, "/dev/sdcw11", 11) == 0)
                    {
{
return dev_storage + 1929;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'v':
                  if (strncmp (KR_keyword, "/dev/sdcv11", 11) == 0)
                    {
{
return dev_storage + 1914;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'u':
                  if (strncmp (KR_keyword, "/dev/sdcu11", 11) == 0)
                    {
{
return dev_storage + 1899;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 't':
                  if (strncmp (KR_keyword, "/dev/sdct11", 11) == 0)
                    {
{
return dev_storage + 1884;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 's':
                  if (strncmp (KR_keyword, "/dev/sdcs11", 11) == 0)
                    {
{
return dev_storage + 1869;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'r':
                  if (strncmp (KR_keyword, "/dev/sdcr11", 11) == 0)
                    {
{
return dev_storage + 1854;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'q':
                  if (strncmp (KR_keyword, "/dev/sdcq11", 11) == 0)
                    {
{
return dev_storage + 1839;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'p':
                  if (strncmp (KR_keyword, "/dev/sdcp11", 11) == 0)
                    {
{
return dev_storage + 1824;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'o':
                  if (strncmp (KR_keyword, "/dev/sdco11", 11) == 0)
                    {
{
return dev_storage + 1809;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'n':
                  if (strncmp (KR_keyword, "/dev/sdcn11", 11) == 0)
                    {
{
return dev_storage + 1794;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'm':
                  if (strncmp (KR_keyword, "/dev/sdcm11", 11) == 0)
                    {
{
return dev_storage + 1779;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'l':
                  if (strncmp (KR_keyword, "/dev/sdcl11", 11) == 0)
                    {
{
return dev_storage + 1764;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'k':
                  if (strncmp (KR_keyword, "/dev/sdck11", 11) == 0)
                    {
{
return dev_storage + 1749;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'j':
                  if (strncmp (KR_keyword, "/dev/sdcj11", 11) == 0)
                    {
{
return dev_storage + 1734;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'i':
                  if (strncmp (KR_keyword, "/dev/sdci11", 11) == 0)
                    {
{
return dev_storage + 1719;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'h':
                  if (strncmp (KR_keyword, "/dev/sdch11", 11) == 0)
                    {
{
return dev_storage + 1704;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'g':
                  if (strncmp (KR_keyword, "/dev/sdcg11", 11) == 0)
                    {
{
return dev_storage + 1689;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'f':
                  if (strncmp (KR_keyword, "/dev/sdcf11", 11) == 0)
                    {
{
return dev_storage + 1674;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'e':
                  if (strncmp (KR_keyword, "/dev/sdce11", 11) == 0)
                    {
{
return dev_storage + 1659;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'd':
                  if (strncmp (KR_keyword, "/dev/sdcd11", 11) == 0)
                    {
{
return dev_storage + 1644;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'c':
                  if (strncmp (KR_keyword, "/dev/sdcc11", 11) == 0)
                    {
{
return dev_storage + 1629;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'b':
                  if (strncmp (KR_keyword, "/dev/sdcb11", 11) == 0)
                    {
{
return dev_storage + 1614;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'a':
                  if (strncmp (KR_keyword, "/dev/sdca11", 11) == 0)
                    {
{
return dev_storage + 1599;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                default:
{
return	NULL;

}
                }
            case 'b':
              switch (KR_keyword [8])
                {
                case 'z':
                  if (strncmp (KR_keyword, "/dev/sdbz11", 11) == 0)
                    {
{
return dev_storage + 1558;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'y':
                  if (strncmp (KR_keyword, "/dev/sdby11", 11) == 0)
                    {
{
return dev_storage + 1543;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'x':
                  if (strncmp (KR_keyword, "/dev/sdbx11", 11) == 0)
                    {
{
return dev_storage + 1528;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'w':
                  if (strncmp (KR_keyword, "/dev/sdbw11", 11) == 0)
                    {
{
return dev_storage + 1513;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'v':
                  if (strncmp (KR_keyword, "/dev/sdbv11", 11) == 0)
                    {
{
return dev_storage + 1498;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'u':
                  if (strncmp (KR_keyword, "/dev/sdbu11", 11) == 0)
                    {
{
return dev_storage + 1483;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 't':
                  if (strncmp (KR_keyword, "/dev/sdbt11", 11) == 0)
                    {
{
return dev_storage + 1468;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 's':
                  if (strncmp (KR_keyword, "/dev/sdbs11", 11) == 0)
                    {
{
return dev_storage + 1453;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'r':
                  if (strncmp (KR_keyword, "/dev/sdbr11", 11) == 0)
                    {
{
return dev_storage + 1438;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'q':
                  if (strncmp (KR_keyword, "/dev/sdbq11", 11) == 0)
                    {
{
return dev_storage + 1423;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'p':
                  if (strncmp (KR_keyword, "/dev/sdbp11", 11) == 0)
                    {
{
return dev_storage + 1408;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'o':
                  if (strncmp (KR_keyword, "/dev/sdbo11", 11) == 0)
                    {
{
return dev_storage + 1393;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'n':
                  if (strncmp (KR_keyword, "/dev/sdbn11", 11) == 0)
                    {
{
return dev_storage + 1378;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'm':
                  if (strncmp (KR_keyword, "/dev/sdbm11", 11) == 0)
                    {
{
return dev_storage + 1363;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'l':
                  if (strncmp (KR_keyword, "/dev/sdbl11", 11) == 0)
                    {
{
return dev_storage + 1348;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'k':
                  if (strncmp (KR_keyword, "/dev/sdbk11", 11) == 0)
                    {
{
return dev_storage + 1333;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'j':
                  if (strncmp (KR_keyword, "/dev/sdbj11", 11) == 0)
                    {
{
return dev_storage + 1318;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'i':
                  if (strncmp (KR_keyword, "/dev/sdbi11", 11) == 0)
                    {
{
return dev_storage + 1303;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'h':
                  if (strncmp (KR_keyword, "/dev/sdbh11", 11) == 0)
                    {
{
return dev_storage + 1288;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'g':
                  if (strncmp (KR_keyword, "/dev/sdbg11", 11) == 0)
                    {
{
return dev_storage + 1273;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'f':
                  if (strncmp (KR_keyword, "/dev/sdbf11", 11) == 0)
                    {
{
return dev_storage + 1258;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'e':
                  if (strncmp (KR_keyword, "/dev/sdbe11", 11) == 0)
                    {
{
return dev_storage + 1243;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'd':
                  if (strncmp (KR_keyword, "/dev/sdbd11", 11) == 0)
                    {
{
return dev_storage + 1228;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'c':
                  if (strncmp (KR_keyword, "/dev/sdbc11", 11) == 0)
                    {
{
return dev_storage + 1213;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'b':
                  if (strncmp (KR_keyword, "/dev/sdbb11", 11) == 0)
                    {
{
return dev_storage + 1198;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'a':
                  if (strncmp (KR_keyword, "/dev/sdba11", 11) == 0)
                    {
{
return dev_storage + 1183;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                default:
{
return	NULL;

}
                }
            case 'a':
              switch (KR_keyword [8])
                {
                case 'z':
                  if (strncmp (KR_keyword, "/dev/sdaz11", 11) == 0)
                    {
{
return dev_storage + 1142;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'y':
                  if (strncmp (KR_keyword, "/dev/sday11", 11) == 0)
                    {
{
return dev_storage + 1127;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'x':
                  if (strncmp (KR_keyword, "/dev/sdax11", 11) == 0)
                    {
{
return dev_storage + 1112;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'w':
                  if (strncmp (KR_keyword, "/dev/sdaw11", 11) == 0)
                    {
{
return dev_storage + 1097;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'v':
                  if (strncmp (KR_keyword, "/dev/sdav11", 11) == 0)
                    {
{
return dev_storage + 1082;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'u':
                  if (strncmp (KR_keyword, "/dev/sdau11", 11) == 0)
                    {
{
return dev_storage + 1067;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 't':
                  if (strncmp (KR_keyword, "/dev/sdat11", 11) == 0)
                    {
{
return dev_storage + 1052;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 's':
                  if (strncmp (KR_keyword, "/dev/sdas11", 11) == 0)
                    {
{
return dev_storage + 1037;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'r':
                  if (strncmp (KR_keyword, "/dev/sdar11", 11) == 0)
                    {
{
return dev_storage + 1022;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'q':
                  if (strncmp (KR_keyword, "/dev/sdaq11", 11) == 0)
                    {
{
return dev_storage + 1007;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'p':
                  if (strncmp (KR_keyword, "/dev/sdap11", 11) == 0)
                    {
{
return dev_storage + 992;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'o':
                  if (strncmp (KR_keyword, "/dev/sdao11", 11) == 0)
                    {
{
return dev_storage + 977;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'n':
                  if (strncmp (KR_keyword, "/dev/sdan11", 11) == 0)
                    {
{
return dev_storage + 962;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'm':
                  if (strncmp (KR_keyword, "/dev/sdam11", 11) == 0)
                    {
{
return dev_storage + 947;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'l':
                  if (strncmp (KR_keyword, "/dev/sdal11", 11) == 0)
                    {
{
return dev_storage + 932;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'k':
                  if (strncmp (KR_keyword, "/dev/sdak11", 11) == 0)
                    {
{
return dev_storage + 917;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'j':
                  if (strncmp (KR_keyword, "/dev/sdaj11", 11) == 0)
                    {
{
return dev_storage + 902;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'i':
                  if (strncmp (KR_keyword, "/dev/sdai11", 11) == 0)
                    {
{
return dev_storage + 887;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'h':
                  if (strncmp (KR_keyword, "/dev/sdah11", 11) == 0)
                    {
{
return dev_storage + 872;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'g':
                  if (strncmp (KR_keyword, "/dev/sdag11", 11) == 0)
                    {
{
return dev_storage + 857;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'f':
                  if (strncmp (KR_keyword, "/dev/sdaf11", 11) == 0)
                    {
{
return dev_storage + 842;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'e':
                  if (strncmp (KR_keyword, "/dev/sdae11", 11) == 0)
                    {
{
return dev_storage + 827;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'd':
                  if (strncmp (KR_keyword, "/dev/sdad11", 11) == 0)
                    {
{
return dev_storage + 812;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'c':
                  if (strncmp (KR_keyword, "/dev/sdac11", 11) == 0)
                    {
{
return dev_storage + 797;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'b':
                  if (strncmp (KR_keyword, "/dev/sdab11", 11) == 0)
                    {
{
return dev_storage + 782;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'a':
                  if (strncmp (KR_keyword, "/dev/sdaa11", 11) == 0)
                    {
{
return dev_storage + 767;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                default:
{
return	NULL;

}
                }
            default:
{
return	NULL;

}
            }
        case '0':
          switch (KR_keyword [7])
            {
            case 'y':
              switch (KR_keyword [9])
                {
                case '6':
                  if (strncmp (KR_keyword, "/dev/ttyS60", 11) == 0)
                    {
{
return dev_storage + 2568;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case '5':
                  if (strncmp (KR_keyword, "/dev/ttyS50", 11) == 0)
                    {
{
return dev_storage + 2558;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case '4':
                  if (strncmp (KR_keyword, "/dev/ttyS40", 11) == 0)
                    {
{
return dev_storage + 2548;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case '3':
                  if (strncmp (KR_keyword, "/dev/ttyS30", 11) == 0)
                    {
{
return dev_storage + 2538;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case '2':
                  if (strncmp (KR_keyword, "/dev/ttyS20", 11) == 0)
                    {
{
return dev_storage + 2528;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case '1':
                  if (strncmp (KR_keyword, "/dev/ttyS10", 11) == 0)
                    {
{
return dev_storage + 2518;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                default:
{
return	NULL;

}
                }
            case 't':
              switch (KR_keyword [9])
                {
                case '2':
                  if (strncmp (KR_keyword, "/dev/nst120", 11) == 0)
                    {
{
return dev_storage + 224;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case '1':
                  if (strncmp (KR_keyword, "/dev/nst110", 11) == 0)
                    {
{
return dev_storage + 214;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case '0':
                  if (strncmp (KR_keyword, "/dev/nst100", 11) == 0)
                    {
{
return dev_storage + 204;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                default:
{
return	NULL;

}
                }
            case 'n':
              switch (KR_keyword [9])
                {
                case '6':
                  if (strncmp (KR_keyword, "/dev/cons60", 11) == 0)
                    {
{
return dev_storage + 80;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case '5':
                  if (strncmp (KR_keyword, "/dev/cons50", 11) == 0)
                    {
{
return dev_storage + 70;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case '4':
                  if (strncmp (KR_keyword, "/dev/cons40", 11) == 0)
                    {
{
return dev_storage + 60;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case '3':
                  if (strncmp (KR_keyword, "/dev/cons30", 11) == 0)
                    {
{
return dev_storage + 50;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case '2':
                  if (strncmp (KR_keyword, "/dev/cons20", 11) == 0)
                    {
{
return dev_storage + 40;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case '1':
                  if (strncmp (KR_keyword, "/dev/cons10", 11) == 0)
                    {
{
return dev_storage + 30;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                default:
{
return	NULL;

}
                }
            case 'd':
              switch (KR_keyword [8])
                {
                case 'x':
                  if (strncmp (KR_keyword, "/dev/sddx10", 11) == 0)
                    {
{
return dev_storage + 2357;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'w':
                  if (strncmp (KR_keyword, "/dev/sddw10", 11) == 0)
                    {
{
return dev_storage + 2342;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'v':
                  if (strncmp (KR_keyword, "/dev/sddv10", 11) == 0)
                    {
{
return dev_storage + 2327;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'u':
                  if (strncmp (KR_keyword, "/dev/sddu10", 11) == 0)
                    {
{
return dev_storage + 2312;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 't':
                  if (strncmp (KR_keyword, "/dev/sddt10", 11) == 0)
                    {
{
return dev_storage + 2297;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 's':
                  if (strncmp (KR_keyword, "/dev/sdds10", 11) == 0)
                    {
{
return dev_storage + 2282;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'r':
                  if (strncmp (KR_keyword, "/dev/sddr10", 11) == 0)
                    {
{
return dev_storage + 2267;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'q':
                  if (strncmp (KR_keyword, "/dev/sddq10", 11) == 0)
                    {
{
return dev_storage + 2252;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'p':
                  if (strncmp (KR_keyword, "/dev/sddp10", 11) == 0)
                    {
{
return dev_storage + 2237;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'o':
                  if (strncmp (KR_keyword, "/dev/sddo10", 11) == 0)
                    {
{
return dev_storage + 2222;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'n':
                  if (strncmp (KR_keyword, "/dev/sddn10", 11) == 0)
                    {
{
return dev_storage + 2207;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'm':
                  if (strncmp (KR_keyword, "/dev/sddm10", 11) == 0)
                    {
{
return dev_storage + 2192;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'l':
                  if (strncmp (KR_keyword, "/dev/sddl10", 11) == 0)
                    {
{
return dev_storage + 2177;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'k':
                  if (strncmp (KR_keyword, "/dev/sddk10", 11) == 0)
                    {
{
return dev_storage + 2162;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'j':
                  if (strncmp (KR_keyword, "/dev/sddj10", 11) == 0)
                    {
{
return dev_storage + 2147;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'i':
                  if (strncmp (KR_keyword, "/dev/sddi10", 11) == 0)
                    {
{
return dev_storage + 2132;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'h':
                  if (strncmp (KR_keyword, "/dev/sddh10", 11) == 0)
                    {
{
return dev_storage + 2117;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'g':
                  if (strncmp (KR_keyword, "/dev/sddg10", 11) == 0)
                    {
{
return dev_storage + 2102;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'f':
                  if (strncmp (KR_keyword, "/dev/sddf10", 11) == 0)
                    {
{
return dev_storage + 2087;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'e':
                  if (strncmp (KR_keyword, "/dev/sdde10", 11) == 0)
                    {
{
return dev_storage + 2072;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'd':
                  if (strncmp (KR_keyword, "/dev/sddd10", 11) == 0)
                    {
{
return dev_storage + 2057;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'c':
                  if (strncmp (KR_keyword, "/dev/sddc10", 11) == 0)
                    {
{
return dev_storage + 2042;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'b':
                  if (strncmp (KR_keyword, "/dev/sddb10", 11) == 0)
                    {
{
return dev_storage + 2027;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'a':
                  if (strncmp (KR_keyword, "/dev/sdda10", 11) == 0)
                    {
{
return dev_storage + 2012;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                default:
{
return	NULL;

}
                }
            case 'c':
              switch (KR_keyword [8])
                {
                case 'z':
                  if (strncmp (KR_keyword, "/dev/sdcz10", 11) == 0)
                    {
{
return dev_storage + 1973;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'y':
                  if (strncmp (KR_keyword, "/dev/sdcy10", 11) == 0)
                    {
{
return dev_storage + 1958;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'x':
                  if (strncmp (KR_keyword, "/dev/sdcx10", 11) == 0)
                    {
{
return dev_storage + 1943;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'w':
                  if (strncmp (KR_keyword, "/dev/sdcw10", 11) == 0)
                    {
{
return dev_storage + 1928;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'v':
                  if (strncmp (KR_keyword, "/dev/sdcv10", 11) == 0)
                    {
{
return dev_storage + 1913;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'u':
                  if (strncmp (KR_keyword, "/dev/sdcu10", 11) == 0)
                    {
{
return dev_storage + 1898;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 't':
                  if (strncmp (KR_keyword, "/dev/sdct10", 11) == 0)
                    {
{
return dev_storage + 1883;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 's':
                  if (strncmp (KR_keyword, "/dev/sdcs10", 11) == 0)
                    {
{
return dev_storage + 1868;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'r':
                  if (strncmp (KR_keyword, "/dev/sdcr10", 11) == 0)
                    {
{
return dev_storage + 1853;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'q':
                  if (strncmp (KR_keyword, "/dev/sdcq10", 11) == 0)
                    {
{
return dev_storage + 1838;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'p':
                  if (strncmp (KR_keyword, "/dev/sdcp10", 11) == 0)
                    {
{
return dev_storage + 1823;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'o':
                  if (strncmp (KR_keyword, "/dev/sdco10", 11) == 0)
                    {
{
return dev_storage + 1808;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'n':
                  if (strncmp (KR_keyword, "/dev/sdcn10", 11) == 0)
                    {
{
return dev_storage + 1793;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'm':
                  if (strncmp (KR_keyword, "/dev/sdcm10", 11) == 0)
                    {
{
return dev_storage + 1778;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'l':
                  if (strncmp (KR_keyword, "/dev/sdcl10", 11) == 0)
                    {
{
return dev_storage + 1763;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'k':
                  if (strncmp (KR_keyword, "/dev/sdck10", 11) == 0)
                    {
{
return dev_storage + 1748;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'j':
                  if (strncmp (KR_keyword, "/dev/sdcj10", 11) == 0)
                    {
{
return dev_storage + 1733;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'i':
                  if (strncmp (KR_keyword, "/dev/sdci10", 11) == 0)
                    {
{
return dev_storage + 1718;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'h':
                  if (strncmp (KR_keyword, "/dev/sdch10", 11) == 0)
                    {
{
return dev_storage + 1703;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'g':
                  if (strncmp (KR_keyword, "/dev/sdcg10", 11) == 0)
                    {
{
return dev_storage + 1688;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'f':
                  if (strncmp (KR_keyword, "/dev/sdcf10", 11) == 0)
                    {
{
return dev_storage + 1673;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'e':
                  if (strncmp (KR_keyword, "/dev/sdce10", 11) == 0)
                    {
{
return dev_storage + 1658;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'd':
                  if (strncmp (KR_keyword, "/dev/sdcd10", 11) == 0)
                    {
{
return dev_storage + 1643;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'c':
                  if (strncmp (KR_keyword, "/dev/sdcc10", 11) == 0)
                    {
{
return dev_storage + 1628;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'b':
                  if (strncmp (KR_keyword, "/dev/sdcb10", 11) == 0)
                    {
{
return dev_storage + 1613;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'a':
                  if (strncmp (KR_keyword, "/dev/sdca10", 11) == 0)
                    {
{
return dev_storage + 1598;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                default:
{
return	NULL;

}
                }
            case 'b':
              switch (KR_keyword [8])
                {
                case 'z':
                  if (strncmp (KR_keyword, "/dev/sdbz10", 11) == 0)
                    {
{
return dev_storage + 1557;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'y':
                  if (strncmp (KR_keyword, "/dev/sdby10", 11) == 0)
                    {
{
return dev_storage + 1542;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'x':
                  if (strncmp (KR_keyword, "/dev/sdbx10", 11) == 0)
                    {
{
return dev_storage + 1527;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'w':
                  if (strncmp (KR_keyword, "/dev/sdbw10", 11) == 0)
                    {
{
return dev_storage + 1512;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'v':
                  if (strncmp (KR_keyword, "/dev/sdbv10", 11) == 0)
                    {
{
return dev_storage + 1497;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'u':
                  if (strncmp (KR_keyword, "/dev/sdbu10", 11) == 0)
                    {
{
return dev_storage + 1482;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 't':
                  if (strncmp (KR_keyword, "/dev/sdbt10", 11) == 0)
                    {
{
return dev_storage + 1467;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 's':
                  if (strncmp (KR_keyword, "/dev/sdbs10", 11) == 0)
                    {
{
return dev_storage + 1452;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'r':
                  if (strncmp (KR_keyword, "/dev/sdbr10", 11) == 0)
                    {
{
return dev_storage + 1437;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'q':
                  if (strncmp (KR_keyword, "/dev/sdbq10", 11) == 0)
                    {
{
return dev_storage + 1422;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'p':
                  if (strncmp (KR_keyword, "/dev/sdbp10", 11) == 0)
                    {
{
return dev_storage + 1407;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'o':
                  if (strncmp (KR_keyword, "/dev/sdbo10", 11) == 0)
                    {
{
return dev_storage + 1392;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'n':
                  if (strncmp (KR_keyword, "/dev/sdbn10", 11) == 0)
                    {
{
return dev_storage + 1377;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'm':
                  if (strncmp (KR_keyword, "/dev/sdbm10", 11) == 0)
                    {
{
return dev_storage + 1362;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'l':
                  if (strncmp (KR_keyword, "/dev/sdbl10", 11) == 0)
                    {
{
return dev_storage + 1347;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'k':
                  if (strncmp (KR_keyword, "/dev/sdbk10", 11) == 0)
                    {
{
return dev_storage + 1332;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'j':
                  if (strncmp (KR_keyword, "/dev/sdbj10", 11) == 0)
                    {
{
return dev_storage + 1317;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'i':
                  if (strncmp (KR_keyword, "/dev/sdbi10", 11) == 0)
                    {
{
return dev_storage + 1302;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'h':
                  if (strncmp (KR_keyword, "/dev/sdbh10", 11) == 0)
                    {
{
return dev_storage + 1287;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'g':
                  if (strncmp (KR_keyword, "/dev/sdbg10", 11) == 0)
                    {
{
return dev_storage + 1272;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'f':
                  if (strncmp (KR_keyword, "/dev/sdbf10", 11) == 0)
                    {
{
return dev_storage + 1257;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'e':
                  if (strncmp (KR_keyword, "/dev/sdbe10", 11) == 0)
                    {
{
return dev_storage + 1242;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'd':
                  if (strncmp (KR_keyword, "/dev/sdbd10", 11) == 0)
                    {
{
return dev_storage + 1227;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'c':
                  if (strncmp (KR_keyword, "/dev/sdbc10", 11) == 0)
                    {
{
return dev_storage + 1212;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'b':
                  if (strncmp (KR_keyword, "/dev/sdbb10", 11) == 0)
                    {
{
return dev_storage + 1197;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'a':
                  if (strncmp (KR_keyword, "/dev/sdba10", 11) == 0)
                    {
{
return dev_storage + 1182;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                default:
{
return	NULL;

}
                }
            case 'a':
              switch (KR_keyword [8])
                {
                case 'z':
                  if (strncmp (KR_keyword, "/dev/sdaz10", 11) == 0)
                    {
{
return dev_storage + 1141;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'y':
                  if (strncmp (KR_keyword, "/dev/sday10", 11) == 0)
                    {
{
return dev_storage + 1126;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'x':
                  if (strncmp (KR_keyword, "/dev/sdax10", 11) == 0)
                    {
{
return dev_storage + 1111;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'w':
                  if (strncmp (KR_keyword, "/dev/sdaw10", 11) == 0)
                    {
{
return dev_storage + 1096;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'v':
                  if (strncmp (KR_keyword, "/dev/sdav10", 11) == 0)
                    {
{
return dev_storage + 1081;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'u':
                  if (strncmp (KR_keyword, "/dev/sdau10", 11) == 0)
                    {
{
return dev_storage + 1066;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 't':
                  if (strncmp (KR_keyword, "/dev/sdat10", 11) == 0)
                    {
{
return dev_storage + 1051;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 's':
                  if (strncmp (KR_keyword, "/dev/sdas10", 11) == 0)
                    {
{
return dev_storage + 1036;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'r':
                  if (strncmp (KR_keyword, "/dev/sdar10", 11) == 0)
                    {
{
return dev_storage + 1021;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'q':
                  if (strncmp (KR_keyword, "/dev/sdaq10", 11) == 0)
                    {
{
return dev_storage + 1006;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'p':
                  if (strncmp (KR_keyword, "/dev/sdap10", 11) == 0)
                    {
{
return dev_storage + 991;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'o':
                  if (strncmp (KR_keyword, "/dev/sdao10", 11) == 0)
                    {
{
return dev_storage + 976;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'n':
                  if (strncmp (KR_keyword, "/dev/sdan10", 11) == 0)
                    {
{
return dev_storage + 961;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'm':
                  if (strncmp (KR_keyword, "/dev/sdam10", 11) == 0)
                    {
{
return dev_storage + 946;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'l':
                  if (strncmp (KR_keyword, "/dev/sdal10", 11) == 0)
                    {
{
return dev_storage + 931;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'k':
                  if (strncmp (KR_keyword, "/dev/sdak10", 11) == 0)
                    {
{
return dev_storage + 916;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'j':
                  if (strncmp (KR_keyword, "/dev/sdaj10", 11) == 0)
                    {
{
return dev_storage + 901;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'i':
                  if (strncmp (KR_keyword, "/dev/sdai10", 11) == 0)
                    {
{
return dev_storage + 886;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'h':
                  if (strncmp (KR_keyword, "/dev/sdah10", 11) == 0)
                    {
{
return dev_storage + 871;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'g':
                  if (strncmp (KR_keyword, "/dev/sdag10", 11) == 0)
                    {
{
return dev_storage + 856;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'f':
                  if (strncmp (KR_keyword, "/dev/sdaf10", 11) == 0)
                    {
{
return dev_storage + 841;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'e':
                  if (strncmp (KR_keyword, "/dev/sdae10", 11) == 0)
                    {
{
return dev_storage + 826;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'd':
                  if (strncmp (KR_keyword, "/dev/sdad10", 11) == 0)
                    {
{
return dev_storage + 811;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'c':
                  if (strncmp (KR_keyword, "/dev/sdac10", 11) == 0)
                    {
{
return dev_storage + 796;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'b':
                  if (strncmp (KR_keyword, "/dev/sdab10", 11) == 0)
                    {
{
return dev_storage + 781;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'a':
                  if (strncmp (KR_keyword, "/dev/sdaa10", 11) == 0)
                    {
{
return dev_storage + 766;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                default:
{
return	NULL;

}
                }
            default:
{
return	NULL;

}
            }
        default:
{
return	NULL;

}
        }
    case 12:
      switch (KR_keyword [5])
        {
        case 'w':
          if (strncmp (KR_keyword, "/dev/windows", 12) == 0)
            {
{
return dev_storage + 2573;

}
            }
          else
            {
{
return	NULL;

}
            }
        case 'u':
          if (strncmp (KR_keyword, "/dev/urandom", 12) == 0)
            {
{
return dev_storage + 2572;

}
            }
          else
            {
{
return	NULL;

}
            }
        case 'c':
          if (strncmp (KR_keyword, "/dev/console", 12) == 0)
            {
{
return dev_storage + 84;

}
            }
          else
            {
{
return	NULL;

}
            }
        default:
{
return	NULL;

}
        }
    case 14:
          if (strncmp (KR_keyword, "/dev/clipboard", 14) == 0)
            {
{
return dev_storage + 1;

}
            }
          else
            {
{
return	NULL;

}
            }
    default:
{
return	NULL;

}
    }
}






#undef BRACK

const device *dev_storage_end = dev_storage + (sizeof dev_storage / sizeof dev_storage[0]);

void
device::parse (const char *s)
{
  size_t len = strlen (s);
  const device *dev = KR_find_keyword (s, len);

  if (!dev)
    *this = *fs_dev;
  else
    *this = *dev;
}

void
device::init ()
{
  /* nothing to do... yet */
}

void
device::parse (_major_t major, _minor_t minor)
{
  dev_t devn = FHDEV (major, minor);

  d.devn = 0;

  for (const device *devidx = dev_storage; devidx < dev_storage_end; devidx++)
    if (devidx->d.devn == devn)
      {
	*this = *devidx;
	break;
      }

  if (!*this)
    d.devn = FHDEV (major, minor);
}

void
device::parse (dev_t dev)
{
  parse (_major (dev), _minor (dev));
}

void
device::parsedisk (int drive, int part)
{
  int base;
  if (drive < ('q' - 'a'))      /* /dev/sda -to- /dev/sdp */
    base = DEV_SD_MAJOR;
  else if (drive < 32)		/* /dev/sdq -to- /dev/sdaf */
    {
      base = DEV_SD1_MAJOR;
      drive -= 'q' - 'a';
    }
  else if (drive < 48)		/* /dev/sdag -to- /dev/sdav */
    {
      base = DEV_SD2_MAJOR;
      drive -= 32;
    }
  else if (drive < 64)		/* /dev/sdaw -to- /dev/sdbl */
    {
      base = DEV_SD3_MAJOR;
      drive -= 48;
    }
  else if (drive < 80)		/* /dev/sdbm -to- /dev/sdcb */
    {
      base = DEV_SD4_MAJOR;
      drive -= 64;
    }
  else if (drive < 96)		/* /dev/sdcc -to- /dev/sdcr */
    {
      base = DEV_SD5_MAJOR;
      drive -= 80;
    }
  else if (drive < 112)		/* /dev/sdcs -to- /dev/sddh */
    {
      base = DEV_SD6_MAJOR;
      drive -= 96;
    }
  /* NOTE: This will cause multiple /dev/sddx entries in
	   /proc/partitions if there are more than 128 devices */
  else				/* /dev/sddi -to- /dev/sddx */
    {
      base = DEV_SD7_MAJOR;
      drive -= 112;
    }
  parse (base, part + (drive * 16));
}


@


1.55
log
@	* devices.in (dev_cygdrive_storage): Map to \Device\Null.
	(dev_storage): Map /dev and /dev/windows to \Device\Null.
	* devices.cc: Regenerate.
	* dir.cc (opendir): Create unique id.  Explain why.
	* fhandler.h (fhandler_dev::get_dev): Implement inline.
	(fhandler_cygdrive::close): Drop declaration.
	(fhandler_cygdrive::get_dev): Implement inline.
	(fhandler_windows::get_hwnd): Ditto.
	(fhandler_windows::set_close_on_exec): Drop declaration.
	(fhandler_windows::fixup_after_fork): Ditto.
	* fhandler_dev.cc (fhandler_dev::open): Call fhandler_disk_file::open
	without O_CREAT flag.  Explain why.  Create \Device\Null handle if
	/dev/ doesn't actually exist.
	(fhandler_dev::close): Drop nohandle case.
	(fhandler_dev::fstatvfs): Drop nohandle check.  Test for fs_got_fs
	instead.  Set ST_RDONLY fs flag for simulated /dev.
	(fhandler_dev::opendir): If /dev doesn't exist, call open() to create
	fake \Device\Null handle.  Don't set nohandle.  Set dir_exists
	correctly.
	(fhandler_dev::rewinddir): Call fhandler_disk_file::rewinddir only if
	/dev is a real directory.
	* fhandler_disk_file.cc (fhandler_disk_file::opendir): If called for
	the cygdrive dir, call open() to create fake \Device\Null handle.
	Only attach __DIR_mounts buffer to dir if not called for cygdrive dir.
	Don't set nohandle.
	(fhandler_cygdrive::open): Create \Device\Null handle.
	(fhandler_cygdrive::close): Remove.
	(fhandler_cygdrive::fstatvfs): Set ST_RDONLY fs flag.
	* fhandler_windows.cc (fhandler_windows::open): Create \Device\Null
	handle.
	(fhandler_windows::read): Don't add io_handle to WFMO handle array.
	Change subsequent test for return value accordingly.  Fix test for
	"message arrived".
	(fhandler_windows::set_close_on_exec): Remove.
	(fhandler_windows::fixup_after_fork): Remove.
	* path.h (path_conv::set_path): Make sure wide_path is NULL when
	setting a new path.
	* select.cc (peek_windows): Use correct hWnd value, not io_handle.
	(fhandler_windows::select_read): Don't use io_handle as wait object.
	(fhandler_windows::select_write): Ditto.
	(fhandler_windows::select_except): Ditto.
@
text
@d94 1
a94 1
  {"/cygdrive", {FH_CYGDRIVE}, "\\Device\\Null", exists};
d144 1
a144 1
  {"/dev", BRACK(FH_DEV), "\\Device\\Null", exists, S_IFDIR, false},
@


1.54
log
@	* devices.in (dev_storage): Map /dev/dsp to \Device\Null.
	* devices.cc: Regenerate.
	* fhandler_dsp.cc (fhandler_dev_dsp::open): Call fhandler_base::open.
	(fhandler_dev_dsp::close): Call fhandler_base::close.
	(fhandler_dev_dsp::fixup_after_fork): Call
	fhandler_base::fixup_after_fork.

	* fhandler_raw.cc (fhandler_dev_raw::fixup_after_fork): Call
	fhandler_base::fixup_after_fork.
@
text
@d94 1
a94 1
  {"/cygdrive", {FH_CYGDRIVE}, "/cygdrive", exists};
d144 1
a144 1
  {"/dev", BRACK(FH_DEV), "/dev", exists, S_IFDIR, false},
d2717 1
a2717 1
  {"/dev/windows", BRACK(FH_WINDOWS), "/dev/windows", exists, S_IFCHR, true},
@


1.53
log
@	* devices.in (dev_storage): Map /dev/clipboard to \Device\Null.
	* devices.cc: Regenerate.
	* fhandler.h (fhandler_dev_clipboard::open): Drop declaration.
	* fhandler_clipboard.cc (fhandler_dev_clipboard::dup): Drop call to
	open.  Set private members to 0 and call fhandler_base::dup.
	(fhandler_dev_clipboard::open): Remove so that default
	fhandler_base::open is used to open \Device\Null.
	(set_clipboard): Drop gratuitios call to RegisterClipboardFormatW.
	(fhandler_dev_clipboard::close): Call fhandler_base::close from here.
@
text
@d229 1
a229 1
  {"/dev/dsp", BRACK(FH_OSS_DSP), "/dev/dsp", exists, S_IFCHR, true},
@


1.52
log
@	* devices.in (dev_storage): Map /dev/random and /dev/urandom to
	\Device\Null.
	* devices.cc: Regenerate.
	* fhandler.h (fhandler_dev_random::open): Drop declaration.
	(fhandler_dev_random::close): Ditto.
	(fhandler_dev_random::crypt_gen_random): Convert to static method.
	* fhandler_random.cc (fhandler_dev_random::open): Remove so that default
	fhandler_base::open is used to open \Device\Null.
	(fhandler_dev_random::close): Ditto.
	* fhandler_socket.cc (entropy_source): Delete.
	(fhandler_socket::af_local_set_secret): Remove entropy_source code and
	call fhandler_dev_random::crypt_gen_random directly instead.
@
text
@d145 1
a145 1
  {"/dev/clipboard", BRACK(FH_CLIPBOARD), "/dev/clipboard", exists, S_IFCHR, true},
@


1.51
log
@	* devices.in (dev_storage): Map /dev/zero and /dev/full to \Device\Null.
	* devices.cc: Regenerate.
	* dtable.h (struct dtable): Make fhandler_base friend, rather
	than fhandler_disk_file.
	* fhandler.cc (fhandler_base::open_with_arch): Create unique id.
	(fhandler_base::cleanup): Call del_my_locks.
	(fhandler_base::fcntl): Handle F_GETLK, F_SETLK and F_SETLKW.
	* fhandler.h (fhandler_base::get_dev): Return real device number.
	(fhandler_base::set_unique_id): New inline method.
	(fhandler_disk_file::lock): Drop declaration.
	(fhandler_disk_file::get_dev): New method, return pc.fs_serial_number.
	(fhandler_dev_zero::open): Drop declaration.
	* fhandler_disk_file.cc (fhandler_disk_file::close): Move
	del_my_locks call to fhandler_base::open_with_arch.
	(fhandler_disk_file::fcntl): Move handling of locking commands to
	fhandler_base::fcntl.
	(fhandler_base::open_fs): Drop call to NtAllocateLocallyUniqueId.
	* fhandler_zero.cc (fhandler_dev_zero::open): Remove so that default
	fhandler_base::open is used to open \Device\Null.
	* flock.cc (fixup_lockf_after_exec): Finding a single fhandler is
	enough here.
	(fhandler_base::lock): Replace fhandler_disk_file::lock.  Refuse to lock
	nohandle devices.  Handle read/write test using POSIX flags.  Explain
	why.  Never fail on SEEK_CUR or SEEK_END, rather assume position 0,
	just as Linux.
	* net.cc (fdsock): Create unique id.
@
text
@d442 1
a442 1
  {"/dev/random", BRACK(FH_RANDOM), "/dev/random", exists, S_IFCHR, true},
d2716 1
a2716 1
  {"/dev/urandom", BRACK(FH_URANDOM), "/dev/urandom", exists, S_IFCHR, true},
@


1.50
log
@	Remove /dev/mem, /dev/kmem, /dev/port support.
	* Makefile.in (DLL_OFILES): Drop fhandler_mem.o.
	(fhandler_mem_CFLAGS): Remove rule.
	* devices.in (enum fh_devices): Remove FH_MEM, FH_KMEM and FH_PORT.
	* devices.cc: Regenerate.
	* dtable.cc (fh_alloc): Drop handling for FH_MEM, FH_KMEM and FH_PORT.
	* fhandler.h (class fhandler_dev_mem): Remove.
	* fhandler_mem.cc: Remove file.
	* globals.cc (ro_u_pmem): Remove.
	* mmap.cc (fhandler_dev_mem::mmap): Remove.
	(fhandler_dev_mem::munmap): Remove.
	(fhandler_dev_mem::fixup_mmap_after_fork): Remove.
@
text
@d246 1
a246 1
  {"/dev/full", BRACK(FH_FULL), "/dev/full", exists, S_IFCHR, true},
d2718 1
a2718 1
  {"/dev/zero", BRACK(FH_ZERO), "/dev/zero", exists, S_IFCHR, true},
@


1.49
log
@	* Merge in cygwin-64bit-branch.
@
text
@a246 1
  {"/dev/kmem", BRACK(FH_KMEM), "/dev/kmem", exists, S_IFCHR, true},
a247 1
  {"/dev/mem", BRACK(FH_MEM), "/dev/mem", exists, S_IFCHR, true},
a376 1
  {"/dev/port", BRACK(FH_PORT), "/dev/port", exists, S_IFCHR, true},
d2789 3
a2791 3
const device *ptym_dev = dev_storage + 2580;
const device *ptys_dev = dev_storage + 237;
const device *urandom_dev = dev_storage + 2575;
d2821 1
a2821 1
return dev_storage + 2579;
d2836 1
a2836 1
return dev_storage + 2578;
d2860 1
a2860 1
return dev_storage + 2589;
d2875 1
a2875 1
return dev_storage + 2588;
d2890 1
a2890 1
return dev_storage + 2587;
d2905 1
a2905 1
return dev_storage + 2586;
d2920 1
a2920 1
return dev_storage + 2585;
d2935 1
a2935 1
return dev_storage + 2584;
d2950 1
a2950 1
return dev_storage + 2583;
d2965 1
a2965 1
return dev_storage + 2582;
d2980 1
a2980 1
return dev_storage + 2581;
d2995 1
a2995 1
return dev_storage + 2580;
d3022 1
a3022 1
return dev_storage + 2643;
d3037 1
a3037 1
return dev_storage + 2642;
d3052 1
a3052 1
return dev_storage + 2641;
d3067 1
a3067 1
return dev_storage + 2640;
d3091 1
a3091 1
return dev_storage + 2639;
d3106 1
a3106 1
return dev_storage + 2638;
d3121 1
a3121 1
return dev_storage + 2637;
d3136 1
a3136 1
return dev_storage + 2636;
d3151 1
a3151 1
return dev_storage + 2635;
d3166 1
a3166 1
return dev_storage + 2634;
d3181 1
a3181 1
return dev_storage + 2633;
d3196 1
a3196 1
return dev_storage + 2632;
d3211 1
a3211 1
return dev_storage + 2631;
d3226 1
a3226 1
return dev_storage + 2630;
d3250 1
a3250 1
return dev_storage + 2629;
d3265 1
a3265 1
return dev_storage + 2628;
d3280 1
a3280 1
return dev_storage + 2627;
d3295 1
a3295 1
return dev_storage + 2626;
d3310 1
a3310 1
return dev_storage + 2625;
d3325 1
a3325 1
return dev_storage + 2624;
d3340 1
a3340 1
return dev_storage + 2623;
d3355 1
a3355 1
return dev_storage + 2622;
d3370 1
a3370 1
return dev_storage + 2621;
d3385 1
a3385 1
return dev_storage + 2620;
d3409 1
a3409 1
return dev_storage + 2619;
d3424 1
a3424 1
return dev_storage + 2618;
d3439 1
a3439 1
return dev_storage + 2617;
d3454 1
a3454 1
return dev_storage + 2616;
d3469 1
a3469 1
return dev_storage + 2615;
d3484 1
a3484 1
return dev_storage + 2614;
d3499 1
a3499 1
return dev_storage + 2613;
d3514 1
a3514 1
return dev_storage + 2612;
d3529 1
a3529 1
return dev_storage + 2611;
d3544 1
a3544 1
return dev_storage + 2610;
d3568 1
a3568 1
return dev_storage + 2609;
d3583 1
a3583 1
return dev_storage + 2608;
d3598 1
a3598 1
return dev_storage + 2607;
d3613 1
a3613 1
return dev_storage + 2606;
d3628 1
a3628 1
return dev_storage + 2605;
d3643 1
a3643 1
return dev_storage + 2604;
d3658 1
a3658 1
return dev_storage + 2603;
d3673 1
a3673 1
return dev_storage + 2602;
d3688 1
a3688 1
return dev_storage + 2601;
d3703 1
a3703 1
return dev_storage + 2600;
d3727 1
a3727 1
return dev_storage + 2599;
d3742 1
a3742 1
return dev_storage + 2598;
d3757 1
a3757 1
return dev_storage + 2597;
d3772 1
a3772 1
return dev_storage + 2596;
d3787 1
a3787 1
return dev_storage + 2595;
d3802 1
a3802 1
return dev_storage + 2594;
d3817 1
a3817 1
return dev_storage + 2593;
d3832 1
a3832 1
return dev_storage + 2592;
d3847 1
a3847 1
return dev_storage + 2591;
d3862 1
a3862 1
return dev_storage + 2590;
d3892 1
a3892 1
return dev_storage + 343;
d3910 1
a3910 1
return dev_storage + 2510;
d3925 1
a3925 1
return dev_storage + 342;
d3946 1
a3946 1
return dev_storage + 341;
d3961 1
a3961 1
return dev_storage + 340;
d3976 1
a3976 1
return dev_storage + 339;
d3991 1
a3991 1
return dev_storage + 338;
d4006 1
a4006 1
return dev_storage + 337;
d4021 1
a4021 1
return dev_storage + 336;
d4036 1
a4036 1
return dev_storage + 335;
d4051 1
a4051 1
return dev_storage + 334;
d4069 1
a4069 1
return dev_storage + 333;
d4105 1
a4105 1
return dev_storage + 332;
d4120 1
a4120 1
return dev_storage + 331;
d4132 1
a4132 1
          switch (KR_keyword [5])
a4133 3
            case 's':
              if (strncmp (KR_keyword, "/dev/sdm", 8) == 0)
                {
d4135 1
a4135 1
return dev_storage + 330;
d4138 3
a4140 24
                }
              else
                {
{
return	NULL;

}
                }
            case 'm':
              if (strncmp (KR_keyword, "/dev/mem", 8) == 0)
                {
{
return dev_storage + 105;

}
                }
              else
                {
{
return	NULL;

}
                }
            default:
d4150 1
a4150 1
return dev_storage + 329;
d4165 1
a4165 1
return dev_storage + 328;
d4180 1
a4180 1
return dev_storage + 327;
d4195 1
a4195 1
return dev_storage + 326;
d4210 1
a4210 1
return dev_storage + 325;
d4225 1
a4225 1
return dev_storage + 324;
d4240 1
a4240 1
return dev_storage + 323;
d4255 1
a4255 1
return dev_storage + 322;
d4270 1
a4270 1
return dev_storage + 321;
d4285 1
a4285 1
return dev_storage + 320;
d4300 1
a4300 1
return dev_storage + 319;
d4315 1
a4315 1
return dev_storage + 318;
d4333 1
a4333 1
return dev_storage + 2391;
d4348 1
a4348 1
return dev_storage + 2375;
d4387 1
a4387 1
return dev_storage + 2390;
d4402 1
a4402 1
return dev_storage + 2374;
d4441 1
a4441 1
return dev_storage + 2389;
d4456 1
a4456 1
return dev_storage + 2373;
d4495 1
a4495 1
return dev_storage + 2388;
d4510 1
a4510 1
return dev_storage + 2372;
d4549 1
a4549 1
return dev_storage + 2387;
d4564 1
a4564 1
return dev_storage + 2371;
d4603 1
a4603 1
return dev_storage + 2386;
d4618 1
a4618 1
return dev_storage + 2370;
d4657 1
a4657 1
return dev_storage + 2385;
d4672 1
a4672 1
return dev_storage + 2369;
d4711 1
a4711 1
return dev_storage + 2384;
d4726 1
a4726 1
return dev_storage + 2368;
d4765 1
a4765 1
return dev_storage + 2383;
d4780 1
a4780 1
return dev_storage + 2367;
d4819 1
a4819 1
return dev_storage + 2382;
d4834 1
a4834 1
return dev_storage + 2366;
d4882 1
a4882 1
return dev_storage + 727;
d4897 1
a4897 1
return dev_storage + 726;
d4912 1
a4912 1
return dev_storage + 725;
d4927 1
a4927 1
return dev_storage + 724;
d4942 1
a4942 1
return dev_storage + 723;
d4957 1
a4957 1
return dev_storage + 722;
d4972 1
a4972 1
return dev_storage + 721;
d4987 1
a4987 1
return dev_storage + 720;
d5002 1
a5002 1
return dev_storage + 719;
d5029 1
a5029 1
return dev_storage + 712;
d5044 1
a5044 1
return dev_storage + 246;
d5068 1
a5068 1
return dev_storage + 711;
d5083 1
a5083 1
return dev_storage + 245;
d5107 1
a5107 1
return dev_storage + 710;
d5122 1
a5122 1
return dev_storage + 244;
d5146 1
a5146 1
return dev_storage + 709;
d5161 1
a5161 1
return dev_storage + 243;
d5185 1
a5185 1
return dev_storage + 708;
d5200 1
a5200 1
return dev_storage + 242;
d5224 1
a5224 1
return dev_storage + 707;
d5239 1
a5239 1
return dev_storage + 241;
d5263 1
a5263 1
return dev_storage + 706;
d5278 1
a5278 1
return dev_storage + 240;
d5302 1
a5302 1
return dev_storage + 705;
d5317 1
a5317 1
return dev_storage + 239;
d5341 1
a5341 1
return dev_storage + 704;
d5356 1
a5356 1
return dev_storage + 238;
d5377 1
a5377 1
return dev_storage + 237;
d5401 1
a5401 1
return dev_storage + 697;
d5416 1
a5416 1
return dev_storage + 696;
d5431 1
a5431 1
return dev_storage + 695;
d5446 1
a5446 1
return dev_storage + 694;
d5461 1
a5461 1
return dev_storage + 693;
d5476 1
a5476 1
return dev_storage + 692;
d5491 1
a5491 1
return dev_storage + 691;
d5506 1
a5506 1
return dev_storage + 690;
d5521 1
a5521 1
return dev_storage + 689;
d5545 1
a5545 1
return dev_storage + 682;
d5560 1
a5560 1
return dev_storage + 681;
d5575 1
a5575 1
return dev_storage + 680;
d5590 1
a5590 1
return dev_storage + 679;
d5605 1
a5605 1
return dev_storage + 678;
d5620 1
a5620 1
return dev_storage + 677;
d5635 1
a5635 1
return dev_storage + 676;
d5650 1
a5650 1
return dev_storage + 675;
d5665 1
a5665 1
return dev_storage + 674;
d5689 1
a5689 1
return dev_storage + 667;
d5704 1
a5704 1
return dev_storage + 666;
d5719 1
a5719 1
return dev_storage + 665;
d5734 1
a5734 1
return dev_storage + 664;
d5749 1
a5749 1
return dev_storage + 663;
d5764 1
a5764 1
return dev_storage + 662;
d5779 1
a5779 1
return dev_storage + 661;
d5794 1
a5794 1
return dev_storage + 660;
d5809 1
a5809 1
return dev_storage + 659;
d5833 1
a5833 1
return dev_storage + 652;
d5848 1
a5848 1
return dev_storage + 651;
d5863 1
a5863 1
return dev_storage + 650;
d5878 1
a5878 1
return dev_storage + 649;
d5893 1
a5893 1
return dev_storage + 648;
d5908 1
a5908 1
return dev_storage + 647;
d5923 1
a5923 1
return dev_storage + 646;
d5938 1
a5938 1
return dev_storage + 645;
d5953 1
a5953 1
return dev_storage + 644;
d5980 1
a5980 1
return dev_storage + 637;
d5995 1
a5995 1
return dev_storage + 115;
d6019 1
a6019 1
return dev_storage + 636;
d6034 1
a6034 1
return dev_storage + 114;
d6058 1
a6058 1
return dev_storage + 635;
d6073 1
a6073 1
return dev_storage + 113;
d6097 1
a6097 1
return dev_storage + 634;
d6112 1
a6112 1
return dev_storage + 112;
d6136 1
a6136 1
return dev_storage + 633;
d6151 1
a6151 1
return dev_storage + 111;
d6175 1
a6175 1
return dev_storage + 632;
d6190 1
a6190 1
return dev_storage + 110;
d6214 1
a6214 1
return dev_storage + 631;
d6229 1
a6229 1
return dev_storage + 109;
d6253 1
a6253 1
return dev_storage + 630;
d6268 1
a6268 1
return dev_storage + 108;
d6292 1
a6292 1
return dev_storage + 629;
d6307 1
a6307 1
return dev_storage + 107;
d6328 1
a6328 1
return dev_storage + 106;
d6352 1
a6352 1
return dev_storage + 104;
d6367 1
a6367 1
return dev_storage + 622;
d6382 1
a6382 1
return dev_storage + 621;
d6397 1
a6397 1
return dev_storage + 620;
d6412 1
a6412 1
return dev_storage + 619;
d6427 1
a6427 1
return dev_storage + 618;
d6442 1
a6442 1
return dev_storage + 617;
d6457 1
a6457 1
return dev_storage + 616;
d6472 1
a6472 1
return dev_storage + 615;
d6487 1
a6487 1
return dev_storage + 614;
a6506 15
            case 't':
              if (strncmp (KR_keyword, "/dev/port", 9) == 0)
                {
{
return dev_storage + 235;

}
                }
              else
                {
{
return	NULL;

}
                }
d6511 1
a6511 1
return dev_storage + 2577;
d6526 1
a6526 1
return dev_storage + 607;
d6541 1
a6541 1
return dev_storage + 606;
d6556 1
a6556 1
return dev_storage + 605;
d6571 1
a6571 1
return dev_storage + 604;
d6586 1
a6586 1
return dev_storage + 603;
d6601 1
a6601 1
return dev_storage + 602;
d6616 1
a6616 1
return dev_storage + 601;
d6631 1
a6631 1
return dev_storage + 600;
d6646 1
a6646 1
return dev_storage + 599;
d6670 1
a6670 1
return dev_storage + 592;
d6685 1
a6685 1
return dev_storage + 591;
d6700 1
a6700 1
return dev_storage + 590;
d6715 1
a6715 1
return dev_storage + 589;
d6730 1
a6730 1
return dev_storage + 588;
d6745 1
a6745 1
return dev_storage + 587;
d6760 1
a6760 1
return dev_storage + 586;
d6775 1
a6775 1
return dev_storage + 585;
d6790 1
a6790 1
return dev_storage + 584;
d6814 1
a6814 1
return dev_storage + 577;
d6829 1
a6829 1
return dev_storage + 576;
d6844 1
a6844 1
return dev_storage + 575;
d6859 1
a6859 1
return dev_storage + 574;
d6874 1
a6874 1
return dev_storage + 573;
d6889 1
a6889 1
return dev_storage + 572;
d6904 1
a6904 1
return dev_storage + 571;
d6919 1
a6919 1
return dev_storage + 570;
d6934 1
a6934 1
return dev_storage + 569;
d6958 1
a6958 1
return dev_storage + 562;
d6973 1
a6973 1
return dev_storage + 561;
d6988 1
a6988 1
return dev_storage + 560;
d7003 1
a7003 1
return dev_storage + 559;
d7018 1
a7018 1
return dev_storage + 558;
d7033 1
a7033 1
return dev_storage + 557;
d7048 1
a7048 1
return dev_storage + 556;
d7063 1
a7063 1
return dev_storage + 555;
d7078 1
a7078 1
return dev_storage + 554;
d7102 1
a7102 1
return dev_storage + 547;
d7117 1
a7117 1
return dev_storage + 546;
d7132 1
a7132 1
return dev_storage + 545;
d7147 1
a7147 1
return dev_storage + 544;
d7162 1
a7162 1
return dev_storage + 543;
d7177 1
a7177 1
return dev_storage + 542;
d7192 1
a7192 1
return dev_storage + 541;
d7207 1
a7207 1
return dev_storage + 540;
d7222 1
a7222 1
return dev_storage + 539;
d7249 1
a7249 1
return dev_storage + 532;
d7264 1
a7264 1
return dev_storage + 531;
d7279 1
a7279 1
return dev_storage + 530;
d7294 1
a7294 1
return dev_storage + 529;
d7309 1
a7309 1
return dev_storage + 528;
d7324 1
a7324 1
return dev_storage + 527;
d7339 1
a7339 1
return dev_storage + 526;
d7354 1
a7354 1
return dev_storage + 525;
d7369 1
a7369 1
return dev_storage + 524;
d7390 1
a7390 1
return dev_storage + 236;
d7561 1
a7561 1
return dev_storage + 234;
d7597 1
a7597 1
return dev_storage + 517;
d7612 1
a7612 1
return dev_storage + 516;
d7627 1
a7627 1
return dev_storage + 515;
d7642 1
a7642 1
return dev_storage + 514;
d7657 1
a7657 1
return dev_storage + 513;
d7672 1
a7672 1
return dev_storage + 512;
d7687 1
a7687 1
return dev_storage + 511;
d7702 1
a7702 1
return dev_storage + 510;
d7717 1
a7717 1
return dev_storage + 509;
d7741 1
a7741 1
return dev_storage + 502;
d7756 1
a7756 1
return dev_storage + 501;
d7771 1
a7771 1
return dev_storage + 500;
d7786 1
a7786 1
return dev_storage + 499;
d7801 1
a7801 1
return dev_storage + 498;
d7816 1
a7816 1
return dev_storage + 497;
d7831 1
a7831 1
return dev_storage + 496;
d7846 1
a7846 1
return dev_storage + 495;
d7861 1
a7861 1
return dev_storage + 494;
d7885 1
a7885 1
return dev_storage + 487;
d7900 1
a7900 1
return dev_storage + 486;
d7915 1
a7915 1
return dev_storage + 485;
d7930 1
a7930 1
return dev_storage + 484;
d7945 1
a7945 1
return dev_storage + 483;
d7960 1
a7960 1
return dev_storage + 482;
d7975 1
a7975 1
return dev_storage + 481;
d7990 1
a7990 1
return dev_storage + 480;
d8005 1
a8005 1
return dev_storage + 479;
d8029 1
a8029 1
return dev_storage + 472;
d8044 1
a8044 1
return dev_storage + 471;
d8059 1
a8059 1
return dev_storage + 470;
d8074 1
a8074 1
return dev_storage + 469;
d8089 1
a8089 1
return dev_storage + 468;
d8104 1
a8104 1
return dev_storage + 467;
d8119 1
a8119 1
return dev_storage + 466;
d8134 1
a8134 1
return dev_storage + 465;
d8149 1
a8149 1
return dev_storage + 464;
d8173 1
a8173 1
return dev_storage + 457;
d8188 1
a8188 1
return dev_storage + 456;
d8203 1
a8203 1
return dev_storage + 455;
d8218 1
a8218 1
return dev_storage + 454;
d8233 1
a8233 1
return dev_storage + 453;
d8248 1
a8248 1
return dev_storage + 452;
d8263 1
a8263 1
return dev_storage + 451;
d8278 1
a8278 1
return dev_storage + 450;
d8293 1
a8293 1
return dev_storage + 449;
d8317 1
a8317 1
return dev_storage + 442;
d8332 1
a8332 1
return dev_storage + 441;
d8347 1
a8347 1
return dev_storage + 440;
d8362 1
a8362 1
return dev_storage + 439;
d8377 1
a8377 1
return dev_storage + 438;
d8392 1
a8392 1
return dev_storage + 437;
d8407 1
a8407 1
return dev_storage + 436;
d8422 1
a8422 1
return dev_storage + 435;
d8437 1
a8437 1
return dev_storage + 434;
d8461 1
a8461 1
return dev_storage + 427;
d8476 1
a8476 1
return dev_storage + 426;
d8491 1
a8491 1
return dev_storage + 425;
d8506 1
a8506 1
return dev_storage + 424;
d8521 1
a8521 1
return dev_storage + 423;
d8536 1
a8536 1
return dev_storage + 422;
d8551 1
a8551 1
return dev_storage + 421;
d8566 1
a8566 1
return dev_storage + 420;
d8581 1
a8581 1
return dev_storage + 419;
a8600 15
            case 'm':
              if (strncmp (KR_keyword, "/dev/kmem", 9) == 0)
                {
{
return dev_storage + 103;

}
                }
              else
                {
{
return	NULL;

}
                }
d8605 1
a8605 1
return dev_storage + 412;
d8620 1
a8620 1
return dev_storage + 411;
d8635 1
a8635 1
return dev_storage + 410;
d8650 1
a8650 1
return dev_storage + 409;
d8665 1
a8665 1
return dev_storage + 408;
d8680 1
a8680 1
return dev_storage + 407;
d8695 1
a8695 1
return dev_storage + 406;
d8710 1
a8710 1
return dev_storage + 405;
d8725 1
a8725 1
return dev_storage + 404;
d8749 1
a8749 1
return dev_storage + 2005;
d8764 1
a8764 1
return dev_storage + 2004;
d8779 1
a8779 1
return dev_storage + 2003;
d8794 1
a8794 1
return dev_storage + 2002;
d8809 1
a8809 1
return dev_storage + 2001;
d8824 1
a8824 1
return dev_storage + 2000;
d8839 1
a8839 1
return dev_storage + 1999;
d8854 1
a8854 1
return dev_storage + 1998;
d8869 1
a8869 1
return dev_storage + 1997;
d8884 1
a8884 1
return dev_storage + 1996;
d8899 1
a8899 1
return dev_storage + 1995;
d8914 1
a8914 1
return dev_storage + 1994;
d8929 1
a8929 1
return dev_storage + 1993;
d8944 1
a8944 1
return dev_storage + 1992;
d8959 1
a8959 1
return dev_storage + 1991;
d8974 1
a8974 1
return dev_storage + 1990;
d8989 1
a8989 1
return dev_storage + 1989;
d9004 1
a9004 1
return dev_storage + 1988;
d9019 1
a9019 1
return dev_storage + 1987;
d9034 1
a9034 1
return dev_storage + 1986;
d9049 1
a9049 1
return dev_storage + 1985;
d9064 1
a9064 1
return dev_storage + 1984;
d9079 1
a9079 1
return dev_storage + 1983;
d9094 1
a9094 1
return dev_storage + 1982;
d9112 1
a9112 1
return dev_storage + 397;
d9127 1
a9127 1
return dev_storage + 311;
d9151 1
a9151 1
return dev_storage + 396;
d9166 1
a9166 1
return dev_storage + 310;
d9190 1
a9190 1
return dev_storage + 395;
d9205 1
a9205 1
return dev_storage + 309;
d9229 1
a9229 1
return dev_storage + 394;
d9244 1
a9244 1
return dev_storage + 308;
d9268 1
a9268 1
return dev_storage + 393;
d9283 1
a9283 1
return dev_storage + 307;
d9307 1
a9307 1
return dev_storage + 392;
d9322 1
a9322 1
return dev_storage + 306;
d9346 1
a9346 1
return dev_storage + 391;
d9361 1
a9361 1
return dev_storage + 305;
d9385 1
a9385 1
return dev_storage + 390;
d9400 1
a9400 1
return dev_storage + 304;
d9424 1
a9424 1
return dev_storage + 389;
d9439 1
a9439 1
return dev_storage + 303;
d9460 1
a9460 1
return dev_storage + 302;
d9484 1
a9484 1
return dev_storage + 1591;
d9499 1
a9499 1
return dev_storage + 1590;
d9514 1
a9514 1
return dev_storage + 1589;
d9529 1
a9529 1
return dev_storage + 1588;
d9544 1
a9544 1
return dev_storage + 1587;
d9559 1
a9559 1
return dev_storage + 1586;
d9574 1
a9574 1
return dev_storage + 1585;
d9589 1
a9589 1
return dev_storage + 1584;
d9604 1
a9604 1
return dev_storage + 1583;
d9619 1
a9619 1
return dev_storage + 1582;
d9634 1
a9634 1
return dev_storage + 1581;
d9649 1
a9649 1
return dev_storage + 1580;
d9664 1
a9664 1
return dev_storage + 1579;
d9679 1
a9679 1
return dev_storage + 1578;
d9694 1
a9694 1
return dev_storage + 1577;
d9709 1
a9709 1
return dev_storage + 1576;
d9724 1
a9724 1
return dev_storage + 1575;
d9739 1
a9739 1
return dev_storage + 1574;
d9754 1
a9754 1
return dev_storage + 1573;
d9769 1
a9769 1
return dev_storage + 1572;
d9784 1
a9784 1
return dev_storage + 1571;
d9799 1
a9799 1
return dev_storage + 1570;
d9814 1
a9814 1
return dev_storage + 1569;
d9829 1
a9829 1
return dev_storage + 1568;
d9844 1
a9844 1
return dev_storage + 1567;
d9859 1
a9859 1
return dev_storage + 1566;
d9874 1
a9874 1
return dev_storage + 382;
d9889 1
a9889 1
return dev_storage + 381;
d9904 1
a9904 1
return dev_storage + 380;
d9919 1
a9919 1
return dev_storage + 379;
d9934 1
a9934 1
return dev_storage + 378;
d9949 1
a9949 1
return dev_storage + 377;
d9964 1
a9964 1
return dev_storage + 376;
d9979 1
a9979 1
return dev_storage + 375;
d9994 1
a9994 1
return dev_storage + 374;
d10018 1
a10018 1
return dev_storage + 1175;
d10033 1
a10033 1
return dev_storage + 1174;
d10048 1
a10048 1
return dev_storage + 1173;
d10063 1
a10063 1
return dev_storage + 1172;
d10078 1
a10078 1
return dev_storage + 1171;
d10093 1
a10093 1
return dev_storage + 1170;
d10108 1
a10108 1
return dev_storage + 1169;
d10123 1
a10123 1
return dev_storage + 1168;
d10138 1
a10138 1
return dev_storage + 1167;
d10153 1
a10153 1
return dev_storage + 1166;
d10168 1
a10168 1
return dev_storage + 1165;
d10183 1
a10183 1
return dev_storage + 1164;
d10198 1
a10198 1
return dev_storage + 1163;
d10213 1
a10213 1
return dev_storage + 1162;
d10228 1
a10228 1
return dev_storage + 1161;
d10243 1
a10243 1
return dev_storage + 1160;
d10258 1
a10258 1
return dev_storage + 1159;
d10273 1
a10273 1
return dev_storage + 1158;
d10288 1
a10288 1
return dev_storage + 1157;
d10303 1
a10303 1
return dev_storage + 1156;
d10318 1
a10318 1
return dev_storage + 1155;
d10333 1
a10333 1
return dev_storage + 1154;
d10348 1
a10348 1
return dev_storage + 1153;
d10363 1
a10363 1
return dev_storage + 1152;
d10378 1
a10378 1
return dev_storage + 1151;
d10393 1
a10393 1
return dev_storage + 1150;
d10408 1
a10408 1
return dev_storage + 367;
d10423 1
a10423 1
return dev_storage + 366;
d10438 1
a10438 1
return dev_storage + 365;
d10453 1
a10453 1
return dev_storage + 364;
d10468 1
a10468 1
return dev_storage + 363;
d10483 1
a10483 1
return dev_storage + 362;
d10498 1
a10498 1
return dev_storage + 361;
d10513 1
a10513 1
return dev_storage + 360;
d10528 1
a10528 1
return dev_storage + 359;
d10552 1
a10552 1
return dev_storage + 759;
d10567 1
a10567 1
return dev_storage + 758;
d10582 1
a10582 1
return dev_storage + 757;
d10597 1
a10597 1
return dev_storage + 756;
d10612 1
a10612 1
return dev_storage + 755;
d10627 1
a10627 1
return dev_storage + 754;
d10642 1
a10642 1
return dev_storage + 753;
d10657 1
a10657 1
return dev_storage + 752;
d10672 1
a10672 1
return dev_storage + 751;
d10687 1
a10687 1
return dev_storage + 750;
d10702 1
a10702 1
return dev_storage + 749;
d10717 1
a10717 1
return dev_storage + 748;
d10732 1
a10732 1
return dev_storage + 747;
d10747 1
a10747 1
return dev_storage + 746;
d10762 1
a10762 1
return dev_storage + 745;
d10777 1
a10777 1
return dev_storage + 744;
d10792 1
a10792 1
return dev_storage + 743;
d10807 1
a10807 1
return dev_storage + 742;
d10822 1
a10822 1
return dev_storage + 741;
d10837 1
a10837 1
return dev_storage + 740;
d10852 1
a10852 1
return dev_storage + 739;
d10867 1
a10867 1
return dev_storage + 738;
d10882 1
a10882 1
return dev_storage + 737;
d10897 1
a10897 1
return dev_storage + 736;
d10912 1
a10912 1
return dev_storage + 735;
d10927 1
a10927 1
return dev_storage + 734;
d10942 1
a10942 1
return dev_storage + 352;
d10957 1
a10957 1
return dev_storage + 351;
d10972 1
a10972 1
return dev_storage + 350;
d10987 1
a10987 1
return dev_storage + 349;
d11002 1
a11002 1
return dev_storage + 348;
d11017 1
a11017 1
return dev_storage + 347;
d11032 1
a11032 1
return dev_storage + 346;
d11047 1
a11047 1
return dev_storage + 345;
d11062 1
a11062 1
return dev_storage + 344;
d11086 1
a11086 1
return dev_storage + 2481;
d11101 1
a11101 1
return dev_storage + 2480;
d11116 1
a11116 1
return dev_storage + 2479;
d11131 1
a11131 1
return dev_storage + 2478;
d11146 1
a11146 1
return dev_storage + 2477;
d11161 1
a11161 1
return dev_storage + 2476;
d11176 1
a11176 1
return dev_storage + 2475;
d11191 1
a11191 1
return dev_storage + 2474;
d11206 1
a11206 1
return dev_storage + 2473;
d11221 1
a11221 1
return dev_storage + 2472;
d11245 1
a11245 1
return dev_storage + 2471;
d11260 1
a11260 1
return dev_storage + 2470;
d11275 1
a11275 1
return dev_storage + 2469;
d11290 1
a11290 1
return dev_storage + 2468;
d11305 1
a11305 1
return dev_storage + 2467;
d11320 1
a11320 1
return dev_storage + 2466;
d11335 1
a11335 1
return dev_storage + 2465;
d11350 1
a11350 1
return dev_storage + 2464;
d11365 1
a11365 1
return dev_storage + 2463;
d11380 1
a11380 1
return dev_storage + 2462;
d11404 1
a11404 1
return dev_storage + 2461;
d11419 1
a11419 1
return dev_storage + 2460;
d11434 1
a11434 1
return dev_storage + 2459;
d11449 1
a11449 1
return dev_storage + 2458;
d11464 1
a11464 1
return dev_storage + 2457;
d11479 1
a11479 1
return dev_storage + 2456;
d11494 1
a11494 1
return dev_storage + 2455;
d11509 1
a11509 1
return dev_storage + 2454;
d11524 1
a11524 1
return dev_storage + 2453;
d11539 1
a11539 1
return dev_storage + 2452;
d11563 1
a11563 1
return dev_storage + 2451;
d11578 1
a11578 1
return dev_storage + 2450;
d11593 1
a11593 1
return dev_storage + 2449;
d11608 1
a11608 1
return dev_storage + 2448;
d11623 1
a11623 1
return dev_storage + 2447;
d11638 1
a11638 1
return dev_storage + 2446;
d11653 1
a11653 1
return dev_storage + 2445;
d11668 1
a11668 1
return dev_storage + 2444;
d11683 1
a11683 1
return dev_storage + 2443;
d11698 1
a11698 1
return dev_storage + 2442;
d11722 1
a11722 1
return dev_storage + 2441;
d11737 1
a11737 1
return dev_storage + 2440;
d11752 1
a11752 1
return dev_storage + 2439;
d11767 1
a11767 1
return dev_storage + 2438;
d11782 1
a11782 1
return dev_storage + 2437;
d11797 1
a11797 1
return dev_storage + 2436;
d11812 1
a11812 1
return dev_storage + 2435;
d11827 1
a11827 1
return dev_storage + 2434;
d11842 1
a11842 1
return dev_storage + 2433;
d11857 1
a11857 1
return dev_storage + 2432;
d11881 1
a11881 1
return dev_storage + 2431;
d11896 1
a11896 1
return dev_storage + 2430;
d11911 1
a11911 1
return dev_storage + 2429;
d11926 1
a11926 1
return dev_storage + 2428;
d11941 1
a11941 1
return dev_storage + 2427;
d11956 1
a11956 1
return dev_storage + 2426;
d11971 1
a11971 1
return dev_storage + 2425;
d11986 1
a11986 1
return dev_storage + 2424;
d12001 1
a12001 1
return dev_storage + 2423;
d12016 1
a12016 1
return dev_storage + 2422;
d12040 1
a12040 1
return dev_storage + 2421;
d12055 1
a12055 1
return dev_storage + 2420;
d12070 1
a12070 1
return dev_storage + 2419;
d12085 1
a12085 1
return dev_storage + 2418;
d12100 1
a12100 1
return dev_storage + 2417;
d12115 1
a12115 1
return dev_storage + 2416;
d12130 1
a12130 1
return dev_storage + 2415;
d12145 1
a12145 1
return dev_storage + 2414;
d12160 1
a12160 1
return dev_storage + 2413;
d12175 1
a12175 1
return dev_storage + 2412;
d12199 1
a12199 1
return dev_storage + 2411;
d12214 1
a12214 1
return dev_storage + 2410;
d12229 1
a12229 1
return dev_storage + 2409;
d12244 1
a12244 1
return dev_storage + 2408;
d12259 1
a12259 1
return dev_storage + 2407;
d12274 1
a12274 1
return dev_storage + 2406;
d12289 1
a12289 1
return dev_storage + 2405;
d12304 1
a12304 1
return dev_storage + 2404;
d12319 1
a12319 1
return dev_storage + 2403;
d12334 1
a12334 1
return dev_storage + 2402;
d12358 1
a12358 1
return dev_storage + 2401;
d12373 1
a12373 1
return dev_storage + 2400;
d12388 1
a12388 1
return dev_storage + 2399;
d12403 1
a12403 1
return dev_storage + 2398;
d12421 1
a12421 1
return dev_storage + 2397;
d12436 1
a12436 1
return dev_storage + 2381;
d12475 1
a12475 1
return dev_storage + 2396;
d12490 1
a12490 1
return dev_storage + 2380;
d12529 1
a12529 1
return dev_storage + 2395;
d12544 1
a12544 1
return dev_storage + 2379;
d12583 1
a12583 1
return dev_storage + 2394;
d12598 1
a12598 1
return dev_storage + 2378;
d12637 1
a12637 1
return dev_storage + 2393;
d12652 1
a12652 1
return dev_storage + 2377;
d12691 1
a12691 1
return dev_storage + 2392;
d12706 1
a12706 1
return dev_storage + 2376;
d12778 1
a12778 1
return dev_storage + 1975;
d12793 1
a12793 1
return dev_storage + 1559;
d12808 1
a12808 1
return dev_storage + 1143;
d12832 1
a12832 1
return dev_storage + 1960;
d12847 1
a12847 1
return dev_storage + 1544;
d12862 1
a12862 1
return dev_storage + 1128;
d12886 1
a12886 1
return dev_storage + 2359;
d12901 1
a12901 1
return dev_storage + 1945;
d12916 1
a12916 1
return dev_storage + 1529;
d12931 1
a12931 1
return dev_storage + 1113;
d12955 1
a12955 1
return dev_storage + 2344;
d12970 1
a12970 1
return dev_storage + 1930;
d12985 1
a12985 1
return dev_storage + 1514;
d13000 1
a13000 1
return dev_storage + 1098;
d13024 1
a13024 1
return dev_storage + 2329;
d13039 1
a13039 1
return dev_storage + 1915;
d13054 1
a13054 1
return dev_storage + 1499;
d13069 1
a13069 1
return dev_storage + 1083;
d13093 1
a13093 1
return dev_storage + 2314;
d13108 1
a13108 1
return dev_storage + 1900;
d13123 1
a13123 1
return dev_storage + 1484;
d13138 1
a13138 1
return dev_storage + 1068;
d13162 1
a13162 1
return dev_storage + 2299;
d13177 1
a13177 1
return dev_storage + 1885;
d13192 1
a13192 1
return dev_storage + 1469;
d13207 1
a13207 1
return dev_storage + 1053;
d13246 1
a13246 1
return dev_storage + 2284;
d13261 1
a13261 1
return dev_storage + 1870;
d13276 1
a13276 1
return dev_storage + 1454;
d13291 1
a13291 1
return dev_storage + 1038;
d13315 1
a13315 1
return dev_storage + 2269;
d13330 1
a13330 1
return dev_storage + 1855;
d13345 1
a13345 1
return dev_storage + 1439;
d13360 1
a13360 1
return dev_storage + 1023;
d13384 1
a13384 1
return dev_storage + 2254;
d13399 1
a13399 1
return dev_storage + 1840;
d13414 1
a13414 1
return dev_storage + 1424;
d13429 1
a13429 1
return dev_storage + 1008;
d13453 1
a13453 1
return dev_storage + 2239;
d13468 1
a13468 1
return dev_storage + 1825;
d13483 1
a13483 1
return dev_storage + 1409;
d13498 1
a13498 1
return dev_storage + 993;
d13522 1
a13522 1
return dev_storage + 2224;
d13537 1
a13537 1
return dev_storage + 1810;
d13552 1
a13552 1
return dev_storage + 1394;
d13567 1
a13567 1
return dev_storage + 978;
d13591 1
a13591 1
return dev_storage + 2209;
d13606 1
a13606 1
return dev_storage + 1795;
d13621 1
a13621 1
return dev_storage + 1379;
d13636 1
a13636 1
return dev_storage + 963;
d13660 1
a13660 1
return dev_storage + 2194;
d13675 1
a13675 1
return dev_storage + 1780;
d13690 1
a13690 1
return dev_storage + 1364;
d13705 1
a13705 1
return dev_storage + 948;
d13729 1
a13729 1
return dev_storage + 2179;
d13744 1
a13744 1
return dev_storage + 1765;
d13759 1
a13759 1
return dev_storage + 1349;
d13774 1
a13774 1
return dev_storage + 933;
d13798 1
a13798 1
return dev_storage + 2164;
d13813 1
a13813 1
return dev_storage + 1750;
d13828 1
a13828 1
return dev_storage + 1334;
d13843 1
a13843 1
return dev_storage + 918;
d13867 1
a13867 1
return dev_storage + 2149;
d13882 1
a13882 1
return dev_storage + 1735;
d13897 1
a13897 1
return dev_storage + 1319;
d13912 1
a13912 1
return dev_storage + 903;
d13936 1
a13936 1
return dev_storage + 2134;
d13951 1
a13951 1
return dev_storage + 1720;
d13966 1
a13966 1
return dev_storage + 1304;
d13981 1
a13981 1
return dev_storage + 888;
d14005 1
a14005 1
return dev_storage + 2119;
d14020 1
a14020 1
return dev_storage + 1705;
d14035 1
a14035 1
return dev_storage + 1289;
d14050 1
a14050 1
return dev_storage + 873;
d14074 1
a14074 1
return dev_storage + 2104;
d14089 1
a14089 1
return dev_storage + 1690;
d14104 1
a14104 1
return dev_storage + 1274;
d14119 1
a14119 1
return dev_storage + 858;
d14143 1
a14143 1
return dev_storage + 2089;
d14158 1
a14158 1
return dev_storage + 1675;
d14173 1
a14173 1
return dev_storage + 1259;
d14188 1
a14188 1
return dev_storage + 843;
d14212 1
a14212 1
return dev_storage + 2074;
d14227 1
a14227 1
return dev_storage + 1660;
d14242 1
a14242 1
return dev_storage + 1244;
d14257 1
a14257 1
return dev_storage + 828;
d14281 1
a14281 1
return dev_storage + 2059;
d14296 1
a14296 1
return dev_storage + 1645;
d14311 1
a14311 1
return dev_storage + 1229;
d14326 1
a14326 1
return dev_storage + 813;
d14350 1
a14350 1
return dev_storage + 2044;
d14365 1
a14365 1
return dev_storage + 1630;
d14380 1
a14380 1
return dev_storage + 1214;
d14395 1
a14395 1
return dev_storage + 798;
d14419 1
a14419 1
return dev_storage + 2029;
d14434 1
a14434 1
return dev_storage + 1615;
d14449 1
a14449 1
return dev_storage + 1199;
d14464 1
a14464 1
return dev_storage + 783;
d14488 1
a14488 1
return dev_storage + 2014;
d14503 1
a14503 1
return dev_storage + 1600;
d14518 1
a14518 1
return dev_storage + 1184;
d14533 1
a14533 1
return dev_storage + 768;
d14554 1
a14554 1
return dev_storage + 2520;
d14569 1
a14569 1
return dev_storage + 205;
d14584 1
a14584 1
return dev_storage + 195;
d14599 1
a14599 1
return dev_storage + 185;
d14614 1
a14614 1
return dev_storage + 175;
d14632 1
a14632 1
return dev_storage + 296;
d14647 1
a14647 1
return dev_storage + 165;
d14671 1
a14671 1
return dev_storage + 286;
d14686 1
a14686 1
return dev_storage + 155;
d14710 1
a14710 1
return dev_storage + 276;
d14725 1
a14725 1
return dev_storage + 145;
d14749 1
a14749 1
return dev_storage + 266;
d14764 1
a14764 1
return dev_storage + 135;
d14788 1
a14788 1
return dev_storage + 2501;
d14803 1
a14803 1
return dev_storage + 256;
d14818 1
a14818 1
return dev_storage + 125;
d14839 1
a14839 1
return dev_storage + 2491;
d14866 1
a14866 1
return dev_storage + 1974;
d14881 1
a14881 1
return dev_storage + 1558;
d14896 1
a14896 1
return dev_storage + 1142;
d14920 1
a14920 1
return dev_storage + 1959;
d14935 1
a14935 1
return dev_storage + 1543;
d14950 1
a14950 1
return dev_storage + 1127;
d14974 1
a14974 1
return dev_storage + 2358;
d14989 1
a14989 1
return dev_storage + 1944;
d15004 1
a15004 1
return dev_storage + 1528;
d15019 1
a15019 1
return dev_storage + 1112;
d15043 1
a15043 1
return dev_storage + 2343;
d15058 1
a15058 1
return dev_storage + 1929;
d15073 1
a15073 1
return dev_storage + 1513;
d15088 1
a15088 1
return dev_storage + 1097;
d15112 1
a15112 1
return dev_storage + 2328;
d15127 1
a15127 1
return dev_storage + 1914;
d15142 1
a15142 1
return dev_storage + 1498;
d15157 1
a15157 1
return dev_storage + 1082;
d15181 1
a15181 1
return dev_storage + 2313;
d15196 1
a15196 1
return dev_storage + 1899;
d15211 1
a15211 1
return dev_storage + 1483;
d15226 1
a15226 1
return dev_storage + 1067;
d15250 1
a15250 1
return dev_storage + 2298;
d15265 1
a15265 1
return dev_storage + 1884;
d15280 1
a15280 1
return dev_storage + 1468;
d15295 1
a15295 1
return dev_storage + 1052;
d15334 1
a15334 1
return dev_storage + 2283;
d15349 1
a15349 1
return dev_storage + 1869;
d15364 1
a15364 1
return dev_storage + 1453;
d15379 1
a15379 1
return dev_storage + 1037;
d15403 1
a15403 1
return dev_storage + 2268;
d15418 1
a15418 1
return dev_storage + 1854;
d15433 1
a15433 1
return dev_storage + 1438;
d15448 1
a15448 1
return dev_storage + 1022;
d15472 1
a15472 1
return dev_storage + 2253;
d15487 1
a15487 1
return dev_storage + 1839;
d15502 1
a15502 1
return dev_storage + 1423;
d15517 1
a15517 1
return dev_storage + 1007;
d15541 1
a15541 1
return dev_storage + 2238;
d15556 1
a15556 1
return dev_storage + 1824;
d15571 1
a15571 1
return dev_storage + 1408;
d15586 1
a15586 1
return dev_storage + 992;
d15610 1
a15610 1
return dev_storage + 2223;
d15625 1
a15625 1
return dev_storage + 1809;
d15640 1
a15640 1
return dev_storage + 1393;
d15655 1
a15655 1
return dev_storage + 977;
d15679 1
a15679 1
return dev_storage + 2208;
d15694 1
a15694 1
return dev_storage + 1794;
d15709 1
a15709 1
return dev_storage + 1378;
d15724 1
a15724 1
return dev_storage + 962;
d15748 1
a15748 1
return dev_storage + 2193;
d15763 1
a15763 1
return dev_storage + 1779;
d15778 1
a15778 1
return dev_storage + 1363;
d15793 1
a15793 1
return dev_storage + 947;
d15817 1
a15817 1
return dev_storage + 2178;
d15832 1
a15832 1
return dev_storage + 1764;
d15847 1
a15847 1
return dev_storage + 1348;
d15862 1
a15862 1
return dev_storage + 932;
d15886 1
a15886 1
return dev_storage + 2163;
d15901 1
a15901 1
return dev_storage + 1749;
d15916 1
a15916 1
return dev_storage + 1333;
d15931 1
a15931 1
return dev_storage + 917;
d15955 1
a15955 1
return dev_storage + 2148;
d15970 1
a15970 1
return dev_storage + 1734;
d15985 1
a15985 1
return dev_storage + 1318;
d16000 1
a16000 1
return dev_storage + 902;
d16024 1
a16024 1
return dev_storage + 2133;
d16039 1
a16039 1
return dev_storage + 1719;
d16054 1
a16054 1
return dev_storage + 1303;
d16069 1
a16069 1
return dev_storage + 887;
d16093 1
a16093 1
return dev_storage + 2118;
d16108 1
a16108 1
return dev_storage + 1704;
d16123 1
a16123 1
return dev_storage + 1288;
d16138 1
a16138 1
return dev_storage + 872;
d16162 1
a16162 1
return dev_storage + 2103;
d16177 1
a16177 1
return dev_storage + 1689;
d16192 1
a16192 1
return dev_storage + 1273;
d16207 1
a16207 1
return dev_storage + 857;
d16231 1
a16231 1
return dev_storage + 2088;
d16246 1
a16246 1
return dev_storage + 1674;
d16261 1
a16261 1
return dev_storage + 1258;
d16276 1
a16276 1
return dev_storage + 842;
d16300 1
a16300 1
return dev_storage + 2073;
d16315 1
a16315 1
return dev_storage + 1659;
d16330 1
a16330 1
return dev_storage + 1243;
d16345 1
a16345 1
return dev_storage + 827;
d16369 1
a16369 1
return dev_storage + 2058;
d16384 1
a16384 1
return dev_storage + 1644;
d16399 1
a16399 1
return dev_storage + 1228;
d16414 1
a16414 1
return dev_storage + 812;
d16438 1
a16438 1
return dev_storage + 2043;
d16453 1
a16453 1
return dev_storage + 1629;
d16468 1
a16468 1
return dev_storage + 1213;
d16483 1
a16483 1
return dev_storage + 797;
d16507 1
a16507 1
return dev_storage + 2028;
d16522 1
a16522 1
return dev_storage + 1614;
d16537 1
a16537 1
return dev_storage + 1198;
d16552 1
a16552 1
return dev_storage + 782;
d16576 1
a16576 1
return dev_storage + 2013;
d16591 1
a16591 1
return dev_storage + 1599;
d16606 1
a16606 1
return dev_storage + 1183;
d16621 1
a16621 1
return dev_storage + 767;
d16642 1
a16642 1
return dev_storage + 2519;
d16657 1
a16657 1
return dev_storage + 204;
d16672 1
a16672 1
return dev_storage + 194;
d16687 1
a16687 1
return dev_storage + 184;
d16702 1
a16702 1
return dev_storage + 174;
d16720 1
a16720 1
return dev_storage + 295;
d16735 1
a16735 1
return dev_storage + 164;
d16759 1
a16759 1
return dev_storage + 285;
d16774 1
a16774 1
return dev_storage + 154;
d16798 1
a16798 1
return dev_storage + 275;
d16813 1
a16813 1
return dev_storage + 144;
d16837 1
a16837 1
return dev_storage + 265;
d16852 1
a16852 1
return dev_storage + 134;
d16876 1
a16876 1
return dev_storage + 2500;
d16891 1
a16891 1
return dev_storage + 255;
d16906 1
a16906 1
return dev_storage + 124;
d16927 1
a16927 1
return dev_storage + 2490;
d16954 1
a16954 1
return dev_storage + 1973;
d16969 1
a16969 1
return dev_storage + 1557;
d16984 1
a16984 1
return dev_storage + 1141;
d17008 1
a17008 1
return dev_storage + 1958;
d17023 1
a17023 1
return dev_storage + 1542;
d17038 1
a17038 1
return dev_storage + 1126;
d17062 1
a17062 1
return dev_storage + 2357;
d17077 1
a17077 1
return dev_storage + 1943;
d17092 1
a17092 1
return dev_storage + 1527;
d17107 1
a17107 1
return dev_storage + 1111;
d17131 1
a17131 1
return dev_storage + 2342;
d17146 1
a17146 1
return dev_storage + 1928;
d17161 1
a17161 1
return dev_storage + 1512;
d17176 1
a17176 1
return dev_storage + 1096;
d17200 1
a17200 1
return dev_storage + 2327;
d17215 1
a17215 1
return dev_storage + 1913;
d17230 1
a17230 1
return dev_storage + 1497;
d17245 1
a17245 1
return dev_storage + 1081;
d17269 1
a17269 1
return dev_storage + 2312;
d17284 1
a17284 1
return dev_storage + 1898;
d17299 1
a17299 1
return dev_storage + 1482;
d17314 1
a17314 1
return dev_storage + 1066;
d17338 1
a17338 1
return dev_storage + 2297;
d17353 1
a17353 1
return dev_storage + 1883;
d17368 1
a17368 1
return dev_storage + 1467;
d17383 1
a17383 1
return dev_storage + 1051;
d17422 1
a17422 1
return dev_storage + 2282;
d17437 1
a17437 1
return dev_storage + 1868;
d17452 1
a17452 1
return dev_storage + 1452;
d17467 1
a17467 1
return dev_storage + 1036;
d17491 1
a17491 1
return dev_storage + 2267;
d17506 1
a17506 1
return dev_storage + 1853;
d17521 1
a17521 1
return dev_storage + 1437;
d17536 1
a17536 1
return dev_storage + 1021;
d17560 1
a17560 1
return dev_storage + 2252;
d17575 1
a17575 1
return dev_storage + 1838;
d17590 1
a17590 1
return dev_storage + 1422;
d17605 1
a17605 1
return dev_storage + 1006;
d17629 1
a17629 1
return dev_storage + 2237;
d17644 1
a17644 1
return dev_storage + 1823;
d17659 1
a17659 1
return dev_storage + 1407;
d17674 1
a17674 1
return dev_storage + 991;
d17698 1
a17698 1
return dev_storage + 2222;
d17713 1
a17713 1
return dev_storage + 1808;
d17728 1
a17728 1
return dev_storage + 1392;
d17743 1
a17743 1
return dev_storage + 976;
d17767 1
a17767 1
return dev_storage + 2207;
d17782 1
a17782 1
return dev_storage + 1793;
d17797 1
a17797 1
return dev_storage + 1377;
d17812 1
a17812 1
return dev_storage + 961;
d17836 1
a17836 1
return dev_storage + 2192;
d17851 1
a17851 1
return dev_storage + 1778;
d17866 1
a17866 1
return dev_storage + 1362;
d17881 1
a17881 1
return dev_storage + 946;
d17905 1
a17905 1
return dev_storage + 2177;
d17920 1
a17920 1
return dev_storage + 1763;
d17935 1
a17935 1
return dev_storage + 1347;
d17950 1
a17950 1
return dev_storage + 931;
d17974 1
a17974 1
return dev_storage + 2162;
d17989 1
a17989 1
return dev_storage + 1748;
d18004 1
a18004 1
return dev_storage + 1332;
d18019 1
a18019 1
return dev_storage + 916;
d18043 1
a18043 1
return dev_storage + 2147;
d18058 1
a18058 1
return dev_storage + 1733;
d18073 1
a18073 1
return dev_storage + 1317;
d18088 1
a18088 1
return dev_storage + 901;
d18112 1
a18112 1
return dev_storage + 2132;
d18127 1
a18127 1
return dev_storage + 1718;
d18142 1
a18142 1
return dev_storage + 1302;
d18157 1
a18157 1
return dev_storage + 886;
d18181 1
a18181 1
return dev_storage + 2117;
d18196 1
a18196 1
return dev_storage + 1703;
d18211 1
a18211 1
return dev_storage + 1287;
d18226 1
a18226 1
return dev_storage + 871;
d18250 1
a18250 1
return dev_storage + 2102;
d18265 1
a18265 1
return dev_storage + 1688;
d18280 1
a18280 1
return dev_storage + 1272;
d18295 1
a18295 1
return dev_storage + 856;
d18319 1
a18319 1
return dev_storage + 2087;
d18334 1
a18334 1
return dev_storage + 1673;
d18349 1
a18349 1
return dev_storage + 1257;
d18364 1
a18364 1
return dev_storage + 841;
d18388 1
a18388 1
return dev_storage + 2072;
d18403 1
a18403 1
return dev_storage + 1658;
d18418 1
a18418 1
return dev_storage + 1242;
d18433 1
a18433 1
return dev_storage + 826;
d18457 1
a18457 1
return dev_storage + 2057;
d18472 1
a18472 1
return dev_storage + 1643;
d18487 1
a18487 1
return dev_storage + 1227;
d18502 1
a18502 1
return dev_storage + 811;
d18526 1
a18526 1
return dev_storage + 2042;
d18541 1
a18541 1
return dev_storage + 1628;
d18556 1
a18556 1
return dev_storage + 1212;
d18571 1
a18571 1
return dev_storage + 796;
d18595 1
a18595 1
return dev_storage + 2027;
d18610 1
a18610 1
return dev_storage + 1613;
d18625 1
a18625 1
return dev_storage + 1197;
d18640 1
a18640 1
return dev_storage + 781;
d18664 1
a18664 1
return dev_storage + 2012;
d18679 1
a18679 1
return dev_storage + 1598;
d18694 1
a18694 1
return dev_storage + 1182;
d18709 1
a18709 1
return dev_storage + 766;
d18730 1
a18730 1
return dev_storage + 2518;
d18745 1
a18745 1
return dev_storage + 203;
d18760 1
a18760 1
return dev_storage + 193;
d18775 1
a18775 1
return dev_storage + 183;
d18790 1
a18790 1
return dev_storage + 173;
d18808 1
a18808 1
return dev_storage + 294;
d18823 1
a18823 1
return dev_storage + 163;
d18847 1
a18847 1
return dev_storage + 284;
d18862 1
a18862 1
return dev_storage + 153;
d18886 1
a18886 1
return dev_storage + 274;
d18901 1
a18901 1
return dev_storage + 143;
d18925 1
a18925 1
return dev_storage + 2509;
d18940 1
a18940 1
return dev_storage + 264;
d18955 1
a18955 1
return dev_storage + 133;
d18979 1
a18979 1
return dev_storage + 2499;
d18994 1
a18994 1
return dev_storage + 254;
d19009 1
a19009 1
return dev_storage + 123;
d19030 1
a19030 1
return dev_storage + 2489;
d19057 1
a19057 1
return dev_storage + 1972;
d19072 1
a19072 1
return dev_storage + 1556;
d19087 1
a19087 1
return dev_storage + 1140;
d19111 1
a19111 1
return dev_storage + 1957;
d19126 1
a19126 1
return dev_storage + 1541;
d19141 1
a19141 1
return dev_storage + 1125;
d19165 1
a19165 1
return dev_storage + 2356;
d19180 1
a19180 1
return dev_storage + 1942;
d19195 1
a19195 1
return dev_storage + 1526;
d19210 1
a19210 1
return dev_storage + 1110;
d19234 1
a19234 1
return dev_storage + 2341;
d19249 1
a19249 1
return dev_storage + 1927;
d19264 1
a19264 1
return dev_storage + 1511;
d19279 1
a19279 1
return dev_storage + 1095;
d19303 1
a19303 1
return dev_storage + 2326;
d19318 1
a19318 1
return dev_storage + 1912;
d19333 1
a19333 1
return dev_storage + 1496;
d19348 1
a19348 1
return dev_storage + 1080;
d19372 1
a19372 1
return dev_storage + 2311;
d19387 1
a19387 1
return dev_storage + 1897;
d19402 1
a19402 1
return dev_storage + 1481;
d19417 1
a19417 1
return dev_storage + 1065;
d19441 1
a19441 1
return dev_storage + 2296;
d19456 1
a19456 1
return dev_storage + 1882;
d19471 1
a19471 1
return dev_storage + 1466;
d19486 1
a19486 1
return dev_storage + 1050;
d19525 1
a19525 1
return dev_storage + 2281;
d19540 1
a19540 1
return dev_storage + 1867;
d19555 1
a19555 1
return dev_storage + 1451;
d19570 1
a19570 1
return dev_storage + 1035;
d19594 1
a19594 1
return dev_storage + 2266;
d19609 1
a19609 1
return dev_storage + 1852;
d19624 1
a19624 1
return dev_storage + 1436;
d19639 1
a19639 1
return dev_storage + 1020;
d19663 1
a19663 1
return dev_storage + 2251;
d19678 1
a19678 1
return dev_storage + 1837;
d19693 1
a19693 1
return dev_storage + 1421;
d19708 1
a19708 1
return dev_storage + 1005;
d19732 1
a19732 1
return dev_storage + 2236;
d19747 1
a19747 1
return dev_storage + 1822;
d19762 1
a19762 1
return dev_storage + 1406;
d19777 1
a19777 1
return dev_storage + 990;
d19801 1
a19801 1
return dev_storage + 2221;
d19816 1
a19816 1
return dev_storage + 1807;
d19831 1
a19831 1
return dev_storage + 1391;
d19846 1
a19846 1
return dev_storage + 975;
d19870 1
a19870 1
return dev_storage + 2206;
d19885 1
a19885 1
return dev_storage + 1792;
d19900 1
a19900 1
return dev_storage + 1376;
d19915 1
a19915 1
return dev_storage + 960;
d19939 1
a19939 1
return dev_storage + 2191;
d19954 1
a19954 1
return dev_storage + 1777;
d19969 1
a19969 1
return dev_storage + 1361;
d19984 1
a19984 1
return dev_storage + 945;
d20008 1
a20008 1
return dev_storage + 2176;
d20023 1
a20023 1
return dev_storage + 1762;
d20038 1
a20038 1
return dev_storage + 1346;
d20053 1
a20053 1
return dev_storage + 930;
d20077 1
a20077 1
return dev_storage + 2161;
d20092 1
a20092 1
return dev_storage + 1747;
d20107 1
a20107 1
return dev_storage + 1331;
d20122 1
a20122 1
return dev_storage + 915;
d20146 1
a20146 1
return dev_storage + 2146;
d20161 1
a20161 1
return dev_storage + 1732;
d20176 1
a20176 1
return dev_storage + 1316;
d20191 1
a20191 1
return dev_storage + 900;
d20215 1
a20215 1
return dev_storage + 2131;
d20230 1
a20230 1
return dev_storage + 1717;
d20245 1
a20245 1
return dev_storage + 1301;
d20260 1
a20260 1
return dev_storage + 885;
d20284 1
a20284 1
return dev_storage + 2116;
d20299 1
a20299 1
return dev_storage + 1702;
d20314 1
a20314 1
return dev_storage + 1286;
d20329 1
a20329 1
return dev_storage + 870;
d20353 1
a20353 1
return dev_storage + 2101;
d20368 1
a20368 1
return dev_storage + 1687;
d20383 1
a20383 1
return dev_storage + 1271;
d20398 1
a20398 1
return dev_storage + 855;
d20422 1
a20422 1
return dev_storage + 2086;
d20437 1
a20437 1
return dev_storage + 1672;
d20452 1
a20452 1
return dev_storage + 1256;
d20467 1
a20467 1
return dev_storage + 840;
d20491 1
a20491 1
return dev_storage + 2071;
d20506 1
a20506 1
return dev_storage + 1657;
d20521 1
a20521 1
return dev_storage + 1241;
d20536 1
a20536 1
return dev_storage + 825;
d20560 1
a20560 1
return dev_storage + 2056;
d20575 1
a20575 1
return dev_storage + 1642;
d20590 1
a20590 1
return dev_storage + 1226;
d20605 1
a20605 1
return dev_storage + 810;
d20629 1
a20629 1
return dev_storage + 2041;
d20644 1
a20644 1
return dev_storage + 1627;
d20659 1
a20659 1
return dev_storage + 1211;
d20674 1
a20674 1
return dev_storage + 795;
d20698 1
a20698 1
return dev_storage + 2026;
d20713 1
a20713 1
return dev_storage + 1612;
d20728 1
a20728 1
return dev_storage + 1196;
d20743 1
a20743 1
return dev_storage + 780;
d20767 1
a20767 1
return dev_storage + 2011;
d20782 1
a20782 1
return dev_storage + 1597;
d20797 1
a20797 1
return dev_storage + 1181;
d20812 1
a20812 1
return dev_storage + 765;
d20833 1
a20833 1
return dev_storage + 2517;
d20848 1
a20848 1
return dev_storage + 202;
d20863 1
a20863 1
return dev_storage + 192;
d20878 1
a20878 1
return dev_storage + 182;
d20893 1
a20893 1
return dev_storage + 172;
d20911 1
a20911 1
return dev_storage + 293;
d20926 1
a20926 1
return dev_storage + 162;
d20950 1
a20950 1
return dev_storage + 283;
d20965 1
a20965 1
return dev_storage + 152;
d20989 1
a20989 1
return dev_storage + 273;
d21004 1
a21004 1
return dev_storage + 142;
d21028 1
a21028 1
return dev_storage + 2508;
d21043 1
a21043 1
return dev_storage + 263;
d21058 1
a21058 1
return dev_storage + 132;
d21082 1
a21082 1
return dev_storage + 2498;
d21097 1
a21097 1
return dev_storage + 253;
d21112 1
a21112 1
return dev_storage + 122;
d21148 1
a21148 1
return dev_storage + 2488;
d21172 1
a21172 1
return dev_storage + 733;
d21190 1
a21190 1
return dev_storage + 2516;
d21205 1
a21205 1
return dev_storage + 292;
d21220 1
a21220 1
return dev_storage + 282;
d21235 1
a21235 1
return dev_storage + 272;
d21250 1
a21250 1
return dev_storage + 262;
d21268 1
a21268 1
return dev_storage + 718;
d21283 1
a21283 1
return dev_storage + 252;
d21310 1
a21310 1
return dev_storage + 703;
d21325 1
a21325 1
return dev_storage + 688;
d21340 1
a21340 1
return dev_storage + 673;
d21355 1
a21355 1
return dev_storage + 658;
d21373 1
a21373 1
return dev_storage + 201;
d21388 1
a21388 1
return dev_storage + 191;
d21403 1
a21403 1
return dev_storage + 181;
d21418 1
a21418 1
return dev_storage + 171;
d21433 1
a21433 1
return dev_storage + 161;
d21448 1
a21448 1
return dev_storage + 151;
d21463 1
a21463 1
return dev_storage + 141;
d21478 1
a21478 1
return dev_storage + 131;
d21496 1
a21496 1
return dev_storage + 643;
d21511 1
a21511 1
return dev_storage + 121;
d21538 1
a21538 1
return dev_storage + 628;
d21553 1
a21553 1
return dev_storage + 613;
d21568 1
a21568 1
return dev_storage + 598;
d21583 1
a21583 1
return dev_storage + 583;
d21598 1
a21598 1
return dev_storage + 568;
d21616 1
a21616 1
return dev_storage + 553;
d21655 1
a21655 1
return dev_storage + 538;
d21691 1
a21691 1
return dev_storage + 523;
d21706 1
a21706 1
return dev_storage + 508;
d21721 1
a21721 1
return dev_storage + 493;
d21736 1
a21736 1
return dev_storage + 478;
d21751 1
a21751 1
return dev_storage + 463;
d21766 1
a21766 1
return dev_storage + 448;
d21781 1
a21781 1
return dev_storage + 433;
d21796 1
a21796 1
return dev_storage + 418;
d21814 1
a21814 1
return dev_storage + 2355;
d21829 1
a21829 1
return dev_storage + 2340;
d21844 1
a21844 1
return dev_storage + 2325;
d21859 1
a21859 1
return dev_storage + 2310;
d21874 1
a21874 1
return dev_storage + 2295;
d21889 1
a21889 1
return dev_storage + 2280;
d21904 1
a21904 1
return dev_storage + 2265;
d21919 1
a21919 1
return dev_storage + 2250;
d21934 1
a21934 1
return dev_storage + 2235;
d21949 1
a21949 1
return dev_storage + 2220;
d21964 1
a21964 1
return dev_storage + 2205;
d21979 1
a21979 1
return dev_storage + 2190;
d21994 1
a21994 1
return dev_storage + 2175;
d22009 1
a22009 1
return dev_storage + 2160;
d22024 1
a22024 1
return dev_storage + 2145;
d22039 1
a22039 1
return dev_storage + 2130;
d22054 1
a22054 1
return dev_storage + 2115;
d22069 1
a22069 1
return dev_storage + 2100;
d22084 1
a22084 1
return dev_storage + 2085;
d22099 1
a22099 1
return dev_storage + 2070;
d22114 1
a22114 1
return dev_storage + 2055;
d22129 1
a22129 1
return dev_storage + 2040;
d22144 1
a22144 1
return dev_storage + 2025;
d22159 1
a22159 1
return dev_storage + 2010;
d22177 1
a22177 1
return dev_storage + 403;
d22192 1
a22192 1
return dev_storage + 317;
d22222 1
a22222 1
return dev_storage + 1971;
d22237 1
a22237 1
return dev_storage + 1956;
d22252 1
a22252 1
return dev_storage + 1941;
d22267 1
a22267 1
return dev_storage + 1926;
d22282 1
a22282 1
return dev_storage + 1911;
d22297 1
a22297 1
return dev_storage + 1896;
d22312 1
a22312 1
return dev_storage + 1881;
d22327 1
a22327 1
return dev_storage + 1866;
d22342 1
a22342 1
return dev_storage + 1851;
d22357 1
a22357 1
return dev_storage + 1836;
d22372 1
a22372 1
return dev_storage + 1821;
d22387 1
a22387 1
return dev_storage + 1806;
d22402 1
a22402 1
return dev_storage + 1791;
d22417 1
a22417 1
return dev_storage + 1776;
d22432 1
a22432 1
return dev_storage + 1761;
d22447 1
a22447 1
return dev_storage + 1746;
d22462 1
a22462 1
return dev_storage + 1731;
d22477 1
a22477 1
return dev_storage + 1716;
d22492 1
a22492 1
return dev_storage + 1701;
d22507 1
a22507 1
return dev_storage + 1686;
d22522 1
a22522 1
return dev_storage + 1671;
d22537 1
a22537 1
return dev_storage + 1656;
d22552 1
a22552 1
return dev_storage + 1641;
d22567 1
a22567 1
return dev_storage + 1626;
d22582 1
a22582 1
return dev_storage + 1611;
d22597 1
a22597 1
return dev_storage + 1596;
d22612 1
a22612 1
return dev_storage + 388;
d22636 1
a22636 1
return dev_storage + 1555;
d22651 1
a22651 1
return dev_storage + 1540;
d22666 1
a22666 1
return dev_storage + 1525;
d22681 1
a22681 1
return dev_storage + 1510;
d22696 1
a22696 1
return dev_storage + 1495;
d22711 1
a22711 1
return dev_storage + 1480;
d22726 1
a22726 1
return dev_storage + 1465;
d22741 1
a22741 1
return dev_storage + 1450;
d22756 1
a22756 1
return dev_storage + 1435;
d22771 1
a22771 1
return dev_storage + 1420;
d22786 1
a22786 1
return dev_storage + 1405;
d22801 1
a22801 1
return dev_storage + 1390;
d22816 1
a22816 1
return dev_storage + 1375;
d22831 1
a22831 1
return dev_storage + 1360;
d22846 1
a22846 1
return dev_storage + 1345;
d22861 1
a22861 1
return dev_storage + 1330;
d22876 1
a22876 1
return dev_storage + 1315;
d22891 1
a22891 1
return dev_storage + 1300;
d22906 1
a22906 1
return dev_storage + 1285;
d22921 1
a22921 1
return dev_storage + 1270;
d22936 1
a22936 1
return dev_storage + 1255;
d22951 1
a22951 1
return dev_storage + 1240;
d22966 1
a22966 1
return dev_storage + 1225;
d22981 1
a22981 1
return dev_storage + 1210;
d22996 1
a22996 1
return dev_storage + 1195;
d23011 1
a23011 1
return dev_storage + 1180;
d23026 1
a23026 1
return dev_storage + 373;
d23050 1
a23050 1
return dev_storage + 1139;
d23065 1
a23065 1
return dev_storage + 1124;
d23080 1
a23080 1
return dev_storage + 1109;
d23095 1
a23095 1
return dev_storage + 1094;
d23110 1
a23110 1
return dev_storage + 1079;
d23125 1
a23125 1
return dev_storage + 1064;
d23140 1
a23140 1
return dev_storage + 1049;
d23155 1
a23155 1
return dev_storage + 1034;
d23170 1
a23170 1
return dev_storage + 1019;
d23185 1
a23185 1
return dev_storage + 1004;
d23200 1
a23200 1
return dev_storage + 989;
d23215 1
a23215 1
return dev_storage + 974;
d23230 1
a23230 1
return dev_storage + 959;
d23245 1
a23245 1
return dev_storage + 944;
d23260 1
a23260 1
return dev_storage + 929;
d23275 1
a23275 1
return dev_storage + 914;
d23290 1
a23290 1
return dev_storage + 899;
d23305 1
a23305 1
return dev_storage + 884;
d23320 1
a23320 1
return dev_storage + 869;
d23335 1
a23335 1
return dev_storage + 854;
d23350 1
a23350 1
return dev_storage + 839;
d23365 1
a23365 1
return dev_storage + 824;
d23380 1
a23380 1
return dev_storage + 809;
d23395 1
a23395 1
return dev_storage + 794;
d23410 1
a23410 1
return dev_storage + 779;
d23425 1
a23425 1
return dev_storage + 764;
d23440 1
a23440 1
return dev_storage + 358;
d23464 1
a23464 1
return dev_storage + 2507;
d23479 1
a23479 1
return dev_storage + 2497;
d23494 1
a23494 1
return dev_storage + 2487;
d23524 1
a23524 1
return dev_storage + 732;
d23542 1
a23542 1
return dev_storage + 2515;
d23557 1
a23557 1
return dev_storage + 291;
d23572 1
a23572 1
return dev_storage + 281;
d23587 1
a23587 1
return dev_storage + 271;
d23602 1
a23602 1
return dev_storage + 261;
d23620 1
a23620 1
return dev_storage + 717;
d23635 1
a23635 1
return dev_storage + 251;
d23662 1
a23662 1
return dev_storage + 702;
d23677 1
a23677 1
return dev_storage + 687;
d23692 1
a23692 1
return dev_storage + 672;
d23707 1
a23707 1
return dev_storage + 657;
d23725 1
a23725 1
return dev_storage + 200;
d23740 1
a23740 1
return dev_storage + 190;
d23755 1
a23755 1
return dev_storage + 180;
d23770 1
a23770 1
return dev_storage + 170;
d23785 1
a23785 1
return dev_storage + 160;
d23800 1
a23800 1
return dev_storage + 150;
d23815 1
a23815 1
return dev_storage + 140;
d23830 1
a23830 1
return dev_storage + 130;
d23848 1
a23848 1
return dev_storage + 642;
d23863 1
a23863 1
return dev_storage + 120;
d23890 1
a23890 1
return dev_storage + 627;
d23905 1
a23905 1
return dev_storage + 612;
d23920 1
a23920 1
return dev_storage + 597;
d23935 1
a23935 1
return dev_storage + 582;
d23950 1
a23950 1
return dev_storage + 567;
d23968 1
a23968 1
return dev_storage + 552;
d24007 1
a24007 1
return dev_storage + 537;
d24043 1
a24043 1
return dev_storage + 522;
d24058 1
a24058 1
return dev_storage + 507;
d24073 1
a24073 1
return dev_storage + 492;
d24088 1
a24088 1
return dev_storage + 477;
d24103 1
a24103 1
return dev_storage + 462;
d24118 1
a24118 1
return dev_storage + 447;
d24133 1
a24133 1
return dev_storage + 432;
d24148 1
a24148 1
return dev_storage + 417;
d24166 1
a24166 1
return dev_storage + 2354;
d24181 1
a24181 1
return dev_storage + 2339;
d24196 1
a24196 1
return dev_storage + 2324;
d24211 1
a24211 1
return dev_storage + 2309;
d24226 1
a24226 1
return dev_storage + 2294;
d24241 1
a24241 1
return dev_storage + 2279;
d24256 1
a24256 1
return dev_storage + 2264;
d24271 1
a24271 1
return dev_storage + 2249;
d24286 1
a24286 1
return dev_storage + 2234;
d24301 1
a24301 1
return dev_storage + 2219;
d24316 1
a24316 1
return dev_storage + 2204;
d24331 1
a24331 1
return dev_storage + 2189;
d24346 1
a24346 1
return dev_storage + 2174;
d24361 1
a24361 1
return dev_storage + 2159;
d24376 1
a24376 1
return dev_storage + 2144;
d24391 1
a24391 1
return dev_storage + 2129;
d24406 1
a24406 1
return dev_storage + 2114;
d24421 1
a24421 1
return dev_storage + 2099;
d24436 1
a24436 1
return dev_storage + 2084;
d24451 1
a24451 1
return dev_storage + 2069;
d24466 1
a24466 1
return dev_storage + 2054;
d24481 1
a24481 1
return dev_storage + 2039;
d24496 1
a24496 1
return dev_storage + 2024;
d24511 1
a24511 1
return dev_storage + 2009;
d24529 1
a24529 1
return dev_storage + 402;
d24544 1
a24544 1
return dev_storage + 316;
d24574 1
a24574 1
return dev_storage + 1970;
d24589 1
a24589 1
return dev_storage + 1955;
d24604 1
a24604 1
return dev_storage + 1940;
d24619 1
a24619 1
return dev_storage + 1925;
d24634 1
a24634 1
return dev_storage + 1910;
d24649 1
a24649 1
return dev_storage + 1895;
d24664 1
a24664 1
return dev_storage + 1880;
d24679 1
a24679 1
return dev_storage + 1865;
d24694 1
a24694 1
return dev_storage + 1850;
d24709 1
a24709 1
return dev_storage + 1835;
d24724 1
a24724 1
return dev_storage + 1820;
d24739 1
a24739 1
return dev_storage + 1805;
d24754 1
a24754 1
return dev_storage + 1790;
d24769 1
a24769 1
return dev_storage + 1775;
d24784 1
a24784 1
return dev_storage + 1760;
d24799 1
a24799 1
return dev_storage + 1745;
d24814 1
a24814 1
return dev_storage + 1730;
d24829 1
a24829 1
return dev_storage + 1715;
d24844 1
a24844 1
return dev_storage + 1700;
d24859 1
a24859 1
return dev_storage + 1685;
d24874 1
a24874 1
return dev_storage + 1670;
d24889 1
a24889 1
return dev_storage + 1655;
d24904 1
a24904 1
return dev_storage + 1640;
d24919 1
a24919 1
return dev_storage + 1625;
d24934 1
a24934 1
return dev_storage + 1610;
d24949 1
a24949 1
return dev_storage + 1595;
d24964 1
a24964 1
return dev_storage + 387;
d24988 1
a24988 1
return dev_storage + 1554;
d25003 1
a25003 1
return dev_storage + 1539;
d25018 1
a25018 1
return dev_storage + 1524;
d25033 1
a25033 1
return dev_storage + 1509;
d25048 1
a25048 1
return dev_storage + 1494;
d25063 1
a25063 1
return dev_storage + 1479;
d25078 1
a25078 1
return dev_storage + 1464;
d25093 1
a25093 1
return dev_storage + 1449;
d25108 1
a25108 1
return dev_storage + 1434;
d25123 1
a25123 1
return dev_storage + 1419;
d25138 1
a25138 1
return dev_storage + 1404;
d25153 1
a25153 1
return dev_storage + 1389;
d25168 1
a25168 1
return dev_storage + 1374;
d25183 1
a25183 1
return dev_storage + 1359;
d25198 1
a25198 1
return dev_storage + 1344;
d25213 1
a25213 1
return dev_storage + 1329;
d25228 1
a25228 1
return dev_storage + 1314;
d25243 1
a25243 1
return dev_storage + 1299;
d25258 1
a25258 1
return dev_storage + 1284;
d25273 1
a25273 1
return dev_storage + 1269;
d25288 1
a25288 1
return dev_storage + 1254;
d25303 1
a25303 1
return dev_storage + 1239;
d25318 1
a25318 1
return dev_storage + 1224;
d25333 1
a25333 1
return dev_storage + 1209;
d25348 1
a25348 1
return dev_storage + 1194;
d25363 1
a25363 1
return dev_storage + 1179;
d25378 1
a25378 1
return dev_storage + 372;
d25402 1
a25402 1
return dev_storage + 1138;
d25417 1
a25417 1
return dev_storage + 1123;
d25432 1
a25432 1
return dev_storage + 1108;
d25447 1
a25447 1
return dev_storage + 1093;
d25462 1
a25462 1
return dev_storage + 1078;
d25477 1
a25477 1
return dev_storage + 1063;
d25492 1
a25492 1
return dev_storage + 1048;
d25507 1
a25507 1
return dev_storage + 1033;
d25522 1
a25522 1
return dev_storage + 1018;
d25537 1
a25537 1
return dev_storage + 1003;
d25552 1
a25552 1
return dev_storage + 988;
d25567 1
a25567 1
return dev_storage + 973;
d25582 1
a25582 1
return dev_storage + 958;
d25597 1
a25597 1
return dev_storage + 943;
d25612 1
a25612 1
return dev_storage + 928;
d25627 1
a25627 1
return dev_storage + 913;
d25642 1
a25642 1
return dev_storage + 898;
d25657 1
a25657 1
return dev_storage + 883;
d25672 1
a25672 1
return dev_storage + 868;
d25687 1
a25687 1
return dev_storage + 853;
d25702 1
a25702 1
return dev_storage + 838;
d25717 1
a25717 1
return dev_storage + 823;
d25732 1
a25732 1
return dev_storage + 808;
d25747 1
a25747 1
return dev_storage + 793;
d25762 1
a25762 1
return dev_storage + 778;
d25777 1
a25777 1
return dev_storage + 763;
d25792 1
a25792 1
return dev_storage + 357;
d25816 1
a25816 1
return dev_storage + 2506;
d25831 1
a25831 1
return dev_storage + 2496;
d25846 1
a25846 1
return dev_storage + 2486;
d25876 1
a25876 1
return dev_storage + 731;
d25894 1
a25894 1
return dev_storage + 2514;
d25909 1
a25909 1
return dev_storage + 300;
d25924 1
a25924 1
return dev_storage + 290;
d25939 1
a25939 1
return dev_storage + 280;
d25954 1
a25954 1
return dev_storage + 270;
d25969 1
a25969 1
return dev_storage + 260;
d25987 1
a25987 1
return dev_storage + 716;
d26002 1
a26002 1
return dev_storage + 250;
d26029 1
a26029 1
return dev_storage + 701;
d26044 1
a26044 1
return dev_storage + 686;
d26059 1
a26059 1
return dev_storage + 671;
d26074 1
a26074 1
return dev_storage + 656;
d26092 1
a26092 1
return dev_storage + 199;
d26107 1
a26107 1
return dev_storage + 189;
d26122 1
a26122 1
return dev_storage + 179;
d26137 1
a26137 1
return dev_storage + 169;
d26152 1
a26152 1
return dev_storage + 159;
d26167 1
a26167 1
return dev_storage + 149;
d26182 1
a26182 1
return dev_storage + 139;
d26197 1
a26197 1
return dev_storage + 129;
d26215 1
a26215 1
return dev_storage + 641;
d26230 1
a26230 1
return dev_storage + 119;
d26257 1
a26257 1
return dev_storage + 626;
d26272 1
a26272 1
return dev_storage + 611;
d26287 1
a26287 1
return dev_storage + 596;
d26302 1
a26302 1
return dev_storage + 581;
d26317 1
a26317 1
return dev_storage + 566;
d26335 1
a26335 1
return dev_storage + 551;
d26374 1
a26374 1
return dev_storage + 536;
d26410 1
a26410 1
return dev_storage + 521;
d26425 1
a26425 1
return dev_storage + 506;
d26440 1
a26440 1
return dev_storage + 491;
d26455 1
a26455 1
return dev_storage + 476;
d26470 1
a26470 1
return dev_storage + 461;
d26485 1
a26485 1
return dev_storage + 446;
d26500 1
a26500 1
return dev_storage + 431;
d26515 1
a26515 1
return dev_storage + 416;
d26533 1
a26533 1
return dev_storage + 2353;
d26548 1
a26548 1
return dev_storage + 2338;
d26563 1
a26563 1
return dev_storage + 2323;
d26578 1
a26578 1
return dev_storage + 2308;
d26593 1
a26593 1
return dev_storage + 2293;
d26608 1
a26608 1
return dev_storage + 2278;
d26623 1
a26623 1
return dev_storage + 2263;
d26638 1
a26638 1
return dev_storage + 2248;
d26653 1
a26653 1
return dev_storage + 2233;
d26668 1
a26668 1
return dev_storage + 2218;
d26683 1
a26683 1
return dev_storage + 2203;
d26698 1
a26698 1
return dev_storage + 2188;
d26713 1
a26713 1
return dev_storage + 2173;
d26728 1
a26728 1
return dev_storage + 2158;
d26743 1
a26743 1
return dev_storage + 2143;
d26758 1
a26758 1
return dev_storage + 2128;
d26773 1
a26773 1
return dev_storage + 2113;
d26788 1
a26788 1
return dev_storage + 2098;
d26803 1
a26803 1
return dev_storage + 2083;
d26818 1
a26818 1
return dev_storage + 2068;
d26833 1
a26833 1
return dev_storage + 2053;
d26848 1
a26848 1
return dev_storage + 2038;
d26863 1
a26863 1
return dev_storage + 2023;
d26878 1
a26878 1
return dev_storage + 2008;
d26896 1
a26896 1
return dev_storage + 401;
d26911 1
a26911 1
return dev_storage + 315;
d26941 1
a26941 1
return dev_storage + 1969;
d26956 1
a26956 1
return dev_storage + 1954;
d26971 1
a26971 1
return dev_storage + 1939;
d26986 1
a26986 1
return dev_storage + 1924;
d27001 1
a27001 1
return dev_storage + 1909;
d27016 1
a27016 1
return dev_storage + 1894;
d27031 1
a27031 1
return dev_storage + 1879;
d27046 1
a27046 1
return dev_storage + 1864;
d27061 1
a27061 1
return dev_storage + 1849;
d27076 1
a27076 1
return dev_storage + 1834;
d27091 1
a27091 1
return dev_storage + 1819;
d27106 1
a27106 1
return dev_storage + 1804;
d27121 1
a27121 1
return dev_storage + 1789;
d27136 1
a27136 1
return dev_storage + 1774;
d27151 1
a27151 1
return dev_storage + 1759;
d27166 1
a27166 1
return dev_storage + 1744;
d27181 1
a27181 1
return dev_storage + 1729;
d27196 1
a27196 1
return dev_storage + 1714;
d27211 1
a27211 1
return dev_storage + 1699;
d27226 1
a27226 1
return dev_storage + 1684;
d27241 1
a27241 1
return dev_storage + 1669;
d27256 1
a27256 1
return dev_storage + 1654;
d27271 1
a27271 1
return dev_storage + 1639;
d27286 1
a27286 1
return dev_storage + 1624;
d27301 1
a27301 1
return dev_storage + 1609;
d27316 1
a27316 1
return dev_storage + 1594;
d27331 1
a27331 1
return dev_storage + 386;
d27355 1
a27355 1
return dev_storage + 1553;
d27370 1
a27370 1
return dev_storage + 1538;
d27385 1
a27385 1
return dev_storage + 1523;
d27400 1
a27400 1
return dev_storage + 1508;
d27415 1
a27415 1
return dev_storage + 1493;
d27430 1
a27430 1
return dev_storage + 1478;
d27445 1
a27445 1
return dev_storage + 1463;
d27460 1
a27460 1
return dev_storage + 1448;
d27475 1
a27475 1
return dev_storage + 1433;
d27490 1
a27490 1
return dev_storage + 1418;
d27505 1
a27505 1
return dev_storage + 1403;
d27520 1
a27520 1
return dev_storage + 1388;
d27535 1
a27535 1
return dev_storage + 1373;
d27550 1
a27550 1
return dev_storage + 1358;
d27565 1
a27565 1
return dev_storage + 1343;
d27580 1
a27580 1
return dev_storage + 1328;
d27595 1
a27595 1
return dev_storage + 1313;
d27610 1
a27610 1
return dev_storage + 1298;
d27625 1
a27625 1
return dev_storage + 1283;
d27640 1
a27640 1
return dev_storage + 1268;
d27655 1
a27655 1
return dev_storage + 1253;
d27670 1
a27670 1
return dev_storage + 1238;
d27685 1
a27685 1
return dev_storage + 1223;
d27700 1
a27700 1
return dev_storage + 1208;
d27715 1
a27715 1
return dev_storage + 1193;
d27730 1
a27730 1
return dev_storage + 1178;
d27745 1
a27745 1
return dev_storage + 371;
d27769 1
a27769 1
return dev_storage + 1137;
d27784 1
a27784 1
return dev_storage + 1122;
d27799 1
a27799 1
return dev_storage + 1107;
d27814 1
a27814 1
return dev_storage + 1092;
d27829 1
a27829 1
return dev_storage + 1077;
d27844 1
a27844 1
return dev_storage + 1062;
d27859 1
a27859 1
return dev_storage + 1047;
d27874 1
a27874 1
return dev_storage + 1032;
d27889 1
a27889 1
return dev_storage + 1017;
d27904 1
a27904 1
return dev_storage + 1002;
d27919 1
a27919 1
return dev_storage + 987;
d27934 1
a27934 1
return dev_storage + 972;
d27949 1
a27949 1
return dev_storage + 957;
d27964 1
a27964 1
return dev_storage + 942;
d27979 1
a27979 1
return dev_storage + 927;
d27994 1
a27994 1
return dev_storage + 912;
d28009 1
a28009 1
return dev_storage + 897;
d28024 1
a28024 1
return dev_storage + 882;
d28039 1
a28039 1
return dev_storage + 867;
d28054 1
a28054 1
return dev_storage + 852;
d28069 1
a28069 1
return dev_storage + 837;
d28084 1
a28084 1
return dev_storage + 822;
d28099 1
a28099 1
return dev_storage + 807;
d28114 1
a28114 1
return dev_storage + 792;
d28129 1
a28129 1
return dev_storage + 777;
d28144 1
a28144 1
return dev_storage + 762;
d28159 1
a28159 1
return dev_storage + 356;
d28183 1
a28183 1
return dev_storage + 2505;
d28198 1
a28198 1
return dev_storage + 2495;
d28213 1
a28213 1
return dev_storage + 2485;
d28243 1
a28243 1
return dev_storage + 730;
d28261 1
a28261 1
return dev_storage + 2513;
d28276 1
a28276 1
return dev_storage + 299;
d28291 1
a28291 1
return dev_storage + 289;
d28306 1
a28306 1
return dev_storage + 279;
d28321 1
a28321 1
return dev_storage + 269;
d28336 1
a28336 1
return dev_storage + 259;
d28354 1
a28354 1
return dev_storage + 715;
d28369 1
a28369 1
return dev_storage + 249;
d28396 1
a28396 1
return dev_storage + 700;
d28411 1
a28411 1
return dev_storage + 685;
d28426 1
a28426 1
return dev_storage + 670;
d28441 1
a28441 1
return dev_storage + 655;
d28459 1
a28459 1
return dev_storage + 198;
d28474 1
a28474 1
return dev_storage + 188;
d28489 1
a28489 1
return dev_storage + 178;
d28504 1
a28504 1
return dev_storage + 168;
d28519 1
a28519 1
return dev_storage + 158;
d28534 1
a28534 1
return dev_storage + 148;
d28549 1
a28549 1
return dev_storage + 138;
d28564 1
a28564 1
return dev_storage + 128;
d28582 1
a28582 1
return dev_storage + 640;
d28597 1
a28597 1
return dev_storage + 118;
d28624 1
a28624 1
return dev_storage + 625;
d28639 1
a28639 1
return dev_storage + 610;
d28654 1
a28654 1
return dev_storage + 595;
d28669 1
a28669 1
return dev_storage + 580;
d28684 1
a28684 1
return dev_storage + 565;
d28702 1
a28702 1
return dev_storage + 550;
d28741 1
a28741 1
return dev_storage + 535;
d28777 1
a28777 1
return dev_storage + 520;
d28792 1
a28792 1
return dev_storage + 505;
d28807 1
a28807 1
return dev_storage + 490;
d28822 1
a28822 1
return dev_storage + 475;
d28837 1
a28837 1
return dev_storage + 460;
d28852 1
a28852 1
return dev_storage + 445;
d28867 1
a28867 1
return dev_storage + 430;
d28882 1
a28882 1
return dev_storage + 415;
d28900 1
a28900 1
return dev_storage + 2352;
d28915 1
a28915 1
return dev_storage + 2337;
d28930 1
a28930 1
return dev_storage + 2322;
d28945 1
a28945 1
return dev_storage + 2307;
d28960 1
a28960 1
return dev_storage + 2292;
d28975 1
a28975 1
return dev_storage + 2277;
d28990 1
a28990 1
return dev_storage + 2262;
d29005 1
a29005 1
return dev_storage + 2247;
d29020 1
a29020 1
return dev_storage + 2232;
d29035 1
a29035 1
return dev_storage + 2217;
d29050 1
a29050 1
return dev_storage + 2202;
d29065 1
a29065 1
return dev_storage + 2187;
d29080 1
a29080 1
return dev_storage + 2172;
d29095 1
a29095 1
return dev_storage + 2157;
d29110 1
a29110 1
return dev_storage + 2142;
d29125 1
a29125 1
return dev_storage + 2127;
d29140 1
a29140 1
return dev_storage + 2112;
d29155 1
a29155 1
return dev_storage + 2097;
d29170 1
a29170 1
return dev_storage + 2082;
d29185 1
a29185 1
return dev_storage + 2067;
d29200 1
a29200 1
return dev_storage + 2052;
d29215 1
a29215 1
return dev_storage + 2037;
d29230 1
a29230 1
return dev_storage + 2022;
d29245 1
a29245 1
return dev_storage + 2007;
d29263 1
a29263 1
return dev_storage + 400;
d29278 1
a29278 1
return dev_storage + 314;
d29308 1
a29308 1
return dev_storage + 1968;
d29323 1
a29323 1
return dev_storage + 1953;
d29338 1
a29338 1
return dev_storage + 1938;
d29353 1
a29353 1
return dev_storage + 1923;
d29368 1
a29368 1
return dev_storage + 1908;
d29383 1
a29383 1
return dev_storage + 1893;
d29398 1
a29398 1
return dev_storage + 1878;
d29413 1
a29413 1
return dev_storage + 1863;
d29428 1
a29428 1
return dev_storage + 1848;
d29443 1
a29443 1
return dev_storage + 1833;
d29458 1
a29458 1
return dev_storage + 1818;
d29473 1
a29473 1
return dev_storage + 1803;
d29488 1
a29488 1
return dev_storage + 1788;
d29503 1
a29503 1
return dev_storage + 1773;
d29518 1
a29518 1
return dev_storage + 1758;
d29533 1
a29533 1
return dev_storage + 1743;
d29548 1
a29548 1
return dev_storage + 1728;
d29563 1
a29563 1
return dev_storage + 1713;
d29578 1
a29578 1
return dev_storage + 1698;
d29593 1
a29593 1
return dev_storage + 1683;
d29608 1
a29608 1
return dev_storage + 1668;
d29623 1
a29623 1
return dev_storage + 1653;
d29638 1
a29638 1
return dev_storage + 1638;
d29653 1
a29653 1
return dev_storage + 1623;
d29668 1
a29668 1
return dev_storage + 1608;
d29683 1
a29683 1
return dev_storage + 1593;
d29698 1
a29698 1
return dev_storage + 385;
d29722 1
a29722 1
return dev_storage + 1552;
d29737 1
a29737 1
return dev_storage + 1537;
d29752 1
a29752 1
return dev_storage + 1522;
d29767 1
a29767 1
return dev_storage + 1507;
d29782 1
a29782 1
return dev_storage + 1492;
d29797 1
a29797 1
return dev_storage + 1477;
d29812 1
a29812 1
return dev_storage + 1462;
d29827 1
a29827 1
return dev_storage + 1447;
d29842 1
a29842 1
return dev_storage + 1432;
d29857 1
a29857 1
return dev_storage + 1417;
d29872 1
a29872 1
return dev_storage + 1402;
d29887 1
a29887 1
return dev_storage + 1387;
d29902 1
a29902 1
return dev_storage + 1372;
d29917 1
a29917 1
return dev_storage + 1357;
d29932 1
a29932 1
return dev_storage + 1342;
d29947 1
a29947 1
return dev_storage + 1327;
d29962 1
a29962 1
return dev_storage + 1312;
d29977 1
a29977 1
return dev_storage + 1297;
d29992 1
a29992 1
return dev_storage + 1282;
d30007 1
a30007 1
return dev_storage + 1267;
d30022 1
a30022 1
return dev_storage + 1252;
d30037 1
a30037 1
return dev_storage + 1237;
d30052 1
a30052 1
return dev_storage + 1222;
d30067 1
a30067 1
return dev_storage + 1207;
d30082 1
a30082 1
return dev_storage + 1192;
d30097 1
a30097 1
return dev_storage + 1177;
d30112 1
a30112 1
return dev_storage + 370;
d30136 1
a30136 1
return dev_storage + 1136;
d30151 1
a30151 1
return dev_storage + 1121;
d30166 1
a30166 1
return dev_storage + 1106;
d30181 1
a30181 1
return dev_storage + 1091;
d30196 1
a30196 1
return dev_storage + 1076;
d30211 1
a30211 1
return dev_storage + 1061;
d30226 1
a30226 1
return dev_storage + 1046;
d30241 1
a30241 1
return dev_storage + 1031;
d30256 1
a30256 1
return dev_storage + 1016;
d30271 1
a30271 1
return dev_storage + 1001;
d30286 1
a30286 1
return dev_storage + 986;
d30301 1
a30301 1
return dev_storage + 971;
d30316 1
a30316 1
return dev_storage + 956;
d30331 1
a30331 1
return dev_storage + 941;
d30346 1
a30346 1
return dev_storage + 926;
d30361 1
a30361 1
return dev_storage + 911;
d30376 1
a30376 1
return dev_storage + 896;
d30391 1
a30391 1
return dev_storage + 881;
d30406 1
a30406 1
return dev_storage + 866;
d30421 1
a30421 1
return dev_storage + 851;
d30436 1
a30436 1
return dev_storage + 836;
d30451 1
a30451 1
return dev_storage + 821;
d30466 1
a30466 1
return dev_storage + 806;
d30481 1
a30481 1
return dev_storage + 791;
d30496 1
a30496 1
return dev_storage + 776;
d30511 1
a30511 1
return dev_storage + 761;
d30526 1
a30526 1
return dev_storage + 355;
d30550 1
a30550 1
return dev_storage + 2504;
d30565 1
a30565 1
return dev_storage + 2494;
d30580 1
a30580 1
return dev_storage + 2484;
d30610 1
a30610 1
return dev_storage + 729;
d30628 1
a30628 1
return dev_storage + 2512;
d30643 1
a30643 1
return dev_storage + 298;
d30658 1
a30658 1
return dev_storage + 288;
d30673 1
a30673 1
return dev_storage + 278;
d30688 1
a30688 1
return dev_storage + 268;
d30703 1
a30703 1
return dev_storage + 258;
d30721 1
a30721 1
return dev_storage + 714;
d30736 1
a30736 1
return dev_storage + 248;
d30763 1
a30763 1
return dev_storage + 699;
d30778 1
a30778 1
return dev_storage + 684;
d30793 1
a30793 1
return dev_storage + 669;
d30808 1
a30808 1
return dev_storage + 654;
d30826 1
a30826 1
return dev_storage + 197;
d30841 1
a30841 1
return dev_storage + 187;
d30856 1
a30856 1
return dev_storage + 177;
d30871 1
a30871 1
return dev_storage + 167;
d30886 1
a30886 1
return dev_storage + 157;
d30901 1
a30901 1
return dev_storage + 147;
d30916 1
a30916 1
return dev_storage + 137;
d30931 1
a30931 1
return dev_storage + 127;
d30949 1
a30949 1
return dev_storage + 639;
d30964 1
a30964 1
return dev_storage + 117;
d30991 1
a30991 1
return dev_storage + 624;
d31006 1
a31006 1
return dev_storage + 609;
d31021 1
a31021 1
return dev_storage + 594;
d31036 1
a31036 1
return dev_storage + 579;
d31051 1
a31051 1
return dev_storage + 564;
d31069 1
a31069 1
return dev_storage + 549;
d31108 1
a31108 1
return dev_storage + 534;
d31144 1
a31144 1
return dev_storage + 519;
d31159 1
a31159 1
return dev_storage + 504;
d31174 1
a31174 1
return dev_storage + 489;
d31189 1
a31189 1
return dev_storage + 474;
d31204 1
a31204 1
return dev_storage + 459;
d31219 1
a31219 1
return dev_storage + 444;
d31234 1
a31234 1
return dev_storage + 429;
d31249 1
a31249 1
return dev_storage + 414;
d31267 1
a31267 1
return dev_storage + 2351;
d31282 1
a31282 1
return dev_storage + 2336;
d31297 1
a31297 1
return dev_storage + 2321;
d31312 1
a31312 1
return dev_storage + 2306;
d31327 1
a31327 1
return dev_storage + 2291;
d31342 1
a31342 1
return dev_storage + 2276;
d31357 1
a31357 1
return dev_storage + 2261;
d31372 1
a31372 1
return dev_storage + 2246;
d31387 1
a31387 1
return dev_storage + 2231;
d31402 1
a31402 1
return dev_storage + 2216;
d31417 1
a31417 1
return dev_storage + 2201;
d31432 1
a31432 1
return dev_storage + 2186;
d31447 1
a31447 1
return dev_storage + 2171;
d31462 1
a31462 1
return dev_storage + 2156;
d31477 1
a31477 1
return dev_storage + 2141;
d31492 1
a31492 1
return dev_storage + 2126;
d31507 1
a31507 1
return dev_storage + 2111;
d31522 1
a31522 1
return dev_storage + 2096;
d31537 1
a31537 1
return dev_storage + 2081;
d31552 1
a31552 1
return dev_storage + 2066;
d31567 1
a31567 1
return dev_storage + 2051;
d31582 1
a31582 1
return dev_storage + 2036;
d31597 1
a31597 1
return dev_storage + 2021;
d31612 1
a31612 1
return dev_storage + 2006;
d31630 1
a31630 1
return dev_storage + 399;
d31645 1
a31645 1
return dev_storage + 313;
d31675 1
a31675 1
return dev_storage + 1967;
d31690 1
a31690 1
return dev_storage + 1952;
d31705 1
a31705 1
return dev_storage + 1937;
d31720 1
a31720 1
return dev_storage + 1922;
d31735 1
a31735 1
return dev_storage + 1907;
d31750 1
a31750 1
return dev_storage + 1892;
d31765 1
a31765 1
return dev_storage + 1877;
d31780 1
a31780 1
return dev_storage + 1862;
d31795 1
a31795 1
return dev_storage + 1847;
d31810 1
a31810 1
return dev_storage + 1832;
d31825 1
a31825 1
return dev_storage + 1817;
d31840 1
a31840 1
return dev_storage + 1802;
d31855 1
a31855 1
return dev_storage + 1787;
d31870 1
a31870 1
return dev_storage + 1772;
d31885 1
a31885 1
return dev_storage + 1757;
d31900 1
a31900 1
return dev_storage + 1742;
d31915 1
a31915 1
return dev_storage + 1727;
d31930 1
a31930 1
return dev_storage + 1712;
d31945 1
a31945 1
return dev_storage + 1697;
d31960 1
a31960 1
return dev_storage + 1682;
d31975 1
a31975 1
return dev_storage + 1667;
d31990 1
a31990 1
return dev_storage + 1652;
d32005 1
a32005 1
return dev_storage + 1637;
d32020 1
a32020 1
return dev_storage + 1622;
d32035 1
a32035 1
return dev_storage + 1607;
d32050 1
a32050 1
return dev_storage + 1592;
d32065 1
a32065 1
return dev_storage + 384;
d32089 1
a32089 1
return dev_storage + 1551;
d32104 1
a32104 1
return dev_storage + 1536;
d32119 1
a32119 1
return dev_storage + 1521;
d32134 1
a32134 1
return dev_storage + 1506;
d32149 1
a32149 1
return dev_storage + 1491;
d32164 1
a32164 1
return dev_storage + 1476;
d32179 1
a32179 1
return dev_storage + 1461;
d32194 1
a32194 1
return dev_storage + 1446;
d32209 1
a32209 1
return dev_storage + 1431;
d32224 1
a32224 1
return dev_storage + 1416;
d32239 1
a32239 1
return dev_storage + 1401;
d32254 1
a32254 1
return dev_storage + 1386;
d32269 1
a32269 1
return dev_storage + 1371;
d32284 1
a32284 1
return dev_storage + 1356;
d32299 1
a32299 1
return dev_storage + 1341;
d32314 1
a32314 1
return dev_storage + 1326;
d32329 1
a32329 1
return dev_storage + 1311;
d32344 1
a32344 1
return dev_storage + 1296;
d32359 1
a32359 1
return dev_storage + 1281;
d32374 1
a32374 1
return dev_storage + 1266;
d32389 1
a32389 1
return dev_storage + 1251;
d32404 1
a32404 1
return dev_storage + 1236;
d32419 1
a32419 1
return dev_storage + 1221;
d32434 1
a32434 1
return dev_storage + 1206;
d32449 1
a32449 1
return dev_storage + 1191;
d32464 1
a32464 1
return dev_storage + 1176;
d32479 1
a32479 1
return dev_storage + 369;
d32503 1
a32503 1
return dev_storage + 1135;
d32518 1
a32518 1
return dev_storage + 1120;
d32533 1
a32533 1
return dev_storage + 1105;
d32548 1
a32548 1
return dev_storage + 1090;
d32563 1
a32563 1
return dev_storage + 1075;
d32578 1
a32578 1
return dev_storage + 1060;
d32593 1
a32593 1
return dev_storage + 1045;
d32608 1
a32608 1
return dev_storage + 1030;
d32623 1
a32623 1
return dev_storage + 1015;
d32638 1
a32638 1
return dev_storage + 1000;
d32653 1
a32653 1
return dev_storage + 985;
d32668 1
a32668 1
return dev_storage + 970;
d32683 1
a32683 1
return dev_storage + 955;
d32698 1
a32698 1
return dev_storage + 940;
d32713 1
a32713 1
return dev_storage + 925;
d32728 1
a32728 1
return dev_storage + 910;
d32743 1
a32743 1
return dev_storage + 895;
d32758 1
a32758 1
return dev_storage + 880;
d32773 1
a32773 1
return dev_storage + 865;
d32788 1
a32788 1
return dev_storage + 850;
d32803 1
a32803 1
return dev_storage + 835;
d32818 1
a32818 1
return dev_storage + 820;
d32833 1
a32833 1
return dev_storage + 805;
d32848 1
a32848 1
return dev_storage + 790;
d32863 1
a32863 1
return dev_storage + 775;
d32878 1
a32878 1
return dev_storage + 760;
d32893 1
a32893 1
return dev_storage + 354;
d32917 1
a32917 1
return dev_storage + 2503;
d32932 1
a32932 1
return dev_storage + 2493;
d32947 1
a32947 1
return dev_storage + 2483;
d32977 1
a32977 1
return dev_storage + 728;
d32995 1
a32995 1
return dev_storage + 2511;
d33010 1
a33010 1
return dev_storage + 297;
d33025 1
a33025 1
return dev_storage + 287;
d33040 1
a33040 1
return dev_storage + 277;
d33055 1
a33055 1
return dev_storage + 267;
d33070 1
a33070 1
return dev_storage + 257;
d33088 1
a33088 1
return dev_storage + 713;
d33103 1
a33103 1
return dev_storage + 247;
d33130 1
a33130 1
return dev_storage + 698;
d33145 1
a33145 1
return dev_storage + 683;
d33160 1
a33160 1
return dev_storage + 668;
d33175 1
a33175 1
return dev_storage + 653;
d33193 1
a33193 1
return dev_storage + 196;
d33208 1
a33208 1
return dev_storage + 186;
d33223 1
a33223 1
return dev_storage + 176;
d33238 1
a33238 1
return dev_storage + 166;
d33253 1
a33253 1
return dev_storage + 156;
d33268 1
a33268 1
return dev_storage + 146;
d33283 1
a33283 1
return dev_storage + 136;
d33298 1
a33298 1
return dev_storage + 126;
d33316 1
a33316 1
return dev_storage + 638;
d33331 1
a33331 1
return dev_storage + 116;
d33358 1
a33358 1
return dev_storage + 623;
d33373 1
a33373 1
return dev_storage + 608;
d33388 1
a33388 1
return dev_storage + 593;
d33403 1
a33403 1
return dev_storage + 578;
d33418 1
a33418 1
return dev_storage + 563;
d33436 1
a33436 1
return dev_storage + 548;
d33475 1
a33475 1
return dev_storage + 533;
d33511 1
a33511 1
return dev_storage + 518;
d33526 1
a33526 1
return dev_storage + 503;
d33541 1
a33541 1
return dev_storage + 488;
d33556 1
a33556 1
return dev_storage + 473;
d33571 1
a33571 1
return dev_storage + 458;
d33586 1
a33586 1
return dev_storage + 443;
d33601 1
a33601 1
return dev_storage + 428;
d33616 1
a33616 1
return dev_storage + 413;
d33634 1
a33634 1
return dev_storage + 398;
d33649 1
a33649 1
return dev_storage + 312;
d33670 1
a33670 1
return dev_storage + 383;
d33685 1
a33685 1
return dev_storage + 368;
d33700 1
a33700 1
return dev_storage + 353;
d33718 1
a33718 1
return dev_storage + 2502;
d33733 1
a33733 1
return dev_storage + 2492;
d33748 1
a33748 1
return dev_storage + 2482;
d33799 1
a33799 1
return dev_storage + 301;
d33820 1
a33820 1
return dev_storage + 2570;
d33859 1
a33859 1
return dev_storage + 2560;
d33898 1
a33898 1
return dev_storage + 2550;
d33937 1
a33937 1
return dev_storage + 2540;
d33976 1
a33976 1
return dev_storage + 2530;
d33991 1
a33991 1
return dev_storage + 225;
d34027 1
a34027 1
return dev_storage + 215;
d34054 1
a34054 1
return dev_storage + 2569;
d34093 1
a34093 1
return dev_storage + 2559;
d34132 1
a34132 1
return dev_storage + 2549;
d34171 1
a34171 1
return dev_storage + 2539;
d34210 1
a34210 1
return dev_storage + 2529;
d34225 1
a34225 1
return dev_storage + 224;
d34261 1
a34261 1
return dev_storage + 214;
d34288 1
a34288 1
return dev_storage + 2568;
d34327 1
a34327 1
return dev_storage + 2558;
d34366 1
a34366 1
return dev_storage + 2548;
d34405 1
a34405 1
return dev_storage + 2538;
d34420 1
a34420 1
return dev_storage + 233;
d34459 1
a34459 1
return dev_storage + 2528;
d34474 1
a34474 1
return dev_storage + 223;
d34510 1
a34510 1
return dev_storage + 213;
d34537 1
a34537 1
return dev_storage + 2567;
d34576 1
a34576 1
return dev_storage + 2557;
d34615 1
a34615 1
return dev_storage + 2547;
d34654 1
a34654 1
return dev_storage + 2537;
d34669 1
a34669 1
return dev_storage + 232;
d34708 1
a34708 1
return dev_storage + 2527;
d34723 1
a34723 1
return dev_storage + 222;
d34759 1
a34759 1
return dev_storage + 212;
d34786 1
a34786 1
return dev_storage + 2566;
d34801 1
a34801 1
return dev_storage + 2556;
d34816 1
a34816 1
return dev_storage + 2546;
d34831 1
a34831 1
return dev_storage + 2536;
d34846 1
a34846 1
return dev_storage + 2526;
d34870 1
a34870 1
return dev_storage + 231;
d34885 1
a34885 1
return dev_storage + 221;
d34900 1
a34900 1
return dev_storage + 211;
d35008 1
a35008 1
return dev_storage + 2365;
d35023 1
a35023 1
return dev_storage + 2350;
d35038 1
a35038 1
return dev_storage + 2335;
d35053 1
a35053 1
return dev_storage + 2320;
d35068 1
a35068 1
return dev_storage + 2305;
d35083 1
a35083 1
return dev_storage + 2290;
d35098 1
a35098 1
return dev_storage + 2275;
d35113 1
a35113 1
return dev_storage + 2260;
d35128 1
a35128 1
return dev_storage + 2245;
d35143 1
a35143 1
return dev_storage + 2230;
d35158 1
a35158 1
return dev_storage + 2215;
d35173 1
a35173 1
return dev_storage + 2200;
d35188 1
a35188 1
return dev_storage + 2185;
d35203 1
a35203 1
return dev_storage + 2170;
d35218 1
a35218 1
return dev_storage + 2155;
d35233 1
a35233 1
return dev_storage + 2140;
d35248 1
a35248 1
return dev_storage + 2125;
d35263 1
a35263 1
return dev_storage + 2110;
d35278 1
a35278 1
return dev_storage + 2095;
d35293 1
a35293 1
return dev_storage + 2080;
d35308 1
a35308 1
return dev_storage + 2065;
d35323 1
a35323 1
return dev_storage + 2050;
d35338 1
a35338 1
return dev_storage + 2035;
d35353 1
a35353 1
return dev_storage + 2020;
d35377 1
a35377 1
return dev_storage + 1981;
d35392 1
a35392 1
return dev_storage + 1966;
d35407 1
a35407 1
return dev_storage + 1951;
d35422 1
a35422 1
return dev_storage + 1936;
d35437 1
a35437 1
return dev_storage + 1921;
d35452 1
a35452 1
return dev_storage + 1906;
d35467 1
a35467 1
return dev_storage + 1891;
d35482 1
a35482 1
return dev_storage + 1876;
d35497 1
a35497 1
return dev_storage + 1861;
d35512 1
a35512 1
return dev_storage + 1846;
d35527 1
a35527 1
return dev_storage + 1831;
d35542 1
a35542 1
return dev_storage + 1816;
d35557 1
a35557 1
return dev_storage + 1801;
d35572 1
a35572 1
return dev_storage + 1786;
d35587 1
a35587 1
return dev_storage + 1771;
d35602 1
a35602 1
return dev_storage + 1756;
d35617 1
a35617 1
return dev_storage + 1741;
d35632 1
a35632 1
return dev_storage + 1726;
d35647 1
a35647 1
return dev_storage + 1711;
d35662 1
a35662 1
return dev_storage + 1696;
d35677 1
a35677 1
return dev_storage + 1681;
d35692 1
a35692 1
return dev_storage + 1666;
d35707 1
a35707 1
return dev_storage + 1651;
d35722 1
a35722 1
return dev_storage + 1636;
d35737 1
a35737 1
return dev_storage + 1621;
d35752 1
a35752 1
return dev_storage + 1606;
d35776 1
a35776 1
return dev_storage + 1565;
d35791 1
a35791 1
return dev_storage + 1550;
d35806 1
a35806 1
return dev_storage + 1535;
d35821 1
a35821 1
return dev_storage + 1520;
d35836 1
a35836 1
return dev_storage + 1505;
d35851 1
a35851 1
return dev_storage + 1490;
d35866 1
a35866 1
return dev_storage + 1475;
d35881 1
a35881 1
return dev_storage + 1460;
d35896 1
a35896 1
return dev_storage + 1445;
d35911 1
a35911 1
return dev_storage + 1430;
d35926 1
a35926 1
return dev_storage + 1415;
d35941 1
a35941 1
return dev_storage + 1400;
d35956 1
a35956 1
return dev_storage + 1385;
d35971 1
a35971 1
return dev_storage + 1370;
d35986 1
a35986 1
return dev_storage + 1355;
d36001 1
a36001 1
return dev_storage + 1340;
d36016 1
a36016 1
return dev_storage + 1325;
d36031 1
a36031 1
return dev_storage + 1310;
d36046 1
a36046 1
return dev_storage + 1295;
d36061 1
a36061 1
return dev_storage + 1280;
d36076 1
a36076 1
return dev_storage + 1265;
d36091 1
a36091 1
return dev_storage + 1250;
d36106 1
a36106 1
return dev_storage + 1235;
d36121 1
a36121 1
return dev_storage + 1220;
d36136 1
a36136 1
return dev_storage + 1205;
d36151 1
a36151 1
return dev_storage + 1190;
d36175 1
a36175 1
return dev_storage + 1149;
d36190 1
a36190 1
return dev_storage + 1134;
d36205 1
a36205 1
return dev_storage + 1119;
d36220 1
a36220 1
return dev_storage + 1104;
d36235 1
a36235 1
return dev_storage + 1089;
d36250 1
a36250 1
return dev_storage + 1074;
d36265 1
a36265 1
return dev_storage + 1059;
d36280 1
a36280 1
return dev_storage + 1044;
d36295 1
a36295 1
return dev_storage + 1029;
d36310 1
a36310 1
return dev_storage + 1014;
d36325 1
a36325 1
return dev_storage + 999;
d36340 1
a36340 1
return dev_storage + 984;
d36355 1
a36355 1
return dev_storage + 969;
d36370 1
a36370 1
return dev_storage + 954;
d36385 1
a36385 1
return dev_storage + 939;
d36400 1
a36400 1
return dev_storage + 924;
d36415 1
a36415 1
return dev_storage + 909;
d36430 1
a36430 1
return dev_storage + 894;
d36445 1
a36445 1
return dev_storage + 879;
d36460 1
a36460 1
return dev_storage + 864;
d36475 1
a36475 1
return dev_storage + 849;
d36490 1
a36490 1
return dev_storage + 834;
d36505 1
a36505 1
return dev_storage + 819;
d36520 1
a36520 1
return dev_storage + 804;
d36535 1
a36535 1
return dev_storage + 789;
d36550 1
a36550 1
return dev_storage + 774;
d36583 1
a36583 1
return dev_storage + 2565;
d36598 1
a36598 1
return dev_storage + 2555;
d36613 1
a36613 1
return dev_storage + 2545;
d36628 1
a36628 1
return dev_storage + 2535;
d36643 1
a36643 1
return dev_storage + 2525;
d36667 1
a36667 1
return dev_storage + 230;
d36682 1
a36682 1
return dev_storage + 220;
d36697 1
a36697 1
return dev_storage + 210;
d36805 1
a36805 1
return dev_storage + 2364;
d36820 1
a36820 1
return dev_storage + 2349;
d36835 1
a36835 1
return dev_storage + 2334;
d36850 1
a36850 1
return dev_storage + 2319;
d36865 1
a36865 1
return dev_storage + 2304;
d36880 1
a36880 1
return dev_storage + 2289;
d36895 1
a36895 1
return dev_storage + 2274;
d36910 1
a36910 1
return dev_storage + 2259;
d36925 1
a36925 1
return dev_storage + 2244;
d36940 1
a36940 1
return dev_storage + 2229;
d36955 1
a36955 1
return dev_storage + 2214;
d36970 1
a36970 1
return dev_storage + 2199;
d36985 1
a36985 1
return dev_storage + 2184;
d37000 1
a37000 1
return dev_storage + 2169;
d37015 1
a37015 1
return dev_storage + 2154;
d37030 1
a37030 1
return dev_storage + 2139;
d37045 1
a37045 1
return dev_storage + 2124;
d37060 1
a37060 1
return dev_storage + 2109;
d37075 1
a37075 1
return dev_storage + 2094;
d37090 1
a37090 1
return dev_storage + 2079;
d37105 1
a37105 1
return dev_storage + 2064;
d37120 1
a37120 1
return dev_storage + 2049;
d37135 1
a37135 1
return dev_storage + 2034;
d37150 1
a37150 1
return dev_storage + 2019;
d37174 1
a37174 1
return dev_storage + 1980;
d37189 1
a37189 1
return dev_storage + 1965;
d37204 1
a37204 1
return dev_storage + 1950;
d37219 1
a37219 1
return dev_storage + 1935;
d37234 1
a37234 1
return dev_storage + 1920;
d37249 1
a37249 1
return dev_storage + 1905;
d37264 1
a37264 1
return dev_storage + 1890;
d37279 1
a37279 1
return dev_storage + 1875;
d37294 1
a37294 1
return dev_storage + 1860;
d37309 1
a37309 1
return dev_storage + 1845;
d37324 1
a37324 1
return dev_storage + 1830;
d37339 1
a37339 1
return dev_storage + 1815;
d37354 1
a37354 1
return dev_storage + 1800;
d37369 1
a37369 1
return dev_storage + 1785;
d37384 1
a37384 1
return dev_storage + 1770;
d37399 1
a37399 1
return dev_storage + 1755;
d37414 1
a37414 1
return dev_storage + 1740;
d37429 1
a37429 1
return dev_storage + 1725;
d37444 1
a37444 1
return dev_storage + 1710;
d37459 1
a37459 1
return dev_storage + 1695;
d37474 1
a37474 1
return dev_storage + 1680;
d37489 1
a37489 1
return dev_storage + 1665;
d37504 1
a37504 1
return dev_storage + 1650;
d37519 1
a37519 1
return dev_storage + 1635;
d37534 1
a37534 1
return dev_storage + 1620;
d37549 1
a37549 1
return dev_storage + 1605;
d37573 1
a37573 1
return dev_storage + 1564;
d37588 1
a37588 1
return dev_storage + 1549;
d37603 1
a37603 1
return dev_storage + 1534;
d37618 1
a37618 1
return dev_storage + 1519;
d37633 1
a37633 1
return dev_storage + 1504;
d37648 1
a37648 1
return dev_storage + 1489;
d37663 1
a37663 1
return dev_storage + 1474;
d37678 1
a37678 1
return dev_storage + 1459;
d37693 1
a37693 1
return dev_storage + 1444;
d37708 1
a37708 1
return dev_storage + 1429;
d37723 1
a37723 1
return dev_storage + 1414;
d37738 1
a37738 1
return dev_storage + 1399;
d37753 1
a37753 1
return dev_storage + 1384;
d37768 1
a37768 1
return dev_storage + 1369;
d37783 1
a37783 1
return dev_storage + 1354;
d37798 1
a37798 1
return dev_storage + 1339;
d37813 1
a37813 1
return dev_storage + 1324;
d37828 1
a37828 1
return dev_storage + 1309;
d37843 1
a37843 1
return dev_storage + 1294;
d37858 1
a37858 1
return dev_storage + 1279;
d37873 1
a37873 1
return dev_storage + 1264;
d37888 1
a37888 1
return dev_storage + 1249;
d37903 1
a37903 1
return dev_storage + 1234;
d37918 1
a37918 1
return dev_storage + 1219;
d37933 1
a37933 1
return dev_storage + 1204;
d37948 1
a37948 1
return dev_storage + 1189;
d37972 1
a37972 1
return dev_storage + 1148;
d37987 1
a37987 1
return dev_storage + 1133;
d38002 1
a38002 1
return dev_storage + 1118;
d38017 1
a38017 1
return dev_storage + 1103;
d38032 1
a38032 1
return dev_storage + 1088;
d38047 1
a38047 1
return dev_storage + 1073;
d38062 1
a38062 1
return dev_storage + 1058;
d38077 1
a38077 1
return dev_storage + 1043;
d38092 1
a38092 1
return dev_storage + 1028;
d38107 1
a38107 1
return dev_storage + 1013;
d38122 1
a38122 1
return dev_storage + 998;
d38137 1
a38137 1
return dev_storage + 983;
d38152 1
a38152 1
return dev_storage + 968;
d38167 1
a38167 1
return dev_storage + 953;
d38182 1
a38182 1
return dev_storage + 938;
d38197 1
a38197 1
return dev_storage + 923;
d38212 1
a38212 1
return dev_storage + 908;
d38227 1
a38227 1
return dev_storage + 893;
d38242 1
a38242 1
return dev_storage + 878;
d38257 1
a38257 1
return dev_storage + 863;
d38272 1
a38272 1
return dev_storage + 848;
d38287 1
a38287 1
return dev_storage + 833;
d38302 1
a38302 1
return dev_storage + 818;
d38317 1
a38317 1
return dev_storage + 803;
d38332 1
a38332 1
return dev_storage + 788;
d38347 1
a38347 1
return dev_storage + 773;
d38380 1
a38380 1
return dev_storage + 2574;
d38395 1
a38395 1
return dev_storage + 2564;
d38410 1
a38410 1
return dev_storage + 2554;
d38425 1
a38425 1
return dev_storage + 2544;
d38440 1
a38440 1
return dev_storage + 2534;
d38455 1
a38455 1
return dev_storage + 2524;
d38479 1
a38479 1
return dev_storage + 229;
d38494 1
a38494 1
return dev_storage + 219;
d38509 1
a38509 1
return dev_storage + 209;
d38632 1
a38632 1
return dev_storage + 2363;
d38647 1
a38647 1
return dev_storage + 2348;
d38662 1
a38662 1
return dev_storage + 2333;
d38677 1
a38677 1
return dev_storage + 2318;
d38692 1
a38692 1
return dev_storage + 2303;
d38707 1
a38707 1
return dev_storage + 2288;
d38722 1
a38722 1
return dev_storage + 2273;
d38737 1
a38737 1
return dev_storage + 2258;
d38752 1
a38752 1
return dev_storage + 2243;
d38767 1
a38767 1
return dev_storage + 2228;
d38782 1
a38782 1
return dev_storage + 2213;
d38797 1
a38797 1
return dev_storage + 2198;
d38812 1
a38812 1
return dev_storage + 2183;
d38827 1
a38827 1
return dev_storage + 2168;
d38842 1
a38842 1
return dev_storage + 2153;
d38857 1
a38857 1
return dev_storage + 2138;
d38872 1
a38872 1
return dev_storage + 2123;
d38887 1
a38887 1
return dev_storage + 2108;
d38902 1
a38902 1
return dev_storage + 2093;
d38917 1
a38917 1
return dev_storage + 2078;
d38932 1
a38932 1
return dev_storage + 2063;
d38947 1
a38947 1
return dev_storage + 2048;
d38962 1
a38962 1
return dev_storage + 2033;
d38977 1
a38977 1
return dev_storage + 2018;
d39001 1
a39001 1
return dev_storage + 1979;
d39016 1
a39016 1
return dev_storage + 1964;
d39031 1
a39031 1
return dev_storage + 1949;
d39046 1
a39046 1
return dev_storage + 1934;
d39061 1
a39061 1
return dev_storage + 1919;
d39076 1
a39076 1
return dev_storage + 1904;
d39091 1
a39091 1
return dev_storage + 1889;
d39106 1
a39106 1
return dev_storage + 1874;
d39121 1
a39121 1
return dev_storage + 1859;
d39136 1
a39136 1
return dev_storage + 1844;
d39151 1
a39151 1
return dev_storage + 1829;
d39166 1
a39166 1
return dev_storage + 1814;
d39181 1
a39181 1
return dev_storage + 1799;
d39196 1
a39196 1
return dev_storage + 1784;
d39211 1
a39211 1
return dev_storage + 1769;
d39226 1
a39226 1
return dev_storage + 1754;
d39241 1
a39241 1
return dev_storage + 1739;
d39256 1
a39256 1
return dev_storage + 1724;
d39271 1
a39271 1
return dev_storage + 1709;
d39286 1
a39286 1
return dev_storage + 1694;
d39301 1
a39301 1
return dev_storage + 1679;
d39316 1
a39316 1
return dev_storage + 1664;
d39331 1
a39331 1
return dev_storage + 1649;
d39346 1
a39346 1
return dev_storage + 1634;
d39361 1
a39361 1
return dev_storage + 1619;
d39376 1
a39376 1
return dev_storage + 1604;
d39400 1
a39400 1
return dev_storage + 1563;
d39415 1
a39415 1
return dev_storage + 1548;
d39430 1
a39430 1
return dev_storage + 1533;
d39445 1
a39445 1
return dev_storage + 1518;
d39460 1
a39460 1
return dev_storage + 1503;
d39475 1
a39475 1
return dev_storage + 1488;
d39490 1
a39490 1
return dev_storage + 1473;
d39505 1
a39505 1
return dev_storage + 1458;
d39520 1
a39520 1
return dev_storage + 1443;
d39535 1
a39535 1
return dev_storage + 1428;
d39550 1
a39550 1
return dev_storage + 1413;
d39565 1
a39565 1
return dev_storage + 1398;
d39580 1
a39580 1
return dev_storage + 1383;
d39595 1
a39595 1
return dev_storage + 1368;
d39610 1
a39610 1
return dev_storage + 1353;
d39625 1
a39625 1
return dev_storage + 1338;
d39640 1
a39640 1
return dev_storage + 1323;
d39655 1
a39655 1
return dev_storage + 1308;
d39670 1
a39670 1
return dev_storage + 1293;
d39685 1
a39685 1
return dev_storage + 1278;
d39700 1
a39700 1
return dev_storage + 1263;
d39715 1
a39715 1
return dev_storage + 1248;
d39730 1
a39730 1
return dev_storage + 1233;
d39745 1
a39745 1
return dev_storage + 1218;
d39760 1
a39760 1
return dev_storage + 1203;
d39775 1
a39775 1
return dev_storage + 1188;
d39799 1
a39799 1
return dev_storage + 1147;
d39814 1
a39814 1
return dev_storage + 1132;
d39829 1
a39829 1
return dev_storage + 1117;
d39844 1
a39844 1
return dev_storage + 1102;
d39859 1
a39859 1
return dev_storage + 1087;
d39874 1
a39874 1
return dev_storage + 1072;
d39889 1
a39889 1
return dev_storage + 1057;
d39904 1
a39904 1
return dev_storage + 1042;
d39919 1
a39919 1
return dev_storage + 1027;
d39934 1
a39934 1
return dev_storage + 1012;
d39949 1
a39949 1
return dev_storage + 997;
d39964 1
a39964 1
return dev_storage + 982;
d39979 1
a39979 1
return dev_storage + 967;
d39994 1
a39994 1
return dev_storage + 952;
d40009 1
a40009 1
return dev_storage + 937;
d40024 1
a40024 1
return dev_storage + 922;
d40039 1
a40039 1
return dev_storage + 907;
d40054 1
a40054 1
return dev_storage + 892;
d40069 1
a40069 1
return dev_storage + 877;
d40084 1
a40084 1
return dev_storage + 862;
d40099 1
a40099 1
return dev_storage + 847;
d40114 1
a40114 1
return dev_storage + 832;
d40129 1
a40129 1
return dev_storage + 817;
d40144 1
a40144 1
return dev_storage + 802;
d40159 1
a40159 1
return dev_storage + 787;
d40174 1
a40174 1
return dev_storage + 772;
d40207 1
a40207 1
return dev_storage + 2573;
d40222 1
a40222 1
return dev_storage + 2563;
d40237 1
a40237 1
return dev_storage + 2553;
d40252 1
a40252 1
return dev_storage + 2543;
d40267 1
a40267 1
return dev_storage + 2533;
d40282 1
a40282 1
return dev_storage + 2523;
d40306 1
a40306 1
return dev_storage + 228;
d40321 1
a40321 1
return dev_storage + 218;
d40336 1
a40336 1
return dev_storage + 208;
d40459 1
a40459 1
return dev_storage + 2362;
d40474 1
a40474 1
return dev_storage + 2347;
d40489 1
a40489 1
return dev_storage + 2332;
d40504 1
a40504 1
return dev_storage + 2317;
d40519 1
a40519 1
return dev_storage + 2302;
d40534 1
a40534 1
return dev_storage + 2287;
d40549 1
a40549 1
return dev_storage + 2272;
d40564 1
a40564 1
return dev_storage + 2257;
d40579 1
a40579 1
return dev_storage + 2242;
d40594 1
a40594 1
return dev_storage + 2227;
d40609 1
a40609 1
return dev_storage + 2212;
d40624 1
a40624 1
return dev_storage + 2197;
d40639 1
a40639 1
return dev_storage + 2182;
d40654 1
a40654 1
return dev_storage + 2167;
d40669 1
a40669 1
return dev_storage + 2152;
d40684 1
a40684 1
return dev_storage + 2137;
d40699 1
a40699 1
return dev_storage + 2122;
d40714 1
a40714 1
return dev_storage + 2107;
d40729 1
a40729 1
return dev_storage + 2092;
d40744 1
a40744 1
return dev_storage + 2077;
d40759 1
a40759 1
return dev_storage + 2062;
d40774 1
a40774 1
return dev_storage + 2047;
d40789 1
a40789 1
return dev_storage + 2032;
d40804 1
a40804 1
return dev_storage + 2017;
d40828 1
a40828 1
return dev_storage + 1978;
d40843 1
a40843 1
return dev_storage + 1963;
d40858 1
a40858 1
return dev_storage + 1948;
d40873 1
a40873 1
return dev_storage + 1933;
d40888 1
a40888 1
return dev_storage + 1918;
d40903 1
a40903 1
return dev_storage + 1903;
d40918 1
a40918 1
return dev_storage + 1888;
d40933 1
a40933 1
return dev_storage + 1873;
d40948 1
a40948 1
return dev_storage + 1858;
d40963 1
a40963 1
return dev_storage + 1843;
d40978 1
a40978 1
return dev_storage + 1828;
d40993 1
a40993 1
return dev_storage + 1813;
d41008 1
a41008 1
return dev_storage + 1798;
d41023 1
a41023 1
return dev_storage + 1783;
d41038 1
a41038 1
return dev_storage + 1768;
d41053 1
a41053 1
return dev_storage + 1753;
d41068 1
a41068 1
return dev_storage + 1738;
d41083 1
a41083 1
return dev_storage + 1723;
d41098 1
a41098 1
return dev_storage + 1708;
d41113 1
a41113 1
return dev_storage + 1693;
d41128 1
a41128 1
return dev_storage + 1678;
d41143 1
a41143 1
return dev_storage + 1663;
d41158 1
a41158 1
return dev_storage + 1648;
d41173 1
a41173 1
return dev_storage + 1633;
d41188 1
a41188 1
return dev_storage + 1618;
d41203 1
a41203 1
return dev_storage + 1603;
d41227 1
a41227 1
return dev_storage + 1562;
d41242 1
a41242 1
return dev_storage + 1547;
d41257 1
a41257 1
return dev_storage + 1532;
d41272 1
a41272 1
return dev_storage + 1517;
d41287 1
a41287 1
return dev_storage + 1502;
d41302 1
a41302 1
return dev_storage + 1487;
d41317 1
a41317 1
return dev_storage + 1472;
d41332 1
a41332 1
return dev_storage + 1457;
d41347 1
a41347 1
return dev_storage + 1442;
d41362 1
a41362 1
return dev_storage + 1427;
d41377 1
a41377 1
return dev_storage + 1412;
d41392 1
a41392 1
return dev_storage + 1397;
d41407 1
a41407 1
return dev_storage + 1382;
d41422 1
a41422 1
return dev_storage + 1367;
d41437 1
a41437 1
return dev_storage + 1352;
d41452 1
a41452 1
return dev_storage + 1337;
d41467 1
a41467 1
return dev_storage + 1322;
d41482 1
a41482 1
return dev_storage + 1307;
d41497 1
a41497 1
return dev_storage + 1292;
d41512 1
a41512 1
return dev_storage + 1277;
d41527 1
a41527 1
return dev_storage + 1262;
d41542 1
a41542 1
return dev_storage + 1247;
d41557 1
a41557 1
return dev_storage + 1232;
d41572 1
a41572 1
return dev_storage + 1217;
d41587 1
a41587 1
return dev_storage + 1202;
d41602 1
a41602 1
return dev_storage + 1187;
d41626 1
a41626 1
return dev_storage + 1146;
d41641 1
a41641 1
return dev_storage + 1131;
d41656 1
a41656 1
return dev_storage + 1116;
d41671 1
a41671 1
return dev_storage + 1101;
d41686 1
a41686 1
return dev_storage + 1086;
d41701 1
a41701 1
return dev_storage + 1071;
d41716 1
a41716 1
return dev_storage + 1056;
d41731 1
a41731 1
return dev_storage + 1041;
d41746 1
a41746 1
return dev_storage + 1026;
d41761 1
a41761 1
return dev_storage + 1011;
d41776 1
a41776 1
return dev_storage + 996;
d41791 1
a41791 1
return dev_storage + 981;
d41806 1
a41806 1
return dev_storage + 966;
d41821 1
a41821 1
return dev_storage + 951;
d41836 1
a41836 1
return dev_storage + 936;
d41851 1
a41851 1
return dev_storage + 921;
d41866 1
a41866 1
return dev_storage + 906;
d41881 1
a41881 1
return dev_storage + 891;
d41896 1
a41896 1
return dev_storage + 876;
d41911 1
a41911 1
return dev_storage + 861;
d41926 1
a41926 1
return dev_storage + 846;
d41941 1
a41941 1
return dev_storage + 831;
d41956 1
a41956 1
return dev_storage + 816;
d41971 1
a41971 1
return dev_storage + 801;
d41986 1
a41986 1
return dev_storage + 786;
d42001 1
a42001 1
return dev_storage + 771;
d42034 1
a42034 1
return dev_storage + 2572;
d42049 1
a42049 1
return dev_storage + 2562;
d42064 1
a42064 1
return dev_storage + 2552;
d42079 1
a42079 1
return dev_storage + 2542;
d42094 1
a42094 1
return dev_storage + 2532;
d42109 1
a42109 1
return dev_storage + 2522;
d42133 1
a42133 1
return dev_storage + 227;
d42148 1
a42148 1
return dev_storage + 217;
d42163 1
a42163 1
return dev_storage + 207;
d42286 1
a42286 1
return dev_storage + 2361;
d42301 1
a42301 1
return dev_storage + 2346;
d42316 1
a42316 1
return dev_storage + 2331;
d42331 1
a42331 1
return dev_storage + 2316;
d42346 1
a42346 1
return dev_storage + 2301;
d42361 1
a42361 1
return dev_storage + 2286;
d42376 1
a42376 1
return dev_storage + 2271;
d42391 1
a42391 1
return dev_storage + 2256;
d42406 1
a42406 1
return dev_storage + 2241;
d42421 1
a42421 1
return dev_storage + 2226;
d42436 1
a42436 1
return dev_storage + 2211;
d42451 1
a42451 1
return dev_storage + 2196;
d42466 1
a42466 1
return dev_storage + 2181;
d42481 1
a42481 1
return dev_storage + 2166;
d42496 1
a42496 1
return dev_storage + 2151;
d42511 1
a42511 1
return dev_storage + 2136;
d42526 1
a42526 1
return dev_storage + 2121;
d42541 1
a42541 1
return dev_storage + 2106;
d42556 1
a42556 1
return dev_storage + 2091;
d42571 1
a42571 1
return dev_storage + 2076;
d42586 1
a42586 1
return dev_storage + 2061;
d42601 1
a42601 1
return dev_storage + 2046;
d42616 1
a42616 1
return dev_storage + 2031;
d42631 1
a42631 1
return dev_storage + 2016;
d42655 1
a42655 1
return dev_storage + 1977;
d42670 1
a42670 1
return dev_storage + 1962;
d42685 1
a42685 1
return dev_storage + 1947;
d42700 1
a42700 1
return dev_storage + 1932;
d42715 1
a42715 1
return dev_storage + 1917;
d42730 1
a42730 1
return dev_storage + 1902;
d42745 1
a42745 1
return dev_storage + 1887;
d42760 1
a42760 1
return dev_storage + 1872;
d42775 1
a42775 1
return dev_storage + 1857;
d42790 1
a42790 1
return dev_storage + 1842;
d42805 1
a42805 1
return dev_storage + 1827;
d42820 1
a42820 1
return dev_storage + 1812;
d42835 1
a42835 1
return dev_storage + 1797;
d42850 1
a42850 1
return dev_storage + 1782;
d42865 1
a42865 1
return dev_storage + 1767;
d42880 1
a42880 1
return dev_storage + 1752;
d42895 1
a42895 1
return dev_storage + 1737;
d42910 1
a42910 1
return dev_storage + 1722;
d42925 1
a42925 1
return dev_storage + 1707;
d42940 1
a42940 1
return dev_storage + 1692;
d42955 1
a42955 1
return dev_storage + 1677;
d42970 1
a42970 1
return dev_storage + 1662;
d42985 1
a42985 1
return dev_storage + 1647;
d43000 1
a43000 1
return dev_storage + 1632;
d43015 1
a43015 1
return dev_storage + 1617;
d43030 1
a43030 1
return dev_storage + 1602;
d43054 1
a43054 1
return dev_storage + 1561;
d43069 1
a43069 1
return dev_storage + 1546;
d43084 1
a43084 1
return dev_storage + 1531;
d43099 1
a43099 1
return dev_storage + 1516;
d43114 1
a43114 1
return dev_storage + 1501;
d43129 1
a43129 1
return dev_storage + 1486;
d43144 1
a43144 1
return dev_storage + 1471;
d43159 1
a43159 1
return dev_storage + 1456;
d43174 1
a43174 1
return dev_storage + 1441;
d43189 1
a43189 1
return dev_storage + 1426;
d43204 1
a43204 1
return dev_storage + 1411;
d43219 1
a43219 1
return dev_storage + 1396;
d43234 1
a43234 1
return dev_storage + 1381;
d43249 1
a43249 1
return dev_storage + 1366;
d43264 1
a43264 1
return dev_storage + 1351;
d43279 1
a43279 1
return dev_storage + 1336;
d43294 1
a43294 1
return dev_storage + 1321;
d43309 1
a43309 1
return dev_storage + 1306;
d43324 1
a43324 1
return dev_storage + 1291;
d43339 1
a43339 1
return dev_storage + 1276;
d43354 1
a43354 1
return dev_storage + 1261;
d43369 1
a43369 1
return dev_storage + 1246;
d43384 1
a43384 1
return dev_storage + 1231;
d43399 1
a43399 1
return dev_storage + 1216;
d43414 1
a43414 1
return dev_storage + 1201;
d43429 1
a43429 1
return dev_storage + 1186;
d43453 1
a43453 1
return dev_storage + 1145;
d43468 1
a43468 1
return dev_storage + 1130;
d43483 1
a43483 1
return dev_storage + 1115;
d43498 1
a43498 1
return dev_storage + 1100;
d43513 1
a43513 1
return dev_storage + 1085;
d43528 1
a43528 1
return dev_storage + 1070;
d43543 1
a43543 1
return dev_storage + 1055;
d43558 1
a43558 1
return dev_storage + 1040;
d43573 1
a43573 1
return dev_storage + 1025;
d43588 1
a43588 1
return dev_storage + 1010;
d43603 1
a43603 1
return dev_storage + 995;
d43618 1
a43618 1
return dev_storage + 980;
d43633 1
a43633 1
return dev_storage + 965;
d43648 1
a43648 1
return dev_storage + 950;
d43663 1
a43663 1
return dev_storage + 935;
d43678 1
a43678 1
return dev_storage + 920;
d43693 1
a43693 1
return dev_storage + 905;
d43708 1
a43708 1
return dev_storage + 890;
d43723 1
a43723 1
return dev_storage + 875;
d43738 1
a43738 1
return dev_storage + 860;
d43753 1
a43753 1
return dev_storage + 845;
d43768 1
a43768 1
return dev_storage + 830;
d43783 1
a43783 1
return dev_storage + 815;
d43798 1
a43798 1
return dev_storage + 800;
d43813 1
a43813 1
return dev_storage + 785;
d43828 1
a43828 1
return dev_storage + 770;
d43861 1
a43861 1
return dev_storage + 2571;
d43876 1
a43876 1
return dev_storage + 2561;
d43891 1
a43891 1
return dev_storage + 2551;
d43906 1
a43906 1
return dev_storage + 2541;
d43921 1
a43921 1
return dev_storage + 2531;
d43936 1
a43936 1
return dev_storage + 2521;
d43960 1
a43960 1
return dev_storage + 226;
d43975 1
a43975 1
return dev_storage + 216;
d43990 1
a43990 1
return dev_storage + 206;
d44113 1
a44113 1
return dev_storage + 2360;
d44128 1
a44128 1
return dev_storage + 2345;
d44143 1
a44143 1
return dev_storage + 2330;
d44158 1
a44158 1
return dev_storage + 2315;
d44173 1
a44173 1
return dev_storage + 2300;
d44188 1
a44188 1
return dev_storage + 2285;
d44203 1
a44203 1
return dev_storage + 2270;
d44218 1
a44218 1
return dev_storage + 2255;
d44233 1
a44233 1
return dev_storage + 2240;
d44248 1
a44248 1
return dev_storage + 2225;
d44263 1
a44263 1
return dev_storage + 2210;
d44278 1
a44278 1
return dev_storage + 2195;
d44293 1
a44293 1
return dev_storage + 2180;
d44308 1
a44308 1
return dev_storage + 2165;
d44323 1
a44323 1
return dev_storage + 2150;
d44338 1
a44338 1
return dev_storage + 2135;
d44353 1
a44353 1
return dev_storage + 2120;
d44368 1
a44368 1
return dev_storage + 2105;
d44383 1
a44383 1
return dev_storage + 2090;
d44398 1
a44398 1
return dev_storage + 2075;
d44413 1
a44413 1
return dev_storage + 2060;
d44428 1
a44428 1
return dev_storage + 2045;
d44443 1
a44443 1
return dev_storage + 2030;
d44458 1
a44458 1
return dev_storage + 2015;
d44482 1
a44482 1
return dev_storage + 1976;
d44497 1
a44497 1
return dev_storage + 1961;
d44512 1
a44512 1
return dev_storage + 1946;
d44527 1
a44527 1
return dev_storage + 1931;
d44542 1
a44542 1
return dev_storage + 1916;
d44557 1
a44557 1
return dev_storage + 1901;
d44572 1
a44572 1
return dev_storage + 1886;
d44587 1
a44587 1
return dev_storage + 1871;
d44602 1
a44602 1
return dev_storage + 1856;
d44617 1
a44617 1
return dev_storage + 1841;
d44632 1
a44632 1
return dev_storage + 1826;
d44647 1
a44647 1
return dev_storage + 1811;
d44662 1
a44662 1
return dev_storage + 1796;
d44677 1
a44677 1
return dev_storage + 1781;
d44692 1
a44692 1
return dev_storage + 1766;
d44707 1
a44707 1
return dev_storage + 1751;
d44722 1
a44722 1
return dev_storage + 1736;
d44737 1
a44737 1
return dev_storage + 1721;
d44752 1
a44752 1
return dev_storage + 1706;
d44767 1
a44767 1
return dev_storage + 1691;
d44782 1
a44782 1
return dev_storage + 1676;
d44797 1
a44797 1
return dev_storage + 1661;
d44812 1
a44812 1
return dev_storage + 1646;
d44827 1
a44827 1
return dev_storage + 1631;
d44842 1
a44842 1
return dev_storage + 1616;
d44857 1
a44857 1
return dev_storage + 1601;
d44881 1
a44881 1
return dev_storage + 1560;
d44896 1
a44896 1
return dev_storage + 1545;
d44911 1
a44911 1
return dev_storage + 1530;
d44926 1
a44926 1
return dev_storage + 1515;
d44941 1
a44941 1
return dev_storage + 1500;
d44956 1
a44956 1
return dev_storage + 1485;
d44971 1
a44971 1
return dev_storage + 1470;
d44986 1
a44986 1
return dev_storage + 1455;
d45001 1
a45001 1
return dev_storage + 1440;
d45016 1
a45016 1
return dev_storage + 1425;
d45031 1
a45031 1
return dev_storage + 1410;
d45046 1
a45046 1
return dev_storage + 1395;
d45061 1
a45061 1
return dev_storage + 1380;
d45076 1
a45076 1
return dev_storage + 1365;
d45091 1
a45091 1
return dev_storage + 1350;
d45106 1
a45106 1
return dev_storage + 1335;
d45121 1
a45121 1
return dev_storage + 1320;
d45136 1
a45136 1
return dev_storage + 1305;
d45151 1
a45151 1
return dev_storage + 1290;
d45166 1
a45166 1
return dev_storage + 1275;
d45181 1
a45181 1
return dev_storage + 1260;
d45196 1
a45196 1
return dev_storage + 1245;
d45211 1
a45211 1
return dev_storage + 1230;
d45226 1
a45226 1
return dev_storage + 1215;
d45241 1
a45241 1
return dev_storage + 1200;
d45256 1
a45256 1
return dev_storage + 1185;
d45280 1
a45280 1
return dev_storage + 1144;
d45295 1
a45295 1
return dev_storage + 1129;
d45310 1
a45310 1
return dev_storage + 1114;
d45325 1
a45325 1
return dev_storage + 1099;
d45340 1
a45340 1
return dev_storage + 1084;
d45355 1
a45355 1
return dev_storage + 1069;
d45370 1
a45370 1
return dev_storage + 1054;
d45385 1
a45385 1
return dev_storage + 1039;
d45400 1
a45400 1
return dev_storage + 1024;
d45415 1
a45415 1
return dev_storage + 1009;
d45430 1
a45430 1
return dev_storage + 994;
d45445 1
a45445 1
return dev_storage + 979;
d45460 1
a45460 1
return dev_storage + 964;
d45475 1
a45475 1
return dev_storage + 949;
d45490 1
a45490 1
return dev_storage + 934;
d45505 1
a45505 1
return dev_storage + 919;
d45520 1
a45520 1
return dev_storage + 904;
d45535 1
a45535 1
return dev_storage + 889;
d45550 1
a45550 1
return dev_storage + 874;
d45565 1
a45565 1
return dev_storage + 859;
d45580 1
a45580 1
return dev_storage + 844;
d45595 1
a45595 1
return dev_storage + 829;
d45610 1
a45610 1
return dev_storage + 814;
d45625 1
a45625 1
return dev_storage + 799;
d45640 1
a45640 1
return dev_storage + 784;
d45655 1
a45655 1
return dev_storage + 769;
d45691 1
a45691 1
return dev_storage + 2576;
d45706 1
a45706 1
return dev_storage + 2575;
@


1.48
log
@	* devices.in: Fix native name of /dev/kmem.
	* devices.cc: Regenerate.
	* dtable.cc (fh_alloc): Don't forget FH_KMEM.
	* fhandler_mem.cc (fhandler_dev_mem::open): Set errno to EACCES rather
	than ENOENT on systems not granting access to physical memory from
	user space.
@
text
@d73 1
a73 1
  int devn = *const_cast<device *> (&dev);
d45848 1
a45848 1
  _dev_t devn = FHDEV (major, minor);
d45864 1
a45864 1
device::parse (_dev_t dev)
@


1.48.2.1
log
@	* include/cygwin/stat.h (struct __stat64): Drop entirely in favor of
	struct stat.  Accommodate throughout Cygwin.
	* include/cygwin/types.h: Throughout, drop current, internal types
	used since Cygwin 1.5 with the base type they have been used for.
	Throughout, define types based on bitsize-specific types where
	appropriate.  Accommodate throughout Cygwin.
	* include/sys/cygwin.h: Drop __uid32_t and __gid32_t in favor of
	uid_t and gid_t.  Define uid/gid types based on bitsize-specific types.
	(struct external_pinfo): Accommodate above change.
	* cygtls.h (struct _local_storage): Drop unused members grp and
	namearray,
	* tlsoffsets.h: Regenerate.
	* devices.h (_dev_t): Drop definition.  Use dev_t throughout instead.
	* devices.cc: Regenerate.

	Probably temporary patch to drop unneeded functionality on x86_64:
	* fcntl.cc (_fcntl): Alias to fcntl64 on x86_64.
	* glob.cc (CYGWIN_gl_stat): Simplify on x86_64.
	* grp.cc (grp32togrp16): Don't define on x86_64.
	(getgrgid): Alias to getgrgid32 on x86_64.
	(getgrnam): Alias to getgrnam32 on x86_64.
	(getgrent): Alias to getgrent32 on x86_64.
	(getgroups): Alias to getgroups32 on x86_64.
	(initgroups): Alias to initgroups32 on x86_64.
	(setgroups): Alias to setgroups32 on x86_64.
	* mmap.cc (mmap): Alias to mmap64 on x86_64.
	* passwd.cc (getpwuid): Alias to getpwuid32 on x86_64.
	(getpwuid_r): Alias to getpwuid_r32 on x86_64.
	(getpwduid): Don't define on x86_64.
	* syscalls.cc (lseek): Alias to lseek64 on x86_64.
	(_lseek): Alias to lseek64 on x86_64.
	(chown): Alias to chown32 on x86_64.
	(lchown): Alias to lchown32 on x86_64.
	(fchown): Alias to fchown32 on x86_64.
	(stat64_to_stat32): Don't define on x86_64.
	(fstat): Alias to fstat64 on x86_64.
	(_fstat_r): Alias to _fstat64_r on x86_64.
	(stat): Alias to stat64 on x86_64.
	(_stat_r): Alias to _stat64_r on x86_64.
	(lstat): Alias to lstat64 on x86_64.
	(ftruncate): Alias to ftruncate64 on x86_64.
	(truncate): Alias to truncate64 on x86_64.
	(seteuid): Alias to seteuid32 on x86_64.
	(setuid): Alias to setuid32 on x86_64.
	(setreuid): Alias to setreuid32 on x86_64.
	(setegid): Alias to setegid32 on x86_64.
	(setgid): Alias to setgid32 on x86_64.
	(setregid): Alias to setregid32 on x86_64.
	* uinfo.cc (getuid): Alias to getuid32 on x86_64.
	(getgid): Alias to getgid32 on x86_64.
	(geteuid): Alias to geteuid32 on x86_64.
	(getegid): Alias to getegid32 on x86_64.
	* winsup.h (ILLEGAL_UID16): Don't define on x86_64.
	(ILLEGAL_GID16): Ditto.
	(uid16touid32): Don't declare on x86_64.
	(gid16togid32): Don't declare on x86_64.
@
text
@d45848 1
a45848 1
  dev_t devn = FHDEV (major, minor);
d45864 1
a45864 1
device::parse (dev_t dev)
@


1.48.2.2
log
@	Avoid various type ambiguity problems showing up in the 64 bit case:
	* cygheap.h (cygheap_user::set_sid): Convert to void.
	(cygheap_user::set_saved_sid): Ditto.
	* devices.h (struct device): Drop operator int& and DWORD& entirely.
	Throughout, use dev_t or fh_devices instead.
	* devices.cc: Regenerate.
	* fhandler.h (class fhandler_base): Convert _refcnt member to LONG.
	(fhandler_base::inc_refcnt): Return LONG.
	(fhandler_base::dec_refcnt): Ditto.
	(fhandler_base::get_major): Return _major_t.
	(fhandler_base::get_minor): Return _minor_t.
	(fhandler_base::get_unit): Delete.  Throughout, use get_minor instead
	of get_unit.
	(fhandler_socket::get_socket): Use SOCKET rather than int.  Only define
	if __INSIDE_CYGWIN_NET__ is defined.
	(fhandler_pty_slave::get_unit): Drop declaration.
	* fhandler_procnet.cc: Include Windows headers early.
	* fhandler_socket.cc: Ditto.
	* fhandler_tty.cc (fhandler_pty_slave::get_unit): Remove.
	* path.h (path_conv::get_device): Rename from get_devn and change return
	type to dev_t.  Accommodate throughout.
	(path_conv::get_unitn): Remove unused method.
	* pinfo.h (class pinfo): Drop operator== for int case.
	(pinfo::operator!): Define.
	* poll.cc: Don't define __INSIDE_CYGWIN_NET__.
	* syscalls.cc (getpgid): Replace use of pinfo::operator== with
	pinfo::operator!.
	* tty.h (tty_min::setntty): Convert 2nd parameter to _minor_t.
	* tty.h (tty_min::getntty): Change return type to dev_t.
	(tty_min::get_minor): Rename from get_unit.  Change return type to
	_minor_t.
@
text
@d73 1
a73 1
  fh_devices devn = *const_cast<device *> (&dev);
@


1.47
log
@wincap.h: Rename assitant to assistant throughout.  wincap.cc: Ditto.
* devices.in (exists_console): Use fhandler_console::exists () rather than raw
test.
* devices.cc: Regenerate.
* fhandler.h (fhandler_console::exists): Define new function.
* fhandler_console.cc (fhandler_console::need_invisible): Use
fhandler_console::exists () rather than raw test.
* spawn.cc: Rename assitant to assistant throughout.
(child_info_spawn::worker): Simplify test for when to start a non-Cygwin
process in its own process group.  Just do it whenever we start a non-Cygwin
process.
@
text
@d247 1
a247 1
  {"/dev/kmem", BRACK(FH_KMEM), "/dev/mem", exists, S_IFCHR, true},
@


1.46
log
@* devices.in (exists_console): Allow /dev/con{sole,in,out} to be referenced
they exist.
* devices.cc: Regenerate.
* fhandler_console.cc (fhandler_console::set_unit): Ditto.
@
text
@d9 2
d12 1
d79 1
a79 1
      return !!GetConsoleCP ();
@


1.45
log
@* devices.h (lives_in_dev): New field.
(dev_on_fs): Set bit size.
(is_dev_resident): Define new method.
* devices.in: Use different method for labelling requested name for dev
storage: prefix it with a ='.  Use an actual ':' to denote an internal device.
(exists_console): Avoid repeated test.
(exists_ntdev_silent): Rename from the less-descriptive exists_ntdevs.
(dev_dev_storage): Delete unneeded define.
* gendevices: Add a flag to each line denoting whether the device lives in /dev
space.
(generate): Handle special ":" case here for internal devices.  Parse
=something_dev as requiring a storage location.  Tack the rest of the line back
onto the reformulated "$rest".
* devices.cc: Regenerate.
@
text
@a69 2
  if (!iscons_dev (myself->ctty))
    return false;
d76 1
a76 1
      return true;
d79 1
a79 1
      return myself->ctty == devn;
@


1.44
log
@* devices.h (device::exists_func): Redefine field.
(device::dev_on_fs): Remove unneeded bit field.  Just make a normal boolean.
(device::exists): Redefine function.
* devices.in: Move previous functions earlier since they are now only defined
static.  Rename some functions due to an as-yet unresolved bug in gendevices.
Rename posix part of internal-only devices with a double-slash.  gendevices
will eventuall translate that to a ":".
(device::parse): Rework to use dev pointer and dev_storage_end.
* devices.cc: Regenerate.
* gendevices: Translate "// to ": after shilka processing.
@
text
@d62 1
a62 1
exists_ntdevs (const device& dev)
d78 1
a78 1
      return iscons_dev (myself->ctty);
d80 1
a112 3
const device dev_dev_storage =
  {"/dev", {FH_DEV}, "/dev", exists};

d143 2644
a2786 2644
  {"/dev", BRACK(FH_DEV), "/dev", exists, S_IFDIR},
  {"/dev/clipboard", BRACK(FH_CLIPBOARD), "/dev/clipboard", exists, S_IFCHR},
  {"/dev/com1", BRACK(FHDEV(DEV_SERIAL_MAJOR, 0)), "\\??\\COM1", exists_ntdevs, S_IFCHR},
  {"/dev/com2", BRACK(FHDEV(DEV_SERIAL_MAJOR, 1)), "\\??\\COM2", exists_ntdevs, S_IFCHR},
  {"/dev/com3", BRACK(FHDEV(DEV_SERIAL_MAJOR, 2)), "\\??\\COM3", exists_ntdevs, S_IFCHR},
  {"/dev/com4", BRACK(FHDEV(DEV_SERIAL_MAJOR, 3)), "\\??\\COM4", exists_ntdevs, S_IFCHR},
  {"/dev/com5", BRACK(FHDEV(DEV_SERIAL_MAJOR, 4)), "\\??\\COM5", exists_ntdevs, S_IFCHR},
  {"/dev/com6", BRACK(FHDEV(DEV_SERIAL_MAJOR, 5)), "\\??\\COM6", exists_ntdevs, S_IFCHR},
  {"/dev/com7", BRACK(FHDEV(DEV_SERIAL_MAJOR, 6)), "\\??\\COM7", exists_ntdevs, S_IFCHR},
  {"/dev/com8", BRACK(FHDEV(DEV_SERIAL_MAJOR, 7)), "\\??\\COM8", exists_ntdevs, S_IFCHR},
  {"/dev/com9", BRACK(FHDEV(DEV_SERIAL_MAJOR, 8)), "\\??\\COM9", exists_ntdevs, S_IFCHR},
  {"/dev/com10", BRACK(FHDEV(DEV_SERIAL_MAJOR, 9)), "\\??\\COM10", exists_ntdevs, S_IFCHR},
  {"/dev/com11", BRACK(FHDEV(DEV_SERIAL_MAJOR, 10)), "\\??\\COM11", exists_ntdevs, S_IFCHR},
  {"/dev/com12", BRACK(FHDEV(DEV_SERIAL_MAJOR, 11)), "\\??\\COM12", exists_ntdevs, S_IFCHR},
  {"/dev/com13", BRACK(FHDEV(DEV_SERIAL_MAJOR, 12)), "\\??\\COM13", exists_ntdevs, S_IFCHR},
  {"/dev/com14", BRACK(FHDEV(DEV_SERIAL_MAJOR, 13)), "\\??\\COM14", exists_ntdevs, S_IFCHR},
  {"/dev/com15", BRACK(FHDEV(DEV_SERIAL_MAJOR, 14)), "\\??\\COM15", exists_ntdevs, S_IFCHR},
  {"/dev/com16", BRACK(FHDEV(DEV_SERIAL_MAJOR, 15)), "\\??\\COM16", exists_ntdevs, S_IFCHR},
  {"/dev/conin", BRACK(FH_CONIN), "/dev/conin", exists_console, S_IFCHR},
  {"/dev/conout", BRACK(FH_CONOUT), "/dev/conout", exists_console, S_IFCHR},
  {"/dev/cons0", BRACK(FHDEV(DEV_CONS_MAJOR, 0)), "/dev/cons0", exists_console, S_IFCHR},
  {"/dev/cons1", BRACK(FHDEV(DEV_CONS_MAJOR, 1)), "/dev/cons1", exists_console, S_IFCHR},
  {"/dev/cons2", BRACK(FHDEV(DEV_CONS_MAJOR, 2)), "/dev/cons2", exists_console, S_IFCHR},
  {"/dev/cons3", BRACK(FHDEV(DEV_CONS_MAJOR, 3)), "/dev/cons3", exists_console, S_IFCHR},
  {"/dev/cons4", BRACK(FHDEV(DEV_CONS_MAJOR, 4)), "/dev/cons4", exists_console, S_IFCHR},
  {"/dev/cons5", BRACK(FHDEV(DEV_CONS_MAJOR, 5)), "/dev/cons5", exists_console, S_IFCHR},
  {"/dev/cons6", BRACK(FHDEV(DEV_CONS_MAJOR, 6)), "/dev/cons6", exists_console, S_IFCHR},
  {"/dev/cons7", BRACK(FHDEV(DEV_CONS_MAJOR, 7)), "/dev/cons7", exists_console, S_IFCHR},
  {"/dev/cons8", BRACK(FHDEV(DEV_CONS_MAJOR, 8)), "/dev/cons8", exists_console, S_IFCHR},
  {"/dev/cons9", BRACK(FHDEV(DEV_CONS_MAJOR, 9)), "/dev/cons9", exists_console, S_IFCHR},
  {"/dev/cons10", BRACK(FHDEV(DEV_CONS_MAJOR, 10)), "/dev/cons10", exists_console, S_IFCHR},
  {"/dev/cons11", BRACK(FHDEV(DEV_CONS_MAJOR, 11)), "/dev/cons11", exists_console, S_IFCHR},
  {"/dev/cons12", BRACK(FHDEV(DEV_CONS_MAJOR, 12)), "/dev/cons12", exists_console, S_IFCHR},
  {"/dev/cons13", BRACK(FHDEV(DEV_CONS_MAJOR, 13)), "/dev/cons13", exists_console, S_IFCHR},
  {"/dev/cons14", BRACK(FHDEV(DEV_CONS_MAJOR, 14)), "/dev/cons14", exists_console, S_IFCHR},
  {"/dev/cons15", BRACK(FHDEV(DEV_CONS_MAJOR, 15)), "/dev/cons15", exists_console, S_IFCHR},
  {"/dev/cons16", BRACK(FHDEV(DEV_CONS_MAJOR, 16)), "/dev/cons16", exists_console, S_IFCHR},
  {"/dev/cons17", BRACK(FHDEV(DEV_CONS_MAJOR, 17)), "/dev/cons17", exists_console, S_IFCHR},
  {"/dev/cons18", BRACK(FHDEV(DEV_CONS_MAJOR, 18)), "/dev/cons18", exists_console, S_IFCHR},
  {"/dev/cons19", BRACK(FHDEV(DEV_CONS_MAJOR, 19)), "/dev/cons19", exists_console, S_IFCHR},
  {"/dev/cons20", BRACK(FHDEV(DEV_CONS_MAJOR, 20)), "/dev/cons20", exists_console, S_IFCHR},
  {"/dev/cons21", BRACK(FHDEV(DEV_CONS_MAJOR, 21)), "/dev/cons21", exists_console, S_IFCHR},
  {"/dev/cons22", BRACK(FHDEV(DEV_CONS_MAJOR, 22)), "/dev/cons22", exists_console, S_IFCHR},
  {"/dev/cons23", BRACK(FHDEV(DEV_CONS_MAJOR, 23)), "/dev/cons23", exists_console, S_IFCHR},
  {"/dev/cons24", BRACK(FHDEV(DEV_CONS_MAJOR, 24)), "/dev/cons24", exists_console, S_IFCHR},
  {"/dev/cons25", BRACK(FHDEV(DEV_CONS_MAJOR, 25)), "/dev/cons25", exists_console, S_IFCHR},
  {"/dev/cons26", BRACK(FHDEV(DEV_CONS_MAJOR, 26)), "/dev/cons26", exists_console, S_IFCHR},
  {"/dev/cons27", BRACK(FHDEV(DEV_CONS_MAJOR, 27)), "/dev/cons27", exists_console, S_IFCHR},
  {"/dev/cons28", BRACK(FHDEV(DEV_CONS_MAJOR, 28)), "/dev/cons28", exists_console, S_IFCHR},
  {"/dev/cons29", BRACK(FHDEV(DEV_CONS_MAJOR, 29)), "/dev/cons29", exists_console, S_IFCHR},
  {"/dev/cons30", BRACK(FHDEV(DEV_CONS_MAJOR, 30)), "/dev/cons30", exists_console, S_IFCHR},
  {"/dev/cons31", BRACK(FHDEV(DEV_CONS_MAJOR, 31)), "/dev/cons31", exists_console, S_IFCHR},
  {"/dev/cons32", BRACK(FHDEV(DEV_CONS_MAJOR, 32)), "/dev/cons32", exists_console, S_IFCHR},
  {"/dev/cons33", BRACK(FHDEV(DEV_CONS_MAJOR, 33)), "/dev/cons33", exists_console, S_IFCHR},
  {"/dev/cons34", BRACK(FHDEV(DEV_CONS_MAJOR, 34)), "/dev/cons34", exists_console, S_IFCHR},
  {"/dev/cons35", BRACK(FHDEV(DEV_CONS_MAJOR, 35)), "/dev/cons35", exists_console, S_IFCHR},
  {"/dev/cons36", BRACK(FHDEV(DEV_CONS_MAJOR, 36)), "/dev/cons36", exists_console, S_IFCHR},
  {"/dev/cons37", BRACK(FHDEV(DEV_CONS_MAJOR, 37)), "/dev/cons37", exists_console, S_IFCHR},
  {"/dev/cons38", BRACK(FHDEV(DEV_CONS_MAJOR, 38)), "/dev/cons38", exists_console, S_IFCHR},
  {"/dev/cons39", BRACK(FHDEV(DEV_CONS_MAJOR, 39)), "/dev/cons39", exists_console, S_IFCHR},
  {"/dev/cons40", BRACK(FHDEV(DEV_CONS_MAJOR, 40)), "/dev/cons40", exists_console, S_IFCHR},
  {"/dev/cons41", BRACK(FHDEV(DEV_CONS_MAJOR, 41)), "/dev/cons41", exists_console, S_IFCHR},
  {"/dev/cons42", BRACK(FHDEV(DEV_CONS_MAJOR, 42)), "/dev/cons42", exists_console, S_IFCHR},
  {"/dev/cons43", BRACK(FHDEV(DEV_CONS_MAJOR, 43)), "/dev/cons43", exists_console, S_IFCHR},
  {"/dev/cons44", BRACK(FHDEV(DEV_CONS_MAJOR, 44)), "/dev/cons44", exists_console, S_IFCHR},
  {"/dev/cons45", BRACK(FHDEV(DEV_CONS_MAJOR, 45)), "/dev/cons45", exists_console, S_IFCHR},
  {"/dev/cons46", BRACK(FHDEV(DEV_CONS_MAJOR, 46)), "/dev/cons46", exists_console, S_IFCHR},
  {"/dev/cons47", BRACK(FHDEV(DEV_CONS_MAJOR, 47)), "/dev/cons47", exists_console, S_IFCHR},
  {"/dev/cons48", BRACK(FHDEV(DEV_CONS_MAJOR, 48)), "/dev/cons48", exists_console, S_IFCHR},
  {"/dev/cons49", BRACK(FHDEV(DEV_CONS_MAJOR, 49)), "/dev/cons49", exists_console, S_IFCHR},
  {"/dev/cons50", BRACK(FHDEV(DEV_CONS_MAJOR, 50)), "/dev/cons50", exists_console, S_IFCHR},
  {"/dev/cons51", BRACK(FHDEV(DEV_CONS_MAJOR, 51)), "/dev/cons51", exists_console, S_IFCHR},
  {"/dev/cons52", BRACK(FHDEV(DEV_CONS_MAJOR, 52)), "/dev/cons52", exists_console, S_IFCHR},
  {"/dev/cons53", BRACK(FHDEV(DEV_CONS_MAJOR, 53)), "/dev/cons53", exists_console, S_IFCHR},
  {"/dev/cons54", BRACK(FHDEV(DEV_CONS_MAJOR, 54)), "/dev/cons54", exists_console, S_IFCHR},
  {"/dev/cons55", BRACK(FHDEV(DEV_CONS_MAJOR, 55)), "/dev/cons55", exists_console, S_IFCHR},
  {"/dev/cons56", BRACK(FHDEV(DEV_CONS_MAJOR, 56)), "/dev/cons56", exists_console, S_IFCHR},
  {"/dev/cons57", BRACK(FHDEV(DEV_CONS_MAJOR, 57)), "/dev/cons57", exists_console, S_IFCHR},
  {"/dev/cons58", BRACK(FHDEV(DEV_CONS_MAJOR, 58)), "/dev/cons58", exists_console, S_IFCHR},
  {"/dev/cons59", BRACK(FHDEV(DEV_CONS_MAJOR, 59)), "/dev/cons59", exists_console, S_IFCHR},
  {"/dev/cons60", BRACK(FHDEV(DEV_CONS_MAJOR, 60)), "/dev/cons60", exists_console, S_IFCHR},
  {"/dev/cons61", BRACK(FHDEV(DEV_CONS_MAJOR, 61)), "/dev/cons61", exists_console, S_IFCHR},
  {"/dev/cons62", BRACK(FHDEV(DEV_CONS_MAJOR, 62)), "/dev/cons62", exists_console, S_IFCHR},
  {"/dev/cons63", BRACK(FHDEV(DEV_CONS_MAJOR, 63)), "/dev/cons63", exists_console, S_IFCHR},
  {"/dev/console", BRACK(FH_CONSOLE), "/dev/console", exists_console, S_IFCHR},
  {"/dev/dsp", BRACK(FH_OSS_DSP), "/dev/dsp", exists, S_IFCHR},
  {"/dev/fd0", BRACK(FHDEV(DEV_FLOPPY_MAJOR, 0)), "\\Device\\Floppy0", exists_ntdev, S_IFBLK},
  {"/dev/fd1", BRACK(FHDEV(DEV_FLOPPY_MAJOR, 1)), "\\Device\\Floppy1", exists_ntdev, S_IFBLK},
  {"/dev/fd2", BRACK(FHDEV(DEV_FLOPPY_MAJOR, 2)), "\\Device\\Floppy2", exists_ntdev, S_IFBLK},
  {"/dev/fd3", BRACK(FHDEV(DEV_FLOPPY_MAJOR, 3)), "\\Device\\Floppy3", exists_ntdev, S_IFBLK},
  {"/dev/fd4", BRACK(FHDEV(DEV_FLOPPY_MAJOR, 4)), "\\Device\\Floppy4", exists_ntdev, S_IFBLK},
  {"/dev/fd5", BRACK(FHDEV(DEV_FLOPPY_MAJOR, 5)), "\\Device\\Floppy5", exists_ntdev, S_IFBLK},
  {"/dev/fd6", BRACK(FHDEV(DEV_FLOPPY_MAJOR, 6)), "\\Device\\Floppy6", exists_ntdev, S_IFBLK},
  {"/dev/fd7", BRACK(FHDEV(DEV_FLOPPY_MAJOR, 7)), "\\Device\\Floppy7", exists_ntdev, S_IFBLK},
  {"/dev/fd8", BRACK(FHDEV(DEV_FLOPPY_MAJOR, 8)), "\\Device\\Floppy8", exists_ntdev, S_IFBLK},
  {"/dev/fd9", BRACK(FHDEV(DEV_FLOPPY_MAJOR, 9)), "\\Device\\Floppy9", exists_ntdev, S_IFBLK},
  {"/dev/fd10", BRACK(FHDEV(DEV_FLOPPY_MAJOR, 10)), "\\Device\\Floppy10", exists_ntdev, S_IFBLK},
  {"/dev/fd11", BRACK(FHDEV(DEV_FLOPPY_MAJOR, 11)), "\\Device\\Floppy11", exists_ntdev, S_IFBLK},
  {"/dev/fd12", BRACK(FHDEV(DEV_FLOPPY_MAJOR, 12)), "\\Device\\Floppy12", exists_ntdev, S_IFBLK},
  {"/dev/fd13", BRACK(FHDEV(DEV_FLOPPY_MAJOR, 13)), "\\Device\\Floppy13", exists_ntdev, S_IFBLK},
  {"/dev/fd14", BRACK(FHDEV(DEV_FLOPPY_MAJOR, 14)), "\\Device\\Floppy14", exists_ntdev, S_IFBLK},
  {"/dev/fd15", BRACK(FHDEV(DEV_FLOPPY_MAJOR, 15)), "\\Device\\Floppy15", exists_ntdev, S_IFBLK},
  {"/dev/full", BRACK(FH_FULL), "/dev/full", exists, S_IFCHR},
  {"/dev/kmem", BRACK(FH_KMEM), "/dev/mem", exists, S_IFCHR},
  {"/dev/kmsg", BRACK(FH_KMSG), "\\Device\\MailSlot\\cygwin\\dev\\kmsg", exists_ntdev, S_IFCHR},
  {"/dev/mem", BRACK(FH_MEM), "/dev/mem", exists, S_IFCHR},
  {"/dev/nst0", BRACK(FHDEV(DEV_TAPE_MAJOR, 128)), "\\Device\\Tape0", exists_ntdev, S_IFBLK},
  {"/dev/nst1", BRACK(FHDEV(DEV_TAPE_MAJOR, 129)), "\\Device\\Tape1", exists_ntdev, S_IFBLK},
  {"/dev/nst2", BRACK(FHDEV(DEV_TAPE_MAJOR, 130)), "\\Device\\Tape2", exists_ntdev, S_IFBLK},
  {"/dev/nst3", BRACK(FHDEV(DEV_TAPE_MAJOR, 131)), "\\Device\\Tape3", exists_ntdev, S_IFBLK},
  {"/dev/nst4", BRACK(FHDEV(DEV_TAPE_MAJOR, 132)), "\\Device\\Tape4", exists_ntdev, S_IFBLK},
  {"/dev/nst5", BRACK(FHDEV(DEV_TAPE_MAJOR, 133)), "\\Device\\Tape5", exists_ntdev, S_IFBLK},
  {"/dev/nst6", BRACK(FHDEV(DEV_TAPE_MAJOR, 134)), "\\Device\\Tape6", exists_ntdev, S_IFBLK},
  {"/dev/nst7", BRACK(FHDEV(DEV_TAPE_MAJOR, 135)), "\\Device\\Tape7", exists_ntdev, S_IFBLK},
  {"/dev/nst8", BRACK(FHDEV(DEV_TAPE_MAJOR, 136)), "\\Device\\Tape8", exists_ntdev, S_IFBLK},
  {"/dev/nst9", BRACK(FHDEV(DEV_TAPE_MAJOR, 137)), "\\Device\\Tape9", exists_ntdev, S_IFBLK},
  {"/dev/nst10", BRACK(FHDEV(DEV_TAPE_MAJOR, 138)), "\\Device\\Tape10", exists_ntdev, S_IFBLK},
  {"/dev/nst11", BRACK(FHDEV(DEV_TAPE_MAJOR, 139)), "\\Device\\Tape11", exists_ntdev, S_IFBLK},
  {"/dev/nst12", BRACK(FHDEV(DEV_TAPE_MAJOR, 140)), "\\Device\\Tape12", exists_ntdev, S_IFBLK},
  {"/dev/nst13", BRACK(FHDEV(DEV_TAPE_MAJOR, 141)), "\\Device\\Tape13", exists_ntdev, S_IFBLK},
  {"/dev/nst14", BRACK(FHDEV(DEV_TAPE_MAJOR, 142)), "\\Device\\Tape14", exists_ntdev, S_IFBLK},
  {"/dev/nst15", BRACK(FHDEV(DEV_TAPE_MAJOR, 143)), "\\Device\\Tape15", exists_ntdev, S_IFBLK},
  {"/dev/nst16", BRACK(FHDEV(DEV_TAPE_MAJOR, 144)), "\\Device\\Tape16", exists_ntdev, S_IFBLK},
  {"/dev/nst17", BRACK(FHDEV(DEV_TAPE_MAJOR, 145)), "\\Device\\Tape17", exists_ntdev, S_IFBLK},
  {"/dev/nst18", BRACK(FHDEV(DEV_TAPE_MAJOR, 146)), "\\Device\\Tape18", exists_ntdev, S_IFBLK},
  {"/dev/nst19", BRACK(FHDEV(DEV_TAPE_MAJOR, 147)), "\\Device\\Tape19", exists_ntdev, S_IFBLK},
  {"/dev/nst20", BRACK(FHDEV(DEV_TAPE_MAJOR, 148)), "\\Device\\Tape20", exists_ntdev, S_IFBLK},
  {"/dev/nst21", BRACK(FHDEV(DEV_TAPE_MAJOR, 149)), "\\Device\\Tape21", exists_ntdev, S_IFBLK},
  {"/dev/nst22", BRACK(FHDEV(DEV_TAPE_MAJOR, 150)), "\\Device\\Tape22", exists_ntdev, S_IFBLK},
  {"/dev/nst23", BRACK(FHDEV(DEV_TAPE_MAJOR, 151)), "\\Device\\Tape23", exists_ntdev, S_IFBLK},
  {"/dev/nst24", BRACK(FHDEV(DEV_TAPE_MAJOR, 152)), "\\Device\\Tape24", exists_ntdev, S_IFBLK},
  {"/dev/nst25", BRACK(FHDEV(DEV_TAPE_MAJOR, 153)), "\\Device\\Tape25", exists_ntdev, S_IFBLK},
  {"/dev/nst26", BRACK(FHDEV(DEV_TAPE_MAJOR, 154)), "\\Device\\Tape26", exists_ntdev, S_IFBLK},
  {"/dev/nst27", BRACK(FHDEV(DEV_TAPE_MAJOR, 155)), "\\Device\\Tape27", exists_ntdev, S_IFBLK},
  {"/dev/nst28", BRACK(FHDEV(DEV_TAPE_MAJOR, 156)), "\\Device\\Tape28", exists_ntdev, S_IFBLK},
  {"/dev/nst29", BRACK(FHDEV(DEV_TAPE_MAJOR, 157)), "\\Device\\Tape29", exists_ntdev, S_IFBLK},
  {"/dev/nst30", BRACK(FHDEV(DEV_TAPE_MAJOR, 158)), "\\Device\\Tape30", exists_ntdev, S_IFBLK},
  {"/dev/nst31", BRACK(FHDEV(DEV_TAPE_MAJOR, 159)), "\\Device\\Tape31", exists_ntdev, S_IFBLK},
  {"/dev/nst32", BRACK(FHDEV(DEV_TAPE_MAJOR, 160)), "\\Device\\Tape32", exists_ntdev, S_IFBLK},
  {"/dev/nst33", BRACK(FHDEV(DEV_TAPE_MAJOR, 161)), "\\Device\\Tape33", exists_ntdev, S_IFBLK},
  {"/dev/nst34", BRACK(FHDEV(DEV_TAPE_MAJOR, 162)), "\\Device\\Tape34", exists_ntdev, S_IFBLK},
  {"/dev/nst35", BRACK(FHDEV(DEV_TAPE_MAJOR, 163)), "\\Device\\Tape35", exists_ntdev, S_IFBLK},
  {"/dev/nst36", BRACK(FHDEV(DEV_TAPE_MAJOR, 164)), "\\Device\\Tape36", exists_ntdev, S_IFBLK},
  {"/dev/nst37", BRACK(FHDEV(DEV_TAPE_MAJOR, 165)), "\\Device\\Tape37", exists_ntdev, S_IFBLK},
  {"/dev/nst38", BRACK(FHDEV(DEV_TAPE_MAJOR, 166)), "\\Device\\Tape38", exists_ntdev, S_IFBLK},
  {"/dev/nst39", BRACK(FHDEV(DEV_TAPE_MAJOR, 167)), "\\Device\\Tape39", exists_ntdev, S_IFBLK},
  {"/dev/nst40", BRACK(FHDEV(DEV_TAPE_MAJOR, 168)), "\\Device\\Tape40", exists_ntdev, S_IFBLK},
  {"/dev/nst41", BRACK(FHDEV(DEV_TAPE_MAJOR, 169)), "\\Device\\Tape41", exists_ntdev, S_IFBLK},
  {"/dev/nst42", BRACK(FHDEV(DEV_TAPE_MAJOR, 170)), "\\Device\\Tape42", exists_ntdev, S_IFBLK},
  {"/dev/nst43", BRACK(FHDEV(DEV_TAPE_MAJOR, 171)), "\\Device\\Tape43", exists_ntdev, S_IFBLK},
  {"/dev/nst44", BRACK(FHDEV(DEV_TAPE_MAJOR, 172)), "\\Device\\Tape44", exists_ntdev, S_IFBLK},
  {"/dev/nst45", BRACK(FHDEV(DEV_TAPE_MAJOR, 173)), "\\Device\\Tape45", exists_ntdev, S_IFBLK},
  {"/dev/nst46", BRACK(FHDEV(DEV_TAPE_MAJOR, 174)), "\\Device\\Tape46", exists_ntdev, S_IFBLK},
  {"/dev/nst47", BRACK(FHDEV(DEV_TAPE_MAJOR, 175)), "\\Device\\Tape47", exists_ntdev, S_IFBLK},
  {"/dev/nst48", BRACK(FHDEV(DEV_TAPE_MAJOR, 176)), "\\Device\\Tape48", exists_ntdev, S_IFBLK},
  {"/dev/nst49", BRACK(FHDEV(DEV_TAPE_MAJOR, 177)), "\\Device\\Tape49", exists_ntdev, S_IFBLK},
  {"/dev/nst50", BRACK(FHDEV(DEV_TAPE_MAJOR, 178)), "\\Device\\Tape50", exists_ntdev, S_IFBLK},
  {"/dev/nst51", BRACK(FHDEV(DEV_TAPE_MAJOR, 179)), "\\Device\\Tape51", exists_ntdev, S_IFBLK},
  {"/dev/nst52", BRACK(FHDEV(DEV_TAPE_MAJOR, 180)), "\\Device\\Tape52", exists_ntdev, S_IFBLK},
  {"/dev/nst53", BRACK(FHDEV(DEV_TAPE_MAJOR, 181)), "\\Device\\Tape53", exists_ntdev, S_IFBLK},
  {"/dev/nst54", BRACK(FHDEV(DEV_TAPE_MAJOR, 182)), "\\Device\\Tape54", exists_ntdev, S_IFBLK},
  {"/dev/nst55", BRACK(FHDEV(DEV_TAPE_MAJOR, 183)), "\\Device\\Tape55", exists_ntdev, S_IFBLK},
  {"/dev/nst56", BRACK(FHDEV(DEV_TAPE_MAJOR, 184)), "\\Device\\Tape56", exists_ntdev, S_IFBLK},
  {"/dev/nst57", BRACK(FHDEV(DEV_TAPE_MAJOR, 185)), "\\Device\\Tape57", exists_ntdev, S_IFBLK},
  {"/dev/nst58", BRACK(FHDEV(DEV_TAPE_MAJOR, 186)), "\\Device\\Tape58", exists_ntdev, S_IFBLK},
  {"/dev/nst59", BRACK(FHDEV(DEV_TAPE_MAJOR, 187)), "\\Device\\Tape59", exists_ntdev, S_IFBLK},
  {"/dev/nst60", BRACK(FHDEV(DEV_TAPE_MAJOR, 188)), "\\Device\\Tape60", exists_ntdev, S_IFBLK},
  {"/dev/nst61", BRACK(FHDEV(DEV_TAPE_MAJOR, 189)), "\\Device\\Tape61", exists_ntdev, S_IFBLK},
  {"/dev/nst62", BRACK(FHDEV(DEV_TAPE_MAJOR, 190)), "\\Device\\Tape62", exists_ntdev, S_IFBLK},
  {"/dev/nst63", BRACK(FHDEV(DEV_TAPE_MAJOR, 191)), "\\Device\\Tape63", exists_ntdev, S_IFBLK},
  {"/dev/nst64", BRACK(FHDEV(DEV_TAPE_MAJOR, 192)), "\\Device\\Tape64", exists_ntdev, S_IFBLK},
  {"/dev/nst65", BRACK(FHDEV(DEV_TAPE_MAJOR, 193)), "\\Device\\Tape65", exists_ntdev, S_IFBLK},
  {"/dev/nst66", BRACK(FHDEV(DEV_TAPE_MAJOR, 194)), "\\Device\\Tape66", exists_ntdev, S_IFBLK},
  {"/dev/nst67", BRACK(FHDEV(DEV_TAPE_MAJOR, 195)), "\\Device\\Tape67", exists_ntdev, S_IFBLK},
  {"/dev/nst68", BRACK(FHDEV(DEV_TAPE_MAJOR, 196)), "\\Device\\Tape68", exists_ntdev, S_IFBLK},
  {"/dev/nst69", BRACK(FHDEV(DEV_TAPE_MAJOR, 197)), "\\Device\\Tape69", exists_ntdev, S_IFBLK},
  {"/dev/nst70", BRACK(FHDEV(DEV_TAPE_MAJOR, 198)), "\\Device\\Tape70", exists_ntdev, S_IFBLK},
  {"/dev/nst71", BRACK(FHDEV(DEV_TAPE_MAJOR, 199)), "\\Device\\Tape71", exists_ntdev, S_IFBLK},
  {"/dev/nst72", BRACK(FHDEV(DEV_TAPE_MAJOR, 200)), "\\Device\\Tape72", exists_ntdev, S_IFBLK},
  {"/dev/nst73", BRACK(FHDEV(DEV_TAPE_MAJOR, 201)), "\\Device\\Tape73", exists_ntdev, S_IFBLK},
  {"/dev/nst74", BRACK(FHDEV(DEV_TAPE_MAJOR, 202)), "\\Device\\Tape74", exists_ntdev, S_IFBLK},
  {"/dev/nst75", BRACK(FHDEV(DEV_TAPE_MAJOR, 203)), "\\Device\\Tape75", exists_ntdev, S_IFBLK},
  {"/dev/nst76", BRACK(FHDEV(DEV_TAPE_MAJOR, 204)), "\\Device\\Tape76", exists_ntdev, S_IFBLK},
  {"/dev/nst77", BRACK(FHDEV(DEV_TAPE_MAJOR, 205)), "\\Device\\Tape77", exists_ntdev, S_IFBLK},
  {"/dev/nst78", BRACK(FHDEV(DEV_TAPE_MAJOR, 206)), "\\Device\\Tape78", exists_ntdev, S_IFBLK},
  {"/dev/nst79", BRACK(FHDEV(DEV_TAPE_MAJOR, 207)), "\\Device\\Tape79", exists_ntdev, S_IFBLK},
  {"/dev/nst80", BRACK(FHDEV(DEV_TAPE_MAJOR, 208)), "\\Device\\Tape80", exists_ntdev, S_IFBLK},
  {"/dev/nst81", BRACK(FHDEV(DEV_TAPE_MAJOR, 209)), "\\Device\\Tape81", exists_ntdev, S_IFBLK},
  {"/dev/nst82", BRACK(FHDEV(DEV_TAPE_MAJOR, 210)), "\\Device\\Tape82", exists_ntdev, S_IFBLK},
  {"/dev/nst83", BRACK(FHDEV(DEV_TAPE_MAJOR, 211)), "\\Device\\Tape83", exists_ntdev, S_IFBLK},
  {"/dev/nst84", BRACK(FHDEV(DEV_TAPE_MAJOR, 212)), "\\Device\\Tape84", exists_ntdev, S_IFBLK},
  {"/dev/nst85", BRACK(FHDEV(DEV_TAPE_MAJOR, 213)), "\\Device\\Tape85", exists_ntdev, S_IFBLK},
  {"/dev/nst86", BRACK(FHDEV(DEV_TAPE_MAJOR, 214)), "\\Device\\Tape86", exists_ntdev, S_IFBLK},
  {"/dev/nst87", BRACK(FHDEV(DEV_TAPE_MAJOR, 215)), "\\Device\\Tape87", exists_ntdev, S_IFBLK},
  {"/dev/nst88", BRACK(FHDEV(DEV_TAPE_MAJOR, 216)), "\\Device\\Tape88", exists_ntdev, S_IFBLK},
  {"/dev/nst89", BRACK(FHDEV(DEV_TAPE_MAJOR, 217)), "\\Device\\Tape89", exists_ntdev, S_IFBLK},
  {"/dev/nst90", BRACK(FHDEV(DEV_TAPE_MAJOR, 218)), "\\Device\\Tape90", exists_ntdev, S_IFBLK},
  {"/dev/nst91", BRACK(FHDEV(DEV_TAPE_MAJOR, 219)), "\\Device\\Tape91", exists_ntdev, S_IFBLK},
  {"/dev/nst92", BRACK(FHDEV(DEV_TAPE_MAJOR, 220)), "\\Device\\Tape92", exists_ntdev, S_IFBLK},
  {"/dev/nst93", BRACK(FHDEV(DEV_TAPE_MAJOR, 221)), "\\Device\\Tape93", exists_ntdev, S_IFBLK},
  {"/dev/nst94", BRACK(FHDEV(DEV_TAPE_MAJOR, 222)), "\\Device\\Tape94", exists_ntdev, S_IFBLK},
  {"/dev/nst95", BRACK(FHDEV(DEV_TAPE_MAJOR, 223)), "\\Device\\Tape95", exists_ntdev, S_IFBLK},
  {"/dev/nst96", BRACK(FHDEV(DEV_TAPE_MAJOR, 224)), "\\Device\\Tape96", exists_ntdev, S_IFBLK},
  {"/dev/nst97", BRACK(FHDEV(DEV_TAPE_MAJOR, 225)), "\\Device\\Tape97", exists_ntdev, S_IFBLK},
  {"/dev/nst98", BRACK(FHDEV(DEV_TAPE_MAJOR, 226)), "\\Device\\Tape98", exists_ntdev, S_IFBLK},
  {"/dev/nst99", BRACK(FHDEV(DEV_TAPE_MAJOR, 227)), "\\Device\\Tape99", exists_ntdev, S_IFBLK},
  {"/dev/nst100", BRACK(FHDEV(DEV_TAPE_MAJOR, 228)), "\\Device\\Tape100", exists_ntdev, S_IFBLK},
  {"/dev/nst101", BRACK(FHDEV(DEV_TAPE_MAJOR, 229)), "\\Device\\Tape101", exists_ntdev, S_IFBLK},
  {"/dev/nst102", BRACK(FHDEV(DEV_TAPE_MAJOR, 230)), "\\Device\\Tape102", exists_ntdev, S_IFBLK},
  {"/dev/nst103", BRACK(FHDEV(DEV_TAPE_MAJOR, 231)), "\\Device\\Tape103", exists_ntdev, S_IFBLK},
  {"/dev/nst104", BRACK(FHDEV(DEV_TAPE_MAJOR, 232)), "\\Device\\Tape104", exists_ntdev, S_IFBLK},
  {"/dev/nst105", BRACK(FHDEV(DEV_TAPE_MAJOR, 233)), "\\Device\\Tape105", exists_ntdev, S_IFBLK},
  {"/dev/nst106", BRACK(FHDEV(DEV_TAPE_MAJOR, 234)), "\\Device\\Tape106", exists_ntdev, S_IFBLK},
  {"/dev/nst107", BRACK(FHDEV(DEV_TAPE_MAJOR, 235)), "\\Device\\Tape107", exists_ntdev, S_IFBLK},
  {"/dev/nst108", BRACK(FHDEV(DEV_TAPE_MAJOR, 236)), "\\Device\\Tape108", exists_ntdev, S_IFBLK},
  {"/dev/nst109", BRACK(FHDEV(DEV_TAPE_MAJOR, 237)), "\\Device\\Tape109", exists_ntdev, S_IFBLK},
  {"/dev/nst110", BRACK(FHDEV(DEV_TAPE_MAJOR, 238)), "\\Device\\Tape110", exists_ntdev, S_IFBLK},
  {"/dev/nst111", BRACK(FHDEV(DEV_TAPE_MAJOR, 239)), "\\Device\\Tape111", exists_ntdev, S_IFBLK},
  {"/dev/nst112", BRACK(FHDEV(DEV_TAPE_MAJOR, 240)), "\\Device\\Tape112", exists_ntdev, S_IFBLK},
  {"/dev/nst113", BRACK(FHDEV(DEV_TAPE_MAJOR, 241)), "\\Device\\Tape113", exists_ntdev, S_IFBLK},
  {"/dev/nst114", BRACK(FHDEV(DEV_TAPE_MAJOR, 242)), "\\Device\\Tape114", exists_ntdev, S_IFBLK},
  {"/dev/nst115", BRACK(FHDEV(DEV_TAPE_MAJOR, 243)), "\\Device\\Tape115", exists_ntdev, S_IFBLK},
  {"/dev/nst116", BRACK(FHDEV(DEV_TAPE_MAJOR, 244)), "\\Device\\Tape116", exists_ntdev, S_IFBLK},
  {"/dev/nst117", BRACK(FHDEV(DEV_TAPE_MAJOR, 245)), "\\Device\\Tape117", exists_ntdev, S_IFBLK},
  {"/dev/nst118", BRACK(FHDEV(DEV_TAPE_MAJOR, 246)), "\\Device\\Tape118", exists_ntdev, S_IFBLK},
  {"/dev/nst119", BRACK(FHDEV(DEV_TAPE_MAJOR, 247)), "\\Device\\Tape119", exists_ntdev, S_IFBLK},
  {"/dev/nst120", BRACK(FHDEV(DEV_TAPE_MAJOR, 248)), "\\Device\\Tape120", exists_ntdev, S_IFBLK},
  {"/dev/nst121", BRACK(FHDEV(DEV_TAPE_MAJOR, 249)), "\\Device\\Tape121", exists_ntdev, S_IFBLK},
  {"/dev/nst122", BRACK(FHDEV(DEV_TAPE_MAJOR, 250)), "\\Device\\Tape122", exists_ntdev, S_IFBLK},
  {"/dev/nst123", BRACK(FHDEV(DEV_TAPE_MAJOR, 251)), "\\Device\\Tape123", exists_ntdev, S_IFBLK},
  {"/dev/nst124", BRACK(FHDEV(DEV_TAPE_MAJOR, 252)), "\\Device\\Tape124", exists_ntdev, S_IFBLK},
  {"/dev/nst125", BRACK(FHDEV(DEV_TAPE_MAJOR, 253)), "\\Device\\Tape125", exists_ntdev, S_IFBLK},
  {"/dev/nst126", BRACK(FHDEV(DEV_TAPE_MAJOR, 254)), "\\Device\\Tape126", exists_ntdev, S_IFBLK},
  {"/dev/nst127", BRACK(FHDEV(DEV_TAPE_MAJOR, 255)), "\\Device\\Tape127", exists_ntdev, S_IFBLK},
  {"/dev/null", BRACK(FH_NULL), "\\Device\\Null", exists_ntdev, S_IFCHR},
  {"/dev/port", BRACK(FH_PORT), "/dev/port", exists, S_IFCHR},
  {"/dev/ptmx", BRACK(FH_PTMX), "/dev/ptmx", exists, S_IFCHR},
  {"/dev/pty0", BRACK(FHDEV(DEV_PTYS_MAJOR, 0)), "/dev/pty0", exists_pty, S_IFCHR},
  {"/dev/pty1", BRACK(FHDEV(DEV_PTYS_MAJOR, 1)), "/dev/pty1", exists_pty, S_IFCHR},
  {"/dev/pty2", BRACK(FHDEV(DEV_PTYS_MAJOR, 2)), "/dev/pty2", exists_pty, S_IFCHR},
  {"/dev/pty3", BRACK(FHDEV(DEV_PTYS_MAJOR, 3)), "/dev/pty3", exists_pty, S_IFCHR},
  {"/dev/pty4", BRACK(FHDEV(DEV_PTYS_MAJOR, 4)), "/dev/pty4", exists_pty, S_IFCHR},
  {"/dev/pty5", BRACK(FHDEV(DEV_PTYS_MAJOR, 5)), "/dev/pty5", exists_pty, S_IFCHR},
  {"/dev/pty6", BRACK(FHDEV(DEV_PTYS_MAJOR, 6)), "/dev/pty6", exists_pty, S_IFCHR},
  {"/dev/pty7", BRACK(FHDEV(DEV_PTYS_MAJOR, 7)), "/dev/pty7", exists_pty, S_IFCHR},
  {"/dev/pty8", BRACK(FHDEV(DEV_PTYS_MAJOR, 8)), "/dev/pty8", exists_pty, S_IFCHR},
  {"/dev/pty9", BRACK(FHDEV(DEV_PTYS_MAJOR, 9)), "/dev/pty9", exists_pty, S_IFCHR},
  {"/dev/pty10", BRACK(FHDEV(DEV_PTYS_MAJOR, 10)), "/dev/pty10", exists_pty, S_IFCHR},
  {"/dev/pty11", BRACK(FHDEV(DEV_PTYS_MAJOR, 11)), "/dev/pty11", exists_pty, S_IFCHR},
  {"/dev/pty12", BRACK(FHDEV(DEV_PTYS_MAJOR, 12)), "/dev/pty12", exists_pty, S_IFCHR},
  {"/dev/pty13", BRACK(FHDEV(DEV_PTYS_MAJOR, 13)), "/dev/pty13", exists_pty, S_IFCHR},
  {"/dev/pty14", BRACK(FHDEV(DEV_PTYS_MAJOR, 14)), "/dev/pty14", exists_pty, S_IFCHR},
  {"/dev/pty15", BRACK(FHDEV(DEV_PTYS_MAJOR, 15)), "/dev/pty15", exists_pty, S_IFCHR},
  {"/dev/pty16", BRACK(FHDEV(DEV_PTYS_MAJOR, 16)), "/dev/pty16", exists_pty, S_IFCHR},
  {"/dev/pty17", BRACK(FHDEV(DEV_PTYS_MAJOR, 17)), "/dev/pty17", exists_pty, S_IFCHR},
  {"/dev/pty18", BRACK(FHDEV(DEV_PTYS_MAJOR, 18)), "/dev/pty18", exists_pty, S_IFCHR},
  {"/dev/pty19", BRACK(FHDEV(DEV_PTYS_MAJOR, 19)), "/dev/pty19", exists_pty, S_IFCHR},
  {"/dev/pty20", BRACK(FHDEV(DEV_PTYS_MAJOR, 20)), "/dev/pty20", exists_pty, S_IFCHR},
  {"/dev/pty21", BRACK(FHDEV(DEV_PTYS_MAJOR, 21)), "/dev/pty21", exists_pty, S_IFCHR},
  {"/dev/pty22", BRACK(FHDEV(DEV_PTYS_MAJOR, 22)), "/dev/pty22", exists_pty, S_IFCHR},
  {"/dev/pty23", BRACK(FHDEV(DEV_PTYS_MAJOR, 23)), "/dev/pty23", exists_pty, S_IFCHR},
  {"/dev/pty24", BRACK(FHDEV(DEV_PTYS_MAJOR, 24)), "/dev/pty24", exists_pty, S_IFCHR},
  {"/dev/pty25", BRACK(FHDEV(DEV_PTYS_MAJOR, 25)), "/dev/pty25", exists_pty, S_IFCHR},
  {"/dev/pty26", BRACK(FHDEV(DEV_PTYS_MAJOR, 26)), "/dev/pty26", exists_pty, S_IFCHR},
  {"/dev/pty27", BRACK(FHDEV(DEV_PTYS_MAJOR, 27)), "/dev/pty27", exists_pty, S_IFCHR},
  {"/dev/pty28", BRACK(FHDEV(DEV_PTYS_MAJOR, 28)), "/dev/pty28", exists_pty, S_IFCHR},
  {"/dev/pty29", BRACK(FHDEV(DEV_PTYS_MAJOR, 29)), "/dev/pty29", exists_pty, S_IFCHR},
  {"/dev/pty30", BRACK(FHDEV(DEV_PTYS_MAJOR, 30)), "/dev/pty30", exists_pty, S_IFCHR},
  {"/dev/pty31", BRACK(FHDEV(DEV_PTYS_MAJOR, 31)), "/dev/pty31", exists_pty, S_IFCHR},
  {"/dev/pty32", BRACK(FHDEV(DEV_PTYS_MAJOR, 32)), "/dev/pty32", exists_pty, S_IFCHR},
  {"/dev/pty33", BRACK(FHDEV(DEV_PTYS_MAJOR, 33)), "/dev/pty33", exists_pty, S_IFCHR},
  {"/dev/pty34", BRACK(FHDEV(DEV_PTYS_MAJOR, 34)), "/dev/pty34", exists_pty, S_IFCHR},
  {"/dev/pty35", BRACK(FHDEV(DEV_PTYS_MAJOR, 35)), "/dev/pty35", exists_pty, S_IFCHR},
  {"/dev/pty36", BRACK(FHDEV(DEV_PTYS_MAJOR, 36)), "/dev/pty36", exists_pty, S_IFCHR},
  {"/dev/pty37", BRACK(FHDEV(DEV_PTYS_MAJOR, 37)), "/dev/pty37", exists_pty, S_IFCHR},
  {"/dev/pty38", BRACK(FHDEV(DEV_PTYS_MAJOR, 38)), "/dev/pty38", exists_pty, S_IFCHR},
  {"/dev/pty39", BRACK(FHDEV(DEV_PTYS_MAJOR, 39)), "/dev/pty39", exists_pty, S_IFCHR},
  {"/dev/pty40", BRACK(FHDEV(DEV_PTYS_MAJOR, 40)), "/dev/pty40", exists_pty, S_IFCHR},
  {"/dev/pty41", BRACK(FHDEV(DEV_PTYS_MAJOR, 41)), "/dev/pty41", exists_pty, S_IFCHR},
  {"/dev/pty42", BRACK(FHDEV(DEV_PTYS_MAJOR, 42)), "/dev/pty42", exists_pty, S_IFCHR},
  {"/dev/pty43", BRACK(FHDEV(DEV_PTYS_MAJOR, 43)), "/dev/pty43", exists_pty, S_IFCHR},
  {"/dev/pty44", BRACK(FHDEV(DEV_PTYS_MAJOR, 44)), "/dev/pty44", exists_pty, S_IFCHR},
  {"/dev/pty45", BRACK(FHDEV(DEV_PTYS_MAJOR, 45)), "/dev/pty45", exists_pty, S_IFCHR},
  {"/dev/pty46", BRACK(FHDEV(DEV_PTYS_MAJOR, 46)), "/dev/pty46", exists_pty, S_IFCHR},
  {"/dev/pty47", BRACK(FHDEV(DEV_PTYS_MAJOR, 47)), "/dev/pty47", exists_pty, S_IFCHR},
  {"/dev/pty48", BRACK(FHDEV(DEV_PTYS_MAJOR, 48)), "/dev/pty48", exists_pty, S_IFCHR},
  {"/dev/pty49", BRACK(FHDEV(DEV_PTYS_MAJOR, 49)), "/dev/pty49", exists_pty, S_IFCHR},
  {"/dev/pty50", BRACK(FHDEV(DEV_PTYS_MAJOR, 50)), "/dev/pty50", exists_pty, S_IFCHR},
  {"/dev/pty51", BRACK(FHDEV(DEV_PTYS_MAJOR, 51)), "/dev/pty51", exists_pty, S_IFCHR},
  {"/dev/pty52", BRACK(FHDEV(DEV_PTYS_MAJOR, 52)), "/dev/pty52", exists_pty, S_IFCHR},
  {"/dev/pty53", BRACK(FHDEV(DEV_PTYS_MAJOR, 53)), "/dev/pty53", exists_pty, S_IFCHR},
  {"/dev/pty54", BRACK(FHDEV(DEV_PTYS_MAJOR, 54)), "/dev/pty54", exists_pty, S_IFCHR},
  {"/dev/pty55", BRACK(FHDEV(DEV_PTYS_MAJOR, 55)), "/dev/pty55", exists_pty, S_IFCHR},
  {"/dev/pty56", BRACK(FHDEV(DEV_PTYS_MAJOR, 56)), "/dev/pty56", exists_pty, S_IFCHR},
  {"/dev/pty57", BRACK(FHDEV(DEV_PTYS_MAJOR, 57)), "/dev/pty57", exists_pty, S_IFCHR},
  {"/dev/pty58", BRACK(FHDEV(DEV_PTYS_MAJOR, 58)), "/dev/pty58", exists_pty, S_IFCHR},
  {"/dev/pty59", BRACK(FHDEV(DEV_PTYS_MAJOR, 59)), "/dev/pty59", exists_pty, S_IFCHR},
  {"/dev/pty60", BRACK(FHDEV(DEV_PTYS_MAJOR, 60)), "/dev/pty60", exists_pty, S_IFCHR},
  {"/dev/pty61", BRACK(FHDEV(DEV_PTYS_MAJOR, 61)), "/dev/pty61", exists_pty, S_IFCHR},
  {"/dev/pty62", BRACK(FHDEV(DEV_PTYS_MAJOR, 62)), "/dev/pty62", exists_pty, S_IFCHR},
  {"/dev/pty63", BRACK(FHDEV(DEV_PTYS_MAJOR, 63)), "/dev/pty63", exists_pty, S_IFCHR},
  {"/dev/random", BRACK(FH_RANDOM), "/dev/random", exists, S_IFCHR},
  {"/dev/scd0", BRACK(FHDEV(DEV_CDROM_MAJOR, 0)), "\\Device\\CdRom0", exists_ntdev, S_IFBLK},
  {"/dev/scd1", BRACK(FHDEV(DEV_CDROM_MAJOR, 1)), "\\Device\\CdRom1", exists_ntdev, S_IFBLK},
  {"/dev/scd2", BRACK(FHDEV(DEV_CDROM_MAJOR, 2)), "\\Device\\CdRom2", exists_ntdev, S_IFBLK},
  {"/dev/scd3", BRACK(FHDEV(DEV_CDROM_MAJOR, 3)), "\\Device\\CdRom3", exists_ntdev, S_IFBLK},
  {"/dev/scd4", BRACK(FHDEV(DEV_CDROM_MAJOR, 4)), "\\Device\\CdRom4", exists_ntdev, S_IFBLK},
  {"/dev/scd5", BRACK(FHDEV(DEV_CDROM_MAJOR, 5)), "\\Device\\CdRom5", exists_ntdev, S_IFBLK},
  {"/dev/scd6", BRACK(FHDEV(DEV_CDROM_MAJOR, 6)), "\\Device\\CdRom6", exists_ntdev, S_IFBLK},
  {"/dev/scd7", BRACK(FHDEV(DEV_CDROM_MAJOR, 7)), "\\Device\\CdRom7", exists_ntdev, S_IFBLK},
  {"/dev/scd8", BRACK(FHDEV(DEV_CDROM_MAJOR, 8)), "\\Device\\CdRom8", exists_ntdev, S_IFBLK},
  {"/dev/scd9", BRACK(FHDEV(DEV_CDROM_MAJOR, 9)), "\\Device\\CdRom9", exists_ntdev, S_IFBLK},
  {"/dev/scd10", BRACK(FHDEV(DEV_CDROM_MAJOR, 10)), "\\Device\\CdRom10", exists_ntdev, S_IFBLK},
  {"/dev/scd11", BRACK(FHDEV(DEV_CDROM_MAJOR, 11)), "\\Device\\CdRom11", exists_ntdev, S_IFBLK},
  {"/dev/scd12", BRACK(FHDEV(DEV_CDROM_MAJOR, 12)), "\\Device\\CdRom12", exists_ntdev, S_IFBLK},
  {"/dev/scd13", BRACK(FHDEV(DEV_CDROM_MAJOR, 13)), "\\Device\\CdRom13", exists_ntdev, S_IFBLK},
  {"/dev/scd14", BRACK(FHDEV(DEV_CDROM_MAJOR, 14)), "\\Device\\CdRom14", exists_ntdev, S_IFBLK},
  {"/dev/scd15", BRACK(FHDEV(DEV_CDROM_MAJOR, 15)), "\\Device\\CdRom15", exists_ntdev, S_IFBLK},
  {"/dev/sda", BRACK(FH_SDA), "\\Device\\Harddisk0\\Partition0", exists_ntdev, S_IFBLK},
  {"/dev/sdb", BRACK(FH_SDB), "\\Device\\Harddisk1\\Partition0", exists_ntdev, S_IFBLK},
  {"/dev/sdc", BRACK(FH_SDC), "\\Device\\Harddisk2\\Partition0", exists_ntdev, S_IFBLK},
  {"/dev/sdd", BRACK(FH_SDD), "\\Device\\Harddisk3\\Partition0", exists_ntdev, S_IFBLK},
  {"/dev/sde", BRACK(FH_SDE), "\\Device\\Harddisk4\\Partition0", exists_ntdev, S_IFBLK},
  {"/dev/sdf", BRACK(FH_SDF), "\\Device\\Harddisk5\\Partition0", exists_ntdev, S_IFBLK},
  {"/dev/sdg", BRACK(FH_SDG), "\\Device\\Harddisk6\\Partition0", exists_ntdev, S_IFBLK},
  {"/dev/sdh", BRACK(FH_SDH), "\\Device\\Harddisk7\\Partition0", exists_ntdev, S_IFBLK},
  {"/dev/sdi", BRACK(FH_SDI), "\\Device\\Harddisk8\\Partition0", exists_ntdev, S_IFBLK},
  {"/dev/sdj", BRACK(FH_SDJ), "\\Device\\Harddisk9\\Partition0", exists_ntdev, S_IFBLK},
  {"/dev/sdk", BRACK(FH_SDK), "\\Device\\Harddisk10\\Partition0", exists_ntdev, S_IFBLK},
  {"/dev/sdl", BRACK(FH_SDL), "\\Device\\Harddisk11\\Partition0", exists_ntdev, S_IFBLK},
  {"/dev/sdm", BRACK(FH_SDM), "\\Device\\Harddisk12\\Partition0", exists_ntdev, S_IFBLK},
  {"/dev/sdn", BRACK(FH_SDN), "\\Device\\Harddisk13\\Partition0", exists_ntdev, S_IFBLK},
  {"/dev/sdo", BRACK(FH_SDO), "\\Device\\Harddisk14\\Partition0", exists_ntdev, S_IFBLK},
  {"/dev/sdp", BRACK(FH_SDP), "\\Device\\Harddisk15\\Partition0", exists_ntdev, S_IFBLK},
  {"/dev/sdq", BRACK(FH_SDQ), "\\Device\\Harddisk16\\Partition0", exists_ntdev, S_IFBLK},
  {"/dev/sdr", BRACK(FH_SDR), "\\Device\\Harddisk17\\Partition0", exists_ntdev, S_IFBLK},
  {"/dev/sds", BRACK(FH_SDS), "\\Device\\Harddisk18\\Partition0", exists_ntdev, S_IFBLK},
  {"/dev/sdt", BRACK(FH_SDT), "\\Device\\Harddisk19\\Partition0", exists_ntdev, S_IFBLK},
  {"/dev/sdu", BRACK(FH_SDU), "\\Device\\Harddisk20\\Partition0", exists_ntdev, S_IFBLK},
  {"/dev/sdv", BRACK(FH_SDV), "\\Device\\Harddisk21\\Partition0", exists_ntdev, S_IFBLK},
  {"/dev/sdw", BRACK(FH_SDW), "\\Device\\Harddisk22\\Partition0", exists_ntdev, S_IFBLK},
  {"/dev/sdx", BRACK(FH_SDX), "\\Device\\Harddisk23\\Partition0", exists_ntdev, S_IFBLK},
  {"/dev/sdy", BRACK(FH_SDY), "\\Device\\Harddisk24\\Partition0", exists_ntdev, S_IFBLK},
  {"/dev/sdz", BRACK(FH_SDZ), "\\Device\\Harddisk25\\Partition0", exists_ntdev, S_IFBLK},
  {"/dev/sda1", BRACK(FH_SDA | 1), "\\Device\\Harddisk0\\Partition1", exists_ntdev, S_IFBLK},
  {"/dev/sda2", BRACK(FH_SDA | 2), "\\Device\\Harddisk0\\Partition2", exists_ntdev, S_IFBLK},
  {"/dev/sda3", BRACK(FH_SDA | 3), "\\Device\\Harddisk0\\Partition3", exists_ntdev, S_IFBLK},
  {"/dev/sda4", BRACK(FH_SDA | 4), "\\Device\\Harddisk0\\Partition4", exists_ntdev, S_IFBLK},
  {"/dev/sda5", BRACK(FH_SDA | 5), "\\Device\\Harddisk0\\Partition5", exists_ntdev, S_IFBLK},
  {"/dev/sda6", BRACK(FH_SDA | 6), "\\Device\\Harddisk0\\Partition6", exists_ntdev, S_IFBLK},
  {"/dev/sda7", BRACK(FH_SDA | 7), "\\Device\\Harddisk0\\Partition7", exists_ntdev, S_IFBLK},
  {"/dev/sda8", BRACK(FH_SDA | 8), "\\Device\\Harddisk0\\Partition8", exists_ntdev, S_IFBLK},
  {"/dev/sda9", BRACK(FH_SDA | 9), "\\Device\\Harddisk0\\Partition9", exists_ntdev, S_IFBLK},
  {"/dev/sda10", BRACK(FH_SDA | 10), "\\Device\\Harddisk0\\Partition10", exists_ntdev, S_IFBLK},
  {"/dev/sda11", BRACK(FH_SDA | 11), "\\Device\\Harddisk0\\Partition11", exists_ntdev, S_IFBLK},
  {"/dev/sda12", BRACK(FH_SDA | 12), "\\Device\\Harddisk0\\Partition12", exists_ntdev, S_IFBLK},
  {"/dev/sda13", BRACK(FH_SDA | 13), "\\Device\\Harddisk0\\Partition13", exists_ntdev, S_IFBLK},
  {"/dev/sda14", BRACK(FH_SDA | 14), "\\Device\\Harddisk0\\Partition14", exists_ntdev, S_IFBLK},
  {"/dev/sda15", BRACK(FH_SDA | 15), "\\Device\\Harddisk0\\Partition15", exists_ntdev, S_IFBLK},
  {"/dev/sdb1", BRACK(FH_SDB | 1), "\\Device\\Harddisk1\\Partition1", exists_ntdev, S_IFBLK},
  {"/dev/sdb2", BRACK(FH_SDB | 2), "\\Device\\Harddisk1\\Partition2", exists_ntdev, S_IFBLK},
  {"/dev/sdb3", BRACK(FH_SDB | 3), "\\Device\\Harddisk1\\Partition3", exists_ntdev, S_IFBLK},
  {"/dev/sdb4", BRACK(FH_SDB | 4), "\\Device\\Harddisk1\\Partition4", exists_ntdev, S_IFBLK},
  {"/dev/sdb5", BRACK(FH_SDB | 5), "\\Device\\Harddisk1\\Partition5", exists_ntdev, S_IFBLK},
  {"/dev/sdb6", BRACK(FH_SDB | 6), "\\Device\\Harddisk1\\Partition6", exists_ntdev, S_IFBLK},
  {"/dev/sdb7", BRACK(FH_SDB | 7), "\\Device\\Harddisk1\\Partition7", exists_ntdev, S_IFBLK},
  {"/dev/sdb8", BRACK(FH_SDB | 8), "\\Device\\Harddisk1\\Partition8", exists_ntdev, S_IFBLK},
  {"/dev/sdb9", BRACK(FH_SDB | 9), "\\Device\\Harddisk1\\Partition9", exists_ntdev, S_IFBLK},
  {"/dev/sdb10", BRACK(FH_SDB | 10), "\\Device\\Harddisk1\\Partition10", exists_ntdev, S_IFBLK},
  {"/dev/sdb11", BRACK(FH_SDB | 11), "\\Device\\Harddisk1\\Partition11", exists_ntdev, S_IFBLK},
  {"/dev/sdb12", BRACK(FH_SDB | 12), "\\Device\\Harddisk1\\Partition12", exists_ntdev, S_IFBLK},
  {"/dev/sdb13", BRACK(FH_SDB | 13), "\\Device\\Harddisk1\\Partition13", exists_ntdev, S_IFBLK},
  {"/dev/sdb14", BRACK(FH_SDB | 14), "\\Device\\Harddisk1\\Partition14", exists_ntdev, S_IFBLK},
  {"/dev/sdb15", BRACK(FH_SDB | 15), "\\Device\\Harddisk1\\Partition15", exists_ntdev, S_IFBLK},
  {"/dev/sdc1", BRACK(FH_SDC | 1), "\\Device\\Harddisk2\\Partition1", exists_ntdev, S_IFBLK},
  {"/dev/sdc2", BRACK(FH_SDC | 2), "\\Device\\Harddisk2\\Partition2", exists_ntdev, S_IFBLK},
  {"/dev/sdc3", BRACK(FH_SDC | 3), "\\Device\\Harddisk2\\Partition3", exists_ntdev, S_IFBLK},
  {"/dev/sdc4", BRACK(FH_SDC | 4), "\\Device\\Harddisk2\\Partition4", exists_ntdev, S_IFBLK},
  {"/dev/sdc5", BRACK(FH_SDC | 5), "\\Device\\Harddisk2\\Partition5", exists_ntdev, S_IFBLK},
  {"/dev/sdc6", BRACK(FH_SDC | 6), "\\Device\\Harddisk2\\Partition6", exists_ntdev, S_IFBLK},
  {"/dev/sdc7", BRACK(FH_SDC | 7), "\\Device\\Harddisk2\\Partition7", exists_ntdev, S_IFBLK},
  {"/dev/sdc8", BRACK(FH_SDC | 8), "\\Device\\Harddisk2\\Partition8", exists_ntdev, S_IFBLK},
  {"/dev/sdc9", BRACK(FH_SDC | 9), "\\Device\\Harddisk2\\Partition9", exists_ntdev, S_IFBLK},
  {"/dev/sdc10", BRACK(FH_SDC | 10), "\\Device\\Harddisk2\\Partition10", exists_ntdev, S_IFBLK},
  {"/dev/sdc11", BRACK(FH_SDC | 11), "\\Device\\Harddisk2\\Partition11", exists_ntdev, S_IFBLK},
  {"/dev/sdc12", BRACK(FH_SDC | 12), "\\Device\\Harddisk2\\Partition12", exists_ntdev, S_IFBLK},
  {"/dev/sdc13", BRACK(FH_SDC | 13), "\\Device\\Harddisk2\\Partition13", exists_ntdev, S_IFBLK},
  {"/dev/sdc14", BRACK(FH_SDC | 14), "\\Device\\Harddisk2\\Partition14", exists_ntdev, S_IFBLK},
  {"/dev/sdc15", BRACK(FH_SDC | 15), "\\Device\\Harddisk2\\Partition15", exists_ntdev, S_IFBLK},
  {"/dev/sdd1", BRACK(FH_SDD | 1), "\\Device\\Harddisk3\\Partition1", exists_ntdev, S_IFBLK},
  {"/dev/sdd2", BRACK(FH_SDD | 2), "\\Device\\Harddisk3\\Partition2", exists_ntdev, S_IFBLK},
  {"/dev/sdd3", BRACK(FH_SDD | 3), "\\Device\\Harddisk3\\Partition3", exists_ntdev, S_IFBLK},
  {"/dev/sdd4", BRACK(FH_SDD | 4), "\\Device\\Harddisk3\\Partition4", exists_ntdev, S_IFBLK},
  {"/dev/sdd5", BRACK(FH_SDD | 5), "\\Device\\Harddisk3\\Partition5", exists_ntdev, S_IFBLK},
  {"/dev/sdd6", BRACK(FH_SDD | 6), "\\Device\\Harddisk3\\Partition6", exists_ntdev, S_IFBLK},
  {"/dev/sdd7", BRACK(FH_SDD | 7), "\\Device\\Harddisk3\\Partition7", exists_ntdev, S_IFBLK},
  {"/dev/sdd8", BRACK(FH_SDD | 8), "\\Device\\Harddisk3\\Partition8", exists_ntdev, S_IFBLK},
  {"/dev/sdd9", BRACK(FH_SDD | 9), "\\Device\\Harddisk3\\Partition9", exists_ntdev, S_IFBLK},
  {"/dev/sdd10", BRACK(FH_SDD | 10), "\\Device\\Harddisk3\\Partition10", exists_ntdev, S_IFBLK},
  {"/dev/sdd11", BRACK(FH_SDD | 11), "\\Device\\Harddisk3\\Partition11", exists_ntdev, S_IFBLK},
  {"/dev/sdd12", BRACK(FH_SDD | 12), "\\Device\\Harddisk3\\Partition12", exists_ntdev, S_IFBLK},
  {"/dev/sdd13", BRACK(FH_SDD | 13), "\\Device\\Harddisk3\\Partition13", exists_ntdev, S_IFBLK},
  {"/dev/sdd14", BRACK(FH_SDD | 14), "\\Device\\Harddisk3\\Partition14", exists_ntdev, S_IFBLK},
  {"/dev/sdd15", BRACK(FH_SDD | 15), "\\Device\\Harddisk3\\Partition15", exists_ntdev, S_IFBLK},
  {"/dev/sde1", BRACK(FH_SDE | 1), "\\Device\\Harddisk4\\Partition1", exists_ntdev, S_IFBLK},
  {"/dev/sde2", BRACK(FH_SDE | 2), "\\Device\\Harddisk4\\Partition2", exists_ntdev, S_IFBLK},
  {"/dev/sde3", BRACK(FH_SDE | 3), "\\Device\\Harddisk4\\Partition3", exists_ntdev, S_IFBLK},
  {"/dev/sde4", BRACK(FH_SDE | 4), "\\Device\\Harddisk4\\Partition4", exists_ntdev, S_IFBLK},
  {"/dev/sde5", BRACK(FH_SDE | 5), "\\Device\\Harddisk4\\Partition5", exists_ntdev, S_IFBLK},
  {"/dev/sde6", BRACK(FH_SDE | 6), "\\Device\\Harddisk4\\Partition6", exists_ntdev, S_IFBLK},
  {"/dev/sde7", BRACK(FH_SDE | 7), "\\Device\\Harddisk4\\Partition7", exists_ntdev, S_IFBLK},
  {"/dev/sde8", BRACK(FH_SDE | 8), "\\Device\\Harddisk4\\Partition8", exists_ntdev, S_IFBLK},
  {"/dev/sde9", BRACK(FH_SDE | 9), "\\Device\\Harddisk4\\Partition9", exists_ntdev, S_IFBLK},
  {"/dev/sde10", BRACK(FH_SDE | 10), "\\Device\\Harddisk4\\Partition10", exists_ntdev, S_IFBLK},
  {"/dev/sde11", BRACK(FH_SDE | 11), "\\Device\\Harddisk4\\Partition11", exists_ntdev, S_IFBLK},
  {"/dev/sde12", BRACK(FH_SDE | 12), "\\Device\\Harddisk4\\Partition12", exists_ntdev, S_IFBLK},
  {"/dev/sde13", BRACK(FH_SDE | 13), "\\Device\\Harddisk4\\Partition13", exists_ntdev, S_IFBLK},
  {"/dev/sde14", BRACK(FH_SDE | 14), "\\Device\\Harddisk4\\Partition14", exists_ntdev, S_IFBLK},
  {"/dev/sde15", BRACK(FH_SDE | 15), "\\Device\\Harddisk4\\Partition15", exists_ntdev, S_IFBLK},
  {"/dev/sdf1", BRACK(FH_SDF | 1), "\\Device\\Harddisk5\\Partition1", exists_ntdev, S_IFBLK},
  {"/dev/sdf2", BRACK(FH_SDF | 2), "\\Device\\Harddisk5\\Partition2", exists_ntdev, S_IFBLK},
  {"/dev/sdf3", BRACK(FH_SDF | 3), "\\Device\\Harddisk5\\Partition3", exists_ntdev, S_IFBLK},
  {"/dev/sdf4", BRACK(FH_SDF | 4), "\\Device\\Harddisk5\\Partition4", exists_ntdev, S_IFBLK},
  {"/dev/sdf5", BRACK(FH_SDF | 5), "\\Device\\Harddisk5\\Partition5", exists_ntdev, S_IFBLK},
  {"/dev/sdf6", BRACK(FH_SDF | 6), "\\Device\\Harddisk5\\Partition6", exists_ntdev, S_IFBLK},
  {"/dev/sdf7", BRACK(FH_SDF | 7), "\\Device\\Harddisk5\\Partition7", exists_ntdev, S_IFBLK},
  {"/dev/sdf8", BRACK(FH_SDF | 8), "\\Device\\Harddisk5\\Partition8", exists_ntdev, S_IFBLK},
  {"/dev/sdf9", BRACK(FH_SDF | 9), "\\Device\\Harddisk5\\Partition9", exists_ntdev, S_IFBLK},
  {"/dev/sdf10", BRACK(FH_SDF | 10), "\\Device\\Harddisk5\\Partition10", exists_ntdev, S_IFBLK},
  {"/dev/sdf11", BRACK(FH_SDF | 11), "\\Device\\Harddisk5\\Partition11", exists_ntdev, S_IFBLK},
  {"/dev/sdf12", BRACK(FH_SDF | 12), "\\Device\\Harddisk5\\Partition12", exists_ntdev, S_IFBLK},
  {"/dev/sdf13", BRACK(FH_SDF | 13), "\\Device\\Harddisk5\\Partition13", exists_ntdev, S_IFBLK},
  {"/dev/sdf14", BRACK(FH_SDF | 14), "\\Device\\Harddisk5\\Partition14", exists_ntdev, S_IFBLK},
  {"/dev/sdf15", BRACK(FH_SDF | 15), "\\Device\\Harddisk5\\Partition15", exists_ntdev, S_IFBLK},
  {"/dev/sdg1", BRACK(FH_SDG | 1), "\\Device\\Harddisk6\\Partition1", exists_ntdev, S_IFBLK},
  {"/dev/sdg2", BRACK(FH_SDG | 2), "\\Device\\Harddisk6\\Partition2", exists_ntdev, S_IFBLK},
  {"/dev/sdg3", BRACK(FH_SDG | 3), "\\Device\\Harddisk6\\Partition3", exists_ntdev, S_IFBLK},
  {"/dev/sdg4", BRACK(FH_SDG | 4), "\\Device\\Harddisk6\\Partition4", exists_ntdev, S_IFBLK},
  {"/dev/sdg5", BRACK(FH_SDG | 5), "\\Device\\Harddisk6\\Partition5", exists_ntdev, S_IFBLK},
  {"/dev/sdg6", BRACK(FH_SDG | 6), "\\Device\\Harddisk6\\Partition6", exists_ntdev, S_IFBLK},
  {"/dev/sdg7", BRACK(FH_SDG | 7), "\\Device\\Harddisk6\\Partition7", exists_ntdev, S_IFBLK},
  {"/dev/sdg8", BRACK(FH_SDG | 8), "\\Device\\Harddisk6\\Partition8", exists_ntdev, S_IFBLK},
  {"/dev/sdg9", BRACK(FH_SDG | 9), "\\Device\\Harddisk6\\Partition9", exists_ntdev, S_IFBLK},
  {"/dev/sdg10", BRACK(FH_SDG | 10), "\\Device\\Harddisk6\\Partition10", exists_ntdev, S_IFBLK},
  {"/dev/sdg11", BRACK(FH_SDG | 11), "\\Device\\Harddisk6\\Partition11", exists_ntdev, S_IFBLK},
  {"/dev/sdg12", BRACK(FH_SDG | 12), "\\Device\\Harddisk6\\Partition12", exists_ntdev, S_IFBLK},
  {"/dev/sdg13", BRACK(FH_SDG | 13), "\\Device\\Harddisk6\\Partition13", exists_ntdev, S_IFBLK},
  {"/dev/sdg14", BRACK(FH_SDG | 14), "\\Device\\Harddisk6\\Partition14", exists_ntdev, S_IFBLK},
  {"/dev/sdg15", BRACK(FH_SDG | 15), "\\Device\\Harddisk6\\Partition15", exists_ntdev, S_IFBLK},
  {"/dev/sdh1", BRACK(FH_SDH | 1), "\\Device\\Harddisk7\\Partition1", exists_ntdev, S_IFBLK},
  {"/dev/sdh2", BRACK(FH_SDH | 2), "\\Device\\Harddisk7\\Partition2", exists_ntdev, S_IFBLK},
  {"/dev/sdh3", BRACK(FH_SDH | 3), "\\Device\\Harddisk7\\Partition3", exists_ntdev, S_IFBLK},
  {"/dev/sdh4", BRACK(FH_SDH | 4), "\\Device\\Harddisk7\\Partition4", exists_ntdev, S_IFBLK},
  {"/dev/sdh5", BRACK(FH_SDH | 5), "\\Device\\Harddisk7\\Partition5", exists_ntdev, S_IFBLK},
  {"/dev/sdh6", BRACK(FH_SDH | 6), "\\Device\\Harddisk7\\Partition6", exists_ntdev, S_IFBLK},
  {"/dev/sdh7", BRACK(FH_SDH | 7), "\\Device\\Harddisk7\\Partition7", exists_ntdev, S_IFBLK},
  {"/dev/sdh8", BRACK(FH_SDH | 8), "\\Device\\Harddisk7\\Partition8", exists_ntdev, S_IFBLK},
  {"/dev/sdh9", BRACK(FH_SDH | 9), "\\Device\\Harddisk7\\Partition9", exists_ntdev, S_IFBLK},
  {"/dev/sdh10", BRACK(FH_SDH | 10), "\\Device\\Harddisk7\\Partition10", exists_ntdev, S_IFBLK},
  {"/dev/sdh11", BRACK(FH_SDH | 11), "\\Device\\Harddisk7\\Partition11", exists_ntdev, S_IFBLK},
  {"/dev/sdh12", BRACK(FH_SDH | 12), "\\Device\\Harddisk7\\Partition12", exists_ntdev, S_IFBLK},
  {"/dev/sdh13", BRACK(FH_SDH | 13), "\\Device\\Harddisk7\\Partition13", exists_ntdev, S_IFBLK},
  {"/dev/sdh14", BRACK(FH_SDH | 14), "\\Device\\Harddisk7\\Partition14", exists_ntdev, S_IFBLK},
  {"/dev/sdh15", BRACK(FH_SDH | 15), "\\Device\\Harddisk7\\Partition15", exists_ntdev, S_IFBLK},
  {"/dev/sdi1", BRACK(FH_SDI | 1), "\\Device\\Harddisk8\\Partition1", exists_ntdev, S_IFBLK},
  {"/dev/sdi2", BRACK(FH_SDI | 2), "\\Device\\Harddisk8\\Partition2", exists_ntdev, S_IFBLK},
  {"/dev/sdi3", BRACK(FH_SDI | 3), "\\Device\\Harddisk8\\Partition3", exists_ntdev, S_IFBLK},
  {"/dev/sdi4", BRACK(FH_SDI | 4), "\\Device\\Harddisk8\\Partition4", exists_ntdev, S_IFBLK},
  {"/dev/sdi5", BRACK(FH_SDI | 5), "\\Device\\Harddisk8\\Partition5", exists_ntdev, S_IFBLK},
  {"/dev/sdi6", BRACK(FH_SDI | 6), "\\Device\\Harddisk8\\Partition6", exists_ntdev, S_IFBLK},
  {"/dev/sdi7", BRACK(FH_SDI | 7), "\\Device\\Harddisk8\\Partition7", exists_ntdev, S_IFBLK},
  {"/dev/sdi8", BRACK(FH_SDI | 8), "\\Device\\Harddisk8\\Partition8", exists_ntdev, S_IFBLK},
  {"/dev/sdi9", BRACK(FH_SDI | 9), "\\Device\\Harddisk8\\Partition9", exists_ntdev, S_IFBLK},
  {"/dev/sdi10", BRACK(FH_SDI | 10), "\\Device\\Harddisk8\\Partition10", exists_ntdev, S_IFBLK},
  {"/dev/sdi11", BRACK(FH_SDI | 11), "\\Device\\Harddisk8\\Partition11", exists_ntdev, S_IFBLK},
  {"/dev/sdi12", BRACK(FH_SDI | 12), "\\Device\\Harddisk8\\Partition12", exists_ntdev, S_IFBLK},
  {"/dev/sdi13", BRACK(FH_SDI | 13), "\\Device\\Harddisk8\\Partition13", exists_ntdev, S_IFBLK},
  {"/dev/sdi14", BRACK(FH_SDI | 14), "\\Device\\Harddisk8\\Partition14", exists_ntdev, S_IFBLK},
  {"/dev/sdi15", BRACK(FH_SDI | 15), "\\Device\\Harddisk8\\Partition15", exists_ntdev, S_IFBLK},
  {"/dev/sdj1", BRACK(FH_SDJ | 1), "\\Device\\Harddisk9\\Partition1", exists_ntdev, S_IFBLK},
  {"/dev/sdj2", BRACK(FH_SDJ | 2), "\\Device\\Harddisk9\\Partition2", exists_ntdev, S_IFBLK},
  {"/dev/sdj3", BRACK(FH_SDJ | 3), "\\Device\\Harddisk9\\Partition3", exists_ntdev, S_IFBLK},
  {"/dev/sdj4", BRACK(FH_SDJ | 4), "\\Device\\Harddisk9\\Partition4", exists_ntdev, S_IFBLK},
  {"/dev/sdj5", BRACK(FH_SDJ | 5), "\\Device\\Harddisk9\\Partition5", exists_ntdev, S_IFBLK},
  {"/dev/sdj6", BRACK(FH_SDJ | 6), "\\Device\\Harddisk9\\Partition6", exists_ntdev, S_IFBLK},
  {"/dev/sdj7", BRACK(FH_SDJ | 7), "\\Device\\Harddisk9\\Partition7", exists_ntdev, S_IFBLK},
  {"/dev/sdj8", BRACK(FH_SDJ | 8), "\\Device\\Harddisk9\\Partition8", exists_ntdev, S_IFBLK},
  {"/dev/sdj9", BRACK(FH_SDJ | 9), "\\Device\\Harddisk9\\Partition9", exists_ntdev, S_IFBLK},
  {"/dev/sdj10", BRACK(FH_SDJ | 10), "\\Device\\Harddisk9\\Partition10", exists_ntdev, S_IFBLK},
  {"/dev/sdj11", BRACK(FH_SDJ | 11), "\\Device\\Harddisk9\\Partition11", exists_ntdev, S_IFBLK},
  {"/dev/sdj12", BRACK(FH_SDJ | 12), "\\Device\\Harddisk9\\Partition12", exists_ntdev, S_IFBLK},
  {"/dev/sdj13", BRACK(FH_SDJ | 13), "\\Device\\Harddisk9\\Partition13", exists_ntdev, S_IFBLK},
  {"/dev/sdj14", BRACK(FH_SDJ | 14), "\\Device\\Harddisk9\\Partition14", exists_ntdev, S_IFBLK},
  {"/dev/sdj15", BRACK(FH_SDJ | 15), "\\Device\\Harddisk9\\Partition15", exists_ntdev, S_IFBLK},
  {"/dev/sdk1", BRACK(FH_SDK | 1), "\\Device\\Harddisk10\\Partition1", exists_ntdev, S_IFBLK},
  {"/dev/sdk2", BRACK(FH_SDK | 2), "\\Device\\Harddisk10\\Partition2", exists_ntdev, S_IFBLK},
  {"/dev/sdk3", BRACK(FH_SDK | 3), "\\Device\\Harddisk10\\Partition3", exists_ntdev, S_IFBLK},
  {"/dev/sdk4", BRACK(FH_SDK | 4), "\\Device\\Harddisk10\\Partition4", exists_ntdev, S_IFBLK},
  {"/dev/sdk5", BRACK(FH_SDK | 5), "\\Device\\Harddisk10\\Partition5", exists_ntdev, S_IFBLK},
  {"/dev/sdk6", BRACK(FH_SDK | 6), "\\Device\\Harddisk10\\Partition6", exists_ntdev, S_IFBLK},
  {"/dev/sdk7", BRACK(FH_SDK | 7), "\\Device\\Harddisk10\\Partition7", exists_ntdev, S_IFBLK},
  {"/dev/sdk8", BRACK(FH_SDK | 8), "\\Device\\Harddisk10\\Partition8", exists_ntdev, S_IFBLK},
  {"/dev/sdk9", BRACK(FH_SDK | 9), "\\Device\\Harddisk10\\Partition9", exists_ntdev, S_IFBLK},
  {"/dev/sdk10", BRACK(FH_SDK | 10), "\\Device\\Harddisk10\\Partition10", exists_ntdev, S_IFBLK},
  {"/dev/sdk11", BRACK(FH_SDK | 11), "\\Device\\Harddisk10\\Partition11", exists_ntdev, S_IFBLK},
  {"/dev/sdk12", BRACK(FH_SDK | 12), "\\Device\\Harddisk10\\Partition12", exists_ntdev, S_IFBLK},
  {"/dev/sdk13", BRACK(FH_SDK | 13), "\\Device\\Harddisk10\\Partition13", exists_ntdev, S_IFBLK},
  {"/dev/sdk14", BRACK(FH_SDK | 14), "\\Device\\Harddisk10\\Partition14", exists_ntdev, S_IFBLK},
  {"/dev/sdk15", BRACK(FH_SDK | 15), "\\Device\\Harddisk10\\Partition15", exists_ntdev, S_IFBLK},
  {"/dev/sdl1", BRACK(FH_SDL | 1), "\\Device\\Harddisk11\\Partition1", exists_ntdev, S_IFBLK},
  {"/dev/sdl2", BRACK(FH_SDL | 2), "\\Device\\Harddisk11\\Partition2", exists_ntdev, S_IFBLK},
  {"/dev/sdl3", BRACK(FH_SDL | 3), "\\Device\\Harddisk11\\Partition3", exists_ntdev, S_IFBLK},
  {"/dev/sdl4", BRACK(FH_SDL | 4), "\\Device\\Harddisk11\\Partition4", exists_ntdev, S_IFBLK},
  {"/dev/sdl5", BRACK(FH_SDL | 5), "\\Device\\Harddisk11\\Partition5", exists_ntdev, S_IFBLK},
  {"/dev/sdl6", BRACK(FH_SDL | 6), "\\Device\\Harddisk11\\Partition6", exists_ntdev, S_IFBLK},
  {"/dev/sdl7", BRACK(FH_SDL | 7), "\\Device\\Harddisk11\\Partition7", exists_ntdev, S_IFBLK},
  {"/dev/sdl8", BRACK(FH_SDL | 8), "\\Device\\Harddisk11\\Partition8", exists_ntdev, S_IFBLK},
  {"/dev/sdl9", BRACK(FH_SDL | 9), "\\Device\\Harddisk11\\Partition9", exists_ntdev, S_IFBLK},
  {"/dev/sdl10", BRACK(FH_SDL | 10), "\\Device\\Harddisk11\\Partition10", exists_ntdev, S_IFBLK},
  {"/dev/sdl11", BRACK(FH_SDL | 11), "\\Device\\Harddisk11\\Partition11", exists_ntdev, S_IFBLK},
  {"/dev/sdl12", BRACK(FH_SDL | 12), "\\Device\\Harddisk11\\Partition12", exists_ntdev, S_IFBLK},
  {"/dev/sdl13", BRACK(FH_SDL | 13), "\\Device\\Harddisk11\\Partition13", exists_ntdev, S_IFBLK},
  {"/dev/sdl14", BRACK(FH_SDL | 14), "\\Device\\Harddisk11\\Partition14", exists_ntdev, S_IFBLK},
  {"/dev/sdl15", BRACK(FH_SDL | 15), "\\Device\\Harddisk11\\Partition15", exists_ntdev, S_IFBLK},
  {"/dev/sdm1", BRACK(FH_SDM | 1), "\\Device\\Harddisk12\\Partition1", exists_ntdev, S_IFBLK},
  {"/dev/sdm2", BRACK(FH_SDM | 2), "\\Device\\Harddisk12\\Partition2", exists_ntdev, S_IFBLK},
  {"/dev/sdm3", BRACK(FH_SDM | 3), "\\Device\\Harddisk12\\Partition3", exists_ntdev, S_IFBLK},
  {"/dev/sdm4", BRACK(FH_SDM | 4), "\\Device\\Harddisk12\\Partition4", exists_ntdev, S_IFBLK},
  {"/dev/sdm5", BRACK(FH_SDM | 5), "\\Device\\Harddisk12\\Partition5", exists_ntdev, S_IFBLK},
  {"/dev/sdm6", BRACK(FH_SDM | 6), "\\Device\\Harddisk12\\Partition6", exists_ntdev, S_IFBLK},
  {"/dev/sdm7", BRACK(FH_SDM | 7), "\\Device\\Harddisk12\\Partition7", exists_ntdev, S_IFBLK},
  {"/dev/sdm8", BRACK(FH_SDM | 8), "\\Device\\Harddisk12\\Partition8", exists_ntdev, S_IFBLK},
  {"/dev/sdm9", BRACK(FH_SDM | 9), "\\Device\\Harddisk12\\Partition9", exists_ntdev, S_IFBLK},
  {"/dev/sdm10", BRACK(FH_SDM | 10), "\\Device\\Harddisk12\\Partition10", exists_ntdev, S_IFBLK},
  {"/dev/sdm11", BRACK(FH_SDM | 11), "\\Device\\Harddisk12\\Partition11", exists_ntdev, S_IFBLK},
  {"/dev/sdm12", BRACK(FH_SDM | 12), "\\Device\\Harddisk12\\Partition12", exists_ntdev, S_IFBLK},
  {"/dev/sdm13", BRACK(FH_SDM | 13), "\\Device\\Harddisk12\\Partition13", exists_ntdev, S_IFBLK},
  {"/dev/sdm14", BRACK(FH_SDM | 14), "\\Device\\Harddisk12\\Partition14", exists_ntdev, S_IFBLK},
  {"/dev/sdm15", BRACK(FH_SDM | 15), "\\Device\\Harddisk12\\Partition15", exists_ntdev, S_IFBLK},
  {"/dev/sdn1", BRACK(FH_SDN | 1), "\\Device\\Harddisk13\\Partition1", exists_ntdev, S_IFBLK},
  {"/dev/sdn2", BRACK(FH_SDN | 2), "\\Device\\Harddisk13\\Partition2", exists_ntdev, S_IFBLK},
  {"/dev/sdn3", BRACK(FH_SDN | 3), "\\Device\\Harddisk13\\Partition3", exists_ntdev, S_IFBLK},
  {"/dev/sdn4", BRACK(FH_SDN | 4), "\\Device\\Harddisk13\\Partition4", exists_ntdev, S_IFBLK},
  {"/dev/sdn5", BRACK(FH_SDN | 5), "\\Device\\Harddisk13\\Partition5", exists_ntdev, S_IFBLK},
  {"/dev/sdn6", BRACK(FH_SDN | 6), "\\Device\\Harddisk13\\Partition6", exists_ntdev, S_IFBLK},
  {"/dev/sdn7", BRACK(FH_SDN | 7), "\\Device\\Harddisk13\\Partition7", exists_ntdev, S_IFBLK},
  {"/dev/sdn8", BRACK(FH_SDN | 8), "\\Device\\Harddisk13\\Partition8", exists_ntdev, S_IFBLK},
  {"/dev/sdn9", BRACK(FH_SDN | 9), "\\Device\\Harddisk13\\Partition9", exists_ntdev, S_IFBLK},
  {"/dev/sdn10", BRACK(FH_SDN | 10), "\\Device\\Harddisk13\\Partition10", exists_ntdev, S_IFBLK},
  {"/dev/sdn11", BRACK(FH_SDN | 11), "\\Device\\Harddisk13\\Partition11", exists_ntdev, S_IFBLK},
  {"/dev/sdn12", BRACK(FH_SDN | 12), "\\Device\\Harddisk13\\Partition12", exists_ntdev, S_IFBLK},
  {"/dev/sdn13", BRACK(FH_SDN | 13), "\\Device\\Harddisk13\\Partition13", exists_ntdev, S_IFBLK},
  {"/dev/sdn14", BRACK(FH_SDN | 14), "\\Device\\Harddisk13\\Partition14", exists_ntdev, S_IFBLK},
  {"/dev/sdn15", BRACK(FH_SDN | 15), "\\Device\\Harddisk13\\Partition15", exists_ntdev, S_IFBLK},
  {"/dev/sdo1", BRACK(FH_SDO | 1), "\\Device\\Harddisk14\\Partition1", exists_ntdev, S_IFBLK},
  {"/dev/sdo2", BRACK(FH_SDO | 2), "\\Device\\Harddisk14\\Partition2", exists_ntdev, S_IFBLK},
  {"/dev/sdo3", BRACK(FH_SDO | 3), "\\Device\\Harddisk14\\Partition3", exists_ntdev, S_IFBLK},
  {"/dev/sdo4", BRACK(FH_SDO | 4), "\\Device\\Harddisk14\\Partition4", exists_ntdev, S_IFBLK},
  {"/dev/sdo5", BRACK(FH_SDO | 5), "\\Device\\Harddisk14\\Partition5", exists_ntdev, S_IFBLK},
  {"/dev/sdo6", BRACK(FH_SDO | 6), "\\Device\\Harddisk14\\Partition6", exists_ntdev, S_IFBLK},
  {"/dev/sdo7", BRACK(FH_SDO | 7), "\\Device\\Harddisk14\\Partition7", exists_ntdev, S_IFBLK},
  {"/dev/sdo8", BRACK(FH_SDO | 8), "\\Device\\Harddisk14\\Partition8", exists_ntdev, S_IFBLK},
  {"/dev/sdo9", BRACK(FH_SDO | 9), "\\Device\\Harddisk14\\Partition9", exists_ntdev, S_IFBLK},
  {"/dev/sdo10", BRACK(FH_SDO | 10), "\\Device\\Harddisk14\\Partition10", exists_ntdev, S_IFBLK},
  {"/dev/sdo11", BRACK(FH_SDO | 11), "\\Device\\Harddisk14\\Partition11", exists_ntdev, S_IFBLK},
  {"/dev/sdo12", BRACK(FH_SDO | 12), "\\Device\\Harddisk14\\Partition12", exists_ntdev, S_IFBLK},
  {"/dev/sdo13", BRACK(FH_SDO | 13), "\\Device\\Harddisk14\\Partition13", exists_ntdev, S_IFBLK},
  {"/dev/sdo14", BRACK(FH_SDO | 14), "\\Device\\Harddisk14\\Partition14", exists_ntdev, S_IFBLK},
  {"/dev/sdo15", BRACK(FH_SDO | 15), "\\Device\\Harddisk14\\Partition15", exists_ntdev, S_IFBLK},
  {"/dev/sdp1", BRACK(FH_SDP | 1), "\\Device\\Harddisk15\\Partition1", exists_ntdev, S_IFBLK},
  {"/dev/sdp2", BRACK(FH_SDP | 2), "\\Device\\Harddisk15\\Partition2", exists_ntdev, S_IFBLK},
  {"/dev/sdp3", BRACK(FH_SDP | 3), "\\Device\\Harddisk15\\Partition3", exists_ntdev, S_IFBLK},
  {"/dev/sdp4", BRACK(FH_SDP | 4), "\\Device\\Harddisk15\\Partition4", exists_ntdev, S_IFBLK},
  {"/dev/sdp5", BRACK(FH_SDP | 5), "\\Device\\Harddisk15\\Partition5", exists_ntdev, S_IFBLK},
  {"/dev/sdp6", BRACK(FH_SDP | 6), "\\Device\\Harddisk15\\Partition6", exists_ntdev, S_IFBLK},
  {"/dev/sdp7", BRACK(FH_SDP | 7), "\\Device\\Harddisk15\\Partition7", exists_ntdev, S_IFBLK},
  {"/dev/sdp8", BRACK(FH_SDP | 8), "\\Device\\Harddisk15\\Partition8", exists_ntdev, S_IFBLK},
  {"/dev/sdp9", BRACK(FH_SDP | 9), "\\Device\\Harddisk15\\Partition9", exists_ntdev, S_IFBLK},
  {"/dev/sdp10", BRACK(FH_SDP | 10), "\\Device\\Harddisk15\\Partition10", exists_ntdev, S_IFBLK},
  {"/dev/sdp11", BRACK(FH_SDP | 11), "\\Device\\Harddisk15\\Partition11", exists_ntdev, S_IFBLK},
  {"/dev/sdp12", BRACK(FH_SDP | 12), "\\Device\\Harddisk15\\Partition12", exists_ntdev, S_IFBLK},
  {"/dev/sdp13", BRACK(FH_SDP | 13), "\\Device\\Harddisk15\\Partition13", exists_ntdev, S_IFBLK},
  {"/dev/sdp14", BRACK(FH_SDP | 14), "\\Device\\Harddisk15\\Partition14", exists_ntdev, S_IFBLK},
  {"/dev/sdp15", BRACK(FH_SDP | 15), "\\Device\\Harddisk15\\Partition15", exists_ntdev, S_IFBLK},
  {"/dev/sdq1", BRACK(FH_SDQ | 1), "\\Device\\Harddisk16\\Partition1", exists_ntdev, S_IFBLK},
  {"/dev/sdq2", BRACK(FH_SDQ | 2), "\\Device\\Harddisk16\\Partition2", exists_ntdev, S_IFBLK},
  {"/dev/sdq3", BRACK(FH_SDQ | 3), "\\Device\\Harddisk16\\Partition3", exists_ntdev, S_IFBLK},
  {"/dev/sdq4", BRACK(FH_SDQ | 4), "\\Device\\Harddisk16\\Partition4", exists_ntdev, S_IFBLK},
  {"/dev/sdq5", BRACK(FH_SDQ | 5), "\\Device\\Harddisk16\\Partition5", exists_ntdev, S_IFBLK},
  {"/dev/sdq6", BRACK(FH_SDQ | 6), "\\Device\\Harddisk16\\Partition6", exists_ntdev, S_IFBLK},
  {"/dev/sdq7", BRACK(FH_SDQ | 7), "\\Device\\Harddisk16\\Partition7", exists_ntdev, S_IFBLK},
  {"/dev/sdq8", BRACK(FH_SDQ | 8), "\\Device\\Harddisk16\\Partition8", exists_ntdev, S_IFBLK},
  {"/dev/sdq9", BRACK(FH_SDQ | 9), "\\Device\\Harddisk16\\Partition9", exists_ntdev, S_IFBLK},
  {"/dev/sdq10", BRACK(FH_SDQ | 10), "\\Device\\Harddisk16\\Partition10", exists_ntdev, S_IFBLK},
  {"/dev/sdq11", BRACK(FH_SDQ | 11), "\\Device\\Harddisk16\\Partition11", exists_ntdev, S_IFBLK},
  {"/dev/sdq12", BRACK(FH_SDQ | 12), "\\Device\\Harddisk16\\Partition12", exists_ntdev, S_IFBLK},
  {"/dev/sdq13", BRACK(FH_SDQ | 13), "\\Device\\Harddisk16\\Partition13", exists_ntdev, S_IFBLK},
  {"/dev/sdq14", BRACK(FH_SDQ | 14), "\\Device\\Harddisk16\\Partition14", exists_ntdev, S_IFBLK},
  {"/dev/sdq15", BRACK(FH_SDQ | 15), "\\Device\\Harddisk16\\Partition15", exists_ntdev, S_IFBLK},
  {"/dev/sdr1", BRACK(FH_SDR | 1), "\\Device\\Harddisk17\\Partition1", exists_ntdev, S_IFBLK},
  {"/dev/sdr2", BRACK(FH_SDR | 2), "\\Device\\Harddisk17\\Partition2", exists_ntdev, S_IFBLK},
  {"/dev/sdr3", BRACK(FH_SDR | 3), "\\Device\\Harddisk17\\Partition3", exists_ntdev, S_IFBLK},
  {"/dev/sdr4", BRACK(FH_SDR | 4), "\\Device\\Harddisk17\\Partition4", exists_ntdev, S_IFBLK},
  {"/dev/sdr5", BRACK(FH_SDR | 5), "\\Device\\Harddisk17\\Partition5", exists_ntdev, S_IFBLK},
  {"/dev/sdr6", BRACK(FH_SDR | 6), "\\Device\\Harddisk17\\Partition6", exists_ntdev, S_IFBLK},
  {"/dev/sdr7", BRACK(FH_SDR | 7), "\\Device\\Harddisk17\\Partition7", exists_ntdev, S_IFBLK},
  {"/dev/sdr8", BRACK(FH_SDR | 8), "\\Device\\Harddisk17\\Partition8", exists_ntdev, S_IFBLK},
  {"/dev/sdr9", BRACK(FH_SDR | 9), "\\Device\\Harddisk17\\Partition9", exists_ntdev, S_IFBLK},
  {"/dev/sdr10", BRACK(FH_SDR | 10), "\\Device\\Harddisk17\\Partition10", exists_ntdev, S_IFBLK},
  {"/dev/sdr11", BRACK(FH_SDR | 11), "\\Device\\Harddisk17\\Partition11", exists_ntdev, S_IFBLK},
  {"/dev/sdr12", BRACK(FH_SDR | 12), "\\Device\\Harddisk17\\Partition12", exists_ntdev, S_IFBLK},
  {"/dev/sdr13", BRACK(FH_SDR | 13), "\\Device\\Harddisk17\\Partition13", exists_ntdev, S_IFBLK},
  {"/dev/sdr14", BRACK(FH_SDR | 14), "\\Device\\Harddisk17\\Partition14", exists_ntdev, S_IFBLK},
  {"/dev/sdr15", BRACK(FH_SDR | 15), "\\Device\\Harddisk17\\Partition15", exists_ntdev, S_IFBLK},
  {"/dev/sds1", BRACK(FH_SDS | 1), "\\Device\\Harddisk18\\Partition1", exists_ntdev, S_IFBLK},
  {"/dev/sds2", BRACK(FH_SDS | 2), "\\Device\\Harddisk18\\Partition2", exists_ntdev, S_IFBLK},
  {"/dev/sds3", BRACK(FH_SDS | 3), "\\Device\\Harddisk18\\Partition3", exists_ntdev, S_IFBLK},
  {"/dev/sds4", BRACK(FH_SDS | 4), "\\Device\\Harddisk18\\Partition4", exists_ntdev, S_IFBLK},
  {"/dev/sds5", BRACK(FH_SDS | 5), "\\Device\\Harddisk18\\Partition5", exists_ntdev, S_IFBLK},
  {"/dev/sds6", BRACK(FH_SDS | 6), "\\Device\\Harddisk18\\Partition6", exists_ntdev, S_IFBLK},
  {"/dev/sds7", BRACK(FH_SDS | 7), "\\Device\\Harddisk18\\Partition7", exists_ntdev, S_IFBLK},
  {"/dev/sds8", BRACK(FH_SDS | 8), "\\Device\\Harddisk18\\Partition8", exists_ntdev, S_IFBLK},
  {"/dev/sds9", BRACK(FH_SDS | 9), "\\Device\\Harddisk18\\Partition9", exists_ntdev, S_IFBLK},
  {"/dev/sds10", BRACK(FH_SDS | 10), "\\Device\\Harddisk18\\Partition10", exists_ntdev, S_IFBLK},
  {"/dev/sds11", BRACK(FH_SDS | 11), "\\Device\\Harddisk18\\Partition11", exists_ntdev, S_IFBLK},
  {"/dev/sds12", BRACK(FH_SDS | 12), "\\Device\\Harddisk18\\Partition12", exists_ntdev, S_IFBLK},
  {"/dev/sds13", BRACK(FH_SDS | 13), "\\Device\\Harddisk18\\Partition13", exists_ntdev, S_IFBLK},
  {"/dev/sds14", BRACK(FH_SDS | 14), "\\Device\\Harddisk18\\Partition14", exists_ntdev, S_IFBLK},
  {"/dev/sds15", BRACK(FH_SDS | 15), "\\Device\\Harddisk18\\Partition15", exists_ntdev, S_IFBLK},
  {"/dev/sdt1", BRACK(FH_SDT | 1), "\\Device\\Harddisk19\\Partition1", exists_ntdev, S_IFBLK},
  {"/dev/sdt2", BRACK(FH_SDT | 2), "\\Device\\Harddisk19\\Partition2", exists_ntdev, S_IFBLK},
  {"/dev/sdt3", BRACK(FH_SDT | 3), "\\Device\\Harddisk19\\Partition3", exists_ntdev, S_IFBLK},
  {"/dev/sdt4", BRACK(FH_SDT | 4), "\\Device\\Harddisk19\\Partition4", exists_ntdev, S_IFBLK},
  {"/dev/sdt5", BRACK(FH_SDT | 5), "\\Device\\Harddisk19\\Partition5", exists_ntdev, S_IFBLK},
  {"/dev/sdt6", BRACK(FH_SDT | 6), "\\Device\\Harddisk19\\Partition6", exists_ntdev, S_IFBLK},
  {"/dev/sdt7", BRACK(FH_SDT | 7), "\\Device\\Harddisk19\\Partition7", exists_ntdev, S_IFBLK},
  {"/dev/sdt8", BRACK(FH_SDT | 8), "\\Device\\Harddisk19\\Partition8", exists_ntdev, S_IFBLK},
  {"/dev/sdt9", BRACK(FH_SDT | 9), "\\Device\\Harddisk19\\Partition9", exists_ntdev, S_IFBLK},
  {"/dev/sdt10", BRACK(FH_SDT | 10), "\\Device\\Harddisk19\\Partition10", exists_ntdev, S_IFBLK},
  {"/dev/sdt11", BRACK(FH_SDT | 11), "\\Device\\Harddisk19\\Partition11", exists_ntdev, S_IFBLK},
  {"/dev/sdt12", BRACK(FH_SDT | 12), "\\Device\\Harddisk19\\Partition12", exists_ntdev, S_IFBLK},
  {"/dev/sdt13", BRACK(FH_SDT | 13), "\\Device\\Harddisk19\\Partition13", exists_ntdev, S_IFBLK},
  {"/dev/sdt14", BRACK(FH_SDT | 14), "\\Device\\Harddisk19\\Partition14", exists_ntdev, S_IFBLK},
  {"/dev/sdt15", BRACK(FH_SDT | 15), "\\Device\\Harddisk19\\Partition15", exists_ntdev, S_IFBLK},
  {"/dev/sdu1", BRACK(FH_SDU | 1), "\\Device\\Harddisk20\\Partition1", exists_ntdev, S_IFBLK},
  {"/dev/sdu2", BRACK(FH_SDU | 2), "\\Device\\Harddisk20\\Partition2", exists_ntdev, S_IFBLK},
  {"/dev/sdu3", BRACK(FH_SDU | 3), "\\Device\\Harddisk20\\Partition3", exists_ntdev, S_IFBLK},
  {"/dev/sdu4", BRACK(FH_SDU | 4), "\\Device\\Harddisk20\\Partition4", exists_ntdev, S_IFBLK},
  {"/dev/sdu5", BRACK(FH_SDU | 5), "\\Device\\Harddisk20\\Partition5", exists_ntdev, S_IFBLK},
  {"/dev/sdu6", BRACK(FH_SDU | 6), "\\Device\\Harddisk20\\Partition6", exists_ntdev, S_IFBLK},
  {"/dev/sdu7", BRACK(FH_SDU | 7), "\\Device\\Harddisk20\\Partition7", exists_ntdev, S_IFBLK},
  {"/dev/sdu8", BRACK(FH_SDU | 8), "\\Device\\Harddisk20\\Partition8", exists_ntdev, S_IFBLK},
  {"/dev/sdu9", BRACK(FH_SDU | 9), "\\Device\\Harddisk20\\Partition9", exists_ntdev, S_IFBLK},
  {"/dev/sdu10", BRACK(FH_SDU | 10), "\\Device\\Harddisk20\\Partition10", exists_ntdev, S_IFBLK},
  {"/dev/sdu11", BRACK(FH_SDU | 11), "\\Device\\Harddisk20\\Partition11", exists_ntdev, S_IFBLK},
  {"/dev/sdu12", BRACK(FH_SDU | 12), "\\Device\\Harddisk20\\Partition12", exists_ntdev, S_IFBLK},
  {"/dev/sdu13", BRACK(FH_SDU | 13), "\\Device\\Harddisk20\\Partition13", exists_ntdev, S_IFBLK},
  {"/dev/sdu14", BRACK(FH_SDU | 14), "\\Device\\Harddisk20\\Partition14", exists_ntdev, S_IFBLK},
  {"/dev/sdu15", BRACK(FH_SDU | 15), "\\Device\\Harddisk20\\Partition15", exists_ntdev, S_IFBLK},
  {"/dev/sdv1", BRACK(FH_SDV | 1), "\\Device\\Harddisk21\\Partition1", exists_ntdev, S_IFBLK},
  {"/dev/sdv2", BRACK(FH_SDV | 2), "\\Device\\Harddisk21\\Partition2", exists_ntdev, S_IFBLK},
  {"/dev/sdv3", BRACK(FH_SDV | 3), "\\Device\\Harddisk21\\Partition3", exists_ntdev, S_IFBLK},
  {"/dev/sdv4", BRACK(FH_SDV | 4), "\\Device\\Harddisk21\\Partition4", exists_ntdev, S_IFBLK},
  {"/dev/sdv5", BRACK(FH_SDV | 5), "\\Device\\Harddisk21\\Partition5", exists_ntdev, S_IFBLK},
  {"/dev/sdv6", BRACK(FH_SDV | 6), "\\Device\\Harddisk21\\Partition6", exists_ntdev, S_IFBLK},
  {"/dev/sdv7", BRACK(FH_SDV | 7), "\\Device\\Harddisk21\\Partition7", exists_ntdev, S_IFBLK},
  {"/dev/sdv8", BRACK(FH_SDV | 8), "\\Device\\Harddisk21\\Partition8", exists_ntdev, S_IFBLK},
  {"/dev/sdv9", BRACK(FH_SDV | 9), "\\Device\\Harddisk21\\Partition9", exists_ntdev, S_IFBLK},
  {"/dev/sdv10", BRACK(FH_SDV | 10), "\\Device\\Harddisk21\\Partition10", exists_ntdev, S_IFBLK},
  {"/dev/sdv11", BRACK(FH_SDV | 11), "\\Device\\Harddisk21\\Partition11", exists_ntdev, S_IFBLK},
  {"/dev/sdv12", BRACK(FH_SDV | 12), "\\Device\\Harddisk21\\Partition12", exists_ntdev, S_IFBLK},
  {"/dev/sdv13", BRACK(FH_SDV | 13), "\\Device\\Harddisk21\\Partition13", exists_ntdev, S_IFBLK},
  {"/dev/sdv14", BRACK(FH_SDV | 14), "\\Device\\Harddisk21\\Partition14", exists_ntdev, S_IFBLK},
  {"/dev/sdv15", BRACK(FH_SDV | 15), "\\Device\\Harddisk21\\Partition15", exists_ntdev, S_IFBLK},
  {"/dev/sdw1", BRACK(FH_SDW | 1), "\\Device\\Harddisk22\\Partition1", exists_ntdev, S_IFBLK},
  {"/dev/sdw2", BRACK(FH_SDW | 2), "\\Device\\Harddisk22\\Partition2", exists_ntdev, S_IFBLK},
  {"/dev/sdw3", BRACK(FH_SDW | 3), "\\Device\\Harddisk22\\Partition3", exists_ntdev, S_IFBLK},
  {"/dev/sdw4", BRACK(FH_SDW | 4), "\\Device\\Harddisk22\\Partition4", exists_ntdev, S_IFBLK},
  {"/dev/sdw5", BRACK(FH_SDW | 5), "\\Device\\Harddisk22\\Partition5", exists_ntdev, S_IFBLK},
  {"/dev/sdw6", BRACK(FH_SDW | 6), "\\Device\\Harddisk22\\Partition6", exists_ntdev, S_IFBLK},
  {"/dev/sdw7", BRACK(FH_SDW | 7), "\\Device\\Harddisk22\\Partition7", exists_ntdev, S_IFBLK},
  {"/dev/sdw8", BRACK(FH_SDW | 8), "\\Device\\Harddisk22\\Partition8", exists_ntdev, S_IFBLK},
  {"/dev/sdw9", BRACK(FH_SDW | 9), "\\Device\\Harddisk22\\Partition9", exists_ntdev, S_IFBLK},
  {"/dev/sdw10", BRACK(FH_SDW | 10), "\\Device\\Harddisk22\\Partition10", exists_ntdev, S_IFBLK},
  {"/dev/sdw11", BRACK(FH_SDW | 11), "\\Device\\Harddisk22\\Partition11", exists_ntdev, S_IFBLK},
  {"/dev/sdw12", BRACK(FH_SDW | 12), "\\Device\\Harddisk22\\Partition12", exists_ntdev, S_IFBLK},
  {"/dev/sdw13", BRACK(FH_SDW | 13), "\\Device\\Harddisk22\\Partition13", exists_ntdev, S_IFBLK},
  {"/dev/sdw14", BRACK(FH_SDW | 14), "\\Device\\Harddisk22\\Partition14", exists_ntdev, S_IFBLK},
  {"/dev/sdw15", BRACK(FH_SDW | 15), "\\Device\\Harddisk22\\Partition15", exists_ntdev, S_IFBLK},
  {"/dev/sdx1", BRACK(FH_SDX | 1), "\\Device\\Harddisk23\\Partition1", exists_ntdev, S_IFBLK},
  {"/dev/sdx2", BRACK(FH_SDX | 2), "\\Device\\Harddisk23\\Partition2", exists_ntdev, S_IFBLK},
  {"/dev/sdx3", BRACK(FH_SDX | 3), "\\Device\\Harddisk23\\Partition3", exists_ntdev, S_IFBLK},
  {"/dev/sdx4", BRACK(FH_SDX | 4), "\\Device\\Harddisk23\\Partition4", exists_ntdev, S_IFBLK},
  {"/dev/sdx5", BRACK(FH_SDX | 5), "\\Device\\Harddisk23\\Partition5", exists_ntdev, S_IFBLK},
  {"/dev/sdx6", BRACK(FH_SDX | 6), "\\Device\\Harddisk23\\Partition6", exists_ntdev, S_IFBLK},
  {"/dev/sdx7", BRACK(FH_SDX | 7), "\\Device\\Harddisk23\\Partition7", exists_ntdev, S_IFBLK},
  {"/dev/sdx8", BRACK(FH_SDX | 8), "\\Device\\Harddisk23\\Partition8", exists_ntdev, S_IFBLK},
  {"/dev/sdx9", BRACK(FH_SDX | 9), "\\Device\\Harddisk23\\Partition9", exists_ntdev, S_IFBLK},
  {"/dev/sdx10", BRACK(FH_SDX | 10), "\\Device\\Harddisk23\\Partition10", exists_ntdev, S_IFBLK},
  {"/dev/sdx11", BRACK(FH_SDX | 11), "\\Device\\Harddisk23\\Partition11", exists_ntdev, S_IFBLK},
  {"/dev/sdx12", BRACK(FH_SDX | 12), "\\Device\\Harddisk23\\Partition12", exists_ntdev, S_IFBLK},
  {"/dev/sdx13", BRACK(FH_SDX | 13), "\\Device\\Harddisk23\\Partition13", exists_ntdev, S_IFBLK},
  {"/dev/sdx14", BRACK(FH_SDX | 14), "\\Device\\Harddisk23\\Partition14", exists_ntdev, S_IFBLK},
  {"/dev/sdx15", BRACK(FH_SDX | 15), "\\Device\\Harddisk23\\Partition15", exists_ntdev, S_IFBLK},
  {"/dev/sdy1", BRACK(FH_SDY | 1), "\\Device\\Harddisk24\\Partition1", exists_ntdev, S_IFBLK},
  {"/dev/sdy2", BRACK(FH_SDY | 2), "\\Device\\Harddisk24\\Partition2", exists_ntdev, S_IFBLK},
  {"/dev/sdy3", BRACK(FH_SDY | 3), "\\Device\\Harddisk24\\Partition3", exists_ntdev, S_IFBLK},
  {"/dev/sdy4", BRACK(FH_SDY | 4), "\\Device\\Harddisk24\\Partition4", exists_ntdev, S_IFBLK},
  {"/dev/sdy5", BRACK(FH_SDY | 5), "\\Device\\Harddisk24\\Partition5", exists_ntdev, S_IFBLK},
  {"/dev/sdy6", BRACK(FH_SDY | 6), "\\Device\\Harddisk24\\Partition6", exists_ntdev, S_IFBLK},
  {"/dev/sdy7", BRACK(FH_SDY | 7), "\\Device\\Harddisk24\\Partition7", exists_ntdev, S_IFBLK},
  {"/dev/sdy8", BRACK(FH_SDY | 8), "\\Device\\Harddisk24\\Partition8", exists_ntdev, S_IFBLK},
  {"/dev/sdy9", BRACK(FH_SDY | 9), "\\Device\\Harddisk24\\Partition9", exists_ntdev, S_IFBLK},
  {"/dev/sdy10", BRACK(FH_SDY | 10), "\\Device\\Harddisk24\\Partition10", exists_ntdev, S_IFBLK},
  {"/dev/sdy11", BRACK(FH_SDY | 11), "\\Device\\Harddisk24\\Partition11", exists_ntdev, S_IFBLK},
  {"/dev/sdy12", BRACK(FH_SDY | 12), "\\Device\\Harddisk24\\Partition12", exists_ntdev, S_IFBLK},
  {"/dev/sdy13", BRACK(FH_SDY | 13), "\\Device\\Harddisk24\\Partition13", exists_ntdev, S_IFBLK},
  {"/dev/sdy14", BRACK(FH_SDY | 14), "\\Device\\Harddisk24\\Partition14", exists_ntdev, S_IFBLK},
  {"/dev/sdy15", BRACK(FH_SDY | 15), "\\Device\\Harddisk24\\Partition15", exists_ntdev, S_IFBLK},
  {"/dev/sdz1", BRACK(FH_SDZ | 1), "\\Device\\Harddisk25\\Partition1", exists_ntdev, S_IFBLK},
  {"/dev/sdz2", BRACK(FH_SDZ | 2), "\\Device\\Harddisk25\\Partition2", exists_ntdev, S_IFBLK},
  {"/dev/sdz3", BRACK(FH_SDZ | 3), "\\Device\\Harddisk25\\Partition3", exists_ntdev, S_IFBLK},
  {"/dev/sdz4", BRACK(FH_SDZ | 4), "\\Device\\Harddisk25\\Partition4", exists_ntdev, S_IFBLK},
  {"/dev/sdz5", BRACK(FH_SDZ | 5), "\\Device\\Harddisk25\\Partition5", exists_ntdev, S_IFBLK},
  {"/dev/sdz6", BRACK(FH_SDZ | 6), "\\Device\\Harddisk25\\Partition6", exists_ntdev, S_IFBLK},
  {"/dev/sdz7", BRACK(FH_SDZ | 7), "\\Device\\Harddisk25\\Partition7", exists_ntdev, S_IFBLK},
  {"/dev/sdz8", BRACK(FH_SDZ | 8), "\\Device\\Harddisk25\\Partition8", exists_ntdev, S_IFBLK},
  {"/dev/sdz9", BRACK(FH_SDZ | 9), "\\Device\\Harddisk25\\Partition9", exists_ntdev, S_IFBLK},
  {"/dev/sdz10", BRACK(FH_SDZ | 10), "\\Device\\Harddisk25\\Partition10", exists_ntdev, S_IFBLK},
  {"/dev/sdz11", BRACK(FH_SDZ | 11), "\\Device\\Harddisk25\\Partition11", exists_ntdev, S_IFBLK},
  {"/dev/sdz12", BRACK(FH_SDZ | 12), "\\Device\\Harddisk25\\Partition12", exists_ntdev, S_IFBLK},
  {"/dev/sdz13", BRACK(FH_SDZ | 13), "\\Device\\Harddisk25\\Partition13", exists_ntdev, S_IFBLK},
  {"/dev/sdz14", BRACK(FH_SDZ | 14), "\\Device\\Harddisk25\\Partition14", exists_ntdev, S_IFBLK},
  {"/dev/sdz15", BRACK(FH_SDZ | 15), "\\Device\\Harddisk25\\Partition15", exists_ntdev, S_IFBLK},
  {"/dev/sdaa", BRACK(FH_SDAA), "\\Device\\Harddisk26\\Partition0", exists_ntdev, S_IFBLK},
  {"/dev/sdab", BRACK(FH_SDAB), "\\Device\\Harddisk27\\Partition0", exists_ntdev, S_IFBLK},
  {"/dev/sdac", BRACK(FH_SDAC), "\\Device\\Harddisk28\\Partition0", exists_ntdev, S_IFBLK},
  {"/dev/sdad", BRACK(FH_SDAD), "\\Device\\Harddisk29\\Partition0", exists_ntdev, S_IFBLK},
  {"/dev/sdae", BRACK(FH_SDAE), "\\Device\\Harddisk30\\Partition0", exists_ntdev, S_IFBLK},
  {"/dev/sdaf", BRACK(FH_SDAF), "\\Device\\Harddisk31\\Partition0", exists_ntdev, S_IFBLK},
  {"/dev/sdag", BRACK(FH_SDAG), "\\Device\\Harddisk32\\Partition0", exists_ntdev, S_IFBLK},
  {"/dev/sdah", BRACK(FH_SDAH), "\\Device\\Harddisk33\\Partition0", exists_ntdev, S_IFBLK},
  {"/dev/sdai", BRACK(FH_SDAI), "\\Device\\Harddisk34\\Partition0", exists_ntdev, S_IFBLK},
  {"/dev/sdaj", BRACK(FH_SDAJ), "\\Device\\Harddisk35\\Partition0", exists_ntdev, S_IFBLK},
  {"/dev/sdak", BRACK(FH_SDAK), "\\Device\\Harddisk36\\Partition0", exists_ntdev, S_IFBLK},
  {"/dev/sdal", BRACK(FH_SDAL), "\\Device\\Harddisk37\\Partition0", exists_ntdev, S_IFBLK},
  {"/dev/sdam", BRACK(FH_SDAM), "\\Device\\Harddisk38\\Partition0", exists_ntdev, S_IFBLK},
  {"/dev/sdan", BRACK(FH_SDAN), "\\Device\\Harddisk39\\Partition0", exists_ntdev, S_IFBLK},
  {"/dev/sdao", BRACK(FH_SDAO), "\\Device\\Harddisk40\\Partition0", exists_ntdev, S_IFBLK},
  {"/dev/sdap", BRACK(FH_SDAP), "\\Device\\Harddisk41\\Partition0", exists_ntdev, S_IFBLK},
  {"/dev/sdaq", BRACK(FH_SDAQ), "\\Device\\Harddisk42\\Partition0", exists_ntdev, S_IFBLK},
  {"/dev/sdar", BRACK(FH_SDAR), "\\Device\\Harddisk43\\Partition0", exists_ntdev, S_IFBLK},
  {"/dev/sdas", BRACK(FH_SDAS), "\\Device\\Harddisk44\\Partition0", exists_ntdev, S_IFBLK},
  {"/dev/sdat", BRACK(FH_SDAT), "\\Device\\Harddisk45\\Partition0", exists_ntdev, S_IFBLK},
  {"/dev/sdau", BRACK(FH_SDAU), "\\Device\\Harddisk46\\Partition0", exists_ntdev, S_IFBLK},
  {"/dev/sdav", BRACK(FH_SDAV), "\\Device\\Harddisk47\\Partition0", exists_ntdev, S_IFBLK},
  {"/dev/sdaw", BRACK(FH_SDAW), "\\Device\\Harddisk48\\Partition0", exists_ntdev, S_IFBLK},
  {"/dev/sdax", BRACK(FH_SDAX), "\\Device\\Harddisk49\\Partition0", exists_ntdev, S_IFBLK},
  {"/dev/sday", BRACK(FH_SDAY), "\\Device\\Harddisk50\\Partition0", exists_ntdev, S_IFBLK},
  {"/dev/sdaz", BRACK(FH_SDAZ), "\\Device\\Harddisk51\\Partition0", exists_ntdev, S_IFBLK},
  {"/dev/sdaa1", BRACK(FH_SDAA | 1), "\\Device\\Harddisk26\\Partition1", exists_ntdev, S_IFBLK},
  {"/dev/sdaa2", BRACK(FH_SDAA | 2), "\\Device\\Harddisk26\\Partition2", exists_ntdev, S_IFBLK},
  {"/dev/sdaa3", BRACK(FH_SDAA | 3), "\\Device\\Harddisk26\\Partition3", exists_ntdev, S_IFBLK},
  {"/dev/sdaa4", BRACK(FH_SDAA | 4), "\\Device\\Harddisk26\\Partition4", exists_ntdev, S_IFBLK},
  {"/dev/sdaa5", BRACK(FH_SDAA | 5), "\\Device\\Harddisk26\\Partition5", exists_ntdev, S_IFBLK},
  {"/dev/sdaa6", BRACK(FH_SDAA | 6), "\\Device\\Harddisk26\\Partition6", exists_ntdev, S_IFBLK},
  {"/dev/sdaa7", BRACK(FH_SDAA | 7), "\\Device\\Harddisk26\\Partition7", exists_ntdev, S_IFBLK},
  {"/dev/sdaa8", BRACK(FH_SDAA | 8), "\\Device\\Harddisk26\\Partition8", exists_ntdev, S_IFBLK},
  {"/dev/sdaa9", BRACK(FH_SDAA | 9), "\\Device\\Harddisk26\\Partition9", exists_ntdev, S_IFBLK},
  {"/dev/sdaa10", BRACK(FH_SDAA | 10), "\\Device\\Harddisk26\\Partition10", exists_ntdev, S_IFBLK},
  {"/dev/sdaa11", BRACK(FH_SDAA | 11), "\\Device\\Harddisk26\\Partition11", exists_ntdev, S_IFBLK},
  {"/dev/sdaa12", BRACK(FH_SDAA | 12), "\\Device\\Harddisk26\\Partition12", exists_ntdev, S_IFBLK},
  {"/dev/sdaa13", BRACK(FH_SDAA | 13), "\\Device\\Harddisk26\\Partition13", exists_ntdev, S_IFBLK},
  {"/dev/sdaa14", BRACK(FH_SDAA | 14), "\\Device\\Harddisk26\\Partition14", exists_ntdev, S_IFBLK},
  {"/dev/sdaa15", BRACK(FH_SDAA | 15), "\\Device\\Harddisk26\\Partition15", exists_ntdev, S_IFBLK},
  {"/dev/sdab1", BRACK(FH_SDAB | 1), "\\Device\\Harddisk27\\Partition1", exists_ntdev, S_IFBLK},
  {"/dev/sdab2", BRACK(FH_SDAB | 2), "\\Device\\Harddisk27\\Partition2", exists_ntdev, S_IFBLK},
  {"/dev/sdab3", BRACK(FH_SDAB | 3), "\\Device\\Harddisk27\\Partition3", exists_ntdev, S_IFBLK},
  {"/dev/sdab4", BRACK(FH_SDAB | 4), "\\Device\\Harddisk27\\Partition4", exists_ntdev, S_IFBLK},
  {"/dev/sdab5", BRACK(FH_SDAB | 5), "\\Device\\Harddisk27\\Partition5", exists_ntdev, S_IFBLK},
  {"/dev/sdab6", BRACK(FH_SDAB | 6), "\\Device\\Harddisk27\\Partition6", exists_ntdev, S_IFBLK},
  {"/dev/sdab7", BRACK(FH_SDAB | 7), "\\Device\\Harddisk27\\Partition7", exists_ntdev, S_IFBLK},
  {"/dev/sdab8", BRACK(FH_SDAB | 8), "\\Device\\Harddisk27\\Partition8", exists_ntdev, S_IFBLK},
  {"/dev/sdab9", BRACK(FH_SDAB | 9), "\\Device\\Harddisk27\\Partition9", exists_ntdev, S_IFBLK},
  {"/dev/sdab10", BRACK(FH_SDAB | 10), "\\Device\\Harddisk27\\Partition10", exists_ntdev, S_IFBLK},
  {"/dev/sdab11", BRACK(FH_SDAB | 11), "\\Device\\Harddisk27\\Partition11", exists_ntdev, S_IFBLK},
  {"/dev/sdab12", BRACK(FH_SDAB | 12), "\\Device\\Harddisk27\\Partition12", exists_ntdev, S_IFBLK},
  {"/dev/sdab13", BRACK(FH_SDAB | 13), "\\Device\\Harddisk27\\Partition13", exists_ntdev, S_IFBLK},
  {"/dev/sdab14", BRACK(FH_SDAB | 14), "\\Device\\Harddisk27\\Partition14", exists_ntdev, S_IFBLK},
  {"/dev/sdab15", BRACK(FH_SDAB | 15), "\\Device\\Harddisk27\\Partition15", exists_ntdev, S_IFBLK},
  {"/dev/sdac1", BRACK(FH_SDAC | 1), "\\Device\\Harddisk28\\Partition1", exists_ntdev, S_IFBLK},
  {"/dev/sdac2", BRACK(FH_SDAC | 2), "\\Device\\Harddisk28\\Partition2", exists_ntdev, S_IFBLK},
  {"/dev/sdac3", BRACK(FH_SDAC | 3), "\\Device\\Harddisk28\\Partition3", exists_ntdev, S_IFBLK},
  {"/dev/sdac4", BRACK(FH_SDAC | 4), "\\Device\\Harddisk28\\Partition4", exists_ntdev, S_IFBLK},
  {"/dev/sdac5", BRACK(FH_SDAC | 5), "\\Device\\Harddisk28\\Partition5", exists_ntdev, S_IFBLK},
  {"/dev/sdac6", BRACK(FH_SDAC | 6), "\\Device\\Harddisk28\\Partition6", exists_ntdev, S_IFBLK},
  {"/dev/sdac7", BRACK(FH_SDAC | 7), "\\Device\\Harddisk28\\Partition7", exists_ntdev, S_IFBLK},
  {"/dev/sdac8", BRACK(FH_SDAC | 8), "\\Device\\Harddisk28\\Partition8", exists_ntdev, S_IFBLK},
  {"/dev/sdac9", BRACK(FH_SDAC | 9), "\\Device\\Harddisk28\\Partition9", exists_ntdev, S_IFBLK},
  {"/dev/sdac10", BRACK(FH_SDAC | 10), "\\Device\\Harddisk28\\Partition10", exists_ntdev, S_IFBLK},
  {"/dev/sdac11", BRACK(FH_SDAC | 11), "\\Device\\Harddisk28\\Partition11", exists_ntdev, S_IFBLK},
  {"/dev/sdac12", BRACK(FH_SDAC | 12), "\\Device\\Harddisk28\\Partition12", exists_ntdev, S_IFBLK},
  {"/dev/sdac13", BRACK(FH_SDAC | 13), "\\Device\\Harddisk28\\Partition13", exists_ntdev, S_IFBLK},
  {"/dev/sdac14", BRACK(FH_SDAC | 14), "\\Device\\Harddisk28\\Partition14", exists_ntdev, S_IFBLK},
  {"/dev/sdac15", BRACK(FH_SDAC | 15), "\\Device\\Harddisk28\\Partition15", exists_ntdev, S_IFBLK},
  {"/dev/sdad1", BRACK(FH_SDAD | 1), "\\Device\\Harddisk29\\Partition1", exists_ntdev, S_IFBLK},
  {"/dev/sdad2", BRACK(FH_SDAD | 2), "\\Device\\Harddisk29\\Partition2", exists_ntdev, S_IFBLK},
  {"/dev/sdad3", BRACK(FH_SDAD | 3), "\\Device\\Harddisk29\\Partition3", exists_ntdev, S_IFBLK},
  {"/dev/sdad4", BRACK(FH_SDAD | 4), "\\Device\\Harddisk29\\Partition4", exists_ntdev, S_IFBLK},
  {"/dev/sdad5", BRACK(FH_SDAD | 5), "\\Device\\Harddisk29\\Partition5", exists_ntdev, S_IFBLK},
  {"/dev/sdad6", BRACK(FH_SDAD | 6), "\\Device\\Harddisk29\\Partition6", exists_ntdev, S_IFBLK},
  {"/dev/sdad7", BRACK(FH_SDAD | 7), "\\Device\\Harddisk29\\Partition7", exists_ntdev, S_IFBLK},
  {"/dev/sdad8", BRACK(FH_SDAD | 8), "\\Device\\Harddisk29\\Partition8", exists_ntdev, S_IFBLK},
  {"/dev/sdad9", BRACK(FH_SDAD | 9), "\\Device\\Harddisk29\\Partition9", exists_ntdev, S_IFBLK},
  {"/dev/sdad10", BRACK(FH_SDAD | 10), "\\Device\\Harddisk29\\Partition10", exists_ntdev, S_IFBLK},
  {"/dev/sdad11", BRACK(FH_SDAD | 11), "\\Device\\Harddisk29\\Partition11", exists_ntdev, S_IFBLK},
  {"/dev/sdad12", BRACK(FH_SDAD | 12), "\\Device\\Harddisk29\\Partition12", exists_ntdev, S_IFBLK},
  {"/dev/sdad13", BRACK(FH_SDAD | 13), "\\Device\\Harddisk29\\Partition13", exists_ntdev, S_IFBLK},
  {"/dev/sdad14", BRACK(FH_SDAD | 14), "\\Device\\Harddisk29\\Partition14", exists_ntdev, S_IFBLK},
  {"/dev/sdad15", BRACK(FH_SDAD | 15), "\\Device\\Harddisk29\\Partition15", exists_ntdev, S_IFBLK},
  {"/dev/sdae1", BRACK(FH_SDAE | 1), "\\Device\\Harddisk30\\Partition1", exists_ntdev, S_IFBLK},
  {"/dev/sdae2", BRACK(FH_SDAE | 2), "\\Device\\Harddisk30\\Partition2", exists_ntdev, S_IFBLK},
  {"/dev/sdae3", BRACK(FH_SDAE | 3), "\\Device\\Harddisk30\\Partition3", exists_ntdev, S_IFBLK},
  {"/dev/sdae4", BRACK(FH_SDAE | 4), "\\Device\\Harddisk30\\Partition4", exists_ntdev, S_IFBLK},
  {"/dev/sdae5", BRACK(FH_SDAE | 5), "\\Device\\Harddisk30\\Partition5", exists_ntdev, S_IFBLK},
  {"/dev/sdae6", BRACK(FH_SDAE | 6), "\\Device\\Harddisk30\\Partition6", exists_ntdev, S_IFBLK},
  {"/dev/sdae7", BRACK(FH_SDAE | 7), "\\Device\\Harddisk30\\Partition7", exists_ntdev, S_IFBLK},
  {"/dev/sdae8", BRACK(FH_SDAE | 8), "\\Device\\Harddisk30\\Partition8", exists_ntdev, S_IFBLK},
  {"/dev/sdae9", BRACK(FH_SDAE | 9), "\\Device\\Harddisk30\\Partition9", exists_ntdev, S_IFBLK},
  {"/dev/sdae10", BRACK(FH_SDAE | 10), "\\Device\\Harddisk30\\Partition10", exists_ntdev, S_IFBLK},
  {"/dev/sdae11", BRACK(FH_SDAE | 11), "\\Device\\Harddisk30\\Partition11", exists_ntdev, S_IFBLK},
  {"/dev/sdae12", BRACK(FH_SDAE | 12), "\\Device\\Harddisk30\\Partition12", exists_ntdev, S_IFBLK},
  {"/dev/sdae13", BRACK(FH_SDAE | 13), "\\Device\\Harddisk30\\Partition13", exists_ntdev, S_IFBLK},
  {"/dev/sdae14", BRACK(FH_SDAE | 14), "\\Device\\Harddisk30\\Partition14", exists_ntdev, S_IFBLK},
  {"/dev/sdae15", BRACK(FH_SDAE | 15), "\\Device\\Harddisk30\\Partition15", exists_ntdev, S_IFBLK},
  {"/dev/sdaf1", BRACK(FH_SDAF | 1), "\\Device\\Harddisk31\\Partition1", exists_ntdev, S_IFBLK},
  {"/dev/sdaf2", BRACK(FH_SDAF | 2), "\\Device\\Harddisk31\\Partition2", exists_ntdev, S_IFBLK},
  {"/dev/sdaf3", BRACK(FH_SDAF | 3), "\\Device\\Harddisk31\\Partition3", exists_ntdev, S_IFBLK},
  {"/dev/sdaf4", BRACK(FH_SDAF | 4), "\\Device\\Harddisk31\\Partition4", exists_ntdev, S_IFBLK},
  {"/dev/sdaf5", BRACK(FH_SDAF | 5), "\\Device\\Harddisk31\\Partition5", exists_ntdev, S_IFBLK},
  {"/dev/sdaf6", BRACK(FH_SDAF | 6), "\\Device\\Harddisk31\\Partition6", exists_ntdev, S_IFBLK},
  {"/dev/sdaf7", BRACK(FH_SDAF | 7), "\\Device\\Harddisk31\\Partition7", exists_ntdev, S_IFBLK},
  {"/dev/sdaf8", BRACK(FH_SDAF | 8), "\\Device\\Harddisk31\\Partition8", exists_ntdev, S_IFBLK},
  {"/dev/sdaf9", BRACK(FH_SDAF | 9), "\\Device\\Harddisk31\\Partition9", exists_ntdev, S_IFBLK},
  {"/dev/sdaf10", BRACK(FH_SDAF | 10), "\\Device\\Harddisk31\\Partition10", exists_ntdev, S_IFBLK},
  {"/dev/sdaf11", BRACK(FH_SDAF | 11), "\\Device\\Harddisk31\\Partition11", exists_ntdev, S_IFBLK},
  {"/dev/sdaf12", BRACK(FH_SDAF | 12), "\\Device\\Harddisk31\\Partition12", exists_ntdev, S_IFBLK},
  {"/dev/sdaf13", BRACK(FH_SDAF | 13), "\\Device\\Harddisk31\\Partition13", exists_ntdev, S_IFBLK},
  {"/dev/sdaf14", BRACK(FH_SDAF | 14), "\\Device\\Harddisk31\\Partition14", exists_ntdev, S_IFBLK},
  {"/dev/sdaf15", BRACK(FH_SDAF | 15), "\\Device\\Harddisk31\\Partition15", exists_ntdev, S_IFBLK},
  {"/dev/sdag1", BRACK(FH_SDAG | 1), "\\Device\\Harddisk32\\Partition1", exists_ntdev, S_IFBLK},
  {"/dev/sdag2", BRACK(FH_SDAG | 2), "\\Device\\Harddisk32\\Partition2", exists_ntdev, S_IFBLK},
  {"/dev/sdag3", BRACK(FH_SDAG | 3), "\\Device\\Harddisk32\\Partition3", exists_ntdev, S_IFBLK},
  {"/dev/sdag4", BRACK(FH_SDAG | 4), "\\Device\\Harddisk32\\Partition4", exists_ntdev, S_IFBLK},
  {"/dev/sdag5", BRACK(FH_SDAG | 5), "\\Device\\Harddisk32\\Partition5", exists_ntdev, S_IFBLK},
  {"/dev/sdag6", BRACK(FH_SDAG | 6), "\\Device\\Harddisk32\\Partition6", exists_ntdev, S_IFBLK},
  {"/dev/sdag7", BRACK(FH_SDAG | 7), "\\Device\\Harddisk32\\Partition7", exists_ntdev, S_IFBLK},
  {"/dev/sdag8", BRACK(FH_SDAG | 8), "\\Device\\Harddisk32\\Partition8", exists_ntdev, S_IFBLK},
  {"/dev/sdag9", BRACK(FH_SDAG | 9), "\\Device\\Harddisk32\\Partition9", exists_ntdev, S_IFBLK},
  {"/dev/sdag10", BRACK(FH_SDAG | 10), "\\Device\\Harddisk32\\Partition10", exists_ntdev, S_IFBLK},
  {"/dev/sdag11", BRACK(FH_SDAG | 11), "\\Device\\Harddisk32\\Partition11", exists_ntdev, S_IFBLK},
  {"/dev/sdag12", BRACK(FH_SDAG | 12), "\\Device\\Harddisk32\\Partition12", exists_ntdev, S_IFBLK},
  {"/dev/sdag13", BRACK(FH_SDAG | 13), "\\Device\\Harddisk32\\Partition13", exists_ntdev, S_IFBLK},
  {"/dev/sdag14", BRACK(FH_SDAG | 14), "\\Device\\Harddisk32\\Partition14", exists_ntdev, S_IFBLK},
  {"/dev/sdag15", BRACK(FH_SDAG | 15), "\\Device\\Harddisk32\\Partition15", exists_ntdev, S_IFBLK},
  {"/dev/sdah1", BRACK(FH_SDAH | 1), "\\Device\\Harddisk33\\Partition1", exists_ntdev, S_IFBLK},
  {"/dev/sdah2", BRACK(FH_SDAH | 2), "\\Device\\Harddisk33\\Partition2", exists_ntdev, S_IFBLK},
  {"/dev/sdah3", BRACK(FH_SDAH | 3), "\\Device\\Harddisk33\\Partition3", exists_ntdev, S_IFBLK},
  {"/dev/sdah4", BRACK(FH_SDAH | 4), "\\Device\\Harddisk33\\Partition4", exists_ntdev, S_IFBLK},
  {"/dev/sdah5", BRACK(FH_SDAH | 5), "\\Device\\Harddisk33\\Partition5", exists_ntdev, S_IFBLK},
  {"/dev/sdah6", BRACK(FH_SDAH | 6), "\\Device\\Harddisk33\\Partition6", exists_ntdev, S_IFBLK},
  {"/dev/sdah7", BRACK(FH_SDAH | 7), "\\Device\\Harddisk33\\Partition7", exists_ntdev, S_IFBLK},
  {"/dev/sdah8", BRACK(FH_SDAH | 8), "\\Device\\Harddisk33\\Partition8", exists_ntdev, S_IFBLK},
  {"/dev/sdah9", BRACK(FH_SDAH | 9), "\\Device\\Harddisk33\\Partition9", exists_ntdev, S_IFBLK},
  {"/dev/sdah10", BRACK(FH_SDAH | 10), "\\Device\\Harddisk33\\Partition10", exists_ntdev, S_IFBLK},
  {"/dev/sdah11", BRACK(FH_SDAH | 11), "\\Device\\Harddisk33\\Partition11", exists_ntdev, S_IFBLK},
  {"/dev/sdah12", BRACK(FH_SDAH | 12), "\\Device\\Harddisk33\\Partition12", exists_ntdev, S_IFBLK},
  {"/dev/sdah13", BRACK(FH_SDAH | 13), "\\Device\\Harddisk33\\Partition13", exists_ntdev, S_IFBLK},
  {"/dev/sdah14", BRACK(FH_SDAH | 14), "\\Device\\Harddisk33\\Partition14", exists_ntdev, S_IFBLK},
  {"/dev/sdah15", BRACK(FH_SDAH | 15), "\\Device\\Harddisk33\\Partition15", exists_ntdev, S_IFBLK},
  {"/dev/sdai1", BRACK(FH_SDAI | 1), "\\Device\\Harddisk34\\Partition1", exists_ntdev, S_IFBLK},
  {"/dev/sdai2", BRACK(FH_SDAI | 2), "\\Device\\Harddisk34\\Partition2", exists_ntdev, S_IFBLK},
  {"/dev/sdai3", BRACK(FH_SDAI | 3), "\\Device\\Harddisk34\\Partition3", exists_ntdev, S_IFBLK},
  {"/dev/sdai4", BRACK(FH_SDAI | 4), "\\Device\\Harddisk34\\Partition4", exists_ntdev, S_IFBLK},
  {"/dev/sdai5", BRACK(FH_SDAI | 5), "\\Device\\Harddisk34\\Partition5", exists_ntdev, S_IFBLK},
  {"/dev/sdai6", BRACK(FH_SDAI | 6), "\\Device\\Harddisk34\\Partition6", exists_ntdev, S_IFBLK},
  {"/dev/sdai7", BRACK(FH_SDAI | 7), "\\Device\\Harddisk34\\Partition7", exists_ntdev, S_IFBLK},
  {"/dev/sdai8", BRACK(FH_SDAI | 8), "\\Device\\Harddisk34\\Partition8", exists_ntdev, S_IFBLK},
  {"/dev/sdai9", BRACK(FH_SDAI | 9), "\\Device\\Harddisk34\\Partition9", exists_ntdev, S_IFBLK},
  {"/dev/sdai10", BRACK(FH_SDAI | 10), "\\Device\\Harddisk34\\Partition10", exists_ntdev, S_IFBLK},
  {"/dev/sdai11", BRACK(FH_SDAI | 11), "\\Device\\Harddisk34\\Partition11", exists_ntdev, S_IFBLK},
  {"/dev/sdai12", BRACK(FH_SDAI | 12), "\\Device\\Harddisk34\\Partition12", exists_ntdev, S_IFBLK},
  {"/dev/sdai13", BRACK(FH_SDAI | 13), "\\Device\\Harddisk34\\Partition13", exists_ntdev, S_IFBLK},
  {"/dev/sdai14", BRACK(FH_SDAI | 14), "\\Device\\Harddisk34\\Partition14", exists_ntdev, S_IFBLK},
  {"/dev/sdai15", BRACK(FH_SDAI | 15), "\\Device\\Harddisk34\\Partition15", exists_ntdev, S_IFBLK},
  {"/dev/sdaj1", BRACK(FH_SDAJ | 1), "\\Device\\Harddisk35\\Partition1", exists_ntdev, S_IFBLK},
  {"/dev/sdaj2", BRACK(FH_SDAJ | 2), "\\Device\\Harddisk35\\Partition2", exists_ntdev, S_IFBLK},
  {"/dev/sdaj3", BRACK(FH_SDAJ | 3), "\\Device\\Harddisk35\\Partition3", exists_ntdev, S_IFBLK},
  {"/dev/sdaj4", BRACK(FH_SDAJ | 4), "\\Device\\Harddisk35\\Partition4", exists_ntdev, S_IFBLK},
  {"/dev/sdaj5", BRACK(FH_SDAJ | 5), "\\Device\\Harddisk35\\Partition5", exists_ntdev, S_IFBLK},
  {"/dev/sdaj6", BRACK(FH_SDAJ | 6), "\\Device\\Harddisk35\\Partition6", exists_ntdev, S_IFBLK},
  {"/dev/sdaj7", BRACK(FH_SDAJ | 7), "\\Device\\Harddisk35\\Partition7", exists_ntdev, S_IFBLK},
  {"/dev/sdaj8", BRACK(FH_SDAJ | 8), "\\Device\\Harddisk35\\Partition8", exists_ntdev, S_IFBLK},
  {"/dev/sdaj9", BRACK(FH_SDAJ | 9), "\\Device\\Harddisk35\\Partition9", exists_ntdev, S_IFBLK},
  {"/dev/sdaj10", BRACK(FH_SDAJ | 10), "\\Device\\Harddisk35\\Partition10", exists_ntdev, S_IFBLK},
  {"/dev/sdaj11", BRACK(FH_SDAJ | 11), "\\Device\\Harddisk35\\Partition11", exists_ntdev, S_IFBLK},
  {"/dev/sdaj12", BRACK(FH_SDAJ | 12), "\\Device\\Harddisk35\\Partition12", exists_ntdev, S_IFBLK},
  {"/dev/sdaj13", BRACK(FH_SDAJ | 13), "\\Device\\Harddisk35\\Partition13", exists_ntdev, S_IFBLK},
  {"/dev/sdaj14", BRACK(FH_SDAJ | 14), "\\Device\\Harddisk35\\Partition14", exists_ntdev, S_IFBLK},
  {"/dev/sdaj15", BRACK(FH_SDAJ | 15), "\\Device\\Harddisk35\\Partition15", exists_ntdev, S_IFBLK},
  {"/dev/sdak1", BRACK(FH_SDAK | 1), "\\Device\\Harddisk36\\Partition1", exists_ntdev, S_IFBLK},
  {"/dev/sdak2", BRACK(FH_SDAK | 2), "\\Device\\Harddisk36\\Partition2", exists_ntdev, S_IFBLK},
  {"/dev/sdak3", BRACK(FH_SDAK | 3), "\\Device\\Harddisk36\\Partition3", exists_ntdev, S_IFBLK},
  {"/dev/sdak4", BRACK(FH_SDAK | 4), "\\Device\\Harddisk36\\Partition4", exists_ntdev, S_IFBLK},
  {"/dev/sdak5", BRACK(FH_SDAK | 5), "\\Device\\Harddisk36\\Partition5", exists_ntdev, S_IFBLK},
  {"/dev/sdak6", BRACK(FH_SDAK | 6), "\\Device\\Harddisk36\\Partition6", exists_ntdev, S_IFBLK},
  {"/dev/sdak7", BRACK(FH_SDAK | 7), "\\Device\\Harddisk36\\Partition7", exists_ntdev, S_IFBLK},
  {"/dev/sdak8", BRACK(FH_SDAK | 8), "\\Device\\Harddisk36\\Partition8", exists_ntdev, S_IFBLK},
  {"/dev/sdak9", BRACK(FH_SDAK | 9), "\\Device\\Harddisk36\\Partition9", exists_ntdev, S_IFBLK},
  {"/dev/sdak10", BRACK(FH_SDAK | 10), "\\Device\\Harddisk36\\Partition10", exists_ntdev, S_IFBLK},
  {"/dev/sdak11", BRACK(FH_SDAK | 11), "\\Device\\Harddisk36\\Partition11", exists_ntdev, S_IFBLK},
  {"/dev/sdak12", BRACK(FH_SDAK | 12), "\\Device\\Harddisk36\\Partition12", exists_ntdev, S_IFBLK},
  {"/dev/sdak13", BRACK(FH_SDAK | 13), "\\Device\\Harddisk36\\Partition13", exists_ntdev, S_IFBLK},
  {"/dev/sdak14", BRACK(FH_SDAK | 14), "\\Device\\Harddisk36\\Partition14", exists_ntdev, S_IFBLK},
  {"/dev/sdak15", BRACK(FH_SDAK | 15), "\\Device\\Harddisk36\\Partition15", exists_ntdev, S_IFBLK},
  {"/dev/sdal1", BRACK(FH_SDAL | 1), "\\Device\\Harddisk37\\Partition1", exists_ntdev, S_IFBLK},
  {"/dev/sdal2", BRACK(FH_SDAL | 2), "\\Device\\Harddisk37\\Partition2", exists_ntdev, S_IFBLK},
  {"/dev/sdal3", BRACK(FH_SDAL | 3), "\\Device\\Harddisk37\\Partition3", exists_ntdev, S_IFBLK},
  {"/dev/sdal4", BRACK(FH_SDAL | 4), "\\Device\\Harddisk37\\Partition4", exists_ntdev, S_IFBLK},
  {"/dev/sdal5", BRACK(FH_SDAL | 5), "\\Device\\Harddisk37\\Partition5", exists_ntdev, S_IFBLK},
  {"/dev/sdal6", BRACK(FH_SDAL | 6), "\\Device\\Harddisk37\\Partition6", exists_ntdev, S_IFBLK},
  {"/dev/sdal7", BRACK(FH_SDAL | 7), "\\Device\\Harddisk37\\Partition7", exists_ntdev, S_IFBLK},
  {"/dev/sdal8", BRACK(FH_SDAL | 8), "\\Device\\Harddisk37\\Partition8", exists_ntdev, S_IFBLK},
  {"/dev/sdal9", BRACK(FH_SDAL | 9), "\\Device\\Harddisk37\\Partition9", exists_ntdev, S_IFBLK},
  {"/dev/sdal10", BRACK(FH_SDAL | 10), "\\Device\\Harddisk37\\Partition10", exists_ntdev, S_IFBLK},
  {"/dev/sdal11", BRACK(FH_SDAL | 11), "\\Device\\Harddisk37\\Partition11", exists_ntdev, S_IFBLK},
  {"/dev/sdal12", BRACK(FH_SDAL | 12), "\\Device\\Harddisk37\\Partition12", exists_ntdev, S_IFBLK},
  {"/dev/sdal13", BRACK(FH_SDAL | 13), "\\Device\\Harddisk37\\Partition13", exists_ntdev, S_IFBLK},
  {"/dev/sdal14", BRACK(FH_SDAL | 14), "\\Device\\Harddisk37\\Partition14", exists_ntdev, S_IFBLK},
  {"/dev/sdal15", BRACK(FH_SDAL | 15), "\\Device\\Harddisk37\\Partition15", exists_ntdev, S_IFBLK},
  {"/dev/sdam1", BRACK(FH_SDAM | 1), "\\Device\\Harddisk38\\Partition1", exists_ntdev, S_IFBLK},
  {"/dev/sdam2", BRACK(FH_SDAM | 2), "\\Device\\Harddisk38\\Partition2", exists_ntdev, S_IFBLK},
  {"/dev/sdam3", BRACK(FH_SDAM | 3), "\\Device\\Harddisk38\\Partition3", exists_ntdev, S_IFBLK},
  {"/dev/sdam4", BRACK(FH_SDAM | 4), "\\Device\\Harddisk38\\Partition4", exists_ntdev, S_IFBLK},
  {"/dev/sdam5", BRACK(FH_SDAM | 5), "\\Device\\Harddisk38\\Partition5", exists_ntdev, S_IFBLK},
  {"/dev/sdam6", BRACK(FH_SDAM | 6), "\\Device\\Harddisk38\\Partition6", exists_ntdev, S_IFBLK},
  {"/dev/sdam7", BRACK(FH_SDAM | 7), "\\Device\\Harddisk38\\Partition7", exists_ntdev, S_IFBLK},
  {"/dev/sdam8", BRACK(FH_SDAM | 8), "\\Device\\Harddisk38\\Partition8", exists_ntdev, S_IFBLK},
  {"/dev/sdam9", BRACK(FH_SDAM | 9), "\\Device\\Harddisk38\\Partition9", exists_ntdev, S_IFBLK},
  {"/dev/sdam10", BRACK(FH_SDAM | 10), "\\Device\\Harddisk38\\Partition10", exists_ntdev, S_IFBLK},
  {"/dev/sdam11", BRACK(FH_SDAM | 11), "\\Device\\Harddisk38\\Partition11", exists_ntdev, S_IFBLK},
  {"/dev/sdam12", BRACK(FH_SDAM | 12), "\\Device\\Harddisk38\\Partition12", exists_ntdev, S_IFBLK},
  {"/dev/sdam13", BRACK(FH_SDAM | 13), "\\Device\\Harddisk38\\Partition13", exists_ntdev, S_IFBLK},
  {"/dev/sdam14", BRACK(FH_SDAM | 14), "\\Device\\Harddisk38\\Partition14", exists_ntdev, S_IFBLK},
  {"/dev/sdam15", BRACK(FH_SDAM | 15), "\\Device\\Harddisk38\\Partition15", exists_ntdev, S_IFBLK},
  {"/dev/sdan1", BRACK(FH_SDAN | 1), "\\Device\\Harddisk39\\Partition1", exists_ntdev, S_IFBLK},
  {"/dev/sdan2", BRACK(FH_SDAN | 2), "\\Device\\Harddisk39\\Partition2", exists_ntdev, S_IFBLK},
  {"/dev/sdan3", BRACK(FH_SDAN | 3), "\\Device\\Harddisk39\\Partition3", exists_ntdev, S_IFBLK},
  {"/dev/sdan4", BRACK(FH_SDAN | 4), "\\Device\\Harddisk39\\Partition4", exists_ntdev, S_IFBLK},
  {"/dev/sdan5", BRACK(FH_SDAN | 5), "\\Device\\Harddisk39\\Partition5", exists_ntdev, S_IFBLK},
  {"/dev/sdan6", BRACK(FH_SDAN | 6), "\\Device\\Harddisk39\\Partition6", exists_ntdev, S_IFBLK},
  {"/dev/sdan7", BRACK(FH_SDAN | 7), "\\Device\\Harddisk39\\Partition7", exists_ntdev, S_IFBLK},
  {"/dev/sdan8", BRACK(FH_SDAN | 8), "\\Device\\Harddisk39\\Partition8", exists_ntdev, S_IFBLK},
  {"/dev/sdan9", BRACK(FH_SDAN | 9), "\\Device\\Harddisk39\\Partition9", exists_ntdev, S_IFBLK},
  {"/dev/sdan10", BRACK(FH_SDAN | 10), "\\Device\\Harddisk39\\Partition10", exists_ntdev, S_IFBLK},
  {"/dev/sdan11", BRACK(FH_SDAN | 11), "\\Device\\Harddisk39\\Partition11", exists_ntdev, S_IFBLK},
  {"/dev/sdan12", BRACK(FH_SDAN | 12), "\\Device\\Harddisk39\\Partition12", exists_ntdev, S_IFBLK},
  {"/dev/sdan13", BRACK(FH_SDAN | 13), "\\Device\\Harddisk39\\Partition13", exists_ntdev, S_IFBLK},
  {"/dev/sdan14", BRACK(FH_SDAN | 14), "\\Device\\Harddisk39\\Partition14", exists_ntdev, S_IFBLK},
  {"/dev/sdan15", BRACK(FH_SDAN | 15), "\\Device\\Harddisk39\\Partition15", exists_ntdev, S_IFBLK},
  {"/dev/sdao1", BRACK(FH_SDAO | 1), "\\Device\\Harddisk40\\Partition1", exists_ntdev, S_IFBLK},
  {"/dev/sdao2", BRACK(FH_SDAO | 2), "\\Device\\Harddisk40\\Partition2", exists_ntdev, S_IFBLK},
  {"/dev/sdao3", BRACK(FH_SDAO | 3), "\\Device\\Harddisk40\\Partition3", exists_ntdev, S_IFBLK},
  {"/dev/sdao4", BRACK(FH_SDAO | 4), "\\Device\\Harddisk40\\Partition4", exists_ntdev, S_IFBLK},
  {"/dev/sdao5", BRACK(FH_SDAO | 5), "\\Device\\Harddisk40\\Partition5", exists_ntdev, S_IFBLK},
  {"/dev/sdao6", BRACK(FH_SDAO | 6), "\\Device\\Harddisk40\\Partition6", exists_ntdev, S_IFBLK},
  {"/dev/sdao7", BRACK(FH_SDAO | 7), "\\Device\\Harddisk40\\Partition7", exists_ntdev, S_IFBLK},
  {"/dev/sdao8", BRACK(FH_SDAO | 8), "\\Device\\Harddisk40\\Partition8", exists_ntdev, S_IFBLK},
  {"/dev/sdao9", BRACK(FH_SDAO | 9), "\\Device\\Harddisk40\\Partition9", exists_ntdev, S_IFBLK},
  {"/dev/sdao10", BRACK(FH_SDAO | 10), "\\Device\\Harddisk40\\Partition10", exists_ntdev, S_IFBLK},
  {"/dev/sdao11", BRACK(FH_SDAO | 11), "\\Device\\Harddisk40\\Partition11", exists_ntdev, S_IFBLK},
  {"/dev/sdao12", BRACK(FH_SDAO | 12), "\\Device\\Harddisk40\\Partition12", exists_ntdev, S_IFBLK},
  {"/dev/sdao13", BRACK(FH_SDAO | 13), "\\Device\\Harddisk40\\Partition13", exists_ntdev, S_IFBLK},
  {"/dev/sdao14", BRACK(FH_SDAO | 14), "\\Device\\Harddisk40\\Partition14", exists_ntdev, S_IFBLK},
  {"/dev/sdao15", BRACK(FH_SDAO | 15), "\\Device\\Harddisk40\\Partition15", exists_ntdev, S_IFBLK},
  {"/dev/sdap1", BRACK(FH_SDAP | 1), "\\Device\\Harddisk41\\Partition1", exists_ntdev, S_IFBLK},
  {"/dev/sdap2", BRACK(FH_SDAP | 2), "\\Device\\Harddisk41\\Partition2", exists_ntdev, S_IFBLK},
  {"/dev/sdap3", BRACK(FH_SDAP | 3), "\\Device\\Harddisk41\\Partition3", exists_ntdev, S_IFBLK},
  {"/dev/sdap4", BRACK(FH_SDAP | 4), "\\Device\\Harddisk41\\Partition4", exists_ntdev, S_IFBLK},
  {"/dev/sdap5", BRACK(FH_SDAP | 5), "\\Device\\Harddisk41\\Partition5", exists_ntdev, S_IFBLK},
  {"/dev/sdap6", BRACK(FH_SDAP | 6), "\\Device\\Harddisk41\\Partition6", exists_ntdev, S_IFBLK},
  {"/dev/sdap7", BRACK(FH_SDAP | 7), "\\Device\\Harddisk41\\Partition7", exists_ntdev, S_IFBLK},
  {"/dev/sdap8", BRACK(FH_SDAP | 8), "\\Device\\Harddisk41\\Partition8", exists_ntdev, S_IFBLK},
  {"/dev/sdap9", BRACK(FH_SDAP | 9), "\\Device\\Harddisk41\\Partition9", exists_ntdev, S_IFBLK},
  {"/dev/sdap10", BRACK(FH_SDAP | 10), "\\Device\\Harddisk41\\Partition10", exists_ntdev, S_IFBLK},
  {"/dev/sdap11", BRACK(FH_SDAP | 11), "\\Device\\Harddisk41\\Partition11", exists_ntdev, S_IFBLK},
  {"/dev/sdap12", BRACK(FH_SDAP | 12), "\\Device\\Harddisk41\\Partition12", exists_ntdev, S_IFBLK},
  {"/dev/sdap13", BRACK(FH_SDAP | 13), "\\Device\\Harddisk41\\Partition13", exists_ntdev, S_IFBLK},
  {"/dev/sdap14", BRACK(FH_SDAP | 14), "\\Device\\Harddisk41\\Partition14", exists_ntdev, S_IFBLK},
  {"/dev/sdap15", BRACK(FH_SDAP | 15), "\\Device\\Harddisk41\\Partition15", exists_ntdev, S_IFBLK},
  {"/dev/sdaq1", BRACK(FH_SDAQ | 1), "\\Device\\Harddisk42\\Partition1", exists_ntdev, S_IFBLK},
  {"/dev/sdaq2", BRACK(FH_SDAQ | 2), "\\Device\\Harddisk42\\Partition2", exists_ntdev, S_IFBLK},
  {"/dev/sdaq3", BRACK(FH_SDAQ | 3), "\\Device\\Harddisk42\\Partition3", exists_ntdev, S_IFBLK},
  {"/dev/sdaq4", BRACK(FH_SDAQ | 4), "\\Device\\Harddisk42\\Partition4", exists_ntdev, S_IFBLK},
  {"/dev/sdaq5", BRACK(FH_SDAQ | 5), "\\Device\\Harddisk42\\Partition5", exists_ntdev, S_IFBLK},
  {"/dev/sdaq6", BRACK(FH_SDAQ | 6), "\\Device\\Harddisk42\\Partition6", exists_ntdev, S_IFBLK},
  {"/dev/sdaq7", BRACK(FH_SDAQ | 7), "\\Device\\Harddisk42\\Partition7", exists_ntdev, S_IFBLK},
  {"/dev/sdaq8", BRACK(FH_SDAQ | 8), "\\Device\\Harddisk42\\Partition8", exists_ntdev, S_IFBLK},
  {"/dev/sdaq9", BRACK(FH_SDAQ | 9), "\\Device\\Harddisk42\\Partition9", exists_ntdev, S_IFBLK},
  {"/dev/sdaq10", BRACK(FH_SDAQ | 10), "\\Device\\Harddisk42\\Partition10", exists_ntdev, S_IFBLK},
  {"/dev/sdaq11", BRACK(FH_SDAQ | 11), "\\Device\\Harddisk42\\Partition11", exists_ntdev, S_IFBLK},
  {"/dev/sdaq12", BRACK(FH_SDAQ | 12), "\\Device\\Harddisk42\\Partition12", exists_ntdev, S_IFBLK},
  {"/dev/sdaq13", BRACK(FH_SDAQ | 13), "\\Device\\Harddisk42\\Partition13", exists_ntdev, S_IFBLK},
  {"/dev/sdaq14", BRACK(FH_SDAQ | 14), "\\Device\\Harddisk42\\Partition14", exists_ntdev, S_IFBLK},
  {"/dev/sdaq15", BRACK(FH_SDAQ | 15), "\\Device\\Harddisk42\\Partition15", exists_ntdev, S_IFBLK},
  {"/dev/sdar1", BRACK(FH_SDAR | 1), "\\Device\\Harddisk43\\Partition1", exists_ntdev, S_IFBLK},
  {"/dev/sdar2", BRACK(FH_SDAR | 2), "\\Device\\Harddisk43\\Partition2", exists_ntdev, S_IFBLK},
  {"/dev/sdar3", BRACK(FH_SDAR | 3), "\\Device\\Harddisk43\\Partition3", exists_ntdev, S_IFBLK},
  {"/dev/sdar4", BRACK(FH_SDAR | 4), "\\Device\\Harddisk43\\Partition4", exists_ntdev, S_IFBLK},
  {"/dev/sdar5", BRACK(FH_SDAR | 5), "\\Device\\Harddisk43\\Partition5", exists_ntdev, S_IFBLK},
  {"/dev/sdar6", BRACK(FH_SDAR | 6), "\\Device\\Harddisk43\\Partition6", exists_ntdev, S_IFBLK},
  {"/dev/sdar7", BRACK(FH_SDAR | 7), "\\Device\\Harddisk43\\Partition7", exists_ntdev, S_IFBLK},
  {"/dev/sdar8", BRACK(FH_SDAR | 8), "\\Device\\Harddisk43\\Partition8", exists_ntdev, S_IFBLK},
  {"/dev/sdar9", BRACK(FH_SDAR | 9), "\\Device\\Harddisk43\\Partition9", exists_ntdev, S_IFBLK},
  {"/dev/sdar10", BRACK(FH_SDAR | 10), "\\Device\\Harddisk43\\Partition10", exists_ntdev, S_IFBLK},
  {"/dev/sdar11", BRACK(FH_SDAR | 11), "\\Device\\Harddisk43\\Partition11", exists_ntdev, S_IFBLK},
  {"/dev/sdar12", BRACK(FH_SDAR | 12), "\\Device\\Harddisk43\\Partition12", exists_ntdev, S_IFBLK},
  {"/dev/sdar13", BRACK(FH_SDAR | 13), "\\Device\\Harddisk43\\Partition13", exists_ntdev, S_IFBLK},
  {"/dev/sdar14", BRACK(FH_SDAR | 14), "\\Device\\Harddisk43\\Partition14", exists_ntdev, S_IFBLK},
  {"/dev/sdar15", BRACK(FH_SDAR | 15), "\\Device\\Harddisk43\\Partition15", exists_ntdev, S_IFBLK},
  {"/dev/sdas1", BRACK(FH_SDAS | 1), "\\Device\\Harddisk44\\Partition1", exists_ntdev, S_IFBLK},
  {"/dev/sdas2", BRACK(FH_SDAS | 2), "\\Device\\Harddisk44\\Partition2", exists_ntdev, S_IFBLK},
  {"/dev/sdas3", BRACK(FH_SDAS | 3), "\\Device\\Harddisk44\\Partition3", exists_ntdev, S_IFBLK},
  {"/dev/sdas4", BRACK(FH_SDAS | 4), "\\Device\\Harddisk44\\Partition4", exists_ntdev, S_IFBLK},
  {"/dev/sdas5", BRACK(FH_SDAS | 5), "\\Device\\Harddisk44\\Partition5", exists_ntdev, S_IFBLK},
  {"/dev/sdas6", BRACK(FH_SDAS | 6), "\\Device\\Harddisk44\\Partition6", exists_ntdev, S_IFBLK},
  {"/dev/sdas7", BRACK(FH_SDAS | 7), "\\Device\\Harddisk44\\Partition7", exists_ntdev, S_IFBLK},
  {"/dev/sdas8", BRACK(FH_SDAS | 8), "\\Device\\Harddisk44\\Partition8", exists_ntdev, S_IFBLK},
  {"/dev/sdas9", BRACK(FH_SDAS | 9), "\\Device\\Harddisk44\\Partition9", exists_ntdev, S_IFBLK},
  {"/dev/sdas10", BRACK(FH_SDAS | 10), "\\Device\\Harddisk44\\Partition10", exists_ntdev, S_IFBLK},
  {"/dev/sdas11", BRACK(FH_SDAS | 11), "\\Device\\Harddisk44\\Partition11", exists_ntdev, S_IFBLK},
  {"/dev/sdas12", BRACK(FH_SDAS | 12), "\\Device\\Harddisk44\\Partition12", exists_ntdev, S_IFBLK},
  {"/dev/sdas13", BRACK(FH_SDAS | 13), "\\Device\\Harddisk44\\Partition13", exists_ntdev, S_IFBLK},
  {"/dev/sdas14", BRACK(FH_SDAS | 14), "\\Device\\Harddisk44\\Partition14", exists_ntdev, S_IFBLK},
  {"/dev/sdas15", BRACK(FH_SDAS | 15), "\\Device\\Harddisk44\\Partition15", exists_ntdev, S_IFBLK},
  {"/dev/sdat1", BRACK(FH_SDAT | 1), "\\Device\\Harddisk45\\Partition1", exists_ntdev, S_IFBLK},
  {"/dev/sdat2", BRACK(FH_SDAT | 2), "\\Device\\Harddisk45\\Partition2", exists_ntdev, S_IFBLK},
  {"/dev/sdat3", BRACK(FH_SDAT | 3), "\\Device\\Harddisk45\\Partition3", exists_ntdev, S_IFBLK},
  {"/dev/sdat4", BRACK(FH_SDAT | 4), "\\Device\\Harddisk45\\Partition4", exists_ntdev, S_IFBLK},
  {"/dev/sdat5", BRACK(FH_SDAT | 5), "\\Device\\Harddisk45\\Partition5", exists_ntdev, S_IFBLK},
  {"/dev/sdat6", BRACK(FH_SDAT | 6), "\\Device\\Harddisk45\\Partition6", exists_ntdev, S_IFBLK},
  {"/dev/sdat7", BRACK(FH_SDAT | 7), "\\Device\\Harddisk45\\Partition7", exists_ntdev, S_IFBLK},
  {"/dev/sdat8", BRACK(FH_SDAT | 8), "\\Device\\Harddisk45\\Partition8", exists_ntdev, S_IFBLK},
  {"/dev/sdat9", BRACK(FH_SDAT | 9), "\\Device\\Harddisk45\\Partition9", exists_ntdev, S_IFBLK},
  {"/dev/sdat10", BRACK(FH_SDAT | 10), "\\Device\\Harddisk45\\Partition10", exists_ntdev, S_IFBLK},
  {"/dev/sdat11", BRACK(FH_SDAT | 11), "\\Device\\Harddisk45\\Partition11", exists_ntdev, S_IFBLK},
  {"/dev/sdat12", BRACK(FH_SDAT | 12), "\\Device\\Harddisk45\\Partition12", exists_ntdev, S_IFBLK},
  {"/dev/sdat13", BRACK(FH_SDAT | 13), "\\Device\\Harddisk45\\Partition13", exists_ntdev, S_IFBLK},
  {"/dev/sdat14", BRACK(FH_SDAT | 14), "\\Device\\Harddisk45\\Partition14", exists_ntdev, S_IFBLK},
  {"/dev/sdat15", BRACK(FH_SDAT | 15), "\\Device\\Harddisk45\\Partition15", exists_ntdev, S_IFBLK},
  {"/dev/sdau1", BRACK(FH_SDAU | 1), "\\Device\\Harddisk46\\Partition1", exists_ntdev, S_IFBLK},
  {"/dev/sdau2", BRACK(FH_SDAU | 2), "\\Device\\Harddisk46\\Partition2", exists_ntdev, S_IFBLK},
  {"/dev/sdau3", BRACK(FH_SDAU | 3), "\\Device\\Harddisk46\\Partition3", exists_ntdev, S_IFBLK},
  {"/dev/sdau4", BRACK(FH_SDAU | 4), "\\Device\\Harddisk46\\Partition4", exists_ntdev, S_IFBLK},
  {"/dev/sdau5", BRACK(FH_SDAU | 5), "\\Device\\Harddisk46\\Partition5", exists_ntdev, S_IFBLK},
  {"/dev/sdau6", BRACK(FH_SDAU | 6), "\\Device\\Harddisk46\\Partition6", exists_ntdev, S_IFBLK},
  {"/dev/sdau7", BRACK(FH_SDAU | 7), "\\Device\\Harddisk46\\Partition7", exists_ntdev, S_IFBLK},
  {"/dev/sdau8", BRACK(FH_SDAU | 8), "\\Device\\Harddisk46\\Partition8", exists_ntdev, S_IFBLK},
  {"/dev/sdau9", BRACK(FH_SDAU | 9), "\\Device\\Harddisk46\\Partition9", exists_ntdev, S_IFBLK},
  {"/dev/sdau10", BRACK(FH_SDAU | 10), "\\Device\\Harddisk46\\Partition10", exists_ntdev, S_IFBLK},
  {"/dev/sdau11", BRACK(FH_SDAU | 11), "\\Device\\Harddisk46\\Partition11", exists_ntdev, S_IFBLK},
  {"/dev/sdau12", BRACK(FH_SDAU | 12), "\\Device\\Harddisk46\\Partition12", exists_ntdev, S_IFBLK},
  {"/dev/sdau13", BRACK(FH_SDAU | 13), "\\Device\\Harddisk46\\Partition13", exists_ntdev, S_IFBLK},
  {"/dev/sdau14", BRACK(FH_SDAU | 14), "\\Device\\Harddisk46\\Partition14", exists_ntdev, S_IFBLK},
  {"/dev/sdau15", BRACK(FH_SDAU | 15), "\\Device\\Harddisk46\\Partition15", exists_ntdev, S_IFBLK},
  {"/dev/sdav1", BRACK(FH_SDAV | 1), "\\Device\\Harddisk47\\Partition1", exists_ntdev, S_IFBLK},
  {"/dev/sdav2", BRACK(FH_SDAV | 2), "\\Device\\Harddisk47\\Partition2", exists_ntdev, S_IFBLK},
  {"/dev/sdav3", BRACK(FH_SDAV | 3), "\\Device\\Harddisk47\\Partition3", exists_ntdev, S_IFBLK},
  {"/dev/sdav4", BRACK(FH_SDAV | 4), "\\Device\\Harddisk47\\Partition4", exists_ntdev, S_IFBLK},
  {"/dev/sdav5", BRACK(FH_SDAV | 5), "\\Device\\Harddisk47\\Partition5", exists_ntdev, S_IFBLK},
  {"/dev/sdav6", BRACK(FH_SDAV | 6), "\\Device\\Harddisk47\\Partition6", exists_ntdev, S_IFBLK},
  {"/dev/sdav7", BRACK(FH_SDAV | 7), "\\Device\\Harddisk47\\Partition7", exists_ntdev, S_IFBLK},
  {"/dev/sdav8", BRACK(FH_SDAV | 8), "\\Device\\Harddisk47\\Partition8", exists_ntdev, S_IFBLK},
  {"/dev/sdav9", BRACK(FH_SDAV | 9), "\\Device\\Harddisk47\\Partition9", exists_ntdev, S_IFBLK},
  {"/dev/sdav10", BRACK(FH_SDAV | 10), "\\Device\\Harddisk47\\Partition10", exists_ntdev, S_IFBLK},
  {"/dev/sdav11", BRACK(FH_SDAV | 11), "\\Device\\Harddisk47\\Partition11", exists_ntdev, S_IFBLK},
  {"/dev/sdav12", BRACK(FH_SDAV | 12), "\\Device\\Harddisk47\\Partition12", exists_ntdev, S_IFBLK},
  {"/dev/sdav13", BRACK(FH_SDAV | 13), "\\Device\\Harddisk47\\Partition13", exists_ntdev, S_IFBLK},
  {"/dev/sdav14", BRACK(FH_SDAV | 14), "\\Device\\Harddisk47\\Partition14", exists_ntdev, S_IFBLK},
  {"/dev/sdav15", BRACK(FH_SDAV | 15), "\\Device\\Harddisk47\\Partition15", exists_ntdev, S_IFBLK},
  {"/dev/sdaw1", BRACK(FH_SDAW | 1), "\\Device\\Harddisk48\\Partition1", exists_ntdev, S_IFBLK},
  {"/dev/sdaw2", BRACK(FH_SDAW | 2), "\\Device\\Harddisk48\\Partition2", exists_ntdev, S_IFBLK},
  {"/dev/sdaw3", BRACK(FH_SDAW | 3), "\\Device\\Harddisk48\\Partition3", exists_ntdev, S_IFBLK},
  {"/dev/sdaw4", BRACK(FH_SDAW | 4), "\\Device\\Harddisk48\\Partition4", exists_ntdev, S_IFBLK},
  {"/dev/sdaw5", BRACK(FH_SDAW | 5), "\\Device\\Harddisk48\\Partition5", exists_ntdev, S_IFBLK},
  {"/dev/sdaw6", BRACK(FH_SDAW | 6), "\\Device\\Harddisk48\\Partition6", exists_ntdev, S_IFBLK},
  {"/dev/sdaw7", BRACK(FH_SDAW | 7), "\\Device\\Harddisk48\\Partition7", exists_ntdev, S_IFBLK},
  {"/dev/sdaw8", BRACK(FH_SDAW | 8), "\\Device\\Harddisk48\\Partition8", exists_ntdev, S_IFBLK},
  {"/dev/sdaw9", BRACK(FH_SDAW | 9), "\\Device\\Harddisk48\\Partition9", exists_ntdev, S_IFBLK},
  {"/dev/sdaw10", BRACK(FH_SDAW | 10), "\\Device\\Harddisk48\\Partition10", exists_ntdev, S_IFBLK},
  {"/dev/sdaw11", BRACK(FH_SDAW | 11), "\\Device\\Harddisk48\\Partition11", exists_ntdev, S_IFBLK},
  {"/dev/sdaw12", BRACK(FH_SDAW | 12), "\\Device\\Harddisk48\\Partition12", exists_ntdev, S_IFBLK},
  {"/dev/sdaw13", BRACK(FH_SDAW | 13), "\\Device\\Harddisk48\\Partition13", exists_ntdev, S_IFBLK},
  {"/dev/sdaw14", BRACK(FH_SDAW | 14), "\\Device\\Harddisk48\\Partition14", exists_ntdev, S_IFBLK},
  {"/dev/sdaw15", BRACK(FH_SDAW | 15), "\\Device\\Harddisk48\\Partition15", exists_ntdev, S_IFBLK},
  {"/dev/sdax1", BRACK(FH_SDAX | 1), "\\Device\\Harddisk49\\Partition1", exists_ntdev, S_IFBLK},
  {"/dev/sdax2", BRACK(FH_SDAX | 2), "\\Device\\Harddisk49\\Partition2", exists_ntdev, S_IFBLK},
  {"/dev/sdax3", BRACK(FH_SDAX | 3), "\\Device\\Harddisk49\\Partition3", exists_ntdev, S_IFBLK},
  {"/dev/sdax4", BRACK(FH_SDAX | 4), "\\Device\\Harddisk49\\Partition4", exists_ntdev, S_IFBLK},
  {"/dev/sdax5", BRACK(FH_SDAX | 5), "\\Device\\Harddisk49\\Partition5", exists_ntdev, S_IFBLK},
  {"/dev/sdax6", BRACK(FH_SDAX | 6), "\\Device\\Harddisk49\\Partition6", exists_ntdev, S_IFBLK},
  {"/dev/sdax7", BRACK(FH_SDAX | 7), "\\Device\\Harddisk49\\Partition7", exists_ntdev, S_IFBLK},
  {"/dev/sdax8", BRACK(FH_SDAX | 8), "\\Device\\Harddisk49\\Partition8", exists_ntdev, S_IFBLK},
  {"/dev/sdax9", BRACK(FH_SDAX | 9), "\\Device\\Harddisk49\\Partition9", exists_ntdev, S_IFBLK},
  {"/dev/sdax10", BRACK(FH_SDAX | 10), "\\Device\\Harddisk49\\Partition10", exists_ntdev, S_IFBLK},
  {"/dev/sdax11", BRACK(FH_SDAX | 11), "\\Device\\Harddisk49\\Partition11", exists_ntdev, S_IFBLK},
  {"/dev/sdax12", BRACK(FH_SDAX | 12), "\\Device\\Harddisk49\\Partition12", exists_ntdev, S_IFBLK},
  {"/dev/sdax13", BRACK(FH_SDAX | 13), "\\Device\\Harddisk49\\Partition13", exists_ntdev, S_IFBLK},
  {"/dev/sdax14", BRACK(FH_SDAX | 14), "\\Device\\Harddisk49\\Partition14", exists_ntdev, S_IFBLK},
  {"/dev/sdax15", BRACK(FH_SDAX | 15), "\\Device\\Harddisk49\\Partition15", exists_ntdev, S_IFBLK},
  {"/dev/sday1", BRACK(FH_SDAY | 1), "\\Device\\Harddisk50\\Partition1", exists_ntdev, S_IFBLK},
  {"/dev/sday2", BRACK(FH_SDAY | 2), "\\Device\\Harddisk50\\Partition2", exists_ntdev, S_IFBLK},
  {"/dev/sday3", BRACK(FH_SDAY | 3), "\\Device\\Harddisk50\\Partition3", exists_ntdev, S_IFBLK},
  {"/dev/sday4", BRACK(FH_SDAY | 4), "\\Device\\Harddisk50\\Partition4", exists_ntdev, S_IFBLK},
  {"/dev/sday5", BRACK(FH_SDAY | 5), "\\Device\\Harddisk50\\Partition5", exists_ntdev, S_IFBLK},
  {"/dev/sday6", BRACK(FH_SDAY | 6), "\\Device\\Harddisk50\\Partition6", exists_ntdev, S_IFBLK},
  {"/dev/sday7", BRACK(FH_SDAY | 7), "\\Device\\Harddisk50\\Partition7", exists_ntdev, S_IFBLK},
  {"/dev/sday8", BRACK(FH_SDAY | 8), "\\Device\\Harddisk50\\Partition8", exists_ntdev, S_IFBLK},
  {"/dev/sday9", BRACK(FH_SDAY | 9), "\\Device\\Harddisk50\\Partition9", exists_ntdev, S_IFBLK},
  {"/dev/sday10", BRACK(FH_SDAY | 10), "\\Device\\Harddisk50\\Partition10", exists_ntdev, S_IFBLK},
  {"/dev/sday11", BRACK(FH_SDAY | 11), "\\Device\\Harddisk50\\Partition11", exists_ntdev, S_IFBLK},
  {"/dev/sday12", BRACK(FH_SDAY | 12), "\\Device\\Harddisk50\\Partition12", exists_ntdev, S_IFBLK},
  {"/dev/sday13", BRACK(FH_SDAY | 13), "\\Device\\Harddisk50\\Partition13", exists_ntdev, S_IFBLK},
  {"/dev/sday14", BRACK(FH_SDAY | 14), "\\Device\\Harddisk50\\Partition14", exists_ntdev, S_IFBLK},
  {"/dev/sday15", BRACK(FH_SDAY | 15), "\\Device\\Harddisk50\\Partition15", exists_ntdev, S_IFBLK},
  {"/dev/sdaz1", BRACK(FH_SDAZ | 1), "\\Device\\Harddisk51\\Partition1", exists_ntdev, S_IFBLK},
  {"/dev/sdaz2", BRACK(FH_SDAZ | 2), "\\Device\\Harddisk51\\Partition2", exists_ntdev, S_IFBLK},
  {"/dev/sdaz3", BRACK(FH_SDAZ | 3), "\\Device\\Harddisk51\\Partition3", exists_ntdev, S_IFBLK},
  {"/dev/sdaz4", BRACK(FH_SDAZ | 4), "\\Device\\Harddisk51\\Partition4", exists_ntdev, S_IFBLK},
  {"/dev/sdaz5", BRACK(FH_SDAZ | 5), "\\Device\\Harddisk51\\Partition5", exists_ntdev, S_IFBLK},
  {"/dev/sdaz6", BRACK(FH_SDAZ | 6), "\\Device\\Harddisk51\\Partition6", exists_ntdev, S_IFBLK},
  {"/dev/sdaz7", BRACK(FH_SDAZ | 7), "\\Device\\Harddisk51\\Partition7", exists_ntdev, S_IFBLK},
  {"/dev/sdaz8", BRACK(FH_SDAZ | 8), "\\Device\\Harddisk51\\Partition8", exists_ntdev, S_IFBLK},
  {"/dev/sdaz9", BRACK(FH_SDAZ | 9), "\\Device\\Harddisk51\\Partition9", exists_ntdev, S_IFBLK},
  {"/dev/sdaz10", BRACK(FH_SDAZ | 10), "\\Device\\Harddisk51\\Partition10", exists_ntdev, S_IFBLK},
  {"/dev/sdaz11", BRACK(FH_SDAZ | 11), "\\Device\\Harddisk51\\Partition11", exists_ntdev, S_IFBLK},
  {"/dev/sdaz12", BRACK(FH_SDAZ | 12), "\\Device\\Harddisk51\\Partition12", exists_ntdev, S_IFBLK},
  {"/dev/sdaz13", BRACK(FH_SDAZ | 13), "\\Device\\Harddisk51\\Partition13", exists_ntdev, S_IFBLK},
  {"/dev/sdaz14", BRACK(FH_SDAZ | 14), "\\Device\\Harddisk51\\Partition14", exists_ntdev, S_IFBLK},
  {"/dev/sdaz15", BRACK(FH_SDAZ | 15), "\\Device\\Harddisk51\\Partition15", exists_ntdev, S_IFBLK},
  {"/dev/sdba", BRACK(FH_SDBA), "\\Device\\Harddisk52\\Partition0", exists_ntdev, S_IFBLK},
  {"/dev/sdbb", BRACK(FH_SDBB), "\\Device\\Harddisk53\\Partition0", exists_ntdev, S_IFBLK},
  {"/dev/sdbc", BRACK(FH_SDBC), "\\Device\\Harddisk54\\Partition0", exists_ntdev, S_IFBLK},
  {"/dev/sdbd", BRACK(FH_SDBD), "\\Device\\Harddisk55\\Partition0", exists_ntdev, S_IFBLK},
  {"/dev/sdbe", BRACK(FH_SDBE), "\\Device\\Harddisk56\\Partition0", exists_ntdev, S_IFBLK},
  {"/dev/sdbf", BRACK(FH_SDBF), "\\Device\\Harddisk57\\Partition0", exists_ntdev, S_IFBLK},
  {"/dev/sdbg", BRACK(FH_SDBG), "\\Device\\Harddisk58\\Partition0", exists_ntdev, S_IFBLK},
  {"/dev/sdbh", BRACK(FH_SDBH), "\\Device\\Harddisk59\\Partition0", exists_ntdev, S_IFBLK},
  {"/dev/sdbi", BRACK(FH_SDBI), "\\Device\\Harddisk60\\Partition0", exists_ntdev, S_IFBLK},
  {"/dev/sdbj", BRACK(FH_SDBJ), "\\Device\\Harddisk61\\Partition0", exists_ntdev, S_IFBLK},
  {"/dev/sdbk", BRACK(FH_SDBK), "\\Device\\Harddisk62\\Partition0", exists_ntdev, S_IFBLK},
  {"/dev/sdbl", BRACK(FH_SDBL), "\\Device\\Harddisk63\\Partition0", exists_ntdev, S_IFBLK},
  {"/dev/sdbm", BRACK(FH_SDBM), "\\Device\\Harddisk64\\Partition0", exists_ntdev, S_IFBLK},
  {"/dev/sdbn", BRACK(FH_SDBN), "\\Device\\Harddisk65\\Partition0", exists_ntdev, S_IFBLK},
  {"/dev/sdbo", BRACK(FH_SDBO), "\\Device\\Harddisk66\\Partition0", exists_ntdev, S_IFBLK},
  {"/dev/sdbp", BRACK(FH_SDBP), "\\Device\\Harddisk67\\Partition0", exists_ntdev, S_IFBLK},
  {"/dev/sdbq", BRACK(FH_SDBQ), "\\Device\\Harddisk68\\Partition0", exists_ntdev, S_IFBLK},
  {"/dev/sdbr", BRACK(FH_SDBR), "\\Device\\Harddisk69\\Partition0", exists_ntdev, S_IFBLK},
  {"/dev/sdbs", BRACK(FH_SDBS), "\\Device\\Harddisk70\\Partition0", exists_ntdev, S_IFBLK},
  {"/dev/sdbt", BRACK(FH_SDBT), "\\Device\\Harddisk71\\Partition0", exists_ntdev, S_IFBLK},
  {"/dev/sdbu", BRACK(FH_SDBU), "\\Device\\Harddisk72\\Partition0", exists_ntdev, S_IFBLK},
  {"/dev/sdbv", BRACK(FH_SDBV), "\\Device\\Harddisk73\\Partition0", exists_ntdev, S_IFBLK},
  {"/dev/sdbw", BRACK(FH_SDBW), "\\Device\\Harddisk74\\Partition0", exists_ntdev, S_IFBLK},
  {"/dev/sdbx", BRACK(FH_SDBX), "\\Device\\Harddisk75\\Partition0", exists_ntdev, S_IFBLK},
  {"/dev/sdby", BRACK(FH_SDBY), "\\Device\\Harddisk76\\Partition0", exists_ntdev, S_IFBLK},
  {"/dev/sdbz", BRACK(FH_SDBZ), "\\Device\\Harddisk77\\Partition0", exists_ntdev, S_IFBLK},
  {"/dev/sdba1", BRACK(FH_SDBA | 1), "\\Device\\Harddisk52\\Partition1", exists_ntdev, S_IFBLK},
  {"/dev/sdba2", BRACK(FH_SDBA | 2), "\\Device\\Harddisk52\\Partition2", exists_ntdev, S_IFBLK},
  {"/dev/sdba3", BRACK(FH_SDBA | 3), "\\Device\\Harddisk52\\Partition3", exists_ntdev, S_IFBLK},
  {"/dev/sdba4", BRACK(FH_SDBA | 4), "\\Device\\Harddisk52\\Partition4", exists_ntdev, S_IFBLK},
  {"/dev/sdba5", BRACK(FH_SDBA | 5), "\\Device\\Harddisk52\\Partition5", exists_ntdev, S_IFBLK},
  {"/dev/sdba6", BRACK(FH_SDBA | 6), "\\Device\\Harddisk52\\Partition6", exists_ntdev, S_IFBLK},
  {"/dev/sdba7", BRACK(FH_SDBA | 7), "\\Device\\Harddisk52\\Partition7", exists_ntdev, S_IFBLK},
  {"/dev/sdba8", BRACK(FH_SDBA | 8), "\\Device\\Harddisk52\\Partition8", exists_ntdev, S_IFBLK},
  {"/dev/sdba9", BRACK(FH_SDBA | 9), "\\Device\\Harddisk52\\Partition9", exists_ntdev, S_IFBLK},
  {"/dev/sdba10", BRACK(FH_SDBA | 10), "\\Device\\Harddisk52\\Partition10", exists_ntdev, S_IFBLK},
  {"/dev/sdba11", BRACK(FH_SDBA | 11), "\\Device\\Harddisk52\\Partition11", exists_ntdev, S_IFBLK},
  {"/dev/sdba12", BRACK(FH_SDBA | 12), "\\Device\\Harddisk52\\Partition12", exists_ntdev, S_IFBLK},
  {"/dev/sdba13", BRACK(FH_SDBA | 13), "\\Device\\Harddisk52\\Partition13", exists_ntdev, S_IFBLK},
  {"/dev/sdba14", BRACK(FH_SDBA | 14), "\\Device\\Harddisk52\\Partition14", exists_ntdev, S_IFBLK},
  {"/dev/sdba15", BRACK(FH_SDBA | 15), "\\Device\\Harddisk52\\Partition15", exists_ntdev, S_IFBLK},
  {"/dev/sdbb1", BRACK(FH_SDBB | 1), "\\Device\\Harddisk53\\Partition1", exists_ntdev, S_IFBLK},
  {"/dev/sdbb2", BRACK(FH_SDBB | 2), "\\Device\\Harddisk53\\Partition2", exists_ntdev, S_IFBLK},
  {"/dev/sdbb3", BRACK(FH_SDBB | 3), "\\Device\\Harddisk53\\Partition3", exists_ntdev, S_IFBLK},
  {"/dev/sdbb4", BRACK(FH_SDBB | 4), "\\Device\\Harddisk53\\Partition4", exists_ntdev, S_IFBLK},
  {"/dev/sdbb5", BRACK(FH_SDBB | 5), "\\Device\\Harddisk53\\Partition5", exists_ntdev, S_IFBLK},
  {"/dev/sdbb6", BRACK(FH_SDBB | 6), "\\Device\\Harddisk53\\Partition6", exists_ntdev, S_IFBLK},
  {"/dev/sdbb7", BRACK(FH_SDBB | 7), "\\Device\\Harddisk53\\Partition7", exists_ntdev, S_IFBLK},
  {"/dev/sdbb8", BRACK(FH_SDBB | 8), "\\Device\\Harddisk53\\Partition8", exists_ntdev, S_IFBLK},
  {"/dev/sdbb9", BRACK(FH_SDBB | 9), "\\Device\\Harddisk53\\Partition9", exists_ntdev, S_IFBLK},
  {"/dev/sdbb10", BRACK(FH_SDBB | 10), "\\Device\\Harddisk53\\Partition10", exists_ntdev, S_IFBLK},
  {"/dev/sdbb11", BRACK(FH_SDBB | 11), "\\Device\\Harddisk53\\Partition11", exists_ntdev, S_IFBLK},
  {"/dev/sdbb12", BRACK(FH_SDBB | 12), "\\Device\\Harddisk53\\Partition12", exists_ntdev, S_IFBLK},
  {"/dev/sdbb13", BRACK(FH_SDBB | 13), "\\Device\\Harddisk53\\Partition13", exists_ntdev, S_IFBLK},
  {"/dev/sdbb14", BRACK(FH_SDBB | 14), "\\Device\\Harddisk53\\Partition14", exists_ntdev, S_IFBLK},
  {"/dev/sdbb15", BRACK(FH_SDBB | 15), "\\Device\\Harddisk53\\Partition15", exists_ntdev, S_IFBLK},
  {"/dev/sdbc1", BRACK(FH_SDBC | 1), "\\Device\\Harddisk54\\Partition1", exists_ntdev, S_IFBLK},
  {"/dev/sdbc2", BRACK(FH_SDBC | 2), "\\Device\\Harddisk54\\Partition2", exists_ntdev, S_IFBLK},
  {"/dev/sdbc3", BRACK(FH_SDBC | 3), "\\Device\\Harddisk54\\Partition3", exists_ntdev, S_IFBLK},
  {"/dev/sdbc4", BRACK(FH_SDBC | 4), "\\Device\\Harddisk54\\Partition4", exists_ntdev, S_IFBLK},
  {"/dev/sdbc5", BRACK(FH_SDBC | 5), "\\Device\\Harddisk54\\Partition5", exists_ntdev, S_IFBLK},
  {"/dev/sdbc6", BRACK(FH_SDBC | 6), "\\Device\\Harddisk54\\Partition6", exists_ntdev, S_IFBLK},
  {"/dev/sdbc7", BRACK(FH_SDBC | 7), "\\Device\\Harddisk54\\Partition7", exists_ntdev, S_IFBLK},
  {"/dev/sdbc8", BRACK(FH_SDBC | 8), "\\Device\\Harddisk54\\Partition8", exists_ntdev, S_IFBLK},
  {"/dev/sdbc9", BRACK(FH_SDBC | 9), "\\Device\\Harddisk54\\Partition9", exists_ntdev, S_IFBLK},
  {"/dev/sdbc10", BRACK(FH_SDBC | 10), "\\Device\\Harddisk54\\Partition10", exists_ntdev, S_IFBLK},
  {"/dev/sdbc11", BRACK(FH_SDBC | 11), "\\Device\\Harddisk54\\Partition11", exists_ntdev, S_IFBLK},
  {"/dev/sdbc12", BRACK(FH_SDBC | 12), "\\Device\\Harddisk54\\Partition12", exists_ntdev, S_IFBLK},
  {"/dev/sdbc13", BRACK(FH_SDBC | 13), "\\Device\\Harddisk54\\Partition13", exists_ntdev, S_IFBLK},
  {"/dev/sdbc14", BRACK(FH_SDBC | 14), "\\Device\\Harddisk54\\Partition14", exists_ntdev, S_IFBLK},
  {"/dev/sdbc15", BRACK(FH_SDBC | 15), "\\Device\\Harddisk54\\Partition15", exists_ntdev, S_IFBLK},
  {"/dev/sdbd1", BRACK(FH_SDBD | 1), "\\Device\\Harddisk55\\Partition1", exists_ntdev, S_IFBLK},
  {"/dev/sdbd2", BRACK(FH_SDBD | 2), "\\Device\\Harddisk55\\Partition2", exists_ntdev, S_IFBLK},
  {"/dev/sdbd3", BRACK(FH_SDBD | 3), "\\Device\\Harddisk55\\Partition3", exists_ntdev, S_IFBLK},
  {"/dev/sdbd4", BRACK(FH_SDBD | 4), "\\Device\\Harddisk55\\Partition4", exists_ntdev, S_IFBLK},
  {"/dev/sdbd5", BRACK(FH_SDBD | 5), "\\Device\\Harddisk55\\Partition5", exists_ntdev, S_IFBLK},
  {"/dev/sdbd6", BRACK(FH_SDBD | 6), "\\Device\\Harddisk55\\Partition6", exists_ntdev, S_IFBLK},
  {"/dev/sdbd7", BRACK(FH_SDBD | 7), "\\Device\\Harddisk55\\Partition7", exists_ntdev, S_IFBLK},
  {"/dev/sdbd8", BRACK(FH_SDBD | 8), "\\Device\\Harddisk55\\Partition8", exists_ntdev, S_IFBLK},
  {"/dev/sdbd9", BRACK(FH_SDBD | 9), "\\Device\\Harddisk55\\Partition9", exists_ntdev, S_IFBLK},
  {"/dev/sdbd10", BRACK(FH_SDBD | 10), "\\Device\\Harddisk55\\Partition10", exists_ntdev, S_IFBLK},
  {"/dev/sdbd11", BRACK(FH_SDBD | 11), "\\Device\\Harddisk55\\Partition11", exists_ntdev, S_IFBLK},
  {"/dev/sdbd12", BRACK(FH_SDBD | 12), "\\Device\\Harddisk55\\Partition12", exists_ntdev, S_IFBLK},
  {"/dev/sdbd13", BRACK(FH_SDBD | 13), "\\Device\\Harddisk55\\Partition13", exists_ntdev, S_IFBLK},
  {"/dev/sdbd14", BRACK(FH_SDBD | 14), "\\Device\\Harddisk55\\Partition14", exists_ntdev, S_IFBLK},
  {"/dev/sdbd15", BRACK(FH_SDBD | 15), "\\Device\\Harddisk55\\Partition15", exists_ntdev, S_IFBLK},
  {"/dev/sdbe1", BRACK(FH_SDBE | 1), "\\Device\\Harddisk56\\Partition1", exists_ntdev, S_IFBLK},
  {"/dev/sdbe2", BRACK(FH_SDBE | 2), "\\Device\\Harddisk56\\Partition2", exists_ntdev, S_IFBLK},
  {"/dev/sdbe3", BRACK(FH_SDBE | 3), "\\Device\\Harddisk56\\Partition3", exists_ntdev, S_IFBLK},
  {"/dev/sdbe4", BRACK(FH_SDBE | 4), "\\Device\\Harddisk56\\Partition4", exists_ntdev, S_IFBLK},
  {"/dev/sdbe5", BRACK(FH_SDBE | 5), "\\Device\\Harddisk56\\Partition5", exists_ntdev, S_IFBLK},
  {"/dev/sdbe6", BRACK(FH_SDBE | 6), "\\Device\\Harddisk56\\Partition6", exists_ntdev, S_IFBLK},
  {"/dev/sdbe7", BRACK(FH_SDBE | 7), "\\Device\\Harddisk56\\Partition7", exists_ntdev, S_IFBLK},
  {"/dev/sdbe8", BRACK(FH_SDBE | 8), "\\Device\\Harddisk56\\Partition8", exists_ntdev, S_IFBLK},
  {"/dev/sdbe9", BRACK(FH_SDBE | 9), "\\Device\\Harddisk56\\Partition9", exists_ntdev, S_IFBLK},
  {"/dev/sdbe10", BRACK(FH_SDBE | 10), "\\Device\\Harddisk56\\Partition10", exists_ntdev, S_IFBLK},
  {"/dev/sdbe11", BRACK(FH_SDBE | 11), "\\Device\\Harddisk56\\Partition11", exists_ntdev, S_IFBLK},
  {"/dev/sdbe12", BRACK(FH_SDBE | 12), "\\Device\\Harddisk56\\Partition12", exists_ntdev, S_IFBLK},
  {"/dev/sdbe13", BRACK(FH_SDBE | 13), "\\Device\\Harddisk56\\Partition13", exists_ntdev, S_IFBLK},
  {"/dev/sdbe14", BRACK(FH_SDBE | 14), "\\Device\\Harddisk56\\Partition14", exists_ntdev, S_IFBLK},
  {"/dev/sdbe15", BRACK(FH_SDBE | 15), "\\Device\\Harddisk56\\Partition15", exists_ntdev, S_IFBLK},
  {"/dev/sdbf1", BRACK(FH_SDBF | 1), "\\Device\\Harddisk57\\Partition1", exists_ntdev, S_IFBLK},
  {"/dev/sdbf2", BRACK(FH_SDBF | 2), "\\Device\\Harddisk57\\Partition2", exists_ntdev, S_IFBLK},
  {"/dev/sdbf3", BRACK(FH_SDBF | 3), "\\Device\\Harddisk57\\Partition3", exists_ntdev, S_IFBLK},
  {"/dev/sdbf4", BRACK(FH_SDBF | 4), "\\Device\\Harddisk57\\Partition4", exists_ntdev, S_IFBLK},
  {"/dev/sdbf5", BRACK(FH_SDBF | 5), "\\Device\\Harddisk57\\Partition5", exists_ntdev, S_IFBLK},
  {"/dev/sdbf6", BRACK(FH_SDBF | 6), "\\Device\\Harddisk57\\Partition6", exists_ntdev, S_IFBLK},
  {"/dev/sdbf7", BRACK(FH_SDBF | 7), "\\Device\\Harddisk57\\Partition7", exists_ntdev, S_IFBLK},
  {"/dev/sdbf8", BRACK(FH_SDBF | 8), "\\Device\\Harddisk57\\Partition8", exists_ntdev, S_IFBLK},
  {"/dev/sdbf9", BRACK(FH_SDBF | 9), "\\Device\\Harddisk57\\Partition9", exists_ntdev, S_IFBLK},
  {"/dev/sdbf10", BRACK(FH_SDBF | 10), "\\Device\\Harddisk57\\Partition10", exists_ntdev, S_IFBLK},
  {"/dev/sdbf11", BRACK(FH_SDBF | 11), "\\Device\\Harddisk57\\Partition11", exists_ntdev, S_IFBLK},
  {"/dev/sdbf12", BRACK(FH_SDBF | 12), "\\Device\\Harddisk57\\Partition12", exists_ntdev, S_IFBLK},
  {"/dev/sdbf13", BRACK(FH_SDBF | 13), "\\Device\\Harddisk57\\Partition13", exists_ntdev, S_IFBLK},
  {"/dev/sdbf14", BRACK(FH_SDBF | 14), "\\Device\\Harddisk57\\Partition14", exists_ntdev, S_IFBLK},
  {"/dev/sdbf15", BRACK(FH_SDBF | 15), "\\Device\\Harddisk57\\Partition15", exists_ntdev, S_IFBLK},
  {"/dev/sdbg1", BRACK(FH_SDBG | 1), "\\Device\\Harddisk58\\Partition1", exists_ntdev, S_IFBLK},
  {"/dev/sdbg2", BRACK(FH_SDBG | 2), "\\Device\\Harddisk58\\Partition2", exists_ntdev, S_IFBLK},
  {"/dev/sdbg3", BRACK(FH_SDBG | 3), "\\Device\\Harddisk58\\Partition3", exists_ntdev, S_IFBLK},
  {"/dev/sdbg4", BRACK(FH_SDBG | 4), "\\Device\\Harddisk58\\Partition4", exists_ntdev, S_IFBLK},
  {"/dev/sdbg5", BRACK(FH_SDBG | 5), "\\Device\\Harddisk58\\Partition5", exists_ntdev, S_IFBLK},
  {"/dev/sdbg6", BRACK(FH_SDBG | 6), "\\Device\\Harddisk58\\Partition6", exists_ntdev, S_IFBLK},
  {"/dev/sdbg7", BRACK(FH_SDBG | 7), "\\Device\\Harddisk58\\Partition7", exists_ntdev, S_IFBLK},
  {"/dev/sdbg8", BRACK(FH_SDBG | 8), "\\Device\\Harddisk58\\Partition8", exists_ntdev, S_IFBLK},
  {"/dev/sdbg9", BRACK(FH_SDBG | 9), "\\Device\\Harddisk58\\Partition9", exists_ntdev, S_IFBLK},
  {"/dev/sdbg10", BRACK(FH_SDBG | 10), "\\Device\\Harddisk58\\Partition10", exists_ntdev, S_IFBLK},
  {"/dev/sdbg11", BRACK(FH_SDBG | 11), "\\Device\\Harddisk58\\Partition11", exists_ntdev, S_IFBLK},
  {"/dev/sdbg12", BRACK(FH_SDBG | 12), "\\Device\\Harddisk58\\Partition12", exists_ntdev, S_IFBLK},
  {"/dev/sdbg13", BRACK(FH_SDBG | 13), "\\Device\\Harddisk58\\Partition13", exists_ntdev, S_IFBLK},
  {"/dev/sdbg14", BRACK(FH_SDBG | 14), "\\Device\\Harddisk58\\Partition14", exists_ntdev, S_IFBLK},
  {"/dev/sdbg15", BRACK(FH_SDBG | 15), "\\Device\\Harddisk58\\Partition15", exists_ntdev, S_IFBLK},
  {"/dev/sdbh1", BRACK(FH_SDBH | 1), "\\Device\\Harddisk59\\Partition1", exists_ntdev, S_IFBLK},
  {"/dev/sdbh2", BRACK(FH_SDBH | 2), "\\Device\\Harddisk59\\Partition2", exists_ntdev, S_IFBLK},
  {"/dev/sdbh3", BRACK(FH_SDBH | 3), "\\Device\\Harddisk59\\Partition3", exists_ntdev, S_IFBLK},
  {"/dev/sdbh4", BRACK(FH_SDBH | 4), "\\Device\\Harddisk59\\Partition4", exists_ntdev, S_IFBLK},
  {"/dev/sdbh5", BRACK(FH_SDBH | 5), "\\Device\\Harddisk59\\Partition5", exists_ntdev, S_IFBLK},
  {"/dev/sdbh6", BRACK(FH_SDBH | 6), "\\Device\\Harddisk59\\Partition6", exists_ntdev, S_IFBLK},
  {"/dev/sdbh7", BRACK(FH_SDBH | 7), "\\Device\\Harddisk59\\Partition7", exists_ntdev, S_IFBLK},
  {"/dev/sdbh8", BRACK(FH_SDBH | 8), "\\Device\\Harddisk59\\Partition8", exists_ntdev, S_IFBLK},
  {"/dev/sdbh9", BRACK(FH_SDBH | 9), "\\Device\\Harddisk59\\Partition9", exists_ntdev, S_IFBLK},
  {"/dev/sdbh10", BRACK(FH_SDBH | 10), "\\Device\\Harddisk59\\Partition10", exists_ntdev, S_IFBLK},
  {"/dev/sdbh11", BRACK(FH_SDBH | 11), "\\Device\\Harddisk59\\Partition11", exists_ntdev, S_IFBLK},
  {"/dev/sdbh12", BRACK(FH_SDBH | 12), "\\Device\\Harddisk59\\Partition12", exists_ntdev, S_IFBLK},
  {"/dev/sdbh13", BRACK(FH_SDBH | 13), "\\Device\\Harddisk59\\Partition13", exists_ntdev, S_IFBLK},
  {"/dev/sdbh14", BRACK(FH_SDBH | 14), "\\Device\\Harddisk59\\Partition14", exists_ntdev, S_IFBLK},
  {"/dev/sdbh15", BRACK(FH_SDBH | 15), "\\Device\\Harddisk59\\Partition15", exists_ntdev, S_IFBLK},
  {"/dev/sdbi1", BRACK(FH_SDBI | 1), "\\Device\\Harddisk60\\Partition1", exists_ntdev, S_IFBLK},
  {"/dev/sdbi2", BRACK(FH_SDBI | 2), "\\Device\\Harddisk60\\Partition2", exists_ntdev, S_IFBLK},
  {"/dev/sdbi3", BRACK(FH_SDBI | 3), "\\Device\\Harddisk60\\Partition3", exists_ntdev, S_IFBLK},
  {"/dev/sdbi4", BRACK(FH_SDBI | 4), "\\Device\\Harddisk60\\Partition4", exists_ntdev, S_IFBLK},
  {"/dev/sdbi5", BRACK(FH_SDBI | 5), "\\Device\\Harddisk60\\Partition5", exists_ntdev, S_IFBLK},
  {"/dev/sdbi6", BRACK(FH_SDBI | 6), "\\Device\\Harddisk60\\Partition6", exists_ntdev, S_IFBLK},
  {"/dev/sdbi7", BRACK(FH_SDBI | 7), "\\Device\\Harddisk60\\Partition7", exists_ntdev, S_IFBLK},
  {"/dev/sdbi8", BRACK(FH_SDBI | 8), "\\Device\\Harddisk60\\Partition8", exists_ntdev, S_IFBLK},
  {"/dev/sdbi9", BRACK(FH_SDBI | 9), "\\Device\\Harddisk60\\Partition9", exists_ntdev, S_IFBLK},
  {"/dev/sdbi10", BRACK(FH_SDBI | 10), "\\Device\\Harddisk60\\Partition10", exists_ntdev, S_IFBLK},
  {"/dev/sdbi11", BRACK(FH_SDBI | 11), "\\Device\\Harddisk60\\Partition11", exists_ntdev, S_IFBLK},
  {"/dev/sdbi12", BRACK(FH_SDBI | 12), "\\Device\\Harddisk60\\Partition12", exists_ntdev, S_IFBLK},
  {"/dev/sdbi13", BRACK(FH_SDBI | 13), "\\Device\\Harddisk60\\Partition13", exists_ntdev, S_IFBLK},
  {"/dev/sdbi14", BRACK(FH_SDBI | 14), "\\Device\\Harddisk60\\Partition14", exists_ntdev, S_IFBLK},
  {"/dev/sdbi15", BRACK(FH_SDBI | 15), "\\Device\\Harddisk60\\Partition15", exists_ntdev, S_IFBLK},
  {"/dev/sdbj1", BRACK(FH_SDBJ | 1), "\\Device\\Harddisk61\\Partition1", exists_ntdev, S_IFBLK},
  {"/dev/sdbj2", BRACK(FH_SDBJ | 2), "\\Device\\Harddisk61\\Partition2", exists_ntdev, S_IFBLK},
  {"/dev/sdbj3", BRACK(FH_SDBJ | 3), "\\Device\\Harddisk61\\Partition3", exists_ntdev, S_IFBLK},
  {"/dev/sdbj4", BRACK(FH_SDBJ | 4), "\\Device\\Harddisk61\\Partition4", exists_ntdev, S_IFBLK},
  {"/dev/sdbj5", BRACK(FH_SDBJ | 5), "\\Device\\Harddisk61\\Partition5", exists_ntdev, S_IFBLK},
  {"/dev/sdbj6", BRACK(FH_SDBJ | 6), "\\Device\\Harddisk61\\Partition6", exists_ntdev, S_IFBLK},
  {"/dev/sdbj7", BRACK(FH_SDBJ | 7), "\\Device\\Harddisk61\\Partition7", exists_ntdev, S_IFBLK},
  {"/dev/sdbj8", BRACK(FH_SDBJ | 8), "\\Device\\Harddisk61\\Partition8", exists_ntdev, S_IFBLK},
  {"/dev/sdbj9", BRACK(FH_SDBJ | 9), "\\Device\\Harddisk61\\Partition9", exists_ntdev, S_IFBLK},
  {"/dev/sdbj10", BRACK(FH_SDBJ | 10), "\\Device\\Harddisk61\\Partition10", exists_ntdev, S_IFBLK},
  {"/dev/sdbj11", BRACK(FH_SDBJ | 11), "\\Device\\Harddisk61\\Partition11", exists_ntdev, S_IFBLK},
  {"/dev/sdbj12", BRACK(FH_SDBJ | 12), "\\Device\\Harddisk61\\Partition12", exists_ntdev, S_IFBLK},
  {"/dev/sdbj13", BRACK(FH_SDBJ | 13), "\\Device\\Harddisk61\\Partition13", exists_ntdev, S_IFBLK},
  {"/dev/sdbj14", BRACK(FH_SDBJ | 14), "\\Device\\Harddisk61\\Partition14", exists_ntdev, S_IFBLK},
  {"/dev/sdbj15", BRACK(FH_SDBJ | 15), "\\Device\\Harddisk61\\Partition15", exists_ntdev, S_IFBLK},
  {"/dev/sdbk1", BRACK(FH_SDBK | 1), "\\Device\\Harddisk62\\Partition1", exists_ntdev, S_IFBLK},
  {"/dev/sdbk2", BRACK(FH_SDBK | 2), "\\Device\\Harddisk62\\Partition2", exists_ntdev, S_IFBLK},
  {"/dev/sdbk3", BRACK(FH_SDBK | 3), "\\Device\\Harddisk62\\Partition3", exists_ntdev, S_IFBLK},
  {"/dev/sdbk4", BRACK(FH_SDBK | 4), "\\Device\\Harddisk62\\Partition4", exists_ntdev, S_IFBLK},
  {"/dev/sdbk5", BRACK(FH_SDBK | 5), "\\Device\\Harddisk62\\Partition5", exists_ntdev, S_IFBLK},
  {"/dev/sdbk6", BRACK(FH_SDBK | 6), "\\Device\\Harddisk62\\Partition6", exists_ntdev, S_IFBLK},
  {"/dev/sdbk7", BRACK(FH_SDBK | 7), "\\Device\\Harddisk62\\Partition7", exists_ntdev, S_IFBLK},
  {"/dev/sdbk8", BRACK(FH_SDBK | 8), "\\Device\\Harddisk62\\Partition8", exists_ntdev, S_IFBLK},
  {"/dev/sdbk9", BRACK(FH_SDBK | 9), "\\Device\\Harddisk62\\Partition9", exists_ntdev, S_IFBLK},
  {"/dev/sdbk10", BRACK(FH_SDBK | 10), "\\Device\\Harddisk62\\Partition10", exists_ntdev, S_IFBLK},
  {"/dev/sdbk11", BRACK(FH_SDBK | 11), "\\Device\\Harddisk62\\Partition11", exists_ntdev, S_IFBLK},
  {"/dev/sdbk12", BRACK(FH_SDBK | 12), "\\Device\\Harddisk62\\Partition12", exists_ntdev, S_IFBLK},
  {"/dev/sdbk13", BRACK(FH_SDBK | 13), "\\Device\\Harddisk62\\Partition13", exists_ntdev, S_IFBLK},
  {"/dev/sdbk14", BRACK(FH_SDBK | 14), "\\Device\\Harddisk62\\Partition14", exists_ntdev, S_IFBLK},
  {"/dev/sdbk15", BRACK(FH_SDBK | 15), "\\Device\\Harddisk62\\Partition15", exists_ntdev, S_IFBLK},
  {"/dev/sdbl1", BRACK(FH_SDBL | 1), "\\Device\\Harddisk63\\Partition1", exists_ntdev, S_IFBLK},
  {"/dev/sdbl2", BRACK(FH_SDBL | 2), "\\Device\\Harddisk63\\Partition2", exists_ntdev, S_IFBLK},
  {"/dev/sdbl3", BRACK(FH_SDBL | 3), "\\Device\\Harddisk63\\Partition3", exists_ntdev, S_IFBLK},
  {"/dev/sdbl4", BRACK(FH_SDBL | 4), "\\Device\\Harddisk63\\Partition4", exists_ntdev, S_IFBLK},
  {"/dev/sdbl5", BRACK(FH_SDBL | 5), "\\Device\\Harddisk63\\Partition5", exists_ntdev, S_IFBLK},
  {"/dev/sdbl6", BRACK(FH_SDBL | 6), "\\Device\\Harddisk63\\Partition6", exists_ntdev, S_IFBLK},
  {"/dev/sdbl7", BRACK(FH_SDBL | 7), "\\Device\\Harddisk63\\Partition7", exists_ntdev, S_IFBLK},
  {"/dev/sdbl8", BRACK(FH_SDBL | 8), "\\Device\\Harddisk63\\Partition8", exists_ntdev, S_IFBLK},
  {"/dev/sdbl9", BRACK(FH_SDBL | 9), "\\Device\\Harddisk63\\Partition9", exists_ntdev, S_IFBLK},
  {"/dev/sdbl10", BRACK(FH_SDBL | 10), "\\Device\\Harddisk63\\Partition10", exists_ntdev, S_IFBLK},
  {"/dev/sdbl11", BRACK(FH_SDBL | 11), "\\Device\\Harddisk63\\Partition11", exists_ntdev, S_IFBLK},
  {"/dev/sdbl12", BRACK(FH_SDBL | 12), "\\Device\\Harddisk63\\Partition12", exists_ntdev, S_IFBLK},
  {"/dev/sdbl13", BRACK(FH_SDBL | 13), "\\Device\\Harddisk63\\Partition13", exists_ntdev, S_IFBLK},
  {"/dev/sdbl14", BRACK(FH_SDBL | 14), "\\Device\\Harddisk63\\Partition14", exists_ntdev, S_IFBLK},
  {"/dev/sdbl15", BRACK(FH_SDBL | 15), "\\Device\\Harddisk63\\Partition15", exists_ntdev, S_IFBLK},
  {"/dev/sdbm1", BRACK(FH_SDBM | 1), "\\Device\\Harddisk64\\Partition1", exists_ntdev, S_IFBLK},
  {"/dev/sdbm2", BRACK(FH_SDBM | 2), "\\Device\\Harddisk64\\Partition2", exists_ntdev, S_IFBLK},
  {"/dev/sdbm3", BRACK(FH_SDBM | 3), "\\Device\\Harddisk64\\Partition3", exists_ntdev, S_IFBLK},
  {"/dev/sdbm4", BRACK(FH_SDBM | 4), "\\Device\\Harddisk64\\Partition4", exists_ntdev, S_IFBLK},
  {"/dev/sdbm5", BRACK(FH_SDBM | 5), "\\Device\\Harddisk64\\Partition5", exists_ntdev, S_IFBLK},
  {"/dev/sdbm6", BRACK(FH_SDBM | 6), "\\Device\\Harddisk64\\Partition6", exists_ntdev, S_IFBLK},
  {"/dev/sdbm7", BRACK(FH_SDBM | 7), "\\Device\\Harddisk64\\Partition7", exists_ntdev, S_IFBLK},
  {"/dev/sdbm8", BRACK(FH_SDBM | 8), "\\Device\\Harddisk64\\Partition8", exists_ntdev, S_IFBLK},
  {"/dev/sdbm9", BRACK(FH_SDBM | 9), "\\Device\\Harddisk64\\Partition9", exists_ntdev, S_IFBLK},
  {"/dev/sdbm10", BRACK(FH_SDBM | 10), "\\Device\\Harddisk64\\Partition10", exists_ntdev, S_IFBLK},
  {"/dev/sdbm11", BRACK(FH_SDBM | 11), "\\Device\\Harddisk64\\Partition11", exists_ntdev, S_IFBLK},
  {"/dev/sdbm12", BRACK(FH_SDBM | 12), "\\Device\\Harddisk64\\Partition12", exists_ntdev, S_IFBLK},
  {"/dev/sdbm13", BRACK(FH_SDBM | 13), "\\Device\\Harddisk64\\Partition13", exists_ntdev, S_IFBLK},
  {"/dev/sdbm14", BRACK(FH_SDBM | 14), "\\Device\\Harddisk64\\Partition14", exists_ntdev, S_IFBLK},
  {"/dev/sdbm15", BRACK(FH_SDBM | 15), "\\Device\\Harddisk64\\Partition15", exists_ntdev, S_IFBLK},
  {"/dev/sdbn1", BRACK(FH_SDBN | 1), "\\Device\\Harddisk65\\Partition1", exists_ntdev, S_IFBLK},
  {"/dev/sdbn2", BRACK(FH_SDBN | 2), "\\Device\\Harddisk65\\Partition2", exists_ntdev, S_IFBLK},
  {"/dev/sdbn3", BRACK(FH_SDBN | 3), "\\Device\\Harddisk65\\Partition3", exists_ntdev, S_IFBLK},
  {"/dev/sdbn4", BRACK(FH_SDBN | 4), "\\Device\\Harddisk65\\Partition4", exists_ntdev, S_IFBLK},
  {"/dev/sdbn5", BRACK(FH_SDBN | 5), "\\Device\\Harddisk65\\Partition5", exists_ntdev, S_IFBLK},
  {"/dev/sdbn6", BRACK(FH_SDBN | 6), "\\Device\\Harddisk65\\Partition6", exists_ntdev, S_IFBLK},
  {"/dev/sdbn7", BRACK(FH_SDBN | 7), "\\Device\\Harddisk65\\Partition7", exists_ntdev, S_IFBLK},
  {"/dev/sdbn8", BRACK(FH_SDBN | 8), "\\Device\\Harddisk65\\Partition8", exists_ntdev, S_IFBLK},
  {"/dev/sdbn9", BRACK(FH_SDBN | 9), "\\Device\\Harddisk65\\Partition9", exists_ntdev, S_IFBLK},
  {"/dev/sdbn10", BRACK(FH_SDBN | 10), "\\Device\\Harddisk65\\Partition10", exists_ntdev, S_IFBLK},
  {"/dev/sdbn11", BRACK(FH_SDBN | 11), "\\Device\\Harddisk65\\Partition11", exists_ntdev, S_IFBLK},
  {"/dev/sdbn12", BRACK(FH_SDBN | 12), "\\Device\\Harddisk65\\Partition12", exists_ntdev, S_IFBLK},
  {"/dev/sdbn13", BRACK(FH_SDBN | 13), "\\Device\\Harddisk65\\Partition13", exists_ntdev, S_IFBLK},
  {"/dev/sdbn14", BRACK(FH_SDBN | 14), "\\Device\\Harddisk65\\Partition14", exists_ntdev, S_IFBLK},
  {"/dev/sdbn15", BRACK(FH_SDBN | 15), "\\Device\\Harddisk65\\Partition15", exists_ntdev, S_IFBLK},
  {"/dev/sdbo1", BRACK(FH_SDBO | 1), "\\Device\\Harddisk66\\Partition1", exists_ntdev, S_IFBLK},
  {"/dev/sdbo2", BRACK(FH_SDBO | 2), "\\Device\\Harddisk66\\Partition2", exists_ntdev, S_IFBLK},
  {"/dev/sdbo3", BRACK(FH_SDBO | 3), "\\Device\\Harddisk66\\Partition3", exists_ntdev, S_IFBLK},
  {"/dev/sdbo4", BRACK(FH_SDBO | 4), "\\Device\\Harddisk66\\Partition4", exists_ntdev, S_IFBLK},
  {"/dev/sdbo5", BRACK(FH_SDBO | 5), "\\Device\\Harddisk66\\Partition5", exists_ntdev, S_IFBLK},
  {"/dev/sdbo6", BRACK(FH_SDBO | 6), "\\Device\\Harddisk66\\Partition6", exists_ntdev, S_IFBLK},
  {"/dev/sdbo7", BRACK(FH_SDBO | 7), "\\Device\\Harddisk66\\Partition7", exists_ntdev, S_IFBLK},
  {"/dev/sdbo8", BRACK(FH_SDBO | 8), "\\Device\\Harddisk66\\Partition8", exists_ntdev, S_IFBLK},
  {"/dev/sdbo9", BRACK(FH_SDBO | 9), "\\Device\\Harddisk66\\Partition9", exists_ntdev, S_IFBLK},
  {"/dev/sdbo10", BRACK(FH_SDBO | 10), "\\Device\\Harddisk66\\Partition10", exists_ntdev, S_IFBLK},
  {"/dev/sdbo11", BRACK(FH_SDBO | 11), "\\Device\\Harddisk66\\Partition11", exists_ntdev, S_IFBLK},
  {"/dev/sdbo12", BRACK(FH_SDBO | 12), "\\Device\\Harddisk66\\Partition12", exists_ntdev, S_IFBLK},
  {"/dev/sdbo13", BRACK(FH_SDBO | 13), "\\Device\\Harddisk66\\Partition13", exists_ntdev, S_IFBLK},
  {"/dev/sdbo14", BRACK(FH_SDBO | 14), "\\Device\\Harddisk66\\Partition14", exists_ntdev, S_IFBLK},
  {"/dev/sdbo15", BRACK(FH_SDBO | 15), "\\Device\\Harddisk66\\Partition15", exists_ntdev, S_IFBLK},
  {"/dev/sdbp1", BRACK(FH_SDBP | 1), "\\Device\\Harddisk67\\Partition1", exists_ntdev, S_IFBLK},
  {"/dev/sdbp2", BRACK(FH_SDBP | 2), "\\Device\\Harddisk67\\Partition2", exists_ntdev, S_IFBLK},
  {"/dev/sdbp3", BRACK(FH_SDBP | 3), "\\Device\\Harddisk67\\Partition3", exists_ntdev, S_IFBLK},
  {"/dev/sdbp4", BRACK(FH_SDBP | 4), "\\Device\\Harddisk67\\Partition4", exists_ntdev, S_IFBLK},
  {"/dev/sdbp5", BRACK(FH_SDBP | 5), "\\Device\\Harddisk67\\Partition5", exists_ntdev, S_IFBLK},
  {"/dev/sdbp6", BRACK(FH_SDBP | 6), "\\Device\\Harddisk67\\Partition6", exists_ntdev, S_IFBLK},
  {"/dev/sdbp7", BRACK(FH_SDBP | 7), "\\Device\\Harddisk67\\Partition7", exists_ntdev, S_IFBLK},
  {"/dev/sdbp8", BRACK(FH_SDBP | 8), "\\Device\\Harddisk67\\Partition8", exists_ntdev, S_IFBLK},
  {"/dev/sdbp9", BRACK(FH_SDBP | 9), "\\Device\\Harddisk67\\Partition9", exists_ntdev, S_IFBLK},
  {"/dev/sdbp10", BRACK(FH_SDBP | 10), "\\Device\\Harddisk67\\Partition10", exists_ntdev, S_IFBLK},
  {"/dev/sdbp11", BRACK(FH_SDBP | 11), "\\Device\\Harddisk67\\Partition11", exists_ntdev, S_IFBLK},
  {"/dev/sdbp12", BRACK(FH_SDBP | 12), "\\Device\\Harddisk67\\Partition12", exists_ntdev, S_IFBLK},
  {"/dev/sdbp13", BRACK(FH_SDBP | 13), "\\Device\\Harddisk67\\Partition13", exists_ntdev, S_IFBLK},
  {"/dev/sdbp14", BRACK(FH_SDBP | 14), "\\Device\\Harddisk67\\Partition14", exists_ntdev, S_IFBLK},
  {"/dev/sdbp15", BRACK(FH_SDBP | 15), "\\Device\\Harddisk67\\Partition15", exists_ntdev, S_IFBLK},
  {"/dev/sdbq1", BRACK(FH_SDBQ | 1), "\\Device\\Harddisk68\\Partition1", exists_ntdev, S_IFBLK},
  {"/dev/sdbq2", BRACK(FH_SDBQ | 2), "\\Device\\Harddisk68\\Partition2", exists_ntdev, S_IFBLK},
  {"/dev/sdbq3", BRACK(FH_SDBQ | 3), "\\Device\\Harddisk68\\Partition3", exists_ntdev, S_IFBLK},
  {"/dev/sdbq4", BRACK(FH_SDBQ | 4), "\\Device\\Harddisk68\\Partition4", exists_ntdev, S_IFBLK},
  {"/dev/sdbq5", BRACK(FH_SDBQ | 5), "\\Device\\Harddisk68\\Partition5", exists_ntdev, S_IFBLK},
  {"/dev/sdbq6", BRACK(FH_SDBQ | 6), "\\Device\\Harddisk68\\Partition6", exists_ntdev, S_IFBLK},
  {"/dev/sdbq7", BRACK(FH_SDBQ | 7), "\\Device\\Harddisk68\\Partition7", exists_ntdev, S_IFBLK},
  {"/dev/sdbq8", BRACK(FH_SDBQ | 8), "\\Device\\Harddisk68\\Partition8", exists_ntdev, S_IFBLK},
  {"/dev/sdbq9", BRACK(FH_SDBQ | 9), "\\Device\\Harddisk68\\Partition9", exists_ntdev, S_IFBLK},
  {"/dev/sdbq10", BRACK(FH_SDBQ | 10), "\\Device\\Harddisk68\\Partition10", exists_ntdev, S_IFBLK},
  {"/dev/sdbq11", BRACK(FH_SDBQ | 11), "\\Device\\Harddisk68\\Partition11", exists_ntdev, S_IFBLK},
  {"/dev/sdbq12", BRACK(FH_SDBQ | 12), "\\Device\\Harddisk68\\Partition12", exists_ntdev, S_IFBLK},
  {"/dev/sdbq13", BRACK(FH_SDBQ | 13), "\\Device\\Harddisk68\\Partition13", exists_ntdev, S_IFBLK},
  {"/dev/sdbq14", BRACK(FH_SDBQ | 14), "\\Device\\Harddisk68\\Partition14", exists_ntdev, S_IFBLK},
  {"/dev/sdbq15", BRACK(FH_SDBQ | 15), "\\Device\\Harddisk68\\Partition15", exists_ntdev, S_IFBLK},
  {"/dev/sdbr1", BRACK(FH_SDBR | 1), "\\Device\\Harddisk69\\Partition1", exists_ntdev, S_IFBLK},
  {"/dev/sdbr2", BRACK(FH_SDBR | 2), "\\Device\\Harddisk69\\Partition2", exists_ntdev, S_IFBLK},
  {"/dev/sdbr3", BRACK(FH_SDBR | 3), "\\Device\\Harddisk69\\Partition3", exists_ntdev, S_IFBLK},
  {"/dev/sdbr4", BRACK(FH_SDBR | 4), "\\Device\\Harddisk69\\Partition4", exists_ntdev, S_IFBLK},
  {"/dev/sdbr5", BRACK(FH_SDBR | 5), "\\Device\\Harddisk69\\Partition5", exists_ntdev, S_IFBLK},
  {"/dev/sdbr6", BRACK(FH_SDBR | 6), "\\Device\\Harddisk69\\Partition6", exists_ntdev, S_IFBLK},
  {"/dev/sdbr7", BRACK(FH_SDBR | 7), "\\Device\\Harddisk69\\Partition7", exists_ntdev, S_IFBLK},
  {"/dev/sdbr8", BRACK(FH_SDBR | 8), "\\Device\\Harddisk69\\Partition8", exists_ntdev, S_IFBLK},
  {"/dev/sdbr9", BRACK(FH_SDBR | 9), "\\Device\\Harddisk69\\Partition9", exists_ntdev, S_IFBLK},
  {"/dev/sdbr10", BRACK(FH_SDBR | 10), "\\Device\\Harddisk69\\Partition10", exists_ntdev, S_IFBLK},
  {"/dev/sdbr11", BRACK(FH_SDBR | 11), "\\Device\\Harddisk69\\Partition11", exists_ntdev, S_IFBLK},
  {"/dev/sdbr12", BRACK(FH_SDBR | 12), "\\Device\\Harddisk69\\Partition12", exists_ntdev, S_IFBLK},
  {"/dev/sdbr13", BRACK(FH_SDBR | 13), "\\Device\\Harddisk69\\Partition13", exists_ntdev, S_IFBLK},
  {"/dev/sdbr14", BRACK(FH_SDBR | 14), "\\Device\\Harddisk69\\Partition14", exists_ntdev, S_IFBLK},
  {"/dev/sdbr15", BRACK(FH_SDBR | 15), "\\Device\\Harddisk69\\Partition15", exists_ntdev, S_IFBLK},
  {"/dev/sdbs1", BRACK(FH_SDBS | 1), "\\Device\\Harddisk70\\Partition1", exists_ntdev, S_IFBLK},
  {"/dev/sdbs2", BRACK(FH_SDBS | 2), "\\Device\\Harddisk70\\Partition2", exists_ntdev, S_IFBLK},
  {"/dev/sdbs3", BRACK(FH_SDBS | 3), "\\Device\\Harddisk70\\Partition3", exists_ntdev, S_IFBLK},
  {"/dev/sdbs4", BRACK(FH_SDBS | 4), "\\Device\\Harddisk70\\Partition4", exists_ntdev, S_IFBLK},
  {"/dev/sdbs5", BRACK(FH_SDBS | 5), "\\Device\\Harddisk70\\Partition5", exists_ntdev, S_IFBLK},
  {"/dev/sdbs6", BRACK(FH_SDBS | 6), "\\Device\\Harddisk70\\Partition6", exists_ntdev, S_IFBLK},
  {"/dev/sdbs7", BRACK(FH_SDBS | 7), "\\Device\\Harddisk70\\Partition7", exists_ntdev, S_IFBLK},
  {"/dev/sdbs8", BRACK(FH_SDBS | 8), "\\Device\\Harddisk70\\Partition8", exists_ntdev, S_IFBLK},
  {"/dev/sdbs9", BRACK(FH_SDBS | 9), "\\Device\\Harddisk70\\Partition9", exists_ntdev, S_IFBLK},
  {"/dev/sdbs10", BRACK(FH_SDBS | 10), "\\Device\\Harddisk70\\Partition10", exists_ntdev, S_IFBLK},
  {"/dev/sdbs11", BRACK(FH_SDBS | 11), "\\Device\\Harddisk70\\Partition11", exists_ntdev, S_IFBLK},
  {"/dev/sdbs12", BRACK(FH_SDBS | 12), "\\Device\\Harddisk70\\Partition12", exists_ntdev, S_IFBLK},
  {"/dev/sdbs13", BRACK(FH_SDBS | 13), "\\Device\\Harddisk70\\Partition13", exists_ntdev, S_IFBLK},
  {"/dev/sdbs14", BRACK(FH_SDBS | 14), "\\Device\\Harddisk70\\Partition14", exists_ntdev, S_IFBLK},
  {"/dev/sdbs15", BRACK(FH_SDBS | 15), "\\Device\\Harddisk70\\Partition15", exists_ntdev, S_IFBLK},
  {"/dev/sdbt1", BRACK(FH_SDBT | 1), "\\Device\\Harddisk71\\Partition1", exists_ntdev, S_IFBLK},
  {"/dev/sdbt2", BRACK(FH_SDBT | 2), "\\Device\\Harddisk71\\Partition2", exists_ntdev, S_IFBLK},
  {"/dev/sdbt3", BRACK(FH_SDBT | 3), "\\Device\\Harddisk71\\Partition3", exists_ntdev, S_IFBLK},
  {"/dev/sdbt4", BRACK(FH_SDBT | 4), "\\Device\\Harddisk71\\Partition4", exists_ntdev, S_IFBLK},
  {"/dev/sdbt5", BRACK(FH_SDBT | 5), "\\Device\\Harddisk71\\Partition5", exists_ntdev, S_IFBLK},
  {"/dev/sdbt6", BRACK(FH_SDBT | 6), "\\Device\\Harddisk71\\Partition6", exists_ntdev, S_IFBLK},
  {"/dev/sdbt7", BRACK(FH_SDBT | 7), "\\Device\\Harddisk71\\Partition7", exists_ntdev, S_IFBLK},
  {"/dev/sdbt8", BRACK(FH_SDBT | 8), "\\Device\\Harddisk71\\Partition8", exists_ntdev, S_IFBLK},
  {"/dev/sdbt9", BRACK(FH_SDBT | 9), "\\Device\\Harddisk71\\Partition9", exists_ntdev, S_IFBLK},
  {"/dev/sdbt10", BRACK(FH_SDBT | 10), "\\Device\\Harddisk71\\Partition10", exists_ntdev, S_IFBLK},
  {"/dev/sdbt11", BRACK(FH_SDBT | 11), "\\Device\\Harddisk71\\Partition11", exists_ntdev, S_IFBLK},
  {"/dev/sdbt12", BRACK(FH_SDBT | 12), "\\Device\\Harddisk71\\Partition12", exists_ntdev, S_IFBLK},
  {"/dev/sdbt13", BRACK(FH_SDBT | 13), "\\Device\\Harddisk71\\Partition13", exists_ntdev, S_IFBLK},
  {"/dev/sdbt14", BRACK(FH_SDBT | 14), "\\Device\\Harddisk71\\Partition14", exists_ntdev, S_IFBLK},
  {"/dev/sdbt15", BRACK(FH_SDBT | 15), "\\Device\\Harddisk71\\Partition15", exists_ntdev, S_IFBLK},
  {"/dev/sdbu1", BRACK(FH_SDBU | 1), "\\Device\\Harddisk72\\Partition1", exists_ntdev, S_IFBLK},
  {"/dev/sdbu2", BRACK(FH_SDBU | 2), "\\Device\\Harddisk72\\Partition2", exists_ntdev, S_IFBLK},
  {"/dev/sdbu3", BRACK(FH_SDBU | 3), "\\Device\\Harddisk72\\Partition3", exists_ntdev, S_IFBLK},
  {"/dev/sdbu4", BRACK(FH_SDBU | 4), "\\Device\\Harddisk72\\Partition4", exists_ntdev, S_IFBLK},
  {"/dev/sdbu5", BRACK(FH_SDBU | 5), "\\Device\\Harddisk72\\Partition5", exists_ntdev, S_IFBLK},
  {"/dev/sdbu6", BRACK(FH_SDBU | 6), "\\Device\\Harddisk72\\Partition6", exists_ntdev, S_IFBLK},
  {"/dev/sdbu7", BRACK(FH_SDBU | 7), "\\Device\\Harddisk72\\Partition7", exists_ntdev, S_IFBLK},
  {"/dev/sdbu8", BRACK(FH_SDBU | 8), "\\Device\\Harddisk72\\Partition8", exists_ntdev, S_IFBLK},
  {"/dev/sdbu9", BRACK(FH_SDBU | 9), "\\Device\\Harddisk72\\Partition9", exists_ntdev, S_IFBLK},
  {"/dev/sdbu10", BRACK(FH_SDBU | 10), "\\Device\\Harddisk72\\Partition10", exists_ntdev, S_IFBLK},
  {"/dev/sdbu11", BRACK(FH_SDBU | 11), "\\Device\\Harddisk72\\Partition11", exists_ntdev, S_IFBLK},
  {"/dev/sdbu12", BRACK(FH_SDBU | 12), "\\Device\\Harddisk72\\Partition12", exists_ntdev, S_IFBLK},
  {"/dev/sdbu13", BRACK(FH_SDBU | 13), "\\Device\\Harddisk72\\Partition13", exists_ntdev, S_IFBLK},
  {"/dev/sdbu14", BRACK(FH_SDBU | 14), "\\Device\\Harddisk72\\Partition14", exists_ntdev, S_IFBLK},
  {"/dev/sdbu15", BRACK(FH_SDBU | 15), "\\Device\\Harddisk72\\Partition15", exists_ntdev, S_IFBLK},
  {"/dev/sdbv1", BRACK(FH_SDBV | 1), "\\Device\\Harddisk73\\Partition1", exists_ntdev, S_IFBLK},
  {"/dev/sdbv2", BRACK(FH_SDBV | 2), "\\Device\\Harddisk73\\Partition2", exists_ntdev, S_IFBLK},
  {"/dev/sdbv3", BRACK(FH_SDBV | 3), "\\Device\\Harddisk73\\Partition3", exists_ntdev, S_IFBLK},
  {"/dev/sdbv4", BRACK(FH_SDBV | 4), "\\Device\\Harddisk73\\Partition4", exists_ntdev, S_IFBLK},
  {"/dev/sdbv5", BRACK(FH_SDBV | 5), "\\Device\\Harddisk73\\Partition5", exists_ntdev, S_IFBLK},
  {"/dev/sdbv6", BRACK(FH_SDBV | 6), "\\Device\\Harddisk73\\Partition6", exists_ntdev, S_IFBLK},
  {"/dev/sdbv7", BRACK(FH_SDBV | 7), "\\Device\\Harddisk73\\Partition7", exists_ntdev, S_IFBLK},
  {"/dev/sdbv8", BRACK(FH_SDBV | 8), "\\Device\\Harddisk73\\Partition8", exists_ntdev, S_IFBLK},
  {"/dev/sdbv9", BRACK(FH_SDBV | 9), "\\Device\\Harddisk73\\Partition9", exists_ntdev, S_IFBLK},
  {"/dev/sdbv10", BRACK(FH_SDBV | 10), "\\Device\\Harddisk73\\Partition10", exists_ntdev, S_IFBLK},
  {"/dev/sdbv11", BRACK(FH_SDBV | 11), "\\Device\\Harddisk73\\Partition11", exists_ntdev, S_IFBLK},
  {"/dev/sdbv12", BRACK(FH_SDBV | 12), "\\Device\\Harddisk73\\Partition12", exists_ntdev, S_IFBLK},
  {"/dev/sdbv13", BRACK(FH_SDBV | 13), "\\Device\\Harddisk73\\Partition13", exists_ntdev, S_IFBLK},
  {"/dev/sdbv14", BRACK(FH_SDBV | 14), "\\Device\\Harddisk73\\Partition14", exists_ntdev, S_IFBLK},
  {"/dev/sdbv15", BRACK(FH_SDBV | 15), "\\Device\\Harddisk73\\Partition15", exists_ntdev, S_IFBLK},
  {"/dev/sdbw1", BRACK(FH_SDBW | 1), "\\Device\\Harddisk74\\Partition1", exists_ntdev, S_IFBLK},
  {"/dev/sdbw2", BRACK(FH_SDBW | 2), "\\Device\\Harddisk74\\Partition2", exists_ntdev, S_IFBLK},
  {"/dev/sdbw3", BRACK(FH_SDBW | 3), "\\Device\\Harddisk74\\Partition3", exists_ntdev, S_IFBLK},
  {"/dev/sdbw4", BRACK(FH_SDBW | 4), "\\Device\\Harddisk74\\Partition4", exists_ntdev, S_IFBLK},
  {"/dev/sdbw5", BRACK(FH_SDBW | 5), "\\Device\\Harddisk74\\Partition5", exists_ntdev, S_IFBLK},
  {"/dev/sdbw6", BRACK(FH_SDBW | 6), "\\Device\\Harddisk74\\Partition6", exists_ntdev, S_IFBLK},
  {"/dev/sdbw7", BRACK(FH_SDBW | 7), "\\Device\\Harddisk74\\Partition7", exists_ntdev, S_IFBLK},
  {"/dev/sdbw8", BRACK(FH_SDBW | 8), "\\Device\\Harddisk74\\Partition8", exists_ntdev, S_IFBLK},
  {"/dev/sdbw9", BRACK(FH_SDBW | 9), "\\Device\\Harddisk74\\Partition9", exists_ntdev, S_IFBLK},
  {"/dev/sdbw10", BRACK(FH_SDBW | 10), "\\Device\\Harddisk74\\Partition10", exists_ntdev, S_IFBLK},
  {"/dev/sdbw11", BRACK(FH_SDBW | 11), "\\Device\\Harddisk74\\Partition11", exists_ntdev, S_IFBLK},
  {"/dev/sdbw12", BRACK(FH_SDBW | 12), "\\Device\\Harddisk74\\Partition12", exists_ntdev, S_IFBLK},
  {"/dev/sdbw13", BRACK(FH_SDBW | 13), "\\Device\\Harddisk74\\Partition13", exists_ntdev, S_IFBLK},
  {"/dev/sdbw14", BRACK(FH_SDBW | 14), "\\Device\\Harddisk74\\Partition14", exists_ntdev, S_IFBLK},
  {"/dev/sdbw15", BRACK(FH_SDBW | 15), "\\Device\\Harddisk74\\Partition15", exists_ntdev, S_IFBLK},
  {"/dev/sdbx1", BRACK(FH_SDBX | 1), "\\Device\\Harddisk75\\Partition1", exists_ntdev, S_IFBLK},
  {"/dev/sdbx2", BRACK(FH_SDBX | 2), "\\Device\\Harddisk75\\Partition2", exists_ntdev, S_IFBLK},
  {"/dev/sdbx3", BRACK(FH_SDBX | 3), "\\Device\\Harddisk75\\Partition3", exists_ntdev, S_IFBLK},
  {"/dev/sdbx4", BRACK(FH_SDBX | 4), "\\Device\\Harddisk75\\Partition4", exists_ntdev, S_IFBLK},
  {"/dev/sdbx5", BRACK(FH_SDBX | 5), "\\Device\\Harddisk75\\Partition5", exists_ntdev, S_IFBLK},
  {"/dev/sdbx6", BRACK(FH_SDBX | 6), "\\Device\\Harddisk75\\Partition6", exists_ntdev, S_IFBLK},
  {"/dev/sdbx7", BRACK(FH_SDBX | 7), "\\Device\\Harddisk75\\Partition7", exists_ntdev, S_IFBLK},
  {"/dev/sdbx8", BRACK(FH_SDBX | 8), "\\Device\\Harddisk75\\Partition8", exists_ntdev, S_IFBLK},
  {"/dev/sdbx9", BRACK(FH_SDBX | 9), "\\Device\\Harddisk75\\Partition9", exists_ntdev, S_IFBLK},
  {"/dev/sdbx10", BRACK(FH_SDBX | 10), "\\Device\\Harddisk75\\Partition10", exists_ntdev, S_IFBLK},
  {"/dev/sdbx11", BRACK(FH_SDBX | 11), "\\Device\\Harddisk75\\Partition11", exists_ntdev, S_IFBLK},
  {"/dev/sdbx12", BRACK(FH_SDBX | 12), "\\Device\\Harddisk75\\Partition12", exists_ntdev, S_IFBLK},
  {"/dev/sdbx13", BRACK(FH_SDBX | 13), "\\Device\\Harddisk75\\Partition13", exists_ntdev, S_IFBLK},
  {"/dev/sdbx14", BRACK(FH_SDBX | 14), "\\Device\\Harddisk75\\Partition14", exists_ntdev, S_IFBLK},
  {"/dev/sdbx15", BRACK(FH_SDBX | 15), "\\Device\\Harddisk75\\Partition15", exists_ntdev, S_IFBLK},
  {"/dev/sdby1", BRACK(FH_SDBY | 1), "\\Device\\Harddisk76\\Partition1", exists_ntdev, S_IFBLK},
  {"/dev/sdby2", BRACK(FH_SDBY | 2), "\\Device\\Harddisk76\\Partition2", exists_ntdev, S_IFBLK},
  {"/dev/sdby3", BRACK(FH_SDBY | 3), "\\Device\\Harddisk76\\Partition3", exists_ntdev, S_IFBLK},
  {"/dev/sdby4", BRACK(FH_SDBY | 4), "\\Device\\Harddisk76\\Partition4", exists_ntdev, S_IFBLK},
  {"/dev/sdby5", BRACK(FH_SDBY | 5), "\\Device\\Harddisk76\\Partition5", exists_ntdev, S_IFBLK},
  {"/dev/sdby6", BRACK(FH_SDBY | 6), "\\Device\\Harddisk76\\Partition6", exists_ntdev, S_IFBLK},
  {"/dev/sdby7", BRACK(FH_SDBY | 7), "\\Device\\Harddisk76\\Partition7", exists_ntdev, S_IFBLK},
  {"/dev/sdby8", BRACK(FH_SDBY | 8), "\\Device\\Harddisk76\\Partition8", exists_ntdev, S_IFBLK},
  {"/dev/sdby9", BRACK(FH_SDBY | 9), "\\Device\\Harddisk76\\Partition9", exists_ntdev, S_IFBLK},
  {"/dev/sdby10", BRACK(FH_SDBY | 10), "\\Device\\Harddisk76\\Partition10", exists_ntdev, S_IFBLK},
  {"/dev/sdby11", BRACK(FH_SDBY | 11), "\\Device\\Harddisk76\\Partition11", exists_ntdev, S_IFBLK},
  {"/dev/sdby12", BRACK(FH_SDBY | 12), "\\Device\\Harddisk76\\Partition12", exists_ntdev, S_IFBLK},
  {"/dev/sdby13", BRACK(FH_SDBY | 13), "\\Device\\Harddisk76\\Partition13", exists_ntdev, S_IFBLK},
  {"/dev/sdby14", BRACK(FH_SDBY | 14), "\\Device\\Harddisk76\\Partition14", exists_ntdev, S_IFBLK},
  {"/dev/sdby15", BRACK(FH_SDBY | 15), "\\Device\\Harddisk76\\Partition15", exists_ntdev, S_IFBLK},
  {"/dev/sdbz1", BRACK(FH_SDBZ | 1), "\\Device\\Harddisk77\\Partition1", exists_ntdev, S_IFBLK},
  {"/dev/sdbz2", BRACK(FH_SDBZ | 2), "\\Device\\Harddisk77\\Partition2", exists_ntdev, S_IFBLK},
  {"/dev/sdbz3", BRACK(FH_SDBZ | 3), "\\Device\\Harddisk77\\Partition3", exists_ntdev, S_IFBLK},
  {"/dev/sdbz4", BRACK(FH_SDBZ | 4), "\\Device\\Harddisk77\\Partition4", exists_ntdev, S_IFBLK},
  {"/dev/sdbz5", BRACK(FH_SDBZ | 5), "\\Device\\Harddisk77\\Partition5", exists_ntdev, S_IFBLK},
  {"/dev/sdbz6", BRACK(FH_SDBZ | 6), "\\Device\\Harddisk77\\Partition6", exists_ntdev, S_IFBLK},
  {"/dev/sdbz7", BRACK(FH_SDBZ | 7), "\\Device\\Harddisk77\\Partition7", exists_ntdev, S_IFBLK},
  {"/dev/sdbz8", BRACK(FH_SDBZ | 8), "\\Device\\Harddisk77\\Partition8", exists_ntdev, S_IFBLK},
  {"/dev/sdbz9", BRACK(FH_SDBZ | 9), "\\Device\\Harddisk77\\Partition9", exists_ntdev, S_IFBLK},
  {"/dev/sdbz10", BRACK(FH_SDBZ | 10), "\\Device\\Harddisk77\\Partition10", exists_ntdev, S_IFBLK},
  {"/dev/sdbz11", BRACK(FH_SDBZ | 11), "\\Device\\Harddisk77\\Partition11", exists_ntdev, S_IFBLK},
  {"/dev/sdbz12", BRACK(FH_SDBZ | 12), "\\Device\\Harddisk77\\Partition12", exists_ntdev, S_IFBLK},
  {"/dev/sdbz13", BRACK(FH_SDBZ | 13), "\\Device\\Harddisk77\\Partition13", exists_ntdev, S_IFBLK},
  {"/dev/sdbz14", BRACK(FH_SDBZ | 14), "\\Device\\Harddisk77\\Partition14", exists_ntdev, S_IFBLK},
  {"/dev/sdbz15", BRACK(FH_SDBZ | 15), "\\Device\\Harddisk77\\Partition15", exists_ntdev, S_IFBLK},
  {"/dev/sdca", BRACK(FH_SDCA), "\\Device\\Harddisk78\\Partition0", exists_ntdev, S_IFBLK},
  {"/dev/sdcb", BRACK(FH_SDCB), "\\Device\\Harddisk79\\Partition0", exists_ntdev, S_IFBLK},
  {"/dev/sdcc", BRACK(FH_SDCC), "\\Device\\Harddisk80\\Partition0", exists_ntdev, S_IFBLK},
  {"/dev/sdcd", BRACK(FH_SDCD), "\\Device\\Harddisk81\\Partition0", exists_ntdev, S_IFBLK},
  {"/dev/sdce", BRACK(FH_SDCE), "\\Device\\Harddisk82\\Partition0", exists_ntdev, S_IFBLK},
  {"/dev/sdcf", BRACK(FH_SDCF), "\\Device\\Harddisk83\\Partition0", exists_ntdev, S_IFBLK},
  {"/dev/sdcg", BRACK(FH_SDCG), "\\Device\\Harddisk84\\Partition0", exists_ntdev, S_IFBLK},
  {"/dev/sdch", BRACK(FH_SDCH), "\\Device\\Harddisk85\\Partition0", exists_ntdev, S_IFBLK},
  {"/dev/sdci", BRACK(FH_SDCI), "\\Device\\Harddisk86\\Partition0", exists_ntdev, S_IFBLK},
  {"/dev/sdcj", BRACK(FH_SDCJ), "\\Device\\Harddisk87\\Partition0", exists_ntdev, S_IFBLK},
  {"/dev/sdck", BRACK(FH_SDCK), "\\Device\\Harddisk88\\Partition0", exists_ntdev, S_IFBLK},
  {"/dev/sdcl", BRACK(FH_SDCL), "\\Device\\Harddisk89\\Partition0", exists_ntdev, S_IFBLK},
  {"/dev/sdcm", BRACK(FH_SDCM), "\\Device\\Harddisk90\\Partition0", exists_ntdev, S_IFBLK},
  {"/dev/sdcn", BRACK(FH_SDCN), "\\Device\\Harddisk91\\Partition0", exists_ntdev, S_IFBLK},
  {"/dev/sdco", BRACK(FH_SDCO), "\\Device\\Harddisk92\\Partition0", exists_ntdev, S_IFBLK},
  {"/dev/sdcp", BRACK(FH_SDCP), "\\Device\\Harddisk93\\Partition0", exists_ntdev, S_IFBLK},
  {"/dev/sdcq", BRACK(FH_SDCQ), "\\Device\\Harddisk94\\Partition0", exists_ntdev, S_IFBLK},
  {"/dev/sdcr", BRACK(FH_SDCR), "\\Device\\Harddisk95\\Partition0", exists_ntdev, S_IFBLK},
  {"/dev/sdcs", BRACK(FH_SDCS), "\\Device\\Harddisk96\\Partition0", exists_ntdev, S_IFBLK},
  {"/dev/sdct", BRACK(FH_SDCT), "\\Device\\Harddisk97\\Partition0", exists_ntdev, S_IFBLK},
  {"/dev/sdcu", BRACK(FH_SDCU), "\\Device\\Harddisk98\\Partition0", exists_ntdev, S_IFBLK},
  {"/dev/sdcv", BRACK(FH_SDCV), "\\Device\\Harddisk99\\Partition0", exists_ntdev, S_IFBLK},
  {"/dev/sdcw", BRACK(FH_SDCW), "\\Device\\Harddisk100\\Partition0", exists_ntdev, S_IFBLK},
  {"/dev/sdcx", BRACK(FH_SDCX), "\\Device\\Harddisk101\\Partition0", exists_ntdev, S_IFBLK},
  {"/dev/sdcy", BRACK(FH_SDCY), "\\Device\\Harddisk102\\Partition0", exists_ntdev, S_IFBLK},
  {"/dev/sdcz", BRACK(FH_SDCZ), "\\Device\\Harddisk103\\Partition0", exists_ntdev, S_IFBLK},
  {"/dev/sdca1", BRACK(FH_SDCA | 1), "\\Device\\Harddisk78\\Partition1", exists_ntdev, S_IFBLK},
  {"/dev/sdca2", BRACK(FH_SDCA | 2), "\\Device\\Harddisk78\\Partition2", exists_ntdev, S_IFBLK},
  {"/dev/sdca3", BRACK(FH_SDCA | 3), "\\Device\\Harddisk78\\Partition3", exists_ntdev, S_IFBLK},
  {"/dev/sdca4", BRACK(FH_SDCA | 4), "\\Device\\Harddisk78\\Partition4", exists_ntdev, S_IFBLK},
  {"/dev/sdca5", BRACK(FH_SDCA | 5), "\\Device\\Harddisk78\\Partition5", exists_ntdev, S_IFBLK},
  {"/dev/sdca6", BRACK(FH_SDCA | 6), "\\Device\\Harddisk78\\Partition6", exists_ntdev, S_IFBLK},
  {"/dev/sdca7", BRACK(FH_SDCA | 7), "\\Device\\Harddisk78\\Partition7", exists_ntdev, S_IFBLK},
  {"/dev/sdca8", BRACK(FH_SDCA | 8), "\\Device\\Harddisk78\\Partition8", exists_ntdev, S_IFBLK},
  {"/dev/sdca9", BRACK(FH_SDCA | 9), "\\Device\\Harddisk78\\Partition9", exists_ntdev, S_IFBLK},
  {"/dev/sdca10", BRACK(FH_SDCA | 10), "\\Device\\Harddisk78\\Partition10", exists_ntdev, S_IFBLK},
  {"/dev/sdca11", BRACK(FH_SDCA | 11), "\\Device\\Harddisk78\\Partition11", exists_ntdev, S_IFBLK},
  {"/dev/sdca12", BRACK(FH_SDCA | 12), "\\Device\\Harddisk78\\Partition12", exists_ntdev, S_IFBLK},
  {"/dev/sdca13", BRACK(FH_SDCA | 13), "\\Device\\Harddisk78\\Partition13", exists_ntdev, S_IFBLK},
  {"/dev/sdca14", BRACK(FH_SDCA | 14), "\\Device\\Harddisk78\\Partition14", exists_ntdev, S_IFBLK},
  {"/dev/sdca15", BRACK(FH_SDCA | 15), "\\Device\\Harddisk78\\Partition15", exists_ntdev, S_IFBLK},
  {"/dev/sdcb1", BRACK(FH_SDCB | 1), "\\Device\\Harddisk79\\Partition1", exists_ntdev, S_IFBLK},
  {"/dev/sdcb2", BRACK(FH_SDCB | 2), "\\Device\\Harddisk79\\Partition2", exists_ntdev, S_IFBLK},
  {"/dev/sdcb3", BRACK(FH_SDCB | 3), "\\Device\\Harddisk79\\Partition3", exists_ntdev, S_IFBLK},
  {"/dev/sdcb4", BRACK(FH_SDCB | 4), "\\Device\\Harddisk79\\Partition4", exists_ntdev, S_IFBLK},
  {"/dev/sdcb5", BRACK(FH_SDCB | 5), "\\Device\\Harddisk79\\Partition5", exists_ntdev, S_IFBLK},
  {"/dev/sdcb6", BRACK(FH_SDCB | 6), "\\Device\\Harddisk79\\Partition6", exists_ntdev, S_IFBLK},
  {"/dev/sdcb7", BRACK(FH_SDCB | 7), "\\Device\\Harddisk79\\Partition7", exists_ntdev, S_IFBLK},
  {"/dev/sdcb8", BRACK(FH_SDCB | 8), "\\Device\\Harddisk79\\Partition8", exists_ntdev, S_IFBLK},
  {"/dev/sdcb9", BRACK(FH_SDCB | 9), "\\Device\\Harddisk79\\Partition9", exists_ntdev, S_IFBLK},
  {"/dev/sdcb10", BRACK(FH_SDCB | 10), "\\Device\\Harddisk79\\Partition10", exists_ntdev, S_IFBLK},
  {"/dev/sdcb11", BRACK(FH_SDCB | 11), "\\Device\\Harddisk79\\Partition11", exists_ntdev, S_IFBLK},
  {"/dev/sdcb12", BRACK(FH_SDCB | 12), "\\Device\\Harddisk79\\Partition12", exists_ntdev, S_IFBLK},
  {"/dev/sdcb13", BRACK(FH_SDCB | 13), "\\Device\\Harddisk79\\Partition13", exists_ntdev, S_IFBLK},
  {"/dev/sdcb14", BRACK(FH_SDCB | 14), "\\Device\\Harddisk79\\Partition14", exists_ntdev, S_IFBLK},
  {"/dev/sdcb15", BRACK(FH_SDCB | 15), "\\Device\\Harddisk79\\Partition15", exists_ntdev, S_IFBLK},
  {"/dev/sdcc1", BRACK(FH_SDCC | 1), "\\Device\\Harddisk80\\Partition1", exists_ntdev, S_IFBLK},
  {"/dev/sdcc2", BRACK(FH_SDCC | 2), "\\Device\\Harddisk80\\Partition2", exists_ntdev, S_IFBLK},
  {"/dev/sdcc3", BRACK(FH_SDCC | 3), "\\Device\\Harddisk80\\Partition3", exists_ntdev, S_IFBLK},
  {"/dev/sdcc4", BRACK(FH_SDCC | 4), "\\Device\\Harddisk80\\Partition4", exists_ntdev, S_IFBLK},
  {"/dev/sdcc5", BRACK(FH_SDCC | 5), "\\Device\\Harddisk80\\Partition5", exists_ntdev, S_IFBLK},
  {"/dev/sdcc6", BRACK(FH_SDCC | 6), "\\Device\\Harddisk80\\Partition6", exists_ntdev, S_IFBLK},
  {"/dev/sdcc7", BRACK(FH_SDCC | 7), "\\Device\\Harddisk80\\Partition7", exists_ntdev, S_IFBLK},
  {"/dev/sdcc8", BRACK(FH_SDCC | 8), "\\Device\\Harddisk80\\Partition8", exists_ntdev, S_IFBLK},
  {"/dev/sdcc9", BRACK(FH_SDCC | 9), "\\Device\\Harddisk80\\Partition9", exists_ntdev, S_IFBLK},
  {"/dev/sdcc10", BRACK(FH_SDCC | 10), "\\Device\\Harddisk80\\Partition10", exists_ntdev, S_IFBLK},
  {"/dev/sdcc11", BRACK(FH_SDCC | 11), "\\Device\\Harddisk80\\Partition11", exists_ntdev, S_IFBLK},
  {"/dev/sdcc12", BRACK(FH_SDCC | 12), "\\Device\\Harddisk80\\Partition12", exists_ntdev, S_IFBLK},
  {"/dev/sdcc13", BRACK(FH_SDCC | 13), "\\Device\\Harddisk80\\Partition13", exists_ntdev, S_IFBLK},
  {"/dev/sdcc14", BRACK(FH_SDCC | 14), "\\Device\\Harddisk80\\Partition14", exists_ntdev, S_IFBLK},
  {"/dev/sdcc15", BRACK(FH_SDCC | 15), "\\Device\\Harddisk80\\Partition15", exists_ntdev, S_IFBLK},
  {"/dev/sdcd1", BRACK(FH_SDCD | 1), "\\Device\\Harddisk81\\Partition1", exists_ntdev, S_IFBLK},
  {"/dev/sdcd2", BRACK(FH_SDCD | 2), "\\Device\\Harddisk81\\Partition2", exists_ntdev, S_IFBLK},
  {"/dev/sdcd3", BRACK(FH_SDCD | 3), "\\Device\\Harddisk81\\Partition3", exists_ntdev, S_IFBLK},
  {"/dev/sdcd4", BRACK(FH_SDCD | 4), "\\Device\\Harddisk81\\Partition4", exists_ntdev, S_IFBLK},
  {"/dev/sdcd5", BRACK(FH_SDCD | 5), "\\Device\\Harddisk81\\Partition5", exists_ntdev, S_IFBLK},
  {"/dev/sdcd6", BRACK(FH_SDCD | 6), "\\Device\\Harddisk81\\Partition6", exists_ntdev, S_IFBLK},
  {"/dev/sdcd7", BRACK(FH_SDCD | 7), "\\Device\\Harddisk81\\Partition7", exists_ntdev, S_IFBLK},
  {"/dev/sdcd8", BRACK(FH_SDCD | 8), "\\Device\\Harddisk81\\Partition8", exists_ntdev, S_IFBLK},
  {"/dev/sdcd9", BRACK(FH_SDCD | 9), "\\Device\\Harddisk81\\Partition9", exists_ntdev, S_IFBLK},
  {"/dev/sdcd10", BRACK(FH_SDCD | 10), "\\Device\\Harddisk81\\Partition10", exists_ntdev, S_IFBLK},
  {"/dev/sdcd11", BRACK(FH_SDCD | 11), "\\Device\\Harddisk81\\Partition11", exists_ntdev, S_IFBLK},
  {"/dev/sdcd12", BRACK(FH_SDCD | 12), "\\Device\\Harddisk81\\Partition12", exists_ntdev, S_IFBLK},
  {"/dev/sdcd13", BRACK(FH_SDCD | 13), "\\Device\\Harddisk81\\Partition13", exists_ntdev, S_IFBLK},
  {"/dev/sdcd14", BRACK(FH_SDCD | 14), "\\Device\\Harddisk81\\Partition14", exists_ntdev, S_IFBLK},
  {"/dev/sdcd15", BRACK(FH_SDCD | 15), "\\Device\\Harddisk81\\Partition15", exists_ntdev, S_IFBLK},
  {"/dev/sdce1", BRACK(FH_SDCE | 1), "\\Device\\Harddisk82\\Partition1", exists_ntdev, S_IFBLK},
  {"/dev/sdce2", BRACK(FH_SDCE | 2), "\\Device\\Harddisk82\\Partition2", exists_ntdev, S_IFBLK},
  {"/dev/sdce3", BRACK(FH_SDCE | 3), "\\Device\\Harddisk82\\Partition3", exists_ntdev, S_IFBLK},
  {"/dev/sdce4", BRACK(FH_SDCE | 4), "\\Device\\Harddisk82\\Partition4", exists_ntdev, S_IFBLK},
  {"/dev/sdce5", BRACK(FH_SDCE | 5), "\\Device\\Harddisk82\\Partition5", exists_ntdev, S_IFBLK},
  {"/dev/sdce6", BRACK(FH_SDCE | 6), "\\Device\\Harddisk82\\Partition6", exists_ntdev, S_IFBLK},
  {"/dev/sdce7", BRACK(FH_SDCE | 7), "\\Device\\Harddisk82\\Partition7", exists_ntdev, S_IFBLK},
  {"/dev/sdce8", BRACK(FH_SDCE | 8), "\\Device\\Harddisk82\\Partition8", exists_ntdev, S_IFBLK},
  {"/dev/sdce9", BRACK(FH_SDCE | 9), "\\Device\\Harddisk82\\Partition9", exists_ntdev, S_IFBLK},
  {"/dev/sdce10", BRACK(FH_SDCE | 10), "\\Device\\Harddisk82\\Partition10", exists_ntdev, S_IFBLK},
  {"/dev/sdce11", BRACK(FH_SDCE | 11), "\\Device\\Harddisk82\\Partition11", exists_ntdev, S_IFBLK},
  {"/dev/sdce12", BRACK(FH_SDCE | 12), "\\Device\\Harddisk82\\Partition12", exists_ntdev, S_IFBLK},
  {"/dev/sdce13", BRACK(FH_SDCE | 13), "\\Device\\Harddisk82\\Partition13", exists_ntdev, S_IFBLK},
  {"/dev/sdce14", BRACK(FH_SDCE | 14), "\\Device\\Harddisk82\\Partition14", exists_ntdev, S_IFBLK},
  {"/dev/sdce15", BRACK(FH_SDCE | 15), "\\Device\\Harddisk82\\Partition15", exists_ntdev, S_IFBLK},
  {"/dev/sdcf1", BRACK(FH_SDCF | 1), "\\Device\\Harddisk83\\Partition1", exists_ntdev, S_IFBLK},
  {"/dev/sdcf2", BRACK(FH_SDCF | 2), "\\Device\\Harddisk83\\Partition2", exists_ntdev, S_IFBLK},
  {"/dev/sdcf3", BRACK(FH_SDCF | 3), "\\Device\\Harddisk83\\Partition3", exists_ntdev, S_IFBLK},
  {"/dev/sdcf4", BRACK(FH_SDCF | 4), "\\Device\\Harddisk83\\Partition4", exists_ntdev, S_IFBLK},
  {"/dev/sdcf5", BRACK(FH_SDCF | 5), "\\Device\\Harddisk83\\Partition5", exists_ntdev, S_IFBLK},
  {"/dev/sdcf6", BRACK(FH_SDCF | 6), "\\Device\\Harddisk83\\Partition6", exists_ntdev, S_IFBLK},
  {"/dev/sdcf7", BRACK(FH_SDCF | 7), "\\Device\\Harddisk83\\Partition7", exists_ntdev, S_IFBLK},
  {"/dev/sdcf8", BRACK(FH_SDCF | 8), "\\Device\\Harddisk83\\Partition8", exists_ntdev, S_IFBLK},
  {"/dev/sdcf9", BRACK(FH_SDCF | 9), "\\Device\\Harddisk83\\Partition9", exists_ntdev, S_IFBLK},
  {"/dev/sdcf10", BRACK(FH_SDCF | 10), "\\Device\\Harddisk83\\Partition10", exists_ntdev, S_IFBLK},
  {"/dev/sdcf11", BRACK(FH_SDCF | 11), "\\Device\\Harddisk83\\Partition11", exists_ntdev, S_IFBLK},
  {"/dev/sdcf12", BRACK(FH_SDCF | 12), "\\Device\\Harddisk83\\Partition12", exists_ntdev, S_IFBLK},
  {"/dev/sdcf13", BRACK(FH_SDCF | 13), "\\Device\\Harddisk83\\Partition13", exists_ntdev, S_IFBLK},
  {"/dev/sdcf14", BRACK(FH_SDCF | 14), "\\Device\\Harddisk83\\Partition14", exists_ntdev, S_IFBLK},
  {"/dev/sdcf15", BRACK(FH_SDCF | 15), "\\Device\\Harddisk83\\Partition15", exists_ntdev, S_IFBLK},
  {"/dev/sdcg1", BRACK(FH_SDCG | 1), "\\Device\\Harddisk84\\Partition1", exists_ntdev, S_IFBLK},
  {"/dev/sdcg2", BRACK(FH_SDCG | 2), "\\Device\\Harddisk84\\Partition2", exists_ntdev, S_IFBLK},
  {"/dev/sdcg3", BRACK(FH_SDCG | 3), "\\Device\\Harddisk84\\Partition3", exists_ntdev, S_IFBLK},
  {"/dev/sdcg4", BRACK(FH_SDCG | 4), "\\Device\\Harddisk84\\Partition4", exists_ntdev, S_IFBLK},
  {"/dev/sdcg5", BRACK(FH_SDCG | 5), "\\Device\\Harddisk84\\Partition5", exists_ntdev, S_IFBLK},
  {"/dev/sdcg6", BRACK(FH_SDCG | 6), "\\Device\\Harddisk84\\Partition6", exists_ntdev, S_IFBLK},
  {"/dev/sdcg7", BRACK(FH_SDCG | 7), "\\Device\\Harddisk84\\Partition7", exists_ntdev, S_IFBLK},
  {"/dev/sdcg8", BRACK(FH_SDCG | 8), "\\Device\\Harddisk84\\Partition8", exists_ntdev, S_IFBLK},
  {"/dev/sdcg9", BRACK(FH_SDCG | 9), "\\Device\\Harddisk84\\Partition9", exists_ntdev, S_IFBLK},
  {"/dev/sdcg10", BRACK(FH_SDCG | 10), "\\Device\\Harddisk84\\Partition10", exists_ntdev, S_IFBLK},
  {"/dev/sdcg11", BRACK(FH_SDCG | 11), "\\Device\\Harddisk84\\Partition11", exists_ntdev, S_IFBLK},
  {"/dev/sdcg12", BRACK(FH_SDCG | 12), "\\Device\\Harddisk84\\Partition12", exists_ntdev, S_IFBLK},
  {"/dev/sdcg13", BRACK(FH_SDCG | 13), "\\Device\\Harddisk84\\Partition13", exists_ntdev, S_IFBLK},
  {"/dev/sdcg14", BRACK(FH_SDCG | 14), "\\Device\\Harddisk84\\Partition14", exists_ntdev, S_IFBLK},
  {"/dev/sdcg15", BRACK(FH_SDCG | 15), "\\Device\\Harddisk84\\Partition15", exists_ntdev, S_IFBLK},
  {"/dev/sdch1", BRACK(FH_SDCH | 1), "\\Device\\Harddisk85\\Partition1", exists_ntdev, S_IFBLK},
  {"/dev/sdch2", BRACK(FH_SDCH | 2), "\\Device\\Harddisk85\\Partition2", exists_ntdev, S_IFBLK},
  {"/dev/sdch3", BRACK(FH_SDCH | 3), "\\Device\\Harddisk85\\Partition3", exists_ntdev, S_IFBLK},
  {"/dev/sdch4", BRACK(FH_SDCH | 4), "\\Device\\Harddisk85\\Partition4", exists_ntdev, S_IFBLK},
  {"/dev/sdch5", BRACK(FH_SDCH | 5), "\\Device\\Harddisk85\\Partition5", exists_ntdev, S_IFBLK},
  {"/dev/sdch6", BRACK(FH_SDCH | 6), "\\Device\\Harddisk85\\Partition6", exists_ntdev, S_IFBLK},
  {"/dev/sdch7", BRACK(FH_SDCH | 7), "\\Device\\Harddisk85\\Partition7", exists_ntdev, S_IFBLK},
  {"/dev/sdch8", BRACK(FH_SDCH | 8), "\\Device\\Harddisk85\\Partition8", exists_ntdev, S_IFBLK},
  {"/dev/sdch9", BRACK(FH_SDCH | 9), "\\Device\\Harddisk85\\Partition9", exists_ntdev, S_IFBLK},
  {"/dev/sdch10", BRACK(FH_SDCH | 10), "\\Device\\Harddisk85\\Partition10", exists_ntdev, S_IFBLK},
  {"/dev/sdch11", BRACK(FH_SDCH | 11), "\\Device\\Harddisk85\\Partition11", exists_ntdev, S_IFBLK},
  {"/dev/sdch12", BRACK(FH_SDCH | 12), "\\Device\\Harddisk85\\Partition12", exists_ntdev, S_IFBLK},
  {"/dev/sdch13", BRACK(FH_SDCH | 13), "\\Device\\Harddisk85\\Partition13", exists_ntdev, S_IFBLK},
  {"/dev/sdch14", BRACK(FH_SDCH | 14), "\\Device\\Harddisk85\\Partition14", exists_ntdev, S_IFBLK},
  {"/dev/sdch15", BRACK(FH_SDCH | 15), "\\Device\\Harddisk85\\Partition15", exists_ntdev, S_IFBLK},
  {"/dev/sdci1", BRACK(FH_SDCI | 1), "\\Device\\Harddisk86\\Partition1", exists_ntdev, S_IFBLK},
  {"/dev/sdci2", BRACK(FH_SDCI | 2), "\\Device\\Harddisk86\\Partition2", exists_ntdev, S_IFBLK},
  {"/dev/sdci3", BRACK(FH_SDCI | 3), "\\Device\\Harddisk86\\Partition3", exists_ntdev, S_IFBLK},
  {"/dev/sdci4", BRACK(FH_SDCI | 4), "\\Device\\Harddisk86\\Partition4", exists_ntdev, S_IFBLK},
  {"/dev/sdci5", BRACK(FH_SDCI | 5), "\\Device\\Harddisk86\\Partition5", exists_ntdev, S_IFBLK},
  {"/dev/sdci6", BRACK(FH_SDCI | 6), "\\Device\\Harddisk86\\Partition6", exists_ntdev, S_IFBLK},
  {"/dev/sdci7", BRACK(FH_SDCI | 7), "\\Device\\Harddisk86\\Partition7", exists_ntdev, S_IFBLK},
  {"/dev/sdci8", BRACK(FH_SDCI | 8), "\\Device\\Harddisk86\\Partition8", exists_ntdev, S_IFBLK},
  {"/dev/sdci9", BRACK(FH_SDCI | 9), "\\Device\\Harddisk86\\Partition9", exists_ntdev, S_IFBLK},
  {"/dev/sdci10", BRACK(FH_SDCI | 10), "\\Device\\Harddisk86\\Partition10", exists_ntdev, S_IFBLK},
  {"/dev/sdci11", BRACK(FH_SDCI | 11), "\\Device\\Harddisk86\\Partition11", exists_ntdev, S_IFBLK},
  {"/dev/sdci12", BRACK(FH_SDCI | 12), "\\Device\\Harddisk86\\Partition12", exists_ntdev, S_IFBLK},
  {"/dev/sdci13", BRACK(FH_SDCI | 13), "\\Device\\Harddisk86\\Partition13", exists_ntdev, S_IFBLK},
  {"/dev/sdci14", BRACK(FH_SDCI | 14), "\\Device\\Harddisk86\\Partition14", exists_ntdev, S_IFBLK},
  {"/dev/sdci15", BRACK(FH_SDCI | 15), "\\Device\\Harddisk86\\Partition15", exists_ntdev, S_IFBLK},
  {"/dev/sdcj1", BRACK(FH_SDCJ | 1), "\\Device\\Harddisk87\\Partition1", exists_ntdev, S_IFBLK},
  {"/dev/sdcj2", BRACK(FH_SDCJ | 2), "\\Device\\Harddisk87\\Partition2", exists_ntdev, S_IFBLK},
  {"/dev/sdcj3", BRACK(FH_SDCJ | 3), "\\Device\\Harddisk87\\Partition3", exists_ntdev, S_IFBLK},
  {"/dev/sdcj4", BRACK(FH_SDCJ | 4), "\\Device\\Harddisk87\\Partition4", exists_ntdev, S_IFBLK},
  {"/dev/sdcj5", BRACK(FH_SDCJ | 5), "\\Device\\Harddisk87\\Partition5", exists_ntdev, S_IFBLK},
  {"/dev/sdcj6", BRACK(FH_SDCJ | 6), "\\Device\\Harddisk87\\Partition6", exists_ntdev, S_IFBLK},
  {"/dev/sdcj7", BRACK(FH_SDCJ | 7), "\\Device\\Harddisk87\\Partition7", exists_ntdev, S_IFBLK},
  {"/dev/sdcj8", BRACK(FH_SDCJ | 8), "\\Device\\Harddisk87\\Partition8", exists_ntdev, S_IFBLK},
  {"/dev/sdcj9", BRACK(FH_SDCJ | 9), "\\Device\\Harddisk87\\Partition9", exists_ntdev, S_IFBLK},
  {"/dev/sdcj10", BRACK(FH_SDCJ | 10), "\\Device\\Harddisk87\\Partition10", exists_ntdev, S_IFBLK},
  {"/dev/sdcj11", BRACK(FH_SDCJ | 11), "\\Device\\Harddisk87\\Partition11", exists_ntdev, S_IFBLK},
  {"/dev/sdcj12", BRACK(FH_SDCJ | 12), "\\Device\\Harddisk87\\Partition12", exists_ntdev, S_IFBLK},
  {"/dev/sdcj13", BRACK(FH_SDCJ | 13), "\\Device\\Harddisk87\\Partition13", exists_ntdev, S_IFBLK},
  {"/dev/sdcj14", BRACK(FH_SDCJ | 14), "\\Device\\Harddisk87\\Partition14", exists_ntdev, S_IFBLK},
  {"/dev/sdcj15", BRACK(FH_SDCJ | 15), "\\Device\\Harddisk87\\Partition15", exists_ntdev, S_IFBLK},
  {"/dev/sdck1", BRACK(FH_SDCK | 1), "\\Device\\Harddisk88\\Partition1", exists_ntdev, S_IFBLK},
  {"/dev/sdck2", BRACK(FH_SDCK | 2), "\\Device\\Harddisk88\\Partition2", exists_ntdev, S_IFBLK},
  {"/dev/sdck3", BRACK(FH_SDCK | 3), "\\Device\\Harddisk88\\Partition3", exists_ntdev, S_IFBLK},
  {"/dev/sdck4", BRACK(FH_SDCK | 4), "\\Device\\Harddisk88\\Partition4", exists_ntdev, S_IFBLK},
  {"/dev/sdck5", BRACK(FH_SDCK | 5), "\\Device\\Harddisk88\\Partition5", exists_ntdev, S_IFBLK},
  {"/dev/sdck6", BRACK(FH_SDCK | 6), "\\Device\\Harddisk88\\Partition6", exists_ntdev, S_IFBLK},
  {"/dev/sdck7", BRACK(FH_SDCK | 7), "\\Device\\Harddisk88\\Partition7", exists_ntdev, S_IFBLK},
  {"/dev/sdck8", BRACK(FH_SDCK | 8), "\\Device\\Harddisk88\\Partition8", exists_ntdev, S_IFBLK},
  {"/dev/sdck9", BRACK(FH_SDCK | 9), "\\Device\\Harddisk88\\Partition9", exists_ntdev, S_IFBLK},
  {"/dev/sdck10", BRACK(FH_SDCK | 10), "\\Device\\Harddisk88\\Partition10", exists_ntdev, S_IFBLK},
  {"/dev/sdck11", BRACK(FH_SDCK | 11), "\\Device\\Harddisk88\\Partition11", exists_ntdev, S_IFBLK},
  {"/dev/sdck12", BRACK(FH_SDCK | 12), "\\Device\\Harddisk88\\Partition12", exists_ntdev, S_IFBLK},
  {"/dev/sdck13", BRACK(FH_SDCK | 13), "\\Device\\Harddisk88\\Partition13", exists_ntdev, S_IFBLK},
  {"/dev/sdck14", BRACK(FH_SDCK | 14), "\\Device\\Harddisk88\\Partition14", exists_ntdev, S_IFBLK},
  {"/dev/sdck15", BRACK(FH_SDCK | 15), "\\Device\\Harddisk88\\Partition15", exists_ntdev, S_IFBLK},
  {"/dev/sdcl1", BRACK(FH_SDCL | 1), "\\Device\\Harddisk89\\Partition1", exists_ntdev, S_IFBLK},
  {"/dev/sdcl2", BRACK(FH_SDCL | 2), "\\Device\\Harddisk89\\Partition2", exists_ntdev, S_IFBLK},
  {"/dev/sdcl3", BRACK(FH_SDCL | 3), "\\Device\\Harddisk89\\Partition3", exists_ntdev, S_IFBLK},
  {"/dev/sdcl4", BRACK(FH_SDCL | 4), "\\Device\\Harddisk89\\Partition4", exists_ntdev, S_IFBLK},
  {"/dev/sdcl5", BRACK(FH_SDCL | 5), "\\Device\\Harddisk89\\Partition5", exists_ntdev, S_IFBLK},
  {"/dev/sdcl6", BRACK(FH_SDCL | 6), "\\Device\\Harddisk89\\Partition6", exists_ntdev, S_IFBLK},
  {"/dev/sdcl7", BRACK(FH_SDCL | 7), "\\Device\\Harddisk89\\Partition7", exists_ntdev, S_IFBLK},
  {"/dev/sdcl8", BRACK(FH_SDCL | 8), "\\Device\\Harddisk89\\Partition8", exists_ntdev, S_IFBLK},
  {"/dev/sdcl9", BRACK(FH_SDCL | 9), "\\Device\\Harddisk89\\Partition9", exists_ntdev, S_IFBLK},
  {"/dev/sdcl10", BRACK(FH_SDCL | 10), "\\Device\\Harddisk89\\Partition10", exists_ntdev, S_IFBLK},
  {"/dev/sdcl11", BRACK(FH_SDCL | 11), "\\Device\\Harddisk89\\Partition11", exists_ntdev, S_IFBLK},
  {"/dev/sdcl12", BRACK(FH_SDCL | 12), "\\Device\\Harddisk89\\Partition12", exists_ntdev, S_IFBLK},
  {"/dev/sdcl13", BRACK(FH_SDCL | 13), "\\Device\\Harddisk89\\Partition13", exists_ntdev, S_IFBLK},
  {"/dev/sdcl14", BRACK(FH_SDCL | 14), "\\Device\\Harddisk89\\Partition14", exists_ntdev, S_IFBLK},
  {"/dev/sdcl15", BRACK(FH_SDCL | 15), "\\Device\\Harddisk89\\Partition15", exists_ntdev, S_IFBLK},
  {"/dev/sdcm1", BRACK(FH_SDCM | 1), "\\Device\\Harddisk90\\Partition1", exists_ntdev, S_IFBLK},
  {"/dev/sdcm2", BRACK(FH_SDCM | 2), "\\Device\\Harddisk90\\Partition2", exists_ntdev, S_IFBLK},
  {"/dev/sdcm3", BRACK(FH_SDCM | 3), "\\Device\\Harddisk90\\Partition3", exists_ntdev, S_IFBLK},
  {"/dev/sdcm4", BRACK(FH_SDCM | 4), "\\Device\\Harddisk90\\Partition4", exists_ntdev, S_IFBLK},
  {"/dev/sdcm5", BRACK(FH_SDCM | 5), "\\Device\\Harddisk90\\Partition5", exists_ntdev, S_IFBLK},
  {"/dev/sdcm6", BRACK(FH_SDCM | 6), "\\Device\\Harddisk90\\Partition6", exists_ntdev, S_IFBLK},
  {"/dev/sdcm7", BRACK(FH_SDCM | 7), "\\Device\\Harddisk90\\Partition7", exists_ntdev, S_IFBLK},
  {"/dev/sdcm8", BRACK(FH_SDCM | 8), "\\Device\\Harddisk90\\Partition8", exists_ntdev, S_IFBLK},
  {"/dev/sdcm9", BRACK(FH_SDCM | 9), "\\Device\\Harddisk90\\Partition9", exists_ntdev, S_IFBLK},
  {"/dev/sdcm10", BRACK(FH_SDCM | 10), "\\Device\\Harddisk90\\Partition10", exists_ntdev, S_IFBLK},
  {"/dev/sdcm11", BRACK(FH_SDCM | 11), "\\Device\\Harddisk90\\Partition11", exists_ntdev, S_IFBLK},
  {"/dev/sdcm12", BRACK(FH_SDCM | 12), "\\Device\\Harddisk90\\Partition12", exists_ntdev, S_IFBLK},
  {"/dev/sdcm13", BRACK(FH_SDCM | 13), "\\Device\\Harddisk90\\Partition13", exists_ntdev, S_IFBLK},
  {"/dev/sdcm14", BRACK(FH_SDCM | 14), "\\Device\\Harddisk90\\Partition14", exists_ntdev, S_IFBLK},
  {"/dev/sdcm15", BRACK(FH_SDCM | 15), "\\Device\\Harddisk90\\Partition15", exists_ntdev, S_IFBLK},
  {"/dev/sdcn1", BRACK(FH_SDCN | 1), "\\Device\\Harddisk91\\Partition1", exists_ntdev, S_IFBLK},
  {"/dev/sdcn2", BRACK(FH_SDCN | 2), "\\Device\\Harddisk91\\Partition2", exists_ntdev, S_IFBLK},
  {"/dev/sdcn3", BRACK(FH_SDCN | 3), "\\Device\\Harddisk91\\Partition3", exists_ntdev, S_IFBLK},
  {"/dev/sdcn4", BRACK(FH_SDCN | 4), "\\Device\\Harddisk91\\Partition4", exists_ntdev, S_IFBLK},
  {"/dev/sdcn5", BRACK(FH_SDCN | 5), "\\Device\\Harddisk91\\Partition5", exists_ntdev, S_IFBLK},
  {"/dev/sdcn6", BRACK(FH_SDCN | 6), "\\Device\\Harddisk91\\Partition6", exists_ntdev, S_IFBLK},
  {"/dev/sdcn7", BRACK(FH_SDCN | 7), "\\Device\\Harddisk91\\Partition7", exists_ntdev, S_IFBLK},
  {"/dev/sdcn8", BRACK(FH_SDCN | 8), "\\Device\\Harddisk91\\Partition8", exists_ntdev, S_IFBLK},
  {"/dev/sdcn9", BRACK(FH_SDCN | 9), "\\Device\\Harddisk91\\Partition9", exists_ntdev, S_IFBLK},
  {"/dev/sdcn10", BRACK(FH_SDCN | 10), "\\Device\\Harddisk91\\Partition10", exists_ntdev, S_IFBLK},
  {"/dev/sdcn11", BRACK(FH_SDCN | 11), "\\Device\\Harddisk91\\Partition11", exists_ntdev, S_IFBLK},
  {"/dev/sdcn12", BRACK(FH_SDCN | 12), "\\Device\\Harddisk91\\Partition12", exists_ntdev, S_IFBLK},
  {"/dev/sdcn13", BRACK(FH_SDCN | 13), "\\Device\\Harddisk91\\Partition13", exists_ntdev, S_IFBLK},
  {"/dev/sdcn14", BRACK(FH_SDCN | 14), "\\Device\\Harddisk91\\Partition14", exists_ntdev, S_IFBLK},
  {"/dev/sdcn15", BRACK(FH_SDCN | 15), "\\Device\\Harddisk91\\Partition15", exists_ntdev, S_IFBLK},
  {"/dev/sdco1", BRACK(FH_SDCO | 1), "\\Device\\Harddisk92\\Partition1", exists_ntdev, S_IFBLK},
  {"/dev/sdco2", BRACK(FH_SDCO | 2), "\\Device\\Harddisk92\\Partition2", exists_ntdev, S_IFBLK},
  {"/dev/sdco3", BRACK(FH_SDCO | 3), "\\Device\\Harddisk92\\Partition3", exists_ntdev, S_IFBLK},
  {"/dev/sdco4", BRACK(FH_SDCO | 4), "\\Device\\Harddisk92\\Partition4", exists_ntdev, S_IFBLK},
  {"/dev/sdco5", BRACK(FH_SDCO | 5), "\\Device\\Harddisk92\\Partition5", exists_ntdev, S_IFBLK},
  {"/dev/sdco6", BRACK(FH_SDCO | 6), "\\Device\\Harddisk92\\Partition6", exists_ntdev, S_IFBLK},
  {"/dev/sdco7", BRACK(FH_SDCO | 7), "\\Device\\Harddisk92\\Partition7", exists_ntdev, S_IFBLK},
  {"/dev/sdco8", BRACK(FH_SDCO | 8), "\\Device\\Harddisk92\\Partition8", exists_ntdev, S_IFBLK},
  {"/dev/sdco9", BRACK(FH_SDCO | 9), "\\Device\\Harddisk92\\Partition9", exists_ntdev, S_IFBLK},
  {"/dev/sdco10", BRACK(FH_SDCO | 10), "\\Device\\Harddisk92\\Partition10", exists_ntdev, S_IFBLK},
  {"/dev/sdco11", BRACK(FH_SDCO | 11), "\\Device\\Harddisk92\\Partition11", exists_ntdev, S_IFBLK},
  {"/dev/sdco12", BRACK(FH_SDCO | 12), "\\Device\\Harddisk92\\Partition12", exists_ntdev, S_IFBLK},
  {"/dev/sdco13", BRACK(FH_SDCO | 13), "\\Device\\Harddisk92\\Partition13", exists_ntdev, S_IFBLK},
  {"/dev/sdco14", BRACK(FH_SDCO | 14), "\\Device\\Harddisk92\\Partition14", exists_ntdev, S_IFBLK},
  {"/dev/sdco15", BRACK(FH_SDCO | 15), "\\Device\\Harddisk92\\Partition15", exists_ntdev, S_IFBLK},
  {"/dev/sdcp1", BRACK(FH_SDCP | 1), "\\Device\\Harddisk93\\Partition1", exists_ntdev, S_IFBLK},
  {"/dev/sdcp2", BRACK(FH_SDCP | 2), "\\Device\\Harddisk93\\Partition2", exists_ntdev, S_IFBLK},
  {"/dev/sdcp3", BRACK(FH_SDCP | 3), "\\Device\\Harddisk93\\Partition3", exists_ntdev, S_IFBLK},
  {"/dev/sdcp4", BRACK(FH_SDCP | 4), "\\Device\\Harddisk93\\Partition4", exists_ntdev, S_IFBLK},
  {"/dev/sdcp5", BRACK(FH_SDCP | 5), "\\Device\\Harddisk93\\Partition5", exists_ntdev, S_IFBLK},
  {"/dev/sdcp6", BRACK(FH_SDCP | 6), "\\Device\\Harddisk93\\Partition6", exists_ntdev, S_IFBLK},
  {"/dev/sdcp7", BRACK(FH_SDCP | 7), "\\Device\\Harddisk93\\Partition7", exists_ntdev, S_IFBLK},
  {"/dev/sdcp8", BRACK(FH_SDCP | 8), "\\Device\\Harddisk93\\Partition8", exists_ntdev, S_IFBLK},
  {"/dev/sdcp9", BRACK(FH_SDCP | 9), "\\Device\\Harddisk93\\Partition9", exists_ntdev, S_IFBLK},
  {"/dev/sdcp10", BRACK(FH_SDCP | 10), "\\Device\\Harddisk93\\Partition10", exists_ntdev, S_IFBLK},
  {"/dev/sdcp11", BRACK(FH_SDCP | 11), "\\Device\\Harddisk93\\Partition11", exists_ntdev, S_IFBLK},
  {"/dev/sdcp12", BRACK(FH_SDCP | 12), "\\Device\\Harddisk93\\Partition12", exists_ntdev, S_IFBLK},
  {"/dev/sdcp13", BRACK(FH_SDCP | 13), "\\Device\\Harddisk93\\Partition13", exists_ntdev, S_IFBLK},
  {"/dev/sdcp14", BRACK(FH_SDCP | 14), "\\Device\\Harddisk93\\Partition14", exists_ntdev, S_IFBLK},
  {"/dev/sdcp15", BRACK(FH_SDCP | 15), "\\Device\\Harddisk93\\Partition15", exists_ntdev, S_IFBLK},
  {"/dev/sdcq1", BRACK(FH_SDCQ | 1), "\\Device\\Harddisk94\\Partition1", exists_ntdev, S_IFBLK},
  {"/dev/sdcq2", BRACK(FH_SDCQ | 2), "\\Device\\Harddisk94\\Partition2", exists_ntdev, S_IFBLK},
  {"/dev/sdcq3", BRACK(FH_SDCQ | 3), "\\Device\\Harddisk94\\Partition3", exists_ntdev, S_IFBLK},
  {"/dev/sdcq4", BRACK(FH_SDCQ | 4), "\\Device\\Harddisk94\\Partition4", exists_ntdev, S_IFBLK},
  {"/dev/sdcq5", BRACK(FH_SDCQ | 5), "\\Device\\Harddisk94\\Partition5", exists_ntdev, S_IFBLK},
  {"/dev/sdcq6", BRACK(FH_SDCQ | 6), "\\Device\\Harddisk94\\Partition6", exists_ntdev, S_IFBLK},
  {"/dev/sdcq7", BRACK(FH_SDCQ | 7), "\\Device\\Harddisk94\\Partition7", exists_ntdev, S_IFBLK},
  {"/dev/sdcq8", BRACK(FH_SDCQ | 8), "\\Device\\Harddisk94\\Partition8", exists_ntdev, S_IFBLK},
  {"/dev/sdcq9", BRACK(FH_SDCQ | 9), "\\Device\\Harddisk94\\Partition9", exists_ntdev, S_IFBLK},
  {"/dev/sdcq10", BRACK(FH_SDCQ | 10), "\\Device\\Harddisk94\\Partition10", exists_ntdev, S_IFBLK},
  {"/dev/sdcq11", BRACK(FH_SDCQ | 11), "\\Device\\Harddisk94\\Partition11", exists_ntdev, S_IFBLK},
  {"/dev/sdcq12", BRACK(FH_SDCQ | 12), "\\Device\\Harddisk94\\Partition12", exists_ntdev, S_IFBLK},
  {"/dev/sdcq13", BRACK(FH_SDCQ | 13), "\\Device\\Harddisk94\\Partition13", exists_ntdev, S_IFBLK},
  {"/dev/sdcq14", BRACK(FH_SDCQ | 14), "\\Device\\Harddisk94\\Partition14", exists_ntdev, S_IFBLK},
  {"/dev/sdcq15", BRACK(FH_SDCQ | 15), "\\Device\\Harddisk94\\Partition15", exists_ntdev, S_IFBLK},
  {"/dev/sdcr1", BRACK(FH_SDCR | 1), "\\Device\\Harddisk95\\Partition1", exists_ntdev, S_IFBLK},
  {"/dev/sdcr2", BRACK(FH_SDCR | 2), "\\Device\\Harddisk95\\Partition2", exists_ntdev, S_IFBLK},
  {"/dev/sdcr3", BRACK(FH_SDCR | 3), "\\Device\\Harddisk95\\Partition3", exists_ntdev, S_IFBLK},
  {"/dev/sdcr4", BRACK(FH_SDCR | 4), "\\Device\\Harddisk95\\Partition4", exists_ntdev, S_IFBLK},
  {"/dev/sdcr5", BRACK(FH_SDCR | 5), "\\Device\\Harddisk95\\Partition5", exists_ntdev, S_IFBLK},
  {"/dev/sdcr6", BRACK(FH_SDCR | 6), "\\Device\\Harddisk95\\Partition6", exists_ntdev, S_IFBLK},
  {"/dev/sdcr7", BRACK(FH_SDCR | 7), "\\Device\\Harddisk95\\Partition7", exists_ntdev, S_IFBLK},
  {"/dev/sdcr8", BRACK(FH_SDCR | 8), "\\Device\\Harddisk95\\Partition8", exists_ntdev, S_IFBLK},
  {"/dev/sdcr9", BRACK(FH_SDCR | 9), "\\Device\\Harddisk95\\Partition9", exists_ntdev, S_IFBLK},
  {"/dev/sdcr10", BRACK(FH_SDCR | 10), "\\Device\\Harddisk95\\Partition10", exists_ntdev, S_IFBLK},
  {"/dev/sdcr11", BRACK(FH_SDCR | 11), "\\Device\\Harddisk95\\Partition11", exists_ntdev, S_IFBLK},
  {"/dev/sdcr12", BRACK(FH_SDCR | 12), "\\Device\\Harddisk95\\Partition12", exists_ntdev, S_IFBLK},
  {"/dev/sdcr13", BRACK(FH_SDCR | 13), "\\Device\\Harddisk95\\Partition13", exists_ntdev, S_IFBLK},
  {"/dev/sdcr14", BRACK(FH_SDCR | 14), "\\Device\\Harddisk95\\Partition14", exists_ntdev, S_IFBLK},
  {"/dev/sdcr15", BRACK(FH_SDCR | 15), "\\Device\\Harddisk95\\Partition15", exists_ntdev, S_IFBLK},
  {"/dev/sdcs1", BRACK(FH_SDCS | 1), "\\Device\\Harddisk96\\Partition1", exists_ntdev, S_IFBLK},
  {"/dev/sdcs2", BRACK(FH_SDCS | 2), "\\Device\\Harddisk96\\Partition2", exists_ntdev, S_IFBLK},
  {"/dev/sdcs3", BRACK(FH_SDCS | 3), "\\Device\\Harddisk96\\Partition3", exists_ntdev, S_IFBLK},
  {"/dev/sdcs4", BRACK(FH_SDCS | 4), "\\Device\\Harddisk96\\Partition4", exists_ntdev, S_IFBLK},
  {"/dev/sdcs5", BRACK(FH_SDCS | 5), "\\Device\\Harddisk96\\Partition5", exists_ntdev, S_IFBLK},
  {"/dev/sdcs6", BRACK(FH_SDCS | 6), "\\Device\\Harddisk96\\Partition6", exists_ntdev, S_IFBLK},
  {"/dev/sdcs7", BRACK(FH_SDCS | 7), "\\Device\\Harddisk96\\Partition7", exists_ntdev, S_IFBLK},
  {"/dev/sdcs8", BRACK(FH_SDCS | 8), "\\Device\\Harddisk96\\Partition8", exists_ntdev, S_IFBLK},
  {"/dev/sdcs9", BRACK(FH_SDCS | 9), "\\Device\\Harddisk96\\Partition9", exists_ntdev, S_IFBLK},
  {"/dev/sdcs10", BRACK(FH_SDCS | 10), "\\Device\\Harddisk96\\Partition10", exists_ntdev, S_IFBLK},
  {"/dev/sdcs11", BRACK(FH_SDCS | 11), "\\Device\\Harddisk96\\Partition11", exists_ntdev, S_IFBLK},
  {"/dev/sdcs12", BRACK(FH_SDCS | 12), "\\Device\\Harddisk96\\Partition12", exists_ntdev, S_IFBLK},
  {"/dev/sdcs13", BRACK(FH_SDCS | 13), "\\Device\\Harddisk96\\Partition13", exists_ntdev, S_IFBLK},
  {"/dev/sdcs14", BRACK(FH_SDCS | 14), "\\Device\\Harddisk96\\Partition14", exists_ntdev, S_IFBLK},
  {"/dev/sdcs15", BRACK(FH_SDCS | 15), "\\Device\\Harddisk96\\Partition15", exists_ntdev, S_IFBLK},
  {"/dev/sdct1", BRACK(FH_SDCT | 1), "\\Device\\Harddisk97\\Partition1", exists_ntdev, S_IFBLK},
  {"/dev/sdct2", BRACK(FH_SDCT | 2), "\\Device\\Harddisk97\\Partition2", exists_ntdev, S_IFBLK},
  {"/dev/sdct3", BRACK(FH_SDCT | 3), "\\Device\\Harddisk97\\Partition3", exists_ntdev, S_IFBLK},
  {"/dev/sdct4", BRACK(FH_SDCT | 4), "\\Device\\Harddisk97\\Partition4", exists_ntdev, S_IFBLK},
  {"/dev/sdct5", BRACK(FH_SDCT | 5), "\\Device\\Harddisk97\\Partition5", exists_ntdev, S_IFBLK},
  {"/dev/sdct6", BRACK(FH_SDCT | 6), "\\Device\\Harddisk97\\Partition6", exists_ntdev, S_IFBLK},
  {"/dev/sdct7", BRACK(FH_SDCT | 7), "\\Device\\Harddisk97\\Partition7", exists_ntdev, S_IFBLK},
  {"/dev/sdct8", BRACK(FH_SDCT | 8), "\\Device\\Harddisk97\\Partition8", exists_ntdev, S_IFBLK},
  {"/dev/sdct9", BRACK(FH_SDCT | 9), "\\Device\\Harddisk97\\Partition9", exists_ntdev, S_IFBLK},
  {"/dev/sdct10", BRACK(FH_SDCT | 10), "\\Device\\Harddisk97\\Partition10", exists_ntdev, S_IFBLK},
  {"/dev/sdct11", BRACK(FH_SDCT | 11), "\\Device\\Harddisk97\\Partition11", exists_ntdev, S_IFBLK},
  {"/dev/sdct12", BRACK(FH_SDCT | 12), "\\Device\\Harddisk97\\Partition12", exists_ntdev, S_IFBLK},
  {"/dev/sdct13", BRACK(FH_SDCT | 13), "\\Device\\Harddisk97\\Partition13", exists_ntdev, S_IFBLK},
  {"/dev/sdct14", BRACK(FH_SDCT | 14), "\\Device\\Harddisk97\\Partition14", exists_ntdev, S_IFBLK},
  {"/dev/sdct15", BRACK(FH_SDCT | 15), "\\Device\\Harddisk97\\Partition15", exists_ntdev, S_IFBLK},
  {"/dev/sdcu1", BRACK(FH_SDCU | 1), "\\Device\\Harddisk98\\Partition1", exists_ntdev, S_IFBLK},
  {"/dev/sdcu2", BRACK(FH_SDCU | 2), "\\Device\\Harddisk98\\Partition2", exists_ntdev, S_IFBLK},
  {"/dev/sdcu3", BRACK(FH_SDCU | 3), "\\Device\\Harddisk98\\Partition3", exists_ntdev, S_IFBLK},
  {"/dev/sdcu4", BRACK(FH_SDCU | 4), "\\Device\\Harddisk98\\Partition4", exists_ntdev, S_IFBLK},
  {"/dev/sdcu5", BRACK(FH_SDCU | 5), "\\Device\\Harddisk98\\Partition5", exists_ntdev, S_IFBLK},
  {"/dev/sdcu6", BRACK(FH_SDCU | 6), "\\Device\\Harddisk98\\Partition6", exists_ntdev, S_IFBLK},
  {"/dev/sdcu7", BRACK(FH_SDCU | 7), "\\Device\\Harddisk98\\Partition7", exists_ntdev, S_IFBLK},
  {"/dev/sdcu8", BRACK(FH_SDCU | 8), "\\Device\\Harddisk98\\Partition8", exists_ntdev, S_IFBLK},
  {"/dev/sdcu9", BRACK(FH_SDCU | 9), "\\Device\\Harddisk98\\Partition9", exists_ntdev, S_IFBLK},
  {"/dev/sdcu10", BRACK(FH_SDCU | 10), "\\Device\\Harddisk98\\Partition10", exists_ntdev, S_IFBLK},
  {"/dev/sdcu11", BRACK(FH_SDCU | 11), "\\Device\\Harddisk98\\Partition11", exists_ntdev, S_IFBLK},
  {"/dev/sdcu12", BRACK(FH_SDCU | 12), "\\Device\\Harddisk98\\Partition12", exists_ntdev, S_IFBLK},
  {"/dev/sdcu13", BRACK(FH_SDCU | 13), "\\Device\\Harddisk98\\Partition13", exists_ntdev, S_IFBLK},
  {"/dev/sdcu14", BRACK(FH_SDCU | 14), "\\Device\\Harddisk98\\Partition14", exists_ntdev, S_IFBLK},
  {"/dev/sdcu15", BRACK(FH_SDCU | 15), "\\Device\\Harddisk98\\Partition15", exists_ntdev, S_IFBLK},
  {"/dev/sdcv1", BRACK(FH_SDCV | 1), "\\Device\\Harddisk99\\Partition1", exists_ntdev, S_IFBLK},
  {"/dev/sdcv2", BRACK(FH_SDCV | 2), "\\Device\\Harddisk99\\Partition2", exists_ntdev, S_IFBLK},
  {"/dev/sdcv3", BRACK(FH_SDCV | 3), "\\Device\\Harddisk99\\Partition3", exists_ntdev, S_IFBLK},
  {"/dev/sdcv4", BRACK(FH_SDCV | 4), "\\Device\\Harddisk99\\Partition4", exists_ntdev, S_IFBLK},
  {"/dev/sdcv5", BRACK(FH_SDCV | 5), "\\Device\\Harddisk99\\Partition5", exists_ntdev, S_IFBLK},
  {"/dev/sdcv6", BRACK(FH_SDCV | 6), "\\Device\\Harddisk99\\Partition6", exists_ntdev, S_IFBLK},
  {"/dev/sdcv7", BRACK(FH_SDCV | 7), "\\Device\\Harddisk99\\Partition7", exists_ntdev, S_IFBLK},
  {"/dev/sdcv8", BRACK(FH_SDCV | 8), "\\Device\\Harddisk99\\Partition8", exists_ntdev, S_IFBLK},
  {"/dev/sdcv9", BRACK(FH_SDCV | 9), "\\Device\\Harddisk99\\Partition9", exists_ntdev, S_IFBLK},
  {"/dev/sdcv10", BRACK(FH_SDCV | 10), "\\Device\\Harddisk99\\Partition10", exists_ntdev, S_IFBLK},
  {"/dev/sdcv11", BRACK(FH_SDCV | 11), "\\Device\\Harddisk99\\Partition11", exists_ntdev, S_IFBLK},
  {"/dev/sdcv12", BRACK(FH_SDCV | 12), "\\Device\\Harddisk99\\Partition12", exists_ntdev, S_IFBLK},
  {"/dev/sdcv13", BRACK(FH_SDCV | 13), "\\Device\\Harddisk99\\Partition13", exists_ntdev, S_IFBLK},
  {"/dev/sdcv14", BRACK(FH_SDCV | 14), "\\Device\\Harddisk99\\Partition14", exists_ntdev, S_IFBLK},
  {"/dev/sdcv15", BRACK(FH_SDCV | 15), "\\Device\\Harddisk99\\Partition15", exists_ntdev, S_IFBLK},
  {"/dev/sdcw1", BRACK(FH_SDCW | 1), "\\Device\\Harddisk100\\Partition1", exists_ntdev, S_IFBLK},
  {"/dev/sdcw2", BRACK(FH_SDCW | 2), "\\Device\\Harddisk100\\Partition2", exists_ntdev, S_IFBLK},
  {"/dev/sdcw3", BRACK(FH_SDCW | 3), "\\Device\\Harddisk100\\Partition3", exists_ntdev, S_IFBLK},
  {"/dev/sdcw4", BRACK(FH_SDCW | 4), "\\Device\\Harddisk100\\Partition4", exists_ntdev, S_IFBLK},
  {"/dev/sdcw5", BRACK(FH_SDCW | 5), "\\Device\\Harddisk100\\Partition5", exists_ntdev, S_IFBLK},
  {"/dev/sdcw6", BRACK(FH_SDCW | 6), "\\Device\\Harddisk100\\Partition6", exists_ntdev, S_IFBLK},
  {"/dev/sdcw7", BRACK(FH_SDCW | 7), "\\Device\\Harddisk100\\Partition7", exists_ntdev, S_IFBLK},
  {"/dev/sdcw8", BRACK(FH_SDCW | 8), "\\Device\\Harddisk100\\Partition8", exists_ntdev, S_IFBLK},
  {"/dev/sdcw9", BRACK(FH_SDCW | 9), "\\Device\\Harddisk100\\Partition9", exists_ntdev, S_IFBLK},
  {"/dev/sdcw10", BRACK(FH_SDCW | 10), "\\Device\\Harddisk100\\Partition10", exists_ntdev, S_IFBLK},
  {"/dev/sdcw11", BRACK(FH_SDCW | 11), "\\Device\\Harddisk100\\Partition11", exists_ntdev, S_IFBLK},
  {"/dev/sdcw12", BRACK(FH_SDCW | 12), "\\Device\\Harddisk100\\Partition12", exists_ntdev, S_IFBLK},
  {"/dev/sdcw13", BRACK(FH_SDCW | 13), "\\Device\\Harddisk100\\Partition13", exists_ntdev, S_IFBLK},
  {"/dev/sdcw14", BRACK(FH_SDCW | 14), "\\Device\\Harddisk100\\Partition14", exists_ntdev, S_IFBLK},
  {"/dev/sdcw15", BRACK(FH_SDCW | 15), "\\Device\\Harddisk100\\Partition15", exists_ntdev, S_IFBLK},
  {"/dev/sdcx1", BRACK(FH_SDCX | 1), "\\Device\\Harddisk101\\Partition1", exists_ntdev, S_IFBLK},
  {"/dev/sdcx2", BRACK(FH_SDCX | 2), "\\Device\\Harddisk101\\Partition2", exists_ntdev, S_IFBLK},
  {"/dev/sdcx3", BRACK(FH_SDCX | 3), "\\Device\\Harddisk101\\Partition3", exists_ntdev, S_IFBLK},
  {"/dev/sdcx4", BRACK(FH_SDCX | 4), "\\Device\\Harddisk101\\Partition4", exists_ntdev, S_IFBLK},
  {"/dev/sdcx5", BRACK(FH_SDCX | 5), "\\Device\\Harddisk101\\Partition5", exists_ntdev, S_IFBLK},
  {"/dev/sdcx6", BRACK(FH_SDCX | 6), "\\Device\\Harddisk101\\Partition6", exists_ntdev, S_IFBLK},
  {"/dev/sdcx7", BRACK(FH_SDCX | 7), "\\Device\\Harddisk101\\Partition7", exists_ntdev, S_IFBLK},
  {"/dev/sdcx8", BRACK(FH_SDCX | 8), "\\Device\\Harddisk101\\Partition8", exists_ntdev, S_IFBLK},
  {"/dev/sdcx9", BRACK(FH_SDCX | 9), "\\Device\\Harddisk101\\Partition9", exists_ntdev, S_IFBLK},
  {"/dev/sdcx10", BRACK(FH_SDCX | 10), "\\Device\\Harddisk101\\Partition10", exists_ntdev, S_IFBLK},
  {"/dev/sdcx11", BRACK(FH_SDCX | 11), "\\Device\\Harddisk101\\Partition11", exists_ntdev, S_IFBLK},
  {"/dev/sdcx12", BRACK(FH_SDCX | 12), "\\Device\\Harddisk101\\Partition12", exists_ntdev, S_IFBLK},
  {"/dev/sdcx13", BRACK(FH_SDCX | 13), "\\Device\\Harddisk101\\Partition13", exists_ntdev, S_IFBLK},
  {"/dev/sdcx14", BRACK(FH_SDCX | 14), "\\Device\\Harddisk101\\Partition14", exists_ntdev, S_IFBLK},
  {"/dev/sdcx15", BRACK(FH_SDCX | 15), "\\Device\\Harddisk101\\Partition15", exists_ntdev, S_IFBLK},
  {"/dev/sdcy1", BRACK(FH_SDCY | 1), "\\Device\\Harddisk102\\Partition1", exists_ntdev, S_IFBLK},
  {"/dev/sdcy2", BRACK(FH_SDCY | 2), "\\Device\\Harddisk102\\Partition2", exists_ntdev, S_IFBLK},
  {"/dev/sdcy3", BRACK(FH_SDCY | 3), "\\Device\\Harddisk102\\Partition3", exists_ntdev, S_IFBLK},
  {"/dev/sdcy4", BRACK(FH_SDCY | 4), "\\Device\\Harddisk102\\Partition4", exists_ntdev, S_IFBLK},
  {"/dev/sdcy5", BRACK(FH_SDCY | 5), "\\Device\\Harddisk102\\Partition5", exists_ntdev, S_IFBLK},
  {"/dev/sdcy6", BRACK(FH_SDCY | 6), "\\Device\\Harddisk102\\Partition6", exists_ntdev, S_IFBLK},
  {"/dev/sdcy7", BRACK(FH_SDCY | 7), "\\Device\\Harddisk102\\Partition7", exists_ntdev, S_IFBLK},
  {"/dev/sdcy8", BRACK(FH_SDCY | 8), "\\Device\\Harddisk102\\Partition8", exists_ntdev, S_IFBLK},
  {"/dev/sdcy9", BRACK(FH_SDCY | 9), "\\Device\\Harddisk102\\Partition9", exists_ntdev, S_IFBLK},
  {"/dev/sdcy10", BRACK(FH_SDCY | 10), "\\Device\\Harddisk102\\Partition10", exists_ntdev, S_IFBLK},
  {"/dev/sdcy11", BRACK(FH_SDCY | 11), "\\Device\\Harddisk102\\Partition11", exists_ntdev, S_IFBLK},
  {"/dev/sdcy12", BRACK(FH_SDCY | 12), "\\Device\\Harddisk102\\Partition12", exists_ntdev, S_IFBLK},
  {"/dev/sdcy13", BRACK(FH_SDCY | 13), "\\Device\\Harddisk102\\Partition13", exists_ntdev, S_IFBLK},
  {"/dev/sdcy14", BRACK(FH_SDCY | 14), "\\Device\\Harddisk102\\Partition14", exists_ntdev, S_IFBLK},
  {"/dev/sdcy15", BRACK(FH_SDCY | 15), "\\Device\\Harddisk102\\Partition15", exists_ntdev, S_IFBLK},
  {"/dev/sdcz1", BRACK(FH_SDCZ | 1), "\\Device\\Harddisk103\\Partition1", exists_ntdev, S_IFBLK},
  {"/dev/sdcz2", BRACK(FH_SDCZ | 2), "\\Device\\Harddisk103\\Partition2", exists_ntdev, S_IFBLK},
  {"/dev/sdcz3", BRACK(FH_SDCZ | 3), "\\Device\\Harddisk103\\Partition3", exists_ntdev, S_IFBLK},
  {"/dev/sdcz4", BRACK(FH_SDCZ | 4), "\\Device\\Harddisk103\\Partition4", exists_ntdev, S_IFBLK},
  {"/dev/sdcz5", BRACK(FH_SDCZ | 5), "\\Device\\Harddisk103\\Partition5", exists_ntdev, S_IFBLK},
  {"/dev/sdcz6", BRACK(FH_SDCZ | 6), "\\Device\\Harddisk103\\Partition6", exists_ntdev, S_IFBLK},
  {"/dev/sdcz7", BRACK(FH_SDCZ | 7), "\\Device\\Harddisk103\\Partition7", exists_ntdev, S_IFBLK},
  {"/dev/sdcz8", BRACK(FH_SDCZ | 8), "\\Device\\Harddisk103\\Partition8", exists_ntdev, S_IFBLK},
  {"/dev/sdcz9", BRACK(FH_SDCZ | 9), "\\Device\\Harddisk103\\Partition9", exists_ntdev, S_IFBLK},
  {"/dev/sdcz10", BRACK(FH_SDCZ | 10), "\\Device\\Harddisk103\\Partition10", exists_ntdev, S_IFBLK},
  {"/dev/sdcz11", BRACK(FH_SDCZ | 11), "\\Device\\Harddisk103\\Partition11", exists_ntdev, S_IFBLK},
  {"/dev/sdcz12", BRACK(FH_SDCZ | 12), "\\Device\\Harddisk103\\Partition12", exists_ntdev, S_IFBLK},
  {"/dev/sdcz13", BRACK(FH_SDCZ | 13), "\\Device\\Harddisk103\\Partition13", exists_ntdev, S_IFBLK},
  {"/dev/sdcz14", BRACK(FH_SDCZ | 14), "\\Device\\Harddisk103\\Partition14", exists_ntdev, S_IFBLK},
  {"/dev/sdcz15", BRACK(FH_SDCZ | 15), "\\Device\\Harddisk103\\Partition15", exists_ntdev, S_IFBLK},
  {"/dev/sdda", BRACK(FH_SDDA), "\\Device\\Harddisk104\\Partition0", exists_ntdev, S_IFBLK},
  {"/dev/sddb", BRACK(FH_SDDB), "\\Device\\Harddisk105\\Partition0", exists_ntdev, S_IFBLK},
  {"/dev/sddc", BRACK(FH_SDDC), "\\Device\\Harddisk106\\Partition0", exists_ntdev, S_IFBLK},
  {"/dev/sddd", BRACK(FH_SDDD), "\\Device\\Harddisk107\\Partition0", exists_ntdev, S_IFBLK},
  {"/dev/sdde", BRACK(FH_SDDE), "\\Device\\Harddisk108\\Partition0", exists_ntdev, S_IFBLK},
  {"/dev/sddf", BRACK(FH_SDDF), "\\Device\\Harddisk109\\Partition0", exists_ntdev, S_IFBLK},
  {"/dev/sddg", BRACK(FH_SDDG), "\\Device\\Harddisk110\\Partition0", exists_ntdev, S_IFBLK},
  {"/dev/sddh", BRACK(FH_SDDH), "\\Device\\Harddisk111\\Partition0", exists_ntdev, S_IFBLK},
  {"/dev/sddi", BRACK(FH_SDDI), "\\Device\\Harddisk112\\Partition0", exists_ntdev, S_IFBLK},
  {"/dev/sddj", BRACK(FH_SDDJ), "\\Device\\Harddisk113\\Partition0", exists_ntdev, S_IFBLK},
  {"/dev/sddk", BRACK(FH_SDDK), "\\Device\\Harddisk114\\Partition0", exists_ntdev, S_IFBLK},
  {"/dev/sddl", BRACK(FH_SDDL), "\\Device\\Harddisk115\\Partition0", exists_ntdev, S_IFBLK},
  {"/dev/sddm", BRACK(FH_SDDM), "\\Device\\Harddisk116\\Partition0", exists_ntdev, S_IFBLK},
  {"/dev/sddn", BRACK(FH_SDDN), "\\Device\\Harddisk117\\Partition0", exists_ntdev, S_IFBLK},
  {"/dev/sddo", BRACK(FH_SDDO), "\\Device\\Harddisk118\\Partition0", exists_ntdev, S_IFBLK},
  {"/dev/sddp", BRACK(FH_SDDP), "\\Device\\Harddisk119\\Partition0", exists_ntdev, S_IFBLK},
  {"/dev/sddq", BRACK(FH_SDDQ), "\\Device\\Harddisk120\\Partition0", exists_ntdev, S_IFBLK},
  {"/dev/sddr", BRACK(FH_SDDR), "\\Device\\Harddisk121\\Partition0", exists_ntdev, S_IFBLK},
  {"/dev/sdds", BRACK(FH_SDDS), "\\Device\\Harddisk122\\Partition0", exists_ntdev, S_IFBLK},
  {"/dev/sddt", BRACK(FH_SDDT), "\\Device\\Harddisk123\\Partition0", exists_ntdev, S_IFBLK},
  {"/dev/sddu", BRACK(FH_SDDU), "\\Device\\Harddisk124\\Partition0", exists_ntdev, S_IFBLK},
  {"/dev/sddv", BRACK(FH_SDDV), "\\Device\\Harddisk125\\Partition0", exists_ntdev, S_IFBLK},
  {"/dev/sddw", BRACK(FH_SDDW), "\\Device\\Harddisk126\\Partition0", exists_ntdev, S_IFBLK},
  {"/dev/sddx", BRACK(FH_SDDX), "\\Device\\Harddisk127\\Partition0", exists_ntdev, S_IFBLK},
  {"/dev/sdda1", BRACK(FH_SDDA | 1), "\\Device\\Harddisk104\\Partition1", exists_ntdev, S_IFBLK},
  {"/dev/sdda2", BRACK(FH_SDDA | 2), "\\Device\\Harddisk104\\Partition2", exists_ntdev, S_IFBLK},
  {"/dev/sdda3", BRACK(FH_SDDA | 3), "\\Device\\Harddisk104\\Partition3", exists_ntdev, S_IFBLK},
  {"/dev/sdda4", BRACK(FH_SDDA | 4), "\\Device\\Harddisk104\\Partition4", exists_ntdev, S_IFBLK},
  {"/dev/sdda5", BRACK(FH_SDDA | 5), "\\Device\\Harddisk104\\Partition5", exists_ntdev, S_IFBLK},
  {"/dev/sdda6", BRACK(FH_SDDA | 6), "\\Device\\Harddisk104\\Partition6", exists_ntdev, S_IFBLK},
  {"/dev/sdda7", BRACK(FH_SDDA | 7), "\\Device\\Harddisk104\\Partition7", exists_ntdev, S_IFBLK},
  {"/dev/sdda8", BRACK(FH_SDDA | 8), "\\Device\\Harddisk104\\Partition8", exists_ntdev, S_IFBLK},
  {"/dev/sdda9", BRACK(FH_SDDA | 9), "\\Device\\Harddisk104\\Partition9", exists_ntdev, S_IFBLK},
  {"/dev/sdda10", BRACK(FH_SDDA | 10), "\\Device\\Harddisk104\\Partition10", exists_ntdev, S_IFBLK},
  {"/dev/sdda11", BRACK(FH_SDDA | 11), "\\Device\\Harddisk104\\Partition11", exists_ntdev, S_IFBLK},
  {"/dev/sdda12", BRACK(FH_SDDA | 12), "\\Device\\Harddisk104\\Partition12", exists_ntdev, S_IFBLK},
  {"/dev/sdda13", BRACK(FH_SDDA | 13), "\\Device\\Harddisk104\\Partition13", exists_ntdev, S_IFBLK},
  {"/dev/sdda14", BRACK(FH_SDDA | 14), "\\Device\\Harddisk104\\Partition14", exists_ntdev, S_IFBLK},
  {"/dev/sdda15", BRACK(FH_SDDA | 15), "\\Device\\Harddisk104\\Partition15", exists_ntdev, S_IFBLK},
  {"/dev/sddb1", BRACK(FH_SDDB | 1), "\\Device\\Harddisk105\\Partition1", exists_ntdev, S_IFBLK},
  {"/dev/sddb2", BRACK(FH_SDDB | 2), "\\Device\\Harddisk105\\Partition2", exists_ntdev, S_IFBLK},
  {"/dev/sddb3", BRACK(FH_SDDB | 3), "\\Device\\Harddisk105\\Partition3", exists_ntdev, S_IFBLK},
  {"/dev/sddb4", BRACK(FH_SDDB | 4), "\\Device\\Harddisk105\\Partition4", exists_ntdev, S_IFBLK},
  {"/dev/sddb5", BRACK(FH_SDDB | 5), "\\Device\\Harddisk105\\Partition5", exists_ntdev, S_IFBLK},
  {"/dev/sddb6", BRACK(FH_SDDB | 6), "\\Device\\Harddisk105\\Partition6", exists_ntdev, S_IFBLK},
  {"/dev/sddb7", BRACK(FH_SDDB | 7), "\\Device\\Harddisk105\\Partition7", exists_ntdev, S_IFBLK},
  {"/dev/sddb8", BRACK(FH_SDDB | 8), "\\Device\\Harddisk105\\Partition8", exists_ntdev, S_IFBLK},
  {"/dev/sddb9", BRACK(FH_SDDB | 9), "\\Device\\Harddisk105\\Partition9", exists_ntdev, S_IFBLK},
  {"/dev/sddb10", BRACK(FH_SDDB | 10), "\\Device\\Harddisk105\\Partition10", exists_ntdev, S_IFBLK},
  {"/dev/sddb11", BRACK(FH_SDDB | 11), "\\Device\\Harddisk105\\Partition11", exists_ntdev, S_IFBLK},
  {"/dev/sddb12", BRACK(FH_SDDB | 12), "\\Device\\Harddisk105\\Partition12", exists_ntdev, S_IFBLK},
  {"/dev/sddb13", BRACK(FH_SDDB | 13), "\\Device\\Harddisk105\\Partition13", exists_ntdev, S_IFBLK},
  {"/dev/sddb14", BRACK(FH_SDDB | 14), "\\Device\\Harddisk105\\Partition14", exists_ntdev, S_IFBLK},
  {"/dev/sddb15", BRACK(FH_SDDB | 15), "\\Device\\Harddisk105\\Partition15", exists_ntdev, S_IFBLK},
  {"/dev/sddc1", BRACK(FH_SDDC | 1), "\\Device\\Harddisk106\\Partition1", exists_ntdev, S_IFBLK},
  {"/dev/sddc2", BRACK(FH_SDDC | 2), "\\Device\\Harddisk106\\Partition2", exists_ntdev, S_IFBLK},
  {"/dev/sddc3", BRACK(FH_SDDC | 3), "\\Device\\Harddisk106\\Partition3", exists_ntdev, S_IFBLK},
  {"/dev/sddc4", BRACK(FH_SDDC | 4), "\\Device\\Harddisk106\\Partition4", exists_ntdev, S_IFBLK},
  {"/dev/sddc5", BRACK(FH_SDDC | 5), "\\Device\\Harddisk106\\Partition5", exists_ntdev, S_IFBLK},
  {"/dev/sddc6", BRACK(FH_SDDC | 6), "\\Device\\Harddisk106\\Partition6", exists_ntdev, S_IFBLK},
  {"/dev/sddc7", BRACK(FH_SDDC | 7), "\\Device\\Harddisk106\\Partition7", exists_ntdev, S_IFBLK},
  {"/dev/sddc8", BRACK(FH_SDDC | 8), "\\Device\\Harddisk106\\Partition8", exists_ntdev, S_IFBLK},
  {"/dev/sddc9", BRACK(FH_SDDC | 9), "\\Device\\Harddisk106\\Partition9", exists_ntdev, S_IFBLK},
  {"/dev/sddc10", BRACK(FH_SDDC | 10), "\\Device\\Harddisk106\\Partition10", exists_ntdev, S_IFBLK},
  {"/dev/sddc11", BRACK(FH_SDDC | 11), "\\Device\\Harddisk106\\Partition11", exists_ntdev, S_IFBLK},
  {"/dev/sddc12", BRACK(FH_SDDC | 12), "\\Device\\Harddisk106\\Partition12", exists_ntdev, S_IFBLK},
  {"/dev/sddc13", BRACK(FH_SDDC | 13), "\\Device\\Harddisk106\\Partition13", exists_ntdev, S_IFBLK},
  {"/dev/sddc14", BRACK(FH_SDDC | 14), "\\Device\\Harddisk106\\Partition14", exists_ntdev, S_IFBLK},
  {"/dev/sddc15", BRACK(FH_SDDC | 15), "\\Device\\Harddisk106\\Partition15", exists_ntdev, S_IFBLK},
  {"/dev/sddd1", BRACK(FH_SDDD | 1), "\\Device\\Harddisk107\\Partition1", exists_ntdev, S_IFBLK},
  {"/dev/sddd2", BRACK(FH_SDDD | 2), "\\Device\\Harddisk107\\Partition2", exists_ntdev, S_IFBLK},
  {"/dev/sddd3", BRACK(FH_SDDD | 3), "\\Device\\Harddisk107\\Partition3", exists_ntdev, S_IFBLK},
  {"/dev/sddd4", BRACK(FH_SDDD | 4), "\\Device\\Harddisk107\\Partition4", exists_ntdev, S_IFBLK},
  {"/dev/sddd5", BRACK(FH_SDDD | 5), "\\Device\\Harddisk107\\Partition5", exists_ntdev, S_IFBLK},
  {"/dev/sddd6", BRACK(FH_SDDD | 6), "\\Device\\Harddisk107\\Partition6", exists_ntdev, S_IFBLK},
  {"/dev/sddd7", BRACK(FH_SDDD | 7), "\\Device\\Harddisk107\\Partition7", exists_ntdev, S_IFBLK},
  {"/dev/sddd8", BRACK(FH_SDDD | 8), "\\Device\\Harddisk107\\Partition8", exists_ntdev, S_IFBLK},
  {"/dev/sddd9", BRACK(FH_SDDD | 9), "\\Device\\Harddisk107\\Partition9", exists_ntdev, S_IFBLK},
  {"/dev/sddd10", BRACK(FH_SDDD | 10), "\\Device\\Harddisk107\\Partition10", exists_ntdev, S_IFBLK},
  {"/dev/sddd11", BRACK(FH_SDDD | 11), "\\Device\\Harddisk107\\Partition11", exists_ntdev, S_IFBLK},
  {"/dev/sddd12", BRACK(FH_SDDD | 12), "\\Device\\Harddisk107\\Partition12", exists_ntdev, S_IFBLK},
  {"/dev/sddd13", BRACK(FH_SDDD | 13), "\\Device\\Harddisk107\\Partition13", exists_ntdev, S_IFBLK},
  {"/dev/sddd14", BRACK(FH_SDDD | 14), "\\Device\\Harddisk107\\Partition14", exists_ntdev, S_IFBLK},
  {"/dev/sddd15", BRACK(FH_SDDD | 15), "\\Device\\Harddisk107\\Partition15", exists_ntdev, S_IFBLK},
  {"/dev/sdde1", BRACK(FH_SDDE | 1), "\\Device\\Harddisk108\\Partition1", exists_ntdev, S_IFBLK},
  {"/dev/sdde2", BRACK(FH_SDDE | 2), "\\Device\\Harddisk108\\Partition2", exists_ntdev, S_IFBLK},
  {"/dev/sdde3", BRACK(FH_SDDE | 3), "\\Device\\Harddisk108\\Partition3", exists_ntdev, S_IFBLK},
  {"/dev/sdde4", BRACK(FH_SDDE | 4), "\\Device\\Harddisk108\\Partition4", exists_ntdev, S_IFBLK},
  {"/dev/sdde5", BRACK(FH_SDDE | 5), "\\Device\\Harddisk108\\Partition5", exists_ntdev, S_IFBLK},
  {"/dev/sdde6", BRACK(FH_SDDE | 6), "\\Device\\Harddisk108\\Partition6", exists_ntdev, S_IFBLK},
  {"/dev/sdde7", BRACK(FH_SDDE | 7), "\\Device\\Harddisk108\\Partition7", exists_ntdev, S_IFBLK},
  {"/dev/sdde8", BRACK(FH_SDDE | 8), "\\Device\\Harddisk108\\Partition8", exists_ntdev, S_IFBLK},
  {"/dev/sdde9", BRACK(FH_SDDE | 9), "\\Device\\Harddisk108\\Partition9", exists_ntdev, S_IFBLK},
  {"/dev/sdde10", BRACK(FH_SDDE | 10), "\\Device\\Harddisk108\\Partition10", exists_ntdev, S_IFBLK},
  {"/dev/sdde11", BRACK(FH_SDDE | 11), "\\Device\\Harddisk108\\Partition11", exists_ntdev, S_IFBLK},
  {"/dev/sdde12", BRACK(FH_SDDE | 12), "\\Device\\Harddisk108\\Partition12", exists_ntdev, S_IFBLK},
  {"/dev/sdde13", BRACK(FH_SDDE | 13), "\\Device\\Harddisk108\\Partition13", exists_ntdev, S_IFBLK},
  {"/dev/sdde14", BRACK(FH_SDDE | 14), "\\Device\\Harddisk108\\Partition14", exists_ntdev, S_IFBLK},
  {"/dev/sdde15", BRACK(FH_SDDE | 15), "\\Device\\Harddisk108\\Partition15", exists_ntdev, S_IFBLK},
  {"/dev/sddf1", BRACK(FH_SDDF | 1), "\\Device\\Harddisk109\\Partition1", exists_ntdev, S_IFBLK},
  {"/dev/sddf2", BRACK(FH_SDDF | 2), "\\Device\\Harddisk109\\Partition2", exists_ntdev, S_IFBLK},
  {"/dev/sddf3", BRACK(FH_SDDF | 3), "\\Device\\Harddisk109\\Partition3", exists_ntdev, S_IFBLK},
  {"/dev/sddf4", BRACK(FH_SDDF | 4), "\\Device\\Harddisk109\\Partition4", exists_ntdev, S_IFBLK},
  {"/dev/sddf5", BRACK(FH_SDDF | 5), "\\Device\\Harddisk109\\Partition5", exists_ntdev, S_IFBLK},
  {"/dev/sddf6", BRACK(FH_SDDF | 6), "\\Device\\Harddisk109\\Partition6", exists_ntdev, S_IFBLK},
  {"/dev/sddf7", BRACK(FH_SDDF | 7), "\\Device\\Harddisk109\\Partition7", exists_ntdev, S_IFBLK},
  {"/dev/sddf8", BRACK(FH_SDDF | 8), "\\Device\\Harddisk109\\Partition8", exists_ntdev, S_IFBLK},
  {"/dev/sddf9", BRACK(FH_SDDF | 9), "\\Device\\Harddisk109\\Partition9", exists_ntdev, S_IFBLK},
  {"/dev/sddf10", BRACK(FH_SDDF | 10), "\\Device\\Harddisk109\\Partition10", exists_ntdev, S_IFBLK},
  {"/dev/sddf11", BRACK(FH_SDDF | 11), "\\Device\\Harddisk109\\Partition11", exists_ntdev, S_IFBLK},
  {"/dev/sddf12", BRACK(FH_SDDF | 12), "\\Device\\Harddisk109\\Partition12", exists_ntdev, S_IFBLK},
  {"/dev/sddf13", BRACK(FH_SDDF | 13), "\\Device\\Harddisk109\\Partition13", exists_ntdev, S_IFBLK},
  {"/dev/sddf14", BRACK(FH_SDDF | 14), "\\Device\\Harddisk109\\Partition14", exists_ntdev, S_IFBLK},
  {"/dev/sddf15", BRACK(FH_SDDF | 15), "\\Device\\Harddisk109\\Partition15", exists_ntdev, S_IFBLK},
  {"/dev/sddg1", BRACK(FH_SDDG | 1), "\\Device\\Harddisk110\\Partition1", exists_ntdev, S_IFBLK},
  {"/dev/sddg2", BRACK(FH_SDDG | 2), "\\Device\\Harddisk110\\Partition2", exists_ntdev, S_IFBLK},
  {"/dev/sddg3", BRACK(FH_SDDG | 3), "\\Device\\Harddisk110\\Partition3", exists_ntdev, S_IFBLK},
  {"/dev/sddg4", BRACK(FH_SDDG | 4), "\\Device\\Harddisk110\\Partition4", exists_ntdev, S_IFBLK},
  {"/dev/sddg5", BRACK(FH_SDDG | 5), "\\Device\\Harddisk110\\Partition5", exists_ntdev, S_IFBLK},
  {"/dev/sddg6", BRACK(FH_SDDG | 6), "\\Device\\Harddisk110\\Partition6", exists_ntdev, S_IFBLK},
  {"/dev/sddg7", BRACK(FH_SDDG | 7), "\\Device\\Harddisk110\\Partition7", exists_ntdev, S_IFBLK},
  {"/dev/sddg8", BRACK(FH_SDDG | 8), "\\Device\\Harddisk110\\Partition8", exists_ntdev, S_IFBLK},
  {"/dev/sddg9", BRACK(FH_SDDG | 9), "\\Device\\Harddisk110\\Partition9", exists_ntdev, S_IFBLK},
  {"/dev/sddg10", BRACK(FH_SDDG | 10), "\\Device\\Harddisk110\\Partition10", exists_ntdev, S_IFBLK},
  {"/dev/sddg11", BRACK(FH_SDDG | 11), "\\Device\\Harddisk110\\Partition11", exists_ntdev, S_IFBLK},
  {"/dev/sddg12", BRACK(FH_SDDG | 12), "\\Device\\Harddisk110\\Partition12", exists_ntdev, S_IFBLK},
  {"/dev/sddg13", BRACK(FH_SDDG | 13), "\\Device\\Harddisk110\\Partition13", exists_ntdev, S_IFBLK},
  {"/dev/sddg14", BRACK(FH_SDDG | 14), "\\Device\\Harddisk110\\Partition14", exists_ntdev, S_IFBLK},
  {"/dev/sddg15", BRACK(FH_SDDG | 15), "\\Device\\Harddisk110\\Partition15", exists_ntdev, S_IFBLK},
  {"/dev/sddh1", BRACK(FH_SDDH | 1), "\\Device\\Harddisk111\\Partition1", exists_ntdev, S_IFBLK},
  {"/dev/sddh2", BRACK(FH_SDDH | 2), "\\Device\\Harddisk111\\Partition2", exists_ntdev, S_IFBLK},
  {"/dev/sddh3", BRACK(FH_SDDH | 3), "\\Device\\Harddisk111\\Partition3", exists_ntdev, S_IFBLK},
  {"/dev/sddh4", BRACK(FH_SDDH | 4), "\\Device\\Harddisk111\\Partition4", exists_ntdev, S_IFBLK},
  {"/dev/sddh5", BRACK(FH_SDDH | 5), "\\Device\\Harddisk111\\Partition5", exists_ntdev, S_IFBLK},
  {"/dev/sddh6", BRACK(FH_SDDH | 6), "\\Device\\Harddisk111\\Partition6", exists_ntdev, S_IFBLK},
  {"/dev/sddh7", BRACK(FH_SDDH | 7), "\\Device\\Harddisk111\\Partition7", exists_ntdev, S_IFBLK},
  {"/dev/sddh8", BRACK(FH_SDDH | 8), "\\Device\\Harddisk111\\Partition8", exists_ntdev, S_IFBLK},
  {"/dev/sddh9", BRACK(FH_SDDH | 9), "\\Device\\Harddisk111\\Partition9", exists_ntdev, S_IFBLK},
  {"/dev/sddh10", BRACK(FH_SDDH | 10), "\\Device\\Harddisk111\\Partition10", exists_ntdev, S_IFBLK},
  {"/dev/sddh11", BRACK(FH_SDDH | 11), "\\Device\\Harddisk111\\Partition11", exists_ntdev, S_IFBLK},
  {"/dev/sddh12", BRACK(FH_SDDH | 12), "\\Device\\Harddisk111\\Partition12", exists_ntdev, S_IFBLK},
  {"/dev/sddh13", BRACK(FH_SDDH | 13), "\\Device\\Harddisk111\\Partition13", exists_ntdev, S_IFBLK},
  {"/dev/sddh14", BRACK(FH_SDDH | 14), "\\Device\\Harddisk111\\Partition14", exists_ntdev, S_IFBLK},
  {"/dev/sddh15", BRACK(FH_SDDH | 15), "\\Device\\Harddisk111\\Partition15", exists_ntdev, S_IFBLK},
  {"/dev/sddi1", BRACK(FH_SDDI | 1), "\\Device\\Harddisk112\\Partition1", exists_ntdev, S_IFBLK},
  {"/dev/sddi2", BRACK(FH_SDDI | 2), "\\Device\\Harddisk112\\Partition2", exists_ntdev, S_IFBLK},
  {"/dev/sddi3", BRACK(FH_SDDI | 3), "\\Device\\Harddisk112\\Partition3", exists_ntdev, S_IFBLK},
  {"/dev/sddi4", BRACK(FH_SDDI | 4), "\\Device\\Harddisk112\\Partition4", exists_ntdev, S_IFBLK},
  {"/dev/sddi5", BRACK(FH_SDDI | 5), "\\Device\\Harddisk112\\Partition5", exists_ntdev, S_IFBLK},
  {"/dev/sddi6", BRACK(FH_SDDI | 6), "\\Device\\Harddisk112\\Partition6", exists_ntdev, S_IFBLK},
  {"/dev/sddi7", BRACK(FH_SDDI | 7), "\\Device\\Harddisk112\\Partition7", exists_ntdev, S_IFBLK},
  {"/dev/sddi8", BRACK(FH_SDDI | 8), "\\Device\\Harddisk112\\Partition8", exists_ntdev, S_IFBLK},
  {"/dev/sddi9", BRACK(FH_SDDI | 9), "\\Device\\Harddisk112\\Partition9", exists_ntdev, S_IFBLK},
  {"/dev/sddi10", BRACK(FH_SDDI | 10), "\\Device\\Harddisk112\\Partition10", exists_ntdev, S_IFBLK},
  {"/dev/sddi11", BRACK(FH_SDDI | 11), "\\Device\\Harddisk112\\Partition11", exists_ntdev, S_IFBLK},
  {"/dev/sddi12", BRACK(FH_SDDI | 12), "\\Device\\Harddisk112\\Partition12", exists_ntdev, S_IFBLK},
  {"/dev/sddi13", BRACK(FH_SDDI | 13), "\\Device\\Harddisk112\\Partition13", exists_ntdev, S_IFBLK},
  {"/dev/sddi14", BRACK(FH_SDDI | 14), "\\Device\\Harddisk112\\Partition14", exists_ntdev, S_IFBLK},
  {"/dev/sddi15", BRACK(FH_SDDI | 15), "\\Device\\Harddisk112\\Partition15", exists_ntdev, S_IFBLK},
  {"/dev/sddj1", BRACK(FH_SDDJ | 1), "\\Device\\Harddisk113\\Partition1", exists_ntdev, S_IFBLK},
  {"/dev/sddj2", BRACK(FH_SDDJ | 2), "\\Device\\Harddisk113\\Partition2", exists_ntdev, S_IFBLK},
  {"/dev/sddj3", BRACK(FH_SDDJ | 3), "\\Device\\Harddisk113\\Partition3", exists_ntdev, S_IFBLK},
  {"/dev/sddj4", BRACK(FH_SDDJ | 4), "\\Device\\Harddisk113\\Partition4", exists_ntdev, S_IFBLK},
  {"/dev/sddj5", BRACK(FH_SDDJ | 5), "\\Device\\Harddisk113\\Partition5", exists_ntdev, S_IFBLK},
  {"/dev/sddj6", BRACK(FH_SDDJ | 6), "\\Device\\Harddisk113\\Partition6", exists_ntdev, S_IFBLK},
  {"/dev/sddj7", BRACK(FH_SDDJ | 7), "\\Device\\Harddisk113\\Partition7", exists_ntdev, S_IFBLK},
  {"/dev/sddj8", BRACK(FH_SDDJ | 8), "\\Device\\Harddisk113\\Partition8", exists_ntdev, S_IFBLK},
  {"/dev/sddj9", BRACK(FH_SDDJ | 9), "\\Device\\Harddisk113\\Partition9", exists_ntdev, S_IFBLK},
  {"/dev/sddj10", BRACK(FH_SDDJ | 10), "\\Device\\Harddisk113\\Partition10", exists_ntdev, S_IFBLK},
  {"/dev/sddj11", BRACK(FH_SDDJ | 11), "\\Device\\Harddisk113\\Partition11", exists_ntdev, S_IFBLK},
  {"/dev/sddj12", BRACK(FH_SDDJ | 12), "\\Device\\Harddisk113\\Partition12", exists_ntdev, S_IFBLK},
  {"/dev/sddj13", BRACK(FH_SDDJ | 13), "\\Device\\Harddisk113\\Partition13", exists_ntdev, S_IFBLK},
  {"/dev/sddj14", BRACK(FH_SDDJ | 14), "\\Device\\Harddisk113\\Partition14", exists_ntdev, S_IFBLK},
  {"/dev/sddj15", BRACK(FH_SDDJ | 15), "\\Device\\Harddisk113\\Partition15", exists_ntdev, S_IFBLK},
  {"/dev/sddk1", BRACK(FH_SDDK | 1), "\\Device\\Harddisk114\\Partition1", exists_ntdev, S_IFBLK},
  {"/dev/sddk2", BRACK(FH_SDDK | 2), "\\Device\\Harddisk114\\Partition2", exists_ntdev, S_IFBLK},
  {"/dev/sddk3", BRACK(FH_SDDK | 3), "\\Device\\Harddisk114\\Partition3", exists_ntdev, S_IFBLK},
  {"/dev/sddk4", BRACK(FH_SDDK | 4), "\\Device\\Harddisk114\\Partition4", exists_ntdev, S_IFBLK},
  {"/dev/sddk5", BRACK(FH_SDDK | 5), "\\Device\\Harddisk114\\Partition5", exists_ntdev, S_IFBLK},
  {"/dev/sddk6", BRACK(FH_SDDK | 6), "\\Device\\Harddisk114\\Partition6", exists_ntdev, S_IFBLK},
  {"/dev/sddk7", BRACK(FH_SDDK | 7), "\\Device\\Harddisk114\\Partition7", exists_ntdev, S_IFBLK},
  {"/dev/sddk8", BRACK(FH_SDDK | 8), "\\Device\\Harddisk114\\Partition8", exists_ntdev, S_IFBLK},
  {"/dev/sddk9", BRACK(FH_SDDK | 9), "\\Device\\Harddisk114\\Partition9", exists_ntdev, S_IFBLK},
  {"/dev/sddk10", BRACK(FH_SDDK | 10), "\\Device\\Harddisk114\\Partition10", exists_ntdev, S_IFBLK},
  {"/dev/sddk11", BRACK(FH_SDDK | 11), "\\Device\\Harddisk114\\Partition11", exists_ntdev, S_IFBLK},
  {"/dev/sddk12", BRACK(FH_SDDK | 12), "\\Device\\Harddisk114\\Partition12", exists_ntdev, S_IFBLK},
  {"/dev/sddk13", BRACK(FH_SDDK | 13), "\\Device\\Harddisk114\\Partition13", exists_ntdev, S_IFBLK},
  {"/dev/sddk14", BRACK(FH_SDDK | 14), "\\Device\\Harddisk114\\Partition14", exists_ntdev, S_IFBLK},
  {"/dev/sddk15", BRACK(FH_SDDK | 15), "\\Device\\Harddisk114\\Partition15", exists_ntdev, S_IFBLK},
  {"/dev/sddl1", BRACK(FH_SDDL | 1), "\\Device\\Harddisk115\\Partition1", exists_ntdev, S_IFBLK},
  {"/dev/sddl2", BRACK(FH_SDDL | 2), "\\Device\\Harddisk115\\Partition2", exists_ntdev, S_IFBLK},
  {"/dev/sddl3", BRACK(FH_SDDL | 3), "\\Device\\Harddisk115\\Partition3", exists_ntdev, S_IFBLK},
  {"/dev/sddl4", BRACK(FH_SDDL | 4), "\\Device\\Harddisk115\\Partition4", exists_ntdev, S_IFBLK},
  {"/dev/sddl5", BRACK(FH_SDDL | 5), "\\Device\\Harddisk115\\Partition5", exists_ntdev, S_IFBLK},
  {"/dev/sddl6", BRACK(FH_SDDL | 6), "\\Device\\Harddisk115\\Partition6", exists_ntdev, S_IFBLK},
  {"/dev/sddl7", BRACK(FH_SDDL | 7), "\\Device\\Harddisk115\\Partition7", exists_ntdev, S_IFBLK},
  {"/dev/sddl8", BRACK(FH_SDDL | 8), "\\Device\\Harddisk115\\Partition8", exists_ntdev, S_IFBLK},
  {"/dev/sddl9", BRACK(FH_SDDL | 9), "\\Device\\Harddisk115\\Partition9", exists_ntdev, S_IFBLK},
  {"/dev/sddl10", BRACK(FH_SDDL | 10), "\\Device\\Harddisk115\\Partition10", exists_ntdev, S_IFBLK},
  {"/dev/sddl11", BRACK(FH_SDDL | 11), "\\Device\\Harddisk115\\Partition11", exists_ntdev, S_IFBLK},
  {"/dev/sddl12", BRACK(FH_SDDL | 12), "\\Device\\Harddisk115\\Partition12", exists_ntdev, S_IFBLK},
  {"/dev/sddl13", BRACK(FH_SDDL | 13), "\\Device\\Harddisk115\\Partition13", exists_ntdev, S_IFBLK},
  {"/dev/sddl14", BRACK(FH_SDDL | 14), "\\Device\\Harddisk115\\Partition14", exists_ntdev, S_IFBLK},
  {"/dev/sddl15", BRACK(FH_SDDL | 15), "\\Device\\Harddisk115\\Partition15", exists_ntdev, S_IFBLK},
  {"/dev/sddm1", BRACK(FH_SDDM | 1), "\\Device\\Harddisk116\\Partition1", exists_ntdev, S_IFBLK},
  {"/dev/sddm2", BRACK(FH_SDDM | 2), "\\Device\\Harddisk116\\Partition2", exists_ntdev, S_IFBLK},
  {"/dev/sddm3", BRACK(FH_SDDM | 3), "\\Device\\Harddisk116\\Partition3", exists_ntdev, S_IFBLK},
  {"/dev/sddm4", BRACK(FH_SDDM | 4), "\\Device\\Harddisk116\\Partition4", exists_ntdev, S_IFBLK},
  {"/dev/sddm5", BRACK(FH_SDDM | 5), "\\Device\\Harddisk116\\Partition5", exists_ntdev, S_IFBLK},
  {"/dev/sddm6", BRACK(FH_SDDM | 6), "\\Device\\Harddisk116\\Partition6", exists_ntdev, S_IFBLK},
  {"/dev/sddm7", BRACK(FH_SDDM | 7), "\\Device\\Harddisk116\\Partition7", exists_ntdev, S_IFBLK},
  {"/dev/sddm8", BRACK(FH_SDDM | 8), "\\Device\\Harddisk116\\Partition8", exists_ntdev, S_IFBLK},
  {"/dev/sddm9", BRACK(FH_SDDM | 9), "\\Device\\Harddisk116\\Partition9", exists_ntdev, S_IFBLK},
  {"/dev/sddm10", BRACK(FH_SDDM | 10), "\\Device\\Harddisk116\\Partition10", exists_ntdev, S_IFBLK},
  {"/dev/sddm11", BRACK(FH_SDDM | 11), "\\Device\\Harddisk116\\Partition11", exists_ntdev, S_IFBLK},
  {"/dev/sddm12", BRACK(FH_SDDM | 12), "\\Device\\Harddisk116\\Partition12", exists_ntdev, S_IFBLK},
  {"/dev/sddm13", BRACK(FH_SDDM | 13), "\\Device\\Harddisk116\\Partition13", exists_ntdev, S_IFBLK},
  {"/dev/sddm14", BRACK(FH_SDDM | 14), "\\Device\\Harddisk116\\Partition14", exists_ntdev, S_IFBLK},
  {"/dev/sddm15", BRACK(FH_SDDM | 15), "\\Device\\Harddisk116\\Partition15", exists_ntdev, S_IFBLK},
  {"/dev/sddn1", BRACK(FH_SDDN | 1), "\\Device\\Harddisk117\\Partition1", exists_ntdev, S_IFBLK},
  {"/dev/sddn2", BRACK(FH_SDDN | 2), "\\Device\\Harddisk117\\Partition2", exists_ntdev, S_IFBLK},
  {"/dev/sddn3", BRACK(FH_SDDN | 3), "\\Device\\Harddisk117\\Partition3", exists_ntdev, S_IFBLK},
  {"/dev/sddn4", BRACK(FH_SDDN | 4), "\\Device\\Harddisk117\\Partition4", exists_ntdev, S_IFBLK},
  {"/dev/sddn5", BRACK(FH_SDDN | 5), "\\Device\\Harddisk117\\Partition5", exists_ntdev, S_IFBLK},
  {"/dev/sddn6", BRACK(FH_SDDN | 6), "\\Device\\Harddisk117\\Partition6", exists_ntdev, S_IFBLK},
  {"/dev/sddn7", BRACK(FH_SDDN | 7), "\\Device\\Harddisk117\\Partition7", exists_ntdev, S_IFBLK},
  {"/dev/sddn8", BRACK(FH_SDDN | 8), "\\Device\\Harddisk117\\Partition8", exists_ntdev, S_IFBLK},
  {"/dev/sddn9", BRACK(FH_SDDN | 9), "\\Device\\Harddisk117\\Partition9", exists_ntdev, S_IFBLK},
  {"/dev/sddn10", BRACK(FH_SDDN | 10), "\\Device\\Harddisk117\\Partition10", exists_ntdev, S_IFBLK},
  {"/dev/sddn11", BRACK(FH_SDDN | 11), "\\Device\\Harddisk117\\Partition11", exists_ntdev, S_IFBLK},
  {"/dev/sddn12", BRACK(FH_SDDN | 12), "\\Device\\Harddisk117\\Partition12", exists_ntdev, S_IFBLK},
  {"/dev/sddn13", BRACK(FH_SDDN | 13), "\\Device\\Harddisk117\\Partition13", exists_ntdev, S_IFBLK},
  {"/dev/sddn14", BRACK(FH_SDDN | 14), "\\Device\\Harddisk117\\Partition14", exists_ntdev, S_IFBLK},
  {"/dev/sddn15", BRACK(FH_SDDN | 15), "\\Device\\Harddisk117\\Partition15", exists_ntdev, S_IFBLK},
  {"/dev/sddo1", BRACK(FH_SDDO | 1), "\\Device\\Harddisk118\\Partition1", exists_ntdev, S_IFBLK},
  {"/dev/sddo2", BRACK(FH_SDDO | 2), "\\Device\\Harddisk118\\Partition2", exists_ntdev, S_IFBLK},
  {"/dev/sddo3", BRACK(FH_SDDO | 3), "\\Device\\Harddisk118\\Partition3", exists_ntdev, S_IFBLK},
  {"/dev/sddo4", BRACK(FH_SDDO | 4), "\\Device\\Harddisk118\\Partition4", exists_ntdev, S_IFBLK},
  {"/dev/sddo5", BRACK(FH_SDDO | 5), "\\Device\\Harddisk118\\Partition5", exists_ntdev, S_IFBLK},
  {"/dev/sddo6", BRACK(FH_SDDO | 6), "\\Device\\Harddisk118\\Partition6", exists_ntdev, S_IFBLK},
  {"/dev/sddo7", BRACK(FH_SDDO | 7), "\\Device\\Harddisk118\\Partition7", exists_ntdev, S_IFBLK},
  {"/dev/sddo8", BRACK(FH_SDDO | 8), "\\Device\\Harddisk118\\Partition8", exists_ntdev, S_IFBLK},
  {"/dev/sddo9", BRACK(FH_SDDO | 9), "\\Device\\Harddisk118\\Partition9", exists_ntdev, S_IFBLK},
  {"/dev/sddo10", BRACK(FH_SDDO | 10), "\\Device\\Harddisk118\\Partition10", exists_ntdev, S_IFBLK},
  {"/dev/sddo11", BRACK(FH_SDDO | 11), "\\Device\\Harddisk118\\Partition11", exists_ntdev, S_IFBLK},
  {"/dev/sddo12", BRACK(FH_SDDO | 12), "\\Device\\Harddisk118\\Partition12", exists_ntdev, S_IFBLK},
  {"/dev/sddo13", BRACK(FH_SDDO | 13), "\\Device\\Harddisk118\\Partition13", exists_ntdev, S_IFBLK},
  {"/dev/sddo14", BRACK(FH_SDDO | 14), "\\Device\\Harddisk118\\Partition14", exists_ntdev, S_IFBLK},
  {"/dev/sddo15", BRACK(FH_SDDO | 15), "\\Device\\Harddisk118\\Partition15", exists_ntdev, S_IFBLK},
  {"/dev/sddp1", BRACK(FH_SDDP | 1), "\\Device\\Harddisk119\\Partition1", exists_ntdev, S_IFBLK},
  {"/dev/sddp2", BRACK(FH_SDDP | 2), "\\Device\\Harddisk119\\Partition2", exists_ntdev, S_IFBLK},
  {"/dev/sddp3", BRACK(FH_SDDP | 3), "\\Device\\Harddisk119\\Partition3", exists_ntdev, S_IFBLK},
  {"/dev/sddp4", BRACK(FH_SDDP | 4), "\\Device\\Harddisk119\\Partition4", exists_ntdev, S_IFBLK},
  {"/dev/sddp5", BRACK(FH_SDDP | 5), "\\Device\\Harddisk119\\Partition5", exists_ntdev, S_IFBLK},
  {"/dev/sddp6", BRACK(FH_SDDP | 6), "\\Device\\Harddisk119\\Partition6", exists_ntdev, S_IFBLK},
  {"/dev/sddp7", BRACK(FH_SDDP | 7), "\\Device\\Harddisk119\\Partition7", exists_ntdev, S_IFBLK},
  {"/dev/sddp8", BRACK(FH_SDDP | 8), "\\Device\\Harddisk119\\Partition8", exists_ntdev, S_IFBLK},
  {"/dev/sddp9", BRACK(FH_SDDP | 9), "\\Device\\Harddisk119\\Partition9", exists_ntdev, S_IFBLK},
  {"/dev/sddp10", BRACK(FH_SDDP | 10), "\\Device\\Harddisk119\\Partition10", exists_ntdev, S_IFBLK},
  {"/dev/sddp11", BRACK(FH_SDDP | 11), "\\Device\\Harddisk119\\Partition11", exists_ntdev, S_IFBLK},
  {"/dev/sddp12", BRACK(FH_SDDP | 12), "\\Device\\Harddisk119\\Partition12", exists_ntdev, S_IFBLK},
  {"/dev/sddp13", BRACK(FH_SDDP | 13), "\\Device\\Harddisk119\\Partition13", exists_ntdev, S_IFBLK},
  {"/dev/sddp14", BRACK(FH_SDDP | 14), "\\Device\\Harddisk119\\Partition14", exists_ntdev, S_IFBLK},
  {"/dev/sddp15", BRACK(FH_SDDP | 15), "\\Device\\Harddisk119\\Partition15", exists_ntdev, S_IFBLK},
  {"/dev/sddq1", BRACK(FH_SDDQ | 1), "\\Device\\Harddisk120\\Partition1", exists_ntdev, S_IFBLK},
  {"/dev/sddq2", BRACK(FH_SDDQ | 2), "\\Device\\Harddisk120\\Partition2", exists_ntdev, S_IFBLK},
  {"/dev/sddq3", BRACK(FH_SDDQ | 3), "\\Device\\Harddisk120\\Partition3", exists_ntdev, S_IFBLK},
  {"/dev/sddq4", BRACK(FH_SDDQ | 4), "\\Device\\Harddisk120\\Partition4", exists_ntdev, S_IFBLK},
  {"/dev/sddq5", BRACK(FH_SDDQ | 5), "\\Device\\Harddisk120\\Partition5", exists_ntdev, S_IFBLK},
  {"/dev/sddq6", BRACK(FH_SDDQ | 6), "\\Device\\Harddisk120\\Partition6", exists_ntdev, S_IFBLK},
  {"/dev/sddq7", BRACK(FH_SDDQ | 7), "\\Device\\Harddisk120\\Partition7", exists_ntdev, S_IFBLK},
  {"/dev/sddq8", BRACK(FH_SDDQ | 8), "\\Device\\Harddisk120\\Partition8", exists_ntdev, S_IFBLK},
  {"/dev/sddq9", BRACK(FH_SDDQ | 9), "\\Device\\Harddisk120\\Partition9", exists_ntdev, S_IFBLK},
  {"/dev/sddq10", BRACK(FH_SDDQ | 10), "\\Device\\Harddisk120\\Partition10", exists_ntdev, S_IFBLK},
  {"/dev/sddq11", BRACK(FH_SDDQ | 11), "\\Device\\Harddisk120\\Partition11", exists_ntdev, S_IFBLK},
  {"/dev/sddq12", BRACK(FH_SDDQ | 12), "\\Device\\Harddisk120\\Partition12", exists_ntdev, S_IFBLK},
  {"/dev/sddq13", BRACK(FH_SDDQ | 13), "\\Device\\Harddisk120\\Partition13", exists_ntdev, S_IFBLK},
  {"/dev/sddq14", BRACK(FH_SDDQ | 14), "\\Device\\Harddisk120\\Partition14", exists_ntdev, S_IFBLK},
  {"/dev/sddq15", BRACK(FH_SDDQ | 15), "\\Device\\Harddisk120\\Partition15", exists_ntdev, S_IFBLK},
  {"/dev/sddr1", BRACK(FH_SDDR | 1), "\\Device\\Harddisk121\\Partition1", exists_ntdev, S_IFBLK},
  {"/dev/sddr2", BRACK(FH_SDDR | 2), "\\Device\\Harddisk121\\Partition2", exists_ntdev, S_IFBLK},
  {"/dev/sddr3", BRACK(FH_SDDR | 3), "\\Device\\Harddisk121\\Partition3", exists_ntdev, S_IFBLK},
  {"/dev/sddr4", BRACK(FH_SDDR | 4), "\\Device\\Harddisk121\\Partition4", exists_ntdev, S_IFBLK},
  {"/dev/sddr5", BRACK(FH_SDDR | 5), "\\Device\\Harddisk121\\Partition5", exists_ntdev, S_IFBLK},
  {"/dev/sddr6", BRACK(FH_SDDR | 6), "\\Device\\Harddisk121\\Partition6", exists_ntdev, S_IFBLK},
  {"/dev/sddr7", BRACK(FH_SDDR | 7), "\\Device\\Harddisk121\\Partition7", exists_ntdev, S_IFBLK},
  {"/dev/sddr8", BRACK(FH_SDDR | 8), "\\Device\\Harddisk121\\Partition8", exists_ntdev, S_IFBLK},
  {"/dev/sddr9", BRACK(FH_SDDR | 9), "\\Device\\Harddisk121\\Partition9", exists_ntdev, S_IFBLK},
  {"/dev/sddr10", BRACK(FH_SDDR | 10), "\\Device\\Harddisk121\\Partition10", exists_ntdev, S_IFBLK},
  {"/dev/sddr11", BRACK(FH_SDDR | 11), "\\Device\\Harddisk121\\Partition11", exists_ntdev, S_IFBLK},
  {"/dev/sddr12", BRACK(FH_SDDR | 12), "\\Device\\Harddisk121\\Partition12", exists_ntdev, S_IFBLK},
  {"/dev/sddr13", BRACK(FH_SDDR | 13), "\\Device\\Harddisk121\\Partition13", exists_ntdev, S_IFBLK},
  {"/dev/sddr14", BRACK(FH_SDDR | 14), "\\Device\\Harddisk121\\Partition14", exists_ntdev, S_IFBLK},
  {"/dev/sddr15", BRACK(FH_SDDR | 15), "\\Device\\Harddisk121\\Partition15", exists_ntdev, S_IFBLK},
  {"/dev/sdds1", BRACK(FH_SDDS | 1), "\\Device\\Harddisk122\\Partition1", exists_ntdev, S_IFBLK},
  {"/dev/sdds2", BRACK(FH_SDDS | 2), "\\Device\\Harddisk122\\Partition2", exists_ntdev, S_IFBLK},
  {"/dev/sdds3", BRACK(FH_SDDS | 3), "\\Device\\Harddisk122\\Partition3", exists_ntdev, S_IFBLK},
  {"/dev/sdds4", BRACK(FH_SDDS | 4), "\\Device\\Harddisk122\\Partition4", exists_ntdev, S_IFBLK},
  {"/dev/sdds5", BRACK(FH_SDDS | 5), "\\Device\\Harddisk122\\Partition5", exists_ntdev, S_IFBLK},
  {"/dev/sdds6", BRACK(FH_SDDS | 6), "\\Device\\Harddisk122\\Partition6", exists_ntdev, S_IFBLK},
  {"/dev/sdds7", BRACK(FH_SDDS | 7), "\\Device\\Harddisk122\\Partition7", exists_ntdev, S_IFBLK},
  {"/dev/sdds8", BRACK(FH_SDDS | 8), "\\Device\\Harddisk122\\Partition8", exists_ntdev, S_IFBLK},
  {"/dev/sdds9", BRACK(FH_SDDS | 9), "\\Device\\Harddisk122\\Partition9", exists_ntdev, S_IFBLK},
  {"/dev/sdds10", BRACK(FH_SDDS | 10), "\\Device\\Harddisk122\\Partition10", exists_ntdev, S_IFBLK},
  {"/dev/sdds11", BRACK(FH_SDDS | 11), "\\Device\\Harddisk122\\Partition11", exists_ntdev, S_IFBLK},
  {"/dev/sdds12", BRACK(FH_SDDS | 12), "\\Device\\Harddisk122\\Partition12", exists_ntdev, S_IFBLK},
  {"/dev/sdds13", BRACK(FH_SDDS | 13), "\\Device\\Harddisk122\\Partition13", exists_ntdev, S_IFBLK},
  {"/dev/sdds14", BRACK(FH_SDDS | 14), "\\Device\\Harddisk122\\Partition14", exists_ntdev, S_IFBLK},
  {"/dev/sdds15", BRACK(FH_SDDS | 15), "\\Device\\Harddisk122\\Partition15", exists_ntdev, S_IFBLK},
  {"/dev/sddt1", BRACK(FH_SDDT | 1), "\\Device\\Harddisk123\\Partition1", exists_ntdev, S_IFBLK},
  {"/dev/sddt2", BRACK(FH_SDDT | 2), "\\Device\\Harddisk123\\Partition2", exists_ntdev, S_IFBLK},
  {"/dev/sddt3", BRACK(FH_SDDT | 3), "\\Device\\Harddisk123\\Partition3", exists_ntdev, S_IFBLK},
  {"/dev/sddt4", BRACK(FH_SDDT | 4), "\\Device\\Harddisk123\\Partition4", exists_ntdev, S_IFBLK},
  {"/dev/sddt5", BRACK(FH_SDDT | 5), "\\Device\\Harddisk123\\Partition5", exists_ntdev, S_IFBLK},
  {"/dev/sddt6", BRACK(FH_SDDT | 6), "\\Device\\Harddisk123\\Partition6", exists_ntdev, S_IFBLK},
  {"/dev/sddt7", BRACK(FH_SDDT | 7), "\\Device\\Harddisk123\\Partition7", exists_ntdev, S_IFBLK},
  {"/dev/sddt8", BRACK(FH_SDDT | 8), "\\Device\\Harddisk123\\Partition8", exists_ntdev, S_IFBLK},
  {"/dev/sddt9", BRACK(FH_SDDT | 9), "\\Device\\Harddisk123\\Partition9", exists_ntdev, S_IFBLK},
  {"/dev/sddt10", BRACK(FH_SDDT | 10), "\\Device\\Harddisk123\\Partition10", exists_ntdev, S_IFBLK},
  {"/dev/sddt11", BRACK(FH_SDDT | 11), "\\Device\\Harddisk123\\Partition11", exists_ntdev, S_IFBLK},
  {"/dev/sddt12", BRACK(FH_SDDT | 12), "\\Device\\Harddisk123\\Partition12", exists_ntdev, S_IFBLK},
  {"/dev/sddt13", BRACK(FH_SDDT | 13), "\\Device\\Harddisk123\\Partition13", exists_ntdev, S_IFBLK},
  {"/dev/sddt14", BRACK(FH_SDDT | 14), "\\Device\\Harddisk123\\Partition14", exists_ntdev, S_IFBLK},
  {"/dev/sddt15", BRACK(FH_SDDT | 15), "\\Device\\Harddisk123\\Partition15", exists_ntdev, S_IFBLK},
  {"/dev/sddu1", BRACK(FH_SDDU | 1), "\\Device\\Harddisk124\\Partition1", exists_ntdev, S_IFBLK},
  {"/dev/sddu2", BRACK(FH_SDDU | 2), "\\Device\\Harddisk124\\Partition2", exists_ntdev, S_IFBLK},
  {"/dev/sddu3", BRACK(FH_SDDU | 3), "\\Device\\Harddisk124\\Partition3", exists_ntdev, S_IFBLK},
  {"/dev/sddu4", BRACK(FH_SDDU | 4), "\\Device\\Harddisk124\\Partition4", exists_ntdev, S_IFBLK},
  {"/dev/sddu5", BRACK(FH_SDDU | 5), "\\Device\\Harddisk124\\Partition5", exists_ntdev, S_IFBLK},
  {"/dev/sddu6", BRACK(FH_SDDU | 6), "\\Device\\Harddisk124\\Partition6", exists_ntdev, S_IFBLK},
  {"/dev/sddu7", BRACK(FH_SDDU | 7), "\\Device\\Harddisk124\\Partition7", exists_ntdev, S_IFBLK},
  {"/dev/sddu8", BRACK(FH_SDDU | 8), "\\Device\\Harddisk124\\Partition8", exists_ntdev, S_IFBLK},
  {"/dev/sddu9", BRACK(FH_SDDU | 9), "\\Device\\Harddisk124\\Partition9", exists_ntdev, S_IFBLK},
  {"/dev/sddu10", BRACK(FH_SDDU | 10), "\\Device\\Harddisk124\\Partition10", exists_ntdev, S_IFBLK},
  {"/dev/sddu11", BRACK(FH_SDDU | 11), "\\Device\\Harddisk124\\Partition11", exists_ntdev, S_IFBLK},
  {"/dev/sddu12", BRACK(FH_SDDU | 12), "\\Device\\Harddisk124\\Partition12", exists_ntdev, S_IFBLK},
  {"/dev/sddu13", BRACK(FH_SDDU | 13), "\\Device\\Harddisk124\\Partition13", exists_ntdev, S_IFBLK},
  {"/dev/sddu14", BRACK(FH_SDDU | 14), "\\Device\\Harddisk124\\Partition14", exists_ntdev, S_IFBLK},
  {"/dev/sddu15", BRACK(FH_SDDU | 15), "\\Device\\Harddisk124\\Partition15", exists_ntdev, S_IFBLK},
  {"/dev/sddv1", BRACK(FH_SDDV | 1), "\\Device\\Harddisk125\\Partition1", exists_ntdev, S_IFBLK},
  {"/dev/sddv2", BRACK(FH_SDDV | 2), "\\Device\\Harddisk125\\Partition2", exists_ntdev, S_IFBLK},
  {"/dev/sddv3", BRACK(FH_SDDV | 3), "\\Device\\Harddisk125\\Partition3", exists_ntdev, S_IFBLK},
  {"/dev/sddv4", BRACK(FH_SDDV | 4), "\\Device\\Harddisk125\\Partition4", exists_ntdev, S_IFBLK},
  {"/dev/sddv5", BRACK(FH_SDDV | 5), "\\Device\\Harddisk125\\Partition5", exists_ntdev, S_IFBLK},
  {"/dev/sddv6", BRACK(FH_SDDV | 6), "\\Device\\Harddisk125\\Partition6", exists_ntdev, S_IFBLK},
  {"/dev/sddv7", BRACK(FH_SDDV | 7), "\\Device\\Harddisk125\\Partition7", exists_ntdev, S_IFBLK},
  {"/dev/sddv8", BRACK(FH_SDDV | 8), "\\Device\\Harddisk125\\Partition8", exists_ntdev, S_IFBLK},
  {"/dev/sddv9", BRACK(FH_SDDV | 9), "\\Device\\Harddisk125\\Partition9", exists_ntdev, S_IFBLK},
  {"/dev/sddv10", BRACK(FH_SDDV | 10), "\\Device\\Harddisk125\\Partition10", exists_ntdev, S_IFBLK},
  {"/dev/sddv11", BRACK(FH_SDDV | 11), "\\Device\\Harddisk125\\Partition11", exists_ntdev, S_IFBLK},
  {"/dev/sddv12", BRACK(FH_SDDV | 12), "\\Device\\Harddisk125\\Partition12", exists_ntdev, S_IFBLK},
  {"/dev/sddv13", BRACK(FH_SDDV | 13), "\\Device\\Harddisk125\\Partition13", exists_ntdev, S_IFBLK},
  {"/dev/sddv14", BRACK(FH_SDDV | 14), "\\Device\\Harddisk125\\Partition14", exists_ntdev, S_IFBLK},
  {"/dev/sddv15", BRACK(FH_SDDV | 15), "\\Device\\Harddisk125\\Partition15", exists_ntdev, S_IFBLK},
  {"/dev/sddw1", BRACK(FH_SDDW | 1), "\\Device\\Harddisk126\\Partition1", exists_ntdev, S_IFBLK},
  {"/dev/sddw2", BRACK(FH_SDDW | 2), "\\Device\\Harddisk126\\Partition2", exists_ntdev, S_IFBLK},
  {"/dev/sddw3", BRACK(FH_SDDW | 3), "\\Device\\Harddisk126\\Partition3", exists_ntdev, S_IFBLK},
  {"/dev/sddw4", BRACK(FH_SDDW | 4), "\\Device\\Harddisk126\\Partition4", exists_ntdev, S_IFBLK},
  {"/dev/sddw5", BRACK(FH_SDDW | 5), "\\Device\\Harddisk126\\Partition5", exists_ntdev, S_IFBLK},
  {"/dev/sddw6", BRACK(FH_SDDW | 6), "\\Device\\Harddisk126\\Partition6", exists_ntdev, S_IFBLK},
  {"/dev/sddw7", BRACK(FH_SDDW | 7), "\\Device\\Harddisk126\\Partition7", exists_ntdev, S_IFBLK},
  {"/dev/sddw8", BRACK(FH_SDDW | 8), "\\Device\\Harddisk126\\Partition8", exists_ntdev, S_IFBLK},
  {"/dev/sddw9", BRACK(FH_SDDW | 9), "\\Device\\Harddisk126\\Partition9", exists_ntdev, S_IFBLK},
  {"/dev/sddw10", BRACK(FH_SDDW | 10), "\\Device\\Harddisk126\\Partition10", exists_ntdev, S_IFBLK},
  {"/dev/sddw11", BRACK(FH_SDDW | 11), "\\Device\\Harddisk126\\Partition11", exists_ntdev, S_IFBLK},
  {"/dev/sddw12", BRACK(FH_SDDW | 12), "\\Device\\Harddisk126\\Partition12", exists_ntdev, S_IFBLK},
  {"/dev/sddw13", BRACK(FH_SDDW | 13), "\\Device\\Harddisk126\\Partition13", exists_ntdev, S_IFBLK},
  {"/dev/sddw14", BRACK(FH_SDDW | 14), "\\Device\\Harddisk126\\Partition14", exists_ntdev, S_IFBLK},
  {"/dev/sddw15", BRACK(FH_SDDW | 15), "\\Device\\Harddisk126\\Partition15", exists_ntdev, S_IFBLK},
  {"/dev/sddx1", BRACK(FH_SDDX | 1), "\\Device\\Harddisk127\\Partition1", exists_ntdev, S_IFBLK},
  {"/dev/sddx2", BRACK(FH_SDDX | 2), "\\Device\\Harddisk127\\Partition2", exists_ntdev, S_IFBLK},
  {"/dev/sddx3", BRACK(FH_SDDX | 3), "\\Device\\Harddisk127\\Partition3", exists_ntdev, S_IFBLK},
  {"/dev/sddx4", BRACK(FH_SDDX | 4), "\\Device\\Harddisk127\\Partition4", exists_ntdev, S_IFBLK},
  {"/dev/sddx5", BRACK(FH_SDDX | 5), "\\Device\\Harddisk127\\Partition5", exists_ntdev, S_IFBLK},
  {"/dev/sddx6", BRACK(FH_SDDX | 6), "\\Device\\Harddisk127\\Partition6", exists_ntdev, S_IFBLK},
  {"/dev/sddx7", BRACK(FH_SDDX | 7), "\\Device\\Harddisk127\\Partition7", exists_ntdev, S_IFBLK},
  {"/dev/sddx8", BRACK(FH_SDDX | 8), "\\Device\\Harddisk127\\Partition8", exists_ntdev, S_IFBLK},
  {"/dev/sddx9", BRACK(FH_SDDX | 9), "\\Device\\Harddisk127\\Partition9", exists_ntdev, S_IFBLK},
  {"/dev/sddx10", BRACK(FH_SDDX | 10), "\\Device\\Harddisk127\\Partition10", exists_ntdev, S_IFBLK},
  {"/dev/sddx11", BRACK(FH_SDDX | 11), "\\Device\\Harddisk127\\Partition11", exists_ntdev, S_IFBLK},
  {"/dev/sddx12", BRACK(FH_SDDX | 12), "\\Device\\Harddisk127\\Partition12", exists_ntdev, S_IFBLK},
  {"/dev/sddx13", BRACK(FH_SDDX | 13), "\\Device\\Harddisk127\\Partition13", exists_ntdev, S_IFBLK},
  {"/dev/sddx14", BRACK(FH_SDDX | 14), "\\Device\\Harddisk127\\Partition14", exists_ntdev, S_IFBLK},
  {"/dev/sddx15", BRACK(FH_SDDX | 15), "\\Device\\Harddisk127\\Partition15", exists_ntdev, S_IFBLK},
  {"/dev/sr0", BRACK(FHDEV(DEV_CDROM_MAJOR, 0)), "\\Device\\CdRom0", exists_ntdev, S_IFBLK},
  {"/dev/sr1", BRACK(FHDEV(DEV_CDROM_MAJOR, 1)), "\\Device\\CdRom1", exists_ntdev, S_IFBLK},
  {"/dev/sr2", BRACK(FHDEV(DEV_CDROM_MAJOR, 2)), "\\Device\\CdRom2", exists_ntdev, S_IFBLK},
  {"/dev/sr3", BRACK(FHDEV(DEV_CDROM_MAJOR, 3)), "\\Device\\CdRom3", exists_ntdev, S_IFBLK},
  {"/dev/sr4", BRACK(FHDEV(DEV_CDROM_MAJOR, 4)), "\\Device\\CdRom4", exists_ntdev, S_IFBLK},
  {"/dev/sr5", BRACK(FHDEV(DEV_CDROM_MAJOR, 5)), "\\Device\\CdRom5", exists_ntdev, S_IFBLK},
  {"/dev/sr6", BRACK(FHDEV(DEV_CDROM_MAJOR, 6)), "\\Device\\CdRom6", exists_ntdev, S_IFBLK},
  {"/dev/sr7", BRACK(FHDEV(DEV_CDROM_MAJOR, 7)), "\\Device\\CdRom7", exists_ntdev, S_IFBLK},
  {"/dev/sr8", BRACK(FHDEV(DEV_CDROM_MAJOR, 8)), "\\Device\\CdRom8", exists_ntdev, S_IFBLK},
  {"/dev/sr9", BRACK(FHDEV(DEV_CDROM_MAJOR, 9)), "\\Device\\CdRom9", exists_ntdev, S_IFBLK},
  {"/dev/sr10", BRACK(FHDEV(DEV_CDROM_MAJOR, 10)), "\\Device\\CdRom10", exists_ntdev, S_IFBLK},
  {"/dev/sr11", BRACK(FHDEV(DEV_CDROM_MAJOR, 11)), "\\Device\\CdRom11", exists_ntdev, S_IFBLK},
  {"/dev/sr12", BRACK(FHDEV(DEV_CDROM_MAJOR, 12)), "\\Device\\CdRom12", exists_ntdev, S_IFBLK},
  {"/dev/sr13", BRACK(FHDEV(DEV_CDROM_MAJOR, 13)), "\\Device\\CdRom13", exists_ntdev, S_IFBLK},
  {"/dev/sr14", BRACK(FHDEV(DEV_CDROM_MAJOR, 14)), "\\Device\\CdRom14", exists_ntdev, S_IFBLK},
  {"/dev/sr15", BRACK(FHDEV(DEV_CDROM_MAJOR, 15)), "\\Device\\CdRom15", exists_ntdev, S_IFBLK},
  {"/dev/st0", BRACK(FHDEV(DEV_TAPE_MAJOR, 0)), "\\Device\\Tape0", exists_ntdev, S_IFBLK},
  {"/dev/st1", BRACK(FHDEV(DEV_TAPE_MAJOR, 1)), "\\Device\\Tape1", exists_ntdev, S_IFBLK},
  {"/dev/st2", BRACK(FHDEV(DEV_TAPE_MAJOR, 2)), "\\Device\\Tape2", exists_ntdev, S_IFBLK},
  {"/dev/st3", BRACK(FHDEV(DEV_TAPE_MAJOR, 3)), "\\Device\\Tape3", exists_ntdev, S_IFBLK},
  {"/dev/st4", BRACK(FHDEV(DEV_TAPE_MAJOR, 4)), "\\Device\\Tape4", exists_ntdev, S_IFBLK},
  {"/dev/st5", BRACK(FHDEV(DEV_TAPE_MAJOR, 5)), "\\Device\\Tape5", exists_ntdev, S_IFBLK},
  {"/dev/st6", BRACK(FHDEV(DEV_TAPE_MAJOR, 6)), "\\Device\\Tape6", exists_ntdev, S_IFBLK},
  {"/dev/st7", BRACK(FHDEV(DEV_TAPE_MAJOR, 7)), "\\Device\\Tape7", exists_ntdev, S_IFBLK},
  {"/dev/st8", BRACK(FHDEV(DEV_TAPE_MAJOR, 8)), "\\Device\\Tape8", exists_ntdev, S_IFBLK},
  {"/dev/st9", BRACK(FHDEV(DEV_TAPE_MAJOR, 9)), "\\Device\\Tape9", exists_ntdev, S_IFBLK},
  {"/dev/st10", BRACK(FHDEV(DEV_TAPE_MAJOR, 10)), "\\Device\\Tape10", exists_ntdev, S_IFBLK},
  {"/dev/st11", BRACK(FHDEV(DEV_TAPE_MAJOR, 11)), "\\Device\\Tape11", exists_ntdev, S_IFBLK},
  {"/dev/st12", BRACK(FHDEV(DEV_TAPE_MAJOR, 12)), "\\Device\\Tape12", exists_ntdev, S_IFBLK},
  {"/dev/st13", BRACK(FHDEV(DEV_TAPE_MAJOR, 13)), "\\Device\\Tape13", exists_ntdev, S_IFBLK},
  {"/dev/st14", BRACK(FHDEV(DEV_TAPE_MAJOR, 14)), "\\Device\\Tape14", exists_ntdev, S_IFBLK},
  {"/dev/st15", BRACK(FHDEV(DEV_TAPE_MAJOR, 15)), "\\Device\\Tape15", exists_ntdev, S_IFBLK},
  {"/dev/st16", BRACK(FHDEV(DEV_TAPE_MAJOR, 16)), "\\Device\\Tape16", exists_ntdev, S_IFBLK},
  {"/dev/st17", BRACK(FHDEV(DEV_TAPE_MAJOR, 17)), "\\Device\\Tape17", exists_ntdev, S_IFBLK},
  {"/dev/st18", BRACK(FHDEV(DEV_TAPE_MAJOR, 18)), "\\Device\\Tape18", exists_ntdev, S_IFBLK},
  {"/dev/st19", BRACK(FHDEV(DEV_TAPE_MAJOR, 19)), "\\Device\\Tape19", exists_ntdev, S_IFBLK},
  {"/dev/st20", BRACK(FHDEV(DEV_TAPE_MAJOR, 20)), "\\Device\\Tape20", exists_ntdev, S_IFBLK},
  {"/dev/st21", BRACK(FHDEV(DEV_TAPE_MAJOR, 21)), "\\Device\\Tape21", exists_ntdev, S_IFBLK},
  {"/dev/st22", BRACK(FHDEV(DEV_TAPE_MAJOR, 22)), "\\Device\\Tape22", exists_ntdev, S_IFBLK},
  {"/dev/st23", BRACK(FHDEV(DEV_TAPE_MAJOR, 23)), "\\Device\\Tape23", exists_ntdev, S_IFBLK},
  {"/dev/st24", BRACK(FHDEV(DEV_TAPE_MAJOR, 24)), "\\Device\\Tape24", exists_ntdev, S_IFBLK},
  {"/dev/st25", BRACK(FHDEV(DEV_TAPE_MAJOR, 25)), "\\Device\\Tape25", exists_ntdev, S_IFBLK},
  {"/dev/st26", BRACK(FHDEV(DEV_TAPE_MAJOR, 26)), "\\Device\\Tape26", exists_ntdev, S_IFBLK},
  {"/dev/st27", BRACK(FHDEV(DEV_TAPE_MAJOR, 27)), "\\Device\\Tape27", exists_ntdev, S_IFBLK},
  {"/dev/st28", BRACK(FHDEV(DEV_TAPE_MAJOR, 28)), "\\Device\\Tape28", exists_ntdev, S_IFBLK},
  {"/dev/st29", BRACK(FHDEV(DEV_TAPE_MAJOR, 29)), "\\Device\\Tape29", exists_ntdev, S_IFBLK},
  {"/dev/st30", BRACK(FHDEV(DEV_TAPE_MAJOR, 30)), "\\Device\\Tape30", exists_ntdev, S_IFBLK},
  {"/dev/st31", BRACK(FHDEV(DEV_TAPE_MAJOR, 31)), "\\Device\\Tape31", exists_ntdev, S_IFBLK},
  {"/dev/st32", BRACK(FHDEV(DEV_TAPE_MAJOR, 32)), "\\Device\\Tape32", exists_ntdev, S_IFBLK},
  {"/dev/st33", BRACK(FHDEV(DEV_TAPE_MAJOR, 33)), "\\Device\\Tape33", exists_ntdev, S_IFBLK},
  {"/dev/st34", BRACK(FHDEV(DEV_TAPE_MAJOR, 34)), "\\Device\\Tape34", exists_ntdev, S_IFBLK},
  {"/dev/st35", BRACK(FHDEV(DEV_TAPE_MAJOR, 35)), "\\Device\\Tape35", exists_ntdev, S_IFBLK},
  {"/dev/st36", BRACK(FHDEV(DEV_TAPE_MAJOR, 36)), "\\Device\\Tape36", exists_ntdev, S_IFBLK},
  {"/dev/st37", BRACK(FHDEV(DEV_TAPE_MAJOR, 37)), "\\Device\\Tape37", exists_ntdev, S_IFBLK},
  {"/dev/st38", BRACK(FHDEV(DEV_TAPE_MAJOR, 38)), "\\Device\\Tape38", exists_ntdev, S_IFBLK},
  {"/dev/st39", BRACK(FHDEV(DEV_TAPE_MAJOR, 39)), "\\Device\\Tape39", exists_ntdev, S_IFBLK},
  {"/dev/st40", BRACK(FHDEV(DEV_TAPE_MAJOR, 40)), "\\Device\\Tape40", exists_ntdev, S_IFBLK},
  {"/dev/st41", BRACK(FHDEV(DEV_TAPE_MAJOR, 41)), "\\Device\\Tape41", exists_ntdev, S_IFBLK},
  {"/dev/st42", BRACK(FHDEV(DEV_TAPE_MAJOR, 42)), "\\Device\\Tape42", exists_ntdev, S_IFBLK},
  {"/dev/st43", BRACK(FHDEV(DEV_TAPE_MAJOR, 43)), "\\Device\\Tape43", exists_ntdev, S_IFBLK},
  {"/dev/st44", BRACK(FHDEV(DEV_TAPE_MAJOR, 44)), "\\Device\\Tape44", exists_ntdev, S_IFBLK},
  {"/dev/st45", BRACK(FHDEV(DEV_TAPE_MAJOR, 45)), "\\Device\\Tape45", exists_ntdev, S_IFBLK},
  {"/dev/st46", BRACK(FHDEV(DEV_TAPE_MAJOR, 46)), "\\Device\\Tape46", exists_ntdev, S_IFBLK},
  {"/dev/st47", BRACK(FHDEV(DEV_TAPE_MAJOR, 47)), "\\Device\\Tape47", exists_ntdev, S_IFBLK},
  {"/dev/st48", BRACK(FHDEV(DEV_TAPE_MAJOR, 48)), "\\Device\\Tape48", exists_ntdev, S_IFBLK},
  {"/dev/st49", BRACK(FHDEV(DEV_TAPE_MAJOR, 49)), "\\Device\\Tape49", exists_ntdev, S_IFBLK},
  {"/dev/st50", BRACK(FHDEV(DEV_TAPE_MAJOR, 50)), "\\Device\\Tape50", exists_ntdev, S_IFBLK},
  {"/dev/st51", BRACK(FHDEV(DEV_TAPE_MAJOR, 51)), "\\Device\\Tape51", exists_ntdev, S_IFBLK},
  {"/dev/st52", BRACK(FHDEV(DEV_TAPE_MAJOR, 52)), "\\Device\\Tape52", exists_ntdev, S_IFBLK},
  {"/dev/st53", BRACK(FHDEV(DEV_TAPE_MAJOR, 53)), "\\Device\\Tape53", exists_ntdev, S_IFBLK},
  {"/dev/st54", BRACK(FHDEV(DEV_TAPE_MAJOR, 54)), "\\Device\\Tape54", exists_ntdev, S_IFBLK},
  {"/dev/st55", BRACK(FHDEV(DEV_TAPE_MAJOR, 55)), "\\Device\\Tape55", exists_ntdev, S_IFBLK},
  {"/dev/st56", BRACK(FHDEV(DEV_TAPE_MAJOR, 56)), "\\Device\\Tape56", exists_ntdev, S_IFBLK},
  {"/dev/st57", BRACK(FHDEV(DEV_TAPE_MAJOR, 57)), "\\Device\\Tape57", exists_ntdev, S_IFBLK},
  {"/dev/st58", BRACK(FHDEV(DEV_TAPE_MAJOR, 58)), "\\Device\\Tape58", exists_ntdev, S_IFBLK},
  {"/dev/st59", BRACK(FHDEV(DEV_TAPE_MAJOR, 59)), "\\Device\\Tape59", exists_ntdev, S_IFBLK},
  {"/dev/st60", BRACK(FHDEV(DEV_TAPE_MAJOR, 60)), "\\Device\\Tape60", exists_ntdev, S_IFBLK},
  {"/dev/st61", BRACK(FHDEV(DEV_TAPE_MAJOR, 61)), "\\Device\\Tape61", exists_ntdev, S_IFBLK},
  {"/dev/st62", BRACK(FHDEV(DEV_TAPE_MAJOR, 62)), "\\Device\\Tape62", exists_ntdev, S_IFBLK},
  {"/dev/st63", BRACK(FHDEV(DEV_TAPE_MAJOR, 63)), "\\Device\\Tape63", exists_ntdev, S_IFBLK},
  {"/dev/st64", BRACK(FHDEV(DEV_TAPE_MAJOR, 64)), "\\Device\\Tape64", exists_ntdev, S_IFBLK},
  {"/dev/st65", BRACK(FHDEV(DEV_TAPE_MAJOR, 65)), "\\Device\\Tape65", exists_ntdev, S_IFBLK},
  {"/dev/st66", BRACK(FHDEV(DEV_TAPE_MAJOR, 66)), "\\Device\\Tape66", exists_ntdev, S_IFBLK},
  {"/dev/st67", BRACK(FHDEV(DEV_TAPE_MAJOR, 67)), "\\Device\\Tape67", exists_ntdev, S_IFBLK},
  {"/dev/st68", BRACK(FHDEV(DEV_TAPE_MAJOR, 68)), "\\Device\\Tape68", exists_ntdev, S_IFBLK},
  {"/dev/st69", BRACK(FHDEV(DEV_TAPE_MAJOR, 69)), "\\Device\\Tape69", exists_ntdev, S_IFBLK},
  {"/dev/st70", BRACK(FHDEV(DEV_TAPE_MAJOR, 70)), "\\Device\\Tape70", exists_ntdev, S_IFBLK},
  {"/dev/st71", BRACK(FHDEV(DEV_TAPE_MAJOR, 71)), "\\Device\\Tape71", exists_ntdev, S_IFBLK},
  {"/dev/st72", BRACK(FHDEV(DEV_TAPE_MAJOR, 72)), "\\Device\\Tape72", exists_ntdev, S_IFBLK},
  {"/dev/st73", BRACK(FHDEV(DEV_TAPE_MAJOR, 73)), "\\Device\\Tape73", exists_ntdev, S_IFBLK},
  {"/dev/st74", BRACK(FHDEV(DEV_TAPE_MAJOR, 74)), "\\Device\\Tape74", exists_ntdev, S_IFBLK},
  {"/dev/st75", BRACK(FHDEV(DEV_TAPE_MAJOR, 75)), "\\Device\\Tape75", exists_ntdev, S_IFBLK},
  {"/dev/st76", BRACK(FHDEV(DEV_TAPE_MAJOR, 76)), "\\Device\\Tape76", exists_ntdev, S_IFBLK},
  {"/dev/st77", BRACK(FHDEV(DEV_TAPE_MAJOR, 77)), "\\Device\\Tape77", exists_ntdev, S_IFBLK},
  {"/dev/st78", BRACK(FHDEV(DEV_TAPE_MAJOR, 78)), "\\Device\\Tape78", exists_ntdev, S_IFBLK},
  {"/dev/st79", BRACK(FHDEV(DEV_TAPE_MAJOR, 79)), "\\Device\\Tape79", exists_ntdev, S_IFBLK},
  {"/dev/st80", BRACK(FHDEV(DEV_TAPE_MAJOR, 80)), "\\Device\\Tape80", exists_ntdev, S_IFBLK},
  {"/dev/st81", BRACK(FHDEV(DEV_TAPE_MAJOR, 81)), "\\Device\\Tape81", exists_ntdev, S_IFBLK},
  {"/dev/st82", BRACK(FHDEV(DEV_TAPE_MAJOR, 82)), "\\Device\\Tape82", exists_ntdev, S_IFBLK},
  {"/dev/st83", BRACK(FHDEV(DEV_TAPE_MAJOR, 83)), "\\Device\\Tape83", exists_ntdev, S_IFBLK},
  {"/dev/st84", BRACK(FHDEV(DEV_TAPE_MAJOR, 84)), "\\Device\\Tape84", exists_ntdev, S_IFBLK},
  {"/dev/st85", BRACK(FHDEV(DEV_TAPE_MAJOR, 85)), "\\Device\\Tape85", exists_ntdev, S_IFBLK},
  {"/dev/st86", BRACK(FHDEV(DEV_TAPE_MAJOR, 86)), "\\Device\\Tape86", exists_ntdev, S_IFBLK},
  {"/dev/st87", BRACK(FHDEV(DEV_TAPE_MAJOR, 87)), "\\Device\\Tape87", exists_ntdev, S_IFBLK},
  {"/dev/st88", BRACK(FHDEV(DEV_TAPE_MAJOR, 88)), "\\Device\\Tape88", exists_ntdev, S_IFBLK},
  {"/dev/st89", BRACK(FHDEV(DEV_TAPE_MAJOR, 89)), "\\Device\\Tape89", exists_ntdev, S_IFBLK},
  {"/dev/st90", BRACK(FHDEV(DEV_TAPE_MAJOR, 90)), "\\Device\\Tape90", exists_ntdev, S_IFBLK},
  {"/dev/st91", BRACK(FHDEV(DEV_TAPE_MAJOR, 91)), "\\Device\\Tape91", exists_ntdev, S_IFBLK},
  {"/dev/st92", BRACK(FHDEV(DEV_TAPE_MAJOR, 92)), "\\Device\\Tape92", exists_ntdev, S_IFBLK},
  {"/dev/st93", BRACK(FHDEV(DEV_TAPE_MAJOR, 93)), "\\Device\\Tape93", exists_ntdev, S_IFBLK},
  {"/dev/st94", BRACK(FHDEV(DEV_TAPE_MAJOR, 94)), "\\Device\\Tape94", exists_ntdev, S_IFBLK},
  {"/dev/st95", BRACK(FHDEV(DEV_TAPE_MAJOR, 95)), "\\Device\\Tape95", exists_ntdev, S_IFBLK},
  {"/dev/st96", BRACK(FHDEV(DEV_TAPE_MAJOR, 96)), "\\Device\\Tape96", exists_ntdev, S_IFBLK},
  {"/dev/st97", BRACK(FHDEV(DEV_TAPE_MAJOR, 97)), "\\Device\\Tape97", exists_ntdev, S_IFBLK},
  {"/dev/st98", BRACK(FHDEV(DEV_TAPE_MAJOR, 98)), "\\Device\\Tape98", exists_ntdev, S_IFBLK},
  {"/dev/st99", BRACK(FHDEV(DEV_TAPE_MAJOR, 99)), "\\Device\\Tape99", exists_ntdev, S_IFBLK},
  {"/dev/st100", BRACK(FHDEV(DEV_TAPE_MAJOR, 100)), "\\Device\\Tape100", exists_ntdev, S_IFBLK},
  {"/dev/st101", BRACK(FHDEV(DEV_TAPE_MAJOR, 101)), "\\Device\\Tape101", exists_ntdev, S_IFBLK},
  {"/dev/st102", BRACK(FHDEV(DEV_TAPE_MAJOR, 102)), "\\Device\\Tape102", exists_ntdev, S_IFBLK},
  {"/dev/st103", BRACK(FHDEV(DEV_TAPE_MAJOR, 103)), "\\Device\\Tape103", exists_ntdev, S_IFBLK},
  {"/dev/st104", BRACK(FHDEV(DEV_TAPE_MAJOR, 104)), "\\Device\\Tape104", exists_ntdev, S_IFBLK},
  {"/dev/st105", BRACK(FHDEV(DEV_TAPE_MAJOR, 105)), "\\Device\\Tape105", exists_ntdev, S_IFBLK},
  {"/dev/st106", BRACK(FHDEV(DEV_TAPE_MAJOR, 106)), "\\Device\\Tape106", exists_ntdev, S_IFBLK},
  {"/dev/st107", BRACK(FHDEV(DEV_TAPE_MAJOR, 107)), "\\Device\\Tape107", exists_ntdev, S_IFBLK},
  {"/dev/st108", BRACK(FHDEV(DEV_TAPE_MAJOR, 108)), "\\Device\\Tape108", exists_ntdev, S_IFBLK},
  {"/dev/st109", BRACK(FHDEV(DEV_TAPE_MAJOR, 109)), "\\Device\\Tape109", exists_ntdev, S_IFBLK},
  {"/dev/st110", BRACK(FHDEV(DEV_TAPE_MAJOR, 110)), "\\Device\\Tape110", exists_ntdev, S_IFBLK},
  {"/dev/st111", BRACK(FHDEV(DEV_TAPE_MAJOR, 111)), "\\Device\\Tape111", exists_ntdev, S_IFBLK},
  {"/dev/st112", BRACK(FHDEV(DEV_TAPE_MAJOR, 112)), "\\Device\\Tape112", exists_ntdev, S_IFBLK},
  {"/dev/st113", BRACK(FHDEV(DEV_TAPE_MAJOR, 113)), "\\Device\\Tape113", exists_ntdev, S_IFBLK},
  {"/dev/st114", BRACK(FHDEV(DEV_TAPE_MAJOR, 114)), "\\Device\\Tape114", exists_ntdev, S_IFBLK},
  {"/dev/st115", BRACK(FHDEV(DEV_TAPE_MAJOR, 115)), "\\Device\\Tape115", exists_ntdev, S_IFBLK},
  {"/dev/st116", BRACK(FHDEV(DEV_TAPE_MAJOR, 116)), "\\Device\\Tape116", exists_ntdev, S_IFBLK},
  {"/dev/st117", BRACK(FHDEV(DEV_TAPE_MAJOR, 117)), "\\Device\\Tape117", exists_ntdev, S_IFBLK},
  {"/dev/st118", BRACK(FHDEV(DEV_TAPE_MAJOR, 118)), "\\Device\\Tape118", exists_ntdev, S_IFBLK},
  {"/dev/st119", BRACK(FHDEV(DEV_TAPE_MAJOR, 119)), "\\Device\\Tape119", exists_ntdev, S_IFBLK},
  {"/dev/st120", BRACK(FHDEV(DEV_TAPE_MAJOR, 120)), "\\Device\\Tape120", exists_ntdev, S_IFBLK},
  {"/dev/st121", BRACK(FHDEV(DEV_TAPE_MAJOR, 121)), "\\Device\\Tape121", exists_ntdev, S_IFBLK},
  {"/dev/st122", BRACK(FHDEV(DEV_TAPE_MAJOR, 122)), "\\Device\\Tape122", exists_ntdev, S_IFBLK},
  {"/dev/st123", BRACK(FHDEV(DEV_TAPE_MAJOR, 123)), "\\Device\\Tape123", exists_ntdev, S_IFBLK},
  {"/dev/st124", BRACK(FHDEV(DEV_TAPE_MAJOR, 124)), "\\Device\\Tape124", exists_ntdev, S_IFBLK},
  {"/dev/st125", BRACK(FHDEV(DEV_TAPE_MAJOR, 125)), "\\Device\\Tape125", exists_ntdev, S_IFBLK},
  {"/dev/st126", BRACK(FHDEV(DEV_TAPE_MAJOR, 126)), "\\Device\\Tape126", exists_ntdev, S_IFBLK},
  {"/dev/st127", BRACK(FHDEV(DEV_TAPE_MAJOR, 127)), "\\Device\\Tape127", exists_ntdev, S_IFBLK},
  {"/dev/tty", BRACK(FH_TTY), "/dev/tty", exists, S_IFCHR},
  {"/dev/ttyS0", BRACK(FHDEV(DEV_SERIAL_MAJOR, 0)), "\\??\\COM1", exists_ntdev, S_IFCHR},
  {"/dev/ttyS1", BRACK(FHDEV(DEV_SERIAL_MAJOR, 1)), "\\??\\COM2", exists_ntdev, S_IFCHR},
  {"/dev/ttyS2", BRACK(FHDEV(DEV_SERIAL_MAJOR, 2)), "\\??\\COM3", exists_ntdev, S_IFCHR},
  {"/dev/ttyS3", BRACK(FHDEV(DEV_SERIAL_MAJOR, 3)), "\\??\\COM4", exists_ntdev, S_IFCHR},
  {"/dev/ttyS4", BRACK(FHDEV(DEV_SERIAL_MAJOR, 4)), "\\??\\COM5", exists_ntdev, S_IFCHR},
  {"/dev/ttyS5", BRACK(FHDEV(DEV_SERIAL_MAJOR, 5)), "\\??\\COM6", exists_ntdev, S_IFCHR},
  {"/dev/ttyS6", BRACK(FHDEV(DEV_SERIAL_MAJOR, 6)), "\\??\\COM7", exists_ntdev, S_IFCHR},
  {"/dev/ttyS7", BRACK(FHDEV(DEV_SERIAL_MAJOR, 7)), "\\??\\COM8", exists_ntdev, S_IFCHR},
  {"/dev/ttyS8", BRACK(FHDEV(DEV_SERIAL_MAJOR, 8)), "\\??\\COM9", exists_ntdev, S_IFCHR},
  {"/dev/ttyS9", BRACK(FHDEV(DEV_SERIAL_MAJOR, 9)), "\\??\\COM10", exists_ntdev, S_IFCHR},
  {"/dev/ttyS10", BRACK(FHDEV(DEV_SERIAL_MAJOR, 10)), "\\??\\COM11", exists_ntdev, S_IFCHR},
  {"/dev/ttyS11", BRACK(FHDEV(DEV_SERIAL_MAJOR, 11)), "\\??\\COM12", exists_ntdev, S_IFCHR},
  {"/dev/ttyS12", BRACK(FHDEV(DEV_SERIAL_MAJOR, 12)), "\\??\\COM13", exists_ntdev, S_IFCHR},
  {"/dev/ttyS13", BRACK(FHDEV(DEV_SERIAL_MAJOR, 13)), "\\??\\COM14", exists_ntdev, S_IFCHR},
  {"/dev/ttyS14", BRACK(FHDEV(DEV_SERIAL_MAJOR, 14)), "\\??\\COM15", exists_ntdev, S_IFCHR},
  {"/dev/ttyS15", BRACK(FHDEV(DEV_SERIAL_MAJOR, 15)), "\\??\\COM16", exists_ntdev, S_IFCHR},
  {"/dev/ttyS16", BRACK(FHDEV(DEV_SERIAL_MAJOR, 16)), "\\??\\COM17", exists_ntdev, S_IFCHR},
  {"/dev/ttyS17", BRACK(FHDEV(DEV_SERIAL_MAJOR, 17)), "\\??\\COM18", exists_ntdev, S_IFCHR},
  {"/dev/ttyS18", BRACK(FHDEV(DEV_SERIAL_MAJOR, 18)), "\\??\\COM19", exists_ntdev, S_IFCHR},
  {"/dev/ttyS19", BRACK(FHDEV(DEV_SERIAL_MAJOR, 19)), "\\??\\COM20", exists_ntdev, S_IFCHR},
  {"/dev/ttyS20", BRACK(FHDEV(DEV_SERIAL_MAJOR, 20)), "\\??\\COM21", exists_ntdev, S_IFCHR},
  {"/dev/ttyS21", BRACK(FHDEV(DEV_SERIAL_MAJOR, 21)), "\\??\\COM22", exists_ntdev, S_IFCHR},
  {"/dev/ttyS22", BRACK(FHDEV(DEV_SERIAL_MAJOR, 22)), "\\??\\COM23", exists_ntdev, S_IFCHR},
  {"/dev/ttyS23", BRACK(FHDEV(DEV_SERIAL_MAJOR, 23)), "\\??\\COM24", exists_ntdev, S_IFCHR},
  {"/dev/ttyS24", BRACK(FHDEV(DEV_SERIAL_MAJOR, 24)), "\\??\\COM25", exists_ntdev, S_IFCHR},
  {"/dev/ttyS25", BRACK(FHDEV(DEV_SERIAL_MAJOR, 25)), "\\??\\COM26", exists_ntdev, S_IFCHR},
  {"/dev/ttyS26", BRACK(FHDEV(DEV_SERIAL_MAJOR, 26)), "\\??\\COM27", exists_ntdev, S_IFCHR},
  {"/dev/ttyS27", BRACK(FHDEV(DEV_SERIAL_MAJOR, 27)), "\\??\\COM28", exists_ntdev, S_IFCHR},
  {"/dev/ttyS28", BRACK(FHDEV(DEV_SERIAL_MAJOR, 28)), "\\??\\COM29", exists_ntdev, S_IFCHR},
  {"/dev/ttyS29", BRACK(FHDEV(DEV_SERIAL_MAJOR, 29)), "\\??\\COM30", exists_ntdev, S_IFCHR},
  {"/dev/ttyS30", BRACK(FHDEV(DEV_SERIAL_MAJOR, 30)), "\\??\\COM31", exists_ntdev, S_IFCHR},
  {"/dev/ttyS31", BRACK(FHDEV(DEV_SERIAL_MAJOR, 31)), "\\??\\COM32", exists_ntdev, S_IFCHR},
  {"/dev/ttyS32", BRACK(FHDEV(DEV_SERIAL_MAJOR, 32)), "\\??\\COM33", exists_ntdev, S_IFCHR},
  {"/dev/ttyS33", BRACK(FHDEV(DEV_SERIAL_MAJOR, 33)), "\\??\\COM34", exists_ntdev, S_IFCHR},
  {"/dev/ttyS34", BRACK(FHDEV(DEV_SERIAL_MAJOR, 34)), "\\??\\COM35", exists_ntdev, S_IFCHR},
  {"/dev/ttyS35", BRACK(FHDEV(DEV_SERIAL_MAJOR, 35)), "\\??\\COM36", exists_ntdev, S_IFCHR},
  {"/dev/ttyS36", BRACK(FHDEV(DEV_SERIAL_MAJOR, 36)), "\\??\\COM37", exists_ntdev, S_IFCHR},
  {"/dev/ttyS37", BRACK(FHDEV(DEV_SERIAL_MAJOR, 37)), "\\??\\COM38", exists_ntdev, S_IFCHR},
  {"/dev/ttyS38", BRACK(FHDEV(DEV_SERIAL_MAJOR, 38)), "\\??\\COM39", exists_ntdev, S_IFCHR},
  {"/dev/ttyS39", BRACK(FHDEV(DEV_SERIAL_MAJOR, 39)), "\\??\\COM40", exists_ntdev, S_IFCHR},
  {"/dev/ttyS40", BRACK(FHDEV(DEV_SERIAL_MAJOR, 40)), "\\??\\COM41", exists_ntdev, S_IFCHR},
  {"/dev/ttyS41", BRACK(FHDEV(DEV_SERIAL_MAJOR, 41)), "\\??\\COM42", exists_ntdev, S_IFCHR},
  {"/dev/ttyS42", BRACK(FHDEV(DEV_SERIAL_MAJOR, 42)), "\\??\\COM43", exists_ntdev, S_IFCHR},
  {"/dev/ttyS43", BRACK(FHDEV(DEV_SERIAL_MAJOR, 43)), "\\??\\COM44", exists_ntdev, S_IFCHR},
  {"/dev/ttyS44", BRACK(FHDEV(DEV_SERIAL_MAJOR, 44)), "\\??\\COM45", exists_ntdev, S_IFCHR},
  {"/dev/ttyS45", BRACK(FHDEV(DEV_SERIAL_MAJOR, 45)), "\\??\\COM46", exists_ntdev, S_IFCHR},
  {"/dev/ttyS46", BRACK(FHDEV(DEV_SERIAL_MAJOR, 46)), "\\??\\COM47", exists_ntdev, S_IFCHR},
  {"/dev/ttyS47", BRACK(FHDEV(DEV_SERIAL_MAJOR, 47)), "\\??\\COM48", exists_ntdev, S_IFCHR},
  {"/dev/ttyS48", BRACK(FHDEV(DEV_SERIAL_MAJOR, 48)), "\\??\\COM49", exists_ntdev, S_IFCHR},
  {"/dev/ttyS49", BRACK(FHDEV(DEV_SERIAL_MAJOR, 49)), "\\??\\COM50", exists_ntdev, S_IFCHR},
  {"/dev/ttyS50", BRACK(FHDEV(DEV_SERIAL_MAJOR, 50)), "\\??\\COM51", exists_ntdev, S_IFCHR},
  {"/dev/ttyS51", BRACK(FHDEV(DEV_SERIAL_MAJOR, 51)), "\\??\\COM52", exists_ntdev, S_IFCHR},
  {"/dev/ttyS52", BRACK(FHDEV(DEV_SERIAL_MAJOR, 52)), "\\??\\COM53", exists_ntdev, S_IFCHR},
  {"/dev/ttyS53", BRACK(FHDEV(DEV_SERIAL_MAJOR, 53)), "\\??\\COM54", exists_ntdev, S_IFCHR},
  {"/dev/ttyS54", BRACK(FHDEV(DEV_SERIAL_MAJOR, 54)), "\\??\\COM55", exists_ntdev, S_IFCHR},
  {"/dev/ttyS55", BRACK(FHDEV(DEV_SERIAL_MAJOR, 55)), "\\??\\COM56", exists_ntdev, S_IFCHR},
  {"/dev/ttyS56", BRACK(FHDEV(DEV_SERIAL_MAJOR, 56)), "\\??\\COM57", exists_ntdev, S_IFCHR},
  {"/dev/ttyS57", BRACK(FHDEV(DEV_SERIAL_MAJOR, 57)), "\\??\\COM58", exists_ntdev, S_IFCHR},
  {"/dev/ttyS58", BRACK(FHDEV(DEV_SERIAL_MAJOR, 58)), "\\??\\COM59", exists_ntdev, S_IFCHR},
  {"/dev/ttyS59", BRACK(FHDEV(DEV_SERIAL_MAJOR, 59)), "\\??\\COM60", exists_ntdev, S_IFCHR},
  {"/dev/ttyS60", BRACK(FHDEV(DEV_SERIAL_MAJOR, 60)), "\\??\\COM61", exists_ntdev, S_IFCHR},
  {"/dev/ttyS61", BRACK(FHDEV(DEV_SERIAL_MAJOR, 61)), "\\??\\COM62", exists_ntdev, S_IFCHR},
  {"/dev/ttyS62", BRACK(FHDEV(DEV_SERIAL_MAJOR, 62)), "\\??\\COM63", exists_ntdev, S_IFCHR},
  {"/dev/ttyS63", BRACK(FHDEV(DEV_SERIAL_MAJOR, 63)), "\\??\\COM64", exists_ntdev, S_IFCHR},
  {"/dev/urandom", BRACK(FH_URANDOM), "/dev/urandom", exists, S_IFCHR},
  {"/dev/windows", BRACK(FH_WINDOWS), "/dev/windows", exists, S_IFCHR},
  {"/dev/zero", BRACK(FH_ZERO), "/dev/zero", exists, S_IFCHR},
  {":fifo", BRACK(FH_FIFO), "/dev/fifo", exists_internal, S_IFCHR},
  {":pipe", BRACK(FH_PIPE), "/dev/pipe", exists_internal, S_IFCHR},
  {":ptym0", BRACK(FHDEV(DEV_PTYM_MAJOR, 0)), "/dev/ptym0", exists_internal, S_IFCHR},
  {":ptym1", BRACK(FHDEV(DEV_PTYM_MAJOR, 1)), "/dev/ptym1", exists_internal, S_IFCHR},
  {":ptym2", BRACK(FHDEV(DEV_PTYM_MAJOR, 2)), "/dev/ptym2", exists_internal, S_IFCHR},
  {":ptym3", BRACK(FHDEV(DEV_PTYM_MAJOR, 3)), "/dev/ptym3", exists_internal, S_IFCHR},
  {":ptym4", BRACK(FHDEV(DEV_PTYM_MAJOR, 4)), "/dev/ptym4", exists_internal, S_IFCHR},
  {":ptym5", BRACK(FHDEV(DEV_PTYM_MAJOR, 5)), "/dev/ptym5", exists_internal, S_IFCHR},
  {":ptym6", BRACK(FHDEV(DEV_PTYM_MAJOR, 6)), "/dev/ptym6", exists_internal, S_IFCHR},
  {":ptym7", BRACK(FHDEV(DEV_PTYM_MAJOR, 7)), "/dev/ptym7", exists_internal, S_IFCHR},
  {":ptym8", BRACK(FHDEV(DEV_PTYM_MAJOR, 8)), "/dev/ptym8", exists_internal, S_IFCHR},
  {":ptym9", BRACK(FHDEV(DEV_PTYM_MAJOR, 9)), "/dev/ptym9", exists_internal, S_IFCHR},
  {":ptym10", BRACK(FHDEV(DEV_PTYM_MAJOR, 10)), "/dev/ptym10", exists_internal, S_IFCHR},
  {":ptym11", BRACK(FHDEV(DEV_PTYM_MAJOR, 11)), "/dev/ptym11", exists_internal, S_IFCHR},
  {":ptym12", BRACK(FHDEV(DEV_PTYM_MAJOR, 12)), "/dev/ptym12", exists_internal, S_IFCHR},
  {":ptym13", BRACK(FHDEV(DEV_PTYM_MAJOR, 13)), "/dev/ptym13", exists_internal, S_IFCHR},
  {":ptym14", BRACK(FHDEV(DEV_PTYM_MAJOR, 14)), "/dev/ptym14", exists_internal, S_IFCHR},
  {":ptym15", BRACK(FHDEV(DEV_PTYM_MAJOR, 15)), "/dev/ptym15", exists_internal, S_IFCHR},
  {":ptym16", BRACK(FHDEV(DEV_PTYM_MAJOR, 16)), "/dev/ptym16", exists_internal, S_IFCHR},
  {":ptym17", BRACK(FHDEV(DEV_PTYM_MAJOR, 17)), "/dev/ptym17", exists_internal, S_IFCHR},
  {":ptym18", BRACK(FHDEV(DEV_PTYM_MAJOR, 18)), "/dev/ptym18", exists_internal, S_IFCHR},
  {":ptym19", BRACK(FHDEV(DEV_PTYM_MAJOR, 19)), "/dev/ptym19", exists_internal, S_IFCHR},
  {":ptym20", BRACK(FHDEV(DEV_PTYM_MAJOR, 20)), "/dev/ptym20", exists_internal, S_IFCHR},
  {":ptym21", BRACK(FHDEV(DEV_PTYM_MAJOR, 21)), "/dev/ptym21", exists_internal, S_IFCHR},
  {":ptym22", BRACK(FHDEV(DEV_PTYM_MAJOR, 22)), "/dev/ptym22", exists_internal, S_IFCHR},
  {":ptym23", BRACK(FHDEV(DEV_PTYM_MAJOR, 23)), "/dev/ptym23", exists_internal, S_IFCHR},
  {":ptym24", BRACK(FHDEV(DEV_PTYM_MAJOR, 24)), "/dev/ptym24", exists_internal, S_IFCHR},
  {":ptym25", BRACK(FHDEV(DEV_PTYM_MAJOR, 25)), "/dev/ptym25", exists_internal, S_IFCHR},
  {":ptym26", BRACK(FHDEV(DEV_PTYM_MAJOR, 26)), "/dev/ptym26", exists_internal, S_IFCHR},
  {":ptym27", BRACK(FHDEV(DEV_PTYM_MAJOR, 27)), "/dev/ptym27", exists_internal, S_IFCHR},
  {":ptym28", BRACK(FHDEV(DEV_PTYM_MAJOR, 28)), "/dev/ptym28", exists_internal, S_IFCHR},
  {":ptym29", BRACK(FHDEV(DEV_PTYM_MAJOR, 29)), "/dev/ptym29", exists_internal, S_IFCHR},
  {":ptym30", BRACK(FHDEV(DEV_PTYM_MAJOR, 30)), "/dev/ptym30", exists_internal, S_IFCHR},
  {":ptym31", BRACK(FHDEV(DEV_PTYM_MAJOR, 31)), "/dev/ptym31", exists_internal, S_IFCHR},
  {":ptym32", BRACK(FHDEV(DEV_PTYM_MAJOR, 32)), "/dev/ptym32", exists_internal, S_IFCHR},
  {":ptym33", BRACK(FHDEV(DEV_PTYM_MAJOR, 33)), "/dev/ptym33", exists_internal, S_IFCHR},
  {":ptym34", BRACK(FHDEV(DEV_PTYM_MAJOR, 34)), "/dev/ptym34", exists_internal, S_IFCHR},
  {":ptym35", BRACK(FHDEV(DEV_PTYM_MAJOR, 35)), "/dev/ptym35", exists_internal, S_IFCHR},
  {":ptym36", BRACK(FHDEV(DEV_PTYM_MAJOR, 36)), "/dev/ptym36", exists_internal, S_IFCHR},
  {":ptym37", BRACK(FHDEV(DEV_PTYM_MAJOR, 37)), "/dev/ptym37", exists_internal, S_IFCHR},
  {":ptym38", BRACK(FHDEV(DEV_PTYM_MAJOR, 38)), "/dev/ptym38", exists_internal, S_IFCHR},
  {":ptym39", BRACK(FHDEV(DEV_PTYM_MAJOR, 39)), "/dev/ptym39", exists_internal, S_IFCHR},
  {":ptym40", BRACK(FHDEV(DEV_PTYM_MAJOR, 40)), "/dev/ptym40", exists_internal, S_IFCHR},
  {":ptym41", BRACK(FHDEV(DEV_PTYM_MAJOR, 41)), "/dev/ptym41", exists_internal, S_IFCHR},
  {":ptym42", BRACK(FHDEV(DEV_PTYM_MAJOR, 42)), "/dev/ptym42", exists_internal, S_IFCHR},
  {":ptym43", BRACK(FHDEV(DEV_PTYM_MAJOR, 43)), "/dev/ptym43", exists_internal, S_IFCHR},
  {":ptym44", BRACK(FHDEV(DEV_PTYM_MAJOR, 44)), "/dev/ptym44", exists_internal, S_IFCHR},
  {":ptym45", BRACK(FHDEV(DEV_PTYM_MAJOR, 45)), "/dev/ptym45", exists_internal, S_IFCHR},
  {":ptym46", BRACK(FHDEV(DEV_PTYM_MAJOR, 46)), "/dev/ptym46", exists_internal, S_IFCHR},
  {":ptym47", BRACK(FHDEV(DEV_PTYM_MAJOR, 47)), "/dev/ptym47", exists_internal, S_IFCHR},
  {":ptym48", BRACK(FHDEV(DEV_PTYM_MAJOR, 48)), "/dev/ptym48", exists_internal, S_IFCHR},
  {":ptym49", BRACK(FHDEV(DEV_PTYM_MAJOR, 49)), "/dev/ptym49", exists_internal, S_IFCHR},
  {":ptym50", BRACK(FHDEV(DEV_PTYM_MAJOR, 50)), "/dev/ptym50", exists_internal, S_IFCHR},
  {":ptym51", BRACK(FHDEV(DEV_PTYM_MAJOR, 51)), "/dev/ptym51", exists_internal, S_IFCHR},
  {":ptym52", BRACK(FHDEV(DEV_PTYM_MAJOR, 52)), "/dev/ptym52", exists_internal, S_IFCHR},
  {":ptym53", BRACK(FHDEV(DEV_PTYM_MAJOR, 53)), "/dev/ptym53", exists_internal, S_IFCHR},
  {":ptym54", BRACK(FHDEV(DEV_PTYM_MAJOR, 54)), "/dev/ptym54", exists_internal, S_IFCHR},
  {":ptym55", BRACK(FHDEV(DEV_PTYM_MAJOR, 55)), "/dev/ptym55", exists_internal, S_IFCHR},
  {":ptym56", BRACK(FHDEV(DEV_PTYM_MAJOR, 56)), "/dev/ptym56", exists_internal, S_IFCHR},
  {":ptym57", BRACK(FHDEV(DEV_PTYM_MAJOR, 57)), "/dev/ptym57", exists_internal, S_IFCHR},
  {":ptym58", BRACK(FHDEV(DEV_PTYM_MAJOR, 58)), "/dev/ptym58", exists_internal, S_IFCHR},
  {":ptym59", BRACK(FHDEV(DEV_PTYM_MAJOR, 59)), "/dev/ptym59", exists_internal, S_IFCHR},
  {":ptym60", BRACK(FHDEV(DEV_PTYM_MAJOR, 60)), "/dev/ptym60", exists_internal, S_IFCHR},
  {":ptym61", BRACK(FHDEV(DEV_PTYM_MAJOR, 61)), "/dev/ptym61", exists_internal, S_IFCHR},
  {":ptym62", BRACK(FHDEV(DEV_PTYM_MAJOR, 62)), "/dev/ptym62", exists_internal, S_IFCHR},
  {":ptym63", BRACK(FHDEV(DEV_PTYM_MAJOR, 63)), "/dev/ptym63", exists_internal, S_IFCHR}
d2816 2
a2817 2
    case 6:
      switch (KR_keyword [2])
d2820 1
a2820 1
          if (strncmp (KR_keyword, ":pipe", 6) == 0)
d2835 1
a2835 1
          if (strncmp (KR_keyword, ":fifo", 6) == 0)
d2855 2
a2856 2
    case 7:
      switch (KR_keyword [6])
d2859 1
a2859 1
          if (strncmp (KR_keyword, ":ptym9", 7) == 0)
d2874 1
a2874 1
          if (strncmp (KR_keyword, ":ptym8", 7) == 0)
d2889 1
a2889 1
          if (strncmp (KR_keyword, ":ptym7", 7) == 0)
d2904 1
a2904 1
          if (strncmp (KR_keyword, ":ptym6", 7) == 0)
d2919 1
a2919 1
          if (strncmp (KR_keyword, ":ptym5", 7) == 0)
d2934 1
a2934 1
          if (strncmp (KR_keyword, ":ptym4", 7) == 0)
d2949 1
a2949 1
          if (strncmp (KR_keyword, ":ptym3", 7) == 0)
d2964 1
a2964 1
          if (strncmp (KR_keyword, ":ptym2", 7) == 0)
d2979 1
a2979 1
          if (strncmp (KR_keyword, ":ptym1", 7) == 0)
d2994 1
a2994 1
          if (strncmp (KR_keyword, ":ptym0", 7) == 0)
d3014 2
a3015 2
    case 8:
      switch (KR_keyword [7])
d3017 2
a3018 2
        case 'z':
          if (strncmp (KR_keyword, "/dev/sdz", 8) == 0)
d3020 3
d3024 1
a3024 1
return dev_storage + 343;
d3027 3
a3029 3
            }
          else
            {
d3034 3
a3036 6
            }
        case 'y':
          switch (KR_keyword [5])
            {
            case 't':
              if (strncmp (KR_keyword, "/dev/tty", 8) == 0)
d3039 1
a3039 1
return dev_storage + 2510;
d3050 2
a3051 2
            case 's':
              if (strncmp (KR_keyword, "/dev/sdy", 8) == 0)
d3054 1
a3054 1
return dev_storage + 342;
d3065 3
a3067 1
            default:
d3069 1
a3069 1
return	NULL;
d3072 3
a3074 4
            }
        case 'x':
          if (strncmp (KR_keyword, "/dev/sdx", 8) == 0)
            {
d3076 1
a3076 1
return dev_storage + 341;
d3079 2
a3080 3
            }
          else
            {
d3086 2
a3087 2
        case 'w':
          if (strncmp (KR_keyword, "/dev/sdw", 8) == 0)
d3089 3
d3093 1
a3093 1
return dev_storage + 340;
d3096 3
a3098 3
            }
          else
            {
d3103 4
a3106 4
            }
        case 'v':
          if (strncmp (KR_keyword, "/dev/sdv", 8) == 0)
            {
d3108 1
a3108 1
return dev_storage + 339;
d3111 3
a3113 3
            }
          else
            {
d3118 4
a3121 4
            }
        case 'u':
          if (strncmp (KR_keyword, "/dev/sdu", 8) == 0)
            {
d3123 1
a3123 1
return dev_storage + 338;
d3126 3
a3128 3
            }
          else
            {
d3133 4
a3136 4
            }
        case 't':
          if (strncmp (KR_keyword, "/dev/sdt", 8) == 0)
            {
d3138 1
a3138 1
return dev_storage + 337;
d3141 3
a3143 3
            }
          else
            {
d3148 4
a3151 4
            }
        case 's':
          if (strncmp (KR_keyword, "/dev/sds", 8) == 0)
            {
d3153 1
a3153 1
return dev_storage + 336;
d3156 3
a3158 3
            }
          else
            {
d3163 4
a3166 4
            }
        case 'r':
          if (strncmp (KR_keyword, "/dev/sdr", 8) == 0)
            {
d3168 1
a3168 1
return dev_storage + 335;
d3171 3
a3173 3
            }
          else
            {
d3178 4
a3181 4
            }
        case 'q':
          if (strncmp (KR_keyword, "/dev/sdq", 8) == 0)
            {
d3183 1
a3183 1
return dev_storage + 334;
d3186 3
a3188 3
            }
          else
            {
d3193 3
a3195 6
            }
        case 'p':
          switch (KR_keyword [5])
            {
            case 's':
              if (strncmp (KR_keyword, "/dev/sdp", 8) == 0)
d3198 1
a3198 1
return dev_storage + 333;
d3209 2
a3210 2
            case 'd':
              if (strncmp (KR_keyword, "/dev/dsp", 8) == 0)
d3213 1
a3213 1
return dev_storage + 85;
d3224 3
a3226 1
            default:
d3228 1
a3228 1
return	NULL;
d3231 3
a3233 4
            }
        case 'o':
          if (strncmp (KR_keyword, "/dev/sdo", 8) == 0)
            {
d3235 1
a3235 1
return dev_storage + 332;
d3238 2
a3239 3
            }
          else
            {
d3245 2
a3246 2
        case 'n':
          if (strncmp (KR_keyword, "/dev/sdn", 8) == 0)
d3248 3
d3252 1
a3252 1
return dev_storage + 331;
d3255 3
a3257 3
            }
          else
            {
d3262 3
a3264 6
            }
        case 'm':
          switch (KR_keyword [5])
            {
            case 's':
              if (strncmp (KR_keyword, "/dev/sdm", 8) == 0)
d3267 1
a3267 1
return dev_storage + 330;
d3278 2
a3279 2
            case 'm':
              if (strncmp (KR_keyword, "/dev/mem", 8) == 0)
d3282 1
a3282 1
return dev_storage + 105;
d3293 3
a3295 1
            default:
d3297 1
a3297 1
return	NULL;
d3300 3
a3302 11
            }
        case 'l':
          if (strncmp (KR_keyword, "/dev/sdl", 8) == 0)
            {
{
return dev_storage + 329;

}
            }
          else
            {
d3307 4
a3310 4
            }
        case 'k':
          if (strncmp (KR_keyword, "/dev/sdk", 8) == 0)
            {
d3312 1
a3312 1
return dev_storage + 328;
d3315 3
a3317 3
            }
          else
            {
d3322 4
a3325 4
            }
        case 'j':
          if (strncmp (KR_keyword, "/dev/sdj", 8) == 0)
            {
d3327 1
a3327 1
return dev_storage + 327;
d3330 3
a3332 3
            }
          else
            {
d3337 4
a3340 4
            }
        case 'i':
          if (strncmp (KR_keyword, "/dev/sdi", 8) == 0)
            {
d3342 1
a3342 1
return dev_storage + 326;
d3345 3
a3347 3
            }
          else
            {
d3352 4
a3355 4
            }
        case 'h':
          if (strncmp (KR_keyword, "/dev/sdh", 8) == 0)
            {
d3357 1
a3357 1
return dev_storage + 325;
d3360 3
a3362 3
            }
          else
            {
d3367 4
a3370 4
            }
        case 'g':
          if (strncmp (KR_keyword, "/dev/sdg", 8) == 0)
            {
d3372 1
a3372 1
return dev_storage + 324;
d3375 3
a3377 3
            }
          else
            {
d3382 4
a3385 4
            }
        case 'f':
          if (strncmp (KR_keyword, "/dev/sdf", 8) == 0)
            {
d3387 1
a3387 1
return dev_storage + 323;
d3390 3
a3392 3
            }
          else
            {
d3397 2
a3398 11
            }
        case 'e':
          if (strncmp (KR_keyword, "/dev/sde", 8) == 0)
            {
{
return dev_storage + 322;

}
            }
          else
            {
d3404 2
a3405 2
        case 'd':
          if (strncmp (KR_keyword, "/dev/sdd", 8) == 0)
d3407 3
d3411 1
a3411 1
return dev_storage + 321;
d3414 3
a3416 3
            }
          else
            {
d3421 4
a3424 4
            }
        case 'c':
          if (strncmp (KR_keyword, "/dev/sdc", 8) == 0)
            {
d3426 1
a3426 1
return dev_storage + 320;
d3429 3
a3431 3
            }
          else
            {
d3436 4
a3439 4
            }
        case 'b':
          if (strncmp (KR_keyword, "/dev/sdb", 8) == 0)
            {
d3441 1
a3441 1
return dev_storage + 319;
d3444 3
a3446 3
            }
          else
            {
d3451 4
a3454 4
            }
        case 'a':
          if (strncmp (KR_keyword, "/dev/sda", 8) == 0)
            {
d3456 1
a3456 1
return dev_storage + 318;
d3459 3
a3461 3
            }
          else
            {
d3466 3
a3468 6
            }
        case '9':
          switch (KR_keyword [6])
            {
            case 't':
              if (strncmp (KR_keyword, "/dev/st9", 8) == 0)
d3471 1
a3471 1
return dev_storage + 2391;
d3482 2
a3483 2
            case 'r':
              if (strncmp (KR_keyword, "/dev/sr9", 8) == 0)
d3486 1
a3486 1
return dev_storage + 2375;
d3497 2
a3498 2
            case 'd':
              if (strncmp (KR_keyword, "/dev/fd9", 8) == 0)
d3501 1
a3501 1
return dev_storage + 95;
d3512 2
a3513 2
            case '5':
              if (strncmp (KR_keyword, ":ptym59", 8) == 0)
d3516 1
a3516 1
return dev_storage + 2639;
d3527 2
a3528 2
            case '4':
              if (strncmp (KR_keyword, ":ptym49", 8) == 0)
d3531 1
a3531 1
return dev_storage + 2629;
d3542 2
a3543 2
            case '3':
              if (strncmp (KR_keyword, ":ptym39", 8) == 0)
d3546 1
a3546 1
return dev_storage + 2619;
d3557 11
a3567 2
            case '2':
              if (strncmp (KR_keyword, ":ptym29", 8) == 0)
d3581 2
a3582 2
            case '1':
              if (strncmp (KR_keyword, ":ptym19", 8) == 0)
d3585 1
a3585 1
return dev_storage + 2599;
d3596 2
a3597 11
            default:
{
return	NULL;

}
            }
        case '8':
          switch (KR_keyword [6])
            {
            case 't':
              if (strncmp (KR_keyword, "/dev/st8", 8) == 0)
d3600 1
a3600 1
return dev_storage + 2390;
d3611 2
a3612 2
            case 'r':
              if (strncmp (KR_keyword, "/dev/sr8", 8) == 0)
d3615 1
a3615 1
return dev_storage + 2374;
d3626 2
a3627 2
            case 'd':
              if (strncmp (KR_keyword, "/dev/fd8", 8) == 0)
d3630 1
a3630 1
return dev_storage + 94;
d3641 2
a3642 2
            case '5':
              if (strncmp (KR_keyword, ":ptym58", 8) == 0)
d3645 1
a3645 1
return dev_storage + 2638;
d3656 2
a3657 2
            case '4':
              if (strncmp (KR_keyword, ":ptym48", 8) == 0)
d3660 1
a3660 1
return dev_storage + 2628;
d3671 2
a3672 2
            case '3':
              if (strncmp (KR_keyword, ":ptym38", 8) == 0)
d3675 1
a3675 1
return dev_storage + 2618;
d3686 2
a3687 2
            case '2':
              if (strncmp (KR_keyword, ":ptym28", 8) == 0)
d3690 1
a3690 1
return dev_storage + 2608;
d3701 2
a3702 2
            case '1':
              if (strncmp (KR_keyword, ":ptym18", 8) == 0)
d3705 1
a3705 1
return dev_storage + 2598;
d3722 1
a3722 1
        case '7':
d3725 2
a3726 2
            case 't':
              if (strncmp (KR_keyword, "/dev/st7", 8) == 0)
d3729 1
a3729 1
return dev_storage + 2389;
d3740 2
a3741 2
            case 'r':
              if (strncmp (KR_keyword, "/dev/sr7", 8) == 0)
d3744 1
a3744 1
return dev_storage + 2373;
d3755 2
a3756 2
            case 'd':
              if (strncmp (KR_keyword, "/dev/fd7", 8) == 0)
d3759 1
a3759 1
return dev_storage + 93;
d3770 2
a3771 2
            case '5':
              if (strncmp (KR_keyword, ":ptym57", 8) == 0)
d3774 1
a3774 1
return dev_storage + 2637;
d3785 2
a3786 2
            case '4':
              if (strncmp (KR_keyword, ":ptym47", 8) == 0)
d3789 1
a3789 1
return dev_storage + 2627;
d3800 2
a3801 2
            case '3':
              if (strncmp (KR_keyword, ":ptym37", 8) == 0)
d3804 1
a3804 1
return dev_storage + 2617;
d3815 2
a3816 2
            case '2':
              if (strncmp (KR_keyword, ":ptym27", 8) == 0)
d3819 1
a3819 1
return dev_storage + 2607;
d3830 2
a3831 2
            case '1':
              if (strncmp (KR_keyword, ":ptym17", 8) == 0)
d3834 1
a3834 1
return dev_storage + 2597;
d3845 2
a3846 11
            default:
{
return	NULL;

}
            }
        case '6':
          switch (KR_keyword [6])
            {
            case 't':
              if (strncmp (KR_keyword, "/dev/st6", 8) == 0)
d3849 1
a3849 1
return dev_storage + 2388;
d3860 2
a3861 2
            case 'r':
              if (strncmp (KR_keyword, "/dev/sr6", 8) == 0)
d3864 1
a3864 1
return dev_storage + 2372;
d3875 1
a3875 3
            case 'd':
              if (strncmp (KR_keyword, "/dev/fd6", 8) == 0)
                {
d3877 1
a3877 1
return dev_storage + 92;
d3880 2
a3881 3
                }
              else
                {
d3886 7
a3892 4
                }
            case '5':
              if (strncmp (KR_keyword, ":ptym56", 8) == 0)
                {
d3894 1
a3894 1
return dev_storage + 2636;
d3897 3
a3899 3
                }
              else
                {
d3904 6
a3909 3
                }
            case '4':
              if (strncmp (KR_keyword, ":ptym46", 8) == 0)
d3912 1
a3912 1
return dev_storage + 2626;
d3923 2
a3924 2
            case '3':
              if (strncmp (KR_keyword, ":ptym36", 8) == 0)
d3927 1
a3927 1
return dev_storage + 2616;
d3938 9
a3946 3
            case '2':
              if (strncmp (KR_keyword, ":ptym26", 8) == 0)
                {
d3948 1
a3948 1
return dev_storage + 2606;
d3951 3
a3953 3
                }
              else
                {
d3958 4
a3961 4
                }
            case '1':
              if (strncmp (KR_keyword, ":ptym16", 8) == 0)
                {
d3963 1
a3963 1
return dev_storage + 2596;
d3966 3
a3968 3
                }
              else
                {
d3973 11
a3983 2
                }
            default:
d3989 2
a3990 2
        case '5':
          switch (KR_keyword [6])
a3991 3
            case 't':
              if (strncmp (KR_keyword, "/dev/st5", 8) == 0)
                {
d3993 1
a3993 1
return dev_storage + 2387;
d3996 3
a3998 3
                }
              else
                {
d4003 4
a4006 4
                }
            case 'r':
              if (strncmp (KR_keyword, "/dev/sr5", 8) == 0)
                {
d4008 1
a4008 1
return dev_storage + 2371;
d4011 3
a4013 3
                }
              else
                {
d4018 4
a4021 4
                }
            case 'd':
              if (strncmp (KR_keyword, "/dev/fd5", 8) == 0)
                {
d4023 1
a4023 1
return dev_storage + 91;
d4026 3
a4028 3
                }
              else
                {
d4033 4
a4036 4
                }
            case '5':
              if (strncmp (KR_keyword, ":ptym55", 8) == 0)
                {
d4038 1
a4038 1
return dev_storage + 2635;
d4041 3
a4043 3
                }
              else
                {
d4048 4
a4051 4
                }
            case '4':
              if (strncmp (KR_keyword, ":ptym45", 8) == 0)
                {
d4053 1
a4053 1
return dev_storage + 2625;
d4056 3
a4058 3
                }
              else
                {
d4063 6
a4068 3
                }
            case '3':
              if (strncmp (KR_keyword, ":ptym35", 8) == 0)
d4071 1
a4071 1
return dev_storage + 2615;
d4082 2
a4083 2
            case '2':
              if (strncmp (KR_keyword, ":ptym25", 8) == 0)
d4086 1
a4086 1
return dev_storage + 2605;
d4097 1
a4097 3
            case '1':
              if (strncmp (KR_keyword, ":ptym15", 8) == 0)
                {
d4099 1
a4099 1
return dev_storage + 2595;
d4102 4
a4105 3
                }
              else
                {
d4107 1
a4107 1
return	NULL;
d4110 3
a4112 2
                }
            default:
d4118 2
a4119 2
        case '4':
          switch (KR_keyword [6])
a4120 3
            case 't':
              if (strncmp (KR_keyword, "/dev/st4", 8) == 0)
                {
d4122 1
a4122 1
return dev_storage + 2386;
d4125 3
a4127 3
                }
              else
                {
d4132 6
a4137 3
                }
            case 'r':
              if (strncmp (KR_keyword, "/dev/sr4", 8) == 0)
d4140 1
a4140 1
return dev_storage + 2370;
d4151 2
a4152 2
            case 'd':
              if (strncmp (KR_keyword, "/dev/fd4", 8) == 0)
d4155 1
a4155 1
return dev_storage + 90;
d4166 9
a4174 3
            case '5':
              if (strncmp (KR_keyword, ":ptym54", 8) == 0)
                {
d4176 1
a4176 1
return dev_storage + 2634;
d4179 3
a4181 3
                }
              else
                {
d4186 4
a4189 4
                }
            case '4':
              if (strncmp (KR_keyword, ":ptym44", 8) == 0)
                {
d4191 1
a4191 1
return dev_storage + 2624;
d4194 3
a4196 3
                }
              else
                {
d4201 4
a4204 4
                }
            case '3':
              if (strncmp (KR_keyword, ":ptym34", 8) == 0)
                {
d4206 1
a4206 1
return dev_storage + 2614;
d4209 3
a4211 3
                }
              else
                {
d4216 4
a4219 4
                }
            case '2':
              if (strncmp (KR_keyword, ":ptym24", 8) == 0)
                {
d4221 1
a4221 1
return dev_storage + 2604;
d4224 3
a4226 3
                }
              else
                {
d4231 4
a4234 4
                }
            case '1':
              if (strncmp (KR_keyword, ":ptym14", 8) == 0)
                {
d4236 1
a4236 1
return dev_storage + 2594;
d4239 3
a4241 3
                }
              else
                {
d4246 11
a4256 2
                }
            default:
d4262 2
a4263 2
        case '3':
          switch (KR_keyword [6])
a4264 3
            case 't':
              if (strncmp (KR_keyword, "/dev/st3", 8) == 0)
                {
d4266 1
a4266 1
return dev_storage + 2385;
d4269 3
a4271 3
                }
              else
                {
d4276 4
a4279 4
                }
            case 'r':
              if (strncmp (KR_keyword, "/dev/sr3", 8) == 0)
                {
d4281 1
a4281 1
return dev_storage + 2369;
d4284 3
a4286 3
                }
              else
                {
d4291 4
a4294 4
                }
            case 'd':
              if (strncmp (KR_keyword, "/dev/fd3", 8) == 0)
                {
d4296 1
a4296 1
return dev_storage + 89;
d4299 3
a4301 3
                }
              else
                {
d4306 4
a4309 4
                }
            case '6':
              if (strncmp (KR_keyword, ":ptym63", 8) == 0)
                {
d4311 1
a4311 1
return dev_storage + 2643;
d4314 3
a4316 3
                }
              else
                {
d4321 4
a4324 4
                }
            case '5':
              if (strncmp (KR_keyword, ":ptym53", 8) == 0)
                {
d4326 1
a4326 1
return dev_storage + 2633;
d4329 3
a4331 3
                }
              else
                {
d4336 4
a4339 4
                }
            case '4':
              if (strncmp (KR_keyword, ":ptym43", 8) == 0)
                {
d4341 1
a4341 1
return dev_storage + 2623;
d4344 3
a4346 3
                }
              else
                {
d4351 6
a4356 3
                }
            case '3':
              if (strncmp (KR_keyword, ":ptym33", 8) == 0)
d4359 1
a4359 1
return dev_storage + 2613;
d4370 2
a4371 2
            case '2':
              if (strncmp (KR_keyword, ":ptym23", 8) == 0)
d4374 1
a4374 1
return dev_storage + 2603;
d4385 2
a4386 2
            case '1':
              if (strncmp (KR_keyword, ":ptym13", 8) == 0)
d4389 1
a4389 1
return dev_storage + 2593;
d4406 1
a4406 1
        case '2':
d4410 1
a4410 1
              if (strncmp (KR_keyword, "/dev/st2", 8) == 0)
d4413 1
a4413 1
return dev_storage + 2384;
d4425 1
a4425 1
              if (strncmp (KR_keyword, "/dev/sr2", 8) == 0)
d4428 1
a4428 1
return dev_storage + 2368;
d4440 1
a4440 1
              if (strncmp (KR_keyword, "/dev/fd2", 8) == 0)
d4443 1
a4443 1
return dev_storage + 88;
d4454 11
a4464 2
            case '6':
              if (strncmp (KR_keyword, ":ptym62", 8) == 0)
d4467 1
a4467 1
return dev_storage + 2642;
d4478 2
a4479 2
            case '5':
              if (strncmp (KR_keyword, ":ptym52", 8) == 0)
d4482 1
a4482 1
return dev_storage + 2632;
d4493 2
a4494 2
            case '4':
              if (strncmp (KR_keyword, ":ptym42", 8) == 0)
d4497 1
a4497 1
return dev_storage + 2622;
d4508 11
a4518 2
            case '3':
              if (strncmp (KR_keyword, ":ptym32", 8) == 0)
d4521 1
a4521 1
return dev_storage + 2612;
d4532 2
a4533 2
            case '2':
              if (strncmp (KR_keyword, ":ptym22", 8) == 0)
d4536 1
a4536 1
return dev_storage + 2602;
d4547 2
a4548 2
            case '1':
              if (strncmp (KR_keyword, ":ptym12", 8) == 0)
d4551 1
a4551 1
return dev_storage + 2592;
d4568 1
a4568 1
        case '1':
d4572 1
a4572 1
              if (strncmp (KR_keyword, "/dev/st1", 8) == 0)
d4575 1
a4575 1
return dev_storage + 2383;
d4587 1
a4587 1
              if (strncmp (KR_keyword, "/dev/sr1", 8) == 0)
d4590 1
a4590 1
return dev_storage + 2367;
d4602 1
a4602 1
              if (strncmp (KR_keyword, "/dev/fd1", 8) == 0)
d4605 1
a4605 1
return dev_storage + 87;
d4616 11
a4626 2
            case '6':
              if (strncmp (KR_keyword, ":ptym61", 8) == 0)
d4629 1
a4629 1
return dev_storage + 2641;
d4640 2
a4641 2
            case '5':
              if (strncmp (KR_keyword, ":ptym51", 8) == 0)
d4644 1
a4644 1
return dev_storage + 2631;
d4655 2
a4656 2
            case '4':
              if (strncmp (KR_keyword, ":ptym41", 8) == 0)
d4659 1
a4659 1
return dev_storage + 2621;
d4670 11
a4680 2
            case '3':
              if (strncmp (KR_keyword, ":ptym31", 8) == 0)
d4683 1
a4683 1
return dev_storage + 2611;
d4694 2
a4695 2
            case '2':
              if (strncmp (KR_keyword, ":ptym21", 8) == 0)
d4698 1
a4698 1
return dev_storage + 2601;
d4709 2
a4710 2
            case '1':
              if (strncmp (KR_keyword, ":ptym11", 8) == 0)
d4713 1
a4713 1
return dev_storage + 2591;
d4730 1
a4730 1
        case '0':
d4734 1
a4734 1
              if (strncmp (KR_keyword, "/dev/st0", 8) == 0)
d4737 1
a4737 1
return dev_storage + 2382;
d4749 1
a4749 1
              if (strncmp (KR_keyword, "/dev/sr0", 8) == 0)
d4752 1
a4752 1
return dev_storage + 2366;
d4764 1
a4764 1
              if (strncmp (KR_keyword, "/dev/fd0", 8) == 0)
d4767 1
a4767 1
return dev_storage + 86;
d4778 11
a4788 2
            case '6':
              if (strncmp (KR_keyword, ":ptym60", 8) == 0)
d4791 1
a4791 1
return dev_storage + 2640;
d4802 2
a4803 2
            case '5':
              if (strncmp (KR_keyword, ":ptym50", 8) == 0)
d4806 1
a4806 1
return dev_storage + 2630;
d4817 2
a4818 2
            case '4':
              if (strncmp (KR_keyword, ":ptym40", 8) == 0)
d4821 1
a4821 1
return dev_storage + 2620;
d4832 11
a4842 2
            case '3':
              if (strncmp (KR_keyword, ":ptym30", 8) == 0)
d4845 1
a4845 1
return dev_storage + 2610;
d4856 2
a4857 2
            case '2':
              if (strncmp (KR_keyword, ":ptym20", 8) == 0)
d4860 1
a4860 1
return dev_storage + 2600;
d4871 2
a4872 2
            case '1':
              if (strncmp (KR_keyword, ":ptym10", 8) == 0)
d4875 1
a4875 1
return dev_storage + 2590;
@


1.43
log
@	* devices.cc: Regenerate.
	* devices.h (device::exists_func): New member function pointer,
	replacing noexpose.
	(device::expose): Remove.
	(device::exists_never): Declare.
	(device::exists_ptys): Declare.
	(device::exists_cons): Declare.
	(device::exists_console): Declare.
	(device::exists_nt_dev): Declare.
	(device::exists): Declare.
	* devices.in (dev_storage): Replace former noexpose values with
	pointers to matching exists_XXX method.
	(device::exists_never): New method.
	(device::exists_ptys): New method.
	(device::exists_cons): New method.
	(device::exists_console): New method.
	(device::exists_nt_dev): New method.
	(device::exists): New method.
	* fhandler_dev.cc (fhandler_dev::readdir): Replace call to
	device::expose with call to device::exists and drop all further
	existence filtering since it's done in device::exists now.
	* path.cc (path_conv::check): Replace call to device::expose with call
	to device::exists.
@
text
@d17 74
d92 1
a92 1
  {"/cygdrive", {FH_CYGDRIVE}, "/cygdrive"};
d95 1
a95 1
  {"", {FH_FS}, ""};
d98 1
a98 1
  {"", {FH_PROC}, ""};
d101 1
a101 1
  {"", {FH_PROCNET}, ""};
d104 1
a104 1
  {"", {FH_PROCSYS}, ""};
d107 1
a107 1
  {"", {FH_PROCSYSVIPC}, ""};
d110 1
a110 1
  {"", {FH_NETDRIVE}, ""};
d113 1
a113 1
  {"/dev", {FH_DEV}, "/dev"};
d116 1
a116 1
  {"", {FH_REGISTRY}, ""};
d119 1
a119 1
  {"", {FH_PIPER}, ""};
d122 1
a122 1
  {"", {FH_PIPEW}, ""};
d125 1
a125 1
  {"", {FH_TCP}, ""};
d128 1
a128 1
  {"", {FH_UDP}, ""};
d131 1
a131 1
  {"", {FH_STREAM}, ""};
d134 1
a134 1
  {"", {FH_DGRAM}, ""};
d137 1
a137 1
  {"", {FH_NADA}, ""};
d140 2
a141 1
  {"", {FH_ERROR}, ""};
a142 1

d145 2644
a2788 2644
  {"/dev", BRACK(FH_DEV), "/dev"},
  {"/dev/clipboard", BRACK(FH_CLIPBOARD), "/dev/clipboard"},
  {"/dev/com1", BRACK(FHDEV(DEV_SERIAL_MAJOR, 0)), "\\??\\COM1", &device::exists_never},
  {"/dev/com2", BRACK(FHDEV(DEV_SERIAL_MAJOR, 1)), "\\??\\COM2", &device::exists_never},
  {"/dev/com3", BRACK(FHDEV(DEV_SERIAL_MAJOR, 2)), "\\??\\COM3", &device::exists_never},
  {"/dev/com4", BRACK(FHDEV(DEV_SERIAL_MAJOR, 3)), "\\??\\COM4", &device::exists_never},
  {"/dev/com5", BRACK(FHDEV(DEV_SERIAL_MAJOR, 4)), "\\??\\COM5", &device::exists_never},
  {"/dev/com6", BRACK(FHDEV(DEV_SERIAL_MAJOR, 5)), "\\??\\COM6", &device::exists_never},
  {"/dev/com7", BRACK(FHDEV(DEV_SERIAL_MAJOR, 6)), "\\??\\COM7", &device::exists_never},
  {"/dev/com8", BRACK(FHDEV(DEV_SERIAL_MAJOR, 7)), "\\??\\COM8", &device::exists_never},
  {"/dev/com9", BRACK(FHDEV(DEV_SERIAL_MAJOR, 8)), "\\??\\COM9", &device::exists_never},
  {"/dev/com10", BRACK(FHDEV(DEV_SERIAL_MAJOR, 9)), "\\??\\COM10", &device::exists_never},
  {"/dev/com11", BRACK(FHDEV(DEV_SERIAL_MAJOR, 10)), "\\??\\COM11", &device::exists_never},
  {"/dev/com12", BRACK(FHDEV(DEV_SERIAL_MAJOR, 11)), "\\??\\COM12", &device::exists_never},
  {"/dev/com13", BRACK(FHDEV(DEV_SERIAL_MAJOR, 12)), "\\??\\COM13", &device::exists_never},
  {"/dev/com14", BRACK(FHDEV(DEV_SERIAL_MAJOR, 13)), "\\??\\COM14", &device::exists_never},
  {"/dev/com15", BRACK(FHDEV(DEV_SERIAL_MAJOR, 14)), "\\??\\COM15", &device::exists_never},
  {"/dev/com16", BRACK(FHDEV(DEV_SERIAL_MAJOR, 15)), "\\??\\COM16", &device::exists_never},
  {"/dev/conin", BRACK(FH_CONIN), "/dev/conin", &device::exists_console},
  {"/dev/conout", BRACK(FH_CONOUT), "/dev/conout", &device::exists_console},
  {"/dev/cons0", BRACK(FHDEV(DEV_CONS_MAJOR, 0)), "/dev/cons0", &device::exists_cons},
  {"/dev/cons1", BRACK(FHDEV(DEV_CONS_MAJOR, 1)), "/dev/cons1", &device::exists_cons},
  {"/dev/cons2", BRACK(FHDEV(DEV_CONS_MAJOR, 2)), "/dev/cons2", &device::exists_cons},
  {"/dev/cons3", BRACK(FHDEV(DEV_CONS_MAJOR, 3)), "/dev/cons3", &device::exists_cons},
  {"/dev/cons4", BRACK(FHDEV(DEV_CONS_MAJOR, 4)), "/dev/cons4", &device::exists_cons},
  {"/dev/cons5", BRACK(FHDEV(DEV_CONS_MAJOR, 5)), "/dev/cons5", &device::exists_cons},
  {"/dev/cons6", BRACK(FHDEV(DEV_CONS_MAJOR, 6)), "/dev/cons6", &device::exists_cons},
  {"/dev/cons7", BRACK(FHDEV(DEV_CONS_MAJOR, 7)), "/dev/cons7", &device::exists_cons},
  {"/dev/cons8", BRACK(FHDEV(DEV_CONS_MAJOR, 8)), "/dev/cons8", &device::exists_cons},
  {"/dev/cons9", BRACK(FHDEV(DEV_CONS_MAJOR, 9)), "/dev/cons9", &device::exists_cons},
  {"/dev/cons10", BRACK(FHDEV(DEV_CONS_MAJOR, 10)), "/dev/cons10", &device::exists_cons},
  {"/dev/cons11", BRACK(FHDEV(DEV_CONS_MAJOR, 11)), "/dev/cons11", &device::exists_cons},
  {"/dev/cons12", BRACK(FHDEV(DEV_CONS_MAJOR, 12)), "/dev/cons12", &device::exists_cons},
  {"/dev/cons13", BRACK(FHDEV(DEV_CONS_MAJOR, 13)), "/dev/cons13", &device::exists_cons},
  {"/dev/cons14", BRACK(FHDEV(DEV_CONS_MAJOR, 14)), "/dev/cons14", &device::exists_cons},
  {"/dev/cons15", BRACK(FHDEV(DEV_CONS_MAJOR, 15)), "/dev/cons15", &device::exists_cons},
  {"/dev/cons16", BRACK(FHDEV(DEV_CONS_MAJOR, 16)), "/dev/cons16", &device::exists_cons},
  {"/dev/cons17", BRACK(FHDEV(DEV_CONS_MAJOR, 17)), "/dev/cons17", &device::exists_cons},
  {"/dev/cons18", BRACK(FHDEV(DEV_CONS_MAJOR, 18)), "/dev/cons18", &device::exists_cons},
  {"/dev/cons19", BRACK(FHDEV(DEV_CONS_MAJOR, 19)), "/dev/cons19", &device::exists_cons},
  {"/dev/cons20", BRACK(FHDEV(DEV_CONS_MAJOR, 20)), "/dev/cons20", &device::exists_cons},
  {"/dev/cons21", BRACK(FHDEV(DEV_CONS_MAJOR, 21)), "/dev/cons21", &device::exists_cons},
  {"/dev/cons22", BRACK(FHDEV(DEV_CONS_MAJOR, 22)), "/dev/cons22", &device::exists_cons},
  {"/dev/cons23", BRACK(FHDEV(DEV_CONS_MAJOR, 23)), "/dev/cons23", &device::exists_cons},
  {"/dev/cons24", BRACK(FHDEV(DEV_CONS_MAJOR, 24)), "/dev/cons24", &device::exists_cons},
  {"/dev/cons25", BRACK(FHDEV(DEV_CONS_MAJOR, 25)), "/dev/cons25", &device::exists_cons},
  {"/dev/cons26", BRACK(FHDEV(DEV_CONS_MAJOR, 26)), "/dev/cons26", &device::exists_cons},
  {"/dev/cons27", BRACK(FHDEV(DEV_CONS_MAJOR, 27)), "/dev/cons27", &device::exists_cons},
  {"/dev/cons28", BRACK(FHDEV(DEV_CONS_MAJOR, 28)), "/dev/cons28", &device::exists_cons},
  {"/dev/cons29", BRACK(FHDEV(DEV_CONS_MAJOR, 29)), "/dev/cons29", &device::exists_cons},
  {"/dev/cons30", BRACK(FHDEV(DEV_CONS_MAJOR, 30)), "/dev/cons30", &device::exists_cons},
  {"/dev/cons31", BRACK(FHDEV(DEV_CONS_MAJOR, 31)), "/dev/cons31", &device::exists_cons},
  {"/dev/cons32", BRACK(FHDEV(DEV_CONS_MAJOR, 32)), "/dev/cons32", &device::exists_cons},
  {"/dev/cons33", BRACK(FHDEV(DEV_CONS_MAJOR, 33)), "/dev/cons33", &device::exists_cons},
  {"/dev/cons34", BRACK(FHDEV(DEV_CONS_MAJOR, 34)), "/dev/cons34", &device::exists_cons},
  {"/dev/cons35", BRACK(FHDEV(DEV_CONS_MAJOR, 35)), "/dev/cons35", &device::exists_cons},
  {"/dev/cons36", BRACK(FHDEV(DEV_CONS_MAJOR, 36)), "/dev/cons36", &device::exists_cons},
  {"/dev/cons37", BRACK(FHDEV(DEV_CONS_MAJOR, 37)), "/dev/cons37", &device::exists_cons},
  {"/dev/cons38", BRACK(FHDEV(DEV_CONS_MAJOR, 38)), "/dev/cons38", &device::exists_cons},
  {"/dev/cons39", BRACK(FHDEV(DEV_CONS_MAJOR, 39)), "/dev/cons39", &device::exists_cons},
  {"/dev/cons40", BRACK(FHDEV(DEV_CONS_MAJOR, 40)), "/dev/cons40", &device::exists_cons},
  {"/dev/cons41", BRACK(FHDEV(DEV_CONS_MAJOR, 41)), "/dev/cons41", &device::exists_cons},
  {"/dev/cons42", BRACK(FHDEV(DEV_CONS_MAJOR, 42)), "/dev/cons42", &device::exists_cons},
  {"/dev/cons43", BRACK(FHDEV(DEV_CONS_MAJOR, 43)), "/dev/cons43", &device::exists_cons},
  {"/dev/cons44", BRACK(FHDEV(DEV_CONS_MAJOR, 44)), "/dev/cons44", &device::exists_cons},
  {"/dev/cons45", BRACK(FHDEV(DEV_CONS_MAJOR, 45)), "/dev/cons45", &device::exists_cons},
  {"/dev/cons46", BRACK(FHDEV(DEV_CONS_MAJOR, 46)), "/dev/cons46", &device::exists_cons},
  {"/dev/cons47", BRACK(FHDEV(DEV_CONS_MAJOR, 47)), "/dev/cons47", &device::exists_cons},
  {"/dev/cons48", BRACK(FHDEV(DEV_CONS_MAJOR, 48)), "/dev/cons48", &device::exists_cons},
  {"/dev/cons49", BRACK(FHDEV(DEV_CONS_MAJOR, 49)), "/dev/cons49", &device::exists_cons},
  {"/dev/cons50", BRACK(FHDEV(DEV_CONS_MAJOR, 50)), "/dev/cons50", &device::exists_cons},
  {"/dev/cons51", BRACK(FHDEV(DEV_CONS_MAJOR, 51)), "/dev/cons51", &device::exists_cons},
  {"/dev/cons52", BRACK(FHDEV(DEV_CONS_MAJOR, 52)), "/dev/cons52", &device::exists_cons},
  {"/dev/cons53", BRACK(FHDEV(DEV_CONS_MAJOR, 53)), "/dev/cons53", &device::exists_cons},
  {"/dev/cons54", BRACK(FHDEV(DEV_CONS_MAJOR, 54)), "/dev/cons54", &device::exists_cons},
  {"/dev/cons55", BRACK(FHDEV(DEV_CONS_MAJOR, 55)), "/dev/cons55", &device::exists_cons},
  {"/dev/cons56", BRACK(FHDEV(DEV_CONS_MAJOR, 56)), "/dev/cons56", &device::exists_cons},
  {"/dev/cons57", BRACK(FHDEV(DEV_CONS_MAJOR, 57)), "/dev/cons57", &device::exists_cons},
  {"/dev/cons58", BRACK(FHDEV(DEV_CONS_MAJOR, 58)), "/dev/cons58", &device::exists_cons},
  {"/dev/cons59", BRACK(FHDEV(DEV_CONS_MAJOR, 59)), "/dev/cons59", &device::exists_cons},
  {"/dev/cons60", BRACK(FHDEV(DEV_CONS_MAJOR, 60)), "/dev/cons60", &device::exists_cons},
  {"/dev/cons61", BRACK(FHDEV(DEV_CONS_MAJOR, 61)), "/dev/cons61", &device::exists_cons},
  {"/dev/cons62", BRACK(FHDEV(DEV_CONS_MAJOR, 62)), "/dev/cons62", &device::exists_cons},
  {"/dev/cons63", BRACK(FHDEV(DEV_CONS_MAJOR, 63)), "/dev/cons63", &device::exists_cons},
  {"/dev/console", BRACK(FH_CONSOLE), "/dev/console", &device::exists_console},
  {"/dev/dsp", BRACK(FH_OSS_DSP), "/dev/dsp"},
  {"/dev/fd0", BRACK(FHDEV(DEV_FLOPPY_MAJOR, 0)), "\\Device\\Floppy0", &device::exists_nt_dev},
  {"/dev/fd1", BRACK(FHDEV(DEV_FLOPPY_MAJOR, 1)), "\\Device\\Floppy1", &device::exists_nt_dev},
  {"/dev/fd2", BRACK(FHDEV(DEV_FLOPPY_MAJOR, 2)), "\\Device\\Floppy2", &device::exists_nt_dev},
  {"/dev/fd3", BRACK(FHDEV(DEV_FLOPPY_MAJOR, 3)), "\\Device\\Floppy3", &device::exists_nt_dev},
  {"/dev/fd4", BRACK(FHDEV(DEV_FLOPPY_MAJOR, 4)), "\\Device\\Floppy4", &device::exists_nt_dev},
  {"/dev/fd5", BRACK(FHDEV(DEV_FLOPPY_MAJOR, 5)), "\\Device\\Floppy5", &device::exists_nt_dev},
  {"/dev/fd6", BRACK(FHDEV(DEV_FLOPPY_MAJOR, 6)), "\\Device\\Floppy6", &device::exists_nt_dev},
  {"/dev/fd7", BRACK(FHDEV(DEV_FLOPPY_MAJOR, 7)), "\\Device\\Floppy7", &device::exists_nt_dev},
  {"/dev/fd8", BRACK(FHDEV(DEV_FLOPPY_MAJOR, 8)), "\\Device\\Floppy8", &device::exists_nt_dev},
  {"/dev/fd9", BRACK(FHDEV(DEV_FLOPPY_MAJOR, 9)), "\\Device\\Floppy9", &device::exists_nt_dev},
  {"/dev/fd10", BRACK(FHDEV(DEV_FLOPPY_MAJOR, 10)), "\\Device\\Floppy10", &device::exists_nt_dev},
  {"/dev/fd11", BRACK(FHDEV(DEV_FLOPPY_MAJOR, 11)), "\\Device\\Floppy11", &device::exists_nt_dev},
  {"/dev/fd12", BRACK(FHDEV(DEV_FLOPPY_MAJOR, 12)), "\\Device\\Floppy12", &device::exists_nt_dev},
  {"/dev/fd13", BRACK(FHDEV(DEV_FLOPPY_MAJOR, 13)), "\\Device\\Floppy13", &device::exists_nt_dev},
  {"/dev/fd14", BRACK(FHDEV(DEV_FLOPPY_MAJOR, 14)), "\\Device\\Floppy14", &device::exists_nt_dev},
  {"/dev/fd15", BRACK(FHDEV(DEV_FLOPPY_MAJOR, 15)), "\\Device\\Floppy15", &device::exists_nt_dev},
  {"/dev/fifo", BRACK(FH_FIFO), "/dev/fifo", &device::exists_never},
  {"/dev/full", BRACK(FH_FULL), "/dev/full"},
  {"/dev/kmem", BRACK(FH_KMEM), "/dev/mem"},
  {"/dev/kmsg", BRACK(FH_KMSG), "\\Device\\MailSlot\\cygwin\\dev\\kmsg"},
  {"/dev/mem", BRACK(FH_MEM), "/dev/mem"},
  {"/dev/nst0", BRACK(FHDEV(DEV_TAPE_MAJOR, 128)), "\\Device\\Tape0", &device::exists_nt_dev},
  {"/dev/nst1", BRACK(FHDEV(DEV_TAPE_MAJOR, 129)), "\\Device\\Tape1", &device::exists_nt_dev},
  {"/dev/nst2", BRACK(FHDEV(DEV_TAPE_MAJOR, 130)), "\\Device\\Tape2", &device::exists_nt_dev},
  {"/dev/nst3", BRACK(FHDEV(DEV_TAPE_MAJOR, 131)), "\\Device\\Tape3", &device::exists_nt_dev},
  {"/dev/nst4", BRACK(FHDEV(DEV_TAPE_MAJOR, 132)), "\\Device\\Tape4", &device::exists_nt_dev},
  {"/dev/nst5", BRACK(FHDEV(DEV_TAPE_MAJOR, 133)), "\\Device\\Tape5", &device::exists_nt_dev},
  {"/dev/nst6", BRACK(FHDEV(DEV_TAPE_MAJOR, 134)), "\\Device\\Tape6", &device::exists_nt_dev},
  {"/dev/nst7", BRACK(FHDEV(DEV_TAPE_MAJOR, 135)), "\\Device\\Tape7", &device::exists_nt_dev},
  {"/dev/nst8", BRACK(FHDEV(DEV_TAPE_MAJOR, 136)), "\\Device\\Tape8", &device::exists_nt_dev},
  {"/dev/nst9", BRACK(FHDEV(DEV_TAPE_MAJOR, 137)), "\\Device\\Tape9", &device::exists_nt_dev},
  {"/dev/nst10", BRACK(FHDEV(DEV_TAPE_MAJOR, 138)), "\\Device\\Tape10", &device::exists_nt_dev},
  {"/dev/nst11", BRACK(FHDEV(DEV_TAPE_MAJOR, 139)), "\\Device\\Tape11", &device::exists_nt_dev},
  {"/dev/nst12", BRACK(FHDEV(DEV_TAPE_MAJOR, 140)), "\\Device\\Tape12", &device::exists_nt_dev},
  {"/dev/nst13", BRACK(FHDEV(DEV_TAPE_MAJOR, 141)), "\\Device\\Tape13", &device::exists_nt_dev},
  {"/dev/nst14", BRACK(FHDEV(DEV_TAPE_MAJOR, 142)), "\\Device\\Tape14", &device::exists_nt_dev},
  {"/dev/nst15", BRACK(FHDEV(DEV_TAPE_MAJOR, 143)), "\\Device\\Tape15", &device::exists_nt_dev},
  {"/dev/nst16", BRACK(FHDEV(DEV_TAPE_MAJOR, 144)), "\\Device\\Tape16", &device::exists_nt_dev},
  {"/dev/nst17", BRACK(FHDEV(DEV_TAPE_MAJOR, 145)), "\\Device\\Tape17", &device::exists_nt_dev},
  {"/dev/nst18", BRACK(FHDEV(DEV_TAPE_MAJOR, 146)), "\\Device\\Tape18", &device::exists_nt_dev},
  {"/dev/nst19", BRACK(FHDEV(DEV_TAPE_MAJOR, 147)), "\\Device\\Tape19", &device::exists_nt_dev},
  {"/dev/nst20", BRACK(FHDEV(DEV_TAPE_MAJOR, 148)), "\\Device\\Tape20", &device::exists_nt_dev},
  {"/dev/nst21", BRACK(FHDEV(DEV_TAPE_MAJOR, 149)), "\\Device\\Tape21", &device::exists_nt_dev},
  {"/dev/nst22", BRACK(FHDEV(DEV_TAPE_MAJOR, 150)), "\\Device\\Tape22", &device::exists_nt_dev},
  {"/dev/nst23", BRACK(FHDEV(DEV_TAPE_MAJOR, 151)), "\\Device\\Tape23", &device::exists_nt_dev},
  {"/dev/nst24", BRACK(FHDEV(DEV_TAPE_MAJOR, 152)), "\\Device\\Tape24", &device::exists_nt_dev},
  {"/dev/nst25", BRACK(FHDEV(DEV_TAPE_MAJOR, 153)), "\\Device\\Tape25", &device::exists_nt_dev},
  {"/dev/nst26", BRACK(FHDEV(DEV_TAPE_MAJOR, 154)), "\\Device\\Tape26", &device::exists_nt_dev},
  {"/dev/nst27", BRACK(FHDEV(DEV_TAPE_MAJOR, 155)), "\\Device\\Tape27", &device::exists_nt_dev},
  {"/dev/nst28", BRACK(FHDEV(DEV_TAPE_MAJOR, 156)), "\\Device\\Tape28", &device::exists_nt_dev},
  {"/dev/nst29", BRACK(FHDEV(DEV_TAPE_MAJOR, 157)), "\\Device\\Tape29", &device::exists_nt_dev},
  {"/dev/nst30", BRACK(FHDEV(DEV_TAPE_MAJOR, 158)), "\\Device\\Tape30", &device::exists_nt_dev},
  {"/dev/nst31", BRACK(FHDEV(DEV_TAPE_MAJOR, 159)), "\\Device\\Tape31", &device::exists_nt_dev},
  {"/dev/nst32", BRACK(FHDEV(DEV_TAPE_MAJOR, 160)), "\\Device\\Tape32", &device::exists_nt_dev},
  {"/dev/nst33", BRACK(FHDEV(DEV_TAPE_MAJOR, 161)), "\\Device\\Tape33", &device::exists_nt_dev},
  {"/dev/nst34", BRACK(FHDEV(DEV_TAPE_MAJOR, 162)), "\\Device\\Tape34", &device::exists_nt_dev},
  {"/dev/nst35", BRACK(FHDEV(DEV_TAPE_MAJOR, 163)), "\\Device\\Tape35", &device::exists_nt_dev},
  {"/dev/nst36", BRACK(FHDEV(DEV_TAPE_MAJOR, 164)), "\\Device\\Tape36", &device::exists_nt_dev},
  {"/dev/nst37", BRACK(FHDEV(DEV_TAPE_MAJOR, 165)), "\\Device\\Tape37", &device::exists_nt_dev},
  {"/dev/nst38", BRACK(FHDEV(DEV_TAPE_MAJOR, 166)), "\\Device\\Tape38", &device::exists_nt_dev},
  {"/dev/nst39", BRACK(FHDEV(DEV_TAPE_MAJOR, 167)), "\\Device\\Tape39", &device::exists_nt_dev},
  {"/dev/nst40", BRACK(FHDEV(DEV_TAPE_MAJOR, 168)), "\\Device\\Tape40", &device::exists_nt_dev},
  {"/dev/nst41", BRACK(FHDEV(DEV_TAPE_MAJOR, 169)), "\\Device\\Tape41", &device::exists_nt_dev},
  {"/dev/nst42", BRACK(FHDEV(DEV_TAPE_MAJOR, 170)), "\\Device\\Tape42", &device::exists_nt_dev},
  {"/dev/nst43", BRACK(FHDEV(DEV_TAPE_MAJOR, 171)), "\\Device\\Tape43", &device::exists_nt_dev},
  {"/dev/nst44", BRACK(FHDEV(DEV_TAPE_MAJOR, 172)), "\\Device\\Tape44", &device::exists_nt_dev},
  {"/dev/nst45", BRACK(FHDEV(DEV_TAPE_MAJOR, 173)), "\\Device\\Tape45", &device::exists_nt_dev},
  {"/dev/nst46", BRACK(FHDEV(DEV_TAPE_MAJOR, 174)), "\\Device\\Tape46", &device::exists_nt_dev},
  {"/dev/nst47", BRACK(FHDEV(DEV_TAPE_MAJOR, 175)), "\\Device\\Tape47", &device::exists_nt_dev},
  {"/dev/nst48", BRACK(FHDEV(DEV_TAPE_MAJOR, 176)), "\\Device\\Tape48", &device::exists_nt_dev},
  {"/dev/nst49", BRACK(FHDEV(DEV_TAPE_MAJOR, 177)), "\\Device\\Tape49", &device::exists_nt_dev},
  {"/dev/nst50", BRACK(FHDEV(DEV_TAPE_MAJOR, 178)), "\\Device\\Tape50", &device::exists_nt_dev},
  {"/dev/nst51", BRACK(FHDEV(DEV_TAPE_MAJOR, 179)), "\\Device\\Tape51", &device::exists_nt_dev},
  {"/dev/nst52", BRACK(FHDEV(DEV_TAPE_MAJOR, 180)), "\\Device\\Tape52", &device::exists_nt_dev},
  {"/dev/nst53", BRACK(FHDEV(DEV_TAPE_MAJOR, 181)), "\\Device\\Tape53", &device::exists_nt_dev},
  {"/dev/nst54", BRACK(FHDEV(DEV_TAPE_MAJOR, 182)), "\\Device\\Tape54", &device::exists_nt_dev},
  {"/dev/nst55", BRACK(FHDEV(DEV_TAPE_MAJOR, 183)), "\\Device\\Tape55", &device::exists_nt_dev},
  {"/dev/nst56", BRACK(FHDEV(DEV_TAPE_MAJOR, 184)), "\\Device\\Tape56", &device::exists_nt_dev},
  {"/dev/nst57", BRACK(FHDEV(DEV_TAPE_MAJOR, 185)), "\\Device\\Tape57", &device::exists_nt_dev},
  {"/dev/nst58", BRACK(FHDEV(DEV_TAPE_MAJOR, 186)), "\\Device\\Tape58", &device::exists_nt_dev},
  {"/dev/nst59", BRACK(FHDEV(DEV_TAPE_MAJOR, 187)), "\\Device\\Tape59", &device::exists_nt_dev},
  {"/dev/nst60", BRACK(FHDEV(DEV_TAPE_MAJOR, 188)), "\\Device\\Tape60", &device::exists_nt_dev},
  {"/dev/nst61", BRACK(FHDEV(DEV_TAPE_MAJOR, 189)), "\\Device\\Tape61", &device::exists_nt_dev},
  {"/dev/nst62", BRACK(FHDEV(DEV_TAPE_MAJOR, 190)), "\\Device\\Tape62", &device::exists_nt_dev},
  {"/dev/nst63", BRACK(FHDEV(DEV_TAPE_MAJOR, 191)), "\\Device\\Tape63", &device::exists_nt_dev},
  {"/dev/nst64", BRACK(FHDEV(DEV_TAPE_MAJOR, 192)), "\\Device\\Tape64", &device::exists_nt_dev},
  {"/dev/nst65", BRACK(FHDEV(DEV_TAPE_MAJOR, 193)), "\\Device\\Tape65", &device::exists_nt_dev},
  {"/dev/nst66", BRACK(FHDEV(DEV_TAPE_MAJOR, 194)), "\\Device\\Tape66", &device::exists_nt_dev},
  {"/dev/nst67", BRACK(FHDEV(DEV_TAPE_MAJOR, 195)), "\\Device\\Tape67", &device::exists_nt_dev},
  {"/dev/nst68", BRACK(FHDEV(DEV_TAPE_MAJOR, 196)), "\\Device\\Tape68", &device::exists_nt_dev},
  {"/dev/nst69", BRACK(FHDEV(DEV_TAPE_MAJOR, 197)), "\\Device\\Tape69", &device::exists_nt_dev},
  {"/dev/nst70", BRACK(FHDEV(DEV_TAPE_MAJOR, 198)), "\\Device\\Tape70", &device::exists_nt_dev},
  {"/dev/nst71", BRACK(FHDEV(DEV_TAPE_MAJOR, 199)), "\\Device\\Tape71", &device::exists_nt_dev},
  {"/dev/nst72", BRACK(FHDEV(DEV_TAPE_MAJOR, 200)), "\\Device\\Tape72", &device::exists_nt_dev},
  {"/dev/nst73", BRACK(FHDEV(DEV_TAPE_MAJOR, 201)), "\\Device\\Tape73", &device::exists_nt_dev},
  {"/dev/nst74", BRACK(FHDEV(DEV_TAPE_MAJOR, 202)), "\\Device\\Tape74", &device::exists_nt_dev},
  {"/dev/nst75", BRACK(FHDEV(DEV_TAPE_MAJOR, 203)), "\\Device\\Tape75", &device::exists_nt_dev},
  {"/dev/nst76", BRACK(FHDEV(DEV_TAPE_MAJOR, 204)), "\\Device\\Tape76", &device::exists_nt_dev},
  {"/dev/nst77", BRACK(FHDEV(DEV_TAPE_MAJOR, 205)), "\\Device\\Tape77", &device::exists_nt_dev},
  {"/dev/nst78", BRACK(FHDEV(DEV_TAPE_MAJOR, 206)), "\\Device\\Tape78", &device::exists_nt_dev},
  {"/dev/nst79", BRACK(FHDEV(DEV_TAPE_MAJOR, 207)), "\\Device\\Tape79", &device::exists_nt_dev},
  {"/dev/nst80", BRACK(FHDEV(DEV_TAPE_MAJOR, 208)), "\\Device\\Tape80", &device::exists_nt_dev},
  {"/dev/nst81", BRACK(FHDEV(DEV_TAPE_MAJOR, 209)), "\\Device\\Tape81", &device::exists_nt_dev},
  {"/dev/nst82", BRACK(FHDEV(DEV_TAPE_MAJOR, 210)), "\\Device\\Tape82", &device::exists_nt_dev},
  {"/dev/nst83", BRACK(FHDEV(DEV_TAPE_MAJOR, 211)), "\\Device\\Tape83", &device::exists_nt_dev},
  {"/dev/nst84", BRACK(FHDEV(DEV_TAPE_MAJOR, 212)), "\\Device\\Tape84", &device::exists_nt_dev},
  {"/dev/nst85", BRACK(FHDEV(DEV_TAPE_MAJOR, 213)), "\\Device\\Tape85", &device::exists_nt_dev},
  {"/dev/nst86", BRACK(FHDEV(DEV_TAPE_MAJOR, 214)), "\\Device\\Tape86", &device::exists_nt_dev},
  {"/dev/nst87", BRACK(FHDEV(DEV_TAPE_MAJOR, 215)), "\\Device\\Tape87", &device::exists_nt_dev},
  {"/dev/nst88", BRACK(FHDEV(DEV_TAPE_MAJOR, 216)), "\\Device\\Tape88", &device::exists_nt_dev},
  {"/dev/nst89", BRACK(FHDEV(DEV_TAPE_MAJOR, 217)), "\\Device\\Tape89", &device::exists_nt_dev},
  {"/dev/nst90", BRACK(FHDEV(DEV_TAPE_MAJOR, 218)), "\\Device\\Tape90", &device::exists_nt_dev},
  {"/dev/nst91", BRACK(FHDEV(DEV_TAPE_MAJOR, 219)), "\\Device\\Tape91", &device::exists_nt_dev},
  {"/dev/nst92", BRACK(FHDEV(DEV_TAPE_MAJOR, 220)), "\\Device\\Tape92", &device::exists_nt_dev},
  {"/dev/nst93", BRACK(FHDEV(DEV_TAPE_MAJOR, 221)), "\\Device\\Tape93", &device::exists_nt_dev},
  {"/dev/nst94", BRACK(FHDEV(DEV_TAPE_MAJOR, 222)), "\\Device\\Tape94", &device::exists_nt_dev},
  {"/dev/nst95", BRACK(FHDEV(DEV_TAPE_MAJOR, 223)), "\\Device\\Tape95", &device::exists_nt_dev},
  {"/dev/nst96", BRACK(FHDEV(DEV_TAPE_MAJOR, 224)), "\\Device\\Tape96", &device::exists_nt_dev},
  {"/dev/nst97", BRACK(FHDEV(DEV_TAPE_MAJOR, 225)), "\\Device\\Tape97", &device::exists_nt_dev},
  {"/dev/nst98", BRACK(FHDEV(DEV_TAPE_MAJOR, 226)), "\\Device\\Tape98", &device::exists_nt_dev},
  {"/dev/nst99", BRACK(FHDEV(DEV_TAPE_MAJOR, 227)), "\\Device\\Tape99", &device::exists_nt_dev},
  {"/dev/nst100", BRACK(FHDEV(DEV_TAPE_MAJOR, 228)), "\\Device\\Tape100", &device::exists_nt_dev},
  {"/dev/nst101", BRACK(FHDEV(DEV_TAPE_MAJOR, 229)), "\\Device\\Tape101", &device::exists_nt_dev},
  {"/dev/nst102", BRACK(FHDEV(DEV_TAPE_MAJOR, 230)), "\\Device\\Tape102", &device::exists_nt_dev},
  {"/dev/nst103", BRACK(FHDEV(DEV_TAPE_MAJOR, 231)), "\\Device\\Tape103", &device::exists_nt_dev},
  {"/dev/nst104", BRACK(FHDEV(DEV_TAPE_MAJOR, 232)), "\\Device\\Tape104", &device::exists_nt_dev},
  {"/dev/nst105", BRACK(FHDEV(DEV_TAPE_MAJOR, 233)), "\\Device\\Tape105", &device::exists_nt_dev},
  {"/dev/nst106", BRACK(FHDEV(DEV_TAPE_MAJOR, 234)), "\\Device\\Tape106", &device::exists_nt_dev},
  {"/dev/nst107", BRACK(FHDEV(DEV_TAPE_MAJOR, 235)), "\\Device\\Tape107", &device::exists_nt_dev},
  {"/dev/nst108", BRACK(FHDEV(DEV_TAPE_MAJOR, 236)), "\\Device\\Tape108", &device::exists_nt_dev},
  {"/dev/nst109", BRACK(FHDEV(DEV_TAPE_MAJOR, 237)), "\\Device\\Tape109", &device::exists_nt_dev},
  {"/dev/nst110", BRACK(FHDEV(DEV_TAPE_MAJOR, 238)), "\\Device\\Tape110", &device::exists_nt_dev},
  {"/dev/nst111", BRACK(FHDEV(DEV_TAPE_MAJOR, 239)), "\\Device\\Tape111", &device::exists_nt_dev},
  {"/dev/nst112", BRACK(FHDEV(DEV_TAPE_MAJOR, 240)), "\\Device\\Tape112", &device::exists_nt_dev},
  {"/dev/nst113", BRACK(FHDEV(DEV_TAPE_MAJOR, 241)), "\\Device\\Tape113", &device::exists_nt_dev},
  {"/dev/nst114", BRACK(FHDEV(DEV_TAPE_MAJOR, 242)), "\\Device\\Tape114", &device::exists_nt_dev},
  {"/dev/nst115", BRACK(FHDEV(DEV_TAPE_MAJOR, 243)), "\\Device\\Tape115", &device::exists_nt_dev},
  {"/dev/nst116", BRACK(FHDEV(DEV_TAPE_MAJOR, 244)), "\\Device\\Tape116", &device::exists_nt_dev},
  {"/dev/nst117", BRACK(FHDEV(DEV_TAPE_MAJOR, 245)), "\\Device\\Tape117", &device::exists_nt_dev},
  {"/dev/nst118", BRACK(FHDEV(DEV_TAPE_MAJOR, 246)), "\\Device\\Tape118", &device::exists_nt_dev},
  {"/dev/nst119", BRACK(FHDEV(DEV_TAPE_MAJOR, 247)), "\\Device\\Tape119", &device::exists_nt_dev},
  {"/dev/nst120", BRACK(FHDEV(DEV_TAPE_MAJOR, 248)), "\\Device\\Tape120", &device::exists_nt_dev},
  {"/dev/nst121", BRACK(FHDEV(DEV_TAPE_MAJOR, 249)), "\\Device\\Tape121", &device::exists_nt_dev},
  {"/dev/nst122", BRACK(FHDEV(DEV_TAPE_MAJOR, 250)), "\\Device\\Tape122", &device::exists_nt_dev},
  {"/dev/nst123", BRACK(FHDEV(DEV_TAPE_MAJOR, 251)), "\\Device\\Tape123", &device::exists_nt_dev},
  {"/dev/nst124", BRACK(FHDEV(DEV_TAPE_MAJOR, 252)), "\\Device\\Tape124", &device::exists_nt_dev},
  {"/dev/nst125", BRACK(FHDEV(DEV_TAPE_MAJOR, 253)), "\\Device\\Tape125", &device::exists_nt_dev},
  {"/dev/nst126", BRACK(FHDEV(DEV_TAPE_MAJOR, 254)), "\\Device\\Tape126", &device::exists_nt_dev},
  {"/dev/nst127", BRACK(FHDEV(DEV_TAPE_MAJOR, 255)), "\\Device\\Tape127", &device::exists_nt_dev},
  {"/dev/null", BRACK(FH_NULL), "\\Device\\Null"},
  {"/dev/pipe", BRACK(FH_PIPE), "/dev/pipe", &device::exists_never},
  {"/dev/port", BRACK(FH_PORT), "/dev/port"},
  {"/dev/ptmx", BRACK(FH_PTMX), "/dev/ptmx"},
  {"/dev/pty0", BRACK(FHDEV(DEV_PTYS_MAJOR, 0)), "/dev/pty0", &device::exists_ptys},
  {"/dev/pty1", BRACK(FHDEV(DEV_PTYS_MAJOR, 1)), "/dev/pty1", &device::exists_ptys},
  {"/dev/pty2", BRACK(FHDEV(DEV_PTYS_MAJOR, 2)), "/dev/pty2", &device::exists_ptys},
  {"/dev/pty3", BRACK(FHDEV(DEV_PTYS_MAJOR, 3)), "/dev/pty3", &device::exists_ptys},
  {"/dev/pty4", BRACK(FHDEV(DEV_PTYS_MAJOR, 4)), "/dev/pty4", &device::exists_ptys},
  {"/dev/pty5", BRACK(FHDEV(DEV_PTYS_MAJOR, 5)), "/dev/pty5", &device::exists_ptys},
  {"/dev/pty6", BRACK(FHDEV(DEV_PTYS_MAJOR, 6)), "/dev/pty6", &device::exists_ptys},
  {"/dev/pty7", BRACK(FHDEV(DEV_PTYS_MAJOR, 7)), "/dev/pty7", &device::exists_ptys},
  {"/dev/pty8", BRACK(FHDEV(DEV_PTYS_MAJOR, 8)), "/dev/pty8", &device::exists_ptys},
  {"/dev/pty9", BRACK(FHDEV(DEV_PTYS_MAJOR, 9)), "/dev/pty9", &device::exists_ptys},
  {"/dev/pty10", BRACK(FHDEV(DEV_PTYS_MAJOR, 10)), "/dev/pty10", &device::exists_ptys},
  {"/dev/pty11", BRACK(FHDEV(DEV_PTYS_MAJOR, 11)), "/dev/pty11", &device::exists_ptys},
  {"/dev/pty12", BRACK(FHDEV(DEV_PTYS_MAJOR, 12)), "/dev/pty12", &device::exists_ptys},
  {"/dev/pty13", BRACK(FHDEV(DEV_PTYS_MAJOR, 13)), "/dev/pty13", &device::exists_ptys},
  {"/dev/pty14", BRACK(FHDEV(DEV_PTYS_MAJOR, 14)), "/dev/pty14", &device::exists_ptys},
  {"/dev/pty15", BRACK(FHDEV(DEV_PTYS_MAJOR, 15)), "/dev/pty15", &device::exists_ptys},
  {"/dev/pty16", BRACK(FHDEV(DEV_PTYS_MAJOR, 16)), "/dev/pty16", &device::exists_ptys},
  {"/dev/pty17", BRACK(FHDEV(DEV_PTYS_MAJOR, 17)), "/dev/pty17", &device::exists_ptys},
  {"/dev/pty18", BRACK(FHDEV(DEV_PTYS_MAJOR, 18)), "/dev/pty18", &device::exists_ptys},
  {"/dev/pty19", BRACK(FHDEV(DEV_PTYS_MAJOR, 19)), "/dev/pty19", &device::exists_ptys},
  {"/dev/pty20", BRACK(FHDEV(DEV_PTYS_MAJOR, 20)), "/dev/pty20", &device::exists_ptys},
  {"/dev/pty21", BRACK(FHDEV(DEV_PTYS_MAJOR, 21)), "/dev/pty21", &device::exists_ptys},
  {"/dev/pty22", BRACK(FHDEV(DEV_PTYS_MAJOR, 22)), "/dev/pty22", &device::exists_ptys},
  {"/dev/pty23", BRACK(FHDEV(DEV_PTYS_MAJOR, 23)), "/dev/pty23", &device::exists_ptys},
  {"/dev/pty24", BRACK(FHDEV(DEV_PTYS_MAJOR, 24)), "/dev/pty24", &device::exists_ptys},
  {"/dev/pty25", BRACK(FHDEV(DEV_PTYS_MAJOR, 25)), "/dev/pty25", &device::exists_ptys},
  {"/dev/pty26", BRACK(FHDEV(DEV_PTYS_MAJOR, 26)), "/dev/pty26", &device::exists_ptys},
  {"/dev/pty27", BRACK(FHDEV(DEV_PTYS_MAJOR, 27)), "/dev/pty27", &device::exists_ptys},
  {"/dev/pty28", BRACK(FHDEV(DEV_PTYS_MAJOR, 28)), "/dev/pty28", &device::exists_ptys},
  {"/dev/pty29", BRACK(FHDEV(DEV_PTYS_MAJOR, 29)), "/dev/pty29", &device::exists_ptys},
  {"/dev/pty30", BRACK(FHDEV(DEV_PTYS_MAJOR, 30)), "/dev/pty30", &device::exists_ptys},
  {"/dev/pty31", BRACK(FHDEV(DEV_PTYS_MAJOR, 31)), "/dev/pty31", &device::exists_ptys},
  {"/dev/pty32", BRACK(FHDEV(DEV_PTYS_MAJOR, 32)), "/dev/pty32", &device::exists_ptys},
  {"/dev/pty33", BRACK(FHDEV(DEV_PTYS_MAJOR, 33)), "/dev/pty33", &device::exists_ptys},
  {"/dev/pty34", BRACK(FHDEV(DEV_PTYS_MAJOR, 34)), "/dev/pty34", &device::exists_ptys},
  {"/dev/pty35", BRACK(FHDEV(DEV_PTYS_MAJOR, 35)), "/dev/pty35", &device::exists_ptys},
  {"/dev/pty36", BRACK(FHDEV(DEV_PTYS_MAJOR, 36)), "/dev/pty36", &device::exists_ptys},
  {"/dev/pty37", BRACK(FHDEV(DEV_PTYS_MAJOR, 37)), "/dev/pty37", &device::exists_ptys},
  {"/dev/pty38", BRACK(FHDEV(DEV_PTYS_MAJOR, 38)), "/dev/pty38", &device::exists_ptys},
  {"/dev/pty39", BRACK(FHDEV(DEV_PTYS_MAJOR, 39)), "/dev/pty39", &device::exists_ptys},
  {"/dev/pty40", BRACK(FHDEV(DEV_PTYS_MAJOR, 40)), "/dev/pty40", &device::exists_ptys},
  {"/dev/pty41", BRACK(FHDEV(DEV_PTYS_MAJOR, 41)), "/dev/pty41", &device::exists_ptys},
  {"/dev/pty42", BRACK(FHDEV(DEV_PTYS_MAJOR, 42)), "/dev/pty42", &device::exists_ptys},
  {"/dev/pty43", BRACK(FHDEV(DEV_PTYS_MAJOR, 43)), "/dev/pty43", &device::exists_ptys},
  {"/dev/pty44", BRACK(FHDEV(DEV_PTYS_MAJOR, 44)), "/dev/pty44", &device::exists_ptys},
  {"/dev/pty45", BRACK(FHDEV(DEV_PTYS_MAJOR, 45)), "/dev/pty45", &device::exists_ptys},
  {"/dev/pty46", BRACK(FHDEV(DEV_PTYS_MAJOR, 46)), "/dev/pty46", &device::exists_ptys},
  {"/dev/pty47", BRACK(FHDEV(DEV_PTYS_MAJOR, 47)), "/dev/pty47", &device::exists_ptys},
  {"/dev/pty48", BRACK(FHDEV(DEV_PTYS_MAJOR, 48)), "/dev/pty48", &device::exists_ptys},
  {"/dev/pty49", BRACK(FHDEV(DEV_PTYS_MAJOR, 49)), "/dev/pty49", &device::exists_ptys},
  {"/dev/pty50", BRACK(FHDEV(DEV_PTYS_MAJOR, 50)), "/dev/pty50", &device::exists_ptys},
  {"/dev/pty51", BRACK(FHDEV(DEV_PTYS_MAJOR, 51)), "/dev/pty51", &device::exists_ptys},
  {"/dev/pty52", BRACK(FHDEV(DEV_PTYS_MAJOR, 52)), "/dev/pty52", &device::exists_ptys},
  {"/dev/pty53", BRACK(FHDEV(DEV_PTYS_MAJOR, 53)), "/dev/pty53", &device::exists_ptys},
  {"/dev/pty54", BRACK(FHDEV(DEV_PTYS_MAJOR, 54)), "/dev/pty54", &device::exists_ptys},
  {"/dev/pty55", BRACK(FHDEV(DEV_PTYS_MAJOR, 55)), "/dev/pty55", &device::exists_ptys},
  {"/dev/pty56", BRACK(FHDEV(DEV_PTYS_MAJOR, 56)), "/dev/pty56", &device::exists_ptys},
  {"/dev/pty57", BRACK(FHDEV(DEV_PTYS_MAJOR, 57)), "/dev/pty57", &device::exists_ptys},
  {"/dev/pty58", BRACK(FHDEV(DEV_PTYS_MAJOR, 58)), "/dev/pty58", &device::exists_ptys},
  {"/dev/pty59", BRACK(FHDEV(DEV_PTYS_MAJOR, 59)), "/dev/pty59", &device::exists_ptys},
  {"/dev/pty60", BRACK(FHDEV(DEV_PTYS_MAJOR, 60)), "/dev/pty60", &device::exists_ptys},
  {"/dev/pty61", BRACK(FHDEV(DEV_PTYS_MAJOR, 61)), "/dev/pty61", &device::exists_ptys},
  {"/dev/pty62", BRACK(FHDEV(DEV_PTYS_MAJOR, 62)), "/dev/pty62", &device::exists_ptys},
  {"/dev/pty63", BRACK(FHDEV(DEV_PTYS_MAJOR, 63)), "/dev/pty63", &device::exists_ptys},
  {"/dev/ptym0", BRACK(FHDEV(DEV_PTYM_MAJOR, 0)), "/dev/ptym0", &device::exists_never},
  {"/dev/ptym1", BRACK(FHDEV(DEV_PTYM_MAJOR, 1)), "/dev/ptym1", &device::exists_never},
  {"/dev/ptym2", BRACK(FHDEV(DEV_PTYM_MAJOR, 2)), "/dev/ptym2", &device::exists_never},
  {"/dev/ptym3", BRACK(FHDEV(DEV_PTYM_MAJOR, 3)), "/dev/ptym3", &device::exists_never},
  {"/dev/ptym4", BRACK(FHDEV(DEV_PTYM_MAJOR, 4)), "/dev/ptym4", &device::exists_never},
  {"/dev/ptym5", BRACK(FHDEV(DEV_PTYM_MAJOR, 5)), "/dev/ptym5", &device::exists_never},
  {"/dev/ptym6", BRACK(FHDEV(DEV_PTYM_MAJOR, 6)), "/dev/ptym6", &device::exists_never},
  {"/dev/ptym7", BRACK(FHDEV(DEV_PTYM_MAJOR, 7)), "/dev/ptym7", &device::exists_never},
  {"/dev/ptym8", BRACK(FHDEV(DEV_PTYM_MAJOR, 8)), "/dev/ptym8", &device::exists_never},
  {"/dev/ptym9", BRACK(FHDEV(DEV_PTYM_MAJOR, 9)), "/dev/ptym9", &device::exists_never},
  {"/dev/ptym10", BRACK(FHDEV(DEV_PTYM_MAJOR, 10)), "/dev/ptym10", &device::exists_never},
  {"/dev/ptym11", BRACK(FHDEV(DEV_PTYM_MAJOR, 11)), "/dev/ptym11", &device::exists_never},
  {"/dev/ptym12", BRACK(FHDEV(DEV_PTYM_MAJOR, 12)), "/dev/ptym12", &device::exists_never},
  {"/dev/ptym13", BRACK(FHDEV(DEV_PTYM_MAJOR, 13)), "/dev/ptym13", &device::exists_never},
  {"/dev/ptym14", BRACK(FHDEV(DEV_PTYM_MAJOR, 14)), "/dev/ptym14", &device::exists_never},
  {"/dev/ptym15", BRACK(FHDEV(DEV_PTYM_MAJOR, 15)), "/dev/ptym15", &device::exists_never},
  {"/dev/ptym16", BRACK(FHDEV(DEV_PTYM_MAJOR, 16)), "/dev/ptym16", &device::exists_never},
  {"/dev/ptym17", BRACK(FHDEV(DEV_PTYM_MAJOR, 17)), "/dev/ptym17", &device::exists_never},
  {"/dev/ptym18", BRACK(FHDEV(DEV_PTYM_MAJOR, 18)), "/dev/ptym18", &device::exists_never},
  {"/dev/ptym19", BRACK(FHDEV(DEV_PTYM_MAJOR, 19)), "/dev/ptym19", &device::exists_never},
  {"/dev/ptym20", BRACK(FHDEV(DEV_PTYM_MAJOR, 20)), "/dev/ptym20", &device::exists_never},
  {"/dev/ptym21", BRACK(FHDEV(DEV_PTYM_MAJOR, 21)), "/dev/ptym21", &device::exists_never},
  {"/dev/ptym22", BRACK(FHDEV(DEV_PTYM_MAJOR, 22)), "/dev/ptym22", &device::exists_never},
  {"/dev/ptym23", BRACK(FHDEV(DEV_PTYM_MAJOR, 23)), "/dev/ptym23", &device::exists_never},
  {"/dev/ptym24", BRACK(FHDEV(DEV_PTYM_MAJOR, 24)), "/dev/ptym24", &device::exists_never},
  {"/dev/ptym25", BRACK(FHDEV(DEV_PTYM_MAJOR, 25)), "/dev/ptym25", &device::exists_never},
  {"/dev/ptym26", BRACK(FHDEV(DEV_PTYM_MAJOR, 26)), "/dev/ptym26", &device::exists_never},
  {"/dev/ptym27", BRACK(FHDEV(DEV_PTYM_MAJOR, 27)), "/dev/ptym27", &device::exists_never},
  {"/dev/ptym28", BRACK(FHDEV(DEV_PTYM_MAJOR, 28)), "/dev/ptym28", &device::exists_never},
  {"/dev/ptym29", BRACK(FHDEV(DEV_PTYM_MAJOR, 29)), "/dev/ptym29", &device::exists_never},
  {"/dev/ptym30", BRACK(FHDEV(DEV_PTYM_MAJOR, 30)), "/dev/ptym30", &device::exists_never},
  {"/dev/ptym31", BRACK(FHDEV(DEV_PTYM_MAJOR, 31)), "/dev/ptym31", &device::exists_never},
  {"/dev/ptym32", BRACK(FHDEV(DEV_PTYM_MAJOR, 32)), "/dev/ptym32", &device::exists_never},
  {"/dev/ptym33", BRACK(FHDEV(DEV_PTYM_MAJOR, 33)), "/dev/ptym33", &device::exists_never},
  {"/dev/ptym34", BRACK(FHDEV(DEV_PTYM_MAJOR, 34)), "/dev/ptym34", &device::exists_never},
  {"/dev/ptym35", BRACK(FHDEV(DEV_PTYM_MAJOR, 35)), "/dev/ptym35", &device::exists_never},
  {"/dev/ptym36", BRACK(FHDEV(DEV_PTYM_MAJOR, 36)), "/dev/ptym36", &device::exists_never},
  {"/dev/ptym37", BRACK(FHDEV(DEV_PTYM_MAJOR, 37)), "/dev/ptym37", &device::exists_never},
  {"/dev/ptym38", BRACK(FHDEV(DEV_PTYM_MAJOR, 38)), "/dev/ptym38", &device::exists_never},
  {"/dev/ptym39", BRACK(FHDEV(DEV_PTYM_MAJOR, 39)), "/dev/ptym39", &device::exists_never},
  {"/dev/ptym40", BRACK(FHDEV(DEV_PTYM_MAJOR, 40)), "/dev/ptym40", &device::exists_never},
  {"/dev/ptym41", BRACK(FHDEV(DEV_PTYM_MAJOR, 41)), "/dev/ptym41", &device::exists_never},
  {"/dev/ptym42", BRACK(FHDEV(DEV_PTYM_MAJOR, 42)), "/dev/ptym42", &device::exists_never},
  {"/dev/ptym43", BRACK(FHDEV(DEV_PTYM_MAJOR, 43)), "/dev/ptym43", &device::exists_never},
  {"/dev/ptym44", BRACK(FHDEV(DEV_PTYM_MAJOR, 44)), "/dev/ptym44", &device::exists_never},
  {"/dev/ptym45", BRACK(FHDEV(DEV_PTYM_MAJOR, 45)), "/dev/ptym45", &device::exists_never},
  {"/dev/ptym46", BRACK(FHDEV(DEV_PTYM_MAJOR, 46)), "/dev/ptym46", &device::exists_never},
  {"/dev/ptym47", BRACK(FHDEV(DEV_PTYM_MAJOR, 47)), "/dev/ptym47", &device::exists_never},
  {"/dev/ptym48", BRACK(FHDEV(DEV_PTYM_MAJOR, 48)), "/dev/ptym48", &device::exists_never},
  {"/dev/ptym49", BRACK(FHDEV(DEV_PTYM_MAJOR, 49)), "/dev/ptym49", &device::exists_never},
  {"/dev/ptym50", BRACK(FHDEV(DEV_PTYM_MAJOR, 50)), "/dev/ptym50", &device::exists_never},
  {"/dev/ptym51", BRACK(FHDEV(DEV_PTYM_MAJOR, 51)), "/dev/ptym51", &device::exists_never},
  {"/dev/ptym52", BRACK(FHDEV(DEV_PTYM_MAJOR, 52)), "/dev/ptym52", &device::exists_never},
  {"/dev/ptym53", BRACK(FHDEV(DEV_PTYM_MAJOR, 53)), "/dev/ptym53", &device::exists_never},
  {"/dev/ptym54", BRACK(FHDEV(DEV_PTYM_MAJOR, 54)), "/dev/ptym54", &device::exists_never},
  {"/dev/ptym55", BRACK(FHDEV(DEV_PTYM_MAJOR, 55)), "/dev/ptym55", &device::exists_never},
  {"/dev/ptym56", BRACK(FHDEV(DEV_PTYM_MAJOR, 56)), "/dev/ptym56", &device::exists_never},
  {"/dev/ptym57", BRACK(FHDEV(DEV_PTYM_MAJOR, 57)), "/dev/ptym57", &device::exists_never},
  {"/dev/ptym58", BRACK(FHDEV(DEV_PTYM_MAJOR, 58)), "/dev/ptym58", &device::exists_never},
  {"/dev/ptym59", BRACK(FHDEV(DEV_PTYM_MAJOR, 59)), "/dev/ptym59", &device::exists_never},
  {"/dev/ptym60", BRACK(FHDEV(DEV_PTYM_MAJOR, 60)), "/dev/ptym60", &device::exists_never},
  {"/dev/ptym61", BRACK(FHDEV(DEV_PTYM_MAJOR, 61)), "/dev/ptym61", &device::exists_never},
  {"/dev/ptym62", BRACK(FHDEV(DEV_PTYM_MAJOR, 62)), "/dev/ptym62", &device::exists_never},
  {"/dev/ptym63", BRACK(FHDEV(DEV_PTYM_MAJOR, 63)), "/dev/ptym63", &device::exists_never},
  {"/dev/random", BRACK(FH_RANDOM), "/dev/random"},
  {"/dev/scd0", BRACK(FHDEV(DEV_CDROM_MAJOR, 0)), "\\Device\\CdRom0", &device::exists_nt_dev},
  {"/dev/scd1", BRACK(FHDEV(DEV_CDROM_MAJOR, 1)), "\\Device\\CdRom1", &device::exists_nt_dev},
  {"/dev/scd2", BRACK(FHDEV(DEV_CDROM_MAJOR, 2)), "\\Device\\CdRom2", &device::exists_nt_dev},
  {"/dev/scd3", BRACK(FHDEV(DEV_CDROM_MAJOR, 3)), "\\Device\\CdRom3", &device::exists_nt_dev},
  {"/dev/scd4", BRACK(FHDEV(DEV_CDROM_MAJOR, 4)), "\\Device\\CdRom4", &device::exists_nt_dev},
  {"/dev/scd5", BRACK(FHDEV(DEV_CDROM_MAJOR, 5)), "\\Device\\CdRom5", &device::exists_nt_dev},
  {"/dev/scd6", BRACK(FHDEV(DEV_CDROM_MAJOR, 6)), "\\Device\\CdRom6", &device::exists_nt_dev},
  {"/dev/scd7", BRACK(FHDEV(DEV_CDROM_MAJOR, 7)), "\\Device\\CdRom7", &device::exists_nt_dev},
  {"/dev/scd8", BRACK(FHDEV(DEV_CDROM_MAJOR, 8)), "\\Device\\CdRom8", &device::exists_nt_dev},
  {"/dev/scd9", BRACK(FHDEV(DEV_CDROM_MAJOR, 9)), "\\Device\\CdRom9", &device::exists_nt_dev},
  {"/dev/scd10", BRACK(FHDEV(DEV_CDROM_MAJOR, 10)), "\\Device\\CdRom10", &device::exists_nt_dev},
  {"/dev/scd11", BRACK(FHDEV(DEV_CDROM_MAJOR, 11)), "\\Device\\CdRom11", &device::exists_nt_dev},
  {"/dev/scd12", BRACK(FHDEV(DEV_CDROM_MAJOR, 12)), "\\Device\\CdRom12", &device::exists_nt_dev},
  {"/dev/scd13", BRACK(FHDEV(DEV_CDROM_MAJOR, 13)), "\\Device\\CdRom13", &device::exists_nt_dev},
  {"/dev/scd14", BRACK(FHDEV(DEV_CDROM_MAJOR, 14)), "\\Device\\CdRom14", &device::exists_nt_dev},
  {"/dev/scd15", BRACK(FHDEV(DEV_CDROM_MAJOR, 15)), "\\Device\\CdRom15", &device::exists_nt_dev},
  {"/dev/sda", BRACK(FH_SDA), "\\Device\\Harddisk0\\Partition0", &device::exists_nt_dev},
  {"/dev/sdb", BRACK(FH_SDB), "\\Device\\Harddisk1\\Partition0", &device::exists_nt_dev},
  {"/dev/sdc", BRACK(FH_SDC), "\\Device\\Harddisk2\\Partition0", &device::exists_nt_dev},
  {"/dev/sdd", BRACK(FH_SDD), "\\Device\\Harddisk3\\Partition0", &device::exists_nt_dev},
  {"/dev/sde", BRACK(FH_SDE), "\\Device\\Harddisk4\\Partition0", &device::exists_nt_dev},
  {"/dev/sdf", BRACK(FH_SDF), "\\Device\\Harddisk5\\Partition0", &device::exists_nt_dev},
  {"/dev/sdg", BRACK(FH_SDG), "\\Device\\Harddisk6\\Partition0", &device::exists_nt_dev},
  {"/dev/sdh", BRACK(FH_SDH), "\\Device\\Harddisk7\\Partition0", &device::exists_nt_dev},
  {"/dev/sdi", BRACK(FH_SDI), "\\Device\\Harddisk8\\Partition0", &device::exists_nt_dev},
  {"/dev/sdj", BRACK(FH_SDJ), "\\Device\\Harddisk9\\Partition0", &device::exists_nt_dev},
  {"/dev/sdk", BRACK(FH_SDK), "\\Device\\Harddisk10\\Partition0", &device::exists_nt_dev},
  {"/dev/sdl", BRACK(FH_SDL), "\\Device\\Harddisk11\\Partition0", &device::exists_nt_dev},
  {"/dev/sdm", BRACK(FH_SDM), "\\Device\\Harddisk12\\Partition0", &device::exists_nt_dev},
  {"/dev/sdn", BRACK(FH_SDN), "\\Device\\Harddisk13\\Partition0", &device::exists_nt_dev},
  {"/dev/sdo", BRACK(FH_SDO), "\\Device\\Harddisk14\\Partition0", &device::exists_nt_dev},
  {"/dev/sdp", BRACK(FH_SDP), "\\Device\\Harddisk15\\Partition0", &device::exists_nt_dev},
  {"/dev/sdq", BRACK(FH_SDQ), "\\Device\\Harddisk16\\Partition0", &device::exists_nt_dev},
  {"/dev/sdr", BRACK(FH_SDR), "\\Device\\Harddisk17\\Partition0", &device::exists_nt_dev},
  {"/dev/sds", BRACK(FH_SDS), "\\Device\\Harddisk18\\Partition0", &device::exists_nt_dev},
  {"/dev/sdt", BRACK(FH_SDT), "\\Device\\Harddisk19\\Partition0", &device::exists_nt_dev},
  {"/dev/sdu", BRACK(FH_SDU), "\\Device\\Harddisk20\\Partition0", &device::exists_nt_dev},
  {"/dev/sdv", BRACK(FH_SDV), "\\Device\\Harddisk21\\Partition0", &device::exists_nt_dev},
  {"/dev/sdw", BRACK(FH_SDW), "\\Device\\Harddisk22\\Partition0", &device::exists_nt_dev},
  {"/dev/sdx", BRACK(FH_SDX), "\\Device\\Harddisk23\\Partition0", &device::exists_nt_dev},
  {"/dev/sdy", BRACK(FH_SDY), "\\Device\\Harddisk24\\Partition0", &device::exists_nt_dev},
  {"/dev/sdz", BRACK(FH_SDZ), "\\Device\\Harddisk25\\Partition0", &device::exists_nt_dev},
  {"/dev/sda1", BRACK(FH_SDA | 1), "\\Device\\Harddisk0\\Partition1", &device::exists_nt_dev},
  {"/dev/sda2", BRACK(FH_SDA | 2), "\\Device\\Harddisk0\\Partition2", &device::exists_nt_dev},
  {"/dev/sda3", BRACK(FH_SDA | 3), "\\Device\\Harddisk0\\Partition3", &device::exists_nt_dev},
  {"/dev/sda4", BRACK(FH_SDA | 4), "\\Device\\Harddisk0\\Partition4", &device::exists_nt_dev},
  {"/dev/sda5", BRACK(FH_SDA | 5), "\\Device\\Harddisk0\\Partition5", &device::exists_nt_dev},
  {"/dev/sda6", BRACK(FH_SDA | 6), "\\Device\\Harddisk0\\Partition6", &device::exists_nt_dev},
  {"/dev/sda7", BRACK(FH_SDA | 7), "\\Device\\Harddisk0\\Partition7", &device::exists_nt_dev},
  {"/dev/sda8", BRACK(FH_SDA | 8), "\\Device\\Harddisk0\\Partition8", &device::exists_nt_dev},
  {"/dev/sda9", BRACK(FH_SDA | 9), "\\Device\\Harddisk0\\Partition9", &device::exists_nt_dev},
  {"/dev/sda10", BRACK(FH_SDA | 10), "\\Device\\Harddisk0\\Partition10", &device::exists_nt_dev},
  {"/dev/sda11", BRACK(FH_SDA | 11), "\\Device\\Harddisk0\\Partition11", &device::exists_nt_dev},
  {"/dev/sda12", BRACK(FH_SDA | 12), "\\Device\\Harddisk0\\Partition12", &device::exists_nt_dev},
  {"/dev/sda13", BRACK(FH_SDA | 13), "\\Device\\Harddisk0\\Partition13", &device::exists_nt_dev},
  {"/dev/sda14", BRACK(FH_SDA | 14), "\\Device\\Harddisk0\\Partition14", &device::exists_nt_dev},
  {"/dev/sda15", BRACK(FH_SDA | 15), "\\Device\\Harddisk0\\Partition15", &device::exists_nt_dev},
  {"/dev/sdb1", BRACK(FH_SDB | 1), "\\Device\\Harddisk1\\Partition1", &device::exists_nt_dev},
  {"/dev/sdb2", BRACK(FH_SDB | 2), "\\Device\\Harddisk1\\Partition2", &device::exists_nt_dev},
  {"/dev/sdb3", BRACK(FH_SDB | 3), "\\Device\\Harddisk1\\Partition3", &device::exists_nt_dev},
  {"/dev/sdb4", BRACK(FH_SDB | 4), "\\Device\\Harddisk1\\Partition4", &device::exists_nt_dev},
  {"/dev/sdb5", BRACK(FH_SDB | 5), "\\Device\\Harddisk1\\Partition5", &device::exists_nt_dev},
  {"/dev/sdb6", BRACK(FH_SDB | 6), "\\Device\\Harddisk1\\Partition6", &device::exists_nt_dev},
  {"/dev/sdb7", BRACK(FH_SDB | 7), "\\Device\\Harddisk1\\Partition7", &device::exists_nt_dev},
  {"/dev/sdb8", BRACK(FH_SDB | 8), "\\Device\\Harddisk1\\Partition8", &device::exists_nt_dev},
  {"/dev/sdb9", BRACK(FH_SDB | 9), "\\Device\\Harddisk1\\Partition9", &device::exists_nt_dev},
  {"/dev/sdb10", BRACK(FH_SDB | 10), "\\Device\\Harddisk1\\Partition10", &device::exists_nt_dev},
  {"/dev/sdb11", BRACK(FH_SDB | 11), "\\Device\\Harddisk1\\Partition11", &device::exists_nt_dev},
  {"/dev/sdb12", BRACK(FH_SDB | 12), "\\Device\\Harddisk1\\Partition12", &device::exists_nt_dev},
  {"/dev/sdb13", BRACK(FH_SDB | 13), "\\Device\\Harddisk1\\Partition13", &device::exists_nt_dev},
  {"/dev/sdb14", BRACK(FH_SDB | 14), "\\Device\\Harddisk1\\Partition14", &device::exists_nt_dev},
  {"/dev/sdb15", BRACK(FH_SDB | 15), "\\Device\\Harddisk1\\Partition15", &device::exists_nt_dev},
  {"/dev/sdc1", BRACK(FH_SDC | 1), "\\Device\\Harddisk2\\Partition1", &device::exists_nt_dev},
  {"/dev/sdc2", BRACK(FH_SDC | 2), "\\Device\\Harddisk2\\Partition2", &device::exists_nt_dev},
  {"/dev/sdc3", BRACK(FH_SDC | 3), "\\Device\\Harddisk2\\Partition3", &device::exists_nt_dev},
  {"/dev/sdc4", BRACK(FH_SDC | 4), "\\Device\\Harddisk2\\Partition4", &device::exists_nt_dev},
  {"/dev/sdc5", BRACK(FH_SDC | 5), "\\Device\\Harddisk2\\Partition5", &device::exists_nt_dev},
  {"/dev/sdc6", BRACK(FH_SDC | 6), "\\Device\\Harddisk2\\Partition6", &device::exists_nt_dev},
  {"/dev/sdc7", BRACK(FH_SDC | 7), "\\Device\\Harddisk2\\Partition7", &device::exists_nt_dev},
  {"/dev/sdc8", BRACK(FH_SDC | 8), "\\Device\\Harddisk2\\Partition8", &device::exists_nt_dev},
  {"/dev/sdc9", BRACK(FH_SDC | 9), "\\Device\\Harddisk2\\Partition9", &device::exists_nt_dev},
  {"/dev/sdc10", BRACK(FH_SDC | 10), "\\Device\\Harddisk2\\Partition10", &device::exists_nt_dev},
  {"/dev/sdc11", BRACK(FH_SDC | 11), "\\Device\\Harddisk2\\Partition11", &device::exists_nt_dev},
  {"/dev/sdc12", BRACK(FH_SDC | 12), "\\Device\\Harddisk2\\Partition12", &device::exists_nt_dev},
  {"/dev/sdc13", BRACK(FH_SDC | 13), "\\Device\\Harddisk2\\Partition13", &device::exists_nt_dev},
  {"/dev/sdc14", BRACK(FH_SDC | 14), "\\Device\\Harddisk2\\Partition14", &device::exists_nt_dev},
  {"/dev/sdc15", BRACK(FH_SDC | 15), "\\Device\\Harddisk2\\Partition15", &device::exists_nt_dev},
  {"/dev/sdd1", BRACK(FH_SDD | 1), "\\Device\\Harddisk3\\Partition1", &device::exists_nt_dev},
  {"/dev/sdd2", BRACK(FH_SDD | 2), "\\Device\\Harddisk3\\Partition2", &device::exists_nt_dev},
  {"/dev/sdd3", BRACK(FH_SDD | 3), "\\Device\\Harddisk3\\Partition3", &device::exists_nt_dev},
  {"/dev/sdd4", BRACK(FH_SDD | 4), "\\Device\\Harddisk3\\Partition4", &device::exists_nt_dev},
  {"/dev/sdd5", BRACK(FH_SDD | 5), "\\Device\\Harddisk3\\Partition5", &device::exists_nt_dev},
  {"/dev/sdd6", BRACK(FH_SDD | 6), "\\Device\\Harddisk3\\Partition6", &device::exists_nt_dev},
  {"/dev/sdd7", BRACK(FH_SDD | 7), "\\Device\\Harddisk3\\Partition7", &device::exists_nt_dev},
  {"/dev/sdd8", BRACK(FH_SDD | 8), "\\Device\\Harddisk3\\Partition8", &device::exists_nt_dev},
  {"/dev/sdd9", BRACK(FH_SDD | 9), "\\Device\\Harddisk3\\Partition9", &device::exists_nt_dev},
  {"/dev/sdd10", BRACK(FH_SDD | 10), "\\Device\\Harddisk3\\Partition10", &device::exists_nt_dev},
  {"/dev/sdd11", BRACK(FH_SDD | 11), "\\Device\\Harddisk3\\Partition11", &device::exists_nt_dev},
  {"/dev/sdd12", BRACK(FH_SDD | 12), "\\Device\\Harddisk3\\Partition12", &device::exists_nt_dev},
  {"/dev/sdd13", BRACK(FH_SDD | 13), "\\Device\\Harddisk3\\Partition13", &device::exists_nt_dev},
  {"/dev/sdd14", BRACK(FH_SDD | 14), "\\Device\\Harddisk3\\Partition14", &device::exists_nt_dev},
  {"/dev/sdd15", BRACK(FH_SDD | 15), "\\Device\\Harddisk3\\Partition15", &device::exists_nt_dev},
  {"/dev/sde1", BRACK(FH_SDE | 1), "\\Device\\Harddisk4\\Partition1", &device::exists_nt_dev},
  {"/dev/sde2", BRACK(FH_SDE | 2), "\\Device\\Harddisk4\\Partition2", &device::exists_nt_dev},
  {"/dev/sde3", BRACK(FH_SDE | 3), "\\Device\\Harddisk4\\Partition3", &device::exists_nt_dev},
  {"/dev/sde4", BRACK(FH_SDE | 4), "\\Device\\Harddisk4\\Partition4", &device::exists_nt_dev},
  {"/dev/sde5", BRACK(FH_SDE | 5), "\\Device\\Harddisk4\\Partition5", &device::exists_nt_dev},
  {"/dev/sde6", BRACK(FH_SDE | 6), "\\Device\\Harddisk4\\Partition6", &device::exists_nt_dev},
  {"/dev/sde7", BRACK(FH_SDE | 7), "\\Device\\Harddisk4\\Partition7", &device::exists_nt_dev},
  {"/dev/sde8", BRACK(FH_SDE | 8), "\\Device\\Harddisk4\\Partition8", &device::exists_nt_dev},
  {"/dev/sde9", BRACK(FH_SDE | 9), "\\Device\\Harddisk4\\Partition9", &device::exists_nt_dev},
  {"/dev/sde10", BRACK(FH_SDE | 10), "\\Device\\Harddisk4\\Partition10", &device::exists_nt_dev},
  {"/dev/sde11", BRACK(FH_SDE | 11), "\\Device\\Harddisk4\\Partition11", &device::exists_nt_dev},
  {"/dev/sde12", BRACK(FH_SDE | 12), "\\Device\\Harddisk4\\Partition12", &device::exists_nt_dev},
  {"/dev/sde13", BRACK(FH_SDE | 13), "\\Device\\Harddisk4\\Partition13", &device::exists_nt_dev},
  {"/dev/sde14", BRACK(FH_SDE | 14), "\\Device\\Harddisk4\\Partition14", &device::exists_nt_dev},
  {"/dev/sde15", BRACK(FH_SDE | 15), "\\Device\\Harddisk4\\Partition15", &device::exists_nt_dev},
  {"/dev/sdf1", BRACK(FH_SDF | 1), "\\Device\\Harddisk5\\Partition1", &device::exists_nt_dev},
  {"/dev/sdf2", BRACK(FH_SDF | 2), "\\Device\\Harddisk5\\Partition2", &device::exists_nt_dev},
  {"/dev/sdf3", BRACK(FH_SDF | 3), "\\Device\\Harddisk5\\Partition3", &device::exists_nt_dev},
  {"/dev/sdf4", BRACK(FH_SDF | 4), "\\Device\\Harddisk5\\Partition4", &device::exists_nt_dev},
  {"/dev/sdf5", BRACK(FH_SDF | 5), "\\Device\\Harddisk5\\Partition5", &device::exists_nt_dev},
  {"/dev/sdf6", BRACK(FH_SDF | 6), "\\Device\\Harddisk5\\Partition6", &device::exists_nt_dev},
  {"/dev/sdf7", BRACK(FH_SDF | 7), "\\Device\\Harddisk5\\Partition7", &device::exists_nt_dev},
  {"/dev/sdf8", BRACK(FH_SDF | 8), "\\Device\\Harddisk5\\Partition8", &device::exists_nt_dev},
  {"/dev/sdf9", BRACK(FH_SDF | 9), "\\Device\\Harddisk5\\Partition9", &device::exists_nt_dev},
  {"/dev/sdf10", BRACK(FH_SDF | 10), "\\Device\\Harddisk5\\Partition10", &device::exists_nt_dev},
  {"/dev/sdf11", BRACK(FH_SDF | 11), "\\Device\\Harddisk5\\Partition11", &device::exists_nt_dev},
  {"/dev/sdf12", BRACK(FH_SDF | 12), "\\Device\\Harddisk5\\Partition12", &device::exists_nt_dev},
  {"/dev/sdf13", BRACK(FH_SDF | 13), "\\Device\\Harddisk5\\Partition13", &device::exists_nt_dev},
  {"/dev/sdf14", BRACK(FH_SDF | 14), "\\Device\\Harddisk5\\Partition14", &device::exists_nt_dev},
  {"/dev/sdf15", BRACK(FH_SDF | 15), "\\Device\\Harddisk5\\Partition15", &device::exists_nt_dev},
  {"/dev/sdg1", BRACK(FH_SDG | 1), "\\Device\\Harddisk6\\Partition1", &device::exists_nt_dev},
  {"/dev/sdg2", BRACK(FH_SDG | 2), "\\Device\\Harddisk6\\Partition2", &device::exists_nt_dev},
  {"/dev/sdg3", BRACK(FH_SDG | 3), "\\Device\\Harddisk6\\Partition3", &device::exists_nt_dev},
  {"/dev/sdg4", BRACK(FH_SDG | 4), "\\Device\\Harddisk6\\Partition4", &device::exists_nt_dev},
  {"/dev/sdg5", BRACK(FH_SDG | 5), "\\Device\\Harddisk6\\Partition5", &device::exists_nt_dev},
  {"/dev/sdg6", BRACK(FH_SDG | 6), "\\Device\\Harddisk6\\Partition6", &device::exists_nt_dev},
  {"/dev/sdg7", BRACK(FH_SDG | 7), "\\Device\\Harddisk6\\Partition7", &device::exists_nt_dev},
  {"/dev/sdg8", BRACK(FH_SDG | 8), "\\Device\\Harddisk6\\Partition8", &device::exists_nt_dev},
  {"/dev/sdg9", BRACK(FH_SDG | 9), "\\Device\\Harddisk6\\Partition9", &device::exists_nt_dev},
  {"/dev/sdg10", BRACK(FH_SDG | 10), "\\Device\\Harddisk6\\Partition10", &device::exists_nt_dev},
  {"/dev/sdg11", BRACK(FH_SDG | 11), "\\Device\\Harddisk6\\Partition11", &device::exists_nt_dev},
  {"/dev/sdg12", BRACK(FH_SDG | 12), "\\Device\\Harddisk6\\Partition12", &device::exists_nt_dev},
  {"/dev/sdg13", BRACK(FH_SDG | 13), "\\Device\\Harddisk6\\Partition13", &device::exists_nt_dev},
  {"/dev/sdg14", BRACK(FH_SDG | 14), "\\Device\\Harddisk6\\Partition14", &device::exists_nt_dev},
  {"/dev/sdg15", BRACK(FH_SDG | 15), "\\Device\\Harddisk6\\Partition15", &device::exists_nt_dev},
  {"/dev/sdh1", BRACK(FH_SDH | 1), "\\Device\\Harddisk7\\Partition1", &device::exists_nt_dev},
  {"/dev/sdh2", BRACK(FH_SDH | 2), "\\Device\\Harddisk7\\Partition2", &device::exists_nt_dev},
  {"/dev/sdh3", BRACK(FH_SDH | 3), "\\Device\\Harddisk7\\Partition3", &device::exists_nt_dev},
  {"/dev/sdh4", BRACK(FH_SDH | 4), "\\Device\\Harddisk7\\Partition4", &device::exists_nt_dev},
  {"/dev/sdh5", BRACK(FH_SDH | 5), "\\Device\\Harddisk7\\Partition5", &device::exists_nt_dev},
  {"/dev/sdh6", BRACK(FH_SDH | 6), "\\Device\\Harddisk7\\Partition6", &device::exists_nt_dev},
  {"/dev/sdh7", BRACK(FH_SDH | 7), "\\Device\\Harddisk7\\Partition7", &device::exists_nt_dev},
  {"/dev/sdh8", BRACK(FH_SDH | 8), "\\Device\\Harddisk7\\Partition8", &device::exists_nt_dev},
  {"/dev/sdh9", BRACK(FH_SDH | 9), "\\Device\\Harddisk7\\Partition9", &device::exists_nt_dev},
  {"/dev/sdh10", BRACK(FH_SDH | 10), "\\Device\\Harddisk7\\Partition10", &device::exists_nt_dev},
  {"/dev/sdh11", BRACK(FH_SDH | 11), "\\Device\\Harddisk7\\Partition11", &device::exists_nt_dev},
  {"/dev/sdh12", BRACK(FH_SDH | 12), "\\Device\\Harddisk7\\Partition12", &device::exists_nt_dev},
  {"/dev/sdh13", BRACK(FH_SDH | 13), "\\Device\\Harddisk7\\Partition13", &device::exists_nt_dev},
  {"/dev/sdh14", BRACK(FH_SDH | 14), "\\Device\\Harddisk7\\Partition14", &device::exists_nt_dev},
  {"/dev/sdh15", BRACK(FH_SDH | 15), "\\Device\\Harddisk7\\Partition15", &device::exists_nt_dev},
  {"/dev/sdi1", BRACK(FH_SDI | 1), "\\Device\\Harddisk8\\Partition1", &device::exists_nt_dev},
  {"/dev/sdi2", BRACK(FH_SDI | 2), "\\Device\\Harddisk8\\Partition2", &device::exists_nt_dev},
  {"/dev/sdi3", BRACK(FH_SDI | 3), "\\Device\\Harddisk8\\Partition3", &device::exists_nt_dev},
  {"/dev/sdi4", BRACK(FH_SDI | 4), "\\Device\\Harddisk8\\Partition4", &device::exists_nt_dev},
  {"/dev/sdi5", BRACK(FH_SDI | 5), "\\Device\\Harddisk8\\Partition5", &device::exists_nt_dev},
  {"/dev/sdi6", BRACK(FH_SDI | 6), "\\Device\\Harddisk8\\Partition6", &device::exists_nt_dev},
  {"/dev/sdi7", BRACK(FH_SDI | 7), "\\Device\\Harddisk8\\Partition7", &device::exists_nt_dev},
  {"/dev/sdi8", BRACK(FH_SDI | 8), "\\Device\\Harddisk8\\Partition8", &device::exists_nt_dev},
  {"/dev/sdi9", BRACK(FH_SDI | 9), "\\Device\\Harddisk8\\Partition9", &device::exists_nt_dev},
  {"/dev/sdi10", BRACK(FH_SDI | 10), "\\Device\\Harddisk8\\Partition10", &device::exists_nt_dev},
  {"/dev/sdi11", BRACK(FH_SDI | 11), "\\Device\\Harddisk8\\Partition11", &device::exists_nt_dev},
  {"/dev/sdi12", BRACK(FH_SDI | 12), "\\Device\\Harddisk8\\Partition12", &device::exists_nt_dev},
  {"/dev/sdi13", BRACK(FH_SDI | 13), "\\Device\\Harddisk8\\Partition13", &device::exists_nt_dev},
  {"/dev/sdi14", BRACK(FH_SDI | 14), "\\Device\\Harddisk8\\Partition14", &device::exists_nt_dev},
  {"/dev/sdi15", BRACK(FH_SDI | 15), "\\Device\\Harddisk8\\Partition15", &device::exists_nt_dev},
  {"/dev/sdj1", BRACK(FH_SDJ | 1), "\\Device\\Harddisk9\\Partition1", &device::exists_nt_dev},
  {"/dev/sdj2", BRACK(FH_SDJ | 2), "\\Device\\Harddisk9\\Partition2", &device::exists_nt_dev},
  {"/dev/sdj3", BRACK(FH_SDJ | 3), "\\Device\\Harddisk9\\Partition3", &device::exists_nt_dev},
  {"/dev/sdj4", BRACK(FH_SDJ | 4), "\\Device\\Harddisk9\\Partition4", &device::exists_nt_dev},
  {"/dev/sdj5", BRACK(FH_SDJ | 5), "\\Device\\Harddisk9\\Partition5", &device::exists_nt_dev},
  {"/dev/sdj6", BRACK(FH_SDJ | 6), "\\Device\\Harddisk9\\Partition6", &device::exists_nt_dev},
  {"/dev/sdj7", BRACK(FH_SDJ | 7), "\\Device\\Harddisk9\\Partition7", &device::exists_nt_dev},
  {"/dev/sdj8", BRACK(FH_SDJ | 8), "\\Device\\Harddisk9\\Partition8", &device::exists_nt_dev},
  {"/dev/sdj9", BRACK(FH_SDJ | 9), "\\Device\\Harddisk9\\Partition9", &device::exists_nt_dev},
  {"/dev/sdj10", BRACK(FH_SDJ | 10), "\\Device\\Harddisk9\\Partition10", &device::exists_nt_dev},
  {"/dev/sdj11", BRACK(FH_SDJ | 11), "\\Device\\Harddisk9\\Partition11", &device::exists_nt_dev},
  {"/dev/sdj12", BRACK(FH_SDJ | 12), "\\Device\\Harddisk9\\Partition12", &device::exists_nt_dev},
  {"/dev/sdj13", BRACK(FH_SDJ | 13), "\\Device\\Harddisk9\\Partition13", &device::exists_nt_dev},
  {"/dev/sdj14", BRACK(FH_SDJ | 14), "\\Device\\Harddisk9\\Partition14", &device::exists_nt_dev},
  {"/dev/sdj15", BRACK(FH_SDJ | 15), "\\Device\\Harddisk9\\Partition15", &device::exists_nt_dev},
  {"/dev/sdk1", BRACK(FH_SDK | 1), "\\Device\\Harddisk10\\Partition1", &device::exists_nt_dev},
  {"/dev/sdk2", BRACK(FH_SDK | 2), "\\Device\\Harddisk10\\Partition2", &device::exists_nt_dev},
  {"/dev/sdk3", BRACK(FH_SDK | 3), "\\Device\\Harddisk10\\Partition3", &device::exists_nt_dev},
  {"/dev/sdk4", BRACK(FH_SDK | 4), "\\Device\\Harddisk10\\Partition4", &device::exists_nt_dev},
  {"/dev/sdk5", BRACK(FH_SDK | 5), "\\Device\\Harddisk10\\Partition5", &device::exists_nt_dev},
  {"/dev/sdk6", BRACK(FH_SDK | 6), "\\Device\\Harddisk10\\Partition6", &device::exists_nt_dev},
  {"/dev/sdk7", BRACK(FH_SDK | 7), "\\Device\\Harddisk10\\Partition7", &device::exists_nt_dev},
  {"/dev/sdk8", BRACK(FH_SDK | 8), "\\Device\\Harddisk10\\Partition8", &device::exists_nt_dev},
  {"/dev/sdk9", BRACK(FH_SDK | 9), "\\Device\\Harddisk10\\Partition9", &device::exists_nt_dev},
  {"/dev/sdk10", BRACK(FH_SDK | 10), "\\Device\\Harddisk10\\Partition10", &device::exists_nt_dev},
  {"/dev/sdk11", BRACK(FH_SDK | 11), "\\Device\\Harddisk10\\Partition11", &device::exists_nt_dev},
  {"/dev/sdk12", BRACK(FH_SDK | 12), "\\Device\\Harddisk10\\Partition12", &device::exists_nt_dev},
  {"/dev/sdk13", BRACK(FH_SDK | 13), "\\Device\\Harddisk10\\Partition13", &device::exists_nt_dev},
  {"/dev/sdk14", BRACK(FH_SDK | 14), "\\Device\\Harddisk10\\Partition14", &device::exists_nt_dev},
  {"/dev/sdk15", BRACK(FH_SDK | 15), "\\Device\\Harddisk10\\Partition15", &device::exists_nt_dev},
  {"/dev/sdl1", BRACK(FH_SDL | 1), "\\Device\\Harddisk11\\Partition1", &device::exists_nt_dev},
  {"/dev/sdl2", BRACK(FH_SDL | 2), "\\Device\\Harddisk11\\Partition2", &device::exists_nt_dev},
  {"/dev/sdl3", BRACK(FH_SDL | 3), "\\Device\\Harddisk11\\Partition3", &device::exists_nt_dev},
  {"/dev/sdl4", BRACK(FH_SDL | 4), "\\Device\\Harddisk11\\Partition4", &device::exists_nt_dev},
  {"/dev/sdl5", BRACK(FH_SDL | 5), "\\Device\\Harddisk11\\Partition5", &device::exists_nt_dev},
  {"/dev/sdl6", BRACK(FH_SDL | 6), "\\Device\\Harddisk11\\Partition6", &device::exists_nt_dev},
  {"/dev/sdl7", BRACK(FH_SDL | 7), "\\Device\\Harddisk11\\Partition7", &device::exists_nt_dev},
  {"/dev/sdl8", BRACK(FH_SDL | 8), "\\Device\\Harddisk11\\Partition8", &device::exists_nt_dev},
  {"/dev/sdl9", BRACK(FH_SDL | 9), "\\Device\\Harddisk11\\Partition9", &device::exists_nt_dev},
  {"/dev/sdl10", BRACK(FH_SDL | 10), "\\Device\\Harddisk11\\Partition10", &device::exists_nt_dev},
  {"/dev/sdl11", BRACK(FH_SDL | 11), "\\Device\\Harddisk11\\Partition11", &device::exists_nt_dev},
  {"/dev/sdl12", BRACK(FH_SDL | 12), "\\Device\\Harddisk11\\Partition12", &device::exists_nt_dev},
  {"/dev/sdl13", BRACK(FH_SDL | 13), "\\Device\\Harddisk11\\Partition13", &device::exists_nt_dev},
  {"/dev/sdl14", BRACK(FH_SDL | 14), "\\Device\\Harddisk11\\Partition14", &device::exists_nt_dev},
  {"/dev/sdl15", BRACK(FH_SDL | 15), "\\Device\\Harddisk11\\Partition15", &device::exists_nt_dev},
  {"/dev/sdm1", BRACK(FH_SDM | 1), "\\Device\\Harddisk12\\Partition1", &device::exists_nt_dev},
  {"/dev/sdm2", BRACK(FH_SDM | 2), "\\Device\\Harddisk12\\Partition2", &device::exists_nt_dev},
  {"/dev/sdm3", BRACK(FH_SDM | 3), "\\Device\\Harddisk12\\Partition3", &device::exists_nt_dev},
  {"/dev/sdm4", BRACK(FH_SDM | 4), "\\Device\\Harddisk12\\Partition4", &device::exists_nt_dev},
  {"/dev/sdm5", BRACK(FH_SDM | 5), "\\Device\\Harddisk12\\Partition5", &device::exists_nt_dev},
  {"/dev/sdm6", BRACK(FH_SDM | 6), "\\Device\\Harddisk12\\Partition6", &device::exists_nt_dev},
  {"/dev/sdm7", BRACK(FH_SDM | 7), "\\Device\\Harddisk12\\Partition7", &device::exists_nt_dev},
  {"/dev/sdm8", BRACK(FH_SDM | 8), "\\Device\\Harddisk12\\Partition8", &device::exists_nt_dev},
  {"/dev/sdm9", BRACK(FH_SDM | 9), "\\Device\\Harddisk12\\Partition9", &device::exists_nt_dev},
  {"/dev/sdm10", BRACK(FH_SDM | 10), "\\Device\\Harddisk12\\Partition10", &device::exists_nt_dev},
  {"/dev/sdm11", BRACK(FH_SDM | 11), "\\Device\\Harddisk12\\Partition11", &device::exists_nt_dev},
  {"/dev/sdm12", BRACK(FH_SDM | 12), "\\Device\\Harddisk12\\Partition12", &device::exists_nt_dev},
  {"/dev/sdm13", BRACK(FH_SDM | 13), "\\Device\\Harddisk12\\Partition13", &device::exists_nt_dev},
  {"/dev/sdm14", BRACK(FH_SDM | 14), "\\Device\\Harddisk12\\Partition14", &device::exists_nt_dev},
  {"/dev/sdm15", BRACK(FH_SDM | 15), "\\Device\\Harddisk12\\Partition15", &device::exists_nt_dev},
  {"/dev/sdn1", BRACK(FH_SDN | 1), "\\Device\\Harddisk13\\Partition1", &device::exists_nt_dev},
  {"/dev/sdn2", BRACK(FH_SDN | 2), "\\Device\\Harddisk13\\Partition2", &device::exists_nt_dev},
  {"/dev/sdn3", BRACK(FH_SDN | 3), "\\Device\\Harddisk13\\Partition3", &device::exists_nt_dev},
  {"/dev/sdn4", BRACK(FH_SDN | 4), "\\Device\\Harddisk13\\Partition4", &device::exists_nt_dev},
  {"/dev/sdn5", BRACK(FH_SDN | 5), "\\Device\\Harddisk13\\Partition5", &device::exists_nt_dev},
  {"/dev/sdn6", BRACK(FH_SDN | 6), "\\Device\\Harddisk13\\Partition6", &device::exists_nt_dev},
  {"/dev/sdn7", BRACK(FH_SDN | 7), "\\Device\\Harddisk13\\Partition7", &device::exists_nt_dev},
  {"/dev/sdn8", BRACK(FH_SDN | 8), "\\Device\\Harddisk13\\Partition8", &device::exists_nt_dev},
  {"/dev/sdn9", BRACK(FH_SDN | 9), "\\Device\\Harddisk13\\Partition9", &device::exists_nt_dev},
  {"/dev/sdn10", BRACK(FH_SDN | 10), "\\Device\\Harddisk13\\Partition10", &device::exists_nt_dev},
  {"/dev/sdn11", BRACK(FH_SDN | 11), "\\Device\\Harddisk13\\Partition11", &device::exists_nt_dev},
  {"/dev/sdn12", BRACK(FH_SDN | 12), "\\Device\\Harddisk13\\Partition12", &device::exists_nt_dev},
  {"/dev/sdn13", BRACK(FH_SDN | 13), "\\Device\\Harddisk13\\Partition13", &device::exists_nt_dev},
  {"/dev/sdn14", BRACK(FH_SDN | 14), "\\Device\\Harddisk13\\Partition14", &device::exists_nt_dev},
  {"/dev/sdn15", BRACK(FH_SDN | 15), "\\Device\\Harddisk13\\Partition15", &device::exists_nt_dev},
  {"/dev/sdo1", BRACK(FH_SDO | 1), "\\Device\\Harddisk14\\Partition1", &device::exists_nt_dev},
  {"/dev/sdo2", BRACK(FH_SDO | 2), "\\Device\\Harddisk14\\Partition2", &device::exists_nt_dev},
  {"/dev/sdo3", BRACK(FH_SDO | 3), "\\Device\\Harddisk14\\Partition3", &device::exists_nt_dev},
  {"/dev/sdo4", BRACK(FH_SDO | 4), "\\Device\\Harddisk14\\Partition4", &device::exists_nt_dev},
  {"/dev/sdo5", BRACK(FH_SDO | 5), "\\Device\\Harddisk14\\Partition5", &device::exists_nt_dev},
  {"/dev/sdo6", BRACK(FH_SDO | 6), "\\Device\\Harddisk14\\Partition6", &device::exists_nt_dev},
  {"/dev/sdo7", BRACK(FH_SDO | 7), "\\Device\\Harddisk14\\Partition7", &device::exists_nt_dev},
  {"/dev/sdo8", BRACK(FH_SDO | 8), "\\Device\\Harddisk14\\Partition8", &device::exists_nt_dev},
  {"/dev/sdo9", BRACK(FH_SDO | 9), "\\Device\\Harddisk14\\Partition9", &device::exists_nt_dev},
  {"/dev/sdo10", BRACK(FH_SDO | 10), "\\Device\\Harddisk14\\Partition10", &device::exists_nt_dev},
  {"/dev/sdo11", BRACK(FH_SDO | 11), "\\Device\\Harddisk14\\Partition11", &device::exists_nt_dev},
  {"/dev/sdo12", BRACK(FH_SDO | 12), "\\Device\\Harddisk14\\Partition12", &device::exists_nt_dev},
  {"/dev/sdo13", BRACK(FH_SDO | 13), "\\Device\\Harddisk14\\Partition13", &device::exists_nt_dev},
  {"/dev/sdo14", BRACK(FH_SDO | 14), "\\Device\\Harddisk14\\Partition14", &device::exists_nt_dev},
  {"/dev/sdo15", BRACK(FH_SDO | 15), "\\Device\\Harddisk14\\Partition15", &device::exists_nt_dev},
  {"/dev/sdp1", BRACK(FH_SDP | 1), "\\Device\\Harddisk15\\Partition1", &device::exists_nt_dev},
  {"/dev/sdp2", BRACK(FH_SDP | 2), "\\Device\\Harddisk15\\Partition2", &device::exists_nt_dev},
  {"/dev/sdp3", BRACK(FH_SDP | 3), "\\Device\\Harddisk15\\Partition3", &device::exists_nt_dev},
  {"/dev/sdp4", BRACK(FH_SDP | 4), "\\Device\\Harddisk15\\Partition4", &device::exists_nt_dev},
  {"/dev/sdp5", BRACK(FH_SDP | 5), "\\Device\\Harddisk15\\Partition5", &device::exists_nt_dev},
  {"/dev/sdp6", BRACK(FH_SDP | 6), "\\Device\\Harddisk15\\Partition6", &device::exists_nt_dev},
  {"/dev/sdp7", BRACK(FH_SDP | 7), "\\Device\\Harddisk15\\Partition7", &device::exists_nt_dev},
  {"/dev/sdp8", BRACK(FH_SDP | 8), "\\Device\\Harddisk15\\Partition8", &device::exists_nt_dev},
  {"/dev/sdp9", BRACK(FH_SDP | 9), "\\Device\\Harddisk15\\Partition9", &device::exists_nt_dev},
  {"/dev/sdp10", BRACK(FH_SDP | 10), "\\Device\\Harddisk15\\Partition10", &device::exists_nt_dev},
  {"/dev/sdp11", BRACK(FH_SDP | 11), "\\Device\\Harddisk15\\Partition11", &device::exists_nt_dev},
  {"/dev/sdp12", BRACK(FH_SDP | 12), "\\Device\\Harddisk15\\Partition12", &device::exists_nt_dev},
  {"/dev/sdp13", BRACK(FH_SDP | 13), "\\Device\\Harddisk15\\Partition13", &device::exists_nt_dev},
  {"/dev/sdp14", BRACK(FH_SDP | 14), "\\Device\\Harddisk15\\Partition14", &device::exists_nt_dev},
  {"/dev/sdp15", BRACK(FH_SDP | 15), "\\Device\\Harddisk15\\Partition15", &device::exists_nt_dev},
  {"/dev/sdq1", BRACK(FH_SDQ | 1), "\\Device\\Harddisk16\\Partition1", &device::exists_nt_dev},
  {"/dev/sdq2", BRACK(FH_SDQ | 2), "\\Device\\Harddisk16\\Partition2", &device::exists_nt_dev},
  {"/dev/sdq3", BRACK(FH_SDQ | 3), "\\Device\\Harddisk16\\Partition3", &device::exists_nt_dev},
  {"/dev/sdq4", BRACK(FH_SDQ | 4), "\\Device\\Harddisk16\\Partition4", &device::exists_nt_dev},
  {"/dev/sdq5", BRACK(FH_SDQ | 5), "\\Device\\Harddisk16\\Partition5", &device::exists_nt_dev},
  {"/dev/sdq6", BRACK(FH_SDQ | 6), "\\Device\\Harddisk16\\Partition6", &device::exists_nt_dev},
  {"/dev/sdq7", BRACK(FH_SDQ | 7), "\\Device\\Harddisk16\\Partition7", &device::exists_nt_dev},
  {"/dev/sdq8", BRACK(FH_SDQ | 8), "\\Device\\Harddisk16\\Partition8", &device::exists_nt_dev},
  {"/dev/sdq9", BRACK(FH_SDQ | 9), "\\Device\\Harddisk16\\Partition9", &device::exists_nt_dev},
  {"/dev/sdq10", BRACK(FH_SDQ | 10), "\\Device\\Harddisk16\\Partition10", &device::exists_nt_dev},
  {"/dev/sdq11", BRACK(FH_SDQ | 11), "\\Device\\Harddisk16\\Partition11", &device::exists_nt_dev},
  {"/dev/sdq12", BRACK(FH_SDQ | 12), "\\Device\\Harddisk16\\Partition12", &device::exists_nt_dev},
  {"/dev/sdq13", BRACK(FH_SDQ | 13), "\\Device\\Harddisk16\\Partition13", &device::exists_nt_dev},
  {"/dev/sdq14", BRACK(FH_SDQ | 14), "\\Device\\Harddisk16\\Partition14", &device::exists_nt_dev},
  {"/dev/sdq15", BRACK(FH_SDQ | 15), "\\Device\\Harddisk16\\Partition15", &device::exists_nt_dev},
  {"/dev/sdr1", BRACK(FH_SDR | 1), "\\Device\\Harddisk17\\Partition1", &device::exists_nt_dev},
  {"/dev/sdr2", BRACK(FH_SDR | 2), "\\Device\\Harddisk17\\Partition2", &device::exists_nt_dev},
  {"/dev/sdr3", BRACK(FH_SDR | 3), "\\Device\\Harddisk17\\Partition3", &device::exists_nt_dev},
  {"/dev/sdr4", BRACK(FH_SDR | 4), "\\Device\\Harddisk17\\Partition4", &device::exists_nt_dev},
  {"/dev/sdr5", BRACK(FH_SDR | 5), "\\Device\\Harddisk17\\Partition5", &device::exists_nt_dev},
  {"/dev/sdr6", BRACK(FH_SDR | 6), "\\Device\\Harddisk17\\Partition6", &device::exists_nt_dev},
  {"/dev/sdr7", BRACK(FH_SDR | 7), "\\Device\\Harddisk17\\Partition7", &device::exists_nt_dev},
  {"/dev/sdr8", BRACK(FH_SDR | 8), "\\Device\\Harddisk17\\Partition8", &device::exists_nt_dev},
  {"/dev/sdr9", BRACK(FH_SDR | 9), "\\Device\\Harddisk17\\Partition9", &device::exists_nt_dev},
  {"/dev/sdr10", BRACK(FH_SDR | 10), "\\Device\\Harddisk17\\Partition10", &device::exists_nt_dev},
  {"/dev/sdr11", BRACK(FH_SDR | 11), "\\Device\\Harddisk17\\Partition11", &device::exists_nt_dev},
  {"/dev/sdr12", BRACK(FH_SDR | 12), "\\Device\\Harddisk17\\Partition12", &device::exists_nt_dev},
  {"/dev/sdr13", BRACK(FH_SDR | 13), "\\Device\\Harddisk17\\Partition13", &device::exists_nt_dev},
  {"/dev/sdr14", BRACK(FH_SDR | 14), "\\Device\\Harddisk17\\Partition14", &device::exists_nt_dev},
  {"/dev/sdr15", BRACK(FH_SDR | 15), "\\Device\\Harddisk17\\Partition15", &device::exists_nt_dev},
  {"/dev/sds1", BRACK(FH_SDS | 1), "\\Device\\Harddisk18\\Partition1", &device::exists_nt_dev},
  {"/dev/sds2", BRACK(FH_SDS | 2), "\\Device\\Harddisk18\\Partition2", &device::exists_nt_dev},
  {"/dev/sds3", BRACK(FH_SDS | 3), "\\Device\\Harddisk18\\Partition3", &device::exists_nt_dev},
  {"/dev/sds4", BRACK(FH_SDS | 4), "\\Device\\Harddisk18\\Partition4", &device::exists_nt_dev},
  {"/dev/sds5", BRACK(FH_SDS | 5), "\\Device\\Harddisk18\\Partition5", &device::exists_nt_dev},
  {"/dev/sds6", BRACK(FH_SDS | 6), "\\Device\\Harddisk18\\Partition6", &device::exists_nt_dev},
  {"/dev/sds7", BRACK(FH_SDS | 7), "\\Device\\Harddisk18\\Partition7", &device::exists_nt_dev},
  {"/dev/sds8", BRACK(FH_SDS | 8), "\\Device\\Harddisk18\\Partition8", &device::exists_nt_dev},
  {"/dev/sds9", BRACK(FH_SDS | 9), "\\Device\\Harddisk18\\Partition9", &device::exists_nt_dev},
  {"/dev/sds10", BRACK(FH_SDS | 10), "\\Device\\Harddisk18\\Partition10", &device::exists_nt_dev},
  {"/dev/sds11", BRACK(FH_SDS | 11), "\\Device\\Harddisk18\\Partition11", &device::exists_nt_dev},
  {"/dev/sds12", BRACK(FH_SDS | 12), "\\Device\\Harddisk18\\Partition12", &device::exists_nt_dev},
  {"/dev/sds13", BRACK(FH_SDS | 13), "\\Device\\Harddisk18\\Partition13", &device::exists_nt_dev},
  {"/dev/sds14", BRACK(FH_SDS | 14), "\\Device\\Harddisk18\\Partition14", &device::exists_nt_dev},
  {"/dev/sds15", BRACK(FH_SDS | 15), "\\Device\\Harddisk18\\Partition15", &device::exists_nt_dev},
  {"/dev/sdt1", BRACK(FH_SDT | 1), "\\Device\\Harddisk19\\Partition1", &device::exists_nt_dev},
  {"/dev/sdt2", BRACK(FH_SDT | 2), "\\Device\\Harddisk19\\Partition2", &device::exists_nt_dev},
  {"/dev/sdt3", BRACK(FH_SDT | 3), "\\Device\\Harddisk19\\Partition3", &device::exists_nt_dev},
  {"/dev/sdt4", BRACK(FH_SDT | 4), "\\Device\\Harddisk19\\Partition4", &device::exists_nt_dev},
  {"/dev/sdt5", BRACK(FH_SDT | 5), "\\Device\\Harddisk19\\Partition5", &device::exists_nt_dev},
  {"/dev/sdt6", BRACK(FH_SDT | 6), "\\Device\\Harddisk19\\Partition6", &device::exists_nt_dev},
  {"/dev/sdt7", BRACK(FH_SDT | 7), "\\Device\\Harddisk19\\Partition7", &device::exists_nt_dev},
  {"/dev/sdt8", BRACK(FH_SDT | 8), "\\Device\\Harddisk19\\Partition8", &device::exists_nt_dev},
  {"/dev/sdt9", BRACK(FH_SDT | 9), "\\Device\\Harddisk19\\Partition9", &device::exists_nt_dev},
  {"/dev/sdt10", BRACK(FH_SDT | 10), "\\Device\\Harddisk19\\Partition10", &device::exists_nt_dev},
  {"/dev/sdt11", BRACK(FH_SDT | 11), "\\Device\\Harddisk19\\Partition11", &device::exists_nt_dev},
  {"/dev/sdt12", BRACK(FH_SDT | 12), "\\Device\\Harddisk19\\Partition12", &device::exists_nt_dev},
  {"/dev/sdt13", BRACK(FH_SDT | 13), "\\Device\\Harddisk19\\Partition13", &device::exists_nt_dev},
  {"/dev/sdt14", BRACK(FH_SDT | 14), "\\Device\\Harddisk19\\Partition14", &device::exists_nt_dev},
  {"/dev/sdt15", BRACK(FH_SDT | 15), "\\Device\\Harddisk19\\Partition15", &device::exists_nt_dev},
  {"/dev/sdu1", BRACK(FH_SDU | 1), "\\Device\\Harddisk20\\Partition1", &device::exists_nt_dev},
  {"/dev/sdu2", BRACK(FH_SDU | 2), "\\Device\\Harddisk20\\Partition2", &device::exists_nt_dev},
  {"/dev/sdu3", BRACK(FH_SDU | 3), "\\Device\\Harddisk20\\Partition3", &device::exists_nt_dev},
  {"/dev/sdu4", BRACK(FH_SDU | 4), "\\Device\\Harddisk20\\Partition4", &device::exists_nt_dev},
  {"/dev/sdu5", BRACK(FH_SDU | 5), "\\Device\\Harddisk20\\Partition5", &device::exists_nt_dev},
  {"/dev/sdu6", BRACK(FH_SDU | 6), "\\Device\\Harddisk20\\Partition6", &device::exists_nt_dev},
  {"/dev/sdu7", BRACK(FH_SDU | 7), "\\Device\\Harddisk20\\Partition7", &device::exists_nt_dev},
  {"/dev/sdu8", BRACK(FH_SDU | 8), "\\Device\\Harddisk20\\Partition8", &device::exists_nt_dev},
  {"/dev/sdu9", BRACK(FH_SDU | 9), "\\Device\\Harddisk20\\Partition9", &device::exists_nt_dev},
  {"/dev/sdu10", BRACK(FH_SDU | 10), "\\Device\\Harddisk20\\Partition10", &device::exists_nt_dev},
  {"/dev/sdu11", BRACK(FH_SDU | 11), "\\Device\\Harddisk20\\Partition11", &device::exists_nt_dev},
  {"/dev/sdu12", BRACK(FH_SDU | 12), "\\Device\\Harddisk20\\Partition12", &device::exists_nt_dev},
  {"/dev/sdu13", BRACK(FH_SDU | 13), "\\Device\\Harddisk20\\Partition13", &device::exists_nt_dev},
  {"/dev/sdu14", BRACK(FH_SDU | 14), "\\Device\\Harddisk20\\Partition14", &device::exists_nt_dev},
  {"/dev/sdu15", BRACK(FH_SDU | 15), "\\Device\\Harddisk20\\Partition15", &device::exists_nt_dev},
  {"/dev/sdv1", BRACK(FH_SDV | 1), "\\Device\\Harddisk21\\Partition1", &device::exists_nt_dev},
  {"/dev/sdv2", BRACK(FH_SDV | 2), "\\Device\\Harddisk21\\Partition2", &device::exists_nt_dev},
  {"/dev/sdv3", BRACK(FH_SDV | 3), "\\Device\\Harddisk21\\Partition3", &device::exists_nt_dev},
  {"/dev/sdv4", BRACK(FH_SDV | 4), "\\Device\\Harddisk21\\Partition4", &device::exists_nt_dev},
  {"/dev/sdv5", BRACK(FH_SDV | 5), "\\Device\\Harddisk21\\Partition5", &device::exists_nt_dev},
  {"/dev/sdv6", BRACK(FH_SDV | 6), "\\Device\\Harddisk21\\Partition6", &device::exists_nt_dev},
  {"/dev/sdv7", BRACK(FH_SDV | 7), "\\Device\\Harddisk21\\Partition7", &device::exists_nt_dev},
  {"/dev/sdv8", BRACK(FH_SDV | 8), "\\Device\\Harddisk21\\Partition8", &device::exists_nt_dev},
  {"/dev/sdv9", BRACK(FH_SDV | 9), "\\Device\\Harddisk21\\Partition9", &device::exists_nt_dev},
  {"/dev/sdv10", BRACK(FH_SDV | 10), "\\Device\\Harddisk21\\Partition10", &device::exists_nt_dev},
  {"/dev/sdv11", BRACK(FH_SDV | 11), "\\Device\\Harddisk21\\Partition11", &device::exists_nt_dev},
  {"/dev/sdv12", BRACK(FH_SDV | 12), "\\Device\\Harddisk21\\Partition12", &device::exists_nt_dev},
  {"/dev/sdv13", BRACK(FH_SDV | 13), "\\Device\\Harddisk21\\Partition13", &device::exists_nt_dev},
  {"/dev/sdv14", BRACK(FH_SDV | 14), "\\Device\\Harddisk21\\Partition14", &device::exists_nt_dev},
  {"/dev/sdv15", BRACK(FH_SDV | 15), "\\Device\\Harddisk21\\Partition15", &device::exists_nt_dev},
  {"/dev/sdw1", BRACK(FH_SDW | 1), "\\Device\\Harddisk22\\Partition1", &device::exists_nt_dev},
  {"/dev/sdw2", BRACK(FH_SDW | 2), "\\Device\\Harddisk22\\Partition2", &device::exists_nt_dev},
  {"/dev/sdw3", BRACK(FH_SDW | 3), "\\Device\\Harddisk22\\Partition3", &device::exists_nt_dev},
  {"/dev/sdw4", BRACK(FH_SDW | 4), "\\Device\\Harddisk22\\Partition4", &device::exists_nt_dev},
  {"/dev/sdw5", BRACK(FH_SDW | 5), "\\Device\\Harddisk22\\Partition5", &device::exists_nt_dev},
  {"/dev/sdw6", BRACK(FH_SDW | 6), "\\Device\\Harddisk22\\Partition6", &device::exists_nt_dev},
  {"/dev/sdw7", BRACK(FH_SDW | 7), "\\Device\\Harddisk22\\Partition7", &device::exists_nt_dev},
  {"/dev/sdw8", BRACK(FH_SDW | 8), "\\Device\\Harddisk22\\Partition8", &device::exists_nt_dev},
  {"/dev/sdw9", BRACK(FH_SDW | 9), "\\Device\\Harddisk22\\Partition9", &device::exists_nt_dev},
  {"/dev/sdw10", BRACK(FH_SDW | 10), "\\Device\\Harddisk22\\Partition10", &device::exists_nt_dev},
  {"/dev/sdw11", BRACK(FH_SDW | 11), "\\Device\\Harddisk22\\Partition11", &device::exists_nt_dev},
  {"/dev/sdw12", BRACK(FH_SDW | 12), "\\Device\\Harddisk22\\Partition12", &device::exists_nt_dev},
  {"/dev/sdw13", BRACK(FH_SDW | 13), "\\Device\\Harddisk22\\Partition13", &device::exists_nt_dev},
  {"/dev/sdw14", BRACK(FH_SDW | 14), "\\Device\\Harddisk22\\Partition14", &device::exists_nt_dev},
  {"/dev/sdw15", BRACK(FH_SDW | 15), "\\Device\\Harddisk22\\Partition15", &device::exists_nt_dev},
  {"/dev/sdx1", BRACK(FH_SDX | 1), "\\Device\\Harddisk23\\Partition1", &device::exists_nt_dev},
  {"/dev/sdx2", BRACK(FH_SDX | 2), "\\Device\\Harddisk23\\Partition2", &device::exists_nt_dev},
  {"/dev/sdx3", BRACK(FH_SDX | 3), "\\Device\\Harddisk23\\Partition3", &device::exists_nt_dev},
  {"/dev/sdx4", BRACK(FH_SDX | 4), "\\Device\\Harddisk23\\Partition4", &device::exists_nt_dev},
  {"/dev/sdx5", BRACK(FH_SDX | 5), "\\Device\\Harddisk23\\Partition5", &device::exists_nt_dev},
  {"/dev/sdx6", BRACK(FH_SDX | 6), "\\Device\\Harddisk23\\Partition6", &device::exists_nt_dev},
  {"/dev/sdx7", BRACK(FH_SDX | 7), "\\Device\\Harddisk23\\Partition7", &device::exists_nt_dev},
  {"/dev/sdx8", BRACK(FH_SDX | 8), "\\Device\\Harddisk23\\Partition8", &device::exists_nt_dev},
  {"/dev/sdx9", BRACK(FH_SDX | 9), "\\Device\\Harddisk23\\Partition9", &device::exists_nt_dev},
  {"/dev/sdx10", BRACK(FH_SDX | 10), "\\Device\\Harddisk23\\Partition10", &device::exists_nt_dev},
  {"/dev/sdx11", BRACK(FH_SDX | 11), "\\Device\\Harddisk23\\Partition11", &device::exists_nt_dev},
  {"/dev/sdx12", BRACK(FH_SDX | 12), "\\Device\\Harddisk23\\Partition12", &device::exists_nt_dev},
  {"/dev/sdx13", BRACK(FH_SDX | 13), "\\Device\\Harddisk23\\Partition13", &device::exists_nt_dev},
  {"/dev/sdx14", BRACK(FH_SDX | 14), "\\Device\\Harddisk23\\Partition14", &device::exists_nt_dev},
  {"/dev/sdx15", BRACK(FH_SDX | 15), "\\Device\\Harddisk23\\Partition15", &device::exists_nt_dev},
  {"/dev/sdy1", BRACK(FH_SDY | 1), "\\Device\\Harddisk24\\Partition1", &device::exists_nt_dev},
  {"/dev/sdy2", BRACK(FH_SDY | 2), "\\Device\\Harddisk24\\Partition2", &device::exists_nt_dev},
  {"/dev/sdy3", BRACK(FH_SDY | 3), "\\Device\\Harddisk24\\Partition3", &device::exists_nt_dev},
  {"/dev/sdy4", BRACK(FH_SDY | 4), "\\Device\\Harddisk24\\Partition4", &device::exists_nt_dev},
  {"/dev/sdy5", BRACK(FH_SDY | 5), "\\Device\\Harddisk24\\Partition5", &device::exists_nt_dev},
  {"/dev/sdy6", BRACK(FH_SDY | 6), "\\Device\\Harddisk24\\Partition6", &device::exists_nt_dev},
  {"/dev/sdy7", BRACK(FH_SDY | 7), "\\Device\\Harddisk24\\Partition7", &device::exists_nt_dev},
  {"/dev/sdy8", BRACK(FH_SDY | 8), "\\Device\\Harddisk24\\Partition8", &device::exists_nt_dev},
  {"/dev/sdy9", BRACK(FH_SDY | 9), "\\Device\\Harddisk24\\Partition9", &device::exists_nt_dev},
  {"/dev/sdy10", BRACK(FH_SDY | 10), "\\Device\\Harddisk24\\Partition10", &device::exists_nt_dev},
  {"/dev/sdy11", BRACK(FH_SDY | 11), "\\Device\\Harddisk24\\Partition11", &device::exists_nt_dev},
  {"/dev/sdy12", BRACK(FH_SDY | 12), "\\Device\\Harddisk24\\Partition12", &device::exists_nt_dev},
  {"/dev/sdy13", BRACK(FH_SDY | 13), "\\Device\\Harddisk24\\Partition13", &device::exists_nt_dev},
  {"/dev/sdy14", BRACK(FH_SDY | 14), "\\Device\\Harddisk24\\Partition14", &device::exists_nt_dev},
  {"/dev/sdy15", BRACK(FH_SDY | 15), "\\Device\\Harddisk24\\Partition15", &device::exists_nt_dev},
  {"/dev/sdz1", BRACK(FH_SDZ | 1), "\\Device\\Harddisk25\\Partition1", &device::exists_nt_dev},
  {"/dev/sdz2", BRACK(FH_SDZ | 2), "\\Device\\Harddisk25\\Partition2", &device::exists_nt_dev},
  {"/dev/sdz3", BRACK(FH_SDZ | 3), "\\Device\\Harddisk25\\Partition3", &device::exists_nt_dev},
  {"/dev/sdz4", BRACK(FH_SDZ | 4), "\\Device\\Harddisk25\\Partition4", &device::exists_nt_dev},
  {"/dev/sdz5", BRACK(FH_SDZ | 5), "\\Device\\Harddisk25\\Partition5", &device::exists_nt_dev},
  {"/dev/sdz6", BRACK(FH_SDZ | 6), "\\Device\\Harddisk25\\Partition6", &device::exists_nt_dev},
  {"/dev/sdz7", BRACK(FH_SDZ | 7), "\\Device\\Harddisk25\\Partition7", &device::exists_nt_dev},
  {"/dev/sdz8", BRACK(FH_SDZ | 8), "\\Device\\Harddisk25\\Partition8", &device::exists_nt_dev},
  {"/dev/sdz9", BRACK(FH_SDZ | 9), "\\Device\\Harddisk25\\Partition9", &device::exists_nt_dev},
  {"/dev/sdz10", BRACK(FH_SDZ | 10), "\\Device\\Harddisk25\\Partition10", &device::exists_nt_dev},
  {"/dev/sdz11", BRACK(FH_SDZ | 11), "\\Device\\Harddisk25\\Partition11", &device::exists_nt_dev},
  {"/dev/sdz12", BRACK(FH_SDZ | 12), "\\Device\\Harddisk25\\Partition12", &device::exists_nt_dev},
  {"/dev/sdz13", BRACK(FH_SDZ | 13), "\\Device\\Harddisk25\\Partition13", &device::exists_nt_dev},
  {"/dev/sdz14", BRACK(FH_SDZ | 14), "\\Device\\Harddisk25\\Partition14", &device::exists_nt_dev},
  {"/dev/sdz15", BRACK(FH_SDZ | 15), "\\Device\\Harddisk25\\Partition15", &device::exists_nt_dev},
  {"/dev/sdaa", BRACK(FH_SDAA), "\\Device\\Harddisk26\\Partition0", &device::exists_nt_dev},
  {"/dev/sdab", BRACK(FH_SDAB), "\\Device\\Harddisk27\\Partition0", &device::exists_nt_dev},
  {"/dev/sdac", BRACK(FH_SDAC), "\\Device\\Harddisk28\\Partition0", &device::exists_nt_dev},
  {"/dev/sdad", BRACK(FH_SDAD), "\\Device\\Harddisk29\\Partition0", &device::exists_nt_dev},
  {"/dev/sdae", BRACK(FH_SDAE), "\\Device\\Harddisk30\\Partition0", &device::exists_nt_dev},
  {"/dev/sdaf", BRACK(FH_SDAF), "\\Device\\Harddisk31\\Partition0", &device::exists_nt_dev},
  {"/dev/sdag", BRACK(FH_SDAG), "\\Device\\Harddisk32\\Partition0", &device::exists_nt_dev},
  {"/dev/sdah", BRACK(FH_SDAH), "\\Device\\Harddisk33\\Partition0", &device::exists_nt_dev},
  {"/dev/sdai", BRACK(FH_SDAI), "\\Device\\Harddisk34\\Partition0", &device::exists_nt_dev},
  {"/dev/sdaj", BRACK(FH_SDAJ), "\\Device\\Harddisk35\\Partition0", &device::exists_nt_dev},
  {"/dev/sdak", BRACK(FH_SDAK), "\\Device\\Harddisk36\\Partition0", &device::exists_nt_dev},
  {"/dev/sdal", BRACK(FH_SDAL), "\\Device\\Harddisk37\\Partition0", &device::exists_nt_dev},
  {"/dev/sdam", BRACK(FH_SDAM), "\\Device\\Harddisk38\\Partition0", &device::exists_nt_dev},
  {"/dev/sdan", BRACK(FH_SDAN), "\\Device\\Harddisk39\\Partition0", &device::exists_nt_dev},
  {"/dev/sdao", BRACK(FH_SDAO), "\\Device\\Harddisk40\\Partition0", &device::exists_nt_dev},
  {"/dev/sdap", BRACK(FH_SDAP), "\\Device\\Harddisk41\\Partition0", &device::exists_nt_dev},
  {"/dev/sdaq", BRACK(FH_SDAQ), "\\Device\\Harddisk42\\Partition0", &device::exists_nt_dev},
  {"/dev/sdar", BRACK(FH_SDAR), "\\Device\\Harddisk43\\Partition0", &device::exists_nt_dev},
  {"/dev/sdas", BRACK(FH_SDAS), "\\Device\\Harddisk44\\Partition0", &device::exists_nt_dev},
  {"/dev/sdat", BRACK(FH_SDAT), "\\Device\\Harddisk45\\Partition0", &device::exists_nt_dev},
  {"/dev/sdau", BRACK(FH_SDAU), "\\Device\\Harddisk46\\Partition0", &device::exists_nt_dev},
  {"/dev/sdav", BRACK(FH_SDAV), "\\Device\\Harddisk47\\Partition0", &device::exists_nt_dev},
  {"/dev/sdaw", BRACK(FH_SDAW), "\\Device\\Harddisk48\\Partition0", &device::exists_nt_dev},
  {"/dev/sdax", BRACK(FH_SDAX), "\\Device\\Harddisk49\\Partition0", &device::exists_nt_dev},
  {"/dev/sday", BRACK(FH_SDAY), "\\Device\\Harddisk50\\Partition0", &device::exists_nt_dev},
  {"/dev/sdaz", BRACK(FH_SDAZ), "\\Device\\Harddisk51\\Partition0", &device::exists_nt_dev},
  {"/dev/sdaa1", BRACK(FH_SDAA | 1), "\\Device\\Harddisk26\\Partition1", &device::exists_nt_dev},
  {"/dev/sdaa2", BRACK(FH_SDAA | 2), "\\Device\\Harddisk26\\Partition2", &device::exists_nt_dev},
  {"/dev/sdaa3", BRACK(FH_SDAA | 3), "\\Device\\Harddisk26\\Partition3", &device::exists_nt_dev},
  {"/dev/sdaa4", BRACK(FH_SDAA | 4), "\\Device\\Harddisk26\\Partition4", &device::exists_nt_dev},
  {"/dev/sdaa5", BRACK(FH_SDAA | 5), "\\Device\\Harddisk26\\Partition5", &device::exists_nt_dev},
  {"/dev/sdaa6", BRACK(FH_SDAA | 6), "\\Device\\Harddisk26\\Partition6", &device::exists_nt_dev},
  {"/dev/sdaa7", BRACK(FH_SDAA | 7), "\\Device\\Harddisk26\\Partition7", &device::exists_nt_dev},
  {"/dev/sdaa8", BRACK(FH_SDAA | 8), "\\Device\\Harddisk26\\Partition8", &device::exists_nt_dev},
  {"/dev/sdaa9", BRACK(FH_SDAA | 9), "\\Device\\Harddisk26\\Partition9", &device::exists_nt_dev},
  {"/dev/sdaa10", BRACK(FH_SDAA | 10), "\\Device\\Harddisk26\\Partition10", &device::exists_nt_dev},
  {"/dev/sdaa11", BRACK(FH_SDAA | 11), "\\Device\\Harddisk26\\Partition11", &device::exists_nt_dev},
  {"/dev/sdaa12", BRACK(FH_SDAA | 12), "\\Device\\Harddisk26\\Partition12", &device::exists_nt_dev},
  {"/dev/sdaa13", BRACK(FH_SDAA | 13), "\\Device\\Harddisk26\\Partition13", &device::exists_nt_dev},
  {"/dev/sdaa14", BRACK(FH_SDAA | 14), "\\Device\\Harddisk26\\Partition14", &device::exists_nt_dev},
  {"/dev/sdaa15", BRACK(FH_SDAA | 15), "\\Device\\Harddisk26\\Partition15", &device::exists_nt_dev},
  {"/dev/sdab1", BRACK(FH_SDAB | 1), "\\Device\\Harddisk27\\Partition1", &device::exists_nt_dev},
  {"/dev/sdab2", BRACK(FH_SDAB | 2), "\\Device\\Harddisk27\\Partition2", &device::exists_nt_dev},
  {"/dev/sdab3", BRACK(FH_SDAB | 3), "\\Device\\Harddisk27\\Partition3", &device::exists_nt_dev},
  {"/dev/sdab4", BRACK(FH_SDAB | 4), "\\Device\\Harddisk27\\Partition4", &device::exists_nt_dev},
  {"/dev/sdab5", BRACK(FH_SDAB | 5), "\\Device\\Harddisk27\\Partition5", &device::exists_nt_dev},
  {"/dev/sdab6", BRACK(FH_SDAB | 6), "\\Device\\Harddisk27\\Partition6", &device::exists_nt_dev},
  {"/dev/sdab7", BRACK(FH_SDAB | 7), "\\Device\\Harddisk27\\Partition7", &device::exists_nt_dev},
  {"/dev/sdab8", BRACK(FH_SDAB | 8), "\\Device\\Harddisk27\\Partition8", &device::exists_nt_dev},
  {"/dev/sdab9", BRACK(FH_SDAB | 9), "\\Device\\Harddisk27\\Partition9", &device::exists_nt_dev},
  {"/dev/sdab10", BRACK(FH_SDAB | 10), "\\Device\\Harddisk27\\Partition10", &device::exists_nt_dev},
  {"/dev/sdab11", BRACK(FH_SDAB | 11), "\\Device\\Harddisk27\\Partition11", &device::exists_nt_dev},
  {"/dev/sdab12", BRACK(FH_SDAB | 12), "\\Device\\Harddisk27\\Partition12", &device::exists_nt_dev},
  {"/dev/sdab13", BRACK(FH_SDAB | 13), "\\Device\\Harddisk27\\Partition13", &device::exists_nt_dev},
  {"/dev/sdab14", BRACK(FH_SDAB | 14), "\\Device\\Harddisk27\\Partition14", &device::exists_nt_dev},
  {"/dev/sdab15", BRACK(FH_SDAB | 15), "\\Device\\Harddisk27\\Partition15", &device::exists_nt_dev},
  {"/dev/sdac1", BRACK(FH_SDAC | 1), "\\Device\\Harddisk28\\Partition1", &device::exists_nt_dev},
  {"/dev/sdac2", BRACK(FH_SDAC | 2), "\\Device\\Harddisk28\\Partition2", &device::exists_nt_dev},
  {"/dev/sdac3", BRACK(FH_SDAC | 3), "\\Device\\Harddisk28\\Partition3", &device::exists_nt_dev},
  {"/dev/sdac4", BRACK(FH_SDAC | 4), "\\Device\\Harddisk28\\Partition4", &device::exists_nt_dev},
  {"/dev/sdac5", BRACK(FH_SDAC | 5), "\\Device\\Harddisk28\\Partition5", &device::exists_nt_dev},
  {"/dev/sdac6", BRACK(FH_SDAC | 6), "\\Device\\Harddisk28\\Partition6", &device::exists_nt_dev},
  {"/dev/sdac7", BRACK(FH_SDAC | 7), "\\Device\\Harddisk28\\Partition7", &device::exists_nt_dev},
  {"/dev/sdac8", BRACK(FH_SDAC | 8), "\\Device\\Harddisk28\\Partition8", &device::exists_nt_dev},
  {"/dev/sdac9", BRACK(FH_SDAC | 9), "\\Device\\Harddisk28\\Partition9", &device::exists_nt_dev},
  {"/dev/sdac10", BRACK(FH_SDAC | 10), "\\Device\\Harddisk28\\Partition10", &device::exists_nt_dev},
  {"/dev/sdac11", BRACK(FH_SDAC | 11), "\\Device\\Harddisk28\\Partition11", &device::exists_nt_dev},
  {"/dev/sdac12", BRACK(FH_SDAC | 12), "\\Device\\Harddisk28\\Partition12", &device::exists_nt_dev},
  {"/dev/sdac13", BRACK(FH_SDAC | 13), "\\Device\\Harddisk28\\Partition13", &device::exists_nt_dev},
  {"/dev/sdac14", BRACK(FH_SDAC | 14), "\\Device\\Harddisk28\\Partition14", &device::exists_nt_dev},
  {"/dev/sdac15", BRACK(FH_SDAC | 15), "\\Device\\Harddisk28\\Partition15", &device::exists_nt_dev},
  {"/dev/sdad1", BRACK(FH_SDAD | 1), "\\Device\\Harddisk29\\Partition1", &device::exists_nt_dev},
  {"/dev/sdad2", BRACK(FH_SDAD | 2), "\\Device\\Harddisk29\\Partition2", &device::exists_nt_dev},
  {"/dev/sdad3", BRACK(FH_SDAD | 3), "\\Device\\Harddisk29\\Partition3", &device::exists_nt_dev},
  {"/dev/sdad4", BRACK(FH_SDAD | 4), "\\Device\\Harddisk29\\Partition4", &device::exists_nt_dev},
  {"/dev/sdad5", BRACK(FH_SDAD | 5), "\\Device\\Harddisk29\\Partition5", &device::exists_nt_dev},
  {"/dev/sdad6", BRACK(FH_SDAD | 6), "\\Device\\Harddisk29\\Partition6", &device::exists_nt_dev},
  {"/dev/sdad7", BRACK(FH_SDAD | 7), "\\Device\\Harddisk29\\Partition7", &device::exists_nt_dev},
  {"/dev/sdad8", BRACK(FH_SDAD | 8), "\\Device\\Harddisk29\\Partition8", &device::exists_nt_dev},
  {"/dev/sdad9", BRACK(FH_SDAD | 9), "\\Device\\Harddisk29\\Partition9", &device::exists_nt_dev},
  {"/dev/sdad10", BRACK(FH_SDAD | 10), "\\Device\\Harddisk29\\Partition10", &device::exists_nt_dev},
  {"/dev/sdad11", BRACK(FH_SDAD | 11), "\\Device\\Harddisk29\\Partition11", &device::exists_nt_dev},
  {"/dev/sdad12", BRACK(FH_SDAD | 12), "\\Device\\Harddisk29\\Partition12", &device::exists_nt_dev},
  {"/dev/sdad13", BRACK(FH_SDAD | 13), "\\Device\\Harddisk29\\Partition13", &device::exists_nt_dev},
  {"/dev/sdad14", BRACK(FH_SDAD | 14), "\\Device\\Harddisk29\\Partition14", &device::exists_nt_dev},
  {"/dev/sdad15", BRACK(FH_SDAD | 15), "\\Device\\Harddisk29\\Partition15", &device::exists_nt_dev},
  {"/dev/sdae1", BRACK(FH_SDAE | 1), "\\Device\\Harddisk30\\Partition1", &device::exists_nt_dev},
  {"/dev/sdae2", BRACK(FH_SDAE | 2), "\\Device\\Harddisk30\\Partition2", &device::exists_nt_dev},
  {"/dev/sdae3", BRACK(FH_SDAE | 3), "\\Device\\Harddisk30\\Partition3", &device::exists_nt_dev},
  {"/dev/sdae4", BRACK(FH_SDAE | 4), "\\Device\\Harddisk30\\Partition4", &device::exists_nt_dev},
  {"/dev/sdae5", BRACK(FH_SDAE | 5), "\\Device\\Harddisk30\\Partition5", &device::exists_nt_dev},
  {"/dev/sdae6", BRACK(FH_SDAE | 6), "\\Device\\Harddisk30\\Partition6", &device::exists_nt_dev},
  {"/dev/sdae7", BRACK(FH_SDAE | 7), "\\Device\\Harddisk30\\Partition7", &device::exists_nt_dev},
  {"/dev/sdae8", BRACK(FH_SDAE | 8), "\\Device\\Harddisk30\\Partition8", &device::exists_nt_dev},
  {"/dev/sdae9", BRACK(FH_SDAE | 9), "\\Device\\Harddisk30\\Partition9", &device::exists_nt_dev},
  {"/dev/sdae10", BRACK(FH_SDAE | 10), "\\Device\\Harddisk30\\Partition10", &device::exists_nt_dev},
  {"/dev/sdae11", BRACK(FH_SDAE | 11), "\\Device\\Harddisk30\\Partition11", &device::exists_nt_dev},
  {"/dev/sdae12", BRACK(FH_SDAE | 12), "\\Device\\Harddisk30\\Partition12", &device::exists_nt_dev},
  {"/dev/sdae13", BRACK(FH_SDAE | 13), "\\Device\\Harddisk30\\Partition13", &device::exists_nt_dev},
  {"/dev/sdae14", BRACK(FH_SDAE | 14), "\\Device\\Harddisk30\\Partition14", &device::exists_nt_dev},
  {"/dev/sdae15", BRACK(FH_SDAE | 15), "\\Device\\Harddisk30\\Partition15", &device::exists_nt_dev},
  {"/dev/sdaf1", BRACK(FH_SDAF | 1), "\\Device\\Harddisk31\\Partition1", &device::exists_nt_dev},
  {"/dev/sdaf2", BRACK(FH_SDAF | 2), "\\Device\\Harddisk31\\Partition2", &device::exists_nt_dev},
  {"/dev/sdaf3", BRACK(FH_SDAF | 3), "\\Device\\Harddisk31\\Partition3", &device::exists_nt_dev},
  {"/dev/sdaf4", BRACK(FH_SDAF | 4), "\\Device\\Harddisk31\\Partition4", &device::exists_nt_dev},
  {"/dev/sdaf5", BRACK(FH_SDAF | 5), "\\Device\\Harddisk31\\Partition5", &device::exists_nt_dev},
  {"/dev/sdaf6", BRACK(FH_SDAF | 6), "\\Device\\Harddisk31\\Partition6", &device::exists_nt_dev},
  {"/dev/sdaf7", BRACK(FH_SDAF | 7), "\\Device\\Harddisk31\\Partition7", &device::exists_nt_dev},
  {"/dev/sdaf8", BRACK(FH_SDAF | 8), "\\Device\\Harddisk31\\Partition8", &device::exists_nt_dev},
  {"/dev/sdaf9", BRACK(FH_SDAF | 9), "\\Device\\Harddisk31\\Partition9", &device::exists_nt_dev},
  {"/dev/sdaf10", BRACK(FH_SDAF | 10), "\\Device\\Harddisk31\\Partition10", &device::exists_nt_dev},
  {"/dev/sdaf11", BRACK(FH_SDAF | 11), "\\Device\\Harddisk31\\Partition11", &device::exists_nt_dev},
  {"/dev/sdaf12", BRACK(FH_SDAF | 12), "\\Device\\Harddisk31\\Partition12", &device::exists_nt_dev},
  {"/dev/sdaf13", BRACK(FH_SDAF | 13), "\\Device\\Harddisk31\\Partition13", &device::exists_nt_dev},
  {"/dev/sdaf14", BRACK(FH_SDAF | 14), "\\Device\\Harddisk31\\Partition14", &device::exists_nt_dev},
  {"/dev/sdaf15", BRACK(FH_SDAF | 15), "\\Device\\Harddisk31\\Partition15", &device::exists_nt_dev},
  {"/dev/sdag1", BRACK(FH_SDAG | 1), "\\Device\\Harddisk32\\Partition1", &device::exists_nt_dev},
  {"/dev/sdag2", BRACK(FH_SDAG | 2), "\\Device\\Harddisk32\\Partition2", &device::exists_nt_dev},
  {"/dev/sdag3", BRACK(FH_SDAG | 3), "\\Device\\Harddisk32\\Partition3", &device::exists_nt_dev},
  {"/dev/sdag4", BRACK(FH_SDAG | 4), "\\Device\\Harddisk32\\Partition4", &device::exists_nt_dev},
  {"/dev/sdag5", BRACK(FH_SDAG | 5), "\\Device\\Harddisk32\\Partition5", &device::exists_nt_dev},
  {"/dev/sdag6", BRACK(FH_SDAG | 6), "\\Device\\Harddisk32\\Partition6", &device::exists_nt_dev},
  {"/dev/sdag7", BRACK(FH_SDAG | 7), "\\Device\\Harddisk32\\Partition7", &device::exists_nt_dev},
  {"/dev/sdag8", BRACK(FH_SDAG | 8), "\\Device\\Harddisk32\\Partition8", &device::exists_nt_dev},
  {"/dev/sdag9", BRACK(FH_SDAG | 9), "\\Device\\Harddisk32\\Partition9", &device::exists_nt_dev},
  {"/dev/sdag10", BRACK(FH_SDAG | 10), "\\Device\\Harddisk32\\Partition10", &device::exists_nt_dev},
  {"/dev/sdag11", BRACK(FH_SDAG | 11), "\\Device\\Harddisk32\\Partition11", &device::exists_nt_dev},
  {"/dev/sdag12", BRACK(FH_SDAG | 12), "\\Device\\Harddisk32\\Partition12", &device::exists_nt_dev},
  {"/dev/sdag13", BRACK(FH_SDAG | 13), "\\Device\\Harddisk32\\Partition13", &device::exists_nt_dev},
  {"/dev/sdag14", BRACK(FH_SDAG | 14), "\\Device\\Harddisk32\\Partition14", &device::exists_nt_dev},
  {"/dev/sdag15", BRACK(FH_SDAG | 15), "\\Device\\Harddisk32\\Partition15", &device::exists_nt_dev},
  {"/dev/sdah1", BRACK(FH_SDAH | 1), "\\Device\\Harddisk33\\Partition1", &device::exists_nt_dev},
  {"/dev/sdah2", BRACK(FH_SDAH | 2), "\\Device\\Harddisk33\\Partition2", &device::exists_nt_dev},
  {"/dev/sdah3", BRACK(FH_SDAH | 3), "\\Device\\Harddisk33\\Partition3", &device::exists_nt_dev},
  {"/dev/sdah4", BRACK(FH_SDAH | 4), "\\Device\\Harddisk33\\Partition4", &device::exists_nt_dev},
  {"/dev/sdah5", BRACK(FH_SDAH | 5), "\\Device\\Harddisk33\\Partition5", &device::exists_nt_dev},
  {"/dev/sdah6", BRACK(FH_SDAH | 6), "\\Device\\Harddisk33\\Partition6", &device::exists_nt_dev},
  {"/dev/sdah7", BRACK(FH_SDAH | 7), "\\Device\\Harddisk33\\Partition7", &device::exists_nt_dev},
  {"/dev/sdah8", BRACK(FH_SDAH | 8), "\\Device\\Harddisk33\\Partition8", &device::exists_nt_dev},
  {"/dev/sdah9", BRACK(FH_SDAH | 9), "\\Device\\Harddisk33\\Partition9", &device::exists_nt_dev},
  {"/dev/sdah10", BRACK(FH_SDAH | 10), "\\Device\\Harddisk33\\Partition10", &device::exists_nt_dev},
  {"/dev/sdah11", BRACK(FH_SDAH | 11), "\\Device\\Harddisk33\\Partition11", &device::exists_nt_dev},
  {"/dev/sdah12", BRACK(FH_SDAH | 12), "\\Device\\Harddisk33\\Partition12", &device::exists_nt_dev},
  {"/dev/sdah13", BRACK(FH_SDAH | 13), "\\Device\\Harddisk33\\Partition13", &device::exists_nt_dev},
  {"/dev/sdah14", BRACK(FH_SDAH | 14), "\\Device\\Harddisk33\\Partition14", &device::exists_nt_dev},
  {"/dev/sdah15", BRACK(FH_SDAH | 15), "\\Device\\Harddisk33\\Partition15", &device::exists_nt_dev},
  {"/dev/sdai1", BRACK(FH_SDAI | 1), "\\Device\\Harddisk34\\Partition1", &device::exists_nt_dev},
  {"/dev/sdai2", BRACK(FH_SDAI | 2), "\\Device\\Harddisk34\\Partition2", &device::exists_nt_dev},
  {"/dev/sdai3", BRACK(FH_SDAI | 3), "\\Device\\Harddisk34\\Partition3", &device::exists_nt_dev},
  {"/dev/sdai4", BRACK(FH_SDAI | 4), "\\Device\\Harddisk34\\Partition4", &device::exists_nt_dev},
  {"/dev/sdai5", BRACK(FH_SDAI | 5), "\\Device\\Harddisk34\\Partition5", &device::exists_nt_dev},
  {"/dev/sdai6", BRACK(FH_SDAI | 6), "\\Device\\Harddisk34\\Partition6", &device::exists_nt_dev},
  {"/dev/sdai7", BRACK(FH_SDAI | 7), "\\Device\\Harddisk34\\Partition7", &device::exists_nt_dev},
  {"/dev/sdai8", BRACK(FH_SDAI | 8), "\\Device\\Harddisk34\\Partition8", &device::exists_nt_dev},
  {"/dev/sdai9", BRACK(FH_SDAI | 9), "\\Device\\Harddisk34\\Partition9", &device::exists_nt_dev},
  {"/dev/sdai10", BRACK(FH_SDAI | 10), "\\Device\\Harddisk34\\Partition10", &device::exists_nt_dev},
  {"/dev/sdai11", BRACK(FH_SDAI | 11), "\\Device\\Harddisk34\\Partition11", &device::exists_nt_dev},
  {"/dev/sdai12", BRACK(FH_SDAI | 12), "\\Device\\Harddisk34\\Partition12", &device::exists_nt_dev},
  {"/dev/sdai13", BRACK(FH_SDAI | 13), "\\Device\\Harddisk34\\Partition13", &device::exists_nt_dev},
  {"/dev/sdai14", BRACK(FH_SDAI | 14), "\\Device\\Harddisk34\\Partition14", &device::exists_nt_dev},
  {"/dev/sdai15", BRACK(FH_SDAI | 15), "\\Device\\Harddisk34\\Partition15", &device::exists_nt_dev},
  {"/dev/sdaj1", BRACK(FH_SDAJ | 1), "\\Device\\Harddisk35\\Partition1", &device::exists_nt_dev},
  {"/dev/sdaj2", BRACK(FH_SDAJ | 2), "\\Device\\Harddisk35\\Partition2", &device::exists_nt_dev},
  {"/dev/sdaj3", BRACK(FH_SDAJ | 3), "\\Device\\Harddisk35\\Partition3", &device::exists_nt_dev},
  {"/dev/sdaj4", BRACK(FH_SDAJ | 4), "\\Device\\Harddisk35\\Partition4", &device::exists_nt_dev},
  {"/dev/sdaj5", BRACK(FH_SDAJ | 5), "\\Device\\Harddisk35\\Partition5", &device::exists_nt_dev},
  {"/dev/sdaj6", BRACK(FH_SDAJ | 6), "\\Device\\Harddisk35\\Partition6", &device::exists_nt_dev},
  {"/dev/sdaj7", BRACK(FH_SDAJ | 7), "\\Device\\Harddisk35\\Partition7", &device::exists_nt_dev},
  {"/dev/sdaj8", BRACK(FH_SDAJ | 8), "\\Device\\Harddisk35\\Partition8", &device::exists_nt_dev},
  {"/dev/sdaj9", BRACK(FH_SDAJ | 9), "\\Device\\Harddisk35\\Partition9", &device::exists_nt_dev},
  {"/dev/sdaj10", BRACK(FH_SDAJ | 10), "\\Device\\Harddisk35\\Partition10", &device::exists_nt_dev},
  {"/dev/sdaj11", BRACK(FH_SDAJ | 11), "\\Device\\Harddisk35\\Partition11", &device::exists_nt_dev},
  {"/dev/sdaj12", BRACK(FH_SDAJ | 12), "\\Device\\Harddisk35\\Partition12", &device::exists_nt_dev},
  {"/dev/sdaj13", BRACK(FH_SDAJ | 13), "\\Device\\Harddisk35\\Partition13", &device::exists_nt_dev},
  {"/dev/sdaj14", BRACK(FH_SDAJ | 14), "\\Device\\Harddisk35\\Partition14", &device::exists_nt_dev},
  {"/dev/sdaj15", BRACK(FH_SDAJ | 15), "\\Device\\Harddisk35\\Partition15", &device::exists_nt_dev},
  {"/dev/sdak1", BRACK(FH_SDAK | 1), "\\Device\\Harddisk36\\Partition1", &device::exists_nt_dev},
  {"/dev/sdak2", BRACK(FH_SDAK | 2), "\\Device\\Harddisk36\\Partition2", &device::exists_nt_dev},
  {"/dev/sdak3", BRACK(FH_SDAK | 3), "\\Device\\Harddisk36\\Partition3", &device::exists_nt_dev},
  {"/dev/sdak4", BRACK(FH_SDAK | 4), "\\Device\\Harddisk36\\Partition4", &device::exists_nt_dev},
  {"/dev/sdak5", BRACK(FH_SDAK | 5), "\\Device\\Harddisk36\\Partition5", &device::exists_nt_dev},
  {"/dev/sdak6", BRACK(FH_SDAK | 6), "\\Device\\Harddisk36\\Partition6", &device::exists_nt_dev},
  {"/dev/sdak7", BRACK(FH_SDAK | 7), "\\Device\\Harddisk36\\Partition7", &device::exists_nt_dev},
  {"/dev/sdak8", BRACK(FH_SDAK | 8), "\\Device\\Harddisk36\\Partition8", &device::exists_nt_dev},
  {"/dev/sdak9", BRACK(FH_SDAK | 9), "\\Device\\Harddisk36\\Partition9", &device::exists_nt_dev},
  {"/dev/sdak10", BRACK(FH_SDAK | 10), "\\Device\\Harddisk36\\Partition10", &device::exists_nt_dev},
  {"/dev/sdak11", BRACK(FH_SDAK | 11), "\\Device\\Harddisk36\\Partition11", &device::exists_nt_dev},
  {"/dev/sdak12", BRACK(FH_SDAK | 12), "\\Device\\Harddisk36\\Partition12", &device::exists_nt_dev},
  {"/dev/sdak13", BRACK(FH_SDAK | 13), "\\Device\\Harddisk36\\Partition13", &device::exists_nt_dev},
  {"/dev/sdak14", BRACK(FH_SDAK | 14), "\\Device\\Harddisk36\\Partition14", &device::exists_nt_dev},
  {"/dev/sdak15", BRACK(FH_SDAK | 15), "\\Device\\Harddisk36\\Partition15", &device::exists_nt_dev},
  {"/dev/sdal1", BRACK(FH_SDAL | 1), "\\Device\\Harddisk37\\Partition1", &device::exists_nt_dev},
  {"/dev/sdal2", BRACK(FH_SDAL | 2), "\\Device\\Harddisk37\\Partition2", &device::exists_nt_dev},
  {"/dev/sdal3", BRACK(FH_SDAL | 3), "\\Device\\Harddisk37\\Partition3", &device::exists_nt_dev},
  {"/dev/sdal4", BRACK(FH_SDAL | 4), "\\Device\\Harddisk37\\Partition4", &device::exists_nt_dev},
  {"/dev/sdal5", BRACK(FH_SDAL | 5), "\\Device\\Harddisk37\\Partition5", &device::exists_nt_dev},
  {"/dev/sdal6", BRACK(FH_SDAL | 6), "\\Device\\Harddisk37\\Partition6", &device::exists_nt_dev},
  {"/dev/sdal7", BRACK(FH_SDAL | 7), "\\Device\\Harddisk37\\Partition7", &device::exists_nt_dev},
  {"/dev/sdal8", BRACK(FH_SDAL | 8), "\\Device\\Harddisk37\\Partition8", &device::exists_nt_dev},
  {"/dev/sdal9", BRACK(FH_SDAL | 9), "\\Device\\Harddisk37\\Partition9", &device::exists_nt_dev},
  {"/dev/sdal10", BRACK(FH_SDAL | 10), "\\Device\\Harddisk37\\Partition10", &device::exists_nt_dev},
  {"/dev/sdal11", BRACK(FH_SDAL | 11), "\\Device\\Harddisk37\\Partition11", &device::exists_nt_dev},
  {"/dev/sdal12", BRACK(FH_SDAL | 12), "\\Device\\Harddisk37\\Partition12", &device::exists_nt_dev},
  {"/dev/sdal13", BRACK(FH_SDAL | 13), "\\Device\\Harddisk37\\Partition13", &device::exists_nt_dev},
  {"/dev/sdal14", BRACK(FH_SDAL | 14), "\\Device\\Harddisk37\\Partition14", &device::exists_nt_dev},
  {"/dev/sdal15", BRACK(FH_SDAL | 15), "\\Device\\Harddisk37\\Partition15", &device::exists_nt_dev},
  {"/dev/sdam1", BRACK(FH_SDAM | 1), "\\Device\\Harddisk38\\Partition1", &device::exists_nt_dev},
  {"/dev/sdam2", BRACK(FH_SDAM | 2), "\\Device\\Harddisk38\\Partition2", &device::exists_nt_dev},
  {"/dev/sdam3", BRACK(FH_SDAM | 3), "\\Device\\Harddisk38\\Partition3", &device::exists_nt_dev},
  {"/dev/sdam4", BRACK(FH_SDAM | 4), "\\Device\\Harddisk38\\Partition4", &device::exists_nt_dev},
  {"/dev/sdam5", BRACK(FH_SDAM | 5), "\\Device\\Harddisk38\\Partition5", &device::exists_nt_dev},
  {"/dev/sdam6", BRACK(FH_SDAM | 6), "\\Device\\Harddisk38\\Partition6", &device::exists_nt_dev},
  {"/dev/sdam7", BRACK(FH_SDAM | 7), "\\Device\\Harddisk38\\Partition7", &device::exists_nt_dev},
  {"/dev/sdam8", BRACK(FH_SDAM | 8), "\\Device\\Harddisk38\\Partition8", &device::exists_nt_dev},
  {"/dev/sdam9", BRACK(FH_SDAM | 9), "\\Device\\Harddisk38\\Partition9", &device::exists_nt_dev},
  {"/dev/sdam10", BRACK(FH_SDAM | 10), "\\Device\\Harddisk38\\Partition10", &device::exists_nt_dev},
  {"/dev/sdam11", BRACK(FH_SDAM | 11), "\\Device\\Harddisk38\\Partition11", &device::exists_nt_dev},
  {"/dev/sdam12", BRACK(FH_SDAM | 12), "\\Device\\Harddisk38\\Partition12", &device::exists_nt_dev},
  {"/dev/sdam13", BRACK(FH_SDAM | 13), "\\Device\\Harddisk38\\Partition13", &device::exists_nt_dev},
  {"/dev/sdam14", BRACK(FH_SDAM | 14), "\\Device\\Harddisk38\\Partition14", &device::exists_nt_dev},
  {"/dev/sdam15", BRACK(FH_SDAM | 15), "\\Device\\Harddisk38\\Partition15", &device::exists_nt_dev},
  {"/dev/sdan1", BRACK(FH_SDAN | 1), "\\Device\\Harddisk39\\Partition1", &device::exists_nt_dev},
  {"/dev/sdan2", BRACK(FH_SDAN | 2), "\\Device\\Harddisk39\\Partition2", &device::exists_nt_dev},
  {"/dev/sdan3", BRACK(FH_SDAN | 3), "\\Device\\Harddisk39\\Partition3", &device::exists_nt_dev},
  {"/dev/sdan4", BRACK(FH_SDAN | 4), "\\Device\\Harddisk39\\Partition4", &device::exists_nt_dev},
  {"/dev/sdan5", BRACK(FH_SDAN | 5), "\\Device\\Harddisk39\\Partition5", &device::exists_nt_dev},
  {"/dev/sdan6", BRACK(FH_SDAN | 6), "\\Device\\Harddisk39\\Partition6", &device::exists_nt_dev},
  {"/dev/sdan7", BRACK(FH_SDAN | 7), "\\Device\\Harddisk39\\Partition7", &device::exists_nt_dev},
  {"/dev/sdan8", BRACK(FH_SDAN | 8), "\\Device\\Harddisk39\\Partition8", &device::exists_nt_dev},
  {"/dev/sdan9", BRACK(FH_SDAN | 9), "\\Device\\Harddisk39\\Partition9", &device::exists_nt_dev},
  {"/dev/sdan10", BRACK(FH_SDAN | 10), "\\Device\\Harddisk39\\Partition10", &device::exists_nt_dev},
  {"/dev/sdan11", BRACK(FH_SDAN | 11), "\\Device\\Harddisk39\\Partition11", &device::exists_nt_dev},
  {"/dev/sdan12", BRACK(FH_SDAN | 12), "\\Device\\Harddisk39\\Partition12", &device::exists_nt_dev},
  {"/dev/sdan13", BRACK(FH_SDAN | 13), "\\Device\\Harddisk39\\Partition13", &device::exists_nt_dev},
  {"/dev/sdan14", BRACK(FH_SDAN | 14), "\\Device\\Harddisk39\\Partition14", &device::exists_nt_dev},
  {"/dev/sdan15", BRACK(FH_SDAN | 15), "\\Device\\Harddisk39\\Partition15", &device::exists_nt_dev},
  {"/dev/sdao1", BRACK(FH_SDAO | 1), "\\Device\\Harddisk40\\Partition1", &device::exists_nt_dev},
  {"/dev/sdao2", BRACK(FH_SDAO | 2), "\\Device\\Harddisk40\\Partition2", &device::exists_nt_dev},
  {"/dev/sdao3", BRACK(FH_SDAO | 3), "\\Device\\Harddisk40\\Partition3", &device::exists_nt_dev},
  {"/dev/sdao4", BRACK(FH_SDAO | 4), "\\Device\\Harddisk40\\Partition4", &device::exists_nt_dev},
  {"/dev/sdao5", BRACK(FH_SDAO | 5), "\\Device\\Harddisk40\\Partition5", &device::exists_nt_dev},
  {"/dev/sdao6", BRACK(FH_SDAO | 6), "\\Device\\Harddisk40\\Partition6", &device::exists_nt_dev},
  {"/dev/sdao7", BRACK(FH_SDAO | 7), "\\Device\\Harddisk40\\Partition7", &device::exists_nt_dev},
  {"/dev/sdao8", BRACK(FH_SDAO | 8), "\\Device\\Harddisk40\\Partition8", &device::exists_nt_dev},
  {"/dev/sdao9", BRACK(FH_SDAO | 9), "\\Device\\Harddisk40\\Partition9", &device::exists_nt_dev},
  {"/dev/sdao10", BRACK(FH_SDAO | 10), "\\Device\\Harddisk40\\Partition10", &device::exists_nt_dev},
  {"/dev/sdao11", BRACK(FH_SDAO | 11), "\\Device\\Harddisk40\\Partition11", &device::exists_nt_dev},
  {"/dev/sdao12", BRACK(FH_SDAO | 12), "\\Device\\Harddisk40\\Partition12", &device::exists_nt_dev},
  {"/dev/sdao13", BRACK(FH_SDAO | 13), "\\Device\\Harddisk40\\Partition13", &device::exists_nt_dev},
  {"/dev/sdao14", BRACK(FH_SDAO | 14), "\\Device\\Harddisk40\\Partition14", &device::exists_nt_dev},
  {"/dev/sdao15", BRACK(FH_SDAO | 15), "\\Device\\Harddisk40\\Partition15", &device::exists_nt_dev},
  {"/dev/sdap1", BRACK(FH_SDAP | 1), "\\Device\\Harddisk41\\Partition1", &device::exists_nt_dev},
  {"/dev/sdap2", BRACK(FH_SDAP | 2), "\\Device\\Harddisk41\\Partition2", &device::exists_nt_dev},
  {"/dev/sdap3", BRACK(FH_SDAP | 3), "\\Device\\Harddisk41\\Partition3", &device::exists_nt_dev},
  {"/dev/sdap4", BRACK(FH_SDAP | 4), "\\Device\\Harddisk41\\Partition4", &device::exists_nt_dev},
  {"/dev/sdap5", BRACK(FH_SDAP | 5), "\\Device\\Harddisk41\\Partition5", &device::exists_nt_dev},
  {"/dev/sdap6", BRACK(FH_SDAP | 6), "\\Device\\Harddisk41\\Partition6", &device::exists_nt_dev},
  {"/dev/sdap7", BRACK(FH_SDAP | 7), "\\Device\\Harddisk41\\Partition7", &device::exists_nt_dev},
  {"/dev/sdap8", BRACK(FH_SDAP | 8), "\\Device\\Harddisk41\\Partition8", &device::exists_nt_dev},
  {"/dev/sdap9", BRACK(FH_SDAP | 9), "\\Device\\Harddisk41\\Partition9", &device::exists_nt_dev},
  {"/dev/sdap10", BRACK(FH_SDAP | 10), "\\Device\\Harddisk41\\Partition10", &device::exists_nt_dev},
  {"/dev/sdap11", BRACK(FH_SDAP | 11), "\\Device\\Harddisk41\\Partition11", &device::exists_nt_dev},
  {"/dev/sdap12", BRACK(FH_SDAP | 12), "\\Device\\Harddisk41\\Partition12", &device::exists_nt_dev},
  {"/dev/sdap13", BRACK(FH_SDAP | 13), "\\Device\\Harddisk41\\Partition13", &device::exists_nt_dev},
  {"/dev/sdap14", BRACK(FH_SDAP | 14), "\\Device\\Harddisk41\\Partition14", &device::exists_nt_dev},
  {"/dev/sdap15", BRACK(FH_SDAP | 15), "\\Device\\Harddisk41\\Partition15", &device::exists_nt_dev},
  {"/dev/sdaq1", BRACK(FH_SDAQ | 1), "\\Device\\Harddisk42\\Partition1", &device::exists_nt_dev},
  {"/dev/sdaq2", BRACK(FH_SDAQ | 2), "\\Device\\Harddisk42\\Partition2", &device::exists_nt_dev},
  {"/dev/sdaq3", BRACK(FH_SDAQ | 3), "\\Device\\Harddisk42\\Partition3", &device::exists_nt_dev},
  {"/dev/sdaq4", BRACK(FH_SDAQ | 4), "\\Device\\Harddisk42\\Partition4", &device::exists_nt_dev},
  {"/dev/sdaq5", BRACK(FH_SDAQ | 5), "\\Device\\Harddisk42\\Partition5", &device::exists_nt_dev},
  {"/dev/sdaq6", BRACK(FH_SDAQ | 6), "\\Device\\Harddisk42\\Partition6", &device::exists_nt_dev},
  {"/dev/sdaq7", BRACK(FH_SDAQ | 7), "\\Device\\Harddisk42\\Partition7", &device::exists_nt_dev},
  {"/dev/sdaq8", BRACK(FH_SDAQ | 8), "\\Device\\Harddisk42\\Partition8", &device::exists_nt_dev},
  {"/dev/sdaq9", BRACK(FH_SDAQ | 9), "\\Device\\Harddisk42\\Partition9", &device::exists_nt_dev},
  {"/dev/sdaq10", BRACK(FH_SDAQ | 10), "\\Device\\Harddisk42\\Partition10", &device::exists_nt_dev},
  {"/dev/sdaq11", BRACK(FH_SDAQ | 11), "\\Device\\Harddisk42\\Partition11", &device::exists_nt_dev},
  {"/dev/sdaq12", BRACK(FH_SDAQ | 12), "\\Device\\Harddisk42\\Partition12", &device::exists_nt_dev},
  {"/dev/sdaq13", BRACK(FH_SDAQ | 13), "\\Device\\Harddisk42\\Partition13", &device::exists_nt_dev},
  {"/dev/sdaq14", BRACK(FH_SDAQ | 14), "\\Device\\Harddisk42\\Partition14", &device::exists_nt_dev},
  {"/dev/sdaq15", BRACK(FH_SDAQ | 15), "\\Device\\Harddisk42\\Partition15", &device::exists_nt_dev},
  {"/dev/sdar1", BRACK(FH_SDAR | 1), "\\Device\\Harddisk43\\Partition1", &device::exists_nt_dev},
  {"/dev/sdar2", BRACK(FH_SDAR | 2), "\\Device\\Harddisk43\\Partition2", &device::exists_nt_dev},
  {"/dev/sdar3", BRACK(FH_SDAR | 3), "\\Device\\Harddisk43\\Partition3", &device::exists_nt_dev},
  {"/dev/sdar4", BRACK(FH_SDAR | 4), "\\Device\\Harddisk43\\Partition4", &device::exists_nt_dev},
  {"/dev/sdar5", BRACK(FH_SDAR | 5), "\\Device\\Harddisk43\\Partition5", &device::exists_nt_dev},
  {"/dev/sdar6", BRACK(FH_SDAR | 6), "\\Device\\Harddisk43\\Partition6", &device::exists_nt_dev},
  {"/dev/sdar7", BRACK(FH_SDAR | 7), "\\Device\\Harddisk43\\Partition7", &device::exists_nt_dev},
  {"/dev/sdar8", BRACK(FH_SDAR | 8), "\\Device\\Harddisk43\\Partition8", &device::exists_nt_dev},
  {"/dev/sdar9", BRACK(FH_SDAR | 9), "\\Device\\Harddisk43\\Partition9", &device::exists_nt_dev},
  {"/dev/sdar10", BRACK(FH_SDAR | 10), "\\Device\\Harddisk43\\Partition10", &device::exists_nt_dev},
  {"/dev/sdar11", BRACK(FH_SDAR | 11), "\\Device\\Harddisk43\\Partition11", &device::exists_nt_dev},
  {"/dev/sdar12", BRACK(FH_SDAR | 12), "\\Device\\Harddisk43\\Partition12", &device::exists_nt_dev},
  {"/dev/sdar13", BRACK(FH_SDAR | 13), "\\Device\\Harddisk43\\Partition13", &device::exists_nt_dev},
  {"/dev/sdar14", BRACK(FH_SDAR | 14), "\\Device\\Harddisk43\\Partition14", &device::exists_nt_dev},
  {"/dev/sdar15", BRACK(FH_SDAR | 15), "\\Device\\Harddisk43\\Partition15", &device::exists_nt_dev},
  {"/dev/sdas1", BRACK(FH_SDAS | 1), "\\Device\\Harddisk44\\Partition1", &device::exists_nt_dev},
  {"/dev/sdas2", BRACK(FH_SDAS | 2), "\\Device\\Harddisk44\\Partition2", &device::exists_nt_dev},
  {"/dev/sdas3", BRACK(FH_SDAS | 3), "\\Device\\Harddisk44\\Partition3", &device::exists_nt_dev},
  {"/dev/sdas4", BRACK(FH_SDAS | 4), "\\Device\\Harddisk44\\Partition4", &device::exists_nt_dev},
  {"/dev/sdas5", BRACK(FH_SDAS | 5), "\\Device\\Harddisk44\\Partition5", &device::exists_nt_dev},
  {"/dev/sdas6", BRACK(FH_SDAS | 6), "\\Device\\Harddisk44\\Partition6", &device::exists_nt_dev},
  {"/dev/sdas7", BRACK(FH_SDAS | 7), "\\Device\\Harddisk44\\Partition7", &device::exists_nt_dev},
  {"/dev/sdas8", BRACK(FH_SDAS | 8), "\\Device\\Harddisk44\\Partition8", &device::exists_nt_dev},
  {"/dev/sdas9", BRACK(FH_SDAS | 9), "\\Device\\Harddisk44\\Partition9", &device::exists_nt_dev},
  {"/dev/sdas10", BRACK(FH_SDAS | 10), "\\Device\\Harddisk44\\Partition10", &device::exists_nt_dev},
  {"/dev/sdas11", BRACK(FH_SDAS | 11), "\\Device\\Harddisk44\\Partition11", &device::exists_nt_dev},
  {"/dev/sdas12", BRACK(FH_SDAS | 12), "\\Device\\Harddisk44\\Partition12", &device::exists_nt_dev},
  {"/dev/sdas13", BRACK(FH_SDAS | 13), "\\Device\\Harddisk44\\Partition13", &device::exists_nt_dev},
  {"/dev/sdas14", BRACK(FH_SDAS | 14), "\\Device\\Harddisk44\\Partition14", &device::exists_nt_dev},
  {"/dev/sdas15", BRACK(FH_SDAS | 15), "\\Device\\Harddisk44\\Partition15", &device::exists_nt_dev},
  {"/dev/sdat1", BRACK(FH_SDAT | 1), "\\Device\\Harddisk45\\Partition1", &device::exists_nt_dev},
  {"/dev/sdat2", BRACK(FH_SDAT | 2), "\\Device\\Harddisk45\\Partition2", &device::exists_nt_dev},
  {"/dev/sdat3", BRACK(FH_SDAT | 3), "\\Device\\Harddisk45\\Partition3", &device::exists_nt_dev},
  {"/dev/sdat4", BRACK(FH_SDAT | 4), "\\Device\\Harddisk45\\Partition4", &device::exists_nt_dev},
  {"/dev/sdat5", BRACK(FH_SDAT | 5), "\\Device\\Harddisk45\\Partition5", &device::exists_nt_dev},
  {"/dev/sdat6", BRACK(FH_SDAT | 6), "\\Device\\Harddisk45\\Partition6", &device::exists_nt_dev},
  {"/dev/sdat7", BRACK(FH_SDAT | 7), "\\Device\\Harddisk45\\Partition7", &device::exists_nt_dev},
  {"/dev/sdat8", BRACK(FH_SDAT | 8), "\\Device\\Harddisk45\\Partition8", &device::exists_nt_dev},
  {"/dev/sdat9", BRACK(FH_SDAT | 9), "\\Device\\Harddisk45\\Partition9", &device::exists_nt_dev},
  {"/dev/sdat10", BRACK(FH_SDAT | 10), "\\Device\\Harddisk45\\Partition10", &device::exists_nt_dev},
  {"/dev/sdat11", BRACK(FH_SDAT | 11), "\\Device\\Harddisk45\\Partition11", &device::exists_nt_dev},
  {"/dev/sdat12", BRACK(FH_SDAT | 12), "\\Device\\Harddisk45\\Partition12", &device::exists_nt_dev},
  {"/dev/sdat13", BRACK(FH_SDAT | 13), "\\Device\\Harddisk45\\Partition13", &device::exists_nt_dev},
  {"/dev/sdat14", BRACK(FH_SDAT | 14), "\\Device\\Harddisk45\\Partition14", &device::exists_nt_dev},
  {"/dev/sdat15", BRACK(FH_SDAT | 15), "\\Device\\Harddisk45\\Partition15", &device::exists_nt_dev},
  {"/dev/sdau1", BRACK(FH_SDAU | 1), "\\Device\\Harddisk46\\Partition1", &device::exists_nt_dev},
  {"/dev/sdau2", BRACK(FH_SDAU | 2), "\\Device\\Harddisk46\\Partition2", &device::exists_nt_dev},
  {"/dev/sdau3", BRACK(FH_SDAU | 3), "\\Device\\Harddisk46\\Partition3", &device::exists_nt_dev},
  {"/dev/sdau4", BRACK(FH_SDAU | 4), "\\Device\\Harddisk46\\Partition4", &device::exists_nt_dev},
  {"/dev/sdau5", BRACK(FH_SDAU | 5), "\\Device\\Harddisk46\\Partition5", &device::exists_nt_dev},
  {"/dev/sdau6", BRACK(FH_SDAU | 6), "\\Device\\Harddisk46\\Partition6", &device::exists_nt_dev},
  {"/dev/sdau7", BRACK(FH_SDAU | 7), "\\Device\\Harddisk46\\Partition7", &device::exists_nt_dev},
  {"/dev/sdau8", BRACK(FH_SDAU | 8), "\\Device\\Harddisk46\\Partition8", &device::exists_nt_dev},
  {"/dev/sdau9", BRACK(FH_SDAU | 9), "\\Device\\Harddisk46\\Partition9", &device::exists_nt_dev},
  {"/dev/sdau10", BRACK(FH_SDAU | 10), "\\Device\\Harddisk46\\Partition10", &device::exists_nt_dev},
  {"/dev/sdau11", BRACK(FH_SDAU | 11), "\\Device\\Harddisk46\\Partition11", &device::exists_nt_dev},
  {"/dev/sdau12", BRACK(FH_SDAU | 12), "\\Device\\Harddisk46\\Partition12", &device::exists_nt_dev},
  {"/dev/sdau13", BRACK(FH_SDAU | 13), "\\Device\\Harddisk46\\Partition13", &device::exists_nt_dev},
  {"/dev/sdau14", BRACK(FH_SDAU | 14), "\\Device\\Harddisk46\\Partition14", &device::exists_nt_dev},
  {"/dev/sdau15", BRACK(FH_SDAU | 15), "\\Device\\Harddisk46\\Partition15", &device::exists_nt_dev},
  {"/dev/sdav1", BRACK(FH_SDAV | 1), "\\Device\\Harddisk47\\Partition1", &device::exists_nt_dev},
  {"/dev/sdav2", BRACK(FH_SDAV | 2), "\\Device\\Harddisk47\\Partition2", &device::exists_nt_dev},
  {"/dev/sdav3", BRACK(FH_SDAV | 3), "\\Device\\Harddisk47\\Partition3", &device::exists_nt_dev},
  {"/dev/sdav4", BRACK(FH_SDAV | 4), "\\Device\\Harddisk47\\Partition4", &device::exists_nt_dev},
  {"/dev/sdav5", BRACK(FH_SDAV | 5), "\\Device\\Harddisk47\\Partition5", &device::exists_nt_dev},
  {"/dev/sdav6", BRACK(FH_SDAV | 6), "\\Device\\Harddisk47\\Partition6", &device::exists_nt_dev},
  {"/dev/sdav7", BRACK(FH_SDAV | 7), "\\Device\\Harddisk47\\Partition7", &device::exists_nt_dev},
  {"/dev/sdav8", BRACK(FH_SDAV | 8), "\\Device\\Harddisk47\\Partition8", &device::exists_nt_dev},
  {"/dev/sdav9", BRACK(FH_SDAV | 9), "\\Device\\Harddisk47\\Partition9", &device::exists_nt_dev},
  {"/dev/sdav10", BRACK(FH_SDAV | 10), "\\Device\\Harddisk47\\Partition10", &device::exists_nt_dev},
  {"/dev/sdav11", BRACK(FH_SDAV | 11), "\\Device\\Harddisk47\\Partition11", &device::exists_nt_dev},
  {"/dev/sdav12", BRACK(FH_SDAV | 12), "\\Device\\Harddisk47\\Partition12", &device::exists_nt_dev},
  {"/dev/sdav13", BRACK(FH_SDAV | 13), "\\Device\\Harddisk47\\Partition13", &device::exists_nt_dev},
  {"/dev/sdav14", BRACK(FH_SDAV | 14), "\\Device\\Harddisk47\\Partition14", &device::exists_nt_dev},
  {"/dev/sdav15", BRACK(FH_SDAV | 15), "\\Device\\Harddisk47\\Partition15", &device::exists_nt_dev},
  {"/dev/sdaw1", BRACK(FH_SDAW | 1), "\\Device\\Harddisk48\\Partition1", &device::exists_nt_dev},
  {"/dev/sdaw2", BRACK(FH_SDAW | 2), "\\Device\\Harddisk48\\Partition2", &device::exists_nt_dev},
  {"/dev/sdaw3", BRACK(FH_SDAW | 3), "\\Device\\Harddisk48\\Partition3", &device::exists_nt_dev},
  {"/dev/sdaw4", BRACK(FH_SDAW | 4), "\\Device\\Harddisk48\\Partition4", &device::exists_nt_dev},
  {"/dev/sdaw5", BRACK(FH_SDAW | 5), "\\Device\\Harddisk48\\Partition5", &device::exists_nt_dev},
  {"/dev/sdaw6", BRACK(FH_SDAW | 6), "\\Device\\Harddisk48\\Partition6", &device::exists_nt_dev},
  {"/dev/sdaw7", BRACK(FH_SDAW | 7), "\\Device\\Harddisk48\\Partition7", &device::exists_nt_dev},
  {"/dev/sdaw8", BRACK(FH_SDAW | 8), "\\Device\\Harddisk48\\Partition8", &device::exists_nt_dev},
  {"/dev/sdaw9", BRACK(FH_SDAW | 9), "\\Device\\Harddisk48\\Partition9", &device::exists_nt_dev},
  {"/dev/sdaw10", BRACK(FH_SDAW | 10), "\\Device\\Harddisk48\\Partition10", &device::exists_nt_dev},
  {"/dev/sdaw11", BRACK(FH_SDAW | 11), "\\Device\\Harddisk48\\Partition11", &device::exists_nt_dev},
  {"/dev/sdaw12", BRACK(FH_SDAW | 12), "\\Device\\Harddisk48\\Partition12", &device::exists_nt_dev},
  {"/dev/sdaw13", BRACK(FH_SDAW | 13), "\\Device\\Harddisk48\\Partition13", &device::exists_nt_dev},
  {"/dev/sdaw14", BRACK(FH_SDAW | 14), "\\Device\\Harddisk48\\Partition14", &device::exists_nt_dev},
  {"/dev/sdaw15", BRACK(FH_SDAW | 15), "\\Device\\Harddisk48\\Partition15", &device::exists_nt_dev},
  {"/dev/sdax1", BRACK(FH_SDAX | 1), "\\Device\\Harddisk49\\Partition1", &device::exists_nt_dev},
  {"/dev/sdax2", BRACK(FH_SDAX | 2), "\\Device\\Harddisk49\\Partition2", &device::exists_nt_dev},
  {"/dev/sdax3", BRACK(FH_SDAX | 3), "\\Device\\Harddisk49\\Partition3", &device::exists_nt_dev},
  {"/dev/sdax4", BRACK(FH_SDAX | 4), "\\Device\\Harddisk49\\Partition4", &device::exists_nt_dev},
  {"/dev/sdax5", BRACK(FH_SDAX | 5), "\\Device\\Harddisk49\\Partition5", &device::exists_nt_dev},
  {"/dev/sdax6", BRACK(FH_SDAX | 6), "\\Device\\Harddisk49\\Partition6", &device::exists_nt_dev},
  {"/dev/sdax7", BRACK(FH_SDAX | 7), "\\Device\\Harddisk49\\Partition7", &device::exists_nt_dev},
  {"/dev/sdax8", BRACK(FH_SDAX | 8), "\\Device\\Harddisk49\\Partition8", &device::exists_nt_dev},
  {"/dev/sdax9", BRACK(FH_SDAX | 9), "\\Device\\Harddisk49\\Partition9", &device::exists_nt_dev},
  {"/dev/sdax10", BRACK(FH_SDAX | 10), "\\Device\\Harddisk49\\Partition10", &device::exists_nt_dev},
  {"/dev/sdax11", BRACK(FH_SDAX | 11), "\\Device\\Harddisk49\\Partition11", &device::exists_nt_dev},
  {"/dev/sdax12", BRACK(FH_SDAX | 12), "\\Device\\Harddisk49\\Partition12", &device::exists_nt_dev},
  {"/dev/sdax13", BRACK(FH_SDAX | 13), "\\Device\\Harddisk49\\Partition13", &device::exists_nt_dev},
  {"/dev/sdax14", BRACK(FH_SDAX | 14), "\\Device\\Harddisk49\\Partition14", &device::exists_nt_dev},
  {"/dev/sdax15", BRACK(FH_SDAX | 15), "\\Device\\Harddisk49\\Partition15", &device::exists_nt_dev},
  {"/dev/sday1", BRACK(FH_SDAY | 1), "\\Device\\Harddisk50\\Partition1", &device::exists_nt_dev},
  {"/dev/sday2", BRACK(FH_SDAY | 2), "\\Device\\Harddisk50\\Partition2", &device::exists_nt_dev},
  {"/dev/sday3", BRACK(FH_SDAY | 3), "\\Device\\Harddisk50\\Partition3", &device::exists_nt_dev},
  {"/dev/sday4", BRACK(FH_SDAY | 4), "\\Device\\Harddisk50\\Partition4", &device::exists_nt_dev},
  {"/dev/sday5", BRACK(FH_SDAY | 5), "\\Device\\Harddisk50\\Partition5", &device::exists_nt_dev},
  {"/dev/sday6", BRACK(FH_SDAY | 6), "\\Device\\Harddisk50\\Partition6", &device::exists_nt_dev},
  {"/dev/sday7", BRACK(FH_SDAY | 7), "\\Device\\Harddisk50\\Partition7", &device::exists_nt_dev},
  {"/dev/sday8", BRACK(FH_SDAY | 8), "\\Device\\Harddisk50\\Partition8", &device::exists_nt_dev},
  {"/dev/sday9", BRACK(FH_SDAY | 9), "\\Device\\Harddisk50\\Partition9", &device::exists_nt_dev},
  {"/dev/sday10", BRACK(FH_SDAY | 10), "\\Device\\Harddisk50\\Partition10", &device::exists_nt_dev},
  {"/dev/sday11", BRACK(FH_SDAY | 11), "\\Device\\Harddisk50\\Partition11", &device::exists_nt_dev},
  {"/dev/sday12", BRACK(FH_SDAY | 12), "\\Device\\Harddisk50\\Partition12", &device::exists_nt_dev},
  {"/dev/sday13", BRACK(FH_SDAY | 13), "\\Device\\Harddisk50\\Partition13", &device::exists_nt_dev},
  {"/dev/sday14", BRACK(FH_SDAY | 14), "\\Device\\Harddisk50\\Partition14", &device::exists_nt_dev},
  {"/dev/sday15", BRACK(FH_SDAY | 15), "\\Device\\Harddisk50\\Partition15", &device::exists_nt_dev},
  {"/dev/sdaz1", BRACK(FH_SDAZ | 1), "\\Device\\Harddisk51\\Partition1", &device::exists_nt_dev},
  {"/dev/sdaz2", BRACK(FH_SDAZ | 2), "\\Device\\Harddisk51\\Partition2", &device::exists_nt_dev},
  {"/dev/sdaz3", BRACK(FH_SDAZ | 3), "\\Device\\Harddisk51\\Partition3", &device::exists_nt_dev},
  {"/dev/sdaz4", BRACK(FH_SDAZ | 4), "\\Device\\Harddisk51\\Partition4", &device::exists_nt_dev},
  {"/dev/sdaz5", BRACK(FH_SDAZ | 5), "\\Device\\Harddisk51\\Partition5", &device::exists_nt_dev},
  {"/dev/sdaz6", BRACK(FH_SDAZ | 6), "\\Device\\Harddisk51\\Partition6", &device::exists_nt_dev},
  {"/dev/sdaz7", BRACK(FH_SDAZ | 7), "\\Device\\Harddisk51\\Partition7", &device::exists_nt_dev},
  {"/dev/sdaz8", BRACK(FH_SDAZ | 8), "\\Device\\Harddisk51\\Partition8", &device::exists_nt_dev},
  {"/dev/sdaz9", BRACK(FH_SDAZ | 9), "\\Device\\Harddisk51\\Partition9", &device::exists_nt_dev},
  {"/dev/sdaz10", BRACK(FH_SDAZ | 10), "\\Device\\Harddisk51\\Partition10", &device::exists_nt_dev},
  {"/dev/sdaz11", BRACK(FH_SDAZ | 11), "\\Device\\Harddisk51\\Partition11", &device::exists_nt_dev},
  {"/dev/sdaz12", BRACK(FH_SDAZ | 12), "\\Device\\Harddisk51\\Partition12", &device::exists_nt_dev},
  {"/dev/sdaz13", BRACK(FH_SDAZ | 13), "\\Device\\Harddisk51\\Partition13", &device::exists_nt_dev},
  {"/dev/sdaz14", BRACK(FH_SDAZ | 14), "\\Device\\Harddisk51\\Partition14", &device::exists_nt_dev},
  {"/dev/sdaz15", BRACK(FH_SDAZ | 15), "\\Device\\Harddisk51\\Partition15", &device::exists_nt_dev},
  {"/dev/sdba", BRACK(FH_SDBA), "\\Device\\Harddisk52\\Partition0", &device::exists_nt_dev},
  {"/dev/sdbb", BRACK(FH_SDBB), "\\Device\\Harddisk53\\Partition0", &device::exists_nt_dev},
  {"/dev/sdbc", BRACK(FH_SDBC), "\\Device\\Harddisk54\\Partition0", &device::exists_nt_dev},
  {"/dev/sdbd", BRACK(FH_SDBD), "\\Device\\Harddisk55\\Partition0", &device::exists_nt_dev},
  {"/dev/sdbe", BRACK(FH_SDBE), "\\Device\\Harddisk56\\Partition0", &device::exists_nt_dev},
  {"/dev/sdbf", BRACK(FH_SDBF), "\\Device\\Harddisk57\\Partition0", &device::exists_nt_dev},
  {"/dev/sdbg", BRACK(FH_SDBG), "\\Device\\Harddisk58\\Partition0", &device::exists_nt_dev},
  {"/dev/sdbh", BRACK(FH_SDBH), "\\Device\\Harddisk59\\Partition0", &device::exists_nt_dev},
  {"/dev/sdbi", BRACK(FH_SDBI), "\\Device\\Harddisk60\\Partition0", &device::exists_nt_dev},
  {"/dev/sdbj", BRACK(FH_SDBJ), "\\Device\\Harddisk61\\Partition0", &device::exists_nt_dev},
  {"/dev/sdbk", BRACK(FH_SDBK), "\\Device\\Harddisk62\\Partition0", &device::exists_nt_dev},
  {"/dev/sdbl", BRACK(FH_SDBL), "\\Device\\Harddisk63\\Partition0", &device::exists_nt_dev},
  {"/dev/sdbm", BRACK(FH_SDBM), "\\Device\\Harddisk64\\Partition0", &device::exists_nt_dev},
  {"/dev/sdbn", BRACK(FH_SDBN), "\\Device\\Harddisk65\\Partition0", &device::exists_nt_dev},
  {"/dev/sdbo", BRACK(FH_SDBO), "\\Device\\Harddisk66\\Partition0", &device::exists_nt_dev},
  {"/dev/sdbp", BRACK(FH_SDBP), "\\Device\\Harddisk67\\Partition0", &device::exists_nt_dev},
  {"/dev/sdbq", BRACK(FH_SDBQ), "\\Device\\Harddisk68\\Partition0", &device::exists_nt_dev},
  {"/dev/sdbr", BRACK(FH_SDBR), "\\Device\\Harddisk69\\Partition0", &device::exists_nt_dev},
  {"/dev/sdbs", BRACK(FH_SDBS), "\\Device\\Harddisk70\\Partition0", &device::exists_nt_dev},
  {"/dev/sdbt", BRACK(FH_SDBT), "\\Device\\Harddisk71\\Partition0", &device::exists_nt_dev},
  {"/dev/sdbu", BRACK(FH_SDBU), "\\Device\\Harddisk72\\Partition0", &device::exists_nt_dev},
  {"/dev/sdbv", BRACK(FH_SDBV), "\\Device\\Harddisk73\\Partition0", &device::exists_nt_dev},
  {"/dev/sdbw", BRACK(FH_SDBW), "\\Device\\Harddisk74\\Partition0", &device::exists_nt_dev},
  {"/dev/sdbx", BRACK(FH_SDBX), "\\Device\\Harddisk75\\Partition0", &device::exists_nt_dev},
  {"/dev/sdby", BRACK(FH_SDBY), "\\Device\\Harddisk76\\Partition0", &device::exists_nt_dev},
  {"/dev/sdbz", BRACK(FH_SDBZ), "\\Device\\Harddisk77\\Partition0", &device::exists_nt_dev},
  {"/dev/sdba1", BRACK(FH_SDBA | 1), "\\Device\\Harddisk52\\Partition1", &device::exists_nt_dev},
  {"/dev/sdba2", BRACK(FH_SDBA | 2), "\\Device\\Harddisk52\\Partition2", &device::exists_nt_dev},
  {"/dev/sdba3", BRACK(FH_SDBA | 3), "\\Device\\Harddisk52\\Partition3", &device::exists_nt_dev},
  {"/dev/sdba4", BRACK(FH_SDBA | 4), "\\Device\\Harddisk52\\Partition4", &device::exists_nt_dev},
  {"/dev/sdba5", BRACK(FH_SDBA | 5), "\\Device\\Harddisk52\\Partition5", &device::exists_nt_dev},
  {"/dev/sdba6", BRACK(FH_SDBA | 6), "\\Device\\Harddisk52\\Partition6", &device::exists_nt_dev},
  {"/dev/sdba7", BRACK(FH_SDBA | 7), "\\Device\\Harddisk52\\Partition7", &device::exists_nt_dev},
  {"/dev/sdba8", BRACK(FH_SDBA | 8), "\\Device\\Harddisk52\\Partition8", &device::exists_nt_dev},
  {"/dev/sdba9", BRACK(FH_SDBA | 9), "\\Device\\Harddisk52\\Partition9", &device::exists_nt_dev},
  {"/dev/sdba10", BRACK(FH_SDBA | 10), "\\Device\\Harddisk52\\Partition10", &device::exists_nt_dev},
  {"/dev/sdba11", BRACK(FH_SDBA | 11), "\\Device\\Harddisk52\\Partition11", &device::exists_nt_dev},
  {"/dev/sdba12", BRACK(FH_SDBA | 12), "\\Device\\Harddisk52\\Partition12", &device::exists_nt_dev},
  {"/dev/sdba13", BRACK(FH_SDBA | 13), "\\Device\\Harddisk52\\Partition13", &device::exists_nt_dev},
  {"/dev/sdba14", BRACK(FH_SDBA | 14), "\\Device\\Harddisk52\\Partition14", &device::exists_nt_dev},
  {"/dev/sdba15", BRACK(FH_SDBA | 15), "\\Device\\Harddisk52\\Partition15", &device::exists_nt_dev},
  {"/dev/sdbb1", BRACK(FH_SDBB | 1), "\\Device\\Harddisk53\\Partition1", &device::exists_nt_dev},
  {"/dev/sdbb2", BRACK(FH_SDBB | 2), "\\Device\\Harddisk53\\Partition2", &device::exists_nt_dev},
  {"/dev/sdbb3", BRACK(FH_SDBB | 3), "\\Device\\Harddisk53\\Partition3", &device::exists_nt_dev},
  {"/dev/sdbb4", BRACK(FH_SDBB | 4), "\\Device\\Harddisk53\\Partition4", &device::exists_nt_dev},
  {"/dev/sdbb5", BRACK(FH_SDBB | 5), "\\Device\\Harddisk53\\Partition5", &device::exists_nt_dev},
  {"/dev/sdbb6", BRACK(FH_SDBB | 6), "\\Device\\Harddisk53\\Partition6", &device::exists_nt_dev},
  {"/dev/sdbb7", BRACK(FH_SDBB | 7), "\\Device\\Harddisk53\\Partition7", &device::exists_nt_dev},
  {"/dev/sdbb8", BRACK(FH_SDBB | 8), "\\Device\\Harddisk53\\Partition8", &device::exists_nt_dev},
  {"/dev/sdbb9", BRACK(FH_SDBB | 9), "\\Device\\Harddisk53\\Partition9", &device::exists_nt_dev},
  {"/dev/sdbb10", BRACK(FH_SDBB | 10), "\\Device\\Harddisk53\\Partition10", &device::exists_nt_dev},
  {"/dev/sdbb11", BRACK(FH_SDBB | 11), "\\Device\\Harddisk53\\Partition11", &device::exists_nt_dev},
  {"/dev/sdbb12", BRACK(FH_SDBB | 12), "\\Device\\Harddisk53\\Partition12", &device::exists_nt_dev},
  {"/dev/sdbb13", BRACK(FH_SDBB | 13), "\\Device\\Harddisk53\\Partition13", &device::exists_nt_dev},
  {"/dev/sdbb14", BRACK(FH_SDBB | 14), "\\Device\\Harddisk53\\Partition14", &device::exists_nt_dev},
  {"/dev/sdbb15", BRACK(FH_SDBB | 15), "\\Device\\Harddisk53\\Partition15", &device::exists_nt_dev},
  {"/dev/sdbc1", BRACK(FH_SDBC | 1), "\\Device\\Harddisk54\\Partition1", &device::exists_nt_dev},
  {"/dev/sdbc2", BRACK(FH_SDBC | 2), "\\Device\\Harddisk54\\Partition2", &device::exists_nt_dev},
  {"/dev/sdbc3", BRACK(FH_SDBC | 3), "\\Device\\Harddisk54\\Partition3", &device::exists_nt_dev},
  {"/dev/sdbc4", BRACK(FH_SDBC | 4), "\\Device\\Harddisk54\\Partition4", &device::exists_nt_dev},
  {"/dev/sdbc5", BRACK(FH_SDBC | 5), "\\Device\\Harddisk54\\Partition5", &device::exists_nt_dev},
  {"/dev/sdbc6", BRACK(FH_SDBC | 6), "\\Device\\Harddisk54\\Partition6", &device::exists_nt_dev},
  {"/dev/sdbc7", BRACK(FH_SDBC | 7), "\\Device\\Harddisk54\\Partition7", &device::exists_nt_dev},
  {"/dev/sdbc8", BRACK(FH_SDBC | 8), "\\Device\\Harddisk54\\Partition8", &device::exists_nt_dev},
  {"/dev/sdbc9", BRACK(FH_SDBC | 9), "\\Device\\Harddisk54\\Partition9", &device::exists_nt_dev},
  {"/dev/sdbc10", BRACK(FH_SDBC | 10), "\\Device\\Harddisk54\\Partition10", &device::exists_nt_dev},
  {"/dev/sdbc11", BRACK(FH_SDBC | 11), "\\Device\\Harddisk54\\Partition11", &device::exists_nt_dev},
  {"/dev/sdbc12", BRACK(FH_SDBC | 12), "\\Device\\Harddisk54\\Partition12", &device::exists_nt_dev},
  {"/dev/sdbc13", BRACK(FH_SDBC | 13), "\\Device\\Harddisk54\\Partition13", &device::exists_nt_dev},
  {"/dev/sdbc14", BRACK(FH_SDBC | 14), "\\Device\\Harddisk54\\Partition14", &device::exists_nt_dev},
  {"/dev/sdbc15", BRACK(FH_SDBC | 15), "\\Device\\Harddisk54\\Partition15", &device::exists_nt_dev},
  {"/dev/sdbd1", BRACK(FH_SDBD | 1), "\\Device\\Harddisk55\\Partition1", &device::exists_nt_dev},
  {"/dev/sdbd2", BRACK(FH_SDBD | 2), "\\Device\\Harddisk55\\Partition2", &device::exists_nt_dev},
  {"/dev/sdbd3", BRACK(FH_SDBD | 3), "\\Device\\Harddisk55\\Partition3", &device::exists_nt_dev},
  {"/dev/sdbd4", BRACK(FH_SDBD | 4), "\\Device\\Harddisk55\\Partition4", &device::exists_nt_dev},
  {"/dev/sdbd5", BRACK(FH_SDBD | 5), "\\Device\\Harddisk55\\Partition5", &device::exists_nt_dev},
  {"/dev/sdbd6", BRACK(FH_SDBD | 6), "\\Device\\Harddisk55\\Partition6", &device::exists_nt_dev},
  {"/dev/sdbd7", BRACK(FH_SDBD | 7), "\\Device\\Harddisk55\\Partition7", &device::exists_nt_dev},
  {"/dev/sdbd8", BRACK(FH_SDBD | 8), "\\Device\\Harddisk55\\Partition8", &device::exists_nt_dev},
  {"/dev/sdbd9", BRACK(FH_SDBD | 9), "\\Device\\Harddisk55\\Partition9", &device::exists_nt_dev},
  {"/dev/sdbd10", BRACK(FH_SDBD | 10), "\\Device\\Harddisk55\\Partition10", &device::exists_nt_dev},
  {"/dev/sdbd11", BRACK(FH_SDBD | 11), "\\Device\\Harddisk55\\Partition11", &device::exists_nt_dev},
  {"/dev/sdbd12", BRACK(FH_SDBD | 12), "\\Device\\Harddisk55\\Partition12", &device::exists_nt_dev},
  {"/dev/sdbd13", BRACK(FH_SDBD | 13), "\\Device\\Harddisk55\\Partition13", &device::exists_nt_dev},
  {"/dev/sdbd14", BRACK(FH_SDBD | 14), "\\Device\\Harddisk55\\Partition14", &device::exists_nt_dev},
  {"/dev/sdbd15", BRACK(FH_SDBD | 15), "\\Device\\Harddisk55\\Partition15", &device::exists_nt_dev},
  {"/dev/sdbe1", BRACK(FH_SDBE | 1), "\\Device\\Harddisk56\\Partition1", &device::exists_nt_dev},
  {"/dev/sdbe2", BRACK(FH_SDBE | 2), "\\Device\\Harddisk56\\Partition2", &device::exists_nt_dev},
  {"/dev/sdbe3", BRACK(FH_SDBE | 3), "\\Device\\Harddisk56\\Partition3", &device::exists_nt_dev},
  {"/dev/sdbe4", BRACK(FH_SDBE | 4), "\\Device\\Harddisk56\\Partition4", &device::exists_nt_dev},
  {"/dev/sdbe5", BRACK(FH_SDBE | 5), "\\Device\\Harddisk56\\Partition5", &device::exists_nt_dev},
  {"/dev/sdbe6", BRACK(FH_SDBE | 6), "\\Device\\Harddisk56\\Partition6", &device::exists_nt_dev},
  {"/dev/sdbe7", BRACK(FH_SDBE | 7), "\\Device\\Harddisk56\\Partition7", &device::exists_nt_dev},
  {"/dev/sdbe8", BRACK(FH_SDBE | 8), "\\Device\\Harddisk56\\Partition8", &device::exists_nt_dev},
  {"/dev/sdbe9", BRACK(FH_SDBE | 9), "\\Device\\Harddisk56\\Partition9", &device::exists_nt_dev},
  {"/dev/sdbe10", BRACK(FH_SDBE | 10), "\\Device\\Harddisk56\\Partition10", &device::exists_nt_dev},
  {"/dev/sdbe11", BRACK(FH_SDBE | 11), "\\Device\\Harddisk56\\Partition11", &device::exists_nt_dev},
  {"/dev/sdbe12", BRACK(FH_SDBE | 12), "\\Device\\Harddisk56\\Partition12", &device::exists_nt_dev},
  {"/dev/sdbe13", BRACK(FH_SDBE | 13), "\\Device\\Harddisk56\\Partition13", &device::exists_nt_dev},
  {"/dev/sdbe14", BRACK(FH_SDBE | 14), "\\Device\\Harddisk56\\Partition14", &device::exists_nt_dev},
  {"/dev/sdbe15", BRACK(FH_SDBE | 15), "\\Device\\Harddisk56\\Partition15", &device::exists_nt_dev},
  {"/dev/sdbf1", BRACK(FH_SDBF | 1), "\\Device\\Harddisk57\\Partition1", &device::exists_nt_dev},
  {"/dev/sdbf2", BRACK(FH_SDBF | 2), "\\Device\\Harddisk57\\Partition2", &device::exists_nt_dev},
  {"/dev/sdbf3", BRACK(FH_SDBF | 3), "\\Device\\Harddisk57\\Partition3", &device::exists_nt_dev},
  {"/dev/sdbf4", BRACK(FH_SDBF | 4), "\\Device\\Harddisk57\\Partition4", &device::exists_nt_dev},
  {"/dev/sdbf5", BRACK(FH_SDBF | 5), "\\Device\\Harddisk57\\Partition5", &device::exists_nt_dev},
  {"/dev/sdbf6", BRACK(FH_SDBF | 6), "\\Device\\Harddisk57\\Partition6", &device::exists_nt_dev},
  {"/dev/sdbf7", BRACK(FH_SDBF | 7), "\\Device\\Harddisk57\\Partition7", &device::exists_nt_dev},
  {"/dev/sdbf8", BRACK(FH_SDBF | 8), "\\Device\\Harddisk57\\Partition8", &device::exists_nt_dev},
  {"/dev/sdbf9", BRACK(FH_SDBF | 9), "\\Device\\Harddisk57\\Partition9", &device::exists_nt_dev},
  {"/dev/sdbf10", BRACK(FH_SDBF | 10), "\\Device\\Harddisk57\\Partition10", &device::exists_nt_dev},
  {"/dev/sdbf11", BRACK(FH_SDBF | 11), "\\Device\\Harddisk57\\Partition11", &device::exists_nt_dev},
  {"/dev/sdbf12", BRACK(FH_SDBF | 12), "\\Device\\Harddisk57\\Partition12", &device::exists_nt_dev},
  {"/dev/sdbf13", BRACK(FH_SDBF | 13), "\\Device\\Harddisk57\\Partition13", &device::exists_nt_dev},
  {"/dev/sdbf14", BRACK(FH_SDBF | 14), "\\Device\\Harddisk57\\Partition14", &device::exists_nt_dev},
  {"/dev/sdbf15", BRACK(FH_SDBF | 15), "\\Device\\Harddisk57\\Partition15", &device::exists_nt_dev},
  {"/dev/sdbg1", BRACK(FH_SDBG | 1), "\\Device\\Harddisk58\\Partition1", &device::exists_nt_dev},
  {"/dev/sdbg2", BRACK(FH_SDBG | 2), "\\Device\\Harddisk58\\Partition2", &device::exists_nt_dev},
  {"/dev/sdbg3", BRACK(FH_SDBG | 3), "\\Device\\Harddisk58\\Partition3", &device::exists_nt_dev},
  {"/dev/sdbg4", BRACK(FH_SDBG | 4), "\\Device\\Harddisk58\\Partition4", &device::exists_nt_dev},
  {"/dev/sdbg5", BRACK(FH_SDBG | 5), "\\Device\\Harddisk58\\Partition5", &device::exists_nt_dev},
  {"/dev/sdbg6", BRACK(FH_SDBG | 6), "\\Device\\Harddisk58\\Partition6", &device::exists_nt_dev},
  {"/dev/sdbg7", BRACK(FH_SDBG | 7), "\\Device\\Harddisk58\\Partition7", &device::exists_nt_dev},
  {"/dev/sdbg8", BRACK(FH_SDBG | 8), "\\Device\\Harddisk58\\Partition8", &device::exists_nt_dev},
  {"/dev/sdbg9", BRACK(FH_SDBG | 9), "\\Device\\Harddisk58\\Partition9", &device::exists_nt_dev},
  {"/dev/sdbg10", BRACK(FH_SDBG | 10), "\\Device\\Harddisk58\\Partition10", &device::exists_nt_dev},
  {"/dev/sdbg11", BRACK(FH_SDBG | 11), "\\Device\\Harddisk58\\Partition11", &device::exists_nt_dev},
  {"/dev/sdbg12", BRACK(FH_SDBG | 12), "\\Device\\Harddisk58\\Partition12", &device::exists_nt_dev},
  {"/dev/sdbg13", BRACK(FH_SDBG | 13), "\\Device\\Harddisk58\\Partition13", &device::exists_nt_dev},
  {"/dev/sdbg14", BRACK(FH_SDBG | 14), "\\Device\\Harddisk58\\Partition14", &device::exists_nt_dev},
  {"/dev/sdbg15", BRACK(FH_SDBG | 15), "\\Device\\Harddisk58\\Partition15", &device::exists_nt_dev},
  {"/dev/sdbh1", BRACK(FH_SDBH | 1), "\\Device\\Harddisk59\\Partition1", &device::exists_nt_dev},
  {"/dev/sdbh2", BRACK(FH_SDBH | 2), "\\Device\\Harddisk59\\Partition2", &device::exists_nt_dev},
  {"/dev/sdbh3", BRACK(FH_SDBH | 3), "\\Device\\Harddisk59\\Partition3", &device::exists_nt_dev},
  {"/dev/sdbh4", BRACK(FH_SDBH | 4), "\\Device\\Harddisk59\\Partition4", &device::exists_nt_dev},
  {"/dev/sdbh5", BRACK(FH_SDBH | 5), "\\Device\\Harddisk59\\Partition5", &device::exists_nt_dev},
  {"/dev/sdbh6", BRACK(FH_SDBH | 6), "\\Device\\Harddisk59\\Partition6", &device::exists_nt_dev},
  {"/dev/sdbh7", BRACK(FH_SDBH | 7), "\\Device\\Harddisk59\\Partition7", &device::exists_nt_dev},
  {"/dev/sdbh8", BRACK(FH_SDBH | 8), "\\Device\\Harddisk59\\Partition8", &device::exists_nt_dev},
  {"/dev/sdbh9", BRACK(FH_SDBH | 9), "\\Device\\Harddisk59\\Partition9", &device::exists_nt_dev},
  {"/dev/sdbh10", BRACK(FH_SDBH | 10), "\\Device\\Harddisk59\\Partition10", &device::exists_nt_dev},
  {"/dev/sdbh11", BRACK(FH_SDBH | 11), "\\Device\\Harddisk59\\Partition11", &device::exists_nt_dev},
  {"/dev/sdbh12", BRACK(FH_SDBH | 12), "\\Device\\Harddisk59\\Partition12", &device::exists_nt_dev},
  {"/dev/sdbh13", BRACK(FH_SDBH | 13), "\\Device\\Harddisk59\\Partition13", &device::exists_nt_dev},
  {"/dev/sdbh14", BRACK(FH_SDBH | 14), "\\Device\\Harddisk59\\Partition14", &device::exists_nt_dev},
  {"/dev/sdbh15", BRACK(FH_SDBH | 15), "\\Device\\Harddisk59\\Partition15", &device::exists_nt_dev},
  {"/dev/sdbi1", BRACK(FH_SDBI | 1), "\\Device\\Harddisk60\\Partition1", &device::exists_nt_dev},
  {"/dev/sdbi2", BRACK(FH_SDBI | 2), "\\Device\\Harddisk60\\Partition2", &device::exists_nt_dev},
  {"/dev/sdbi3", BRACK(FH_SDBI | 3), "\\Device\\Harddisk60\\Partition3", &device::exists_nt_dev},
  {"/dev/sdbi4", BRACK(FH_SDBI | 4), "\\Device\\Harddisk60\\Partition4", &device::exists_nt_dev},
  {"/dev/sdbi5", BRACK(FH_SDBI | 5), "\\Device\\Harddisk60\\Partition5", &device::exists_nt_dev},
  {"/dev/sdbi6", BRACK(FH_SDBI | 6), "\\Device\\Harddisk60\\Partition6", &device::exists_nt_dev},
  {"/dev/sdbi7", BRACK(FH_SDBI | 7), "\\Device\\Harddisk60\\Partition7", &device::exists_nt_dev},
  {"/dev/sdbi8", BRACK(FH_SDBI | 8), "\\Device\\Harddisk60\\Partition8", &device::exists_nt_dev},
  {"/dev/sdbi9", BRACK(FH_SDBI | 9), "\\Device\\Harddisk60\\Partition9", &device::exists_nt_dev},
  {"/dev/sdbi10", BRACK(FH_SDBI | 10), "\\Device\\Harddisk60\\Partition10", &device::exists_nt_dev},
  {"/dev/sdbi11", BRACK(FH_SDBI | 11), "\\Device\\Harddisk60\\Partition11", &device::exists_nt_dev},
  {"/dev/sdbi12", BRACK(FH_SDBI | 12), "\\Device\\Harddisk60\\Partition12", &device::exists_nt_dev},
  {"/dev/sdbi13", BRACK(FH_SDBI | 13), "\\Device\\Harddisk60\\Partition13", &device::exists_nt_dev},
  {"/dev/sdbi14", BRACK(FH_SDBI | 14), "\\Device\\Harddisk60\\Partition14", &device::exists_nt_dev},
  {"/dev/sdbi15", BRACK(FH_SDBI | 15), "\\Device\\Harddisk60\\Partition15", &device::exists_nt_dev},
  {"/dev/sdbj1", BRACK(FH_SDBJ | 1), "\\Device\\Harddisk61\\Partition1", &device::exists_nt_dev},
  {"/dev/sdbj2", BRACK(FH_SDBJ | 2), "\\Device\\Harddisk61\\Partition2", &device::exists_nt_dev},
  {"/dev/sdbj3", BRACK(FH_SDBJ | 3), "\\Device\\Harddisk61\\Partition3", &device::exists_nt_dev},
  {"/dev/sdbj4", BRACK(FH_SDBJ | 4), "\\Device\\Harddisk61\\Partition4", &device::exists_nt_dev},
  {"/dev/sdbj5", BRACK(FH_SDBJ | 5), "\\Device\\Harddisk61\\Partition5", &device::exists_nt_dev},
  {"/dev/sdbj6", BRACK(FH_SDBJ | 6), "\\Device\\Harddisk61\\Partition6", &device::exists_nt_dev},
  {"/dev/sdbj7", BRACK(FH_SDBJ | 7), "\\Device\\Harddisk61\\Partition7", &device::exists_nt_dev},
  {"/dev/sdbj8", BRACK(FH_SDBJ | 8), "\\Device\\Harddisk61\\Partition8", &device::exists_nt_dev},
  {"/dev/sdbj9", BRACK(FH_SDBJ | 9), "\\Device\\Harddisk61\\Partition9", &device::exists_nt_dev},
  {"/dev/sdbj10", BRACK(FH_SDBJ | 10), "\\Device\\Harddisk61\\Partition10", &device::exists_nt_dev},
  {"/dev/sdbj11", BRACK(FH_SDBJ | 11), "\\Device\\Harddisk61\\Partition11", &device::exists_nt_dev},
  {"/dev/sdbj12", BRACK(FH_SDBJ | 12), "\\Device\\Harddisk61\\Partition12", &device::exists_nt_dev},
  {"/dev/sdbj13", BRACK(FH_SDBJ | 13), "\\Device\\Harddisk61\\Partition13", &device::exists_nt_dev},
  {"/dev/sdbj14", BRACK(FH_SDBJ | 14), "\\Device\\Harddisk61\\Partition14", &device::exists_nt_dev},
  {"/dev/sdbj15", BRACK(FH_SDBJ | 15), "\\Device\\Harddisk61\\Partition15", &device::exists_nt_dev},
  {"/dev/sdbk1", BRACK(FH_SDBK | 1), "\\Device\\Harddisk62\\Partition1", &device::exists_nt_dev},
  {"/dev/sdbk2", BRACK(FH_SDBK | 2), "\\Device\\Harddisk62\\Partition2", &device::exists_nt_dev},
  {"/dev/sdbk3", BRACK(FH_SDBK | 3), "\\Device\\Harddisk62\\Partition3", &device::exists_nt_dev},
  {"/dev/sdbk4", BRACK(FH_SDBK | 4), "\\Device\\Harddisk62\\Partition4", &device::exists_nt_dev},
  {"/dev/sdbk5", BRACK(FH_SDBK | 5), "\\Device\\Harddisk62\\Partition5", &device::exists_nt_dev},
  {"/dev/sdbk6", BRACK(FH_SDBK | 6), "\\Device\\Harddisk62\\Partition6", &device::exists_nt_dev},
  {"/dev/sdbk7", BRACK(FH_SDBK | 7), "\\Device\\Harddisk62\\Partition7", &device::exists_nt_dev},
  {"/dev/sdbk8", BRACK(FH_SDBK | 8), "\\Device\\Harddisk62\\Partition8", &device::exists_nt_dev},
  {"/dev/sdbk9", BRACK(FH_SDBK | 9), "\\Device\\Harddisk62\\Partition9", &device::exists_nt_dev},
  {"/dev/sdbk10", BRACK(FH_SDBK | 10), "\\Device\\Harddisk62\\Partition10", &device::exists_nt_dev},
  {"/dev/sdbk11", BRACK(FH_SDBK | 11), "\\Device\\Harddisk62\\Partition11", &device::exists_nt_dev},
  {"/dev/sdbk12", BRACK(FH_SDBK | 12), "\\Device\\Harddisk62\\Partition12", &device::exists_nt_dev},
  {"/dev/sdbk13", BRACK(FH_SDBK | 13), "\\Device\\Harddisk62\\Partition13", &device::exists_nt_dev},
  {"/dev/sdbk14", BRACK(FH_SDBK | 14), "\\Device\\Harddisk62\\Partition14", &device::exists_nt_dev},
  {"/dev/sdbk15", BRACK(FH_SDBK | 15), "\\Device\\Harddisk62\\Partition15", &device::exists_nt_dev},
  {"/dev/sdbl1", BRACK(FH_SDBL | 1), "\\Device\\Harddisk63\\Partition1", &device::exists_nt_dev},
  {"/dev/sdbl2", BRACK(FH_SDBL | 2), "\\Device\\Harddisk63\\Partition2", &device::exists_nt_dev},
  {"/dev/sdbl3", BRACK(FH_SDBL | 3), "\\Device\\Harddisk63\\Partition3", &device::exists_nt_dev},
  {"/dev/sdbl4", BRACK(FH_SDBL | 4), "\\Device\\Harddisk63\\Partition4", &device::exists_nt_dev},
  {"/dev/sdbl5", BRACK(FH_SDBL | 5), "\\Device\\Harddisk63\\Partition5", &device::exists_nt_dev},
  {"/dev/sdbl6", BRACK(FH_SDBL | 6), "\\Device\\Harddisk63\\Partition6", &device::exists_nt_dev},
  {"/dev/sdbl7", BRACK(FH_SDBL | 7), "\\Device\\Harddisk63\\Partition7", &device::exists_nt_dev},
  {"/dev/sdbl8", BRACK(FH_SDBL | 8), "\\Device\\Harddisk63\\Partition8", &device::exists_nt_dev},
  {"/dev/sdbl9", BRACK(FH_SDBL | 9), "\\Device\\Harddisk63\\Partition9", &device::exists_nt_dev},
  {"/dev/sdbl10", BRACK(FH_SDBL | 10), "\\Device\\Harddisk63\\Partition10", &device::exists_nt_dev},
  {"/dev/sdbl11", BRACK(FH_SDBL | 11), "\\Device\\Harddisk63\\Partition11", &device::exists_nt_dev},
  {"/dev/sdbl12", BRACK(FH_SDBL | 12), "\\Device\\Harddisk63\\Partition12", &device::exists_nt_dev},
  {"/dev/sdbl13", BRACK(FH_SDBL | 13), "\\Device\\Harddisk63\\Partition13", &device::exists_nt_dev},
  {"/dev/sdbl14", BRACK(FH_SDBL | 14), "\\Device\\Harddisk63\\Partition14", &device::exists_nt_dev},
  {"/dev/sdbl15", BRACK(FH_SDBL | 15), "\\Device\\Harddisk63\\Partition15", &device::exists_nt_dev},
  {"/dev/sdbm1", BRACK(FH_SDBM | 1), "\\Device\\Harddisk64\\Partition1", &device::exists_nt_dev},
  {"/dev/sdbm2", BRACK(FH_SDBM | 2), "\\Device\\Harddisk64\\Partition2", &device::exists_nt_dev},
  {"/dev/sdbm3", BRACK(FH_SDBM | 3), "\\Device\\Harddisk64\\Partition3", &device::exists_nt_dev},
  {"/dev/sdbm4", BRACK(FH_SDBM | 4), "\\Device\\Harddisk64\\Partition4", &device::exists_nt_dev},
  {"/dev/sdbm5", BRACK(FH_SDBM | 5), "\\Device\\Harddisk64\\Partition5", &device::exists_nt_dev},
  {"/dev/sdbm6", BRACK(FH_SDBM | 6), "\\Device\\Harddisk64\\Partition6", &device::exists_nt_dev},
  {"/dev/sdbm7", BRACK(FH_SDBM | 7), "\\Device\\Harddisk64\\Partition7", &device::exists_nt_dev},
  {"/dev/sdbm8", BRACK(FH_SDBM | 8), "\\Device\\Harddisk64\\Partition8", &device::exists_nt_dev},
  {"/dev/sdbm9", BRACK(FH_SDBM | 9), "\\Device\\Harddisk64\\Partition9", &device::exists_nt_dev},
  {"/dev/sdbm10", BRACK(FH_SDBM | 10), "\\Device\\Harddisk64\\Partition10", &device::exists_nt_dev},
  {"/dev/sdbm11", BRACK(FH_SDBM | 11), "\\Device\\Harddisk64\\Partition11", &device::exists_nt_dev},
  {"/dev/sdbm12", BRACK(FH_SDBM | 12), "\\Device\\Harddisk64\\Partition12", &device::exists_nt_dev},
  {"/dev/sdbm13", BRACK(FH_SDBM | 13), "\\Device\\Harddisk64\\Partition13", &device::exists_nt_dev},
  {"/dev/sdbm14", BRACK(FH_SDBM | 14), "\\Device\\Harddisk64\\Partition14", &device::exists_nt_dev},
  {"/dev/sdbm15", BRACK(FH_SDBM | 15), "\\Device\\Harddisk64\\Partition15", &device::exists_nt_dev},
  {"/dev/sdbn1", BRACK(FH_SDBN | 1), "\\Device\\Harddisk65\\Partition1", &device::exists_nt_dev},
  {"/dev/sdbn2", BRACK(FH_SDBN | 2), "\\Device\\Harddisk65\\Partition2", &device::exists_nt_dev},
  {"/dev/sdbn3", BRACK(FH_SDBN | 3), "\\Device\\Harddisk65\\Partition3", &device::exists_nt_dev},
  {"/dev/sdbn4", BRACK(FH_SDBN | 4), "\\Device\\Harddisk65\\Partition4", &device::exists_nt_dev},
  {"/dev/sdbn5", BRACK(FH_SDBN | 5), "\\Device\\Harddisk65\\Partition5", &device::exists_nt_dev},
  {"/dev/sdbn6", BRACK(FH_SDBN | 6), "\\Device\\Harddisk65\\Partition6", &device::exists_nt_dev},
  {"/dev/sdbn7", BRACK(FH_SDBN | 7), "\\Device\\Harddisk65\\Partition7", &device::exists_nt_dev},
  {"/dev/sdbn8", BRACK(FH_SDBN | 8), "\\Device\\Harddisk65\\Partition8", &device::exists_nt_dev},
  {"/dev/sdbn9", BRACK(FH_SDBN | 9), "\\Device\\Harddisk65\\Partition9", &device::exists_nt_dev},
  {"/dev/sdbn10", BRACK(FH_SDBN | 10), "\\Device\\Harddisk65\\Partition10", &device::exists_nt_dev},
  {"/dev/sdbn11", BRACK(FH_SDBN | 11), "\\Device\\Harddisk65\\Partition11", &device::exists_nt_dev},
  {"/dev/sdbn12", BRACK(FH_SDBN | 12), "\\Device\\Harddisk65\\Partition12", &device::exists_nt_dev},
  {"/dev/sdbn13", BRACK(FH_SDBN | 13), "\\Device\\Harddisk65\\Partition13", &device::exists_nt_dev},
  {"/dev/sdbn14", BRACK(FH_SDBN | 14), "\\Device\\Harddisk65\\Partition14", &device::exists_nt_dev},
  {"/dev/sdbn15", BRACK(FH_SDBN | 15), "\\Device\\Harddisk65\\Partition15", &device::exists_nt_dev},
  {"/dev/sdbo1", BRACK(FH_SDBO | 1), "\\Device\\Harddisk66\\Partition1", &device::exists_nt_dev},
  {"/dev/sdbo2", BRACK(FH_SDBO | 2), "\\Device\\Harddisk66\\Partition2", &device::exists_nt_dev},
  {"/dev/sdbo3", BRACK(FH_SDBO | 3), "\\Device\\Harddisk66\\Partition3", &device::exists_nt_dev},
  {"/dev/sdbo4", BRACK(FH_SDBO | 4), "\\Device\\Harddisk66\\Partition4", &device::exists_nt_dev},
  {"/dev/sdbo5", BRACK(FH_SDBO | 5), "\\Device\\Harddisk66\\Partition5", &device::exists_nt_dev},
  {"/dev/sdbo6", BRACK(FH_SDBO | 6), "\\Device\\Harddisk66\\Partition6", &device::exists_nt_dev},
  {"/dev/sdbo7", BRACK(FH_SDBO | 7), "\\Device\\Harddisk66\\Partition7", &device::exists_nt_dev},
  {"/dev/sdbo8", BRACK(FH_SDBO | 8), "\\Device\\Harddisk66\\Partition8", &device::exists_nt_dev},
  {"/dev/sdbo9", BRACK(FH_SDBO | 9), "\\Device\\Harddisk66\\Partition9", &device::exists_nt_dev},
  {"/dev/sdbo10", BRACK(FH_SDBO | 10), "\\Device\\Harddisk66\\Partition10", &device::exists_nt_dev},
  {"/dev/sdbo11", BRACK(FH_SDBO | 11), "\\Device\\Harddisk66\\Partition11", &device::exists_nt_dev},
  {"/dev/sdbo12", BRACK(FH_SDBO | 12), "\\Device\\Harddisk66\\Partition12", &device::exists_nt_dev},
  {"/dev/sdbo13", BRACK(FH_SDBO | 13), "\\Device\\Harddisk66\\Partition13", &device::exists_nt_dev},
  {"/dev/sdbo14", BRACK(FH_SDBO | 14), "\\Device\\Harddisk66\\Partition14", &device::exists_nt_dev},
  {"/dev/sdbo15", BRACK(FH_SDBO | 15), "\\Device\\Harddisk66\\Partition15", &device::exists_nt_dev},
  {"/dev/sdbp1", BRACK(FH_SDBP | 1), "\\Device\\Harddisk67\\Partition1", &device::exists_nt_dev},
  {"/dev/sdbp2", BRACK(FH_SDBP | 2), "\\Device\\Harddisk67\\Partition2", &device::exists_nt_dev},
  {"/dev/sdbp3", BRACK(FH_SDBP | 3), "\\Device\\Harddisk67\\Partition3", &device::exists_nt_dev},
  {"/dev/sdbp4", BRACK(FH_SDBP | 4), "\\Device\\Harddisk67\\Partition4", &device::exists_nt_dev},
  {"/dev/sdbp5", BRACK(FH_SDBP | 5), "\\Device\\Harddisk67\\Partition5", &device::exists_nt_dev},
  {"/dev/sdbp6", BRACK(FH_SDBP | 6), "\\Device\\Harddisk67\\Partition6", &device::exists_nt_dev},
  {"/dev/sdbp7", BRACK(FH_SDBP | 7), "\\Device\\Harddisk67\\Partition7", &device::exists_nt_dev},
  {"/dev/sdbp8", BRACK(FH_SDBP | 8), "\\Device\\Harddisk67\\Partition8", &device::exists_nt_dev},
  {"/dev/sdbp9", BRACK(FH_SDBP | 9), "\\Device\\Harddisk67\\Partition9", &device::exists_nt_dev},
  {"/dev/sdbp10", BRACK(FH_SDBP | 10), "\\Device\\Harddisk67\\Partition10", &device::exists_nt_dev},
  {"/dev/sdbp11", BRACK(FH_SDBP | 11), "\\Device\\Harddisk67\\Partition11", &device::exists_nt_dev},
  {"/dev/sdbp12", BRACK(FH_SDBP | 12), "\\Device\\Harddisk67\\Partition12", &device::exists_nt_dev},
  {"/dev/sdbp13", BRACK(FH_SDBP | 13), "\\Device\\Harddisk67\\Partition13", &device::exists_nt_dev},
  {"/dev/sdbp14", BRACK(FH_SDBP | 14), "\\Device\\Harddisk67\\Partition14", &device::exists_nt_dev},
  {"/dev/sdbp15", BRACK(FH_SDBP | 15), "\\Device\\Harddisk67\\Partition15", &device::exists_nt_dev},
  {"/dev/sdbq1", BRACK(FH_SDBQ | 1), "\\Device\\Harddisk68\\Partition1", &device::exists_nt_dev},
  {"/dev/sdbq2", BRACK(FH_SDBQ | 2), "\\Device\\Harddisk68\\Partition2", &device::exists_nt_dev},
  {"/dev/sdbq3", BRACK(FH_SDBQ | 3), "\\Device\\Harddisk68\\Partition3", &device::exists_nt_dev},
  {"/dev/sdbq4", BRACK(FH_SDBQ | 4), "\\Device\\Harddisk68\\Partition4", &device::exists_nt_dev},
  {"/dev/sdbq5", BRACK(FH_SDBQ | 5), "\\Device\\Harddisk68\\Partition5", &device::exists_nt_dev},
  {"/dev/sdbq6", BRACK(FH_SDBQ | 6), "\\Device\\Harddisk68\\Partition6", &device::exists_nt_dev},
  {"/dev/sdbq7", BRACK(FH_SDBQ | 7), "\\Device\\Harddisk68\\Partition7", &device::exists_nt_dev},
  {"/dev/sdbq8", BRACK(FH_SDBQ | 8), "\\Device\\Harddisk68\\Partition8", &device::exists_nt_dev},
  {"/dev/sdbq9", BRACK(FH_SDBQ | 9), "\\Device\\Harddisk68\\Partition9", &device::exists_nt_dev},
  {"/dev/sdbq10", BRACK(FH_SDBQ | 10), "\\Device\\Harddisk68\\Partition10", &device::exists_nt_dev},
  {"/dev/sdbq11", BRACK(FH_SDBQ | 11), "\\Device\\Harddisk68\\Partition11", &device::exists_nt_dev},
  {"/dev/sdbq12", BRACK(FH_SDBQ | 12), "\\Device\\Harddisk68\\Partition12", &device::exists_nt_dev},
  {"/dev/sdbq13", BRACK(FH_SDBQ | 13), "\\Device\\Harddisk68\\Partition13", &device::exists_nt_dev},
  {"/dev/sdbq14", BRACK(FH_SDBQ | 14), "\\Device\\Harddisk68\\Partition14", &device::exists_nt_dev},
  {"/dev/sdbq15", BRACK(FH_SDBQ | 15), "\\Device\\Harddisk68\\Partition15", &device::exists_nt_dev},
  {"/dev/sdbr1", BRACK(FH_SDBR | 1), "\\Device\\Harddisk69\\Partition1", &device::exists_nt_dev},
  {"/dev/sdbr2", BRACK(FH_SDBR | 2), "\\Device\\Harddisk69\\Partition2", &device::exists_nt_dev},
  {"/dev/sdbr3", BRACK(FH_SDBR | 3), "\\Device\\Harddisk69\\Partition3", &device::exists_nt_dev},
  {"/dev/sdbr4", BRACK(FH_SDBR | 4), "\\Device\\Harddisk69\\Partition4", &device::exists_nt_dev},
  {"/dev/sdbr5", BRACK(FH_SDBR | 5), "\\Device\\Harddisk69\\Partition5", &device::exists_nt_dev},
  {"/dev/sdbr6", BRACK(FH_SDBR | 6), "\\Device\\Harddisk69\\Partition6", &device::exists_nt_dev},
  {"/dev/sdbr7", BRACK(FH_SDBR | 7), "\\Device\\Harddisk69\\Partition7", &device::exists_nt_dev},
  {"/dev/sdbr8", BRACK(FH_SDBR | 8), "\\Device\\Harddisk69\\Partition8", &device::exists_nt_dev},
  {"/dev/sdbr9", BRACK(FH_SDBR | 9), "\\Device\\Harddisk69\\Partition9", &device::exists_nt_dev},
  {"/dev/sdbr10", BRACK(FH_SDBR | 10), "\\Device\\Harddisk69\\Partition10", &device::exists_nt_dev},
  {"/dev/sdbr11", BRACK(FH_SDBR | 11), "\\Device\\Harddisk69\\Partition11", &device::exists_nt_dev},
  {"/dev/sdbr12", BRACK(FH_SDBR | 12), "\\Device\\Harddisk69\\Partition12", &device::exists_nt_dev},
  {"/dev/sdbr13", BRACK(FH_SDBR | 13), "\\Device\\Harddisk69\\Partition13", &device::exists_nt_dev},
  {"/dev/sdbr14", BRACK(FH_SDBR | 14), "\\Device\\Harddisk69\\Partition14", &device::exists_nt_dev},
  {"/dev/sdbr15", BRACK(FH_SDBR | 15), "\\Device\\Harddisk69\\Partition15", &device::exists_nt_dev},
  {"/dev/sdbs1", BRACK(FH_SDBS | 1), "\\Device\\Harddisk70\\Partition1", &device::exists_nt_dev},
  {"/dev/sdbs2", BRACK(FH_SDBS | 2), "\\Device\\Harddisk70\\Partition2", &device::exists_nt_dev},
  {"/dev/sdbs3", BRACK(FH_SDBS | 3), "\\Device\\Harddisk70\\Partition3", &device::exists_nt_dev},
  {"/dev/sdbs4", BRACK(FH_SDBS | 4), "\\Device\\Harddisk70\\Partition4", &device::exists_nt_dev},
  {"/dev/sdbs5", BRACK(FH_SDBS | 5), "\\Device\\Harddisk70\\Partition5", &device::exists_nt_dev},
  {"/dev/sdbs6", BRACK(FH_SDBS | 6), "\\Device\\Harddisk70\\Partition6", &device::exists_nt_dev},
  {"/dev/sdbs7", BRACK(FH_SDBS | 7), "\\Device\\Harddisk70\\Partition7", &device::exists_nt_dev},
  {"/dev/sdbs8", BRACK(FH_SDBS | 8), "\\Device\\Harddisk70\\Partition8", &device::exists_nt_dev},
  {"/dev/sdbs9", BRACK(FH_SDBS | 9), "\\Device\\Harddisk70\\Partition9", &device::exists_nt_dev},
  {"/dev/sdbs10", BRACK(FH_SDBS | 10), "\\Device\\Harddisk70\\Partition10", &device::exists_nt_dev},
  {"/dev/sdbs11", BRACK(FH_SDBS | 11), "\\Device\\Harddisk70\\Partition11", &device::exists_nt_dev},
  {"/dev/sdbs12", BRACK(FH_SDBS | 12), "\\Device\\Harddisk70\\Partition12", &device::exists_nt_dev},
  {"/dev/sdbs13", BRACK(FH_SDBS | 13), "\\Device\\Harddisk70\\Partition13", &device::exists_nt_dev},
  {"/dev/sdbs14", BRACK(FH_SDBS | 14), "\\Device\\Harddisk70\\Partition14", &device::exists_nt_dev},
  {"/dev/sdbs15", BRACK(FH_SDBS | 15), "\\Device\\Harddisk70\\Partition15", &device::exists_nt_dev},
  {"/dev/sdbt1", BRACK(FH_SDBT | 1), "\\Device\\Harddisk71\\Partition1", &device::exists_nt_dev},
  {"/dev/sdbt2", BRACK(FH_SDBT | 2), "\\Device\\Harddisk71\\Partition2", &device::exists_nt_dev},
  {"/dev/sdbt3", BRACK(FH_SDBT | 3), "\\Device\\Harddisk71\\Partition3", &device::exists_nt_dev},
  {"/dev/sdbt4", BRACK(FH_SDBT | 4), "\\Device\\Harddisk71\\Partition4", &device::exists_nt_dev},
  {"/dev/sdbt5", BRACK(FH_SDBT | 5), "\\Device\\Harddisk71\\Partition5", &device::exists_nt_dev},
  {"/dev/sdbt6", BRACK(FH_SDBT | 6), "\\Device\\Harddisk71\\Partition6", &device::exists_nt_dev},
  {"/dev/sdbt7", BRACK(FH_SDBT | 7), "\\Device\\Harddisk71\\Partition7", &device::exists_nt_dev},
  {"/dev/sdbt8", BRACK(FH_SDBT | 8), "\\Device\\Harddisk71\\Partition8", &device::exists_nt_dev},
  {"/dev/sdbt9", BRACK(FH_SDBT | 9), "\\Device\\Harddisk71\\Partition9", &device::exists_nt_dev},
  {"/dev/sdbt10", BRACK(FH_SDBT | 10), "\\Device\\Harddisk71\\Partition10", &device::exists_nt_dev},
  {"/dev/sdbt11", BRACK(FH_SDBT | 11), "\\Device\\Harddisk71\\Partition11", &device::exists_nt_dev},
  {"/dev/sdbt12", BRACK(FH_SDBT | 12), "\\Device\\Harddisk71\\Partition12", &device::exists_nt_dev},
  {"/dev/sdbt13", BRACK(FH_SDBT | 13), "\\Device\\Harddisk71\\Partition13", &device::exists_nt_dev},
  {"/dev/sdbt14", BRACK(FH_SDBT | 14), "\\Device\\Harddisk71\\Partition14", &device::exists_nt_dev},
  {"/dev/sdbt15", BRACK(FH_SDBT | 15), "\\Device\\Harddisk71\\Partition15", &device::exists_nt_dev},
  {"/dev/sdbu1", BRACK(FH_SDBU | 1), "\\Device\\Harddisk72\\Partition1", &device::exists_nt_dev},
  {"/dev/sdbu2", BRACK(FH_SDBU | 2), "\\Device\\Harddisk72\\Partition2", &device::exists_nt_dev},
  {"/dev/sdbu3", BRACK(FH_SDBU | 3), "\\Device\\Harddisk72\\Partition3", &device::exists_nt_dev},
  {"/dev/sdbu4", BRACK(FH_SDBU | 4), "\\Device\\Harddisk72\\Partition4", &device::exists_nt_dev},
  {"/dev/sdbu5", BRACK(FH_SDBU | 5), "\\Device\\Harddisk72\\Partition5", &device::exists_nt_dev},
  {"/dev/sdbu6", BRACK(FH_SDBU | 6), "\\Device\\Harddisk72\\Partition6", &device::exists_nt_dev},
  {"/dev/sdbu7", BRACK(FH_SDBU | 7), "\\Device\\Harddisk72\\Partition7", &device::exists_nt_dev},
  {"/dev/sdbu8", BRACK(FH_SDBU | 8), "\\Device\\Harddisk72\\Partition8", &device::exists_nt_dev},
  {"/dev/sdbu9", BRACK(FH_SDBU | 9), "\\Device\\Harddisk72\\Partition9", &device::exists_nt_dev},
  {"/dev/sdbu10", BRACK(FH_SDBU | 10), "\\Device\\Harddisk72\\Partition10", &device::exists_nt_dev},
  {"/dev/sdbu11", BRACK(FH_SDBU | 11), "\\Device\\Harddisk72\\Partition11", &device::exists_nt_dev},
  {"/dev/sdbu12", BRACK(FH_SDBU | 12), "\\Device\\Harddisk72\\Partition12", &device::exists_nt_dev},
  {"/dev/sdbu13", BRACK(FH_SDBU | 13), "\\Device\\Harddisk72\\Partition13", &device::exists_nt_dev},
  {"/dev/sdbu14", BRACK(FH_SDBU | 14), "\\Device\\Harddisk72\\Partition14", &device::exists_nt_dev},
  {"/dev/sdbu15", BRACK(FH_SDBU | 15), "\\Device\\Harddisk72\\Partition15", &device::exists_nt_dev},
  {"/dev/sdbv1", BRACK(FH_SDBV | 1), "\\Device\\Harddisk73\\Partition1", &device::exists_nt_dev},
  {"/dev/sdbv2", BRACK(FH_SDBV | 2), "\\Device\\Harddisk73\\Partition2", &device::exists_nt_dev},
  {"/dev/sdbv3", BRACK(FH_SDBV | 3), "\\Device\\Harddisk73\\Partition3", &device::exists_nt_dev},
  {"/dev/sdbv4", BRACK(FH_SDBV | 4), "\\Device\\Harddisk73\\Partition4", &device::exists_nt_dev},
  {"/dev/sdbv5", BRACK(FH_SDBV | 5), "\\Device\\Harddisk73\\Partition5", &device::exists_nt_dev},
  {"/dev/sdbv6", BRACK(FH_SDBV | 6), "\\Device\\Harddisk73\\Partition6", &device::exists_nt_dev},
  {"/dev/sdbv7", BRACK(FH_SDBV | 7), "\\Device\\Harddisk73\\Partition7", &device::exists_nt_dev},
  {"/dev/sdbv8", BRACK(FH_SDBV | 8), "\\Device\\Harddisk73\\Partition8", &device::exists_nt_dev},
  {"/dev/sdbv9", BRACK(FH_SDBV | 9), "\\Device\\Harddisk73\\Partition9", &device::exists_nt_dev},
  {"/dev/sdbv10", BRACK(FH_SDBV | 10), "\\Device\\Harddisk73\\Partition10", &device::exists_nt_dev},
  {"/dev/sdbv11", BRACK(FH_SDBV | 11), "\\Device\\Harddisk73\\Partition11", &device::exists_nt_dev},
  {"/dev/sdbv12", BRACK(FH_SDBV | 12), "\\Device\\Harddisk73\\Partition12", &device::exists_nt_dev},
  {"/dev/sdbv13", BRACK(FH_SDBV | 13), "\\Device\\Harddisk73\\Partition13", &device::exists_nt_dev},
  {"/dev/sdbv14", BRACK(FH_SDBV | 14), "\\Device\\Harddisk73\\Partition14", &device::exists_nt_dev},
  {"/dev/sdbv15", BRACK(FH_SDBV | 15), "\\Device\\Harddisk73\\Partition15", &device::exists_nt_dev},
  {"/dev/sdbw1", BRACK(FH_SDBW | 1), "\\Device\\Harddisk74\\Partition1", &device::exists_nt_dev},
  {"/dev/sdbw2", BRACK(FH_SDBW | 2), "\\Device\\Harddisk74\\Partition2", &device::exists_nt_dev},
  {"/dev/sdbw3", BRACK(FH_SDBW | 3), "\\Device\\Harddisk74\\Partition3", &device::exists_nt_dev},
  {"/dev/sdbw4", BRACK(FH_SDBW | 4), "\\Device\\Harddisk74\\Partition4", &device::exists_nt_dev},
  {"/dev/sdbw5", BRACK(FH_SDBW | 5), "\\Device\\Harddisk74\\Partition5", &device::exists_nt_dev},
  {"/dev/sdbw6", BRACK(FH_SDBW | 6), "\\Device\\Harddisk74\\Partition6", &device::exists_nt_dev},
  {"/dev/sdbw7", BRACK(FH_SDBW | 7), "\\Device\\Harddisk74\\Partition7", &device::exists_nt_dev},
  {"/dev/sdbw8", BRACK(FH_SDBW | 8), "\\Device\\Harddisk74\\Partition8", &device::exists_nt_dev},
  {"/dev/sdbw9", BRACK(FH_SDBW | 9), "\\Device\\Harddisk74\\Partition9", &device::exists_nt_dev},
  {"/dev/sdbw10", BRACK(FH_SDBW | 10), "\\Device\\Harddisk74\\Partition10", &device::exists_nt_dev},
  {"/dev/sdbw11", BRACK(FH_SDBW | 11), "\\Device\\Harddisk74\\Partition11", &device::exists_nt_dev},
  {"/dev/sdbw12", BRACK(FH_SDBW | 12), "\\Device\\Harddisk74\\Partition12", &device::exists_nt_dev},
  {"/dev/sdbw13", BRACK(FH_SDBW | 13), "\\Device\\Harddisk74\\Partition13", &device::exists_nt_dev},
  {"/dev/sdbw14", BRACK(FH_SDBW | 14), "\\Device\\Harddisk74\\Partition14", &device::exists_nt_dev},
  {"/dev/sdbw15", BRACK(FH_SDBW | 15), "\\Device\\Harddisk74\\Partition15", &device::exists_nt_dev},
  {"/dev/sdbx1", BRACK(FH_SDBX | 1), "\\Device\\Harddisk75\\Partition1", &device::exists_nt_dev},
  {"/dev/sdbx2", BRACK(FH_SDBX | 2), "\\Device\\Harddisk75\\Partition2", &device::exists_nt_dev},
  {"/dev/sdbx3", BRACK(FH_SDBX | 3), "\\Device\\Harddisk75\\Partition3", &device::exists_nt_dev},
  {"/dev/sdbx4", BRACK(FH_SDBX | 4), "\\Device\\Harddisk75\\Partition4", &device::exists_nt_dev},
  {"/dev/sdbx5", BRACK(FH_SDBX | 5), "\\Device\\Harddisk75\\Partition5", &device::exists_nt_dev},
  {"/dev/sdbx6", BRACK(FH_SDBX | 6), "\\Device\\Harddisk75\\Partition6", &device::exists_nt_dev},
  {"/dev/sdbx7", BRACK(FH_SDBX | 7), "\\Device\\Harddisk75\\Partition7", &device::exists_nt_dev},
  {"/dev/sdbx8", BRACK(FH_SDBX | 8), "\\Device\\Harddisk75\\Partition8", &device::exists_nt_dev},
  {"/dev/sdbx9", BRACK(FH_SDBX | 9), "\\Device\\Harddisk75\\Partition9", &device::exists_nt_dev},
  {"/dev/sdbx10", BRACK(FH_SDBX | 10), "\\Device\\Harddisk75\\Partition10", &device::exists_nt_dev},
  {"/dev/sdbx11", BRACK(FH_SDBX | 11), "\\Device\\Harddisk75\\Partition11", &device::exists_nt_dev},
  {"/dev/sdbx12", BRACK(FH_SDBX | 12), "\\Device\\Harddisk75\\Partition12", &device::exists_nt_dev},
  {"/dev/sdbx13", BRACK(FH_SDBX | 13), "\\Device\\Harddisk75\\Partition13", &device::exists_nt_dev},
  {"/dev/sdbx14", BRACK(FH_SDBX | 14), "\\Device\\Harddisk75\\Partition14", &device::exists_nt_dev},
  {"/dev/sdbx15", BRACK(FH_SDBX | 15), "\\Device\\Harddisk75\\Partition15", &device::exists_nt_dev},
  {"/dev/sdby1", BRACK(FH_SDBY | 1), "\\Device\\Harddisk76\\Partition1", &device::exists_nt_dev},
  {"/dev/sdby2", BRACK(FH_SDBY | 2), "\\Device\\Harddisk76\\Partition2", &device::exists_nt_dev},
  {"/dev/sdby3", BRACK(FH_SDBY | 3), "\\Device\\Harddisk76\\Partition3", &device::exists_nt_dev},
  {"/dev/sdby4", BRACK(FH_SDBY | 4), "\\Device\\Harddisk76\\Partition4", &device::exists_nt_dev},
  {"/dev/sdby5", BRACK(FH_SDBY | 5), "\\Device\\Harddisk76\\Partition5", &device::exists_nt_dev},
  {"/dev/sdby6", BRACK(FH_SDBY | 6), "\\Device\\Harddisk76\\Partition6", &device::exists_nt_dev},
  {"/dev/sdby7", BRACK(FH_SDBY | 7), "\\Device\\Harddisk76\\Partition7", &device::exists_nt_dev},
  {"/dev/sdby8", BRACK(FH_SDBY | 8), "\\Device\\Harddisk76\\Partition8", &device::exists_nt_dev},
  {"/dev/sdby9", BRACK(FH_SDBY | 9), "\\Device\\Harddisk76\\Partition9", &device::exists_nt_dev},
  {"/dev/sdby10", BRACK(FH_SDBY | 10), "\\Device\\Harddisk76\\Partition10", &device::exists_nt_dev},
  {"/dev/sdby11", BRACK(FH_SDBY | 11), "\\Device\\Harddisk76\\Partition11", &device::exists_nt_dev},
  {"/dev/sdby12", BRACK(FH_SDBY | 12), "\\Device\\Harddisk76\\Partition12", &device::exists_nt_dev},
  {"/dev/sdby13", BRACK(FH_SDBY | 13), "\\Device\\Harddisk76\\Partition13", &device::exists_nt_dev},
  {"/dev/sdby14", BRACK(FH_SDBY | 14), "\\Device\\Harddisk76\\Partition14", &device::exists_nt_dev},
  {"/dev/sdby15", BRACK(FH_SDBY | 15), "\\Device\\Harddisk76\\Partition15", &device::exists_nt_dev},
  {"/dev/sdbz1", BRACK(FH_SDBZ | 1), "\\Device\\Harddisk77\\Partition1", &device::exists_nt_dev},
  {"/dev/sdbz2", BRACK(FH_SDBZ | 2), "\\Device\\Harddisk77\\Partition2", &device::exists_nt_dev},
  {"/dev/sdbz3", BRACK(FH_SDBZ | 3), "\\Device\\Harddisk77\\Partition3", &device::exists_nt_dev},
  {"/dev/sdbz4", BRACK(FH_SDBZ | 4), "\\Device\\Harddisk77\\Partition4", &device::exists_nt_dev},
  {"/dev/sdbz5", BRACK(FH_SDBZ | 5), "\\Device\\Harddisk77\\Partition5", &device::exists_nt_dev},
  {"/dev/sdbz6", BRACK(FH_SDBZ | 6), "\\Device\\Harddisk77\\Partition6", &device::exists_nt_dev},
  {"/dev/sdbz7", BRACK(FH_SDBZ | 7), "\\Device\\Harddisk77\\Partition7", &device::exists_nt_dev},
  {"/dev/sdbz8", BRACK(FH_SDBZ | 8), "\\Device\\Harddisk77\\Partition8", &device::exists_nt_dev},
  {"/dev/sdbz9", BRACK(FH_SDBZ | 9), "\\Device\\Harddisk77\\Partition9", &device::exists_nt_dev},
  {"/dev/sdbz10", BRACK(FH_SDBZ | 10), "\\Device\\Harddisk77\\Partition10", &device::exists_nt_dev},
  {"/dev/sdbz11", BRACK(FH_SDBZ | 11), "\\Device\\Harddisk77\\Partition11", &device::exists_nt_dev},
  {"/dev/sdbz12", BRACK(FH_SDBZ | 12), "\\Device\\Harddisk77\\Partition12", &device::exists_nt_dev},
  {"/dev/sdbz13", BRACK(FH_SDBZ | 13), "\\Device\\Harddisk77\\Partition13", &device::exists_nt_dev},
  {"/dev/sdbz14", BRACK(FH_SDBZ | 14), "\\Device\\Harddisk77\\Partition14", &device::exists_nt_dev},
  {"/dev/sdbz15", BRACK(FH_SDBZ | 15), "\\Device\\Harddisk77\\Partition15", &device::exists_nt_dev},
  {"/dev/sdca", BRACK(FH_SDCA), "\\Device\\Harddisk78\\Partition0", &device::exists_nt_dev},
  {"/dev/sdcb", BRACK(FH_SDCB), "\\Device\\Harddisk79\\Partition0", &device::exists_nt_dev},
  {"/dev/sdcc", BRACK(FH_SDCC), "\\Device\\Harddisk80\\Partition0", &device::exists_nt_dev},
  {"/dev/sdcd", BRACK(FH_SDCD), "\\Device\\Harddisk81\\Partition0", &device::exists_nt_dev},
  {"/dev/sdce", BRACK(FH_SDCE), "\\Device\\Harddisk82\\Partition0", &device::exists_nt_dev},
  {"/dev/sdcf", BRACK(FH_SDCF), "\\Device\\Harddisk83\\Partition0", &device::exists_nt_dev},
  {"/dev/sdcg", BRACK(FH_SDCG), "\\Device\\Harddisk84\\Partition0", &device::exists_nt_dev},
  {"/dev/sdch", BRACK(FH_SDCH), "\\Device\\Harddisk85\\Partition0", &device::exists_nt_dev},
  {"/dev/sdci", BRACK(FH_SDCI), "\\Device\\Harddisk86\\Partition0", &device::exists_nt_dev},
  {"/dev/sdcj", BRACK(FH_SDCJ), "\\Device\\Harddisk87\\Partition0", &device::exists_nt_dev},
  {"/dev/sdck", BRACK(FH_SDCK), "\\Device\\Harddisk88\\Partition0", &device::exists_nt_dev},
  {"/dev/sdcl", BRACK(FH_SDCL), "\\Device\\Harddisk89\\Partition0", &device::exists_nt_dev},
  {"/dev/sdcm", BRACK(FH_SDCM), "\\Device\\Harddisk90\\Partition0", &device::exists_nt_dev},
  {"/dev/sdcn", BRACK(FH_SDCN), "\\Device\\Harddisk91\\Partition0", &device::exists_nt_dev},
  {"/dev/sdco", BRACK(FH_SDCO), "\\Device\\Harddisk92\\Partition0", &device::exists_nt_dev},
  {"/dev/sdcp", BRACK(FH_SDCP), "\\Device\\Harddisk93\\Partition0", &device::exists_nt_dev},
  {"/dev/sdcq", BRACK(FH_SDCQ), "\\Device\\Harddisk94\\Partition0", &device::exists_nt_dev},
  {"/dev/sdcr", BRACK(FH_SDCR), "\\Device\\Harddisk95\\Partition0", &device::exists_nt_dev},
  {"/dev/sdcs", BRACK(FH_SDCS), "\\Device\\Harddisk96\\Partition0", &device::exists_nt_dev},
  {"/dev/sdct", BRACK(FH_SDCT), "\\Device\\Harddisk97\\Partition0", &device::exists_nt_dev},
  {"/dev/sdcu", BRACK(FH_SDCU), "\\Device\\Harddisk98\\Partition0", &device::exists_nt_dev},
  {"/dev/sdcv", BRACK(FH_SDCV), "\\Device\\Harddisk99\\Partition0", &device::exists_nt_dev},
  {"/dev/sdcw", BRACK(FH_SDCW), "\\Device\\Harddisk100\\Partition0", &device::exists_nt_dev},
  {"/dev/sdcx", BRACK(FH_SDCX), "\\Device\\Harddisk101\\Partition0", &device::exists_nt_dev},
  {"/dev/sdcy", BRACK(FH_SDCY), "\\Device\\Harddisk102\\Partition0", &device::exists_nt_dev},
  {"/dev/sdcz", BRACK(FH_SDCZ), "\\Device\\Harddisk103\\Partition0", &device::exists_nt_dev},
  {"/dev/sdca1", BRACK(FH_SDCA | 1), "\\Device\\Harddisk78\\Partition1", &device::exists_nt_dev},
  {"/dev/sdca2", BRACK(FH_SDCA | 2), "\\Device\\Harddisk78\\Partition2", &device::exists_nt_dev},
  {"/dev/sdca3", BRACK(FH_SDCA | 3), "\\Device\\Harddisk78\\Partition3", &device::exists_nt_dev},
  {"/dev/sdca4", BRACK(FH_SDCA | 4), "\\Device\\Harddisk78\\Partition4", &device::exists_nt_dev},
  {"/dev/sdca5", BRACK(FH_SDCA | 5), "\\Device\\Harddisk78\\Partition5", &device::exists_nt_dev},
  {"/dev/sdca6", BRACK(FH_SDCA | 6), "\\Device\\Harddisk78\\Partition6", &device::exists_nt_dev},
  {"/dev/sdca7", BRACK(FH_SDCA | 7), "\\Device\\Harddisk78\\Partition7", &device::exists_nt_dev},
  {"/dev/sdca8", BRACK(FH_SDCA | 8), "\\Device\\Harddisk78\\Partition8", &device::exists_nt_dev},
  {"/dev/sdca9", BRACK(FH_SDCA | 9), "\\Device\\Harddisk78\\Partition9", &device::exists_nt_dev},
  {"/dev/sdca10", BRACK(FH_SDCA | 10), "\\Device\\Harddisk78\\Partition10", &device::exists_nt_dev},
  {"/dev/sdca11", BRACK(FH_SDCA | 11), "\\Device\\Harddisk78\\Partition11", &device::exists_nt_dev},
  {"/dev/sdca12", BRACK(FH_SDCA | 12), "\\Device\\Harddisk78\\Partition12", &device::exists_nt_dev},
  {"/dev/sdca13", BRACK(FH_SDCA | 13), "\\Device\\Harddisk78\\Partition13", &device::exists_nt_dev},
  {"/dev/sdca14", BRACK(FH_SDCA | 14), "\\Device\\Harddisk78\\Partition14", &device::exists_nt_dev},
  {"/dev/sdca15", BRACK(FH_SDCA | 15), "\\Device\\Harddisk78\\Partition15", &device::exists_nt_dev},
  {"/dev/sdcb1", BRACK(FH_SDCB | 1), "\\Device\\Harddisk79\\Partition1", &device::exists_nt_dev},
  {"/dev/sdcb2", BRACK(FH_SDCB | 2), "\\Device\\Harddisk79\\Partition2", &device::exists_nt_dev},
  {"/dev/sdcb3", BRACK(FH_SDCB | 3), "\\Device\\Harddisk79\\Partition3", &device::exists_nt_dev},
  {"/dev/sdcb4", BRACK(FH_SDCB | 4), "\\Device\\Harddisk79\\Partition4", &device::exists_nt_dev},
  {"/dev/sdcb5", BRACK(FH_SDCB | 5), "\\Device\\Harddisk79\\Partition5", &device::exists_nt_dev},
  {"/dev/sdcb6", BRACK(FH_SDCB | 6), "\\Device\\Harddisk79\\Partition6", &device::exists_nt_dev},
  {"/dev/sdcb7", BRACK(FH_SDCB | 7), "\\Device\\Harddisk79\\Partition7", &device::exists_nt_dev},
  {"/dev/sdcb8", BRACK(FH_SDCB | 8), "\\Device\\Harddisk79\\Partition8", &device::exists_nt_dev},
  {"/dev/sdcb9", BRACK(FH_SDCB | 9), "\\Device\\Harddisk79\\Partition9", &device::exists_nt_dev},
  {"/dev/sdcb10", BRACK(FH_SDCB | 10), "\\Device\\Harddisk79\\Partition10", &device::exists_nt_dev},
  {"/dev/sdcb11", BRACK(FH_SDCB | 11), "\\Device\\Harddisk79\\Partition11", &device::exists_nt_dev},
  {"/dev/sdcb12", BRACK(FH_SDCB | 12), "\\Device\\Harddisk79\\Partition12", &device::exists_nt_dev},
  {"/dev/sdcb13", BRACK(FH_SDCB | 13), "\\Device\\Harddisk79\\Partition13", &device::exists_nt_dev},
  {"/dev/sdcb14", BRACK(FH_SDCB | 14), "\\Device\\Harddisk79\\Partition14", &device::exists_nt_dev},
  {"/dev/sdcb15", BRACK(FH_SDCB | 15), "\\Device\\Harddisk79\\Partition15", &device::exists_nt_dev},
  {"/dev/sdcc1", BRACK(FH_SDCC | 1), "\\Device\\Harddisk80\\Partition1", &device::exists_nt_dev},
  {"/dev/sdcc2", BRACK(FH_SDCC | 2), "\\Device\\Harddisk80\\Partition2", &device::exists_nt_dev},
  {"/dev/sdcc3", BRACK(FH_SDCC | 3), "\\Device\\Harddisk80\\Partition3", &device::exists_nt_dev},
  {"/dev/sdcc4", BRACK(FH_SDCC | 4), "\\Device\\Harddisk80\\Partition4", &device::exists_nt_dev},
  {"/dev/sdcc5", BRACK(FH_SDCC | 5), "\\Device\\Harddisk80\\Partition5", &device::exists_nt_dev},
  {"/dev/sdcc6", BRACK(FH_SDCC | 6), "\\Device\\Harddisk80\\Partition6", &device::exists_nt_dev},
  {"/dev/sdcc7", BRACK(FH_SDCC | 7), "\\Device\\Harddisk80\\Partition7", &device::exists_nt_dev},
  {"/dev/sdcc8", BRACK(FH_SDCC | 8), "\\Device\\Harddisk80\\Partition8", &device::exists_nt_dev},
  {"/dev/sdcc9", BRACK(FH_SDCC | 9), "\\Device\\Harddisk80\\Partition9", &device::exists_nt_dev},
  {"/dev/sdcc10", BRACK(FH_SDCC | 10), "\\Device\\Harddisk80\\Partition10", &device::exists_nt_dev},
  {"/dev/sdcc11", BRACK(FH_SDCC | 11), "\\Device\\Harddisk80\\Partition11", &device::exists_nt_dev},
  {"/dev/sdcc12", BRACK(FH_SDCC | 12), "\\Device\\Harddisk80\\Partition12", &device::exists_nt_dev},
  {"/dev/sdcc13", BRACK(FH_SDCC | 13), "\\Device\\Harddisk80\\Partition13", &device::exists_nt_dev},
  {"/dev/sdcc14", BRACK(FH_SDCC | 14), "\\Device\\Harddisk80\\Partition14", &device::exists_nt_dev},
  {"/dev/sdcc15", BRACK(FH_SDCC | 15), "\\Device\\Harddisk80\\Partition15", &device::exists_nt_dev},
  {"/dev/sdcd1", BRACK(FH_SDCD | 1), "\\Device\\Harddisk81\\Partition1", &device::exists_nt_dev},
  {"/dev/sdcd2", BRACK(FH_SDCD | 2), "\\Device\\Harddisk81\\Partition2", &device::exists_nt_dev},
  {"/dev/sdcd3", BRACK(FH_SDCD | 3), "\\Device\\Harddisk81\\Partition3", &device::exists_nt_dev},
  {"/dev/sdcd4", BRACK(FH_SDCD | 4), "\\Device\\Harddisk81\\Partition4", &device::exists_nt_dev},
  {"/dev/sdcd5", BRACK(FH_SDCD | 5), "\\Device\\Harddisk81\\Partition5", &device::exists_nt_dev},
  {"/dev/sdcd6", BRACK(FH_SDCD | 6), "\\Device\\Harddisk81\\Partition6", &device::exists_nt_dev},
  {"/dev/sdcd7", BRACK(FH_SDCD | 7), "\\Device\\Harddisk81\\Partition7", &device::exists_nt_dev},
  {"/dev/sdcd8", BRACK(FH_SDCD | 8), "\\Device\\Harddisk81\\Partition8", &device::exists_nt_dev},
  {"/dev/sdcd9", BRACK(FH_SDCD | 9), "\\Device\\Harddisk81\\Partition9", &device::exists_nt_dev},
  {"/dev/sdcd10", BRACK(FH_SDCD | 10), "\\Device\\Harddisk81\\Partition10", &device::exists_nt_dev},
  {"/dev/sdcd11", BRACK(FH_SDCD | 11), "\\Device\\Harddisk81\\Partition11", &device::exists_nt_dev},
  {"/dev/sdcd12", BRACK(FH_SDCD | 12), "\\Device\\Harddisk81\\Partition12", &device::exists_nt_dev},
  {"/dev/sdcd13", BRACK(FH_SDCD | 13), "\\Device\\Harddisk81\\Partition13", &device::exists_nt_dev},
  {"/dev/sdcd14", BRACK(FH_SDCD | 14), "\\Device\\Harddisk81\\Partition14", &device::exists_nt_dev},
  {"/dev/sdcd15", BRACK(FH_SDCD | 15), "\\Device\\Harddisk81\\Partition15", &device::exists_nt_dev},
  {"/dev/sdce1", BRACK(FH_SDCE | 1), "\\Device\\Harddisk82\\Partition1", &device::exists_nt_dev},
  {"/dev/sdce2", BRACK(FH_SDCE | 2), "\\Device\\Harddisk82\\Partition2", &device::exists_nt_dev},
  {"/dev/sdce3", BRACK(FH_SDCE | 3), "\\Device\\Harddisk82\\Partition3", &device::exists_nt_dev},
  {"/dev/sdce4", BRACK(FH_SDCE | 4), "\\Device\\Harddisk82\\Partition4", &device::exists_nt_dev},
  {"/dev/sdce5", BRACK(FH_SDCE | 5), "\\Device\\Harddisk82\\Partition5", &device::exists_nt_dev},
  {"/dev/sdce6", BRACK(FH_SDCE | 6), "\\Device\\Harddisk82\\Partition6", &device::exists_nt_dev},
  {"/dev/sdce7", BRACK(FH_SDCE | 7), "\\Device\\Harddisk82\\Partition7", &device::exists_nt_dev},
  {"/dev/sdce8", BRACK(FH_SDCE | 8), "\\Device\\Harddisk82\\Partition8", &device::exists_nt_dev},
  {"/dev/sdce9", BRACK(FH_SDCE | 9), "\\Device\\Harddisk82\\Partition9", &device::exists_nt_dev},
  {"/dev/sdce10", BRACK(FH_SDCE | 10), "\\Device\\Harddisk82\\Partition10", &device::exists_nt_dev},
  {"/dev/sdce11", BRACK(FH_SDCE | 11), "\\Device\\Harddisk82\\Partition11", &device::exists_nt_dev},
  {"/dev/sdce12", BRACK(FH_SDCE | 12), "\\Device\\Harddisk82\\Partition12", &device::exists_nt_dev},
  {"/dev/sdce13", BRACK(FH_SDCE | 13), "\\Device\\Harddisk82\\Partition13", &device::exists_nt_dev},
  {"/dev/sdce14", BRACK(FH_SDCE | 14), "\\Device\\Harddisk82\\Partition14", &device::exists_nt_dev},
  {"/dev/sdce15", BRACK(FH_SDCE | 15), "\\Device\\Harddisk82\\Partition15", &device::exists_nt_dev},
  {"/dev/sdcf1", BRACK(FH_SDCF | 1), "\\Device\\Harddisk83\\Partition1", &device::exists_nt_dev},
  {"/dev/sdcf2", BRACK(FH_SDCF | 2), "\\Device\\Harddisk83\\Partition2", &device::exists_nt_dev},
  {"/dev/sdcf3", BRACK(FH_SDCF | 3), "\\Device\\Harddisk83\\Partition3", &device::exists_nt_dev},
  {"/dev/sdcf4", BRACK(FH_SDCF | 4), "\\Device\\Harddisk83\\Partition4", &device::exists_nt_dev},
  {"/dev/sdcf5", BRACK(FH_SDCF | 5), "\\Device\\Harddisk83\\Partition5", &device::exists_nt_dev},
  {"/dev/sdcf6", BRACK(FH_SDCF | 6), "\\Device\\Harddisk83\\Partition6", &device::exists_nt_dev},
  {"/dev/sdcf7", BRACK(FH_SDCF | 7), "\\Device\\Harddisk83\\Partition7", &device::exists_nt_dev},
  {"/dev/sdcf8", BRACK(FH_SDCF | 8), "\\Device\\Harddisk83\\Partition8", &device::exists_nt_dev},
  {"/dev/sdcf9", BRACK(FH_SDCF | 9), "\\Device\\Harddisk83\\Partition9", &device::exists_nt_dev},
  {"/dev/sdcf10", BRACK(FH_SDCF | 10), "\\Device\\Harddisk83\\Partition10", &device::exists_nt_dev},
  {"/dev/sdcf11", BRACK(FH_SDCF | 11), "\\Device\\Harddisk83\\Partition11", &device::exists_nt_dev},
  {"/dev/sdcf12", BRACK(FH_SDCF | 12), "\\Device\\Harddisk83\\Partition12", &device::exists_nt_dev},
  {"/dev/sdcf13", BRACK(FH_SDCF | 13), "\\Device\\Harddisk83\\Partition13", &device::exists_nt_dev},
  {"/dev/sdcf14", BRACK(FH_SDCF | 14), "\\Device\\Harddisk83\\Partition14", &device::exists_nt_dev},
  {"/dev/sdcf15", BRACK(FH_SDCF | 15), "\\Device\\Harddisk83\\Partition15", &device::exists_nt_dev},
  {"/dev/sdcg1", BRACK(FH_SDCG | 1), "\\Device\\Harddisk84\\Partition1", &device::exists_nt_dev},
  {"/dev/sdcg2", BRACK(FH_SDCG | 2), "\\Device\\Harddisk84\\Partition2", &device::exists_nt_dev},
  {"/dev/sdcg3", BRACK(FH_SDCG | 3), "\\Device\\Harddisk84\\Partition3", &device::exists_nt_dev},
  {"/dev/sdcg4", BRACK(FH_SDCG | 4), "\\Device\\Harddisk84\\Partition4", &device::exists_nt_dev},
  {"/dev/sdcg5", BRACK(FH_SDCG | 5), "\\Device\\Harddisk84\\Partition5", &device::exists_nt_dev},
  {"/dev/sdcg6", BRACK(FH_SDCG | 6), "\\Device\\Harddisk84\\Partition6", &device::exists_nt_dev},
  {"/dev/sdcg7", BRACK(FH_SDCG | 7), "\\Device\\Harddisk84\\Partition7", &device::exists_nt_dev},
  {"/dev/sdcg8", BRACK(FH_SDCG | 8), "\\Device\\Harddisk84\\Partition8", &device::exists_nt_dev},
  {"/dev/sdcg9", BRACK(FH_SDCG | 9), "\\Device\\Harddisk84\\Partition9", &device::exists_nt_dev},
  {"/dev/sdcg10", BRACK(FH_SDCG | 10), "\\Device\\Harddisk84\\Partition10", &device::exists_nt_dev},
  {"/dev/sdcg11", BRACK(FH_SDCG | 11), "\\Device\\Harddisk84\\Partition11", &device::exists_nt_dev},
  {"/dev/sdcg12", BRACK(FH_SDCG | 12), "\\Device\\Harddisk84\\Partition12", &device::exists_nt_dev},
  {"/dev/sdcg13", BRACK(FH_SDCG | 13), "\\Device\\Harddisk84\\Partition13", &device::exists_nt_dev},
  {"/dev/sdcg14", BRACK(FH_SDCG | 14), "\\Device\\Harddisk84\\Partition14", &device::exists_nt_dev},
  {"/dev/sdcg15", BRACK(FH_SDCG | 15), "\\Device\\Harddisk84\\Partition15", &device::exists_nt_dev},
  {"/dev/sdch1", BRACK(FH_SDCH | 1), "\\Device\\Harddisk85\\Partition1", &device::exists_nt_dev},
  {"/dev/sdch2", BRACK(FH_SDCH | 2), "\\Device\\Harddisk85\\Partition2", &device::exists_nt_dev},
  {"/dev/sdch3", BRACK(FH_SDCH | 3), "\\Device\\Harddisk85\\Partition3", &device::exists_nt_dev},
  {"/dev/sdch4", BRACK(FH_SDCH | 4), "\\Device\\Harddisk85\\Partition4", &device::exists_nt_dev},
  {"/dev/sdch5", BRACK(FH_SDCH | 5), "\\Device\\Harddisk85\\Partition5", &device::exists_nt_dev},
  {"/dev/sdch6", BRACK(FH_SDCH | 6), "\\Device\\Harddisk85\\Partition6", &device::exists_nt_dev},
  {"/dev/sdch7", BRACK(FH_SDCH | 7), "\\Device\\Harddisk85\\Partition7", &device::exists_nt_dev},
  {"/dev/sdch8", BRACK(FH_SDCH | 8), "\\Device\\Harddisk85\\Partition8", &device::exists_nt_dev},
  {"/dev/sdch9", BRACK(FH_SDCH | 9), "\\Device\\Harddisk85\\Partition9", &device::exists_nt_dev},
  {"/dev/sdch10", BRACK(FH_SDCH | 10), "\\Device\\Harddisk85\\Partition10", &device::exists_nt_dev},
  {"/dev/sdch11", BRACK(FH_SDCH | 11), "\\Device\\Harddisk85\\Partition11", &device::exists_nt_dev},
  {"/dev/sdch12", BRACK(FH_SDCH | 12), "\\Device\\Harddisk85\\Partition12", &device::exists_nt_dev},
  {"/dev/sdch13", BRACK(FH_SDCH | 13), "\\Device\\Harddisk85\\Partition13", &device::exists_nt_dev},
  {"/dev/sdch14", BRACK(FH_SDCH | 14), "\\Device\\Harddisk85\\Partition14", &device::exists_nt_dev},
  {"/dev/sdch15", BRACK(FH_SDCH | 15), "\\Device\\Harddisk85\\Partition15", &device::exists_nt_dev},
  {"/dev/sdci1", BRACK(FH_SDCI | 1), "\\Device\\Harddisk86\\Partition1", &device::exists_nt_dev},
  {"/dev/sdci2", BRACK(FH_SDCI | 2), "\\Device\\Harddisk86\\Partition2", &device::exists_nt_dev},
  {"/dev/sdci3", BRACK(FH_SDCI | 3), "\\Device\\Harddisk86\\Partition3", &device::exists_nt_dev},
  {"/dev/sdci4", BRACK(FH_SDCI | 4), "\\Device\\Harddisk86\\Partition4", &device::exists_nt_dev},
  {"/dev/sdci5", BRACK(FH_SDCI | 5), "\\Device\\Harddisk86\\Partition5", &device::exists_nt_dev},
  {"/dev/sdci6", BRACK(FH_SDCI | 6), "\\Device\\Harddisk86\\Partition6", &device::exists_nt_dev},
  {"/dev/sdci7", BRACK(FH_SDCI | 7), "\\Device\\Harddisk86\\Partition7", &device::exists_nt_dev},
  {"/dev/sdci8", BRACK(FH_SDCI | 8), "\\Device\\Harddisk86\\Partition8", &device::exists_nt_dev},
  {"/dev/sdci9", BRACK(FH_SDCI | 9), "\\Device\\Harddisk86\\Partition9", &device::exists_nt_dev},
  {"/dev/sdci10", BRACK(FH_SDCI | 10), "\\Device\\Harddisk86\\Partition10", &device::exists_nt_dev},
  {"/dev/sdci11", BRACK(FH_SDCI | 11), "\\Device\\Harddisk86\\Partition11", &device::exists_nt_dev},
  {"/dev/sdci12", BRACK(FH_SDCI | 12), "\\Device\\Harddisk86\\Partition12", &device::exists_nt_dev},
  {"/dev/sdci13", BRACK(FH_SDCI | 13), "\\Device\\Harddisk86\\Partition13", &device::exists_nt_dev},
  {"/dev/sdci14", BRACK(FH_SDCI | 14), "\\Device\\Harddisk86\\Partition14", &device::exists_nt_dev},
  {"/dev/sdci15", BRACK(FH_SDCI | 15), "\\Device\\Harddisk86\\Partition15", &device::exists_nt_dev},
  {"/dev/sdcj1", BRACK(FH_SDCJ | 1), "\\Device\\Harddisk87\\Partition1", &device::exists_nt_dev},
  {"/dev/sdcj2", BRACK(FH_SDCJ | 2), "\\Device\\Harddisk87\\Partition2", &device::exists_nt_dev},
  {"/dev/sdcj3", BRACK(FH_SDCJ | 3), "\\Device\\Harddisk87\\Partition3", &device::exists_nt_dev},
  {"/dev/sdcj4", BRACK(FH_SDCJ | 4), "\\Device\\Harddisk87\\Partition4", &device::exists_nt_dev},
  {"/dev/sdcj5", BRACK(FH_SDCJ | 5), "\\Device\\Harddisk87\\Partition5", &device::exists_nt_dev},
  {"/dev/sdcj6", BRACK(FH_SDCJ | 6), "\\Device\\Harddisk87\\Partition6", &device::exists_nt_dev},
  {"/dev/sdcj7", BRACK(FH_SDCJ | 7), "\\Device\\Harddisk87\\Partition7", &device::exists_nt_dev},
  {"/dev/sdcj8", BRACK(FH_SDCJ | 8), "\\Device\\Harddisk87\\Partition8", &device::exists_nt_dev},
  {"/dev/sdcj9", BRACK(FH_SDCJ | 9), "\\Device\\Harddisk87\\Partition9", &device::exists_nt_dev},
  {"/dev/sdcj10", BRACK(FH_SDCJ | 10), "\\Device\\Harddisk87\\Partition10", &device::exists_nt_dev},
  {"/dev/sdcj11", BRACK(FH_SDCJ | 11), "\\Device\\Harddisk87\\Partition11", &device::exists_nt_dev},
  {"/dev/sdcj12", BRACK(FH_SDCJ | 12), "\\Device\\Harddisk87\\Partition12", &device::exists_nt_dev},
  {"/dev/sdcj13", BRACK(FH_SDCJ | 13), "\\Device\\Harddisk87\\Partition13", &device::exists_nt_dev},
  {"/dev/sdcj14", BRACK(FH_SDCJ | 14), "\\Device\\Harddisk87\\Partition14", &device::exists_nt_dev},
  {"/dev/sdcj15", BRACK(FH_SDCJ | 15), "\\Device\\Harddisk87\\Partition15", &device::exists_nt_dev},
  {"/dev/sdck1", BRACK(FH_SDCK | 1), "\\Device\\Harddisk88\\Partition1", &device::exists_nt_dev},
  {"/dev/sdck2", BRACK(FH_SDCK | 2), "\\Device\\Harddisk88\\Partition2", &device::exists_nt_dev},
  {"/dev/sdck3", BRACK(FH_SDCK | 3), "\\Device\\Harddisk88\\Partition3", &device::exists_nt_dev},
  {"/dev/sdck4", BRACK(FH_SDCK | 4), "\\Device\\Harddisk88\\Partition4", &device::exists_nt_dev},
  {"/dev/sdck5", BRACK(FH_SDCK | 5), "\\Device\\Harddisk88\\Partition5", &device::exists_nt_dev},
  {"/dev/sdck6", BRACK(FH_SDCK | 6), "\\Device\\Harddisk88\\Partition6", &device::exists_nt_dev},
  {"/dev/sdck7", BRACK(FH_SDCK | 7), "\\Device\\Harddisk88\\Partition7", &device::exists_nt_dev},
  {"/dev/sdck8", BRACK(FH_SDCK | 8), "\\Device\\Harddisk88\\Partition8", &device::exists_nt_dev},
  {"/dev/sdck9", BRACK(FH_SDCK | 9), "\\Device\\Harddisk88\\Partition9", &device::exists_nt_dev},
  {"/dev/sdck10", BRACK(FH_SDCK | 10), "\\Device\\Harddisk88\\Partition10", &device::exists_nt_dev},
  {"/dev/sdck11", BRACK(FH_SDCK | 11), "\\Device\\Harddisk88\\Partition11", &device::exists_nt_dev},
  {"/dev/sdck12", BRACK(FH_SDCK | 12), "\\Device\\Harddisk88\\Partition12", &device::exists_nt_dev},
  {"/dev/sdck13", BRACK(FH_SDCK | 13), "\\Device\\Harddisk88\\Partition13", &device::exists_nt_dev},
  {"/dev/sdck14", BRACK(FH_SDCK | 14), "\\Device\\Harddisk88\\Partition14", &device::exists_nt_dev},
  {"/dev/sdck15", BRACK(FH_SDCK | 15), "\\Device\\Harddisk88\\Partition15", &device::exists_nt_dev},
  {"/dev/sdcl1", BRACK(FH_SDCL | 1), "\\Device\\Harddisk89\\Partition1", &device::exists_nt_dev},
  {"/dev/sdcl2", BRACK(FH_SDCL | 2), "\\Device\\Harddisk89\\Partition2", &device::exists_nt_dev},
  {"/dev/sdcl3", BRACK(FH_SDCL | 3), "\\Device\\Harddisk89\\Partition3", &device::exists_nt_dev},
  {"/dev/sdcl4", BRACK(FH_SDCL | 4), "\\Device\\Harddisk89\\Partition4", &device::exists_nt_dev},
  {"/dev/sdcl5", BRACK(FH_SDCL | 5), "\\Device\\Harddisk89\\Partition5", &device::exists_nt_dev},
  {"/dev/sdcl6", BRACK(FH_SDCL | 6), "\\Device\\Harddisk89\\Partition6", &device::exists_nt_dev},
  {"/dev/sdcl7", BRACK(FH_SDCL | 7), "\\Device\\Harddisk89\\Partition7", &device::exists_nt_dev},
  {"/dev/sdcl8", BRACK(FH_SDCL | 8), "\\Device\\Harddisk89\\Partition8", &device::exists_nt_dev},
  {"/dev/sdcl9", BRACK(FH_SDCL | 9), "\\Device\\Harddisk89\\Partition9", &device::exists_nt_dev},
  {"/dev/sdcl10", BRACK(FH_SDCL | 10), "\\Device\\Harddisk89\\Partition10", &device::exists_nt_dev},
  {"/dev/sdcl11", BRACK(FH_SDCL | 11), "\\Device\\Harddisk89\\Partition11", &device::exists_nt_dev},
  {"/dev/sdcl12", BRACK(FH_SDCL | 12), "\\Device\\Harddisk89\\Partition12", &device::exists_nt_dev},
  {"/dev/sdcl13", BRACK(FH_SDCL | 13), "\\Device\\Harddisk89\\Partition13", &device::exists_nt_dev},
  {"/dev/sdcl14", BRACK(FH_SDCL | 14), "\\Device\\Harddisk89\\Partition14", &device::exists_nt_dev},
  {"/dev/sdcl15", BRACK(FH_SDCL | 15), "\\Device\\Harddisk89\\Partition15", &device::exists_nt_dev},
  {"/dev/sdcm1", BRACK(FH_SDCM | 1), "\\Device\\Harddisk90\\Partition1", &device::exists_nt_dev},
  {"/dev/sdcm2", BRACK(FH_SDCM | 2), "\\Device\\Harddisk90\\Partition2", &device::exists_nt_dev},
  {"/dev/sdcm3", BRACK(FH_SDCM | 3), "\\Device\\Harddisk90\\Partition3", &device::exists_nt_dev},
  {"/dev/sdcm4", BRACK(FH_SDCM | 4), "\\Device\\Harddisk90\\Partition4", &device::exists_nt_dev},
  {"/dev/sdcm5", BRACK(FH_SDCM | 5), "\\Device\\Harddisk90\\Partition5", &device::exists_nt_dev},
  {"/dev/sdcm6", BRACK(FH_SDCM | 6), "\\Device\\Harddisk90\\Partition6", &device::exists_nt_dev},
  {"/dev/sdcm7", BRACK(FH_SDCM | 7), "\\Device\\Harddisk90\\Partition7", &device::exists_nt_dev},
  {"/dev/sdcm8", BRACK(FH_SDCM | 8), "\\Device\\Harddisk90\\Partition8", &device::exists_nt_dev},
  {"/dev/sdcm9", BRACK(FH_SDCM | 9), "\\Device\\Harddisk90\\Partition9", &device::exists_nt_dev},
  {"/dev/sdcm10", BRACK(FH_SDCM | 10), "\\Device\\Harddisk90\\Partition10", &device::exists_nt_dev},
  {"/dev/sdcm11", BRACK(FH_SDCM | 11), "\\Device\\Harddisk90\\Partition11", &device::exists_nt_dev},
  {"/dev/sdcm12", BRACK(FH_SDCM | 12), "\\Device\\Harddisk90\\Partition12", &device::exists_nt_dev},
  {"/dev/sdcm13", BRACK(FH_SDCM | 13), "\\Device\\Harddisk90\\Partition13", &device::exists_nt_dev},
  {"/dev/sdcm14", BRACK(FH_SDCM | 14), "\\Device\\Harddisk90\\Partition14", &device::exists_nt_dev},
  {"/dev/sdcm15", BRACK(FH_SDCM | 15), "\\Device\\Harddisk90\\Partition15", &device::exists_nt_dev},
  {"/dev/sdcn1", BRACK(FH_SDCN | 1), "\\Device\\Harddisk91\\Partition1", &device::exists_nt_dev},
  {"/dev/sdcn2", BRACK(FH_SDCN | 2), "\\Device\\Harddisk91\\Partition2", &device::exists_nt_dev},
  {"/dev/sdcn3", BRACK(FH_SDCN | 3), "\\Device\\Harddisk91\\Partition3", &device::exists_nt_dev},
  {"/dev/sdcn4", BRACK(FH_SDCN | 4), "\\Device\\Harddisk91\\Partition4", &device::exists_nt_dev},
  {"/dev/sdcn5", BRACK(FH_SDCN | 5), "\\Device\\Harddisk91\\Partition5", &device::exists_nt_dev},
  {"/dev/sdcn6", BRACK(FH_SDCN | 6), "\\Device\\Harddisk91\\Partition6", &device::exists_nt_dev},
  {"/dev/sdcn7", BRACK(FH_SDCN | 7), "\\Device\\Harddisk91\\Partition7", &device::exists_nt_dev},
  {"/dev/sdcn8", BRACK(FH_SDCN | 8), "\\Device\\Harddisk91\\Partition8", &device::exists_nt_dev},
  {"/dev/sdcn9", BRACK(FH_SDCN | 9), "\\Device\\Harddisk91\\Partition9", &device::exists_nt_dev},
  {"/dev/sdcn10", BRACK(FH_SDCN | 10), "\\Device\\Harddisk91\\Partition10", &device::exists_nt_dev},
  {"/dev/sdcn11", BRACK(FH_SDCN | 11), "\\Device\\Harddisk91\\Partition11", &device::exists_nt_dev},
  {"/dev/sdcn12", BRACK(FH_SDCN | 12), "\\Device\\Harddisk91\\Partition12", &device::exists_nt_dev},
  {"/dev/sdcn13", BRACK(FH_SDCN | 13), "\\Device\\Harddisk91\\Partition13", &device::exists_nt_dev},
  {"/dev/sdcn14", BRACK(FH_SDCN | 14), "\\Device\\Harddisk91\\Partition14", &device::exists_nt_dev},
  {"/dev/sdcn15", BRACK(FH_SDCN | 15), "\\Device\\Harddisk91\\Partition15", &device::exists_nt_dev},
  {"/dev/sdco1", BRACK(FH_SDCO | 1), "\\Device\\Harddisk92\\Partition1", &device::exists_nt_dev},
  {"/dev/sdco2", BRACK(FH_SDCO | 2), "\\Device\\Harddisk92\\Partition2", &device::exists_nt_dev},
  {"/dev/sdco3", BRACK(FH_SDCO | 3), "\\Device\\Harddisk92\\Partition3", &device::exists_nt_dev},
  {"/dev/sdco4", BRACK(FH_SDCO | 4), "\\Device\\Harddisk92\\Partition4", &device::exists_nt_dev},
  {"/dev/sdco5", BRACK(FH_SDCO | 5), "\\Device\\Harddisk92\\Partition5", &device::exists_nt_dev},
  {"/dev/sdco6", BRACK(FH_SDCO | 6), "\\Device\\Harddisk92\\Partition6", &device::exists_nt_dev},
  {"/dev/sdco7", BRACK(FH_SDCO | 7), "\\Device\\Harddisk92\\Partition7", &device::exists_nt_dev},
  {"/dev/sdco8", BRACK(FH_SDCO | 8), "\\Device\\Harddisk92\\Partition8", &device::exists_nt_dev},
  {"/dev/sdco9", BRACK(FH_SDCO | 9), "\\Device\\Harddisk92\\Partition9", &device::exists_nt_dev},
  {"/dev/sdco10", BRACK(FH_SDCO | 10), "\\Device\\Harddisk92\\Partition10", &device::exists_nt_dev},
  {"/dev/sdco11", BRACK(FH_SDCO | 11), "\\Device\\Harddisk92\\Partition11", &device::exists_nt_dev},
  {"/dev/sdco12", BRACK(FH_SDCO | 12), "\\Device\\Harddisk92\\Partition12", &device::exists_nt_dev},
  {"/dev/sdco13", BRACK(FH_SDCO | 13), "\\Device\\Harddisk92\\Partition13", &device::exists_nt_dev},
  {"/dev/sdco14", BRACK(FH_SDCO | 14), "\\Device\\Harddisk92\\Partition14", &device::exists_nt_dev},
  {"/dev/sdco15", BRACK(FH_SDCO | 15), "\\Device\\Harddisk92\\Partition15", &device::exists_nt_dev},
  {"/dev/sdcp1", BRACK(FH_SDCP | 1), "\\Device\\Harddisk93\\Partition1", &device::exists_nt_dev},
  {"/dev/sdcp2", BRACK(FH_SDCP | 2), "\\Device\\Harddisk93\\Partition2", &device::exists_nt_dev},
  {"/dev/sdcp3", BRACK(FH_SDCP | 3), "\\Device\\Harddisk93\\Partition3", &device::exists_nt_dev},
  {"/dev/sdcp4", BRACK(FH_SDCP | 4), "\\Device\\Harddisk93\\Partition4", &device::exists_nt_dev},
  {"/dev/sdcp5", BRACK(FH_SDCP | 5), "\\Device\\Harddisk93\\Partition5", &device::exists_nt_dev},
  {"/dev/sdcp6", BRACK(FH_SDCP | 6), "\\Device\\Harddisk93\\Partition6", &device::exists_nt_dev},
  {"/dev/sdcp7", BRACK(FH_SDCP | 7), "\\Device\\Harddisk93\\Partition7", &device::exists_nt_dev},
  {"/dev/sdcp8", BRACK(FH_SDCP | 8), "\\Device\\Harddisk93\\Partition8", &device::exists_nt_dev},
  {"/dev/sdcp9", BRACK(FH_SDCP | 9), "\\Device\\Harddisk93\\Partition9", &device::exists_nt_dev},
  {"/dev/sdcp10", BRACK(FH_SDCP | 10), "\\Device\\Harddisk93\\Partition10", &device::exists_nt_dev},
  {"/dev/sdcp11", BRACK(FH_SDCP | 11), "\\Device\\Harddisk93\\Partition11", &device::exists_nt_dev},
  {"/dev/sdcp12", BRACK(FH_SDCP | 12), "\\Device\\Harddisk93\\Partition12", &device::exists_nt_dev},
  {"/dev/sdcp13", BRACK(FH_SDCP | 13), "\\Device\\Harddisk93\\Partition13", &device::exists_nt_dev},
  {"/dev/sdcp14", BRACK(FH_SDCP | 14), "\\Device\\Harddisk93\\Partition14", &device::exists_nt_dev},
  {"/dev/sdcp15", BRACK(FH_SDCP | 15), "\\Device\\Harddisk93\\Partition15", &device::exists_nt_dev},
  {"/dev/sdcq1", BRACK(FH_SDCQ | 1), "\\Device\\Harddisk94\\Partition1", &device::exists_nt_dev},
  {"/dev/sdcq2", BRACK(FH_SDCQ | 2), "\\Device\\Harddisk94\\Partition2", &device::exists_nt_dev},
  {"/dev/sdcq3", BRACK(FH_SDCQ | 3), "\\Device\\Harddisk94\\Partition3", &device::exists_nt_dev},
  {"/dev/sdcq4", BRACK(FH_SDCQ | 4), "\\Device\\Harddisk94\\Partition4", &device::exists_nt_dev},
  {"/dev/sdcq5", BRACK(FH_SDCQ | 5), "\\Device\\Harddisk94\\Partition5", &device::exists_nt_dev},
  {"/dev/sdcq6", BRACK(FH_SDCQ | 6), "\\Device\\Harddisk94\\Partition6", &device::exists_nt_dev},
  {"/dev/sdcq7", BRACK(FH_SDCQ | 7), "\\Device\\Harddisk94\\Partition7", &device::exists_nt_dev},
  {"/dev/sdcq8", BRACK(FH_SDCQ | 8), "\\Device\\Harddisk94\\Partition8", &device::exists_nt_dev},
  {"/dev/sdcq9", BRACK(FH_SDCQ | 9), "\\Device\\Harddisk94\\Partition9", &device::exists_nt_dev},
  {"/dev/sdcq10", BRACK(FH_SDCQ | 10), "\\Device\\Harddisk94\\Partition10", &device::exists_nt_dev},
  {"/dev/sdcq11", BRACK(FH_SDCQ | 11), "\\Device\\Harddisk94\\Partition11", &device::exists_nt_dev},
  {"/dev/sdcq12", BRACK(FH_SDCQ | 12), "\\Device\\Harddisk94\\Partition12", &device::exists_nt_dev},
  {"/dev/sdcq13", BRACK(FH_SDCQ | 13), "\\Device\\Harddisk94\\Partition13", &device::exists_nt_dev},
  {"/dev/sdcq14", BRACK(FH_SDCQ | 14), "\\Device\\Harddisk94\\Partition14", &device::exists_nt_dev},
  {"/dev/sdcq15", BRACK(FH_SDCQ | 15), "\\Device\\Harddisk94\\Partition15", &device::exists_nt_dev},
  {"/dev/sdcr1", BRACK(FH_SDCR | 1), "\\Device\\Harddisk95\\Partition1", &device::exists_nt_dev},
  {"/dev/sdcr2", BRACK(FH_SDCR | 2), "\\Device\\Harddisk95\\Partition2", &device::exists_nt_dev},
  {"/dev/sdcr3", BRACK(FH_SDCR | 3), "\\Device\\Harddisk95\\Partition3", &device::exists_nt_dev},
  {"/dev/sdcr4", BRACK(FH_SDCR | 4), "\\Device\\Harddisk95\\Partition4", &device::exists_nt_dev},
  {"/dev/sdcr5", BRACK(FH_SDCR | 5), "\\Device\\Harddisk95\\Partition5", &device::exists_nt_dev},
  {"/dev/sdcr6", BRACK(FH_SDCR | 6), "\\Device\\Harddisk95\\Partition6", &device::exists_nt_dev},
  {"/dev/sdcr7", BRACK(FH_SDCR | 7), "\\Device\\Harddisk95\\Partition7", &device::exists_nt_dev},
  {"/dev/sdcr8", BRACK(FH_SDCR | 8), "\\Device\\Harddisk95\\Partition8", &device::exists_nt_dev},
  {"/dev/sdcr9", BRACK(FH_SDCR | 9), "\\Device\\Harddisk95\\Partition9", &device::exists_nt_dev},
  {"/dev/sdcr10", BRACK(FH_SDCR | 10), "\\Device\\Harddisk95\\Partition10", &device::exists_nt_dev},
  {"/dev/sdcr11", BRACK(FH_SDCR | 11), "\\Device\\Harddisk95\\Partition11", &device::exists_nt_dev},
  {"/dev/sdcr12", BRACK(FH_SDCR | 12), "\\Device\\Harddisk95\\Partition12", &device::exists_nt_dev},
  {"/dev/sdcr13", BRACK(FH_SDCR | 13), "\\Device\\Harddisk95\\Partition13", &device::exists_nt_dev},
  {"/dev/sdcr14", BRACK(FH_SDCR | 14), "\\Device\\Harddisk95\\Partition14", &device::exists_nt_dev},
  {"/dev/sdcr15", BRACK(FH_SDCR | 15), "\\Device\\Harddisk95\\Partition15", &device::exists_nt_dev},
  {"/dev/sdcs1", BRACK(FH_SDCS | 1), "\\Device\\Harddisk96\\Partition1", &device::exists_nt_dev},
  {"/dev/sdcs2", BRACK(FH_SDCS | 2), "\\Device\\Harddisk96\\Partition2", &device::exists_nt_dev},
  {"/dev/sdcs3", BRACK(FH_SDCS | 3), "\\Device\\Harddisk96\\Partition3", &device::exists_nt_dev},
  {"/dev/sdcs4", BRACK(FH_SDCS | 4), "\\Device\\Harddisk96\\Partition4", &device::exists_nt_dev},
  {"/dev/sdcs5", BRACK(FH_SDCS | 5), "\\Device\\Harddisk96\\Partition5", &device::exists_nt_dev},
  {"/dev/sdcs6", BRACK(FH_SDCS | 6), "\\Device\\Harddisk96\\Partition6", &device::exists_nt_dev},
  {"/dev/sdcs7", BRACK(FH_SDCS | 7), "\\Device\\Harddisk96\\Partition7", &device::exists_nt_dev},
  {"/dev/sdcs8", BRACK(FH_SDCS | 8), "\\Device\\Harddisk96\\Partition8", &device::exists_nt_dev},
  {"/dev/sdcs9", BRACK(FH_SDCS | 9), "\\Device\\Harddisk96\\Partition9", &device::exists_nt_dev},
  {"/dev/sdcs10", BRACK(FH_SDCS | 10), "\\Device\\Harddisk96\\Partition10", &device::exists_nt_dev},
  {"/dev/sdcs11", BRACK(FH_SDCS | 11), "\\Device\\Harddisk96\\Partition11", &device::exists_nt_dev},
  {"/dev/sdcs12", BRACK(FH_SDCS | 12), "\\Device\\Harddisk96\\Partition12", &device::exists_nt_dev},
  {"/dev/sdcs13", BRACK(FH_SDCS | 13), "\\Device\\Harddisk96\\Partition13", &device::exists_nt_dev},
  {"/dev/sdcs14", BRACK(FH_SDCS | 14), "\\Device\\Harddisk96\\Partition14", &device::exists_nt_dev},
  {"/dev/sdcs15", BRACK(FH_SDCS | 15), "\\Device\\Harddisk96\\Partition15", &device::exists_nt_dev},
  {"/dev/sdct1", BRACK(FH_SDCT | 1), "\\Device\\Harddisk97\\Partition1", &device::exists_nt_dev},
  {"/dev/sdct2", BRACK(FH_SDCT | 2), "\\Device\\Harddisk97\\Partition2", &device::exists_nt_dev},
  {"/dev/sdct3", BRACK(FH_SDCT | 3), "\\Device\\Harddisk97\\Partition3", &device::exists_nt_dev},
  {"/dev/sdct4", BRACK(FH_SDCT | 4), "\\Device\\Harddisk97\\Partition4", &device::exists_nt_dev},
  {"/dev/sdct5", BRACK(FH_SDCT | 5), "\\Device\\Harddisk97\\Partition5", &device::exists_nt_dev},
  {"/dev/sdct6", BRACK(FH_SDCT | 6), "\\Device\\Harddisk97\\Partition6", &device::exists_nt_dev},
  {"/dev/sdct7", BRACK(FH_SDCT | 7), "\\Device\\Harddisk97\\Partition7", &device::exists_nt_dev},
  {"/dev/sdct8", BRACK(FH_SDCT | 8), "\\Device\\Harddisk97\\Partition8", &device::exists_nt_dev},
  {"/dev/sdct9", BRACK(FH_SDCT | 9), "\\Device\\Harddisk97\\Partition9", &device::exists_nt_dev},
  {"/dev/sdct10", BRACK(FH_SDCT | 10), "\\Device\\Harddisk97\\Partition10", &device::exists_nt_dev},
  {"/dev/sdct11", BRACK(FH_SDCT | 11), "\\Device\\Harddisk97\\Partition11", &device::exists_nt_dev},
  {"/dev/sdct12", BRACK(FH_SDCT | 12), "\\Device\\Harddisk97\\Partition12", &device::exists_nt_dev},
  {"/dev/sdct13", BRACK(FH_SDCT | 13), "\\Device\\Harddisk97\\Partition13", &device::exists_nt_dev},
  {"/dev/sdct14", BRACK(FH_SDCT | 14), "\\Device\\Harddisk97\\Partition14", &device::exists_nt_dev},
  {"/dev/sdct15", BRACK(FH_SDCT | 15), "\\Device\\Harddisk97\\Partition15", &device::exists_nt_dev},
  {"/dev/sdcu1", BRACK(FH_SDCU | 1), "\\Device\\Harddisk98\\Partition1", &device::exists_nt_dev},
  {"/dev/sdcu2", BRACK(FH_SDCU | 2), "\\Device\\Harddisk98\\Partition2", &device::exists_nt_dev},
  {"/dev/sdcu3", BRACK(FH_SDCU | 3), "\\Device\\Harddisk98\\Partition3", &device::exists_nt_dev},
  {"/dev/sdcu4", BRACK(FH_SDCU | 4), "\\Device\\Harddisk98\\Partition4", &device::exists_nt_dev},
  {"/dev/sdcu5", BRACK(FH_SDCU | 5), "\\Device\\Harddisk98\\Partition5", &device::exists_nt_dev},
  {"/dev/sdcu6", BRACK(FH_SDCU | 6), "\\Device\\Harddisk98\\Partition6", &device::exists_nt_dev},
  {"/dev/sdcu7", BRACK(FH_SDCU | 7), "\\Device\\Harddisk98\\Partition7", &device::exists_nt_dev},
  {"/dev/sdcu8", BRACK(FH_SDCU | 8), "\\Device\\Harddisk98\\Partition8", &device::exists_nt_dev},
  {"/dev/sdcu9", BRACK(FH_SDCU | 9), "\\Device\\Harddisk98\\Partition9", &device::exists_nt_dev},
  {"/dev/sdcu10", BRACK(FH_SDCU | 10), "\\Device\\Harddisk98\\Partition10", &device::exists_nt_dev},
  {"/dev/sdcu11", BRACK(FH_SDCU | 11), "\\Device\\Harddisk98\\Partition11", &device::exists_nt_dev},
  {"/dev/sdcu12", BRACK(FH_SDCU | 12), "\\Device\\Harddisk98\\Partition12", &device::exists_nt_dev},
  {"/dev/sdcu13", BRACK(FH_SDCU | 13), "\\Device\\Harddisk98\\Partition13", &device::exists_nt_dev},
  {"/dev/sdcu14", BRACK(FH_SDCU | 14), "\\Device\\Harddisk98\\Partition14", &device::exists_nt_dev},
  {"/dev/sdcu15", BRACK(FH_SDCU | 15), "\\Device\\Harddisk98\\Partition15", &device::exists_nt_dev},
  {"/dev/sdcv1", BRACK(FH_SDCV | 1), "\\Device\\Harddisk99\\Partition1", &device::exists_nt_dev},
  {"/dev/sdcv2", BRACK(FH_SDCV | 2), "\\Device\\Harddisk99\\Partition2", &device::exists_nt_dev},
  {"/dev/sdcv3", BRACK(FH_SDCV | 3), "\\Device\\Harddisk99\\Partition3", &device::exists_nt_dev},
  {"/dev/sdcv4", BRACK(FH_SDCV | 4), "\\Device\\Harddisk99\\Partition4", &device::exists_nt_dev},
  {"/dev/sdcv5", BRACK(FH_SDCV | 5), "\\Device\\Harddisk99\\Partition5", &device::exists_nt_dev},
  {"/dev/sdcv6", BRACK(FH_SDCV | 6), "\\Device\\Harddisk99\\Partition6", &device::exists_nt_dev},
  {"/dev/sdcv7", BRACK(FH_SDCV | 7), "\\Device\\Harddisk99\\Partition7", &device::exists_nt_dev},
  {"/dev/sdcv8", BRACK(FH_SDCV | 8), "\\Device\\Harddisk99\\Partition8", &device::exists_nt_dev},
  {"/dev/sdcv9", BRACK(FH_SDCV | 9), "\\Device\\Harddisk99\\Partition9", &device::exists_nt_dev},
  {"/dev/sdcv10", BRACK(FH_SDCV | 10), "\\Device\\Harddisk99\\Partition10", &device::exists_nt_dev},
  {"/dev/sdcv11", BRACK(FH_SDCV | 11), "\\Device\\Harddisk99\\Partition11", &device::exists_nt_dev},
  {"/dev/sdcv12", BRACK(FH_SDCV | 12), "\\Device\\Harddisk99\\Partition12", &device::exists_nt_dev},
  {"/dev/sdcv13", BRACK(FH_SDCV | 13), "\\Device\\Harddisk99\\Partition13", &device::exists_nt_dev},
  {"/dev/sdcv14", BRACK(FH_SDCV | 14), "\\Device\\Harddisk99\\Partition14", &device::exists_nt_dev},
  {"/dev/sdcv15", BRACK(FH_SDCV | 15), "\\Device\\Harddisk99\\Partition15", &device::exists_nt_dev},
  {"/dev/sdcw1", BRACK(FH_SDCW | 1), "\\Device\\Harddisk100\\Partition1", &device::exists_nt_dev},
  {"/dev/sdcw2", BRACK(FH_SDCW | 2), "\\Device\\Harddisk100\\Partition2", &device::exists_nt_dev},
  {"/dev/sdcw3", BRACK(FH_SDCW | 3), "\\Device\\Harddisk100\\Partition3", &device::exists_nt_dev},
  {"/dev/sdcw4", BRACK(FH_SDCW | 4), "\\Device\\Harddisk100\\Partition4", &device::exists_nt_dev},
  {"/dev/sdcw5", BRACK(FH_SDCW | 5), "\\Device\\Harddisk100\\Partition5", &device::exists_nt_dev},
  {"/dev/sdcw6", BRACK(FH_SDCW | 6), "\\Device\\Harddisk100\\Partition6", &device::exists_nt_dev},
  {"/dev/sdcw7", BRACK(FH_SDCW | 7), "\\Device\\Harddisk100\\Partition7", &device::exists_nt_dev},
  {"/dev/sdcw8", BRACK(FH_SDCW | 8), "\\Device\\Harddisk100\\Partition8", &device::exists_nt_dev},
  {"/dev/sdcw9", BRACK(FH_SDCW | 9), "\\Device\\Harddisk100\\Partition9", &device::exists_nt_dev},
  {"/dev/sdcw10", BRACK(FH_SDCW | 10), "\\Device\\Harddisk100\\Partition10", &device::exists_nt_dev},
  {"/dev/sdcw11", BRACK(FH_SDCW | 11), "\\Device\\Harddisk100\\Partition11", &device::exists_nt_dev},
  {"/dev/sdcw12", BRACK(FH_SDCW | 12), "\\Device\\Harddisk100\\Partition12", &device::exists_nt_dev},
  {"/dev/sdcw13", BRACK(FH_SDCW | 13), "\\Device\\Harddisk100\\Partition13", &device::exists_nt_dev},
  {"/dev/sdcw14", BRACK(FH_SDCW | 14), "\\Device\\Harddisk100\\Partition14", &device::exists_nt_dev},
  {"/dev/sdcw15", BRACK(FH_SDCW | 15), "\\Device\\Harddisk100\\Partition15", &device::exists_nt_dev},
  {"/dev/sdcx1", BRACK(FH_SDCX | 1), "\\Device\\Harddisk101\\Partition1", &device::exists_nt_dev},
  {"/dev/sdcx2", BRACK(FH_SDCX | 2), "\\Device\\Harddisk101\\Partition2", &device::exists_nt_dev},
  {"/dev/sdcx3", BRACK(FH_SDCX | 3), "\\Device\\Harddisk101\\Partition3", &device::exists_nt_dev},
  {"/dev/sdcx4", BRACK(FH_SDCX | 4), "\\Device\\Harddisk101\\Partition4", &device::exists_nt_dev},
  {"/dev/sdcx5", BRACK(FH_SDCX | 5), "\\Device\\Harddisk101\\Partition5", &device::exists_nt_dev},
  {"/dev/sdcx6", BRACK(FH_SDCX | 6), "\\Device\\Harddisk101\\Partition6", &device::exists_nt_dev},
  {"/dev/sdcx7", BRACK(FH_SDCX | 7), "\\Device\\Harddisk101\\Partition7", &device::exists_nt_dev},
  {"/dev/sdcx8", BRACK(FH_SDCX | 8), "\\Device\\Harddisk101\\Partition8", &device::exists_nt_dev},
  {"/dev/sdcx9", BRACK(FH_SDCX | 9), "\\Device\\Harddisk101\\Partition9", &device::exists_nt_dev},
  {"/dev/sdcx10", BRACK(FH_SDCX | 10), "\\Device\\Harddisk101\\Partition10", &device::exists_nt_dev},
  {"/dev/sdcx11", BRACK(FH_SDCX | 11), "\\Device\\Harddisk101\\Partition11", &device::exists_nt_dev},
  {"/dev/sdcx12", BRACK(FH_SDCX | 12), "\\Device\\Harddisk101\\Partition12", &device::exists_nt_dev},
  {"/dev/sdcx13", BRACK(FH_SDCX | 13), "\\Device\\Harddisk101\\Partition13", &device::exists_nt_dev},
  {"/dev/sdcx14", BRACK(FH_SDCX | 14), "\\Device\\Harddisk101\\Partition14", &device::exists_nt_dev},
  {"/dev/sdcx15", BRACK(FH_SDCX | 15), "\\Device\\Harddisk101\\Partition15", &device::exists_nt_dev},
  {"/dev/sdcy1", BRACK(FH_SDCY | 1), "\\Device\\Harddisk102\\Partition1", &device::exists_nt_dev},
  {"/dev/sdcy2", BRACK(FH_SDCY | 2), "\\Device\\Harddisk102\\Partition2", &device::exists_nt_dev},
  {"/dev/sdcy3", BRACK(FH_SDCY | 3), "\\Device\\Harddisk102\\Partition3", &device::exists_nt_dev},
  {"/dev/sdcy4", BRACK(FH_SDCY | 4), "\\Device\\Harddisk102\\Partition4", &device::exists_nt_dev},
  {"/dev/sdcy5", BRACK(FH_SDCY | 5), "\\Device\\Harddisk102\\Partition5", &device::exists_nt_dev},
  {"/dev/sdcy6", BRACK(FH_SDCY | 6), "\\Device\\Harddisk102\\Partition6", &device::exists_nt_dev},
  {"/dev/sdcy7", BRACK(FH_SDCY | 7), "\\Device\\Harddisk102\\Partition7", &device::exists_nt_dev},
  {"/dev/sdcy8", BRACK(FH_SDCY | 8), "\\Device\\Harddisk102\\Partition8", &device::exists_nt_dev},
  {"/dev/sdcy9", BRACK(FH_SDCY | 9), "\\Device\\Harddisk102\\Partition9", &device::exists_nt_dev},
  {"/dev/sdcy10", BRACK(FH_SDCY | 10), "\\Device\\Harddisk102\\Partition10", &device::exists_nt_dev},
  {"/dev/sdcy11", BRACK(FH_SDCY | 11), "\\Device\\Harddisk102\\Partition11", &device::exists_nt_dev},
  {"/dev/sdcy12", BRACK(FH_SDCY | 12), "\\Device\\Harddisk102\\Partition12", &device::exists_nt_dev},
  {"/dev/sdcy13", BRACK(FH_SDCY | 13), "\\Device\\Harddisk102\\Partition13", &device::exists_nt_dev},
  {"/dev/sdcy14", BRACK(FH_SDCY | 14), "\\Device\\Harddisk102\\Partition14", &device::exists_nt_dev},
  {"/dev/sdcy15", BRACK(FH_SDCY | 15), "\\Device\\Harddisk102\\Partition15", &device::exists_nt_dev},
  {"/dev/sdcz1", BRACK(FH_SDCZ | 1), "\\Device\\Harddisk103\\Partition1", &device::exists_nt_dev},
  {"/dev/sdcz2", BRACK(FH_SDCZ | 2), "\\Device\\Harddisk103\\Partition2", &device::exists_nt_dev},
  {"/dev/sdcz3", BRACK(FH_SDCZ | 3), "\\Device\\Harddisk103\\Partition3", &device::exists_nt_dev},
  {"/dev/sdcz4", BRACK(FH_SDCZ | 4), "\\Device\\Harddisk103\\Partition4", &device::exists_nt_dev},
  {"/dev/sdcz5", BRACK(FH_SDCZ | 5), "\\Device\\Harddisk103\\Partition5", &device::exists_nt_dev},
  {"/dev/sdcz6", BRACK(FH_SDCZ | 6), "\\Device\\Harddisk103\\Partition6", &device::exists_nt_dev},
  {"/dev/sdcz7", BRACK(FH_SDCZ | 7), "\\Device\\Harddisk103\\Partition7", &device::exists_nt_dev},
  {"/dev/sdcz8", BRACK(FH_SDCZ | 8), "\\Device\\Harddisk103\\Partition8", &device::exists_nt_dev},
  {"/dev/sdcz9", BRACK(FH_SDCZ | 9), "\\Device\\Harddisk103\\Partition9", &device::exists_nt_dev},
  {"/dev/sdcz10", BRACK(FH_SDCZ | 10), "\\Device\\Harddisk103\\Partition10", &device::exists_nt_dev},
  {"/dev/sdcz11", BRACK(FH_SDCZ | 11), "\\Device\\Harddisk103\\Partition11", &device::exists_nt_dev},
  {"/dev/sdcz12", BRACK(FH_SDCZ | 12), "\\Device\\Harddisk103\\Partition12", &device::exists_nt_dev},
  {"/dev/sdcz13", BRACK(FH_SDCZ | 13), "\\Device\\Harddisk103\\Partition13", &device::exists_nt_dev},
  {"/dev/sdcz14", BRACK(FH_SDCZ | 14), "\\Device\\Harddisk103\\Partition14", &device::exists_nt_dev},
  {"/dev/sdcz15", BRACK(FH_SDCZ | 15), "\\Device\\Harddisk103\\Partition15", &device::exists_nt_dev},
  {"/dev/sdda", BRACK(FH_SDDA), "\\Device\\Harddisk104\\Partition0", &device::exists_nt_dev},
  {"/dev/sddb", BRACK(FH_SDDB), "\\Device\\Harddisk105\\Partition0", &device::exists_nt_dev},
  {"/dev/sddc", BRACK(FH_SDDC), "\\Device\\Harddisk106\\Partition0", &device::exists_nt_dev},
  {"/dev/sddd", BRACK(FH_SDDD), "\\Device\\Harddisk107\\Partition0", &device::exists_nt_dev},
  {"/dev/sdde", BRACK(FH_SDDE), "\\Device\\Harddisk108\\Partition0", &device::exists_nt_dev},
  {"/dev/sddf", BRACK(FH_SDDF), "\\Device\\Harddisk109\\Partition0", &device::exists_nt_dev},
  {"/dev/sddg", BRACK(FH_SDDG), "\\Device\\Harddisk110\\Partition0", &device::exists_nt_dev},
  {"/dev/sddh", BRACK(FH_SDDH), "\\Device\\Harddisk111\\Partition0", &device::exists_nt_dev},
  {"/dev/sddi", BRACK(FH_SDDI), "\\Device\\Harddisk112\\Partition0", &device::exists_nt_dev},
  {"/dev/sddj", BRACK(FH_SDDJ), "\\Device\\Harddisk113\\Partition0", &device::exists_nt_dev},
  {"/dev/sddk", BRACK(FH_SDDK), "\\Device\\Harddisk114\\Partition0", &device::exists_nt_dev},
  {"/dev/sddl", BRACK(FH_SDDL), "\\Device\\Harddisk115\\Partition0", &device::exists_nt_dev},
  {"/dev/sddm", BRACK(FH_SDDM), "\\Device\\Harddisk116\\Partition0", &device::exists_nt_dev},
  {"/dev/sddn", BRACK(FH_SDDN), "\\Device\\Harddisk117\\Partition0", &device::exists_nt_dev},
  {"/dev/sddo", BRACK(FH_SDDO), "\\Device\\Harddisk118\\Partition0", &device::exists_nt_dev},
  {"/dev/sddp", BRACK(FH_SDDP), "\\Device\\Harddisk119\\Partition0", &device::exists_nt_dev},
  {"/dev/sddq", BRACK(FH_SDDQ), "\\Device\\Harddisk120\\Partition0", &device::exists_nt_dev},
  {"/dev/sddr", BRACK(FH_SDDR), "\\Device\\Harddisk121\\Partition0", &device::exists_nt_dev},
  {"/dev/sdds", BRACK(FH_SDDS), "\\Device\\Harddisk122\\Partition0", &device::exists_nt_dev},
  {"/dev/sddt", BRACK(FH_SDDT), "\\Device\\Harddisk123\\Partition0", &device::exists_nt_dev},
  {"/dev/sddu", BRACK(FH_SDDU), "\\Device\\Harddisk124\\Partition0", &device::exists_nt_dev},
  {"/dev/sddv", BRACK(FH_SDDV), "\\Device\\Harddisk125\\Partition0", &device::exists_nt_dev},
  {"/dev/sddw", BRACK(FH_SDDW), "\\Device\\Harddisk126\\Partition0", &device::exists_nt_dev},
  {"/dev/sddx", BRACK(FH_SDDX), "\\Device\\Harddisk127\\Partition0", &device::exists_nt_dev},
  {"/dev/sdda1", BRACK(FH_SDDA | 1), "\\Device\\Harddisk104\\Partition1", &device::exists_nt_dev},
  {"/dev/sdda2", BRACK(FH_SDDA | 2), "\\Device\\Harddisk104\\Partition2", &device::exists_nt_dev},
  {"/dev/sdda3", BRACK(FH_SDDA | 3), "\\Device\\Harddisk104\\Partition3", &device::exists_nt_dev},
  {"/dev/sdda4", BRACK(FH_SDDA | 4), "\\Device\\Harddisk104\\Partition4", &device::exists_nt_dev},
  {"/dev/sdda5", BRACK(FH_SDDA | 5), "\\Device\\Harddisk104\\Partition5", &device::exists_nt_dev},
  {"/dev/sdda6", BRACK(FH_SDDA | 6), "\\Device\\Harddisk104\\Partition6", &device::exists_nt_dev},
  {"/dev/sdda7", BRACK(FH_SDDA | 7), "\\Device\\Harddisk104\\Partition7", &device::exists_nt_dev},
  {"/dev/sdda8", BRACK(FH_SDDA | 8), "\\Device\\Harddisk104\\Partition8", &device::exists_nt_dev},
  {"/dev/sdda9", BRACK(FH_SDDA | 9), "\\Device\\Harddisk104\\Partition9", &device::exists_nt_dev},
  {"/dev/sdda10", BRACK(FH_SDDA | 10), "\\Device\\Harddisk104\\Partition10", &device::exists_nt_dev},
  {"/dev/sdda11", BRACK(FH_SDDA | 11), "\\Device\\Harddisk104\\Partition11", &device::exists_nt_dev},
  {"/dev/sdda12", BRACK(FH_SDDA | 12), "\\Device\\Harddisk104\\Partition12", &device::exists_nt_dev},
  {"/dev/sdda13", BRACK(FH_SDDA | 13), "\\Device\\Harddisk104\\Partition13", &device::exists_nt_dev},
  {"/dev/sdda14", BRACK(FH_SDDA | 14), "\\Device\\Harddisk104\\Partition14", &device::exists_nt_dev},
  {"/dev/sdda15", BRACK(FH_SDDA | 15), "\\Device\\Harddisk104\\Partition15", &device::exists_nt_dev},
  {"/dev/sddb1", BRACK(FH_SDDB | 1), "\\Device\\Harddisk105\\Partition1", &device::exists_nt_dev},
  {"/dev/sddb2", BRACK(FH_SDDB | 2), "\\Device\\Harddisk105\\Partition2", &device::exists_nt_dev},
  {"/dev/sddb3", BRACK(FH_SDDB | 3), "\\Device\\Harddisk105\\Partition3", &device::exists_nt_dev},
  {"/dev/sddb4", BRACK(FH_SDDB | 4), "\\Device\\Harddisk105\\Partition4", &device::exists_nt_dev},
  {"/dev/sddb5", BRACK(FH_SDDB | 5), "\\Device\\Harddisk105\\Partition5", &device::exists_nt_dev},
  {"/dev/sddb6", BRACK(FH_SDDB | 6), "\\Device\\Harddisk105\\Partition6", &device::exists_nt_dev},
  {"/dev/sddb7", BRACK(FH_SDDB | 7), "\\Device\\Harddisk105\\Partition7", &device::exists_nt_dev},
  {"/dev/sddb8", BRACK(FH_SDDB | 8), "\\Device\\Harddisk105\\Partition8", &device::exists_nt_dev},
  {"/dev/sddb9", BRACK(FH_SDDB | 9), "\\Device\\Harddisk105\\Partition9", &device::exists_nt_dev},
  {"/dev/sddb10", BRACK(FH_SDDB | 10), "\\Device\\Harddisk105\\Partition10", &device::exists_nt_dev},
  {"/dev/sddb11", BRACK(FH_SDDB | 11), "\\Device\\Harddisk105\\Partition11", &device::exists_nt_dev},
  {"/dev/sddb12", BRACK(FH_SDDB | 12), "\\Device\\Harddisk105\\Partition12", &device::exists_nt_dev},
  {"/dev/sddb13", BRACK(FH_SDDB | 13), "\\Device\\Harddisk105\\Partition13", &device::exists_nt_dev},
  {"/dev/sddb14", BRACK(FH_SDDB | 14), "\\Device\\Harddisk105\\Partition14", &device::exists_nt_dev},
  {"/dev/sddb15", BRACK(FH_SDDB | 15), "\\Device\\Harddisk105\\Partition15", &device::exists_nt_dev},
  {"/dev/sddc1", BRACK(FH_SDDC | 1), "\\Device\\Harddisk106\\Partition1", &device::exists_nt_dev},
  {"/dev/sddc2", BRACK(FH_SDDC | 2), "\\Device\\Harddisk106\\Partition2", &device::exists_nt_dev},
  {"/dev/sddc3", BRACK(FH_SDDC | 3), "\\Device\\Harddisk106\\Partition3", &device::exists_nt_dev},
  {"/dev/sddc4", BRACK(FH_SDDC | 4), "\\Device\\Harddisk106\\Partition4", &device::exists_nt_dev},
  {"/dev/sddc5", BRACK(FH_SDDC | 5), "\\Device\\Harddisk106\\Partition5", &device::exists_nt_dev},
  {"/dev/sddc6", BRACK(FH_SDDC | 6), "\\Device\\Harddisk106\\Partition6", &device::exists_nt_dev},
  {"/dev/sddc7", BRACK(FH_SDDC | 7), "\\Device\\Harddisk106\\Partition7", &device::exists_nt_dev},
  {"/dev/sddc8", BRACK(FH_SDDC | 8), "\\Device\\Harddisk106\\Partition8", &device::exists_nt_dev},
  {"/dev/sddc9", BRACK(FH_SDDC | 9), "\\Device\\Harddisk106\\Partition9", &device::exists_nt_dev},
  {"/dev/sddc10", BRACK(FH_SDDC | 10), "\\Device\\Harddisk106\\Partition10", &device::exists_nt_dev},
  {"/dev/sddc11", BRACK(FH_SDDC | 11), "\\Device\\Harddisk106\\Partition11", &device::exists_nt_dev},
  {"/dev/sddc12", BRACK(FH_SDDC | 12), "\\Device\\Harddisk106\\Partition12", &device::exists_nt_dev},
  {"/dev/sddc13", BRACK(FH_SDDC | 13), "\\Device\\Harddisk106\\Partition13", &device::exists_nt_dev},
  {"/dev/sddc14", BRACK(FH_SDDC | 14), "\\Device\\Harddisk106\\Partition14", &device::exists_nt_dev},
  {"/dev/sddc15", BRACK(FH_SDDC | 15), "\\Device\\Harddisk106\\Partition15", &device::exists_nt_dev},
  {"/dev/sddd1", BRACK(FH_SDDD | 1), "\\Device\\Harddisk107\\Partition1", &device::exists_nt_dev},
  {"/dev/sddd2", BRACK(FH_SDDD | 2), "\\Device\\Harddisk107\\Partition2", &device::exists_nt_dev},
  {"/dev/sddd3", BRACK(FH_SDDD | 3), "\\Device\\Harddisk107\\Partition3", &device::exists_nt_dev},
  {"/dev/sddd4", BRACK(FH_SDDD | 4), "\\Device\\Harddisk107\\Partition4", &device::exists_nt_dev},
  {"/dev/sddd5", BRACK(FH_SDDD | 5), "\\Device\\Harddisk107\\Partition5", &device::exists_nt_dev},
  {"/dev/sddd6", BRACK(FH_SDDD | 6), "\\Device\\Harddisk107\\Partition6", &device::exists_nt_dev},
  {"/dev/sddd7", BRACK(FH_SDDD | 7), "\\Device\\Harddisk107\\Partition7", &device::exists_nt_dev},
  {"/dev/sddd8", BRACK(FH_SDDD | 8), "\\Device\\Harddisk107\\Partition8", &device::exists_nt_dev},
  {"/dev/sddd9", BRACK(FH_SDDD | 9), "\\Device\\Harddisk107\\Partition9", &device::exists_nt_dev},
  {"/dev/sddd10", BRACK(FH_SDDD | 10), "\\Device\\Harddisk107\\Partition10", &device::exists_nt_dev},
  {"/dev/sddd11", BRACK(FH_SDDD | 11), "\\Device\\Harddisk107\\Partition11", &device::exists_nt_dev},
  {"/dev/sddd12", BRACK(FH_SDDD | 12), "\\Device\\Harddisk107\\Partition12", &device::exists_nt_dev},
  {"/dev/sddd13", BRACK(FH_SDDD | 13), "\\Device\\Harddisk107\\Partition13", &device::exists_nt_dev},
  {"/dev/sddd14", BRACK(FH_SDDD | 14), "\\Device\\Harddisk107\\Partition14", &device::exists_nt_dev},
  {"/dev/sddd15", BRACK(FH_SDDD | 15), "\\Device\\Harddisk107\\Partition15", &device::exists_nt_dev},
  {"/dev/sdde1", BRACK(FH_SDDE | 1), "\\Device\\Harddisk108\\Partition1", &device::exists_nt_dev},
  {"/dev/sdde2", BRACK(FH_SDDE | 2), "\\Device\\Harddisk108\\Partition2", &device::exists_nt_dev},
  {"/dev/sdde3", BRACK(FH_SDDE | 3), "\\Device\\Harddisk108\\Partition3", &device::exists_nt_dev},
  {"/dev/sdde4", BRACK(FH_SDDE | 4), "\\Device\\Harddisk108\\Partition4", &device::exists_nt_dev},
  {"/dev/sdde5", BRACK(FH_SDDE | 5), "\\Device\\Harddisk108\\Partition5", &device::exists_nt_dev},
  {"/dev/sdde6", BRACK(FH_SDDE | 6), "\\Device\\Harddisk108\\Partition6", &device::exists_nt_dev},
  {"/dev/sdde7", BRACK(FH_SDDE | 7), "\\Device\\Harddisk108\\Partition7", &device::exists_nt_dev},
  {"/dev/sdde8", BRACK(FH_SDDE | 8), "\\Device\\Harddisk108\\Partition8", &device::exists_nt_dev},
  {"/dev/sdde9", BRACK(FH_SDDE | 9), "\\Device\\Harddisk108\\Partition9", &device::exists_nt_dev},
  {"/dev/sdde10", BRACK(FH_SDDE | 10), "\\Device\\Harddisk108\\Partition10", &device::exists_nt_dev},
  {"/dev/sdde11", BRACK(FH_SDDE | 11), "\\Device\\Harddisk108\\Partition11", &device::exists_nt_dev},
  {"/dev/sdde12", BRACK(FH_SDDE | 12), "\\Device\\Harddisk108\\Partition12", &device::exists_nt_dev},
  {"/dev/sdde13", BRACK(FH_SDDE | 13), "\\Device\\Harddisk108\\Partition13", &device::exists_nt_dev},
  {"/dev/sdde14", BRACK(FH_SDDE | 14), "\\Device\\Harddisk108\\Partition14", &device::exists_nt_dev},
  {"/dev/sdde15", BRACK(FH_SDDE | 15), "\\Device\\Harddisk108\\Partition15", &device::exists_nt_dev},
  {"/dev/sddf1", BRACK(FH_SDDF | 1), "\\Device\\Harddisk109\\Partition1", &device::exists_nt_dev},
  {"/dev/sddf2", BRACK(FH_SDDF | 2), "\\Device\\Harddisk109\\Partition2", &device::exists_nt_dev},
  {"/dev/sddf3", BRACK(FH_SDDF | 3), "\\Device\\Harddisk109\\Partition3", &device::exists_nt_dev},
  {"/dev/sddf4", BRACK(FH_SDDF | 4), "\\Device\\Harddisk109\\Partition4", &device::exists_nt_dev},
  {"/dev/sddf5", BRACK(FH_SDDF | 5), "\\Device\\Harddisk109\\Partition5", &device::exists_nt_dev},
  {"/dev/sddf6", BRACK(FH_SDDF | 6), "\\Device\\Harddisk109\\Partition6", &device::exists_nt_dev},
  {"/dev/sddf7", BRACK(FH_SDDF | 7), "\\Device\\Harddisk109\\Partition7", &device::exists_nt_dev},
  {"/dev/sddf8", BRACK(FH_SDDF | 8), "\\Device\\Harddisk109\\Partition8", &device::exists_nt_dev},
  {"/dev/sddf9", BRACK(FH_SDDF | 9), "\\Device\\Harddisk109\\Partition9", &device::exists_nt_dev},
  {"/dev/sddf10", BRACK(FH_SDDF | 10), "\\Device\\Harddisk109\\Partition10", &device::exists_nt_dev},
  {"/dev/sddf11", BRACK(FH_SDDF | 11), "\\Device\\Harddisk109\\Partition11", &device::exists_nt_dev},
  {"/dev/sddf12", BRACK(FH_SDDF | 12), "\\Device\\Harddisk109\\Partition12", &device::exists_nt_dev},
  {"/dev/sddf13", BRACK(FH_SDDF | 13), "\\Device\\Harddisk109\\Partition13", &device::exists_nt_dev},
  {"/dev/sddf14", BRACK(FH_SDDF | 14), "\\Device\\Harddisk109\\Partition14", &device::exists_nt_dev},
  {"/dev/sddf15", BRACK(FH_SDDF | 15), "\\Device\\Harddisk109\\Partition15", &device::exists_nt_dev},
  {"/dev/sddg1", BRACK(FH_SDDG | 1), "\\Device\\Harddisk110\\Partition1", &device::exists_nt_dev},
  {"/dev/sddg2", BRACK(FH_SDDG | 2), "\\Device\\Harddisk110\\Partition2", &device::exists_nt_dev},
  {"/dev/sddg3", BRACK(FH_SDDG | 3), "\\Device\\Harddisk110\\Partition3", &device::exists_nt_dev},
  {"/dev/sddg4", BRACK(FH_SDDG | 4), "\\Device\\Harddisk110\\Partition4", &device::exists_nt_dev},
  {"/dev/sddg5", BRACK(FH_SDDG | 5), "\\Device\\Harddisk110\\Partition5", &device::exists_nt_dev},
  {"/dev/sddg6", BRACK(FH_SDDG | 6), "\\Device\\Harddisk110\\Partition6", &device::exists_nt_dev},
  {"/dev/sddg7", BRACK(FH_SDDG | 7), "\\Device\\Harddisk110\\Partition7", &device::exists_nt_dev},
  {"/dev/sddg8", BRACK(FH_SDDG | 8), "\\Device\\Harddisk110\\Partition8", &device::exists_nt_dev},
  {"/dev/sddg9", BRACK(FH_SDDG | 9), "\\Device\\Harddisk110\\Partition9", &device::exists_nt_dev},
  {"/dev/sddg10", BRACK(FH_SDDG | 10), "\\Device\\Harddisk110\\Partition10", &device::exists_nt_dev},
  {"/dev/sddg11", BRACK(FH_SDDG | 11), "\\Device\\Harddisk110\\Partition11", &device::exists_nt_dev},
  {"/dev/sddg12", BRACK(FH_SDDG | 12), "\\Device\\Harddisk110\\Partition12", &device::exists_nt_dev},
  {"/dev/sddg13", BRACK(FH_SDDG | 13), "\\Device\\Harddisk110\\Partition13", &device::exists_nt_dev},
  {"/dev/sddg14", BRACK(FH_SDDG | 14), "\\Device\\Harddisk110\\Partition14", &device::exists_nt_dev},
  {"/dev/sddg15", BRACK(FH_SDDG | 15), "\\Device\\Harddisk110\\Partition15", &device::exists_nt_dev},
  {"/dev/sddh1", BRACK(FH_SDDH | 1), "\\Device\\Harddisk111\\Partition1", &device::exists_nt_dev},
  {"/dev/sddh2", BRACK(FH_SDDH | 2), "\\Device\\Harddisk111\\Partition2", &device::exists_nt_dev},
  {"/dev/sddh3", BRACK(FH_SDDH | 3), "\\Device\\Harddisk111\\Partition3", &device::exists_nt_dev},
  {"/dev/sddh4", BRACK(FH_SDDH | 4), "\\Device\\Harddisk111\\Partition4", &device::exists_nt_dev},
  {"/dev/sddh5", BRACK(FH_SDDH | 5), "\\Device\\Harddisk111\\Partition5", &device::exists_nt_dev},
  {"/dev/sddh6", BRACK(FH_SDDH | 6), "\\Device\\Harddisk111\\Partition6", &device::exists_nt_dev},
  {"/dev/sddh7", BRACK(FH_SDDH | 7), "\\Device\\Harddisk111\\Partition7", &device::exists_nt_dev},
  {"/dev/sddh8", BRACK(FH_SDDH | 8), "\\Device\\Harddisk111\\Partition8", &device::exists_nt_dev},
  {"/dev/sddh9", BRACK(FH_SDDH | 9), "\\Device\\Harddisk111\\Partition9", &device::exists_nt_dev},
  {"/dev/sddh10", BRACK(FH_SDDH | 10), "\\Device\\Harddisk111\\Partition10", &device::exists_nt_dev},
  {"/dev/sddh11", BRACK(FH_SDDH | 11), "\\Device\\Harddisk111\\Partition11", &device::exists_nt_dev},
  {"/dev/sddh12", BRACK(FH_SDDH | 12), "\\Device\\Harddisk111\\Partition12", &device::exists_nt_dev},
  {"/dev/sddh13", BRACK(FH_SDDH | 13), "\\Device\\Harddisk111\\Partition13", &device::exists_nt_dev},
  {"/dev/sddh14", BRACK(FH_SDDH | 14), "\\Device\\Harddisk111\\Partition14", &device::exists_nt_dev},
  {"/dev/sddh15", BRACK(FH_SDDH | 15), "\\Device\\Harddisk111\\Partition15", &device::exists_nt_dev},
  {"/dev/sddi1", BRACK(FH_SDDI | 1), "\\Device\\Harddisk112\\Partition1", &device::exists_nt_dev},
  {"/dev/sddi2", BRACK(FH_SDDI | 2), "\\Device\\Harddisk112\\Partition2", &device::exists_nt_dev},
  {"/dev/sddi3", BRACK(FH_SDDI | 3), "\\Device\\Harddisk112\\Partition3", &device::exists_nt_dev},
  {"/dev/sddi4", BRACK(FH_SDDI | 4), "\\Device\\Harddisk112\\Partition4", &device::exists_nt_dev},
  {"/dev/sddi5", BRACK(FH_SDDI | 5), "\\Device\\Harddisk112\\Partition5", &device::exists_nt_dev},
  {"/dev/sddi6", BRACK(FH_SDDI | 6), "\\Device\\Harddisk112\\Partition6", &device::exists_nt_dev},
  {"/dev/sddi7", BRACK(FH_SDDI | 7), "\\Device\\Harddisk112\\Partition7", &device::exists_nt_dev},
  {"/dev/sddi8", BRACK(FH_SDDI | 8), "\\Device\\Harddisk112\\Partition8", &device::exists_nt_dev},
  {"/dev/sddi9", BRACK(FH_SDDI | 9), "\\Device\\Harddisk112\\Partition9", &device::exists_nt_dev},
  {"/dev/sddi10", BRACK(FH_SDDI | 10), "\\Device\\Harddisk112\\Partition10", &device::exists_nt_dev},
  {"/dev/sddi11", BRACK(FH_SDDI | 11), "\\Device\\Harddisk112\\Partition11", &device::exists_nt_dev},
  {"/dev/sddi12", BRACK(FH_SDDI | 12), "\\Device\\Harddisk112\\Partition12", &device::exists_nt_dev},
  {"/dev/sddi13", BRACK(FH_SDDI | 13), "\\Device\\Harddisk112\\Partition13", &device::exists_nt_dev},
  {"/dev/sddi14", BRACK(FH_SDDI | 14), "\\Device\\Harddisk112\\Partition14", &device::exists_nt_dev},
  {"/dev/sddi15", BRACK(FH_SDDI | 15), "\\Device\\Harddisk112\\Partition15", &device::exists_nt_dev},
  {"/dev/sddj1", BRACK(FH_SDDJ | 1), "\\Device\\Harddisk113\\Partition1", &device::exists_nt_dev},
  {"/dev/sddj2", BRACK(FH_SDDJ | 2), "\\Device\\Harddisk113\\Partition2", &device::exists_nt_dev},
  {"/dev/sddj3", BRACK(FH_SDDJ | 3), "\\Device\\Harddisk113\\Partition3", &device::exists_nt_dev},
  {"/dev/sddj4", BRACK(FH_SDDJ | 4), "\\Device\\Harddisk113\\Partition4", &device::exists_nt_dev},
  {"/dev/sddj5", BRACK(FH_SDDJ | 5), "\\Device\\Harddisk113\\Partition5", &device::exists_nt_dev},
  {"/dev/sddj6", BRACK(FH_SDDJ | 6), "\\Device\\Harddisk113\\Partition6", &device::exists_nt_dev},
  {"/dev/sddj7", BRACK(FH_SDDJ | 7), "\\Device\\Harddisk113\\Partition7", &device::exists_nt_dev},
  {"/dev/sddj8", BRACK(FH_SDDJ | 8), "\\Device\\Harddisk113\\Partition8", &device::exists_nt_dev},
  {"/dev/sddj9", BRACK(FH_SDDJ | 9), "\\Device\\Harddisk113\\Partition9", &device::exists_nt_dev},
  {"/dev/sddj10", BRACK(FH_SDDJ | 10), "\\Device\\Harddisk113\\Partition10", &device::exists_nt_dev},
  {"/dev/sddj11", BRACK(FH_SDDJ | 11), "\\Device\\Harddisk113\\Partition11", &device::exists_nt_dev},
  {"/dev/sddj12", BRACK(FH_SDDJ | 12), "\\Device\\Harddisk113\\Partition12", &device::exists_nt_dev},
  {"/dev/sddj13", BRACK(FH_SDDJ | 13), "\\Device\\Harddisk113\\Partition13", &device::exists_nt_dev},
  {"/dev/sddj14", BRACK(FH_SDDJ | 14), "\\Device\\Harddisk113\\Partition14", &device::exists_nt_dev},
  {"/dev/sddj15", BRACK(FH_SDDJ | 15), "\\Device\\Harddisk113\\Partition15", &device::exists_nt_dev},
  {"/dev/sddk1", BRACK(FH_SDDK | 1), "\\Device\\Harddisk114\\Partition1", &device::exists_nt_dev},
  {"/dev/sddk2", BRACK(FH_SDDK | 2), "\\Device\\Harddisk114\\Partition2", &device::exists_nt_dev},
  {"/dev/sddk3", BRACK(FH_SDDK | 3), "\\Device\\Harddisk114\\Partition3", &device::exists_nt_dev},
  {"/dev/sddk4", BRACK(FH_SDDK | 4), "\\Device\\Harddisk114\\Partition4", &device::exists_nt_dev},
  {"/dev/sddk5", BRACK(FH_SDDK | 5), "\\Device\\Harddisk114\\Partition5", &device::exists_nt_dev},
  {"/dev/sddk6", BRACK(FH_SDDK | 6), "\\Device\\Harddisk114\\Partition6", &device::exists_nt_dev},
  {"/dev/sddk7", BRACK(FH_SDDK | 7), "\\Device\\Harddisk114\\Partition7", &device::exists_nt_dev},
  {"/dev/sddk8", BRACK(FH_SDDK | 8), "\\Device\\Harddisk114\\Partition8", &device::exists_nt_dev},
  {"/dev/sddk9", BRACK(FH_SDDK | 9), "\\Device\\Harddisk114\\Partition9", &device::exists_nt_dev},
  {"/dev/sddk10", BRACK(FH_SDDK | 10), "\\Device\\Harddisk114\\Partition10", &device::exists_nt_dev},
  {"/dev/sddk11", BRACK(FH_SDDK | 11), "\\Device\\Harddisk114\\Partition11", &device::exists_nt_dev},
  {"/dev/sddk12", BRACK(FH_SDDK | 12), "\\Device\\Harddisk114\\Partition12", &device::exists_nt_dev},
  {"/dev/sddk13", BRACK(FH_SDDK | 13), "\\Device\\Harddisk114\\Partition13", &device::exists_nt_dev},
  {"/dev/sddk14", BRACK(FH_SDDK | 14), "\\Device\\Harddisk114\\Partition14", &device::exists_nt_dev},
  {"/dev/sddk15", BRACK(FH_SDDK | 15), "\\Device\\Harddisk114\\Partition15", &device::exists_nt_dev},
  {"/dev/sddl1", BRACK(FH_SDDL | 1), "\\Device\\Harddisk115\\Partition1", &device::exists_nt_dev},
  {"/dev/sddl2", BRACK(FH_SDDL | 2), "\\Device\\Harddisk115\\Partition2", &device::exists_nt_dev},
  {"/dev/sddl3", BRACK(FH_SDDL | 3), "\\Device\\Harddisk115\\Partition3", &device::exists_nt_dev},
  {"/dev/sddl4", BRACK(FH_SDDL | 4), "\\Device\\Harddisk115\\Partition4", &device::exists_nt_dev},
  {"/dev/sddl5", BRACK(FH_SDDL | 5), "\\Device\\Harddisk115\\Partition5", &device::exists_nt_dev},
  {"/dev/sddl6", BRACK(FH_SDDL | 6), "\\Device\\Harddisk115\\Partition6", &device::exists_nt_dev},
  {"/dev/sddl7", BRACK(FH_SDDL | 7), "\\Device\\Harddisk115\\Partition7", &device::exists_nt_dev},
  {"/dev/sddl8", BRACK(FH_SDDL | 8), "\\Device\\Harddisk115\\Partition8", &device::exists_nt_dev},
  {"/dev/sddl9", BRACK(FH_SDDL | 9), "\\Device\\Harddisk115\\Partition9", &device::exists_nt_dev},
  {"/dev/sddl10", BRACK(FH_SDDL | 10), "\\Device\\Harddisk115\\Partition10", &device::exists_nt_dev},
  {"/dev/sddl11", BRACK(FH_SDDL | 11), "\\Device\\Harddisk115\\Partition11", &device::exists_nt_dev},
  {"/dev/sddl12", BRACK(FH_SDDL | 12), "\\Device\\Harddisk115\\Partition12", &device::exists_nt_dev},
  {"/dev/sddl13", BRACK(FH_SDDL | 13), "\\Device\\Harddisk115\\Partition13", &device::exists_nt_dev},
  {"/dev/sddl14", BRACK(FH_SDDL | 14), "\\Device\\Harddisk115\\Partition14", &device::exists_nt_dev},
  {"/dev/sddl15", BRACK(FH_SDDL | 15), "\\Device\\Harddisk115\\Partition15", &device::exists_nt_dev},
  {"/dev/sddm1", BRACK(FH_SDDM | 1), "\\Device\\Harddisk116\\Partition1", &device::exists_nt_dev},
  {"/dev/sddm2", BRACK(FH_SDDM | 2), "\\Device\\Harddisk116\\Partition2", &device::exists_nt_dev},
  {"/dev/sddm3", BRACK(FH_SDDM | 3), "\\Device\\Harddisk116\\Partition3", &device::exists_nt_dev},
  {"/dev/sddm4", BRACK(FH_SDDM | 4), "\\Device\\Harddisk116\\Partition4", &device::exists_nt_dev},
  {"/dev/sddm5", BRACK(FH_SDDM | 5), "\\Device\\Harddisk116\\Partition5", &device::exists_nt_dev},
  {"/dev/sddm6", BRACK(FH_SDDM | 6), "\\Device\\Harddisk116\\Partition6", &device::exists_nt_dev},
  {"/dev/sddm7", BRACK(FH_SDDM | 7), "\\Device\\Harddisk116\\Partition7", &device::exists_nt_dev},
  {"/dev/sddm8", BRACK(FH_SDDM | 8), "\\Device\\Harddisk116\\Partition8", &device::exists_nt_dev},
  {"/dev/sddm9", BRACK(FH_SDDM | 9), "\\Device\\Harddisk116\\Partition9", &device::exists_nt_dev},
  {"/dev/sddm10", BRACK(FH_SDDM | 10), "\\Device\\Harddisk116\\Partition10", &device::exists_nt_dev},
  {"/dev/sddm11", BRACK(FH_SDDM | 11), "\\Device\\Harddisk116\\Partition11", &device::exists_nt_dev},
  {"/dev/sddm12", BRACK(FH_SDDM | 12), "\\Device\\Harddisk116\\Partition12", &device::exists_nt_dev},
  {"/dev/sddm13", BRACK(FH_SDDM | 13), "\\Device\\Harddisk116\\Partition13", &device::exists_nt_dev},
  {"/dev/sddm14", BRACK(FH_SDDM | 14), "\\Device\\Harddisk116\\Partition14", &device::exists_nt_dev},
  {"/dev/sddm15", BRACK(FH_SDDM | 15), "\\Device\\Harddisk116\\Partition15", &device::exists_nt_dev},
  {"/dev/sddn1", BRACK(FH_SDDN | 1), "\\Device\\Harddisk117\\Partition1", &device::exists_nt_dev},
  {"/dev/sddn2", BRACK(FH_SDDN | 2), "\\Device\\Harddisk117\\Partition2", &device::exists_nt_dev},
  {"/dev/sddn3", BRACK(FH_SDDN | 3), "\\Device\\Harddisk117\\Partition3", &device::exists_nt_dev},
  {"/dev/sddn4", BRACK(FH_SDDN | 4), "\\Device\\Harddisk117\\Partition4", &device::exists_nt_dev},
  {"/dev/sddn5", BRACK(FH_SDDN | 5), "\\Device\\Harddisk117\\Partition5", &device::exists_nt_dev},
  {"/dev/sddn6", BRACK(FH_SDDN | 6), "\\Device\\Harddisk117\\Partition6", &device::exists_nt_dev},
  {"/dev/sddn7", BRACK(FH_SDDN | 7), "\\Device\\Harddisk117\\Partition7", &device::exists_nt_dev},
  {"/dev/sddn8", BRACK(FH_SDDN | 8), "\\Device\\Harddisk117\\Partition8", &device::exists_nt_dev},
  {"/dev/sddn9", BRACK(FH_SDDN | 9), "\\Device\\Harddisk117\\Partition9", &device::exists_nt_dev},
  {"/dev/sddn10", BRACK(FH_SDDN | 10), "\\Device\\Harddisk117\\Partition10", &device::exists_nt_dev},
  {"/dev/sddn11", BRACK(FH_SDDN | 11), "\\Device\\Harddisk117\\Partition11", &device::exists_nt_dev},
  {"/dev/sddn12", BRACK(FH_SDDN | 12), "\\Device\\Harddisk117\\Partition12", &device::exists_nt_dev},
  {"/dev/sddn13", BRACK(FH_SDDN | 13), "\\Device\\Harddisk117\\Partition13", &device::exists_nt_dev},
  {"/dev/sddn14", BRACK(FH_SDDN | 14), "\\Device\\Harddisk117\\Partition14", &device::exists_nt_dev},
  {"/dev/sddn15", BRACK(FH_SDDN | 15), "\\Device\\Harddisk117\\Partition15", &device::exists_nt_dev},
  {"/dev/sddo1", BRACK(FH_SDDO | 1), "\\Device\\Harddisk118\\Partition1", &device::exists_nt_dev},
  {"/dev/sddo2", BRACK(FH_SDDO | 2), "\\Device\\Harddisk118\\Partition2", &device::exists_nt_dev},
  {"/dev/sddo3", BRACK(FH_SDDO | 3), "\\Device\\Harddisk118\\Partition3", &device::exists_nt_dev},
  {"/dev/sddo4", BRACK(FH_SDDO | 4), "\\Device\\Harddisk118\\Partition4", &device::exists_nt_dev},
  {"/dev/sddo5", BRACK(FH_SDDO | 5), "\\Device\\Harddisk118\\Partition5", &device::exists_nt_dev},
  {"/dev/sddo6", BRACK(FH_SDDO | 6), "\\Device\\Harddisk118\\Partition6", &device::exists_nt_dev},
  {"/dev/sddo7", BRACK(FH_SDDO | 7), "\\Device\\Harddisk118\\Partition7", &device::exists_nt_dev},
  {"/dev/sddo8", BRACK(FH_SDDO | 8), "\\Device\\Harddisk118\\Partition8", &device::exists_nt_dev},
  {"/dev/sddo9", BRACK(FH_SDDO | 9), "\\Device\\Harddisk118\\Partition9", &device::exists_nt_dev},
  {"/dev/sddo10", BRACK(FH_SDDO | 10), "\\Device\\Harddisk118\\Partition10", &device::exists_nt_dev},
  {"/dev/sddo11", BRACK(FH_SDDO | 11), "\\Device\\Harddisk118\\Partition11", &device::exists_nt_dev},
  {"/dev/sddo12", BRACK(FH_SDDO | 12), "\\Device\\Harddisk118\\Partition12", &device::exists_nt_dev},
  {"/dev/sddo13", BRACK(FH_SDDO | 13), "\\Device\\Harddisk118\\Partition13", &device::exists_nt_dev},
  {"/dev/sddo14", BRACK(FH_SDDO | 14), "\\Device\\Harddisk118\\Partition14", &device::exists_nt_dev},
  {"/dev/sddo15", BRACK(FH_SDDO | 15), "\\Device\\Harddisk118\\Partition15", &device::exists_nt_dev},
  {"/dev/sddp1", BRACK(FH_SDDP | 1), "\\Device\\Harddisk119\\Partition1", &device::exists_nt_dev},
  {"/dev/sddp2", BRACK(FH_SDDP | 2), "\\Device\\Harddisk119\\Partition2", &device::exists_nt_dev},
  {"/dev/sddp3", BRACK(FH_SDDP | 3), "\\Device\\Harddisk119\\Partition3", &device::exists_nt_dev},
  {"/dev/sddp4", BRACK(FH_SDDP | 4), "\\Device\\Harddisk119\\Partition4", &device::exists_nt_dev},
  {"/dev/sddp5", BRACK(FH_SDDP | 5), "\\Device\\Harddisk119\\Partition5", &device::exists_nt_dev},
  {"/dev/sddp6", BRACK(FH_SDDP | 6), "\\Device\\Harddisk119\\Partition6", &device::exists_nt_dev},
  {"/dev/sddp7", BRACK(FH_SDDP | 7), "\\Device\\Harddisk119\\Partition7", &device::exists_nt_dev},
  {"/dev/sddp8", BRACK(FH_SDDP | 8), "\\Device\\Harddisk119\\Partition8", &device::exists_nt_dev},
  {"/dev/sddp9", BRACK(FH_SDDP | 9), "\\Device\\Harddisk119\\Partition9", &device::exists_nt_dev},
  {"/dev/sddp10", BRACK(FH_SDDP | 10), "\\Device\\Harddisk119\\Partition10", &device::exists_nt_dev},
  {"/dev/sddp11", BRACK(FH_SDDP | 11), "\\Device\\Harddisk119\\Partition11", &device::exists_nt_dev},
  {"/dev/sddp12", BRACK(FH_SDDP | 12), "\\Device\\Harddisk119\\Partition12", &device::exists_nt_dev},
  {"/dev/sddp13", BRACK(FH_SDDP | 13), "\\Device\\Harddisk119\\Partition13", &device::exists_nt_dev},
  {"/dev/sddp14", BRACK(FH_SDDP | 14), "\\Device\\Harddisk119\\Partition14", &device::exists_nt_dev},
  {"/dev/sddp15", BRACK(FH_SDDP | 15), "\\Device\\Harddisk119\\Partition15", &device::exists_nt_dev},
  {"/dev/sddq1", BRACK(FH_SDDQ | 1), "\\Device\\Harddisk120\\Partition1", &device::exists_nt_dev},
  {"/dev/sddq2", BRACK(FH_SDDQ | 2), "\\Device\\Harddisk120\\Partition2", &device::exists_nt_dev},
  {"/dev/sddq3", BRACK(FH_SDDQ | 3), "\\Device\\Harddisk120\\Partition3", &device::exists_nt_dev},
  {"/dev/sddq4", BRACK(FH_SDDQ | 4), "\\Device\\Harddisk120\\Partition4", &device::exists_nt_dev},
  {"/dev/sddq5", BRACK(FH_SDDQ | 5), "\\Device\\Harddisk120\\Partition5", &device::exists_nt_dev},
  {"/dev/sddq6", BRACK(FH_SDDQ | 6), "\\Device\\Harddisk120\\Partition6", &device::exists_nt_dev},
  {"/dev/sddq7", BRACK(FH_SDDQ | 7), "\\Device\\Harddisk120\\Partition7", &device::exists_nt_dev},
  {"/dev/sddq8", BRACK(FH_SDDQ | 8), "\\Device\\Harddisk120\\Partition8", &device::exists_nt_dev},
  {"/dev/sddq9", BRACK(FH_SDDQ | 9), "\\Device\\Harddisk120\\Partition9", &device::exists_nt_dev},
  {"/dev/sddq10", BRACK(FH_SDDQ | 10), "\\Device\\Harddisk120\\Partition10", &device::exists_nt_dev},
  {"/dev/sddq11", BRACK(FH_SDDQ | 11), "\\Device\\Harddisk120\\Partition11", &device::exists_nt_dev},
  {"/dev/sddq12", BRACK(FH_SDDQ | 12), "\\Device\\Harddisk120\\Partition12", &device::exists_nt_dev},
  {"/dev/sddq13", BRACK(FH_SDDQ | 13), "\\Device\\Harddisk120\\Partition13", &device::exists_nt_dev},
  {"/dev/sddq14", BRACK(FH_SDDQ | 14), "\\Device\\Harddisk120\\Partition14", &device::exists_nt_dev},
  {"/dev/sddq15", BRACK(FH_SDDQ | 15), "\\Device\\Harddisk120\\Partition15", &device::exists_nt_dev},
  {"/dev/sddr1", BRACK(FH_SDDR | 1), "\\Device\\Harddisk121\\Partition1", &device::exists_nt_dev},
  {"/dev/sddr2", BRACK(FH_SDDR | 2), "\\Device\\Harddisk121\\Partition2", &device::exists_nt_dev},
  {"/dev/sddr3", BRACK(FH_SDDR | 3), "\\Device\\Harddisk121\\Partition3", &device::exists_nt_dev},
  {"/dev/sddr4", BRACK(FH_SDDR | 4), "\\Device\\Harddisk121\\Partition4", &device::exists_nt_dev},
  {"/dev/sddr5", BRACK(FH_SDDR | 5), "\\Device\\Harddisk121\\Partition5", &device::exists_nt_dev},
  {"/dev/sddr6", BRACK(FH_SDDR | 6), "\\Device\\Harddisk121\\Partition6", &device::exists_nt_dev},
  {"/dev/sddr7", BRACK(FH_SDDR | 7), "\\Device\\Harddisk121\\Partition7", &device::exists_nt_dev},
  {"/dev/sddr8", BRACK(FH_SDDR | 8), "\\Device\\Harddisk121\\Partition8", &device::exists_nt_dev},
  {"/dev/sddr9", BRACK(FH_SDDR | 9), "\\Device\\Harddisk121\\Partition9", &device::exists_nt_dev},
  {"/dev/sddr10", BRACK(FH_SDDR | 10), "\\Device\\Harddisk121\\Partition10", &device::exists_nt_dev},
  {"/dev/sddr11", BRACK(FH_SDDR | 11), "\\Device\\Harddisk121\\Partition11", &device::exists_nt_dev},
  {"/dev/sddr12", BRACK(FH_SDDR | 12), "\\Device\\Harddisk121\\Partition12", &device::exists_nt_dev},
  {"/dev/sddr13", BRACK(FH_SDDR | 13), "\\Device\\Harddisk121\\Partition13", &device::exists_nt_dev},
  {"/dev/sddr14", BRACK(FH_SDDR | 14), "\\Device\\Harddisk121\\Partition14", &device::exists_nt_dev},
  {"/dev/sddr15", BRACK(FH_SDDR | 15), "\\Device\\Harddisk121\\Partition15", &device::exists_nt_dev},
  {"/dev/sdds1", BRACK(FH_SDDS | 1), "\\Device\\Harddisk122\\Partition1", &device::exists_nt_dev},
  {"/dev/sdds2", BRACK(FH_SDDS | 2), "\\Device\\Harddisk122\\Partition2", &device::exists_nt_dev},
  {"/dev/sdds3", BRACK(FH_SDDS | 3), "\\Device\\Harddisk122\\Partition3", &device::exists_nt_dev},
  {"/dev/sdds4", BRACK(FH_SDDS | 4), "\\Device\\Harddisk122\\Partition4", &device::exists_nt_dev},
  {"/dev/sdds5", BRACK(FH_SDDS | 5), "\\Device\\Harddisk122\\Partition5", &device::exists_nt_dev},
  {"/dev/sdds6", BRACK(FH_SDDS | 6), "\\Device\\Harddisk122\\Partition6", &device::exists_nt_dev},
  {"/dev/sdds7", BRACK(FH_SDDS | 7), "\\Device\\Harddisk122\\Partition7", &device::exists_nt_dev},
  {"/dev/sdds8", BRACK(FH_SDDS | 8), "\\Device\\Harddisk122\\Partition8", &device::exists_nt_dev},
  {"/dev/sdds9", BRACK(FH_SDDS | 9), "\\Device\\Harddisk122\\Partition9", &device::exists_nt_dev},
  {"/dev/sdds10", BRACK(FH_SDDS | 10), "\\Device\\Harddisk122\\Partition10", &device::exists_nt_dev},
  {"/dev/sdds11", BRACK(FH_SDDS | 11), "\\Device\\Harddisk122\\Partition11", &device::exists_nt_dev},
  {"/dev/sdds12", BRACK(FH_SDDS | 12), "\\Device\\Harddisk122\\Partition12", &device::exists_nt_dev},
  {"/dev/sdds13", BRACK(FH_SDDS | 13), "\\Device\\Harddisk122\\Partition13", &device::exists_nt_dev},
  {"/dev/sdds14", BRACK(FH_SDDS | 14), "\\Device\\Harddisk122\\Partition14", &device::exists_nt_dev},
  {"/dev/sdds15", BRACK(FH_SDDS | 15), "\\Device\\Harddisk122\\Partition15", &device::exists_nt_dev},
  {"/dev/sddt1", BRACK(FH_SDDT | 1), "\\Device\\Harddisk123\\Partition1", &device::exists_nt_dev},
  {"/dev/sddt2", BRACK(FH_SDDT | 2), "\\Device\\Harddisk123\\Partition2", &device::exists_nt_dev},
  {"/dev/sddt3", BRACK(FH_SDDT | 3), "\\Device\\Harddisk123\\Partition3", &device::exists_nt_dev},
  {"/dev/sddt4", BRACK(FH_SDDT | 4), "\\Device\\Harddisk123\\Partition4", &device::exists_nt_dev},
  {"/dev/sddt5", BRACK(FH_SDDT | 5), "\\Device\\Harddisk123\\Partition5", &device::exists_nt_dev},
  {"/dev/sddt6", BRACK(FH_SDDT | 6), "\\Device\\Harddisk123\\Partition6", &device::exists_nt_dev},
  {"/dev/sddt7", BRACK(FH_SDDT | 7), "\\Device\\Harddisk123\\Partition7", &device::exists_nt_dev},
  {"/dev/sddt8", BRACK(FH_SDDT | 8), "\\Device\\Harddisk123\\Partition8", &device::exists_nt_dev},
  {"/dev/sddt9", BRACK(FH_SDDT | 9), "\\Device\\Harddisk123\\Partition9", &device::exists_nt_dev},
  {"/dev/sddt10", BRACK(FH_SDDT | 10), "\\Device\\Harddisk123\\Partition10", &device::exists_nt_dev},
  {"/dev/sddt11", BRACK(FH_SDDT | 11), "\\Device\\Harddisk123\\Partition11", &device::exists_nt_dev},
  {"/dev/sddt12", BRACK(FH_SDDT | 12), "\\Device\\Harddisk123\\Partition12", &device::exists_nt_dev},
  {"/dev/sddt13", BRACK(FH_SDDT | 13), "\\Device\\Harddisk123\\Partition13", &device::exists_nt_dev},
  {"/dev/sddt14", BRACK(FH_SDDT | 14), "\\Device\\Harddisk123\\Partition14", &device::exists_nt_dev},
  {"/dev/sddt15", BRACK(FH_SDDT | 15), "\\Device\\Harddisk123\\Partition15", &device::exists_nt_dev},
  {"/dev/sddu1", BRACK(FH_SDDU | 1), "\\Device\\Harddisk124\\Partition1", &device::exists_nt_dev},
  {"/dev/sddu2", BRACK(FH_SDDU | 2), "\\Device\\Harddisk124\\Partition2", &device::exists_nt_dev},
  {"/dev/sddu3", BRACK(FH_SDDU | 3), "\\Device\\Harddisk124\\Partition3", &device::exists_nt_dev},
  {"/dev/sddu4", BRACK(FH_SDDU | 4), "\\Device\\Harddisk124\\Partition4", &device::exists_nt_dev},
  {"/dev/sddu5", BRACK(FH_SDDU | 5), "\\Device\\Harddisk124\\Partition5", &device::exists_nt_dev},
  {"/dev/sddu6", BRACK(FH_SDDU | 6), "\\Device\\Harddisk124\\Partition6", &device::exists_nt_dev},
  {"/dev/sddu7", BRACK(FH_SDDU | 7), "\\Device\\Harddisk124\\Partition7", &device::exists_nt_dev},
  {"/dev/sddu8", BRACK(FH_SDDU | 8), "\\Device\\Harddisk124\\Partition8", &device::exists_nt_dev},
  {"/dev/sddu9", BRACK(FH_SDDU | 9), "\\Device\\Harddisk124\\Partition9", &device::exists_nt_dev},
  {"/dev/sddu10", BRACK(FH_SDDU | 10), "\\Device\\Harddisk124\\Partition10", &device::exists_nt_dev},
  {"/dev/sddu11", BRACK(FH_SDDU | 11), "\\Device\\Harddisk124\\Partition11", &device::exists_nt_dev},
  {"/dev/sddu12", BRACK(FH_SDDU | 12), "\\Device\\Harddisk124\\Partition12", &device::exists_nt_dev},
  {"/dev/sddu13", BRACK(FH_SDDU | 13), "\\Device\\Harddisk124\\Partition13", &device::exists_nt_dev},
  {"/dev/sddu14", BRACK(FH_SDDU | 14), "\\Device\\Harddisk124\\Partition14", &device::exists_nt_dev},
  {"/dev/sddu15", BRACK(FH_SDDU | 15), "\\Device\\Harddisk124\\Partition15", &device::exists_nt_dev},
  {"/dev/sddv1", BRACK(FH_SDDV | 1), "\\Device\\Harddisk125\\Partition1", &device::exists_nt_dev},
  {"/dev/sddv2", BRACK(FH_SDDV | 2), "\\Device\\Harddisk125\\Partition2", &device::exists_nt_dev},
  {"/dev/sddv3", BRACK(FH_SDDV | 3), "\\Device\\Harddisk125\\Partition3", &device::exists_nt_dev},
  {"/dev/sddv4", BRACK(FH_SDDV | 4), "\\Device\\Harddisk125\\Partition4", &device::exists_nt_dev},
  {"/dev/sddv5", BRACK(FH_SDDV | 5), "\\Device\\Harddisk125\\Partition5", &device::exists_nt_dev},
  {"/dev/sddv6", BRACK(FH_SDDV | 6), "\\Device\\Harddisk125\\Partition6", &device::exists_nt_dev},
  {"/dev/sddv7", BRACK(FH_SDDV | 7), "\\Device\\Harddisk125\\Partition7", &device::exists_nt_dev},
  {"/dev/sddv8", BRACK(FH_SDDV | 8), "\\Device\\Harddisk125\\Partition8", &device::exists_nt_dev},
  {"/dev/sddv9", BRACK(FH_SDDV | 9), "\\Device\\Harddisk125\\Partition9", &device::exists_nt_dev},
  {"/dev/sddv10", BRACK(FH_SDDV | 10), "\\Device\\Harddisk125\\Partition10", &device::exists_nt_dev},
  {"/dev/sddv11", BRACK(FH_SDDV | 11), "\\Device\\Harddisk125\\Partition11", &device::exists_nt_dev},
  {"/dev/sddv12", BRACK(FH_SDDV | 12), "\\Device\\Harddisk125\\Partition12", &device::exists_nt_dev},
  {"/dev/sddv13", BRACK(FH_SDDV | 13), "\\Device\\Harddisk125\\Partition13", &device::exists_nt_dev},
  {"/dev/sddv14", BRACK(FH_SDDV | 14), "\\Device\\Harddisk125\\Partition14", &device::exists_nt_dev},
  {"/dev/sddv15", BRACK(FH_SDDV | 15), "\\Device\\Harddisk125\\Partition15", &device::exists_nt_dev},
  {"/dev/sddw1", BRACK(FH_SDDW | 1), "\\Device\\Harddisk126\\Partition1", &device::exists_nt_dev},
  {"/dev/sddw2", BRACK(FH_SDDW | 2), "\\Device\\Harddisk126\\Partition2", &device::exists_nt_dev},
  {"/dev/sddw3", BRACK(FH_SDDW | 3), "\\Device\\Harddisk126\\Partition3", &device::exists_nt_dev},
  {"/dev/sddw4", BRACK(FH_SDDW | 4), "\\Device\\Harddisk126\\Partition4", &device::exists_nt_dev},
  {"/dev/sddw5", BRACK(FH_SDDW | 5), "\\Device\\Harddisk126\\Partition5", &device::exists_nt_dev},
  {"/dev/sddw6", BRACK(FH_SDDW | 6), "\\Device\\Harddisk126\\Partition6", &device::exists_nt_dev},
  {"/dev/sddw7", BRACK(FH_SDDW | 7), "\\Device\\Harddisk126\\Partition7", &device::exists_nt_dev},
  {"/dev/sddw8", BRACK(FH_SDDW | 8), "\\Device\\Harddisk126\\Partition8", &device::exists_nt_dev},
  {"/dev/sddw9", BRACK(FH_SDDW | 9), "\\Device\\Harddisk126\\Partition9", &device::exists_nt_dev},
  {"/dev/sddw10", BRACK(FH_SDDW | 10), "\\Device\\Harddisk126\\Partition10", &device::exists_nt_dev},
  {"/dev/sddw11", BRACK(FH_SDDW | 11), "\\Device\\Harddisk126\\Partition11", &device::exists_nt_dev},
  {"/dev/sddw12", BRACK(FH_SDDW | 12), "\\Device\\Harddisk126\\Partition12", &device::exists_nt_dev},
  {"/dev/sddw13", BRACK(FH_SDDW | 13), "\\Device\\Harddisk126\\Partition13", &device::exists_nt_dev},
  {"/dev/sddw14", BRACK(FH_SDDW | 14), "\\Device\\Harddisk126\\Partition14", &device::exists_nt_dev},
  {"/dev/sddw15", BRACK(FH_SDDW | 15), "\\Device\\Harddisk126\\Partition15", &device::exists_nt_dev},
  {"/dev/sddx1", BRACK(FH_SDDX | 1), "\\Device\\Harddisk127\\Partition1", &device::exists_nt_dev},
  {"/dev/sddx2", BRACK(FH_SDDX | 2), "\\Device\\Harddisk127\\Partition2", &device::exists_nt_dev},
  {"/dev/sddx3", BRACK(FH_SDDX | 3), "\\Device\\Harddisk127\\Partition3", &device::exists_nt_dev},
  {"/dev/sddx4", BRACK(FH_SDDX | 4), "\\Device\\Harddisk127\\Partition4", &device::exists_nt_dev},
  {"/dev/sddx5", BRACK(FH_SDDX | 5), "\\Device\\Harddisk127\\Partition5", &device::exists_nt_dev},
  {"/dev/sddx6", BRACK(FH_SDDX | 6), "\\Device\\Harddisk127\\Partition6", &device::exists_nt_dev},
  {"/dev/sddx7", BRACK(FH_SDDX | 7), "\\Device\\Harddisk127\\Partition7", &device::exists_nt_dev},
  {"/dev/sddx8", BRACK(FH_SDDX | 8), "\\Device\\Harddisk127\\Partition8", &device::exists_nt_dev},
  {"/dev/sddx9", BRACK(FH_SDDX | 9), "\\Device\\Harddisk127\\Partition9", &device::exists_nt_dev},
  {"/dev/sddx10", BRACK(FH_SDDX | 10), "\\Device\\Harddisk127\\Partition10", &device::exists_nt_dev},
  {"/dev/sddx11", BRACK(FH_SDDX | 11), "\\Device\\Harddisk127\\Partition11", &device::exists_nt_dev},
  {"/dev/sddx12", BRACK(FH_SDDX | 12), "\\Device\\Harddisk127\\Partition12", &device::exists_nt_dev},
  {"/dev/sddx13", BRACK(FH_SDDX | 13), "\\Device\\Harddisk127\\Partition13", &device::exists_nt_dev},
  {"/dev/sddx14", BRACK(FH_SDDX | 14), "\\Device\\Harddisk127\\Partition14", &device::exists_nt_dev},
  {"/dev/sddx15", BRACK(FH_SDDX | 15), "\\Device\\Harddisk127\\Partition15", &device::exists_nt_dev},
  {"/dev/sr0", BRACK(FHDEV(DEV_CDROM_MAJOR, 0)), "\\Device\\CdRom0", &device::exists_nt_dev},
  {"/dev/sr1", BRACK(FHDEV(DEV_CDROM_MAJOR, 1)), "\\Device\\CdRom1", &device::exists_nt_dev},
  {"/dev/sr2", BRACK(FHDEV(DEV_CDROM_MAJOR, 2)), "\\Device\\CdRom2", &device::exists_nt_dev},
  {"/dev/sr3", BRACK(FHDEV(DEV_CDROM_MAJOR, 3)), "\\Device\\CdRom3", &device::exists_nt_dev},
  {"/dev/sr4", BRACK(FHDEV(DEV_CDROM_MAJOR, 4)), "\\Device\\CdRom4", &device::exists_nt_dev},
  {"/dev/sr5", BRACK(FHDEV(DEV_CDROM_MAJOR, 5)), "\\Device\\CdRom5", &device::exists_nt_dev},
  {"/dev/sr6", BRACK(FHDEV(DEV_CDROM_MAJOR, 6)), "\\Device\\CdRom6", &device::exists_nt_dev},
  {"/dev/sr7", BRACK(FHDEV(DEV_CDROM_MAJOR, 7)), "\\Device\\CdRom7", &device::exists_nt_dev},
  {"/dev/sr8", BRACK(FHDEV(DEV_CDROM_MAJOR, 8)), "\\Device\\CdRom8", &device::exists_nt_dev},
  {"/dev/sr9", BRACK(FHDEV(DEV_CDROM_MAJOR, 9)), "\\Device\\CdRom9", &device::exists_nt_dev},
  {"/dev/sr10", BRACK(FHDEV(DEV_CDROM_MAJOR, 10)), "\\Device\\CdRom10", &device::exists_nt_dev},
  {"/dev/sr11", BRACK(FHDEV(DEV_CDROM_MAJOR, 11)), "\\Device\\CdRom11", &device::exists_nt_dev},
  {"/dev/sr12", BRACK(FHDEV(DEV_CDROM_MAJOR, 12)), "\\Device\\CdRom12", &device::exists_nt_dev},
  {"/dev/sr13", BRACK(FHDEV(DEV_CDROM_MAJOR, 13)), "\\Device\\CdRom13", &device::exists_nt_dev},
  {"/dev/sr14", BRACK(FHDEV(DEV_CDROM_MAJOR, 14)), "\\Device\\CdRom14", &device::exists_nt_dev},
  {"/dev/sr15", BRACK(FHDEV(DEV_CDROM_MAJOR, 15)), "\\Device\\CdRom15", &device::exists_nt_dev},
  {"/dev/st0", BRACK(FHDEV(DEV_TAPE_MAJOR, 0)), "\\Device\\Tape0", &device::exists_nt_dev},
  {"/dev/st1", BRACK(FHDEV(DEV_TAPE_MAJOR, 1)), "\\Device\\Tape1", &device::exists_nt_dev},
  {"/dev/st2", BRACK(FHDEV(DEV_TAPE_MAJOR, 2)), "\\Device\\Tape2", &device::exists_nt_dev},
  {"/dev/st3", BRACK(FHDEV(DEV_TAPE_MAJOR, 3)), "\\Device\\Tape3", &device::exists_nt_dev},
  {"/dev/st4", BRACK(FHDEV(DEV_TAPE_MAJOR, 4)), "\\Device\\Tape4", &device::exists_nt_dev},
  {"/dev/st5", BRACK(FHDEV(DEV_TAPE_MAJOR, 5)), "\\Device\\Tape5", &device::exists_nt_dev},
  {"/dev/st6", BRACK(FHDEV(DEV_TAPE_MAJOR, 6)), "\\Device\\Tape6", &device::exists_nt_dev},
  {"/dev/st7", BRACK(FHDEV(DEV_TAPE_MAJOR, 7)), "\\Device\\Tape7", &device::exists_nt_dev},
  {"/dev/st8", BRACK(FHDEV(DEV_TAPE_MAJOR, 8)), "\\Device\\Tape8", &device::exists_nt_dev},
  {"/dev/st9", BRACK(FHDEV(DEV_TAPE_MAJOR, 9)), "\\Device\\Tape9", &device::exists_nt_dev},
  {"/dev/st10", BRACK(FHDEV(DEV_TAPE_MAJOR, 10)), "\\Device\\Tape10", &device::exists_nt_dev},
  {"/dev/st11", BRACK(FHDEV(DEV_TAPE_MAJOR, 11)), "\\Device\\Tape11", &device::exists_nt_dev},
  {"/dev/st12", BRACK(FHDEV(DEV_TAPE_MAJOR, 12)), "\\Device\\Tape12", &device::exists_nt_dev},
  {"/dev/st13", BRACK(FHDEV(DEV_TAPE_MAJOR, 13)), "\\Device\\Tape13", &device::exists_nt_dev},
  {"/dev/st14", BRACK(FHDEV(DEV_TAPE_MAJOR, 14)), "\\Device\\Tape14", &device::exists_nt_dev},
  {"/dev/st15", BRACK(FHDEV(DEV_TAPE_MAJOR, 15)), "\\Device\\Tape15", &device::exists_nt_dev},
  {"/dev/st16", BRACK(FHDEV(DEV_TAPE_MAJOR, 16)), "\\Device\\Tape16", &device::exists_nt_dev},
  {"/dev/st17", BRACK(FHDEV(DEV_TAPE_MAJOR, 17)), "\\Device\\Tape17", &device::exists_nt_dev},
  {"/dev/st18", BRACK(FHDEV(DEV_TAPE_MAJOR, 18)), "\\Device\\Tape18", &device::exists_nt_dev},
  {"/dev/st19", BRACK(FHDEV(DEV_TAPE_MAJOR, 19)), "\\Device\\Tape19", &device::exists_nt_dev},
  {"/dev/st20", BRACK(FHDEV(DEV_TAPE_MAJOR, 20)), "\\Device\\Tape20", &device::exists_nt_dev},
  {"/dev/st21", BRACK(FHDEV(DEV_TAPE_MAJOR, 21)), "\\Device\\Tape21", &device::exists_nt_dev},
  {"/dev/st22", BRACK(FHDEV(DEV_TAPE_MAJOR, 22)), "\\Device\\Tape22", &device::exists_nt_dev},
  {"/dev/st23", BRACK(FHDEV(DEV_TAPE_MAJOR, 23)), "\\Device\\Tape23", &device::exists_nt_dev},
  {"/dev/st24", BRACK(FHDEV(DEV_TAPE_MAJOR, 24)), "\\Device\\Tape24", &device::exists_nt_dev},
  {"/dev/st25", BRACK(FHDEV(DEV_TAPE_MAJOR, 25)), "\\Device\\Tape25", &device::exists_nt_dev},
  {"/dev/st26", BRACK(FHDEV(DEV_TAPE_MAJOR, 26)), "\\Device\\Tape26", &device::exists_nt_dev},
  {"/dev/st27", BRACK(FHDEV(DEV_TAPE_MAJOR, 27)), "\\Device\\Tape27", &device::exists_nt_dev},
  {"/dev/st28", BRACK(FHDEV(DEV_TAPE_MAJOR, 28)), "\\Device\\Tape28", &device::exists_nt_dev},
  {"/dev/st29", BRACK(FHDEV(DEV_TAPE_MAJOR, 29)), "\\Device\\Tape29", &device::exists_nt_dev},
  {"/dev/st30", BRACK(FHDEV(DEV_TAPE_MAJOR, 30)), "\\Device\\Tape30", &device::exists_nt_dev},
  {"/dev/st31", BRACK(FHDEV(DEV_TAPE_MAJOR, 31)), "\\Device\\Tape31", &device::exists_nt_dev},
  {"/dev/st32", BRACK(FHDEV(DEV_TAPE_MAJOR, 32)), "\\Device\\Tape32", &device::exists_nt_dev},
  {"/dev/st33", BRACK(FHDEV(DEV_TAPE_MAJOR, 33)), "\\Device\\Tape33", &device::exists_nt_dev},
  {"/dev/st34", BRACK(FHDEV(DEV_TAPE_MAJOR, 34)), "\\Device\\Tape34", &device::exists_nt_dev},
  {"/dev/st35", BRACK(FHDEV(DEV_TAPE_MAJOR, 35)), "\\Device\\Tape35", &device::exists_nt_dev},
  {"/dev/st36", BRACK(FHDEV(DEV_TAPE_MAJOR, 36)), "\\Device\\Tape36", &device::exists_nt_dev},
  {"/dev/st37", BRACK(FHDEV(DEV_TAPE_MAJOR, 37)), "\\Device\\Tape37", &device::exists_nt_dev},
  {"/dev/st38", BRACK(FHDEV(DEV_TAPE_MAJOR, 38)), "\\Device\\Tape38", &device::exists_nt_dev},
  {"/dev/st39", BRACK(FHDEV(DEV_TAPE_MAJOR, 39)), "\\Device\\Tape39", &device::exists_nt_dev},
  {"/dev/st40", BRACK(FHDEV(DEV_TAPE_MAJOR, 40)), "\\Device\\Tape40", &device::exists_nt_dev},
  {"/dev/st41", BRACK(FHDEV(DEV_TAPE_MAJOR, 41)), "\\Device\\Tape41", &device::exists_nt_dev},
  {"/dev/st42", BRACK(FHDEV(DEV_TAPE_MAJOR, 42)), "\\Device\\Tape42", &device::exists_nt_dev},
  {"/dev/st43", BRACK(FHDEV(DEV_TAPE_MAJOR, 43)), "\\Device\\Tape43", &device::exists_nt_dev},
  {"/dev/st44", BRACK(FHDEV(DEV_TAPE_MAJOR, 44)), "\\Device\\Tape44", &device::exists_nt_dev},
  {"/dev/st45", BRACK(FHDEV(DEV_TAPE_MAJOR, 45)), "\\Device\\Tape45", &device::exists_nt_dev},
  {"/dev/st46", BRACK(FHDEV(DEV_TAPE_MAJOR, 46)), "\\Device\\Tape46", &device::exists_nt_dev},
  {"/dev/st47", BRACK(FHDEV(DEV_TAPE_MAJOR, 47)), "\\Device\\Tape47", &device::exists_nt_dev},
  {"/dev/st48", BRACK(FHDEV(DEV_TAPE_MAJOR, 48)), "\\Device\\Tape48", &device::exists_nt_dev},
  {"/dev/st49", BRACK(FHDEV(DEV_TAPE_MAJOR, 49)), "\\Device\\Tape49", &device::exists_nt_dev},
  {"/dev/st50", BRACK(FHDEV(DEV_TAPE_MAJOR, 50)), "\\Device\\Tape50", &device::exists_nt_dev},
  {"/dev/st51", BRACK(FHDEV(DEV_TAPE_MAJOR, 51)), "\\Device\\Tape51", &device::exists_nt_dev},
  {"/dev/st52", BRACK(FHDEV(DEV_TAPE_MAJOR, 52)), "\\Device\\Tape52", &device::exists_nt_dev},
  {"/dev/st53", BRACK(FHDEV(DEV_TAPE_MAJOR, 53)), "\\Device\\Tape53", &device::exists_nt_dev},
  {"/dev/st54", BRACK(FHDEV(DEV_TAPE_MAJOR, 54)), "\\Device\\Tape54", &device::exists_nt_dev},
  {"/dev/st55", BRACK(FHDEV(DEV_TAPE_MAJOR, 55)), "\\Device\\Tape55", &device::exists_nt_dev},
  {"/dev/st56", BRACK(FHDEV(DEV_TAPE_MAJOR, 56)), "\\Device\\Tape56", &device::exists_nt_dev},
  {"/dev/st57", BRACK(FHDEV(DEV_TAPE_MAJOR, 57)), "\\Device\\Tape57", &device::exists_nt_dev},
  {"/dev/st58", BRACK(FHDEV(DEV_TAPE_MAJOR, 58)), "\\Device\\Tape58", &device::exists_nt_dev},
  {"/dev/st59", BRACK(FHDEV(DEV_TAPE_MAJOR, 59)), "\\Device\\Tape59", &device::exists_nt_dev},
  {"/dev/st60", BRACK(FHDEV(DEV_TAPE_MAJOR, 60)), "\\Device\\Tape60", &device::exists_nt_dev},
  {"/dev/st61", BRACK(FHDEV(DEV_TAPE_MAJOR, 61)), "\\Device\\Tape61", &device::exists_nt_dev},
  {"/dev/st62", BRACK(FHDEV(DEV_TAPE_MAJOR, 62)), "\\Device\\Tape62", &device::exists_nt_dev},
  {"/dev/st63", BRACK(FHDEV(DEV_TAPE_MAJOR, 63)), "\\Device\\Tape63", &device::exists_nt_dev},
  {"/dev/st64", BRACK(FHDEV(DEV_TAPE_MAJOR, 64)), "\\Device\\Tape64", &device::exists_nt_dev},
  {"/dev/st65", BRACK(FHDEV(DEV_TAPE_MAJOR, 65)), "\\Device\\Tape65", &device::exists_nt_dev},
  {"/dev/st66", BRACK(FHDEV(DEV_TAPE_MAJOR, 66)), "\\Device\\Tape66", &device::exists_nt_dev},
  {"/dev/st67", BRACK(FHDEV(DEV_TAPE_MAJOR, 67)), "\\Device\\Tape67", &device::exists_nt_dev},
  {"/dev/st68", BRACK(FHDEV(DEV_TAPE_MAJOR, 68)), "\\Device\\Tape68", &device::exists_nt_dev},
  {"/dev/st69", BRACK(FHDEV(DEV_TAPE_MAJOR, 69)), "\\Device\\Tape69", &device::exists_nt_dev},
  {"/dev/st70", BRACK(FHDEV(DEV_TAPE_MAJOR, 70)), "\\Device\\Tape70", &device::exists_nt_dev},
  {"/dev/st71", BRACK(FHDEV(DEV_TAPE_MAJOR, 71)), "\\Device\\Tape71", &device::exists_nt_dev},
  {"/dev/st72", BRACK(FHDEV(DEV_TAPE_MAJOR, 72)), "\\Device\\Tape72", &device::exists_nt_dev},
  {"/dev/st73", BRACK(FHDEV(DEV_TAPE_MAJOR, 73)), "\\Device\\Tape73", &device::exists_nt_dev},
  {"/dev/st74", BRACK(FHDEV(DEV_TAPE_MAJOR, 74)), "\\Device\\Tape74", &device::exists_nt_dev},
  {"/dev/st75", BRACK(FHDEV(DEV_TAPE_MAJOR, 75)), "\\Device\\Tape75", &device::exists_nt_dev},
  {"/dev/st76", BRACK(FHDEV(DEV_TAPE_MAJOR, 76)), "\\Device\\Tape76", &device::exists_nt_dev},
  {"/dev/st77", BRACK(FHDEV(DEV_TAPE_MAJOR, 77)), "\\Device\\Tape77", &device::exists_nt_dev},
  {"/dev/st78", BRACK(FHDEV(DEV_TAPE_MAJOR, 78)), "\\Device\\Tape78", &device::exists_nt_dev},
  {"/dev/st79", BRACK(FHDEV(DEV_TAPE_MAJOR, 79)), "\\Device\\Tape79", &device::exists_nt_dev},
  {"/dev/st80", BRACK(FHDEV(DEV_TAPE_MAJOR, 80)), "\\Device\\Tape80", &device::exists_nt_dev},
  {"/dev/st81", BRACK(FHDEV(DEV_TAPE_MAJOR, 81)), "\\Device\\Tape81", &device::exists_nt_dev},
  {"/dev/st82", BRACK(FHDEV(DEV_TAPE_MAJOR, 82)), "\\Device\\Tape82", &device::exists_nt_dev},
  {"/dev/st83", BRACK(FHDEV(DEV_TAPE_MAJOR, 83)), "\\Device\\Tape83", &device::exists_nt_dev},
  {"/dev/st84", BRACK(FHDEV(DEV_TAPE_MAJOR, 84)), "\\Device\\Tape84", &device::exists_nt_dev},
  {"/dev/st85", BRACK(FHDEV(DEV_TAPE_MAJOR, 85)), "\\Device\\Tape85", &device::exists_nt_dev},
  {"/dev/st86", BRACK(FHDEV(DEV_TAPE_MAJOR, 86)), "\\Device\\Tape86", &device::exists_nt_dev},
  {"/dev/st87", BRACK(FHDEV(DEV_TAPE_MAJOR, 87)), "\\Device\\Tape87", &device::exists_nt_dev},
  {"/dev/st88", BRACK(FHDEV(DEV_TAPE_MAJOR, 88)), "\\Device\\Tape88", &device::exists_nt_dev},
  {"/dev/st89", BRACK(FHDEV(DEV_TAPE_MAJOR, 89)), "\\Device\\Tape89", &device::exists_nt_dev},
  {"/dev/st90", BRACK(FHDEV(DEV_TAPE_MAJOR, 90)), "\\Device\\Tape90", &device::exists_nt_dev},
  {"/dev/st91", BRACK(FHDEV(DEV_TAPE_MAJOR, 91)), "\\Device\\Tape91", &device::exists_nt_dev},
  {"/dev/st92", BRACK(FHDEV(DEV_TAPE_MAJOR, 92)), "\\Device\\Tape92", &device::exists_nt_dev},
  {"/dev/st93", BRACK(FHDEV(DEV_TAPE_MAJOR, 93)), "\\Device\\Tape93", &device::exists_nt_dev},
  {"/dev/st94", BRACK(FHDEV(DEV_TAPE_MAJOR, 94)), "\\Device\\Tape94", &device::exists_nt_dev},
  {"/dev/st95", BRACK(FHDEV(DEV_TAPE_MAJOR, 95)), "\\Device\\Tape95", &device::exists_nt_dev},
  {"/dev/st96", BRACK(FHDEV(DEV_TAPE_MAJOR, 96)), "\\Device\\Tape96", &device::exists_nt_dev},
  {"/dev/st97", BRACK(FHDEV(DEV_TAPE_MAJOR, 97)), "\\Device\\Tape97", &device::exists_nt_dev},
  {"/dev/st98", BRACK(FHDEV(DEV_TAPE_MAJOR, 98)), "\\Device\\Tape98", &device::exists_nt_dev},
  {"/dev/st99", BRACK(FHDEV(DEV_TAPE_MAJOR, 99)), "\\Device\\Tape99", &device::exists_nt_dev},
  {"/dev/st100", BRACK(FHDEV(DEV_TAPE_MAJOR, 100)), "\\Device\\Tape100", &device::exists_nt_dev},
  {"/dev/st101", BRACK(FHDEV(DEV_TAPE_MAJOR, 101)), "\\Device\\Tape101", &device::exists_nt_dev},
  {"/dev/st102", BRACK(FHDEV(DEV_TAPE_MAJOR, 102)), "\\Device\\Tape102", &device::exists_nt_dev},
  {"/dev/st103", BRACK(FHDEV(DEV_TAPE_MAJOR, 103)), "\\Device\\Tape103", &device::exists_nt_dev},
  {"/dev/st104", BRACK(FHDEV(DEV_TAPE_MAJOR, 104)), "\\Device\\Tape104", &device::exists_nt_dev},
  {"/dev/st105", BRACK(FHDEV(DEV_TAPE_MAJOR, 105)), "\\Device\\Tape105", &device::exists_nt_dev},
  {"/dev/st106", BRACK(FHDEV(DEV_TAPE_MAJOR, 106)), "\\Device\\Tape106", &device::exists_nt_dev},
  {"/dev/st107", BRACK(FHDEV(DEV_TAPE_MAJOR, 107)), "\\Device\\Tape107", &device::exists_nt_dev},
  {"/dev/st108", BRACK(FHDEV(DEV_TAPE_MAJOR, 108)), "\\Device\\Tape108", &device::exists_nt_dev},
  {"/dev/st109", BRACK(FHDEV(DEV_TAPE_MAJOR, 109)), "\\Device\\Tape109", &device::exists_nt_dev},
  {"/dev/st110", BRACK(FHDEV(DEV_TAPE_MAJOR, 110)), "\\Device\\Tape110", &device::exists_nt_dev},
  {"/dev/st111", BRACK(FHDEV(DEV_TAPE_MAJOR, 111)), "\\Device\\Tape111", &device::exists_nt_dev},
  {"/dev/st112", BRACK(FHDEV(DEV_TAPE_MAJOR, 112)), "\\Device\\Tape112", &device::exists_nt_dev},
  {"/dev/st113", BRACK(FHDEV(DEV_TAPE_MAJOR, 113)), "\\Device\\Tape113", &device::exists_nt_dev},
  {"/dev/st114", BRACK(FHDEV(DEV_TAPE_MAJOR, 114)), "\\Device\\Tape114", &device::exists_nt_dev},
  {"/dev/st115", BRACK(FHDEV(DEV_TAPE_MAJOR, 115)), "\\Device\\Tape115", &device::exists_nt_dev},
  {"/dev/st116", BRACK(FHDEV(DEV_TAPE_MAJOR, 116)), "\\Device\\Tape116", &device::exists_nt_dev},
  {"/dev/st117", BRACK(FHDEV(DEV_TAPE_MAJOR, 117)), "\\Device\\Tape117", &device::exists_nt_dev},
  {"/dev/st118", BRACK(FHDEV(DEV_TAPE_MAJOR, 118)), "\\Device\\Tape118", &device::exists_nt_dev},
  {"/dev/st119", BRACK(FHDEV(DEV_TAPE_MAJOR, 119)), "\\Device\\Tape119", &device::exists_nt_dev},
  {"/dev/st120", BRACK(FHDEV(DEV_TAPE_MAJOR, 120)), "\\Device\\Tape120", &device::exists_nt_dev},
  {"/dev/st121", BRACK(FHDEV(DEV_TAPE_MAJOR, 121)), "\\Device\\Tape121", &device::exists_nt_dev},
  {"/dev/st122", BRACK(FHDEV(DEV_TAPE_MAJOR, 122)), "\\Device\\Tape122", &device::exists_nt_dev},
  {"/dev/st123", BRACK(FHDEV(DEV_TAPE_MAJOR, 123)), "\\Device\\Tape123", &device::exists_nt_dev},
  {"/dev/st124", BRACK(FHDEV(DEV_TAPE_MAJOR, 124)), "\\Device\\Tape124", &device::exists_nt_dev},
  {"/dev/st125", BRACK(FHDEV(DEV_TAPE_MAJOR, 125)), "\\Device\\Tape125", &device::exists_nt_dev},
  {"/dev/st126", BRACK(FHDEV(DEV_TAPE_MAJOR, 126)), "\\Device\\Tape126", &device::exists_nt_dev},
  {"/dev/st127", BRACK(FHDEV(DEV_TAPE_MAJOR, 127)), "\\Device\\Tape127", &device::exists_nt_dev},
  {"/dev/tty", BRACK(FH_TTY), "/dev/tty"},
  {"/dev/ttyS0", BRACK(FHDEV(DEV_SERIAL_MAJOR, 0)), "\\??\\COM1", &device::exists_nt_dev},
  {"/dev/ttyS1", BRACK(FHDEV(DEV_SERIAL_MAJOR, 1)), "\\??\\COM2", &device::exists_nt_dev},
  {"/dev/ttyS2", BRACK(FHDEV(DEV_SERIAL_MAJOR, 2)), "\\??\\COM3", &device::exists_nt_dev},
  {"/dev/ttyS3", BRACK(FHDEV(DEV_SERIAL_MAJOR, 3)), "\\??\\COM4", &device::exists_nt_dev},
  {"/dev/ttyS4", BRACK(FHDEV(DEV_SERIAL_MAJOR, 4)), "\\??\\COM5", &device::exists_nt_dev},
  {"/dev/ttyS5", BRACK(FHDEV(DEV_SERIAL_MAJOR, 5)), "\\??\\COM6", &device::exists_nt_dev},
  {"/dev/ttyS6", BRACK(FHDEV(DEV_SERIAL_MAJOR, 6)), "\\??\\COM7", &device::exists_nt_dev},
  {"/dev/ttyS7", BRACK(FHDEV(DEV_SERIAL_MAJOR, 7)), "\\??\\COM8", &device::exists_nt_dev},
  {"/dev/ttyS8", BRACK(FHDEV(DEV_SERIAL_MAJOR, 8)), "\\??\\COM9", &device::exists_nt_dev},
  {"/dev/ttyS9", BRACK(FHDEV(DEV_SERIAL_MAJOR, 9)), "\\??\\COM10", &device::exists_nt_dev},
  {"/dev/ttyS10", BRACK(FHDEV(DEV_SERIAL_MAJOR, 10)), "\\??\\COM11", &device::exists_nt_dev},
  {"/dev/ttyS11", BRACK(FHDEV(DEV_SERIAL_MAJOR, 11)), "\\??\\COM12", &device::exists_nt_dev},
  {"/dev/ttyS12", BRACK(FHDEV(DEV_SERIAL_MAJOR, 12)), "\\??\\COM13", &device::exists_nt_dev},
  {"/dev/ttyS13", BRACK(FHDEV(DEV_SERIAL_MAJOR, 13)), "\\??\\COM14", &device::exists_nt_dev},
  {"/dev/ttyS14", BRACK(FHDEV(DEV_SERIAL_MAJOR, 14)), "\\??\\COM15", &device::exists_nt_dev},
  {"/dev/ttyS15", BRACK(FHDEV(DEV_SERIAL_MAJOR, 15)), "\\??\\COM16", &device::exists_nt_dev},
  {"/dev/ttyS16", BRACK(FHDEV(DEV_SERIAL_MAJOR, 16)), "\\??\\COM17", &device::exists_nt_dev},
  {"/dev/ttyS17", BRACK(FHDEV(DEV_SERIAL_MAJOR, 17)), "\\??\\COM18", &device::exists_nt_dev},
  {"/dev/ttyS18", BRACK(FHDEV(DEV_SERIAL_MAJOR, 18)), "\\??\\COM19", &device::exists_nt_dev},
  {"/dev/ttyS19", BRACK(FHDEV(DEV_SERIAL_MAJOR, 19)), "\\??\\COM20", &device::exists_nt_dev},
  {"/dev/ttyS20", BRACK(FHDEV(DEV_SERIAL_MAJOR, 20)), "\\??\\COM21", &device::exists_nt_dev},
  {"/dev/ttyS21", BRACK(FHDEV(DEV_SERIAL_MAJOR, 21)), "\\??\\COM22", &device::exists_nt_dev},
  {"/dev/ttyS22", BRACK(FHDEV(DEV_SERIAL_MAJOR, 22)), "\\??\\COM23", &device::exists_nt_dev},
  {"/dev/ttyS23", BRACK(FHDEV(DEV_SERIAL_MAJOR, 23)), "\\??\\COM24", &device::exists_nt_dev},
  {"/dev/ttyS24", BRACK(FHDEV(DEV_SERIAL_MAJOR, 24)), "\\??\\COM25", &device::exists_nt_dev},
  {"/dev/ttyS25", BRACK(FHDEV(DEV_SERIAL_MAJOR, 25)), "\\??\\COM26", &device::exists_nt_dev},
  {"/dev/ttyS26", BRACK(FHDEV(DEV_SERIAL_MAJOR, 26)), "\\??\\COM27", &device::exists_nt_dev},
  {"/dev/ttyS27", BRACK(FHDEV(DEV_SERIAL_MAJOR, 27)), "\\??\\COM28", &device::exists_nt_dev},
  {"/dev/ttyS28", BRACK(FHDEV(DEV_SERIAL_MAJOR, 28)), "\\??\\COM29", &device::exists_nt_dev},
  {"/dev/ttyS29", BRACK(FHDEV(DEV_SERIAL_MAJOR, 29)), "\\??\\COM30", &device::exists_nt_dev},
  {"/dev/ttyS30", BRACK(FHDEV(DEV_SERIAL_MAJOR, 30)), "\\??\\COM31", &device::exists_nt_dev},
  {"/dev/ttyS31", BRACK(FHDEV(DEV_SERIAL_MAJOR, 31)), "\\??\\COM32", &device::exists_nt_dev},
  {"/dev/ttyS32", BRACK(FHDEV(DEV_SERIAL_MAJOR, 32)), "\\??\\COM33", &device::exists_nt_dev},
  {"/dev/ttyS33", BRACK(FHDEV(DEV_SERIAL_MAJOR, 33)), "\\??\\COM34", &device::exists_nt_dev},
  {"/dev/ttyS34", BRACK(FHDEV(DEV_SERIAL_MAJOR, 34)), "\\??\\COM35", &device::exists_nt_dev},
  {"/dev/ttyS35", BRACK(FHDEV(DEV_SERIAL_MAJOR, 35)), "\\??\\COM36", &device::exists_nt_dev},
  {"/dev/ttyS36", BRACK(FHDEV(DEV_SERIAL_MAJOR, 36)), "\\??\\COM37", &device::exists_nt_dev},
  {"/dev/ttyS37", BRACK(FHDEV(DEV_SERIAL_MAJOR, 37)), "\\??\\COM38", &device::exists_nt_dev},
  {"/dev/ttyS38", BRACK(FHDEV(DEV_SERIAL_MAJOR, 38)), "\\??\\COM39", &device::exists_nt_dev},
  {"/dev/ttyS39", BRACK(FHDEV(DEV_SERIAL_MAJOR, 39)), "\\??\\COM40", &device::exists_nt_dev},
  {"/dev/ttyS40", BRACK(FHDEV(DEV_SERIAL_MAJOR, 40)), "\\??\\COM41", &device::exists_nt_dev},
  {"/dev/ttyS41", BRACK(FHDEV(DEV_SERIAL_MAJOR, 41)), "\\??\\COM42", &device::exists_nt_dev},
  {"/dev/ttyS42", BRACK(FHDEV(DEV_SERIAL_MAJOR, 42)), "\\??\\COM43", &device::exists_nt_dev},
  {"/dev/ttyS43", BRACK(FHDEV(DEV_SERIAL_MAJOR, 43)), "\\??\\COM44", &device::exists_nt_dev},
  {"/dev/ttyS44", BRACK(FHDEV(DEV_SERIAL_MAJOR, 44)), "\\??\\COM45", &device::exists_nt_dev},
  {"/dev/ttyS45", BRACK(FHDEV(DEV_SERIAL_MAJOR, 45)), "\\??\\COM46", &device::exists_nt_dev},
  {"/dev/ttyS46", BRACK(FHDEV(DEV_SERIAL_MAJOR, 46)), "\\??\\COM47", &device::exists_nt_dev},
  {"/dev/ttyS47", BRACK(FHDEV(DEV_SERIAL_MAJOR, 47)), "\\??\\COM48", &device::exists_nt_dev},
  {"/dev/ttyS48", BRACK(FHDEV(DEV_SERIAL_MAJOR, 48)), "\\??\\COM49", &device::exists_nt_dev},
  {"/dev/ttyS49", BRACK(FHDEV(DEV_SERIAL_MAJOR, 49)), "\\??\\COM50", &device::exists_nt_dev},
  {"/dev/ttyS50", BRACK(FHDEV(DEV_SERIAL_MAJOR, 50)), "\\??\\COM51", &device::exists_nt_dev},
  {"/dev/ttyS51", BRACK(FHDEV(DEV_SERIAL_MAJOR, 51)), "\\??\\COM52", &device::exists_nt_dev},
  {"/dev/ttyS52", BRACK(FHDEV(DEV_SERIAL_MAJOR, 52)), "\\??\\COM53", &device::exists_nt_dev},
  {"/dev/ttyS53", BRACK(FHDEV(DEV_SERIAL_MAJOR, 53)), "\\??\\COM54", &device::exists_nt_dev},
  {"/dev/ttyS54", BRACK(FHDEV(DEV_SERIAL_MAJOR, 54)), "\\??\\COM55", &device::exists_nt_dev},
  {"/dev/ttyS55", BRACK(FHDEV(DEV_SERIAL_MAJOR, 55)), "\\??\\COM56", &device::exists_nt_dev},
  {"/dev/ttyS56", BRACK(FHDEV(DEV_SERIAL_MAJOR, 56)), "\\??\\COM57", &device::exists_nt_dev},
  {"/dev/ttyS57", BRACK(FHDEV(DEV_SERIAL_MAJOR, 57)), "\\??\\COM58", &device::exists_nt_dev},
  {"/dev/ttyS58", BRACK(FHDEV(DEV_SERIAL_MAJOR, 58)), "\\??\\COM59", &device::exists_nt_dev},
  {"/dev/ttyS59", BRACK(FHDEV(DEV_SERIAL_MAJOR, 59)), "\\??\\COM60", &device::exists_nt_dev},
  {"/dev/ttyS60", BRACK(FHDEV(DEV_SERIAL_MAJOR, 60)), "\\??\\COM61", &device::exists_nt_dev},
  {"/dev/ttyS61", BRACK(FHDEV(DEV_SERIAL_MAJOR, 61)), "\\??\\COM62", &device::exists_nt_dev},
  {"/dev/ttyS62", BRACK(FHDEV(DEV_SERIAL_MAJOR, 62)), "\\??\\COM63", &device::exists_nt_dev},
  {"/dev/ttyS63", BRACK(FHDEV(DEV_SERIAL_MAJOR, 63)), "\\??\\COM64", &device::exists_nt_dev},
  {"/dev/urandom", BRACK(FH_URANDOM), "/dev/urandom"},
  {"/dev/windows", BRACK(FH_WINDOWS), "/dev/windows"},
  {"/dev/zero", BRACK(FH_ZERO), "/dev/zero"}
d2793 3
a2795 3
const device *ptym_dev = dev_storage + 303;
const device *ptys_dev = dev_storage + 239;
const device *urandom_dev = dev_storage + 2641;
d2818 198
d3023 1
a3023 1
return dev_storage + 409;
d3041 1
a3041 1
return dev_storage + 2576;
d3056 1
a3056 1
return dev_storage + 408;
d3077 1
a3077 1
return dev_storage + 407;
d3092 1
a3092 1
return dev_storage + 406;
d3107 1
a3107 1
return dev_storage + 405;
d3122 1
a3122 1
return dev_storage + 404;
d3137 1
a3137 1
return dev_storage + 403;
d3152 1
a3152 1
return dev_storage + 402;
d3167 1
a3167 1
return dev_storage + 401;
d3182 1
a3182 1
return dev_storage + 400;
d3200 1
a3200 1
return dev_storage + 399;
d3236 1
a3236 1
return dev_storage + 398;
d3251 1
a3251 1
return dev_storage + 397;
d3269 1
a3269 1
return dev_storage + 396;
d3284 1
a3284 1
return dev_storage + 106;
d3305 1
a3305 1
return dev_storage + 395;
d3320 1
a3320 1
return dev_storage + 394;
d3335 1
a3335 1
return dev_storage + 393;
d3350 1
a3350 1
return dev_storage + 392;
d3365 1
a3365 1
return dev_storage + 391;
d3380 1
a3380 1
return dev_storage + 390;
d3395 1
a3395 1
return dev_storage + 389;
d3410 1
a3410 1
return dev_storage + 388;
d3425 1
a3425 1
return dev_storage + 387;
d3440 1
a3440 1
return dev_storage + 386;
d3455 1
a3455 1
return dev_storage + 385;
d3470 1
a3470 1
return dev_storage + 384;
d3488 1
a3488 1
return dev_storage + 2457;
d3503 1
a3503 1
return dev_storage + 2441;
d3529 10
a3538 1
            default:
d3543 3
a3545 6
            }
        case '8':
          switch (KR_keyword [6])
            {
            case 't':
              if (strncmp (KR_keyword, "/dev/st8", 8) == 0)
d3548 1
a3548 1
return dev_storage + 2456;
d3559 2
a3560 2
            case 'r':
              if (strncmp (KR_keyword, "/dev/sr8", 8) == 0)
d3563 1
a3563 1
return dev_storage + 2440;
d3574 2
a3575 2
            case 'd':
              if (strncmp (KR_keyword, "/dev/fd8", 8) == 0)
d3578 1
a3578 1
return dev_storage + 94;
d3589 3
a3591 1
            default:
d3593 1
a3593 1
return	NULL;
d3596 2
a3597 6
            }
        case '7':
          switch (KR_keyword [6])
            {
            case 't':
              if (strncmp (KR_keyword, "/dev/st7", 8) == 0)
d3600 1
a3600 1
return dev_storage + 2455;
d3604 1
a3604 2
              else
                {
d3609 6
a3614 3
                }
            case 'r':
              if (strncmp (KR_keyword, "/dev/sr7", 8) == 0)
d3617 1
a3617 1
return dev_storage + 2439;
d3628 2
a3629 2
            case 'd':
              if (strncmp (KR_keyword, "/dev/fd7", 8) == 0)
d3632 1
a3632 1
return dev_storage + 93;
d3643 2
a3644 11
            default:
{
return	NULL;

}
            }
        case '6':
          switch (KR_keyword [6])
            {
            case 't':
              if (strncmp (KR_keyword, "/dev/st6", 8) == 0)
d3647 1
a3647 1
return dev_storage + 2454;
d3658 2
a3659 2
            case 'r':
              if (strncmp (KR_keyword, "/dev/sr6", 8) == 0)
d3662 1
a3662 1
return dev_storage + 2438;
d3673 2
a3674 2
            case 'd':
              if (strncmp (KR_keyword, "/dev/fd6", 8) == 0)
d3677 1
a3677 1
return dev_storage + 92;
d3688 2
a3689 11
            default:
{
return	NULL;

}
            }
        case '5':
          switch (KR_keyword [6])
            {
            case 't':
              if (strncmp (KR_keyword, "/dev/st5", 8) == 0)
d3692 1
a3692 1
return dev_storage + 2453;
d3703 2
a3704 2
            case 'r':
              if (strncmp (KR_keyword, "/dev/sr5", 8) == 0)
d3707 1
a3707 1
return dev_storage + 2437;
d3718 2
a3719 2
            case 'd':
              if (strncmp (KR_keyword, "/dev/fd5", 8) == 0)
d3722 1
a3722 1
return dev_storage + 91;
d3739 1
a3739 1
        case '4':
d3743 1
a3743 1
              if (strncmp (KR_keyword, "/dev/st4", 8) == 0)
d3746 1
a3746 1
return dev_storage + 2452;
d3758 1
a3758 1
              if (strncmp (KR_keyword, "/dev/sr4", 8) == 0)
d3761 1
a3761 1
return dev_storage + 2436;
d3773 1
a3773 1
              if (strncmp (KR_keyword, "/dev/fd4", 8) == 0)
d3776 1
a3776 1
return dev_storage + 90;
d3787 2
a3788 11
            default:
{
return	NULL;

}
            }
        case '3':
          switch (KR_keyword [6])
            {
            case 't':
              if (strncmp (KR_keyword, "/dev/st3", 8) == 0)
d3791 1
a3791 1
return dev_storage + 2451;
d3802 2
a3803 2
            case 'r':
              if (strncmp (KR_keyword, "/dev/sr3", 8) == 0)
d3806 1
a3806 1
return dev_storage + 2435;
d3817 2
a3818 2
            case 'd':
              if (strncmp (KR_keyword, "/dev/fd3", 8) == 0)
d3821 1
a3821 1
return dev_storage + 89;
d3832 2
a3833 11
            default:
{
return	NULL;

}
            }
        case '2':
          switch (KR_keyword [6])
            {
            case 't':
              if (strncmp (KR_keyword, "/dev/st2", 8) == 0)
d3836 1
a3836 1
return dev_storage + 2450;
d3847 2
a3848 2
            case 'r':
              if (strncmp (KR_keyword, "/dev/sr2", 8) == 0)
d3851 1
a3851 16
return dev_storage + 2434;

}
                }
              else
                {
{
return	NULL;

}
                }
            case 'd':
              if (strncmp (KR_keyword, "/dev/fd2", 8) == 0)
                {
{
return dev_storage + 88;
d3868 1
a3868 1
        case '1':
d3872 1
a3872 1
              if (strncmp (KR_keyword, "/dev/st1", 8) == 0)
d3875 1
a3875 1
return dev_storage + 2449;
d3887 1
a3887 1
              if (strncmp (KR_keyword, "/dev/sr1", 8) == 0)
d3890 1
a3890 1
return dev_storage + 2433;
d3902 1
a3902 1
              if (strncmp (KR_keyword, "/dev/fd1", 8) == 0)
d3905 1
a3905 1
return dev_storage + 87;
d3916 2
a3917 11
            default:
{
return	NULL;

}
            }
        case '0':
          switch (KR_keyword [6])
            {
            case 't':
              if (strncmp (KR_keyword, "/dev/st0", 8) == 0)
d3920 1
a3920 1
return dev_storage + 2448;
d3931 2
a3932 2
            case 'r':
              if (strncmp (KR_keyword, "/dev/sr0", 8) == 0)
d3935 1
a3935 1
return dev_storage + 2432;
d3946 2
a3947 2
            case 'd':
              if (strncmp (KR_keyword, "/dev/fd0", 8) == 0)
d3950 1
a3950 1
return dev_storage + 86;
d3961 3
a3963 1
            default:
d3965 1
a3965 1
return	NULL;
d3968 3
a3970 2
            }
        default:
d3975 3
a3977 9
        }
    case 9:
      switch (KR_keyword [7])
        {
        case 'z':
          switch (KR_keyword [8])
            {
            case '9':
              if (strncmp (KR_keyword, "/dev/sdz9", 9) == 0)
d3980 1
a3980 1
return dev_storage + 793;
d3991 11
a4001 2
            case '8':
              if (strncmp (KR_keyword, "/dev/sdz8", 9) == 0)
d4004 1
a4004 1
return dev_storage + 792;
d4015 2
a4016 2
            case '7':
              if (strncmp (KR_keyword, "/dev/sdz7", 9) == 0)
d4019 1
a4019 1
return dev_storage + 791;
d4030 2
a4031 2
            case '6':
              if (strncmp (KR_keyword, "/dev/sdz6", 9) == 0)
d4034 1
a4034 1
return dev_storage + 790;
d4046 1
a4046 1
              if (strncmp (KR_keyword, "/dev/sdz5", 9) == 0)
d4049 1
a4049 1
return dev_storage + 789;
d4061 1
a4061 1
              if (strncmp (KR_keyword, "/dev/sdz4", 9) == 0)
d4064 1
a4064 1
return dev_storage + 788;
d4076 1
a4076 1
              if (strncmp (KR_keyword, "/dev/sdz3", 9) == 0)
d4079 1
a4079 1
return dev_storage + 787;
d4091 1
a4091 1
              if (strncmp (KR_keyword, "/dev/sdz2", 9) == 0)
d4094 1
a4094 1
return dev_storage + 786;
d4106 1
a4106 1
              if (strncmp (KR_keyword, "/dev/sdz1", 9) == 0)
d4109 1
a4109 1
return dev_storage + 785;
d4126 2
a4127 2
        case 'y':
          switch (KR_keyword [8])
d4129 2
a4130 2
            case '9':
              switch (KR_keyword [5])
a4131 3
                case 's':
                  if (strncmp (KR_keyword, "/dev/sdy9", 9) == 0)
                    {
d4133 1
a4133 1
return dev_storage + 778;
d4136 3
a4138 3
                    }
                  else
                    {
d4143 4
a4146 4
                    }
                case 'p':
                  if (strncmp (KR_keyword, "/dev/pty9", 9) == 0)
                    {
d4148 1
a4148 1
return dev_storage + 248;
d4151 3
a4153 3
                    }
                  else
                    {
d4158 4
a4161 2
                    }
                default:
d4163 1
a4163 1
return	NULL;
d4167 1
a4167 2
            case '8':
              switch (KR_keyword [5])
a4168 10
                case 's':
                  if (strncmp (KR_keyword, "/dev/sdy8", 9) == 0)
                    {
{
return dev_storage + 777;

}
                    }
                  else
                    {
d4173 4
a4176 4
                    }
                case 'p':
                  if (strncmp (KR_keyword, "/dev/pty8", 9) == 0)
                    {
d4178 1
a4178 1
return dev_storage + 247;
d4181 3
a4183 3
                    }
                  else
                    {
d4188 4
a4191 2
                    }
                default:
d4193 1
a4193 1
return	NULL;
d4197 1
a4197 2
            case '7':
              switch (KR_keyword [5])
a4198 10
                case 's':
                  if (strncmp (KR_keyword, "/dev/sdy7", 9) == 0)
                    {
{
return dev_storage + 776;

}
                    }
                  else
                    {
d4203 4
a4206 4
                    }
                case 'p':
                  if (strncmp (KR_keyword, "/dev/pty7", 9) == 0)
                    {
d4208 1
a4208 1
return dev_storage + 246;
d4211 3
a4213 3
                    }
                  else
                    {
d4218 4
a4221 2
                    }
                default:
d4223 1
a4223 1
return	NULL;
d4227 1
a4227 2
            case '6':
              switch (KR_keyword [5])
a4228 10
                case 's':
                  if (strncmp (KR_keyword, "/dev/sdy6", 9) == 0)
                    {
{
return dev_storage + 775;

}
                    }
                  else
                    {
d4233 4
a4236 4
                    }
                case 'p':
                  if (strncmp (KR_keyword, "/dev/pty6", 9) == 0)
                    {
d4238 1
a4238 14
return dev_storage + 245;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                default:
{
return	NULL;
d4242 1
a4242 2
            case '5':
              switch (KR_keyword [5])
a4243 10
                case 's':
                  if (strncmp (KR_keyword, "/dev/sdy5", 9) == 0)
                    {
{
return dev_storage + 774;

}
                    }
                  else
                    {
d4248 2
a4249 11
                    }
                case 'p':
                  if (strncmp (KR_keyword, "/dev/pty5", 9) == 0)
                    {
{
return dev_storage + 244;

}
                    }
                  else
                    {
d4254 7
a4260 2
                    }
                default:
d4262 1
a4262 1
return	NULL;
d4266 1
a4266 2
            case '4':
              switch (KR_keyword [5])
a4267 10
                case 's':
                  if (strncmp (KR_keyword, "/dev/sdy4", 9) == 0)
                    {
{
return dev_storage + 773;

}
                    }
                  else
                    {
d4272 4
a4275 4
                    }
                case 'p':
                  if (strncmp (KR_keyword, "/dev/pty4", 9) == 0)
                    {
d4277 1
a4277 1
return dev_storage + 243;
d4280 3
a4282 3
                    }
                  else
                    {
d4287 4
a4290 2
                    }
                default:
d4292 1
a4292 1
return	NULL;
d4296 1
a4296 2
            case '3':
              switch (KR_keyword [5])
a4297 10
                case 's':
                  if (strncmp (KR_keyword, "/dev/sdy3", 9) == 0)
                    {
{
return dev_storage + 772;

}
                    }
                  else
                    {
d4302 4
a4305 4
                    }
                case 'p':
                  if (strncmp (KR_keyword, "/dev/pty3", 9) == 0)
                    {
d4307 1
a4307 1
return dev_storage + 242;
d4310 3
a4312 3
                    }
                  else
                    {
d4317 4
a4320 2
                    }
                default:
d4322 1
a4322 1
return	NULL;
d4326 1
a4326 2
            case '2':
              switch (KR_keyword [5])
a4327 10
                case 's':
                  if (strncmp (KR_keyword, "/dev/sdy2", 9) == 0)
                    {
{
return dev_storage + 771;

}
                    }
                  else
                    {
d4332 4
a4335 4
                    }
                case 'p':
                  if (strncmp (KR_keyword, "/dev/pty2", 9) == 0)
                    {
d4337 1
a4337 1
return dev_storage + 241;
d4340 3
a4342 3
                    }
                  else
                    {
d4347 4
a4350 2
                    }
                default:
d4352 1
a4352 1
return	NULL;
d4356 1
a4356 2
            case '1':
              switch (KR_keyword [5])
a4357 10
                case 's':
                  if (strncmp (KR_keyword, "/dev/sdy1", 9) == 0)
                    {
{
return dev_storage + 770;

}
                    }
                  else
                    {
d4362 4
a4365 4
                    }
                case 'p':
                  if (strncmp (KR_keyword, "/dev/pty1", 9) == 0)
                    {
d4367 1
a4367 1
return dev_storage + 240;
d4370 3
a4372 9
                    }
                  else
                    {
{
return	NULL;

}
                    }
                default:
d4378 2
a4379 2
            case '0':
              if (strncmp (KR_keyword, "/dev/pty0", 9) == 0)
d4382 1
a4382 1
return dev_storage + 239;
d4399 2
a4400 2
        case 'x':
          switch (KR_keyword [8])
d4402 2
a4403 2
            case '9':
              if (strncmp (KR_keyword, "/dev/sdx9", 9) == 0)
d4406 1
a4406 1
return dev_storage + 763;
d4417 2
a4418 2
            case '8':
              if (strncmp (KR_keyword, "/dev/sdx8", 9) == 0)
d4421 1
a4421 1
return dev_storage + 762;
d4432 2
a4433 2
            case '7':
              if (strncmp (KR_keyword, "/dev/sdx7", 9) == 0)
d4436 1
a4436 1
return dev_storage + 761;
d4448 1
a4448 1
              if (strncmp (KR_keyword, "/dev/sdx6", 9) == 0)
d4451 1
a4451 1
return dev_storage + 760;
d4463 1
a4463 1
              if (strncmp (KR_keyword, "/dev/sdx5", 9) == 0)
d4466 1
a4466 1
return dev_storage + 759;
d4478 1
a4478 1
              if (strncmp (KR_keyword, "/dev/sdx4", 9) == 0)
d4481 1
a4481 1
return dev_storage + 758;
d4493 1
a4493 1
              if (strncmp (KR_keyword, "/dev/sdx3", 9) == 0)
d4496 1
a4496 1
return dev_storage + 757;
d4508 1
a4508 1
              if (strncmp (KR_keyword, "/dev/sdx2", 9) == 0)
d4511 1
a4511 1
return dev_storage + 756;
d4523 1
a4523 1
              if (strncmp (KR_keyword, "/dev/sdx1", 9) == 0)
d4526 1
a4526 1
return dev_storage + 755;
d4543 2
a4544 2
        case 'w':
          switch (KR_keyword [8])
d4546 2
a4547 2
            case '9':
              if (strncmp (KR_keyword, "/dev/sdw9", 9) == 0)
d4550 1
a4550 1
return dev_storage + 748;
d4561 2
a4562 2
            case '8':
              if (strncmp (KR_keyword, "/dev/sdw8", 9) == 0)
d4565 1
a4565 1
return dev_storage + 747;
d4576 2
a4577 2
            case '7':
              if (strncmp (KR_keyword, "/dev/sdw7", 9) == 0)
d4580 1
a4580 1
return dev_storage + 746;
d4592 1
a4592 1
              if (strncmp (KR_keyword, "/dev/sdw6", 9) == 0)
d4595 1
a4595 1
return dev_storage + 745;
d4607 1
a4607 1
              if (strncmp (KR_keyword, "/dev/sdw5", 9) == 0)
d4610 1
a4610 1
return dev_storage + 744;
d4622 1
a4622 1
              if (strncmp (KR_keyword, "/dev/sdw4", 9) == 0)
d4625 1
a4625 1
return dev_storage + 743;
d4637 1
a4637 1
              if (strncmp (KR_keyword, "/dev/sdw3", 9) == 0)
d4640 1
a4640 1
return dev_storage + 742;
d4652 1
a4652 1
              if (strncmp (KR_keyword, "/dev/sdw2", 9) == 0)
d4655 1
a4655 1
return dev_storage + 741;
d4667 1
a4667 1
              if (strncmp (KR_keyword, "/dev/sdw1", 9) == 0)
d4670 1
a4670 1
return dev_storage + 740;
d4687 2
a4688 2
        case 'v':
          switch (KR_keyword [8])
d4690 2
a4691 2
            case '9':
              if (strncmp (KR_keyword, "/dev/sdv9", 9) == 0)
d4694 1
a4694 1
return dev_storage + 733;
d4705 2
a4706 2
            case '8':
              if (strncmp (KR_keyword, "/dev/sdv8", 9) == 0)
d4709 1
a4709 1
return dev_storage + 732;
d4720 2
a4721 2
            case '7':
              if (strncmp (KR_keyword, "/dev/sdv7", 9) == 0)
d4724 1
a4724 1
return dev_storage + 731;
d4736 1
a4736 1
              if (strncmp (KR_keyword, "/dev/sdv6", 9) == 0)
d4739 1
a4739 1
return dev_storage + 730;
d4751 1
a4751 1
              if (strncmp (KR_keyword, "/dev/sdv5", 9) == 0)
d4754 1
a4754 1
return dev_storage + 729;
d4766 1
a4766 1
              if (strncmp (KR_keyword, "/dev/sdv4", 9) == 0)
d4769 1
a4769 1
return dev_storage + 728;
d4781 1
a4781 1
              if (strncmp (KR_keyword, "/dev/sdv3", 9) == 0)
d4784 1
a4784 1
return dev_storage + 727;
d4796 1
a4796 1
              if (strncmp (KR_keyword, "/dev/sdv2", 9) == 0)
d4799 1
a4799 1
return dev_storage + 726;
d4811 1
a4811 1
              if (strncmp (KR_keyword, "/dev/sdv1", 9) == 0)
d4814 1
a4814 1
return dev_storage + 725;
d4831 10
a4840 1
        case 'u':
d4844 1
a4844 1
              if (strncmp (KR_keyword, "/dev/sdu9", 9) == 0)
d4847 1
a4847 1
return dev_storage + 718;
d4859 1
a4859 1
              if (strncmp (KR_keyword, "/dev/sdu8", 9) == 0)
d4862 1
a4862 1
return dev_storage + 717;
d4874 1
a4874 1
              if (strncmp (KR_keyword, "/dev/sdu7", 9) == 0)
d4877 1
a4877 1
return dev_storage + 716;
d4889 1
a4889 1
              if (strncmp (KR_keyword, "/dev/sdu6", 9) == 0)
d4892 1
a4892 1
return dev_storage + 715;
d4904 1
a4904 1
              if (strncmp (KR_keyword, "/dev/sdu5", 9) == 0)
d4907 1
a4907 1
return dev_storage + 714;
d4919 1
a4919 1
              if (strncmp (KR_keyword, "/dev/sdu4", 9) == 0)
d4922 1
a4922 1
return dev_storage + 713;
d4934 1
a4934 1
              if (strncmp (KR_keyword, "/dev/sdu3", 9) == 0)
d4937 1
a4937 1
return dev_storage + 712;
d4949 1
a4949 1
              if (strncmp (KR_keyword, "/dev/sdu2", 9) == 0)
d4952 1
a4952 1
return dev_storage + 711;
d4964 1
a4964 1
              if (strncmp (KR_keyword, "/dev/sdu1", 9) == 0)
d4967 1
a4967 1
return dev_storage + 710;
d4984 1
a4984 1
        case 't':
d4991 1
a4991 1
                  if (strncmp (KR_keyword, "/dev/sdt9", 9) == 0)
d4994 1
a4994 1
return dev_storage + 703;
d5005 2
a5006 2
                case 'n':
                  if (strncmp (KR_keyword, "/dev/nst9", 9) == 0)
d5009 1
a5009 1
return dev_storage + 116;
d5030 1
a5030 1
                  if (strncmp (KR_keyword, "/dev/sdt8", 9) == 0)
d5033 1
a5033 1
return dev_storage + 702;
d5044 2
a5045 2
                case 'n':
                  if (strncmp (KR_keyword, "/dev/nst8", 9) == 0)
d5048 1
a5048 1
return dev_storage + 115;
d5069 1
a5069 1
                  if (strncmp (KR_keyword, "/dev/sdt7", 9) == 0)
d5072 1
a5072 1
return dev_storage + 701;
d5083 2
a5084 2
                case 'n':
                  if (strncmp (KR_keyword, "/dev/nst7", 9) == 0)
d5087 1
a5087 1
return dev_storage + 114;
d5108 1
a5108 1
                  if (strncmp (KR_keyword, "/dev/sdt6", 9) == 0)
d5111 1
a5111 1
return dev_storage + 700;
d5122 2
a5123 2
                case 'n':
                  if (strncmp (KR_keyword, "/dev/nst6", 9) == 0)
d5126 1
a5126 1
return dev_storage + 113;
d5147 1
a5147 1
                  if (strncmp (KR_keyword, "/dev/sdt5", 9) == 0)
d5150 1
a5150 1
return dev_storage + 699;
d5161 2
a5162 2
                case 'n':
                  if (strncmp (KR_keyword, "/dev/nst5", 9) == 0)
d5165 1
a5165 1
return dev_storage + 112;
d5186 1
a5186 1
                  if (strncmp (KR_keyword, "/dev/sdt4", 9) == 0)
d5189 1
a5189 1
return dev_storage + 698;
d5200 2
a5201 2
                case 'n':
                  if (strncmp (KR_keyword, "/dev/nst4", 9) == 0)
d5204 1
a5204 1
return dev_storage + 111;
d5225 1
a5225 1
                  if (strncmp (KR_keyword, "/dev/sdt3", 9) == 0)
d5228 1
a5228 1
return dev_storage + 697;
d5239 2
a5240 2
                case 'n':
                  if (strncmp (KR_keyword, "/dev/nst3", 9) == 0)
d5243 1
a5243 1
return dev_storage + 110;
d5264 1
a5264 1
                  if (strncmp (KR_keyword, "/dev/sdt2", 9) == 0)
d5267 1
a5267 1
return dev_storage + 696;
d5278 2
a5279 2
                case 'n':
                  if (strncmp (KR_keyword, "/dev/nst2", 9) == 0)
d5282 1
a5282 1
return dev_storage + 109;
d5303 1
a5303 1
                  if (strncmp (KR_keyword, "/dev/sdt1", 9) == 0)
d5306 1
a5306 1
return dev_storage + 695;
d5317 2
a5318 2
                case 'n':
                  if (strncmp (KR_keyword, "/dev/nst1", 9) == 0)
d5321 1
a5321 1
return dev_storage + 108;
d5339 1
a5339 1
              if (strncmp (KR_keyword, "/dev/nst0", 9) == 0)
d5342 1
a5342 1
return dev_storage + 107;
d5359 1
a5359 1
        case 's':
a5361 15
            case 'g':
              if (strncmp (KR_keyword, "/dev/kmsg", 9) == 0)
                {
{
return dev_storage + 105;

}
                }
              else
                {
{
return	NULL;

}
                }
d5363 1
a5363 1
              if (strncmp (KR_keyword, "/dev/sds9", 9) == 0)
d5366 1
a5366 1
return dev_storage + 688;
d5378 1
a5378 1
              if (strncmp (KR_keyword, "/dev/sds8", 9) == 0)
d5381 1
a5381 1
return dev_storage + 687;
d5393 1
a5393 1
              if (strncmp (KR_keyword, "/dev/sds7", 9) == 0)
d5396 1
a5396 1
return dev_storage + 686;
d5408 1
a5408 1
              if (strncmp (KR_keyword, "/dev/sds6", 9) == 0)
d5411 1
a5411 1
return dev_storage + 685;
d5423 1
a5423 1
              if (strncmp (KR_keyword, "/dev/sds5", 9) == 0)
d5426 1
a5426 1
return dev_storage + 684;
d5438 1
a5438 1
              if (strncmp (KR_keyword, "/dev/sds4", 9) == 0)
d5441 1
a5441 1
return dev_storage + 683;
d5453 1
a5453 1
              if (strncmp (KR_keyword, "/dev/sds3", 9) == 0)
d5456 1
a5456 1
return dev_storage + 682;
d5468 1
a5468 1
              if (strncmp (KR_keyword, "/dev/sds2", 9) == 0)
d5471 1
a5471 1
return dev_storage + 681;
d5483 1
a5483 1
              if (strncmp (KR_keyword, "/dev/sds1", 9) == 0)
d5486 1
a5486 1
return dev_storage + 680;
d5503 1
a5503 1
        case 'r':
a5505 30
            case 't':
              if (strncmp (KR_keyword, "/dev/port", 9) == 0)
                {
{
return dev_storage + 237;

}
                }
              else
                {
{
return	NULL;

}
                }
            case 'o':
              if (strncmp (KR_keyword, "/dev/zero", 9) == 0)
                {
{
return dev_storage + 2643;

}
                }
              else
                {
{
return	NULL;

}
                }
d5507 1
a5507 1
              if (strncmp (KR_keyword, "/dev/sdr9", 9) == 0)
d5510 1
a5510 1
return dev_storage + 673;
d5522 1
a5522 1
              if (strncmp (KR_keyword, "/dev/sdr8", 9) == 0)
d5525 1
a5525 1
return dev_storage + 672;
d5537 1
a5537 1
              if (strncmp (KR_keyword, "/dev/sdr7", 9) == 0)
d5540 1
a5540 1
return dev_storage + 671;
d5552 1
a5552 1
              if (strncmp (KR_keyword, "/dev/sdr6", 9) == 0)
d5555 1
a5555 1
return dev_storage + 670;
d5567 1
a5567 1
              if (strncmp (KR_keyword, "/dev/sdr5", 9) == 0)
d5570 1
a5570 1
return dev_storage + 669;
d5582 1
a5582 1
              if (strncmp (KR_keyword, "/dev/sdr4", 9) == 0)
d5585 1
a5585 1
return dev_storage + 668;
d5597 1
a5597 1
              if (strncmp (KR_keyword, "/dev/sdr3", 9) == 0)
d5600 1
a5600 1
return dev_storage + 667;
d5612 1
a5612 1
              if (strncmp (KR_keyword, "/dev/sdr2", 9) == 0)
d5615 1
a5615 1
return dev_storage + 666;
d5627 1
a5627 1
              if (strncmp (KR_keyword, "/dev/sdr1", 9) == 0)
d5630 1
a5630 1
return dev_storage + 665;
d5647 1
a5647 1
        case 'q':
d5651 1
a5651 1
              if (strncmp (KR_keyword, "/dev/sdq9", 9) == 0)
d5654 1
a5654 1
return dev_storage + 658;
d5666 1
a5666 1
              if (strncmp (KR_keyword, "/dev/sdq8", 9) == 0)
d5669 1
a5669 1
return dev_storage + 657;
d5681 1
a5681 1
              if (strncmp (KR_keyword, "/dev/sdq7", 9) == 0)
d5684 1
a5684 1
return dev_storage + 656;
d5696 1
a5696 1
              if (strncmp (KR_keyword, "/dev/sdq6", 9) == 0)
d5699 1
a5699 1
return dev_storage + 655;
d5711 1
a5711 1
              if (strncmp (KR_keyword, "/dev/sdq5", 9) == 0)
d5714 1
a5714 1
return dev_storage + 654;
d5726 1
a5726 1
              if (strncmp (KR_keyword, "/dev/sdq4", 9) == 0)
d5729 1
a5729 1
return dev_storage + 653;
d5741 1
a5741 1
              if (strncmp (KR_keyword, "/dev/sdq3", 9) == 0)
d5744 1
a5744 1
return dev_storage + 652;
d5756 1
a5756 1
              if (strncmp (KR_keyword, "/dev/sdq2", 9) == 0)
d5759 1
a5759 1
return dev_storage + 651;
d5771 1
a5771 1
              if (strncmp (KR_keyword, "/dev/sdq1", 9) == 0)
d5774 1
a5774 1
return dev_storage + 650;
d5791 1
a5791 1
        case 'p':
a5793 15
            case 'e':
              if (strncmp (KR_keyword, "/dev/pipe", 9) == 0)
                {
{
return dev_storage + 236;

}
                }
              else
                {
{
return	NULL;

}
                }
d5795 1
a5795 1
              if (strncmp (KR_keyword, "/dev/sdp9", 9) == 0)
d5798 1
a5798 1
return dev_storage + 643;
d5810 1
a5810 1
              if (strncmp (KR_keyword, "/dev/sdp8", 9) == 0)
d5813 1
a5813 1
return dev_storage + 642;
d5825 1
a5825 1
              if (strncmp (KR_keyword, "/dev/sdp7", 9) == 0)
d5828 1
a5828 1
return dev_storage + 641;
d5840 1
a5840 1
              if (strncmp (KR_keyword, "/dev/sdp6", 9) == 0)
d5843 1
a5843 1
return dev_storage + 640;
d5855 1
a5855 1
              if (strncmp (KR_keyword, "/dev/sdp5", 9) == 0)
d5858 1
a5858 1
return dev_storage + 639;
d5870 1
a5870 1
              if (strncmp (KR_keyword, "/dev/sdp4", 9) == 0)
d5873 1
a5873 1
return dev_storage + 638;
d5885 1
a5885 1
              if (strncmp (KR_keyword, "/dev/sdp3", 9) == 0)
d5888 1
a5888 1
return dev_storage + 637;
d5900 1
a5900 1
              if (strncmp (KR_keyword, "/dev/sdp2", 9) == 0)
d5903 1
a5903 1
return dev_storage + 636;
d5915 1
a5915 1
              if (strncmp (KR_keyword, "/dev/sdp1", 9) == 0)
d5918 1
a5918 1
return dev_storage + 635;
d5935 1
a5935 1
        case 'o':
d5939 1
a5939 1
              if (strncmp (KR_keyword, "/dev/sdo9", 9) == 0)
d5941 3
d5945 1
a5945 1
return dev_storage + 628;
d5948 3
a5950 3
                }
              else
                {
d5955 11
a5965 4
                }
            case '8':
              if (strncmp (KR_keyword, "/dev/sdo8", 9) == 0)
                {
d5967 1
a5967 1
return dev_storage + 627;
d5970 2
a5971 3
                }
              else
                {
d5977 2
a5978 2
            case '7':
              if (strncmp (KR_keyword, "/dev/sdo7", 9) == 0)
d5980 3
d5984 1
a5984 1
return dev_storage + 626;
d5987 3
a5989 3
                }
              else
                {
d5994 4
a5997 4
                }
            case '6':
              if (strncmp (KR_keyword, "/dev/sdo6", 9) == 0)
                {
d5999 1
a5999 1
return dev_storage + 625;
d6002 3
a6004 3
                }
              else
                {
d6009 2
a6010 4
                }
            case '5':
              if (strncmp (KR_keyword, "/dev/sdo5", 9) == 0)
                {
d6012 1
a6012 1
return dev_storage + 624;
d6016 2
a6017 1
              else
d6019 3
d6023 1
a6023 1
return	NULL;
d6026 3
a6028 4
                }
            case '4':
              if (strncmp (KR_keyword, "/dev/sdo4", 9) == 0)
                {
d6030 1
a6030 1
return dev_storage + 623;
d6033 4
a6036 3
                }
              else
                {
d6038 1
a6038 1
return	NULL;
d6041 3
a6043 4
                }
            case '3':
              if (strncmp (KR_keyword, "/dev/sdo3", 9) == 0)
                {
d6045 1
a6045 1
return dev_storage + 622;
d6048 2
a6049 3
                }
              else
                {
d6055 2
a6056 2
            case '2':
              if (strncmp (KR_keyword, "/dev/sdo2", 9) == 0)
d6058 3
d6062 1
a6062 1
return dev_storage + 621;
d6065 3
a6067 3
                }
              else
                {
d6072 4
a6075 4
                }
            case '1':
              if (strncmp (KR_keyword, "/dev/sdo1", 9) == 0)
                {
d6077 1
a6077 1
return dev_storage + 620;
d6080 3
a6082 3
                }
              else
                {
d6087 2
a6088 2
                }
            default:
d6093 7
a6099 7
            }
        case 'n':
          switch (KR_keyword [8])
            {
            case '9':
              if (strncmp (KR_keyword, "/dev/sdn9", 9) == 0)
                {
d6101 1
a6101 1
return dev_storage + 613;
d6104 3
a6106 3
                }
              else
                {
d6111 4
a6114 4
                }
            case '8':
              if (strncmp (KR_keyword, "/dev/sdn8", 9) == 0)
                {
d6116 1
a6116 1
return dev_storage + 612;
d6119 3
a6121 3
                }
              else
                {
d6126 2
a6127 11
                }
            case '7':
              if (strncmp (KR_keyword, "/dev/sdn7", 9) == 0)
                {
{
return dev_storage + 611;

}
                }
              else
                {
d6133 2
a6134 2
            case '6':
              if (strncmp (KR_keyword, "/dev/sdn6", 9) == 0)
d6136 3
d6140 1
a6140 1
return dev_storage + 610;
d6143 3
a6145 3
                }
              else
                {
d6150 4
a6153 4
                }
            case '5':
              if (strncmp (KR_keyword, "/dev/sdn5", 9) == 0)
                {
d6155 1
a6155 1
return dev_storage + 609;
d6158 3
a6160 3
                }
              else
                {
d6165 2
a6166 11
                }
            case '4':
              if (strncmp (KR_keyword, "/dev/sdn4", 9) == 0)
                {
{
return dev_storage + 608;

}
                }
              else
                {
d6173 1
a6173 1
              if (strncmp (KR_keyword, "/dev/sdn3", 9) == 0)
d6175 2
a6176 56
{
return dev_storage + 607;

}
                }
              else
                {
{
return	NULL;

}
                }
            case '2':
              if (strncmp (KR_keyword, "/dev/sdn2", 9) == 0)
                {
{
return dev_storage + 606;

}
                }
              else
                {
{
return	NULL;

}
                }
            case '1':
              if (strncmp (KR_keyword, "/dev/sdn1", 9) == 0)
                {
{
return dev_storage + 605;

}
                }
              else
                {
{
return	NULL;

}
                }
            default:
{
return	NULL;

}
            }
        case 'm':
          switch (KR_keyword [5])
            {
            case 's':
              switch (KR_keyword [8])
                {
                case '9':
                  if (strncmp (KR_keyword, "/dev/sdm9", 9) == 0)
d6179 1
a6179 1
return dev_storage + 598;
d6190 2
a6191 2
                case '8':
                  if (strncmp (KR_keyword, "/dev/sdm8", 9) == 0)
d6194 1
a6194 1
return dev_storage + 597;
d6205 11
a6215 2
                case '7':
                  if (strncmp (KR_keyword, "/dev/sdm7", 9) == 0)
d6218 1
a6218 1
return dev_storage + 596;
d6229 2
a6230 2
                case '6':
                  if (strncmp (KR_keyword, "/dev/sdm6", 9) == 0)
d6233 1
a6233 1
return dev_storage + 595;
d6244 1
a6244 10
                case '5':
                  if (strncmp (KR_keyword, "/dev/sdm5", 9) == 0)
                    {
{
return dev_storage + 594;

}
                    }
                  else
                    {
d6249 6
a6254 3
                    }
                case '4':
                  if (strncmp (KR_keyword, "/dev/sdm4", 9) == 0)
d6257 1
a6257 1
return dev_storage + 593;
d6268 2
a6269 2
                case '3':
                  if (strncmp (KR_keyword, "/dev/sdm3", 9) == 0)
d6272 1
a6272 1
return dev_storage + 592;
d6283 1
a6283 10
                case '2':
                  if (strncmp (KR_keyword, "/dev/sdm2", 9) == 0)
                    {
{
return dev_storage + 591;

}
                    }
                  else
                    {
d6288 4
a6291 4
                    }
                case '1':
                  if (strncmp (KR_keyword, "/dev/sdm1", 9) == 0)
                    {
d6293 1
a6293 1
return dev_storage + 590;
d6296 3
a6298 3
                    }
                  else
                    {
d6303 2
a6304 2
                    }
                default:
d6309 6
a6314 3
                }
            case 'p':
              if (strncmp (KR_keyword, "/dev/ptmx", 9) == 0)
d6317 1
a6317 1
return dev_storage + 238;
d6328 2
a6329 2
            case 'c':
              switch (KR_keyword [8])
a6330 3
                case '9':
                  if (strncmp (KR_keyword, "/dev/com9", 9) == 0)
                    {
d6332 1
a6332 1
return dev_storage + 10;
d6335 3
a6337 3
                    }
                  else
                    {
d6342 4
a6345 4
                    }
                case '8':
                  if (strncmp (KR_keyword, "/dev/com8", 9) == 0)
                    {
d6347 1
a6347 1
return dev_storage + 9;
d6350 3
a6352 3
                    }
                  else
                    {
d6357 4
a6360 4
                    }
                case '7':
                  if (strncmp (KR_keyword, "/dev/com7", 9) == 0)
                    {
d6362 1
a6362 1
return dev_storage + 8;
d6365 3
a6367 3
                    }
                  else
                    {
d6372 4
a6375 4
                    }
                case '6':
                  if (strncmp (KR_keyword, "/dev/com6", 9) == 0)
                    {
d6377 1
a6377 1
return dev_storage + 7;
d6380 3
a6382 3
                    }
                  else
                    {
d6387 4
a6390 4
                    }
                case '5':
                  if (strncmp (KR_keyword, "/dev/com5", 9) == 0)
                    {
d6392 1
a6392 1
return dev_storage + 6;
d6395 3
a6397 3
                    }
                  else
                    {
d6402 4
a6405 4
                    }
                case '4':
                  if (strncmp (KR_keyword, "/dev/com4", 9) == 0)
                    {
d6407 1
a6407 1
return dev_storage + 5;
d6410 3
a6412 3
                    }
                  else
                    {
d6417 4
a6420 4
                    }
                case '3':
                  if (strncmp (KR_keyword, "/dev/com3", 9) == 0)
                    {
d6422 1
a6422 1
return dev_storage + 4;
d6425 3
a6427 3
                    }
                  else
                    {
d6432 4
a6435 4
                    }
                case '2':
                  if (strncmp (KR_keyword, "/dev/com2", 9) == 0)
                    {
d6437 1
a6437 1
return dev_storage + 3;
d6440 3
a6442 3
                    }
                  else
                    {
d6447 4
a6450 4
                    }
                case '1':
                  if (strncmp (KR_keyword, "/dev/com1", 9) == 0)
                    {
d6452 1
a6452 1
return dev_storage + 2;
d6455 3
a6457 9
                    }
                  else
                    {
{
return	NULL;

}
                    }
                default:
d6469 1
a6469 1
        case 'l':
d6472 2
a6473 2
            case 'l':
              switch (KR_keyword [5])
a6474 3
                case 'n':
                  if (strncmp (KR_keyword, "/dev/null", 9) == 0)
                    {
d6479 3
a6481 3
                    }
                  else
                    {
d6486 4
a6489 4
                    }
                case 'f':
                  if (strncmp (KR_keyword, "/dev/full", 9) == 0)
                    {
d6491 1
a6491 1
return dev_storage + 103;
d6494 3
a6496 9
                    }
                  else
                    {
{
return	NULL;

}
                    }
                default:
d6503 1
a6503 1
              if (strncmp (KR_keyword, "/dev/sdl9", 9) == 0)
d6506 1
a6506 1
return dev_storage + 583;
d6518 1
a6518 1
              if (strncmp (KR_keyword, "/dev/sdl8", 9) == 0)
d6521 1
a6521 1
return dev_storage + 582;
d6533 1
a6533 1
              if (strncmp (KR_keyword, "/dev/sdl7", 9) == 0)
d6536 1
a6536 1
return dev_storage + 581;
d6548 1
a6548 1
              if (strncmp (KR_keyword, "/dev/sdl6", 9) == 0)
d6551 1
a6551 1
return dev_storage + 580;
d6563 1
a6563 1
              if (strncmp (KR_keyword, "/dev/sdl5", 9) == 0)
d6566 1
a6566 1
return dev_storage + 579;
d6578 1
a6578 1
              if (strncmp (KR_keyword, "/dev/sdl4", 9) == 0)
d6581 1
a6581 1
return dev_storage + 578;
d6593 1
a6593 1
              if (strncmp (KR_keyword, "/dev/sdl3", 9) == 0)
d6596 1
a6596 1
return dev_storage + 577;
d6608 1
a6608 1
              if (strncmp (KR_keyword, "/dev/sdl2", 9) == 0)
d6611 1
a6611 1
return dev_storage + 576;
d6623 1
a6623 1
              if (strncmp (KR_keyword, "/dev/sdl1", 9) == 0)
d6626 1
a6626 1
return dev_storage + 575;
d6643 1
a6643 1
        case 'k':
d6647 1
a6647 1
              if (strncmp (KR_keyword, "/dev/sdk9", 9) == 0)
d6650 1
a6650 1
return dev_storage + 568;
d6662 1
a6662 1
              if (strncmp (KR_keyword, "/dev/sdk8", 9) == 0)
d6665 1
a6665 1
return dev_storage + 567;
d6677 1
a6677 1
              if (strncmp (KR_keyword, "/dev/sdk7", 9) == 0)
d6680 1
a6680 1
return dev_storage + 566;
d6692 1
a6692 1
              if (strncmp (KR_keyword, "/dev/sdk6", 9) == 0)
d6695 1
a6695 1
return dev_storage + 565;
d6707 1
a6707 1
              if (strncmp (KR_keyword, "/dev/sdk5", 9) == 0)
d6710 1
a6710 1
return dev_storage + 564;
d6722 1
a6722 1
              if (strncmp (KR_keyword, "/dev/sdk4", 9) == 0)
d6725 1
a6725 1
return dev_storage + 563;
d6737 1
a6737 1
              if (strncmp (KR_keyword, "/dev/sdk3", 9) == 0)
d6740 1
a6740 1
return dev_storage + 562;
d6752 1
a6752 1
              if (strncmp (KR_keyword, "/dev/sdk2", 9) == 0)
d6755 1
a6755 1
return dev_storage + 561;
d6767 1
a6767 1
              if (strncmp (KR_keyword, "/dev/sdk1", 9) == 0)
d6770 1
a6770 1
return dev_storage + 560;
d6787 1
a6787 1
        case 'j':
d6791 1
a6791 1
              if (strncmp (KR_keyword, "/dev/sdj9", 9) == 0)
d6794 1
a6794 1
return dev_storage + 553;
d6806 1
a6806 1
              if (strncmp (KR_keyword, "/dev/sdj8", 9) == 0)
d6809 1
a6809 1
return dev_storage + 552;
d6821 1
a6821 1
              if (strncmp (KR_keyword, "/dev/sdj7", 9) == 0)
d6824 1
a6824 1
return dev_storage + 551;
d6836 1
a6836 1
              if (strncmp (KR_keyword, "/dev/sdj6", 9) == 0)
d6839 1
a6839 1
return dev_storage + 550;
d6851 1
a6851 1
              if (strncmp (KR_keyword, "/dev/sdj5", 9) == 0)
d6854 1
a6854 1
return dev_storage + 549;
d6866 1
a6866 1
              if (strncmp (KR_keyword, "/dev/sdj4", 9) == 0)
d6869 1
a6869 1
return dev_storage + 548;
d6881 1
a6881 1
              if (strncmp (KR_keyword, "/dev/sdj3", 9) == 0)
d6884 1
a6884 1
return dev_storage + 547;
d6896 1
a6896 1
              if (strncmp (KR_keyword, "/dev/sdj2", 9) == 0)
d6899 1
a6899 1
return dev_storage + 546;
d6911 1
a6911 1
              if (strncmp (KR_keyword, "/dev/sdj1", 9) == 0)
d6914 1
a6914 1
return dev_storage + 545;
d6931 1
a6931 1
        case 'i':
d6935 1
a6935 1
              if (strncmp (KR_keyword, "/dev/sdi9", 9) == 0)
d6938 1
a6938 1
return dev_storage + 538;
d6950 1
a6950 1
              if (strncmp (KR_keyword, "/dev/sdi8", 9) == 0)
d6953 1
a6953 1
return dev_storage + 537;
d6965 1
a6965 1
              if (strncmp (KR_keyword, "/dev/sdi7", 9) == 0)
d6968 1
a6968 1
return dev_storage + 536;
d6980 1
a6980 1
              if (strncmp (KR_keyword, "/dev/sdi6", 9) == 0)
d6983 1
a6983 1
return dev_storage + 535;
d6995 1
a6995 1
              if (strncmp (KR_keyword, "/dev/sdi5", 9) == 0)
d6998 1
a6998 1
return dev_storage + 534;
d7010 1
a7010 1
              if (strncmp (KR_keyword, "/dev/sdi4", 9) == 0)
d7013 1
a7013 1
return dev_storage + 533;
d7025 1
a7025 1
              if (strncmp (KR_keyword, "/dev/sdi3", 9) == 0)
d7028 1
a7028 1
return dev_storage + 532;
d7040 1
a7040 1
              if (strncmp (KR_keyword, "/dev/sdi2", 9) == 0)
d7043 1
a7043 1
return dev_storage + 531;
d7055 1
a7055 1
              if (strncmp (KR_keyword, "/dev/sdi1", 9) == 0)
d7058 1
a7058 1
return dev_storage + 530;
d7075 1
a7075 1
        case 'h':
d7079 1
a7079 1
              if (strncmp (KR_keyword, "/dev/sdh9", 9) == 0)
d7082 1
a7082 1
return dev_storage + 523;
d7094 1
a7094 1
              if (strncmp (KR_keyword, "/dev/sdh8", 9) == 0)
d7097 1
a7097 1
return dev_storage + 522;
d7109 1
a7109 1
              if (strncmp (KR_keyword, "/dev/sdh7", 9) == 0)
d7112 1
a7112 1
return dev_storage + 521;
d7124 1
a7124 1
              if (strncmp (KR_keyword, "/dev/sdh6", 9) == 0)
d7127 1
a7127 1
return dev_storage + 520;
d7139 1
a7139 1
              if (strncmp (KR_keyword, "/dev/sdh5", 9) == 0)
d7142 1
a7142 1
return dev_storage + 519;
d7154 1
a7154 1
              if (strncmp (KR_keyword, "/dev/sdh4", 9) == 0)
d7157 1
a7157 1
return dev_storage + 518;
d7169 1
a7169 1
              if (strncmp (KR_keyword, "/dev/sdh3", 9) == 0)
d7172 1
a7172 1
return dev_storage + 517;
d7184 1
a7184 1
              if (strncmp (KR_keyword, "/dev/sdh2", 9) == 0)
d7187 1
a7187 1
return dev_storage + 516;
d7199 1
a7199 1
              if (strncmp (KR_keyword, "/dev/sdh1", 9) == 0)
d7202 1
a7202 1
return dev_storage + 515;
d7219 2
a7220 2
        case 'g':
          switch (KR_keyword [8])
d7222 2
a7223 2
            case '9':
              if (strncmp (KR_keyword, "/dev/sdg9", 9) == 0)
d7225 3
d7229 1
a7229 1
return dev_storage + 508;
d7232 3
a7234 3
                }
              else
                {
d7239 4
a7242 4
                }
            case '8':
              if (strncmp (KR_keyword, "/dev/sdg8", 9) == 0)
                {
d7244 1
a7244 1
return dev_storage + 507;
d7247 3
a7249 3
                }
              else
                {
d7254 4
a7257 4
                }
            case '7':
              if (strncmp (KR_keyword, "/dev/sdg7", 9) == 0)
                {
d7259 1
a7259 1
return dev_storage + 506;
d7262 3
a7264 3
                }
              else
                {
d7269 4
a7272 4
                }
            case '6':
              if (strncmp (KR_keyword, "/dev/sdg6", 9) == 0)
                {
d7274 1
a7274 1
return dev_storage + 505;
d7277 3
a7279 3
                }
              else
                {
d7284 4
a7287 4
                }
            case '5':
              if (strncmp (KR_keyword, "/dev/sdg5", 9) == 0)
                {
d7289 1
a7289 1
return dev_storage + 504;
d7292 3
a7294 3
                }
              else
                {
d7299 4
a7302 4
                }
            case '4':
              if (strncmp (KR_keyword, "/dev/sdg4", 9) == 0)
                {
d7304 1
a7304 1
return dev_storage + 503;
d7307 3
a7309 3
                }
              else
                {
d7314 4
a7317 4
                }
            case '3':
              if (strncmp (KR_keyword, "/dev/sdg3", 9) == 0)
                {
d7319 1
a7319 1
return dev_storage + 502;
d7322 3
a7324 3
                }
              else
                {
d7329 4
a7332 4
                }
            case '2':
              if (strncmp (KR_keyword, "/dev/sdg2", 9) == 0)
                {
d7334 1
a7334 1
return dev_storage + 501;
d7337 3
a7339 3
                }
              else
                {
d7344 4
a7347 4
                }
            case '1':
              if (strncmp (KR_keyword, "/dev/sdg1", 9) == 0)
                {
d7349 1
a7349 1
return dev_storage + 500;
d7352 3
a7354 3
                }
              else
                {
d7359 2
a7360 2
                }
            default:
d7365 3
a7367 6
            }
        case 'f':
          switch (KR_keyword [8])
            {
            case 'o':
              if (strncmp (KR_keyword, "/dev/fifo", 9) == 0)
d7370 1
a7370 1
return dev_storage + 102;
d7381 2
a7382 2
            case '9':
              if (strncmp (KR_keyword, "/dev/sdf9", 9) == 0)
d7384 3
d7388 1
a7388 1
return dev_storage + 493;
d7391 3
a7393 3
                }
              else
                {
d7398 4
a7401 4
                }
            case '8':
              if (strncmp (KR_keyword, "/dev/sdf8", 9) == 0)
                {
d7403 1
a7403 1
return dev_storage + 492;
d7406 3
a7408 3
                }
              else
                {
d7413 4
a7416 4
                }
            case '7':
              if (strncmp (KR_keyword, "/dev/sdf7", 9) == 0)
                {
d7418 1
a7418 1
return dev_storage + 491;
d7421 3
a7423 3
                }
              else
                {
d7428 4
a7431 4
                }
            case '6':
              if (strncmp (KR_keyword, "/dev/sdf6", 9) == 0)
                {
d7433 1
a7433 1
return dev_storage + 490;
d7436 3
a7438 3
                }
              else
                {
d7443 4
a7446 4
                }
            case '5':
              if (strncmp (KR_keyword, "/dev/sdf5", 9) == 0)
                {
d7448 1
a7448 1
return dev_storage + 489;
d7451 3
a7453 3
                }
              else
                {
d7458 4
a7461 4
                }
            case '4':
              if (strncmp (KR_keyword, "/dev/sdf4", 9) == 0)
                {
d7463 1
a7463 1
return dev_storage + 488;
d7466 3
a7468 3
                }
              else
                {
d7473 4
a7476 4
                }
            case '3':
              if (strncmp (KR_keyword, "/dev/sdf3", 9) == 0)
                {
d7478 1
a7478 1
return dev_storage + 487;
d7481 3
a7483 3
                }
              else
                {
d7488 4
a7491 4
                }
            case '2':
              if (strncmp (KR_keyword, "/dev/sdf2", 9) == 0)
                {
d7493 1
a7493 1
return dev_storage + 486;
d7496 3
a7498 3
                }
              else
                {
d7503 11
a7513 4
                }
            case '1':
              if (strncmp (KR_keyword, "/dev/sdf1", 9) == 0)
                {
d7515 1
a7515 1
return dev_storage + 485;
d7518 2
a7519 3
                }
              else
                {
d7531 1
a7531 1
        case 'e':
d7534 2
a7535 2
            case 'm':
              if (strncmp (KR_keyword, "/dev/kmem", 9) == 0)
d7537 25
d7563 1
a7563 1
return dev_storage + 104;
d7566 2
a7567 3
                }
              else
                {
d7574 1
a7574 1
              if (strncmp (KR_keyword, "/dev/sde9", 9) == 0)
d7577 1
a7577 1
return dev_storage + 478;
d7589 1
a7589 1
              if (strncmp (KR_keyword, "/dev/sde8", 9) == 0)
d7592 1
a7592 1
return dev_storage + 477;
d7604 1
a7604 1
              if (strncmp (KR_keyword, "/dev/sde7", 9) == 0)
d7607 1
a7607 1
return dev_storage + 476;
d7619 1
a7619 1
              if (strncmp (KR_keyword, "/dev/sde6", 9) == 0)
d7622 1
a7622 1
return dev_storage + 475;
d7634 1
a7634 1
              if (strncmp (KR_keyword, "/dev/sde5", 9) == 0)
d7637 1
a7637 1
return dev_storage + 474;
d7649 1
a7649 1
              if (strncmp (KR_keyword, "/dev/sde4", 9) == 0)
d7652 1
a7652 1
return dev_storage + 473;
d7664 1
a7664 1
              if (strncmp (KR_keyword, "/dev/sde3", 9) == 0)
d7667 1
a7667 1
return dev_storage + 472;
d7679 1
a7679 1
              if (strncmp (KR_keyword, "/dev/sde2", 9) == 0)
d7682 1
a7682 1
return dev_storage + 471;
d7694 1
a7694 1
              if (strncmp (KR_keyword, "/dev/sde1", 9) == 0)
d7697 1
a7697 1
return dev_storage + 470;
d7714 1
a7714 1
        case 'd':
d7717 2
a7718 2
            case 'x':
              if (strncmp (KR_keyword, "/dev/sddx", 9) == 0)
d7721 1
a7721 1
return dev_storage + 2071;
d7732 2
a7733 2
            case 'w':
              if (strncmp (KR_keyword, "/dev/sddw", 9) == 0)
d7736 1
a7736 1
return dev_storage + 2070;
d7747 2
a7748 2
            case 'v':
              if (strncmp (KR_keyword, "/dev/sddv", 9) == 0)
d7751 1
a7751 1
return dev_storage + 2069;
d7762 2
a7763 2
            case 'u':
              if (strncmp (KR_keyword, "/dev/sddu", 9) == 0)
d7766 1
a7766 1
return dev_storage + 2068;
d7777 2
a7778 2
            case 't':
              if (strncmp (KR_keyword, "/dev/sddt", 9) == 0)
d7781 1
a7781 1
return dev_storage + 2067;
d7792 2
a7793 2
            case 's':
              if (strncmp (KR_keyword, "/dev/sdds", 9) == 0)
d7796 1
a7796 1
return dev_storage + 2066;
d7807 2
a7808 2
            case 'r':
              if (strncmp (KR_keyword, "/dev/sddr", 9) == 0)
d7811 1
a7811 1
return dev_storage + 2065;
d7822 2
a7823 2
            case 'q':
              if (strncmp (KR_keyword, "/dev/sddq", 9) == 0)
d7826 1
a7826 1
return dev_storage + 2064;
d7837 2
a7838 2
            case 'p':
              if (strncmp (KR_keyword, "/dev/sddp", 9) == 0)
d7841 1
a7841 1
return dev_storage + 2063;
d7852 11
a7862 2
            case 'o':
              if (strncmp (KR_keyword, "/dev/sddo", 9) == 0)
d7865 1
a7865 1
return dev_storage + 2062;
d7876 2
a7877 2
            case 'n':
              if (strncmp (KR_keyword, "/dev/sddn", 9) == 0)
d7880 1
a7880 1
return dev_storage + 2061;
d7891 2
a7892 2
            case 'm':
              if (strncmp (KR_keyword, "/dev/sddm", 9) == 0)
d7895 1
a7895 1
return dev_storage + 2060;
d7906 2
a7907 2
            case 'l':
              if (strncmp (KR_keyword, "/dev/sddl", 9) == 0)
d7910 1
a7910 1
return dev_storage + 2059;
d7921 2
a7922 2
            case 'k':
              if (strncmp (KR_keyword, "/dev/sddk", 9) == 0)
d7925 1
a7925 1
return dev_storage + 2058;
d7936 2
a7937 2
            case 'j':
              if (strncmp (KR_keyword, "/dev/sddj", 9) == 0)
d7940 1
a7940 1
return dev_storage + 2057;
d7951 2
a7952 2
            case 'i':
              if (strncmp (KR_keyword, "/dev/sddi", 9) == 0)
d7955 1
a7955 1
return dev_storage + 2056;
d7966 2
a7967 2
            case 'h':
              if (strncmp (KR_keyword, "/dev/sddh", 9) == 0)
d7970 1
a7970 1
return dev_storage + 2055;
d7981 2
a7982 2
            case 'g':
              if (strncmp (KR_keyword, "/dev/sddg", 9) == 0)
d7985 1
a7985 1
return dev_storage + 2054;
d7996 11
a8006 2
            case 'f':
              if (strncmp (KR_keyword, "/dev/sddf", 9) == 0)
d8009 1
a8009 1
return dev_storage + 2053;
d8020 2
a8021 2
            case 'e':
              if (strncmp (KR_keyword, "/dev/sdde", 9) == 0)
d8024 1
a8024 1
return dev_storage + 2052;
d8035 2
a8036 2
            case 'd':
              if (strncmp (KR_keyword, "/dev/sddd", 9) == 0)
d8039 1
a8039 1
return dev_storage + 2051;
d8050 2
a8051 2
            case 'c':
              if (strncmp (KR_keyword, "/dev/sddc", 9) == 0)
d8054 1
a8054 1
return dev_storage + 2050;
d8065 2
a8066 2
            case 'b':
              if (strncmp (KR_keyword, "/dev/sddb", 9) == 0)
d8069 1
a8069 1
return dev_storage + 2049;
d8080 2
a8081 2
            case 'a':
              if (strncmp (KR_keyword, "/dev/sdda", 9) == 0)
d8084 1
a8084 1
return dev_storage + 2048;
d8095 2
a8096 2
            case '9':
              switch (KR_keyword [6])
a8097 3
                case 'd':
                  if (strncmp (KR_keyword, "/dev/sdd9", 9) == 0)
                    {
d8099 1
a8099 1
return dev_storage + 463;
d8102 3
a8104 3
                    }
                  else
                    {
d8109 4
a8112 4
                    }
                case 'c':
                  if (strncmp (KR_keyword, "/dev/scd9", 9) == 0)
                    {
d8114 1
a8114 1
return dev_storage + 377;
d8117 3
a8119 3
                    }
                  else
                    {
d8124 4
a8127 2
                    }
                default:
d8129 1
a8129 1
return	NULL;
d8133 1
a8133 2
            case '8':
              switch (KR_keyword [6])
a8134 3
                case 'd':
                  if (strncmp (KR_keyword, "/dev/sdd8", 9) == 0)
                    {
d8136 1
a8136 1
return dev_storage + 462;
d8139 2
a8140 3
                    }
                  else
                    {
d8145 7
a8151 4
                    }
                case 'c':
                  if (strncmp (KR_keyword, "/dev/scd8", 9) == 0)
                    {
d8153 1
a8153 1
return dev_storage + 376;
d8156 3
a8158 3
                    }
                  else
                    {
d8163 4
a8166 2
                    }
                default:
d8168 1
a8168 1
return	NULL;
d8172 1
a8172 2
            case '7':
              switch (KR_keyword [6])
a8173 10
                case 'd':
                  if (strncmp (KR_keyword, "/dev/sdd7", 9) == 0)
                    {
{
return dev_storage + 461;

}
                    }
                  else
                    {
d8178 4
a8181 4
                    }
                case 'c':
                  if (strncmp (KR_keyword, "/dev/scd7", 9) == 0)
                    {
d8183 1
a8183 1
return dev_storage + 375;
d8186 3
a8188 9
                    }
                  else
                    {
{
return	NULL;

}
                    }
                default:
d8195 1
a8195 1
              switch (KR_keyword [6])
a8196 3
                case 'd':
                  if (strncmp (KR_keyword, "/dev/sdd6", 9) == 0)
                    {
d8198 1
a8198 1
return dev_storage + 460;
d8201 3
a8203 24
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'c':
                  if (strncmp (KR_keyword, "/dev/scd6", 9) == 0)
                    {
{
return dev_storage + 374;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                default:
d8210 1
a8210 1
              switch (KR_keyword [6])
a8211 3
                case 'd':
                  if (strncmp (KR_keyword, "/dev/sdd5", 9) == 0)
                    {
d8213 1
a8213 1
return dev_storage + 459;
d8216 3
a8218 24
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'c':
                  if (strncmp (KR_keyword, "/dev/scd5", 9) == 0)
                    {
{
return dev_storage + 373;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                default:
d8225 1
a8225 1
              switch (KR_keyword [6])
a8226 3
                case 'd':
                  if (strncmp (KR_keyword, "/dev/sdd4", 9) == 0)
                    {
d8228 1
a8228 1
return dev_storage + 458;
d8231 3
a8233 24
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'c':
                  if (strncmp (KR_keyword, "/dev/scd4", 9) == 0)
                    {
{
return dev_storage + 372;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                default:
d8240 1
a8240 1
              switch (KR_keyword [6])
a8241 3
                case 'd':
                  if (strncmp (KR_keyword, "/dev/sdd3", 9) == 0)
                    {
d8243 1
a8243 1
return dev_storage + 457;
d8246 3
a8248 24
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'c':
                  if (strncmp (KR_keyword, "/dev/scd3", 9) == 0)
                    {
{
return dev_storage + 371;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                default:
d8255 1
a8255 1
              switch (KR_keyword [6])
a8256 3
                case 'd':
                  if (strncmp (KR_keyword, "/dev/sdd2", 9) == 0)
                    {
d8258 1
a8258 29
return dev_storage + 456;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'c':
                  if (strncmp (KR_keyword, "/dev/scd2", 9) == 0)
                    {
{
return dev_storage + 370;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                default:
{
return	NULL;
d8262 1
a8262 2
            case '1':
              switch (KR_keyword [6])
a8263 31
                case 'd':
                  if (strncmp (KR_keyword, "/dev/sdd1", 9) == 0)
                    {
{
return dev_storage + 455;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'c':
                  if (strncmp (KR_keyword, "/dev/scd1", 9) == 0)
                    {
{
return dev_storage + 369;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                default:
d8269 2
a8270 2
            case '0':
              if (strncmp (KR_keyword, "/dev/scd0", 9) == 0)
d8273 1
a8273 1
return dev_storage + 368;
d8290 1
a8290 1
        case 'c':
d8293 2
a8294 2
            case 'z':
              if (strncmp (KR_keyword, "/dev/sdcz", 9) == 0)
d8297 1
a8297 1
return dev_storage + 1657;
d8308 2
a8309 2
            case 'y':
              if (strncmp (KR_keyword, "/dev/sdcy", 9) == 0)
d8312 1
a8312 1
return dev_storage + 1656;
d8323 2
a8324 2
            case 'x':
              if (strncmp (KR_keyword, "/dev/sdcx", 9) == 0)
d8327 1
a8327 1
return dev_storage + 1655;
d8338 2
a8339 2
            case 'w':
              if (strncmp (KR_keyword, "/dev/sdcw", 9) == 0)
d8342 1
a8342 1
return dev_storage + 1654;
d8353 2
a8354 2
            case 'v':
              if (strncmp (KR_keyword, "/dev/sdcv", 9) == 0)
d8357 1
a8357 1
return dev_storage + 1653;
d8368 2
a8369 2
            case 'u':
              if (strncmp (KR_keyword, "/dev/sdcu", 9) == 0)
d8372 1
a8372 1
return dev_storage + 1652;
d8383 2
a8384 2
            case 't':
              if (strncmp (KR_keyword, "/dev/sdct", 9) == 0)
d8387 1
a8387 1
return dev_storage + 1651;
d8398 2
a8399 2
            case 's':
              if (strncmp (KR_keyword, "/dev/sdcs", 9) == 0)
d8402 1
a8402 1
return dev_storage + 1650;
d8413 2
a8414 2
            case 'r':
              if (strncmp (KR_keyword, "/dev/sdcr", 9) == 0)
d8417 1
a8417 1
return dev_storage + 1649;
d8428 1
a8428 10
            case 'q':
              if (strncmp (KR_keyword, "/dev/sdcq", 9) == 0)
                {
{
return dev_storage + 1648;

}
                }
              else
                {
d8433 6
a8438 3
                }
            case 'p':
              if (strncmp (KR_keyword, "/dev/sdcp", 9) == 0)
d8441 1
a8441 1
return dev_storage + 1647;
d8452 2
a8453 2
            case 'o':
              if (strncmp (KR_keyword, "/dev/sdco", 9) == 0)
d8456 1
a8456 1
return dev_storage + 1646;
d8467 2
a8468 2
            case 'n':
              if (strncmp (KR_keyword, "/dev/sdcn", 9) == 0)
d8471 1
a8471 1
return dev_storage + 1645;
d8482 2
a8483 2
            case 'm':
              if (strncmp (KR_keyword, "/dev/sdcm", 9) == 0)
d8486 1
a8486 1
return dev_storage + 1644;
d8497 2
a8498 2
            case 'l':
              if (strncmp (KR_keyword, "/dev/sdcl", 9) == 0)
d8501 1
a8501 1
return dev_storage + 1643;
d8512 2
a8513 2
            case 'k':
              if (strncmp (KR_keyword, "/dev/sdck", 9) == 0)
d8516 1
a8516 1
return dev_storage + 1642;
d8527 2
a8528 2
            case 'j':
              if (strncmp (KR_keyword, "/dev/sdcj", 9) == 0)
d8531 1
a8531 1
return dev_storage + 1641;
d8542 2
a8543 2
            case 'i':
              if (strncmp (KR_keyword, "/dev/sdci", 9) == 0)
d8546 1
a8546 1
return dev_storage + 1640;
d8557 2
a8558 2
            case 'h':
              if (strncmp (KR_keyword, "/dev/sdch", 9) == 0)
d8561 1
a8561 1
return dev_storage + 1639;
d8572 1
a8572 10
            case 'g':
              if (strncmp (KR_keyword, "/dev/sdcg", 9) == 0)
                {
{
return dev_storage + 1638;

}
                }
              else
                {
d8577 6
a8582 3
                }
            case 'f':
              if (strncmp (KR_keyword, "/dev/sdcf", 9) == 0)
d8585 1
a8585 76
return dev_storage + 1637;

}
                }
              else
                {
{
return	NULL;

}
                }
            case 'e':
              if (strncmp (KR_keyword, "/dev/sdce", 9) == 0)
                {
{
return dev_storage + 1636;

}
                }
              else
                {
{
return	NULL;

}
                }
            case 'd':
              if (strncmp (KR_keyword, "/dev/sdcd", 9) == 0)
                {
{
return dev_storage + 1635;

}
                }
              else
                {
{
return	NULL;

}
                }
            case 'c':
              if (strncmp (KR_keyword, "/dev/sdcc", 9) == 0)
                {
{
return dev_storage + 1634;

}
                }
              else
                {
{
return	NULL;

}
                }
            case 'b':
              if (strncmp (KR_keyword, "/dev/sdcb", 9) == 0)
                {
{
return dev_storage + 1633;

}
                }
              else
                {
{
return	NULL;

}
                }
            case 'a':
              if (strncmp (KR_keyword, "/dev/sdca", 9) == 0)
                {
{
return dev_storage + 1632;
d8597 1
a8597 1
              if (strncmp (KR_keyword, "/dev/sdc9", 9) == 0)
d8600 1
a8600 1
return dev_storage + 448;
d8612 1
a8612 1
              if (strncmp (KR_keyword, "/dev/sdc8", 9) == 0)
d8615 1
a8615 1
return dev_storage + 447;
d8627 1
a8627 1
              if (strncmp (KR_keyword, "/dev/sdc7", 9) == 0)
d8630 1
a8630 1
return dev_storage + 446;
d8642 1
a8642 1
              if (strncmp (KR_keyword, "/dev/sdc6", 9) == 0)
d8645 1
a8645 1
return dev_storage + 445;
d8657 1
a8657 1
              if (strncmp (KR_keyword, "/dev/sdc5", 9) == 0)
d8660 1
a8660 1
return dev_storage + 444;
d8672 1
a8672 1
              if (strncmp (KR_keyword, "/dev/sdc4", 9) == 0)
d8675 1
a8675 1
return dev_storage + 443;
d8687 1
a8687 1
              if (strncmp (KR_keyword, "/dev/sdc3", 9) == 0)
d8690 1
a8690 1
return dev_storage + 442;
d8702 1
a8702 1
              if (strncmp (KR_keyword, "/dev/sdc2", 9) == 0)
d8705 1
a8705 1
return dev_storage + 441;
d8717 1
a8717 1
              if (strncmp (KR_keyword, "/dev/sdc1", 9) == 0)
d8720 1
a8720 1
return dev_storage + 440;
d8737 1
a8737 1
        case 'b':
a8739 30
            case 'z':
              if (strncmp (KR_keyword, "/dev/sdbz", 9) == 0)
                {
{
return dev_storage + 1241;

}
                }
              else
                {
{
return	NULL;

}
                }
            case 'y':
              if (strncmp (KR_keyword, "/dev/sdby", 9) == 0)
                {
{
return dev_storage + 1240;

}
                }
              else
                {
{
return	NULL;

}
                }
d8741 1
a8741 1
              if (strncmp (KR_keyword, "/dev/sdbx", 9) == 0)
d8744 1
a8744 1
return dev_storage + 1239;
d8756 1
a8756 1
              if (strncmp (KR_keyword, "/dev/sdbw", 9) == 0)
d8759 1
a8759 1
return dev_storage + 1238;
d8771 1
a8771 1
              if (strncmp (KR_keyword, "/dev/sdbv", 9) == 0)
d8774 1
a8774 1
return dev_storage + 1237;
d8786 1
a8786 1
              if (strncmp (KR_keyword, "/dev/sdbu", 9) == 0)
d8789 1
a8789 1
return dev_storage + 1236;
d8801 1
a8801 1
              if (strncmp (KR_keyword, "/dev/sdbt", 9) == 0)
d8804 1
a8804 1
return dev_storage + 1235;
d8816 1
a8816 1
              if (strncmp (KR_keyword, "/dev/sdbs", 9) == 0)
d8819 1
a8819 1
return dev_storage + 1234;
d8831 1
a8831 1
              if (strncmp (KR_keyword, "/dev/sdbr", 9) == 0)
d8834 1
a8834 1
return dev_storage + 1233;
d8846 1
a8846 1
              if (strncmp (KR_keyword, "/dev/sdbq", 9) == 0)
d8849 1
a8849 1
return dev_storage + 1232;
d8861 1
a8861 1
              if (strncmp (KR_keyword, "/dev/sdbp", 9) == 0)
d8864 1
a8864 1
return dev_storage + 1231;
d8876 1
a8876 1
              if (strncmp (KR_keyword, "/dev/sdbo", 9) == 0)
d8879 1
a8879 1
return dev_storage + 1230;
d8891 1
a8891 1
              if (strncmp (KR_keyword, "/dev/sdbn", 9) == 0)
d8894 1
a8894 1
return dev_storage + 1229;
d8906 1
a8906 1
              if (strncmp (KR_keyword, "/dev/sdbm", 9) == 0)
d8909 1
a8909 1
return dev_storage + 1228;
d8921 1
a8921 1
              if (strncmp (KR_keyword, "/dev/sdbl", 9) == 0)
d8924 1
a8924 1
return dev_storage + 1227;
d8936 1
a8936 1
              if (strncmp (KR_keyword, "/dev/sdbk", 9) == 0)
d8939 1
a8939 1
return dev_storage + 1226;
d8951 1
a8951 1
              if (strncmp (KR_keyword, "/dev/sdbj", 9) == 0)
d8954 1
a8954 1
return dev_storage + 1225;
d8966 1
a8966 1
              if (strncmp (KR_keyword, "/dev/sdbi", 9) == 0)
d8969 1
a8969 1
return dev_storage + 1224;
d8981 1
a8981 1
              if (strncmp (KR_keyword, "/dev/sdbh", 9) == 0)
d8984 1
a8984 1
return dev_storage + 1223;
d8996 1
a8996 1
              if (strncmp (KR_keyword, "/dev/sdbg", 9) == 0)
d8999 1
a8999 1
return dev_storage + 1222;
d9011 1
a9011 1
              if (strncmp (KR_keyword, "/dev/sdbf", 9) == 0)
d9014 1
a9014 1
return dev_storage + 1221;
d9026 1
a9026 1
              if (strncmp (KR_keyword, "/dev/sdbe", 9) == 0)
d9029 1
a9029 1
return dev_storage + 1220;
d9041 1
a9041 1
              if (strncmp (KR_keyword, "/dev/sdbd", 9) == 0)
d9044 1
a9044 1
return dev_storage + 1219;
d9056 1
a9056 1
              if (strncmp (KR_keyword, "/dev/sdbc", 9) == 0)
d9059 1
a9059 1
return dev_storage + 1218;
d9071 1
a9071 1
              if (strncmp (KR_keyword, "/dev/sdbb", 9) == 0)
d9074 1
a9074 1
return dev_storage + 1217;
d9086 1
a9086 1
              if (strncmp (KR_keyword, "/dev/sdba", 9) == 0)
d9089 1
a9089 1
return dev_storage + 1216;
d9101 1
a9101 1
              if (strncmp (KR_keyword, "/dev/sdb9", 9) == 0)
d9103 3
d9107 1
a9107 1
return dev_storage + 433;
d9110 3
a9112 3
                }
              else
                {
d9117 11
a9127 4
                }
            case '8':
              if (strncmp (KR_keyword, "/dev/sdb8", 9) == 0)
                {
d9129 1
a9129 1
return dev_storage + 432;
d9132 2
a9133 3
                }
              else
                {
d9139 2
a9140 2
            case '7':
              if (strncmp (KR_keyword, "/dev/sdb7", 9) == 0)
d9142 3
d9146 1
a9146 1
return dev_storage + 431;
d9149 3
a9151 3
                }
              else
                {
d9156 4
a9159 4
                }
            case '6':
              if (strncmp (KR_keyword, "/dev/sdb6", 9) == 0)
                {
d9161 1
a9161 1
return dev_storage + 430;
d9164 3
a9166 3
                }
              else
                {
d9171 2
a9172 4
                }
            case '5':
              if (strncmp (KR_keyword, "/dev/sdb5", 9) == 0)
                {
d9174 1
a9174 1
return dev_storage + 429;
d9178 2
a9179 1
              else
d9181 3
d9185 1
a9185 1
return	NULL;
d9188 3
a9190 4
                }
            case '4':
              if (strncmp (KR_keyword, "/dev/sdb4", 9) == 0)
                {
d9192 1
a9192 1
return dev_storage + 428;
d9195 4
a9198 3
                }
              else
                {
d9200 1
a9200 1
return	NULL;
d9203 3
a9205 4
                }
            case '3':
              if (strncmp (KR_keyword, "/dev/sdb3", 9) == 0)
                {
d9207 1
a9207 1
return dev_storage + 427;
d9210 2
a9211 3
                }
              else
                {
d9217 2
a9218 2
            case '2':
              if (strncmp (KR_keyword, "/dev/sdb2", 9) == 0)
d9220 3
d9224 1
a9224 1
return dev_storage + 426;
d9227 3
a9229 3
                }
              else
                {
d9234 4
a9237 4
                }
            case '1':
              if (strncmp (KR_keyword, "/dev/sdb1", 9) == 0)
                {
d9239 1
a9239 1
return dev_storage + 425;
d9242 3
a9244 3
                }
              else
                {
d9249 2
a9250 2
                }
            default:
d9255 3
a9257 6
            }
        case 'a':
          switch (KR_keyword [8])
            {
            case 'z':
              if (strncmp (KR_keyword, "/dev/sdaz", 9) == 0)
d9259 3
d9263 217
a9479 1
return dev_storage + 825;
d9491 1
a9491 1
              if (strncmp (KR_keyword, "/dev/sday", 9) == 0)
d9494 1
a9494 1
return dev_storage + 824;
d9506 1
a9506 1
              if (strncmp (KR_keyword, "/dev/sdax", 9) == 0)
d9509 1
a9509 1
return dev_storage + 823;
d9521 1
a9521 1
              if (strncmp (KR_keyword, "/dev/sdaw", 9) == 0)
d9524 1
a9524 1
return dev_storage + 822;
d9536 1
a9536 1
              if (strncmp (KR_keyword, "/dev/sdav", 9) == 0)
d9539 1
a9539 1
return dev_storage + 821;
d9551 1
a9551 1
              if (strncmp (KR_keyword, "/dev/sdau", 9) == 0)
d9554 1
a9554 1
return dev_storage + 820;
d9566 1
a9566 1
              if (strncmp (KR_keyword, "/dev/sdat", 9) == 0)
d9569 1
a9569 1
return dev_storage + 819;
d9581 1
a9581 1
              if (strncmp (KR_keyword, "/dev/sdas", 9) == 0)
d9584 1
a9584 1
return dev_storage + 818;
d9596 1
a9596 1
              if (strncmp (KR_keyword, "/dev/sdar", 9) == 0)
d9599 1
a9599 1
return dev_storage + 817;
d9611 1
a9611 1
              if (strncmp (KR_keyword, "/dev/sdaq", 9) == 0)
d9614 1
a9614 1
return dev_storage + 816;
d9626 1
a9626 1
              if (strncmp (KR_keyword, "/dev/sdap", 9) == 0)
d9629 1
a9629 1
return dev_storage + 815;
d9641 1
a9641 1
              if (strncmp (KR_keyword, "/dev/sdao", 9) == 0)
d9644 1
a9644 1
return dev_storage + 814;
d9656 1
a9656 1
              if (strncmp (KR_keyword, "/dev/sdan", 9) == 0)
d9659 1
a9659 1
return dev_storage + 813;
d9671 1
a9671 1
              if (strncmp (KR_keyword, "/dev/sdam", 9) == 0)
d9674 1
a9674 1
return dev_storage + 812;
d9686 1
a9686 1
              if (strncmp (KR_keyword, "/dev/sdal", 9) == 0)
d9689 1
a9689 1
return dev_storage + 811;
d9701 1
a9701 1
              if (strncmp (KR_keyword, "/dev/sdak", 9) == 0)
d9704 1
a9704 1
return dev_storage + 810;
d9716 1
a9716 1
              if (strncmp (KR_keyword, "/dev/sdaj", 9) == 0)
d9719 1
a9719 1
return dev_storage + 809;
d9731 1
a9731 1
              if (strncmp (KR_keyword, "/dev/sdai", 9) == 0)
d9734 1
a9734 1
return dev_storage + 808;
d9746 1
a9746 1
              if (strncmp (KR_keyword, "/dev/sdah", 9) == 0)
d9749 1
a9749 1
return dev_storage + 807;
d9761 1
a9761 1
              if (strncmp (KR_keyword, "/dev/sdag", 9) == 0)
d9764 1
a9764 1
return dev_storage + 806;
d9776 1
a9776 1
              if (strncmp (KR_keyword, "/dev/sdaf", 9) == 0)
d9779 1
a9779 1
return dev_storage + 805;
d9791 1
a9791 1
              if (strncmp (KR_keyword, "/dev/sdae", 9) == 0)
d9794 1
a9794 1
return dev_storage + 804;
d9806 1
a9806 1
              if (strncmp (KR_keyword, "/dev/sdad", 9) == 0)
d9809 1
a9809 1
return dev_storage + 803;
d9821 1
a9821 1
              if (strncmp (KR_keyword, "/dev/sdac", 9) == 0)
d9824 1
a9824 1
return dev_storage + 802;
d9836 1
a9836 1
              if (strncmp (KR_keyword, "/dev/sdab", 9) == 0)
d9839 1
a9839 1
return dev_storage + 801;
d9851 1
a9851 1
              if (strncmp (KR_keyword, "/dev/sdaa", 9) == 0)
d9854 1
a9854 1
return dev_storage + 800;
d9866 1
a9866 1
              if (strncmp (KR_keyword, "/dev/sda9", 9) == 0)
d9869 1
a9869 1
return dev_storage + 418;
d9881 1
a9881 1
              if (strncmp (KR_keyword, "/dev/sda8", 9) == 0)
d9884 1
a9884 1
return dev_storage + 417;
d9896 1
a9896 1
              if (strncmp (KR_keyword, "/dev/sda7", 9) == 0)
d9899 1
a9899 1
return dev_storage + 416;
d9911 1
a9911 1
              if (strncmp (KR_keyword, "/dev/sda6", 9) == 0)
d9914 1
a9914 1
return dev_storage + 415;
d9926 1
a9926 1
              if (strncmp (KR_keyword, "/dev/sda5", 9) == 0)
d9929 1
a9929 1
return dev_storage + 414;
d9941 1
a9941 1
              if (strncmp (KR_keyword, "/dev/sda4", 9) == 0)
d9944 1
a9944 1
return dev_storage + 413;
d9956 1
a9956 1
              if (strncmp (KR_keyword, "/dev/sda3", 9) == 0)
d9959 1
a9959 1
return dev_storage + 412;
d9971 1
a9971 1
              if (strncmp (KR_keyword, "/dev/sda2", 9) == 0)
d9974 1
a9974 1
return dev_storage + 411;
d9986 1
a9986 1
              if (strncmp (KR_keyword, "/dev/sda1", 9) == 0)
d9989 1
a9989 1
return dev_storage + 410;
d10006 1
a10006 1
        case '9':
d10009 2
a10010 2
            case '9':
              if (strncmp (KR_keyword, "/dev/st99", 9) == 0)
d10013 1
a10013 1
return dev_storage + 2547;
d10024 2
a10025 2
            case '8':
              if (strncmp (KR_keyword, "/dev/st98", 9) == 0)
d10028 1
a10028 1
return dev_storage + 2546;
d10039 2
a10040 2
            case '7':
              if (strncmp (KR_keyword, "/dev/st97", 9) == 0)
d10043 1
a10043 1
return dev_storage + 2545;
d10054 2
a10055 2
            case '6':
              if (strncmp (KR_keyword, "/dev/st96", 9) == 0)
d10058 1
a10058 1
return dev_storage + 2544;
d10069 2
a10070 2
            case '5':
              if (strncmp (KR_keyword, "/dev/st95", 9) == 0)
d10073 1
a10073 1
return dev_storage + 2543;
d10084 2
a10085 2
            case '4':
              if (strncmp (KR_keyword, "/dev/st94", 9) == 0)
d10088 1
a10088 1
return dev_storage + 2542;
d10099 2
a10100 2
            case '3':
              if (strncmp (KR_keyword, "/dev/st93", 9) == 0)
d10103 1
a10103 1
return dev_storage + 2541;
d10114 2
a10115 2
            case '2':
              if (strncmp (KR_keyword, "/dev/st92", 9) == 0)
d10118 1
a10118 1
return dev_storage + 2540;
d10129 2
a10130 2
            case '1':
              if (strncmp (KR_keyword, "/dev/st91", 9) == 0)
d10133 1
a10133 1
return dev_storage + 2539;
d10144 2
a10145 2
            case '0':
              if (strncmp (KR_keyword, "/dev/st90", 9) == 0)
d10148 1
a10148 1
return dev_storage + 2538;
d10159 2
a10160 11
            default:
{
return	NULL;

}
            }
        case '8':
          switch (KR_keyword [8])
            {
            case '9':
              if (strncmp (KR_keyword, "/dev/st89", 9) == 0)
d10163 1
a10163 1
return dev_storage + 2537;
d10174 2
a10175 2
            case '8':
              if (strncmp (KR_keyword, "/dev/st88", 9) == 0)
d10178 1
a10178 1
return dev_storage + 2536;
d10189 2
a10190 2
            case '7':
              if (strncmp (KR_keyword, "/dev/st87", 9) == 0)
d10193 1
a10193 1
return dev_storage + 2535;
d10204 2
a10205 2
            case '6':
              if (strncmp (KR_keyword, "/dev/st86", 9) == 0)
d10208 1
a10208 1
return dev_storage + 2534;
d10219 2
a10220 2
            case '5':
              if (strncmp (KR_keyword, "/dev/st85", 9) == 0)
d10223 1
a10223 1
return dev_storage + 2533;
d10234 2
a10235 2
            case '4':
              if (strncmp (KR_keyword, "/dev/st84", 9) == 0)
d10238 1
a10238 1
return dev_storage + 2532;
d10249 2
a10250 2
            case '3':
              if (strncmp (KR_keyword, "/dev/st83", 9) == 0)
d10253 1
a10253 1
return dev_storage + 2531;
d10264 2
a10265 2
            case '2':
              if (strncmp (KR_keyword, "/dev/st82", 9) == 0)
d10268 1
a10268 1
return dev_storage + 2530;
d10279 2
a10280 2
            case '1':
              if (strncmp (KR_keyword, "/dev/st81", 9) == 0)
d10283 1
a10283 1
return dev_storage + 2529;
d10294 2
a10295 2
            case '0':
              if (strncmp (KR_keyword, "/dev/st80", 9) == 0)
d10298 1
a10298 1
return dev_storage + 2528;
d10309 2
a10310 11
            default:
{
return	NULL;

}
            }
        case '7':
          switch (KR_keyword [8])
            {
            case '9':
              if (strncmp (KR_keyword, "/dev/st79", 9) == 0)
d10313 1
a10313 1
return dev_storage + 2527;
d10324 2
a10325 2
            case '8':
              if (strncmp (KR_keyword, "/dev/st78", 9) == 0)
d10328 1
a10328 1
return dev_storage + 2526;
d10339 2
a10340 2
            case '7':
              if (strncmp (KR_keyword, "/dev/st77", 9) == 0)
d10343 1
a10343 1
return dev_storage + 2525;
d10354 3
a10356 3
            case '6':
              if (strncmp (KR_keyword, "/dev/st76", 9) == 0)
                {
d10358 1
a10358 1
return dev_storage + 2524;
d10369 2
a10370 2
            case '5':
              if (strncmp (KR_keyword, "/dev/st75", 9) == 0)
d10373 1
a10373 1
return dev_storage + 2523;
d10384 2
a10385 2
            case '4':
              if (strncmp (KR_keyword, "/dev/st74", 9) == 0)
d10388 1
a10388 1
return dev_storage + 2522;
d10399 2
a10400 2
            case '3':
              if (strncmp (KR_keyword, "/dev/st73", 9) == 0)
d10403 1
a10403 1
return dev_storage + 2521;
d10414 2
a10415 2
            case '2':
              if (strncmp (KR_keyword, "/dev/st72", 9) == 0)
d10418 1
a10418 1
return dev_storage + 2520;
d10429 2
a10430 2
            case '1':
              if (strncmp (KR_keyword, "/dev/st71", 9) == 0)
d10433 1
a10433 1
return dev_storage + 2519;
d10444 2
a10445 2
            case '0':
              if (strncmp (KR_keyword, "/dev/st70", 9) == 0)
d10448 1
a10448 1
return dev_storage + 2518;
d10459 10
a10468 1
            default:
d10473 3
a10475 6
            }
        case '6':
          switch (KR_keyword [8])
            {
            case '9':
              if (strncmp (KR_keyword, "/dev/st69", 9) == 0)
d10478 1
a10478 1
return dev_storage + 2517;
d10489 2
a10490 2
            case '8':
              if (strncmp (KR_keyword, "/dev/st68", 9) == 0)
d10493 1
a10493 1
return dev_storage + 2516;
d10504 2
a10505 2
            case '7':
              if (strncmp (KR_keyword, "/dev/st67", 9) == 0)
d10508 1
a10508 1
return dev_storage + 2515;
d10519 2
a10520 2
            case '6':
              if (strncmp (KR_keyword, "/dev/st66", 9) == 0)
d10523 1
a10523 1
return dev_storage + 2514;
d10534 11
a10544 2
            case '5':
              if (strncmp (KR_keyword, "/dev/st65", 9) == 0)
d10547 1
a10547 1
return dev_storage + 2513;
d10558 2
a10559 2
            case '4':
              if (strncmp (KR_keyword, "/dev/st64", 9) == 0)
d10562 1
a10562 1
return dev_storage + 2512;
d10573 2
a10574 2
            case '3':
              if (strncmp (KR_keyword, "/dev/st63", 9) == 0)
d10577 1
a10577 1
return dev_storage + 2511;
d10588 2
a10589 2
            case '2':
              if (strncmp (KR_keyword, "/dev/st62", 9) == 0)
d10592 1
a10592 1
return dev_storage + 2510;
d10603 2
a10604 2
            case '1':
              if (strncmp (KR_keyword, "/dev/st61", 9) == 0)
d10607 1
a10607 1
return dev_storage + 2509;
d10618 2
a10619 2
            case '0':
              if (strncmp (KR_keyword, "/dev/st60", 9) == 0)
d10622 1
a10622 1
return dev_storage + 2508;
d10633 2
a10634 11
            default:
{
return	NULL;

}
            }
        case '5':
          switch (KR_keyword [8])
            {
            case '9':
              if (strncmp (KR_keyword, "/dev/st59", 9) == 0)
d10637 1
a10637 1
return dev_storage + 2507;
d10648 2
a10649 2
            case '8':
              if (strncmp (KR_keyword, "/dev/st58", 9) == 0)
d10652 1
a10652 1
return dev_storage + 2506;
d10663 2
a10664 2
            case '7':
              if (strncmp (KR_keyword, "/dev/st57", 9) == 0)
d10667 1
a10667 1
return dev_storage + 2505;
d10678 2
a10679 2
            case '6':
              if (strncmp (KR_keyword, "/dev/st56", 9) == 0)
d10682 1
a10682 1
return dev_storage + 2504;
d10693 2
a10694 2
            case '5':
              if (strncmp (KR_keyword, "/dev/st55", 9) == 0)
d10697 1
a10697 1
return dev_storage + 2503;
d10708 2
a10709 2
            case '4':
              if (strncmp (KR_keyword, "/dev/st54", 9) == 0)
d10712 1
a10712 1
return dev_storage + 2502;
d10723 2
a10724 2
            case '3':
              if (strncmp (KR_keyword, "/dev/st53", 9) == 0)
d10727 1
a10727 1
return dev_storage + 2501;
d10738 2
a10739 2
            case '2':
              if (strncmp (KR_keyword, "/dev/st52", 9) == 0)
d10742 1
a10742 1
return dev_storage + 2500;
d10753 2
a10754 2
            case '1':
              if (strncmp (KR_keyword, "/dev/st51", 9) == 0)
d10757 1
a10757 1
return dev_storage + 2499;
d10768 2
a10769 2
            case '0':
              if (strncmp (KR_keyword, "/dev/st50", 9) == 0)
d10772 1
a10772 1
return dev_storage + 2498;
d10783 2
a10784 11
            default:
{
return	NULL;

}
            }
        case '4':
          switch (KR_keyword [8])
            {
            case '9':
              if (strncmp (KR_keyword, "/dev/st49", 9) == 0)
d10787 1
a10787 1
return dev_storage + 2497;
d10798 2
a10799 2
            case '8':
              if (strncmp (KR_keyword, "/dev/st48", 9) == 0)
d10802 1
a10802 1
return dev_storage + 2496;
d10813 2
a10814 2
            case '7':
              if (strncmp (KR_keyword, "/dev/st47", 9) == 0)
d10817 1
a10817 1
return dev_storage + 2495;
d10828 2
a10829 2
            case '6':
              if (strncmp (KR_keyword, "/dev/st46", 9) == 0)
d10832 1
a10832 1
return dev_storage + 2494;
d10843 2
a10844 2
            case '5':
              if (strncmp (KR_keyword, "/dev/st45", 9) == 0)
d10847 1
a10847 1
return dev_storage + 2493;
d10858 2
a10859 2
            case '4':
              if (strncmp (KR_keyword, "/dev/st44", 9) == 0)
d10862 1
a10862 1
return dev_storage + 2492;
d10873 2
a10874 2
            case '3':
              if (strncmp (KR_keyword, "/dev/st43", 9) == 0)
d10877 1
a10877 1
return dev_storage + 2491;
d10888 2
a10889 2
            case '2':
              if (strncmp (KR_keyword, "/dev/st42", 9) == 0)
d10892 1
a10892 1
return dev_storage + 2490;
d10903 2
a10904 2
            case '1':
              if (strncmp (KR_keyword, "/dev/st41", 9) == 0)
d10907 1
a10907 1
return dev_storage + 2489;
d10918 2
a10919 2
            case '0':
              if (strncmp (KR_keyword, "/dev/st40", 9) == 0)
d10922 1
a10922 1
return dev_storage + 2488;
a10932 9
            default:
{
return	NULL;

}
            }
        case '3':
          switch (KR_keyword [8])
            {
d10934 1
a10934 1
              if (strncmp (KR_keyword, "/dev/st39", 9) == 0)
d10937 1
a10937 1
return dev_storage + 2487;
d10949 1
a10949 1
              if (strncmp (KR_keyword, "/dev/st38", 9) == 0)
d10952 1
a10952 1
return dev_storage + 2486;
d10964 1
a10964 1
              if (strncmp (KR_keyword, "/dev/st37", 9) == 0)
d10967 1
a10967 1
return dev_storage + 2485;
d10979 1
a10979 1
              if (strncmp (KR_keyword, "/dev/st36", 9) == 0)
d10982 1
a10982 1
return dev_storage + 2484;
d10994 1
a10994 1
              if (strncmp (KR_keyword, "/dev/st35", 9) == 0)
d10997 1
a10997 1
return dev_storage + 2483;
d11009 1
a11009 1
              if (strncmp (KR_keyword, "/dev/st34", 9) == 0)
d11012 1
a11012 1
return dev_storage + 2482;
d11024 1
a11024 1
              if (strncmp (KR_keyword, "/dev/st33", 9) == 0)
d11027 1
a11027 1
return dev_storage + 2481;
d11039 1
a11039 1
              if (strncmp (KR_keyword, "/dev/st32", 9) == 0)
d11042 1
a11042 1
return dev_storage + 2480;
d11054 1
a11054 1
              if (strncmp (KR_keyword, "/dev/st31", 9) == 0)
d11057 1
a11057 16
return dev_storage + 2479;

}
                }
              else
                {
{
return	NULL;

}
                }
            case '0':
              if (strncmp (KR_keyword, "/dev/st30", 9) == 0)
                {
{
return dev_storage + 2478;
d11074 1
a11074 1
        case '2':
d11078 1
a11078 1
              if (strncmp (KR_keyword, "/dev/st29", 9) == 0)
d11081 1
a11081 1
return dev_storage + 2477;
d11093 1
a11093 1
              if (strncmp (KR_keyword, "/dev/st28", 9) == 0)
d11096 1
a11096 1
return dev_storage + 2476;
d11108 1
a11108 1
              if (strncmp (KR_keyword, "/dev/st27", 9) == 0)
d11111 1
a11111 1
return dev_storage + 2475;
d11123 1
a11123 1
              if (strncmp (KR_keyword, "/dev/st26", 9) == 0)
d11126 1
a11126 1
return dev_storage + 2474;
d11138 1
a11138 1
              if (strncmp (KR_keyword, "/dev/st25", 9) == 0)
d11141 1
a11141 1
return dev_storage + 2473;
d11153 1
a11153 1
              if (strncmp (KR_keyword, "/dev/st24", 9) == 0)
d11156 1
a11156 1
return dev_storage + 2472;
d11168 1
a11168 1
              if (strncmp (KR_keyword, "/dev/st23", 9) == 0)
d11171 1
a11171 1
return dev_storage + 2471;
d11183 1
a11183 1
              if (strncmp (KR_keyword, "/dev/st22", 9) == 0)
d11186 1
a11186 1
return dev_storage + 2470;
d11198 1
a11198 1
              if (strncmp (KR_keyword, "/dev/st21", 9) == 0)
d11201 1
a11201 1
return dev_storage + 2469;
d11213 1
a11213 1
              if (strncmp (KR_keyword, "/dev/st20", 9) == 0)
d11216 1
a11216 1
return dev_storage + 2468;
d11233 1
a11233 1
        case '1':
d11237 1
a11237 1
              if (strncmp (KR_keyword, "/dev/st19", 9) == 0)
d11240 1
a11240 1
return dev_storage + 2467;
d11252 1
a11252 1
              if (strncmp (KR_keyword, "/dev/st18", 9) == 0)
d11255 1
a11255 1
return dev_storage + 2466;
d11267 1
a11267 1
              if (strncmp (KR_keyword, "/dev/st17", 9) == 0)
d11270 1
a11270 1
return dev_storage + 2465;
d11282 1
a11282 1
              if (strncmp (KR_keyword, "/dev/st16", 9) == 0)
d11285 1
a11285 1
return dev_storage + 2464;
d11297 1
a11297 1
              switch (KR_keyword [6])
a11298 3
                case 't':
                  if (strncmp (KR_keyword, "/dev/st15", 9) == 0)
                    {
d11300 1
a11300 1
return dev_storage + 2463;
d11303 3
a11305 3
                    }
                  else
                    {
d11310 4
a11313 4
                    }
                case 'r':
                  if (strncmp (KR_keyword, "/dev/sr15", 9) == 0)
                    {
d11315 1
a11315 1
return dev_storage + 2447;
d11318 3
a11320 3
                    }
                  else
                    {
d11325 4
a11328 4
                    }
                case 'd':
                  if (strncmp (KR_keyword, "/dev/fd15", 9) == 0)
                    {
d11330 1
a11330 1
return dev_storage + 101;
d11333 3
a11335 3
                    }
                  else
                    {
d11340 4
a11343 2
                    }
                default:
d11345 1
a11345 1
return	NULL;
d11349 1
a11349 2
            case '4':
              switch (KR_keyword [6])
a11350 10
                case 't':
                  if (strncmp (KR_keyword, "/dev/st14", 9) == 0)
                    {
{
return dev_storage + 2462;

}
                    }
                  else
                    {
d11355 4
a11358 4
                    }
                case 'r':
                  if (strncmp (KR_keyword, "/dev/sr14", 9) == 0)
                    {
d11360 1
a11360 1
return dev_storage + 2446;
d11363 3
a11365 3
                    }
                  else
                    {
d11370 4
a11373 4
                    }
                case 'd':
                  if (strncmp (KR_keyword, "/dev/fd14", 9) == 0)
                    {
d11375 1
a11375 1
return dev_storage + 100;
d11378 3
a11380 3
                    }
                  else
                    {
d11385 2
a11386 2
                    }
                default:
d11391 6
a11396 3
                }
            case '3':
              switch (KR_keyword [6])
a11397 3
                case 't':
                  if (strncmp (KR_keyword, "/dev/st13", 9) == 0)
                    {
d11402 3
a11404 3
                    }
                  else
                    {
d11409 4
a11412 4
                    }
                case 'r':
                  if (strncmp (KR_keyword, "/dev/sr13", 9) == 0)
                    {
d11414 1
a11414 1
return dev_storage + 2445;
d11417 3
a11419 3
                    }
                  else
                    {
d11424 4
a11427 4
                    }
                case 'd':
                  if (strncmp (KR_keyword, "/dev/fd13", 9) == 0)
                    {
d11429 1
a11429 1
return dev_storage + 99;
d11432 3
a11434 3
                    }
                  else
                    {
d11439 11
a11449 2
                    }
                default:
d11455 2
a11456 2
            case '2':
              switch (KR_keyword [6])
a11457 3
                case 't':
                  if (strncmp (KR_keyword, "/dev/st12", 9) == 0)
                    {
d11459 1
a11459 1
return dev_storage + 2460;
d11462 3
a11464 3
                    }
                  else
                    {
d11469 4
a11472 4
                    }
                case 'r':
                  if (strncmp (KR_keyword, "/dev/sr12", 9) == 0)
                    {
d11474 1
a11474 1
return dev_storage + 2444;
d11477 3
a11479 3
                    }
                  else
                    {
d11484 4
a11487 4
                    }
                case 'd':
                  if (strncmp (KR_keyword, "/dev/fd12", 9) == 0)
                    {
d11489 1
a11489 1
return dev_storage + 98;
d11492 3
a11494 3
                    }
                  else
                    {
d11499 11
a11509 2
                    }
                default:
d11516 23
a11538 1
              switch (KR_keyword [6])
a11539 3
                case 't':
                  if (strncmp (KR_keyword, "/dev/st11", 9) == 0)
                    {
d11541 1
a11541 1
return dev_storage + 2459;
d11544 2
a11545 3
                    }
                  else
                    {
d11550 7
a11556 4
                    }
                case 'r':
                  if (strncmp (KR_keyword, "/dev/sr11", 9) == 0)
                    {
d11558 1
a11558 1
return dev_storage + 2443;
d11561 3
a11563 3
                    }
                  else
                    {
d11568 4
a11571 4
                    }
                case 'd':
                  if (strncmp (KR_keyword, "/dev/fd11", 9) == 0)
                    {
d11573 1
a11573 1
return dev_storage + 97;
d11576 3
a11578 3
                    }
                  else
                    {
d11583 11
a11593 2
                    }
                default:
d11599 2
a11600 2
            case '0':
              switch (KR_keyword [6])
a11601 3
                case 't':
                  if (strncmp (KR_keyword, "/dev/st10", 9) == 0)
                    {
d11603 1
a11603 1
return dev_storage + 2458;
d11606 3
a11608 3
                    }
                  else
                    {
d11613 4
a11616 4
                    }
                case 'r':
                  if (strncmp (KR_keyword, "/dev/sr10", 9) == 0)
                    {
d11618 1
a11618 1
return dev_storage + 2442;
d11621 3
a11623 3
                    }
                  else
                    {
d11628 4
a11631 4
                    }
                case 'd':
                  if (strncmp (KR_keyword, "/dev/fd10", 9) == 0)
                    {
d11633 1
a11633 1
return dev_storage + 96;
d11636 3
a11638 3
                    }
                  else
                    {
d11643 11
a11653 2
                    }
                default:
d11659 10
a11668 1
            default:
d11673 11
a11683 2
            }
        default:
d11688 11
a11698 7
        }
    case 10:
      switch (KR_keyword [9])
        {
        case 'n':
          if (strncmp (KR_keyword, "/dev/conin", 10) == 0)
            {
d11700 1
a11700 1
return dev_storage + 18;
d11703 2
a11704 3
            }
          else
            {
d11710 1
a11710 1
        case '9':
d11713 92
a11804 2
            case 'z':
              switch (KR_keyword [7])
a11805 3
                case 'c':
                  if (strncmp (KR_keyword, "/dev/sdcz9", 10) == 0)
                    {
d11807 1
a11807 1
return dev_storage + 2041;
d11810 3
a11812 3
                    }
                  else
                    {
d11817 4
a11820 4
                    }
                case 'b':
                  if (strncmp (KR_keyword, "/dev/sdbz9", 10) == 0)
                    {
d11822 1
a11822 1
return dev_storage + 1625;
d11825 3
a11827 3
                    }
                  else
                    {
d11832 4
a11835 4
                    }
                case 'a':
                  if (strncmp (KR_keyword, "/dev/sdaz9", 10) == 0)
                    {
d11837 1
a11837 1
return dev_storage + 1209;
d11840 3
a11842 3
                    }
                  else
                    {
d11847 11
a11857 2
                    }
                default:
d11863 11
a11873 2
            case 'y':
              switch (KR_keyword [7])
a11874 3
                case 'c':
                  if (strncmp (KR_keyword, "/dev/sdcy9", 10) == 0)
                    {
d11876 1
a11876 1
return dev_storage + 2026;
d11879 3
a11881 3
                    }
                  else
                    {
d11886 4
a11889 4
                    }
                case 'b':
                  if (strncmp (KR_keyword, "/dev/sdby9", 10) == 0)
                    {
d11891 1
a11891 1
return dev_storage + 1610;
d11894 3
a11896 3
                    }
                  else
                    {
d11901 4
a11904 4
                    }
                case 'a':
                  if (strncmp (KR_keyword, "/dev/sday9", 10) == 0)
                    {
d11906 1
a11906 1
return dev_storage + 1194;
d11909 3
a11911 3
                    }
                  else
                    {
d11916 11
a11926 2
                    }
                default:
d11932 2
a11933 2
            case 'x':
              switch (KR_keyword [7])
a11934 3
                case 'd':
                  if (strncmp (KR_keyword, "/dev/sddx9", 10) == 0)
                    {
d11936 1
a11936 1
return dev_storage + 2425;
d11939 3
a11941 3
                    }
                  else
                    {
d11946 4
a11949 4
                    }
                case 'c':
                  if (strncmp (KR_keyword, "/dev/sdcx9", 10) == 0)
                    {
d11951 1
a11951 1
return dev_storage + 2011;
d11954 3
a11956 3
                    }
                  else
                    {
d11961 4
a11964 4
                    }
                case 'b':
                  if (strncmp (KR_keyword, "/dev/sdbx9", 10) == 0)
                    {
d11966 1
a11966 1
return dev_storage + 1595;
d11969 3
a11971 3
                    }
                  else
                    {
d11976 4
a11979 4
                    }
                case 'a':
                  if (strncmp (KR_keyword, "/dev/sdax9", 10) == 0)
                    {
d11981 1
a11981 1
return dev_storage + 1179;
d11984 3
a11986 3
                    }
                  else
                    {
d11991 11
a12001 2
                    }
                default:
d12007 9
a12015 2
            case 'w':
              switch (KR_keyword [7])
a12016 3
                case 'd':
                  if (strncmp (KR_keyword, "/dev/sddw9", 10) == 0)
                    {
d12018 1
a12018 1
return dev_storage + 2410;
d12021 2
a12022 3
                    }
                  else
                    {
d12027 7
a12033 4
                    }
                case 'c':
                  if (strncmp (KR_keyword, "/dev/sdcw9", 10) == 0)
                    {
d12035 1
a12035 1
return dev_storage + 1996;
d12038 3
a12040 3
                    }
                  else
                    {
d12045 4
a12048 4
                    }
                case 'b':
                  if (strncmp (KR_keyword, "/dev/sdbw9", 10) == 0)
                    {
d12050 1
a12050 1
return dev_storage + 1580;
d12053 3
a12055 3
                    }
                  else
                    {
d12060 4
a12063 4
                    }
                case 'a':
                  if (strncmp (KR_keyword, "/dev/sdaw9", 10) == 0)
                    {
d12065 1
a12065 1
return dev_storage + 1164;
d12068 3
a12070 3
                    }
                  else
                    {
d12075 11
a12085 2
                    }
                default:
d12091 2
a12092 2
            case 'v':
              switch (KR_keyword [7])
a12093 3
                case 'd':
                  if (strncmp (KR_keyword, "/dev/sddv9", 10) == 0)
                    {
d12095 1
a12095 1
return dev_storage + 2395;
d12098 3
a12100 3
                    }
                  else
                    {
d12105 4
a12108 4
                    }
                case 'c':
                  if (strncmp (KR_keyword, "/dev/sdcv9", 10) == 0)
                    {
d12110 1
a12110 1
return dev_storage + 1981;
d12113 3
a12115 3
                    }
                  else
                    {
d12120 4
a12123 4
                    }
                case 'b':
                  if (strncmp (KR_keyword, "/dev/sdbv9", 10) == 0)
                    {
d12125 1
a12125 1
return dev_storage + 1565;
d12128 3
a12130 3
                    }
                  else
                    {
d12135 4
a12138 4
                    }
                case 'a':
                  if (strncmp (KR_keyword, "/dev/sdav9", 10) == 0)
                    {
d12140 1
a12140 1
return dev_storage + 1149;
d12143 3
a12145 3
                    }
                  else
                    {
d12150 11
a12160 2
                    }
                default:
d12166 9
a12174 2
            case 'u':
              switch (KR_keyword [7])
a12175 3
                case 'd':
                  if (strncmp (KR_keyword, "/dev/sddu9", 10) == 0)
                    {
d12177 1
a12177 1
return dev_storage + 2380;
d12180 2
a12181 3
                    }
                  else
                    {
d12186 7
a12192 4
                    }
                case 'c':
                  if (strncmp (KR_keyword, "/dev/sdcu9", 10) == 0)
                    {
d12194 1
a12194 1
return dev_storage + 1966;
d12197 3
a12199 3
                    }
                  else
                    {
d12204 4
a12207 4
                    }
                case 'b':
                  if (strncmp (KR_keyword, "/dev/sdbu9", 10) == 0)
                    {
d12209 1
a12209 1
return dev_storage + 1550;
d12212 3
a12214 3
                    }
                  else
                    {
d12219 4
a12222 4
                    }
                case 'a':
                  if (strncmp (KR_keyword, "/dev/sdau9", 10) == 0)
                    {
d12224 1
a12224 1
return dev_storage + 1134;
d12227 3
a12229 3
                    }
                  else
                    {
d12234 11
a12244 2
                    }
                default:
d12250 2
a12251 2
            case 't':
              switch (KR_keyword [7])
a12252 3
                case 'd':
                  if (strncmp (KR_keyword, "/dev/sddt9", 10) == 0)
                    {
d12254 1
a12254 1
return dev_storage + 2365;
d12257 3
a12259 3
                    }
                  else
                    {
d12264 4
a12267 4
                    }
                case 'c':
                  if (strncmp (KR_keyword, "/dev/sdct9", 10) == 0)
                    {
d12269 1
a12269 1
return dev_storage + 1951;
d12272 3
a12274 3
                    }
                  else
                    {
d12279 4
a12282 4
                    }
                case 'b':
                  if (strncmp (KR_keyword, "/dev/sdbt9", 10) == 0)
                    {
d12284 1
a12284 1
return dev_storage + 1535;
d12287 3
a12289 3
                    }
                  else
                    {
d12294 4
a12297 4
                    }
                case 'a':
                  if (strncmp (KR_keyword, "/dev/sdat9", 10) == 0)
                    {
d12299 1
a12299 1
return dev_storage + 1119;
d12302 3
a12304 3
                    }
                  else
                    {
d12309 4
a12312 2
                    }
                default:
d12314 1
a12314 1
return	NULL;
d12318 1
a12318 2
            case 's':
              switch (KR_keyword [7])
a12319 3
                case 'n':
                  if (strncmp (KR_keyword, "/dev/cons9", 10) == 0)
                    {
d12321 1
a12321 1
return dev_storage + 29;
d12324 4
a12327 3
                    }
                  else
                    {
d12329 1
a12329 1
return	NULL;
d12332 3
a12334 4
                    }
                case 'd':
                  if (strncmp (KR_keyword, "/dev/sdds9", 10) == 0)
                    {
d12336 1
a12336 1
return dev_storage + 2350;
d12339 2
a12340 3
                    }
                  else
                    {
d12345 7
a12351 4
                    }
                case 'c':
                  if (strncmp (KR_keyword, "/dev/sdcs9", 10) == 0)
                    {
d12353 1
a12353 1
return dev_storage + 1936;
d12356 3
a12358 3
                    }
                  else
                    {
d12363 4
a12366 4
                    }
                case 'b':
                  if (strncmp (KR_keyword, "/dev/sdbs9", 10) == 0)
                    {
d12368 1
a12368 1
return dev_storage + 1520;
d12371 3
a12373 3
                    }
                  else
                    {
d12378 4
a12381 4
                    }
                case 'a':
                  if (strncmp (KR_keyword, "/dev/sdas9", 10) == 0)
                    {
d12383 1
a12383 1
return dev_storage + 1104;
d12386 3
a12388 3
                    }
                  else
                    {
d12393 4
a12396 2
                    }
                default:
d12398 1
a12398 1
return	NULL;
d12402 1
a12402 2
            case 'r':
              switch (KR_keyword [7])
a12403 10
                case 'd':
                  if (strncmp (KR_keyword, "/dev/sddr9", 10) == 0)
                    {
{
return dev_storage + 2335;

}
                    }
                  else
                    {
d12408 6
a12413 3
                    }
                case 'c':
                  if (strncmp (KR_keyword, "/dev/sdcr9", 10) == 0)
d12416 1
a12416 1
return dev_storage + 1921;
d12427 2
a12428 2
                case 'b':
                  if (strncmp (KR_keyword, "/dev/sdbr9", 10) == 0)
d12431 1
a12431 1
return dev_storage + 1505;
d12442 2
a12443 2
                case 'a':
                  if (strncmp (KR_keyword, "/dev/sdar9", 10) == 0)
d12446 1
a12446 1
return dev_storage + 1089;
d12463 2
a12464 2
            case 'q':
              switch (KR_keyword [7])
d12466 2
a12467 2
                case 'd':
                  if (strncmp (KR_keyword, "/dev/sddq9", 10) == 0)
d12470 1
a12470 1
return dev_storage + 2320;
d12481 2
a12482 2
                case 'c':
                  if (strncmp (KR_keyword, "/dev/sdcq9", 10) == 0)
d12485 1
a12485 1
return dev_storage + 1906;
d12496 2
a12497 2
                case 'b':
                  if (strncmp (KR_keyword, "/dev/sdbq9", 10) == 0)
d12500 1
a12500 16
return dev_storage + 1490;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'a':
                  if (strncmp (KR_keyword, "/dev/sdaq9", 10) == 0)
                    {
{
return dev_storage + 1074;
d12517 2
a12518 2
            case 'p':
              switch (KR_keyword [7])
d12520 2
a12521 2
                case 'd':
                  if (strncmp (KR_keyword, "/dev/sddp9", 10) == 0)
d12524 1
a12524 1
return dev_storage + 2305;
d12535 2
a12536 2
                case 'c':
                  if (strncmp (KR_keyword, "/dev/sdcp9", 10) == 0)
d12539 1
a12539 1
return dev_storage + 1891;
d12550 2
a12551 2
                case 'b':
                  if (strncmp (KR_keyword, "/dev/sdbp9", 10) == 0)
d12554 1
a12554 16
return dev_storage + 1475;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'a':
                  if (strncmp (KR_keyword, "/dev/sdap9", 10) == 0)
                    {
{
return dev_storage + 1059;
d12571 2
a12572 2
            case 'o':
              switch (KR_keyword [7])
d12574 2
a12575 2
                case 'd':
                  if (strncmp (KR_keyword, "/dev/sddo9", 10) == 0)
d12578 1
a12578 1
return dev_storage + 2290;
d12589 2
a12590 2
                case 'c':
                  if (strncmp (KR_keyword, "/dev/sdco9", 10) == 0)
d12593 1
a12593 1
return dev_storage + 1876;
d12604 2
a12605 2
                case 'b':
                  if (strncmp (KR_keyword, "/dev/sdbo9", 10) == 0)
d12608 1
a12608 16
return dev_storage + 1460;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'a':
                  if (strncmp (KR_keyword, "/dev/sdao9", 10) == 0)
                    {
{
return dev_storage + 1044;
d12625 2
a12626 2
            case 'n':
              switch (KR_keyword [7])
d12628 2
a12629 2
                case 'd':
                  if (strncmp (KR_keyword, "/dev/sddn9", 10) == 0)
d12632 1
a12632 1
return dev_storage + 2275;
d12643 2
a12644 2
                case 'c':
                  if (strncmp (KR_keyword, "/dev/sdcn9", 10) == 0)
d12647 1
a12647 1
return dev_storage + 1861;
d12658 2
a12659 2
                case 'b':
                  if (strncmp (KR_keyword, "/dev/sdbn9", 10) == 0)
d12662 1
a12662 16
return dev_storage + 1445;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'a':
                  if (strncmp (KR_keyword, "/dev/sdan9", 10) == 0)
                    {
{
return dev_storage + 1029;
d12679 2
a12680 2
            case 'm':
              switch (KR_keyword [7])
d12682 2
a12683 2
                case 'y':
                  if (strncmp (KR_keyword, "/dev/ptym9", 10) == 0)
d12686 1
a12686 1
return dev_storage + 312;
d12697 2
a12698 2
                case 'd':
                  if (strncmp (KR_keyword, "/dev/sddm9", 10) == 0)
d12701 1
a12701 1
return dev_storage + 2260;
d12712 2
a12713 2
                case 'c':
                  if (strncmp (KR_keyword, "/dev/sdcm9", 10) == 0)
d12716 1
a12716 1
return dev_storage + 1846;
d12727 1
a12727 3
                case 'b':
                  if (strncmp (KR_keyword, "/dev/sdbm9", 10) == 0)
                    {
d12729 1
a12729 1
return dev_storage + 1430;
d12732 2
a12733 3
                    }
                  else
                    {
d12738 2
a12739 4
                    }
                case 'a':
                  if (strncmp (KR_keyword, "/dev/sdam9", 10) == 0)
                    {
d12741 1
a12741 1
return dev_storage + 1014;
d12744 7
a12750 3
                    }
                  else
                    {
d12752 1
a12752 1
return	NULL;
d12755 3
a12757 2
                    }
                default:
d12762 5
a12766 2
                }
            case 'l':
a12768 15
                case 'd':
                  if (strncmp (KR_keyword, "/dev/sddl9", 10) == 0)
                    {
{
return dev_storage + 2245;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
d12770 1
a12770 1
                  if (strncmp (KR_keyword, "/dev/sdcl9", 10) == 0)
d12773 1
a12773 1
return dev_storage + 1831;
d12785 1
a12785 1
                  if (strncmp (KR_keyword, "/dev/sdbl9", 10) == 0)
d12788 1
a12788 1
return dev_storage + 1415;
d12800 1
a12800 1
                  if (strncmp (KR_keyword, "/dev/sdal9", 10) == 0)
d12803 1
a12803 1
return dev_storage + 999;
d12820 1
a12820 1
            case 'k':
a12822 15
                case 'd':
                  if (strncmp (KR_keyword, "/dev/sddk9", 10) == 0)
                    {
{
return dev_storage + 2230;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
d12824 1
a12824 1
                  if (strncmp (KR_keyword, "/dev/sdck9", 10) == 0)
d12827 1
a12827 1
return dev_storage + 1816;
d12839 1
a12839 1
                  if (strncmp (KR_keyword, "/dev/sdbk9", 10) == 0)
d12842 1
a12842 1
return dev_storage + 1400;
d12854 1
a12854 1
                  if (strncmp (KR_keyword, "/dev/sdak9", 10) == 0)
d12857 1
a12857 1
return dev_storage + 984;
d12874 1
a12874 1
            case 'j':
d12878 1
a12878 1
                  if (strncmp (KR_keyword, "/dev/sddj9", 10) == 0)
d12881 1
a12881 1
return dev_storage + 2215;
d12893 1
a12893 1
                  if (strncmp (KR_keyword, "/dev/sdcj9", 10) == 0)
d12896 1
a12896 1
return dev_storage + 1801;
d12908 1
a12908 1
                  if (strncmp (KR_keyword, "/dev/sdbj9", 10) == 0)
d12911 1
a12911 1
return dev_storage + 1385;
d12923 1
a12923 1
                  if (strncmp (KR_keyword, "/dev/sdaj9", 10) == 0)
d12926 1
a12926 1
return dev_storage + 969;
d12943 1
a12943 1
            case 'i':
d12947 1
a12947 1
                  if (strncmp (KR_keyword, "/dev/sddi9", 10) == 0)
d12950 1
a12950 1
return dev_storage + 2200;
d12962 1
a12962 1
                  if (strncmp (KR_keyword, "/dev/sdci9", 10) == 0)
d12965 1
a12965 1
return dev_storage + 1786;
d12977 1
a12977 1
                  if (strncmp (KR_keyword, "/dev/sdbi9", 10) == 0)
d12980 1
a12980 1
return dev_storage + 1370;
d12992 1
a12992 1
                  if (strncmp (KR_keyword, "/dev/sdai9", 10) == 0)
d12995 1
a12995 1
return dev_storage + 954;
d13012 1
a13012 1
            case 'h':
d13016 1
a13016 1
                  if (strncmp (KR_keyword, "/dev/sddh9", 10) == 0)
d13019 1
a13019 1
return dev_storage + 2185;
d13031 1
a13031 1
                  if (strncmp (KR_keyword, "/dev/sdch9", 10) == 0)
d13034 1
a13034 1
return dev_storage + 1771;
d13046 1
a13046 1
                  if (strncmp (KR_keyword, "/dev/sdbh9", 10) == 0)
d13049 1
a13049 1
return dev_storage + 1355;
d13061 1
a13061 1
                  if (strncmp (KR_keyword, "/dev/sdah9", 10) == 0)
d13064 1
a13064 1
return dev_storage + 939;
d13081 1
a13081 1
            case 'g':
d13085 1
a13085 1
                  if (strncmp (KR_keyword, "/dev/sddg9", 10) == 0)
d13088 1
a13088 1
return dev_storage + 2170;
d13100 1
a13100 1
                  if (strncmp (KR_keyword, "/dev/sdcg9", 10) == 0)
d13103 1
a13103 1
return dev_storage + 1756;
d13115 1
a13115 1
                  if (strncmp (KR_keyword, "/dev/sdbg9", 10) == 0)
d13118 1
a13118 1
return dev_storage + 1340;
d13130 1
a13130 1
                  if (strncmp (KR_keyword, "/dev/sdag9", 10) == 0)
d13133 1
a13133 1
return dev_storage + 924;
d13150 1
a13150 1
            case 'f':
d13154 1
a13154 1
                  if (strncmp (KR_keyword, "/dev/sddf9", 10) == 0)
d13157 1
a13157 1
return dev_storage + 2155;
d13169 1
a13169 1
                  if (strncmp (KR_keyword, "/dev/sdcf9", 10) == 0)
d13172 1
a13172 1
return dev_storage + 1741;
d13184 1
a13184 1
                  if (strncmp (KR_keyword, "/dev/sdbf9", 10) == 0)
d13187 1
a13187 1
return dev_storage + 1325;
d13199 1
a13199 1
                  if (strncmp (KR_keyword, "/dev/sdaf9", 10) == 0)
d13202 1
a13202 1
return dev_storage + 909;
d13219 1
a13219 1
            case 'e':
d13222 15
d13238 1
a13238 1
                  if (strncmp (KR_keyword, "/dev/sdde9", 10) == 0)
d13241 1
a13241 1
return dev_storage + 2140;
d13253 1
a13253 1
                  if (strncmp (KR_keyword, "/dev/sdce9", 10) == 0)
d13256 1
a13256 1
return dev_storage + 1726;
d13268 1
a13268 1
                  if (strncmp (KR_keyword, "/dev/sdbe9", 10) == 0)
d13271 1
a13271 1
return dev_storage + 1310;
d13283 1
a13283 1
                  if (strncmp (KR_keyword, "/dev/sdae9", 10) == 0)
d13286 1
a13286 1
return dev_storage + 894;
d13303 1
a13303 1
            case 'd':
d13307 1
a13307 1
                  if (strncmp (KR_keyword, "/dev/sddd9", 10) == 0)
d13310 1
a13310 1
return dev_storage + 2125;
d13322 1
a13322 1
                  if (strncmp (KR_keyword, "/dev/sdcd9", 10) == 0)
d13325 1
a13325 1
return dev_storage + 1711;
d13337 1
a13337 1
                  if (strncmp (KR_keyword, "/dev/sdbd9", 10) == 0)
d13340 1
a13340 1
return dev_storage + 1295;
d13352 1
a13352 1
                  if (strncmp (KR_keyword, "/dev/sdad9", 10) == 0)
d13355 1
a13355 1
return dev_storage + 879;
d13372 1
a13372 1
            case 'c':
d13376 1
a13376 1
                  if (strncmp (KR_keyword, "/dev/sddc9", 10) == 0)
d13379 1
a13379 1
return dev_storage + 2110;
d13391 1
a13391 1
                  if (strncmp (KR_keyword, "/dev/sdcc9", 10) == 0)
d13394 1
a13394 1
return dev_storage + 1696;
d13406 1
a13406 1
                  if (strncmp (KR_keyword, "/dev/sdbc9", 10) == 0)
d13409 1
a13409 1
return dev_storage + 1280;
d13421 1
a13421 1
                  if (strncmp (KR_keyword, "/dev/sdac9", 10) == 0)
d13424 1
a13424 1
return dev_storage + 864;
d13441 1
a13441 1
            case 'b':
d13445 1
a13445 1
                  if (strncmp (KR_keyword, "/dev/sddb9", 10) == 0)
d13448 1
a13448 1
return dev_storage + 2095;
d13460 1
a13460 1
                  if (strncmp (KR_keyword, "/dev/sdcb9", 10) == 0)
d13463 1
a13463 1
return dev_storage + 1681;
d13475 1
a13475 1
                  if (strncmp (KR_keyword, "/dev/sdbb9", 10) == 0)
d13478 1
a13478 1
return dev_storage + 1265;
d13490 1
a13490 1
                  if (strncmp (KR_keyword, "/dev/sdab9", 10) == 0)
d13493 1
a13493 1
return dev_storage + 849;
d13510 1
a13510 1
            case 'a':
d13514 1
a13514 1
                  if (strncmp (KR_keyword, "/dev/sdda9", 10) == 0)
d13517 1
a13517 1
return dev_storage + 2080;
d13529 1
a13529 1
                  if (strncmp (KR_keyword, "/dev/sdca9", 10) == 0)
d13532 1
a13532 1
return dev_storage + 1666;
d13544 1
a13544 1
                  if (strncmp (KR_keyword, "/dev/sdba9", 10) == 0)
d13547 1
a13547 1
return dev_storage + 1250;
d13559 1
a13559 1
                  if (strncmp (KR_keyword, "/dev/sdaa9", 10) == 0)
d13562 1
a13562 1
return dev_storage + 834;
d13579 2
a13580 2
            case 'S':
              if (strncmp (KR_keyword, "/dev/ttyS9", 10) == 0)
d13582 3
d13586 1
a13586 1
return dev_storage + 2586;
d13589 3
a13591 3
                }
              else
                {
d13596 4
a13599 4
                }
            case '9':
              if (strncmp (KR_keyword, "/dev/nst99", 10) == 0)
                {
d13601 1
a13601 1
return dev_storage + 206;
d13604 3
a13606 3
                }
              else
                {
d13611 3
a13613 51
                }
            case '8':
              if (strncmp (KR_keyword, "/dev/nst89", 10) == 0)
                {
{
return dev_storage + 196;

}
                }
              else
                {
{
return	NULL;

}
                }
            case '7':
              if (strncmp (KR_keyword, "/dev/nst79", 10) == 0)
                {
{
return dev_storage + 186;

}
                }
              else
                {
{
return	NULL;

}
                }
            case '6':
              if (strncmp (KR_keyword, "/dev/nst69", 10) == 0)
                {
{
return dev_storage + 176;

}
                }
              else
                {
{
return	NULL;

}
                }
            case '5':
              switch (KR_keyword [5])
                {
                case 'p':
                  if (strncmp (KR_keyword, "/dev/pty59", 10) == 0)
d13616 1
a13616 1
return dev_storage + 298;
d13627 2
a13628 2
                case 'n':
                  if (strncmp (KR_keyword, "/dev/nst59", 10) == 0)
d13631 1
a13631 1
return dev_storage + 166;
d13648 2
a13649 2
            case '4':
              switch (KR_keyword [5])
d13651 2
a13652 2
                case 'p':
                  if (strncmp (KR_keyword, "/dev/pty49", 10) == 0)
d13655 1
a13655 1
return dev_storage + 288;
d13666 2
a13667 2
                case 'n':
                  if (strncmp (KR_keyword, "/dev/nst49", 10) == 0)
d13670 1
a13670 1
return dev_storage + 156;
d13681 2
a13682 11
                default:
{
return	NULL;

}
                }
            case '3':
              switch (KR_keyword [5])
                {
                case 'p':
                  if (strncmp (KR_keyword, "/dev/pty39", 10) == 0)
d13685 1
a13685 1
return dev_storage + 278;
d13696 2
a13697 2
                case 'n':
                  if (strncmp (KR_keyword, "/dev/nst39", 10) == 0)
d13700 1
a13700 1
return dev_storage + 146;
d13717 2
a13718 2
            case '2':
              switch (KR_keyword [5])
d13720 2
a13721 2
                case 'p':
                  if (strncmp (KR_keyword, "/dev/pty29", 10) == 0)
d13724 1
a13724 1
return dev_storage + 268;
d13735 2
a13736 2
                case 'n':
                  if (strncmp (KR_keyword, "/dev/nst29", 10) == 0)
d13739 1
a13739 1
return dev_storage + 136;
d13750 2
a13751 11
                default:
{
return	NULL;

}
                }
            case '1':
              switch (KR_keyword [5])
                {
                case 's':
                  if (strncmp (KR_keyword, "/dev/st119", 10) == 0)
d13754 1
a13754 1
return dev_storage + 2567;
d13765 2
a13766 2
                case 'p':
                  if (strncmp (KR_keyword, "/dev/pty19", 10) == 0)
d13769 1
a13769 16
return dev_storage + 258;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'n':
                  if (strncmp (KR_keyword, "/dev/nst19", 10) == 0)
                    {
{
return dev_storage + 126;
d13786 2
a13787 2
            case '0':
              if (strncmp (KR_keyword, "/dev/st109", 10) == 0)
d13789 3
d13793 1
a13793 1
return dev_storage + 2557;
d13796 3
a13798 3
                }
              else
                {
d13803 1
a13803 13
                }
            default:
{
return	NULL;

}
            }
        case '8':
          switch (KR_keyword [8])
            {
            case 'z':
              switch (KR_keyword [7])
                {
d13805 1
a13805 1
                  if (strncmp (KR_keyword, "/dev/sdcz8", 10) == 0)
d13808 1
a13808 1
return dev_storage + 2040;
d13820 1
a13820 1
                  if (strncmp (KR_keyword, "/dev/sdbz8", 10) == 0)
d13823 1
a13823 1
return dev_storage + 1624;
d13835 1
a13835 1
                  if (strncmp (KR_keyword, "/dev/sdaz8", 10) == 0)
d13838 1
a13838 1
return dev_storage + 1208;
d13855 1
a13855 1
            case 'y':
d13858 15
d13874 1
a13874 1
                  if (strncmp (KR_keyword, "/dev/sdcy8", 10) == 0)
d13877 1
a13877 1
return dev_storage + 2025;
d13889 1
a13889 1
                  if (strncmp (KR_keyword, "/dev/sdby8", 10) == 0)
d13892 1
a13892 1
return dev_storage + 1609;
d13904 1
a13904 1
                  if (strncmp (KR_keyword, "/dev/sday8", 10) == 0)
d13907 1
a13907 1
return dev_storage + 1193;
d13924 1
a13924 1
            case 'x':
d13928 1
a13928 1
                  if (strncmp (KR_keyword, "/dev/sddx8", 10) == 0)
d13931 1
a13931 1
return dev_storage + 2424;
d13943 1
a13943 1
                  if (strncmp (KR_keyword, "/dev/sdcx8", 10) == 0)
d13946 1
a13946 1
return dev_storage + 2010;
d13958 1
a13958 1
                  if (strncmp (KR_keyword, "/dev/sdbx8", 10) == 0)
d13961 1
a13961 1
return dev_storage + 1594;
d13973 1
a13973 1
                  if (strncmp (KR_keyword, "/dev/sdax8", 10) == 0)
d13976 1
a13976 1
return dev_storage + 1178;
d13993 1
a13993 1
            case 'w':
d13997 1
a13997 1
                  if (strncmp (KR_keyword, "/dev/sddw8", 10) == 0)
d14000 1
a14000 1
return dev_storage + 2409;
d14012 1
a14012 1
                  if (strncmp (KR_keyword, "/dev/sdcw8", 10) == 0)
d14015 1
a14015 1
return dev_storage + 1995;
d14027 1
a14027 1
                  if (strncmp (KR_keyword, "/dev/sdbw8", 10) == 0)
d14030 1
a14030 1
return dev_storage + 1579;
d14042 1
a14042 1
                  if (strncmp (KR_keyword, "/dev/sdaw8", 10) == 0)
d14045 1
a14045 1
return dev_storage + 1163;
d14062 1
a14062 1
            case 'v':
d14066 1
a14066 1
                  if (strncmp (KR_keyword, "/dev/sddv8", 10) == 0)
d14069 1
a14069 1
return dev_storage + 2394;
d14081 1
a14081 1
                  if (strncmp (KR_keyword, "/dev/sdcv8", 10) == 0)
d14084 1
a14084 1
return dev_storage + 1980;
d14096 1
a14096 1
                  if (strncmp (KR_keyword, "/dev/sdbv8", 10) == 0)
d14099 1
a14099 1
return dev_storage + 1564;
d14111 1
a14111 1
                  if (strncmp (KR_keyword, "/dev/sdav8", 10) == 0)
d14114 1
a14114 1
return dev_storage + 1148;
d14131 1
a14131 1
            case 'u':
d14135 1
a14135 1
                  if (strncmp (KR_keyword, "/dev/sddu8", 10) == 0)
d14138 1
a14138 1
return dev_storage + 2379;
d14150 1
a14150 1
                  if (strncmp (KR_keyword, "/dev/sdcu8", 10) == 0)
d14153 1
a14153 1
return dev_storage + 1965;
d14165 1
a14165 1
                  if (strncmp (KR_keyword, "/dev/sdbu8", 10) == 0)
d14168 1
a14168 1
return dev_storage + 1549;
d14180 1
a14180 1
                  if (strncmp (KR_keyword, "/dev/sdau8", 10) == 0)
d14183 1
a14183 1
return dev_storage + 1133;
d14200 1
a14200 1
            case 't':
d14204 1
a14204 1
                  if (strncmp (KR_keyword, "/dev/sddt8", 10) == 0)
d14207 1
a14207 1
return dev_storage + 2364;
d14219 1
a14219 1
                  if (strncmp (KR_keyword, "/dev/sdct8", 10) == 0)
d14222 1
a14222 1
return dev_storage + 1950;
d14234 1
a14234 1
                  if (strncmp (KR_keyword, "/dev/sdbt8", 10) == 0)
d14237 1
a14237 1
return dev_storage + 1534;
d14249 1
a14249 1
                  if (strncmp (KR_keyword, "/dev/sdat8", 10) == 0)
d14252 1
a14252 1
return dev_storage + 1118;
d14269 1
a14269 1
            case 's':
a14271 15
                case 'n':
                  if (strncmp (KR_keyword, "/dev/cons8", 10) == 0)
                    {
{
return dev_storage + 28;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
d14273 1
a14273 1
                  if (strncmp (KR_keyword, "/dev/sdds8", 10) == 0)
d14276 1
a14276 1
return dev_storage + 2349;
d14288 1
a14288 1
                  if (strncmp (KR_keyword, "/dev/sdcs8", 10) == 0)
d14291 1
a14291 1
return dev_storage + 1935;
d14303 1
a14303 1
                  if (strncmp (KR_keyword, "/dev/sdbs8", 10) == 0)
d14306 1
a14306 1
return dev_storage + 1519;
d14318 1
a14318 1
                  if (strncmp (KR_keyword, "/dev/sdas8", 10) == 0)
d14321 1
a14321 1
return dev_storage + 1103;
d14338 1
a14338 1
            case 'r':
d14342 1
a14342 1
                  if (strncmp (KR_keyword, "/dev/sddr8", 10) == 0)
d14345 1
a14345 1
return dev_storage + 2334;
d14357 1
a14357 1
                  if (strncmp (KR_keyword, "/dev/sdcr8", 10) == 0)
d14360 1
a14360 1
return dev_storage + 1920;
d14372 1
a14372 1
                  if (strncmp (KR_keyword, "/dev/sdbr8", 10) == 0)
d14375 1
a14375 1
return dev_storage + 1504;
d14387 1
a14387 1
                  if (strncmp (KR_keyword, "/dev/sdar8", 10) == 0)
d14390 1
a14390 1
return dev_storage + 1088;
d14407 1
a14407 1
            case 'q':
d14411 1
a14411 1
                  if (strncmp (KR_keyword, "/dev/sddq8", 10) == 0)
d14414 1
a14414 1
return dev_storage + 2319;
d14426 1
a14426 1
                  if (strncmp (KR_keyword, "/dev/sdcq8", 10) == 0)
d14429 1
a14429 1
return dev_storage + 1905;
d14441 1
a14441 1
                  if (strncmp (KR_keyword, "/dev/sdbq8", 10) == 0)
d14444 1
a14444 1
return dev_storage + 1489;
d14456 1
a14456 1
                  if (strncmp (KR_keyword, "/dev/sdaq8", 10) == 0)
d14459 1
a14459 1
return dev_storage + 1073;
d14476 1
a14476 1
            case 'p':
d14480 1
a14480 1
                  if (strncmp (KR_keyword, "/dev/sddp8", 10) == 0)
d14483 1
a14483 1
return dev_storage + 2304;
d14495 1
a14495 1
                  if (strncmp (KR_keyword, "/dev/sdcp8", 10) == 0)
d14498 1
a14498 1
return dev_storage + 1890;
d14510 1
a14510 1
                  if (strncmp (KR_keyword, "/dev/sdbp8", 10) == 0)
d14513 1
a14513 1
return dev_storage + 1474;
d14525 1
a14525 1
                  if (strncmp (KR_keyword, "/dev/sdap8", 10) == 0)
d14528 1
a14528 1
return dev_storage + 1058;
d14545 47
a14591 2
            case 'o':
              switch (KR_keyword [7])
a14592 3
                case 'd':
                  if (strncmp (KR_keyword, "/dev/sddo8", 10) == 0)
                    {
d14594 1
a14594 1
return dev_storage + 2289;
d14597 3
a14599 3
                    }
                  else
                    {
d14604 4
a14607 4
                    }
                case 'c':
                  if (strncmp (KR_keyword, "/dev/sdco8", 10) == 0)
                    {
d14609 1
a14609 1
return dev_storage + 1875;
d14612 3
a14614 3
                    }
                  else
                    {
d14619 6
a14624 3
                    }
                case 'b':
                  if (strncmp (KR_keyword, "/dev/sdbo8", 10) == 0)
d14627 1
a14627 1
return dev_storage + 1459;
d14638 2
a14639 2
                case 'a':
                  if (strncmp (KR_keyword, "/dev/sdao8", 10) == 0)
d14642 1
a14642 1
return dev_storage + 1043;
d14659 2
a14660 2
            case 'n':
              switch (KR_keyword [7])
d14662 2
a14663 2
                case 'd':
                  if (strncmp (KR_keyword, "/dev/sddn8", 10) == 0)
d14666 1
a14666 1
return dev_storage + 2274;
d14677 2
a14678 2
                case 'c':
                  if (strncmp (KR_keyword, "/dev/sdcn8", 10) == 0)
d14681 1
a14681 1
return dev_storage + 1860;
d14692 11
a14702 2
                case 'b':
                  if (strncmp (KR_keyword, "/dev/sdbn8", 10) == 0)
d14705 1
a14705 1
return dev_storage + 1444;
d14716 2
a14717 2
                case 'a':
                  if (strncmp (KR_keyword, "/dev/sdan8", 10) == 0)
d14720 1
a14720 1
return dev_storage + 1028;
d14737 2
a14738 2
            case 'm':
              switch (KR_keyword [7])
d14740 2
a14741 2
                case 'y':
                  if (strncmp (KR_keyword, "/dev/ptym8", 10) == 0)
d14744 1
a14744 1
return dev_storage + 311;
d14755 2
a14756 2
                case 'd':
                  if (strncmp (KR_keyword, "/dev/sddm8", 10) == 0)
d14759 1
a14759 1
return dev_storage + 2259;
d14770 11
a14780 2
                case 'c':
                  if (strncmp (KR_keyword, "/dev/sdcm8", 10) == 0)
d14783 1
a14783 1
return dev_storage + 1845;
d14794 2
a14795 2
                case 'b':
                  if (strncmp (KR_keyword, "/dev/sdbm8", 10) == 0)
d14798 1
a14798 1
return dev_storage + 1429;
d14809 2
a14810 2
                case 'a':
                  if (strncmp (KR_keyword, "/dev/sdam8", 10) == 0)
d14813 1
a14813 1
return dev_storage + 1013;
d14830 9
a14838 2
            case 'l':
              switch (KR_keyword [7])
a14839 3
                case 'd':
                  if (strncmp (KR_keyword, "/dev/sddl8", 10) == 0)
                    {
d14841 1
a14841 1
return dev_storage + 2244;
d14844 2
a14845 3
                    }
                  else
                    {
d14850 7
a14856 1
                    }
d14858 1
a14858 1
                  if (strncmp (KR_keyword, "/dev/sdcl8", 10) == 0)
d14861 1
a14861 1
return dev_storage + 1830;
d14873 1
a14873 1
                  if (strncmp (KR_keyword, "/dev/sdbl8", 10) == 0)
d14876 1
a14876 1
return dev_storage + 1414;
d14888 1
a14888 1
                  if (strncmp (KR_keyword, "/dev/sdal8", 10) == 0)
d14891 1
a14891 1
return dev_storage + 998;
d14908 1
a14908 1
            case 'k':
a14910 15
                case 'd':
                  if (strncmp (KR_keyword, "/dev/sddk8", 10) == 0)
                    {
{
return dev_storage + 2229;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
d14912 1
a14912 1
                  if (strncmp (KR_keyword, "/dev/sdck8", 10) == 0)
d14915 1
a14915 1
return dev_storage + 1815;
d14927 1
a14927 1
                  if (strncmp (KR_keyword, "/dev/sdbk8", 10) == 0)
d14930 1
a14930 1
return dev_storage + 1399;
d14942 1
a14942 1
                  if (strncmp (KR_keyword, "/dev/sdak8", 10) == 0)
d14945 1
a14945 1
return dev_storage + 983;
d14962 1
a14962 1
            case 'j':
d14966 1
a14966 1
                  if (strncmp (KR_keyword, "/dev/sddj8", 10) == 0)
d14969 1
a14969 1
return dev_storage + 2214;
d14981 1
a14981 1
                  if (strncmp (KR_keyword, "/dev/sdcj8", 10) == 0)
d14984 1
a14984 1
return dev_storage + 1800;
d14996 1
a14996 1
                  if (strncmp (KR_keyword, "/dev/sdbj8", 10) == 0)
d14999 1
a14999 1
return dev_storage + 1384;
d15011 1
a15011 1
                  if (strncmp (KR_keyword, "/dev/sdaj8", 10) == 0)
d15014 1
a15014 1
return dev_storage + 968;
d15031 1
a15031 1
            case 'i':
d15035 1
a15035 1
                  if (strncmp (KR_keyword, "/dev/sddi8", 10) == 0)
d15038 1
a15038 1
return dev_storage + 2199;
d15050 1
a15050 1
                  if (strncmp (KR_keyword, "/dev/sdci8", 10) == 0)
d15053 1
a15053 1
return dev_storage + 1785;
d15065 1
a15065 1
                  if (strncmp (KR_keyword, "/dev/sdbi8", 10) == 0)
d15068 1
a15068 1
return dev_storage + 1369;
d15080 1
a15080 1
                  if (strncmp (KR_keyword, "/dev/sdai8", 10) == 0)
d15083 1
a15083 1
return dev_storage + 953;
d15100 1
a15100 1
            case 'h':
d15104 1
a15104 1
                  if (strncmp (KR_keyword, "/dev/sddh8", 10) == 0)
d15107 1
a15107 1
return dev_storage + 2184;
d15119 1
a15119 1
                  if (strncmp (KR_keyword, "/dev/sdch8", 10) == 0)
d15122 1
a15122 1
return dev_storage + 1770;
d15134 1
a15134 1
                  if (strncmp (KR_keyword, "/dev/sdbh8", 10) == 0)
d15137 1
a15137 1
return dev_storage + 1354;
d15149 1
a15149 1
                  if (strncmp (KR_keyword, "/dev/sdah8", 10) == 0)
d15152 1
a15152 1
return dev_storage + 938;
d15169 1
a15169 1
            case 'g':
d15173 1
a15173 1
                  if (strncmp (KR_keyword, "/dev/sddg8", 10) == 0)
d15176 1
a15176 1
return dev_storage + 2169;
d15188 1
a15188 1
                  if (strncmp (KR_keyword, "/dev/sdcg8", 10) == 0)
d15191 1
a15191 1
return dev_storage + 1755;
d15203 1
a15203 1
                  if (strncmp (KR_keyword, "/dev/sdbg8", 10) == 0)
d15206 1
a15206 1
return dev_storage + 1339;
d15218 1
a15218 1
                  if (strncmp (KR_keyword, "/dev/sdag8", 10) == 0)
d15221 1
a15221 1
return dev_storage + 923;
d15238 1
a15238 1
            case 'f':
d15242 1
a15242 1
                  if (strncmp (KR_keyword, "/dev/sddf8", 10) == 0)
d15245 1
a15245 1
return dev_storage + 2154;
d15257 1
a15257 1
                  if (strncmp (KR_keyword, "/dev/sdcf8", 10) == 0)
d15260 1
a15260 1
return dev_storage + 1740;
d15272 1
a15272 1
                  if (strncmp (KR_keyword, "/dev/sdbf8", 10) == 0)
d15275 1
a15275 1
return dev_storage + 1324;
d15287 1
a15287 1
                  if (strncmp (KR_keyword, "/dev/sdaf8", 10) == 0)
d15290 1
a15290 1
return dev_storage + 908;
d15307 1
a15307 1
            case 'e':
d15310 15
d15326 1
a15326 1
                  if (strncmp (KR_keyword, "/dev/sdde8", 10) == 0)
d15329 1
a15329 1
return dev_storage + 2139;
d15341 1
a15341 1
                  if (strncmp (KR_keyword, "/dev/sdce8", 10) == 0)
d15344 1
a15344 1
return dev_storage + 1725;
d15356 1
a15356 1
                  if (strncmp (KR_keyword, "/dev/sdbe8", 10) == 0)
d15359 1
a15359 1
return dev_storage + 1309;
d15371 1
a15371 1
                  if (strncmp (KR_keyword, "/dev/sdae8", 10) == 0)
d15374 1
a15374 1
return dev_storage + 893;
d15391 1
a15391 1
            case 'd':
d15395 1
a15395 1
                  if (strncmp (KR_keyword, "/dev/sddd8", 10) == 0)
d15398 1
a15398 1
return dev_storage + 2124;
d15410 1
a15410 1
                  if (strncmp (KR_keyword, "/dev/sdcd8", 10) == 0)
d15413 1
a15413 1
return dev_storage + 1710;
d15425 1
a15425 1
                  if (strncmp (KR_keyword, "/dev/sdbd8", 10) == 0)
d15428 1
a15428 1
return dev_storage + 1294;
d15440 1
a15440 1
                  if (strncmp (KR_keyword, "/dev/sdad8", 10) == 0)
d15443 1
a15443 1
return dev_storage + 878;
d15460 1
a15460 1
            case 'c':
d15464 1
a15464 1
                  if (strncmp (KR_keyword, "/dev/sddc8", 10) == 0)
d15467 1
a15467 1
return dev_storage + 2109;
d15479 1
a15479 1
                  if (strncmp (KR_keyword, "/dev/sdcc8", 10) == 0)
d15482 1
a15482 1
return dev_storage + 1695;
d15494 1
a15494 1
                  if (strncmp (KR_keyword, "/dev/sdbc8", 10) == 0)
d15497 1
a15497 1
return dev_storage + 1279;
d15509 1
a15509 1
                  if (strncmp (KR_keyword, "/dev/sdac8", 10) == 0)
d15512 1
a15512 1
return dev_storage + 863;
d15529 1
a15529 1
            case 'b':
d15533 1
a15533 1
                  if (strncmp (KR_keyword, "/dev/sddb8", 10) == 0)
d15536 1
a15536 1
return dev_storage + 2094;
d15548 1
a15548 1
                  if (strncmp (KR_keyword, "/dev/sdcb8", 10) == 0)
d15551 1
a15551 1
return dev_storage + 1680;
d15563 1
a15563 1
                  if (strncmp (KR_keyword, "/dev/sdbb8", 10) == 0)
d15566 1
a15566 1
return dev_storage + 1264;
d15578 1
a15578 1
                  if (strncmp (KR_keyword, "/dev/sdab8", 10) == 0)
d15581 1
a15581 1
return dev_storage + 848;
d15598 1
a15598 1
            case 'a':
d15602 1
a15602 1
                  if (strncmp (KR_keyword, "/dev/sdda8", 10) == 0)
d15605 1
a15605 1
return dev_storage + 2079;
d15617 1
a15617 1
                  if (strncmp (KR_keyword, "/dev/sdca8", 10) == 0)
d15620 1
a15620 1
return dev_storage + 1665;
d15632 1
a15632 1
                  if (strncmp (KR_keyword, "/dev/sdba8", 10) == 0)
d15635 1
a15635 1
return dev_storage + 1249;
d15647 1
a15647 1
                  if (strncmp (KR_keyword, "/dev/sdaa8", 10) == 0)
d15650 1
a15650 1
return dev_storage + 833;
d15667 2
a15668 2
            case 'S':
              if (strncmp (KR_keyword, "/dev/ttyS8", 10) == 0)
d15670 3
d15674 1
a15674 1
return dev_storage + 2585;
d15677 3
a15679 3
                }
              else
                {
d15684 4
a15687 4
                }
            case '9':
              if (strncmp (KR_keyword, "/dev/nst98", 10) == 0)
                {
d15689 1
a15689 1
return dev_storage + 205;
d15692 3
a15694 3
                }
              else
                {
d15699 4
a15702 4
                }
            case '8':
              if (strncmp (KR_keyword, "/dev/nst88", 10) == 0)
                {
d15704 1
a15704 1
return dev_storage + 195;
d15707 3
a15709 3
                }
              else
                {
d15714 4
a15717 4
                }
            case '7':
              if (strncmp (KR_keyword, "/dev/nst78", 10) == 0)
                {
d15719 1
a15719 1
return dev_storage + 185;
d15722 3
a15724 3
                }
              else
                {
d15729 2
a15730 11
                }
            case '6':
              if (strncmp (KR_keyword, "/dev/nst68", 10) == 0)
                {
{
return dev_storage + 175;

}
                }
              else
                {
d15736 2
a15737 2
            case '5':
              switch (KR_keyword [5])
d15739 2
a15740 2
                case 'p':
                  if (strncmp (KR_keyword, "/dev/pty58", 10) == 0)
d15743 1
a15743 1
return dev_storage + 297;
d15754 2
a15755 2
                case 'n':
                  if (strncmp (KR_keyword, "/dev/nst58", 10) == 0)
d15758 1
a15758 1
return dev_storage + 165;
d15769 2
a15770 11
                default:
{
return	NULL;

}
                }
            case '4':
              switch (KR_keyword [5])
                {
                case 'p':
                  if (strncmp (KR_keyword, "/dev/pty48", 10) == 0)
d15773 1
a15773 1
return dev_storage + 287;
d15784 2
a15785 2
                case 'n':
                  if (strncmp (KR_keyword, "/dev/nst48", 10) == 0)
d15788 1
a15788 1
return dev_storage + 155;
d15805 2
a15806 2
            case '3':
              switch (KR_keyword [5])
d15808 2
a15809 2
                case 'p':
                  if (strncmp (KR_keyword, "/dev/pty38", 10) == 0)
d15812 1
a15812 1
return dev_storage + 277;
d15823 2
a15824 2
                case 'n':
                  if (strncmp (KR_keyword, "/dev/nst38", 10) == 0)
d15827 1
a15827 1
return dev_storage + 145;
d15838 2
a15839 11
                default:
{
return	NULL;

}
                }
            case '2':
              switch (KR_keyword [5])
                {
                case 'p':
                  if (strncmp (KR_keyword, "/dev/pty28", 10) == 0)
d15842 1
a15842 1
return dev_storage + 267;
d15853 2
a15854 2
                case 'n':
                  if (strncmp (KR_keyword, "/dev/nst28", 10) == 0)
d15857 1
a15857 1
return dev_storage + 135;
d15874 2
a15875 2
            case '1':
              switch (KR_keyword [5])
d15877 2
a15878 2
                case 's':
                  if (strncmp (KR_keyword, "/dev/st118", 10) == 0)
d15881 1
a15881 1
return dev_storage + 2566;
d15892 2
a15893 2
                case 'p':
                  if (strncmp (KR_keyword, "/dev/pty18", 10) == 0)
d15896 1
a15896 1
return dev_storage + 257;
d15907 2
a15908 2
                case 'n':
                  if (strncmp (KR_keyword, "/dev/nst18", 10) == 0)
d15911 1
a15911 1
return dev_storage + 125;
d15922 10
a15931 1
                default:
d15936 2
a15937 4
                }
            case '0':
              if (strncmp (KR_keyword, "/dev/st108", 10) == 0)
                {
d15939 1
a15939 1
return dev_storage + 2556;
d15943 2
a15944 1
              else
d15946 3
d15950 1
a15950 1
return	NULL;
d15953 3
a15955 2
                }
            default:
d15960 1
a15960 7
            }
        case '7':
          switch (KR_keyword [8])
            {
            case 'z':
              switch (KR_keyword [7])
                {
d15962 1
a15962 1
                  if (strncmp (KR_keyword, "/dev/sdcz7", 10) == 0)
d15965 1
a15965 1
return dev_storage + 2039;
d15977 1
a15977 1
                  if (strncmp (KR_keyword, "/dev/sdbz7", 10) == 0)
d15980 1
a15980 1
return dev_storage + 1623;
d15992 1
a15992 1
                  if (strncmp (KR_keyword, "/dev/sdaz7", 10) == 0)
d15995 1
a15995 1
return dev_storage + 1207;
d16012 1
a16012 1
            case 'y':
d16015 15
d16031 1
a16031 1
                  if (strncmp (KR_keyword, "/dev/sdcy7", 10) == 0)
d16034 1
a16034 1
return dev_storage + 2024;
d16046 1
a16046 1
                  if (strncmp (KR_keyword, "/dev/sdby7", 10) == 0)
d16049 1
a16049 1
return dev_storage + 1608;
d16061 1
a16061 1
                  if (strncmp (KR_keyword, "/dev/sday7", 10) == 0)
d16064 1
a16064 1
return dev_storage + 1192;
d16081 1
a16081 1
            case 'x':
d16085 1
a16085 1
                  if (strncmp (KR_keyword, "/dev/sddx7", 10) == 0)
d16088 1
a16088 1
return dev_storage + 2423;
d16100 1
a16100 1
                  if (strncmp (KR_keyword, "/dev/sdcx7", 10) == 0)
d16103 1
a16103 1
return dev_storage + 2009;
d16115 1
a16115 1
                  if (strncmp (KR_keyword, "/dev/sdbx7", 10) == 0)
d16118 1
a16118 1
return dev_storage + 1593;
d16130 1
a16130 1
                  if (strncmp (KR_keyword, "/dev/sdax7", 10) == 0)
d16133 1
a16133 1
return dev_storage + 1177;
d16150 1
a16150 1
            case 'w':
d16154 1
a16154 1
                  if (strncmp (KR_keyword, "/dev/sddw7", 10) == 0)
d16157 1
a16157 1
return dev_storage + 2408;
d16169 1
a16169 1
                  if (strncmp (KR_keyword, "/dev/sdcw7", 10) == 0)
d16172 1
a16172 1
return dev_storage + 1994;
d16184 1
a16184 1
                  if (strncmp (KR_keyword, "/dev/sdbw7", 10) == 0)
d16187 1
a16187 1
return dev_storage + 1578;
d16199 1
a16199 1
                  if (strncmp (KR_keyword, "/dev/sdaw7", 10) == 0)
d16202 1
a16202 1
return dev_storage + 1162;
d16219 1
a16219 1
            case 'v':
d16223 1
a16223 1
                  if (strncmp (KR_keyword, "/dev/sddv7", 10) == 0)
d16226 1
a16226 1
return dev_storage + 2393;
d16238 1
a16238 1
                  if (strncmp (KR_keyword, "/dev/sdcv7", 10) == 0)
d16241 1
a16241 1
return dev_storage + 1979;
d16253 1
a16253 1
                  if (strncmp (KR_keyword, "/dev/sdbv7", 10) == 0)
d16256 1
a16256 1
return dev_storage + 1563;
d16268 1
a16268 1
                  if (strncmp (KR_keyword, "/dev/sdav7", 10) == 0)
d16271 1
a16271 1
return dev_storage + 1147;
d16288 1
a16288 1
            case 'u':
d16292 1
a16292 1
                  if (strncmp (KR_keyword, "/dev/sddu7", 10) == 0)
d16295 1
a16295 1
return dev_storage + 2378;
d16307 1
a16307 1
                  if (strncmp (KR_keyword, "/dev/sdcu7", 10) == 0)
d16310 1
a16310 1
return dev_storage + 1964;
d16322 1
a16322 1
                  if (strncmp (KR_keyword, "/dev/sdbu7", 10) == 0)
d16325 1
a16325 1
return dev_storage + 1548;
d16337 1
a16337 1
                  if (strncmp (KR_keyword, "/dev/sdau7", 10) == 0)
d16340 1
a16340 1
return dev_storage + 1132;
d16357 1
a16357 1
            case 't':
d16361 1
a16361 1
                  if (strncmp (KR_keyword, "/dev/sddt7", 10) == 0)
d16364 1
a16364 1
return dev_storage + 2363;
d16376 1
a16376 1
                  if (strncmp (KR_keyword, "/dev/sdct7", 10) == 0)
d16379 1
a16379 1
return dev_storage + 1949;
d16391 1
a16391 1
                  if (strncmp (KR_keyword, "/dev/sdbt7", 10) == 0)
d16394 1
a16394 1
return dev_storage + 1533;
d16406 1
a16406 1
                  if (strncmp (KR_keyword, "/dev/sdat7", 10) == 0)
d16409 1
a16409 1
return dev_storage + 1117;
d16426 1
a16426 1
            case 's':
a16428 15
                case 'n':
                  if (strncmp (KR_keyword, "/dev/cons7", 10) == 0)
                    {
{
return dev_storage + 27;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
d16430 1
a16430 1
                  if (strncmp (KR_keyword, "/dev/sdds7", 10) == 0)
d16433 1
a16433 1
return dev_storage + 2348;
d16445 1
a16445 1
                  if (strncmp (KR_keyword, "/dev/sdcs7", 10) == 0)
d16448 1
a16448 1
return dev_storage + 1934;
d16460 1
a16460 1
                  if (strncmp (KR_keyword, "/dev/sdbs7", 10) == 0)
d16463 1
a16463 1
return dev_storage + 1518;
d16475 1
a16475 1
                  if (strncmp (KR_keyword, "/dev/sdas7", 10) == 0)
d16478 1
a16478 1
return dev_storage + 1102;
d16495 1
a16495 1
            case 'r':
d16499 1
a16499 1
                  if (strncmp (KR_keyword, "/dev/sddr7", 10) == 0)
d16502 1
a16502 1
return dev_storage + 2333;
d16514 1
a16514 1
                  if (strncmp (KR_keyword, "/dev/sdcr7", 10) == 0)
d16517 1
a16517 1
return dev_storage + 1919;
d16529 1
a16529 1
                  if (strncmp (KR_keyword, "/dev/sdbr7", 10) == 0)
d16532 1
a16532 1
return dev_storage + 1503;
d16544 1
a16544 1
                  if (strncmp (KR_keyword, "/dev/sdar7", 10) == 0)
d16547 1
a16547 1
return dev_storage + 1087;
d16564 1
a16564 1
            case 'q':
d16568 1
a16568 1
                  if (strncmp (KR_keyword, "/dev/sddq7", 10) == 0)
d16571 1
a16571 1
return dev_storage + 2318;
d16583 1
a16583 1
                  if (strncmp (KR_keyword, "/dev/sdcq7", 10) == 0)
d16586 1
a16586 1
return dev_storage + 1904;
d16598 1
a16598 1
                  if (strncmp (KR_keyword, "/dev/sdbq7", 10) == 0)
d16601 1
a16601 1
return dev_storage + 1488;
d16613 1
a16613 1
                  if (strncmp (KR_keyword, "/dev/sdaq7", 10) == 0)
d16616 1
a16616 1
return dev_storage + 1072;
d16633 2
a16634 2
            case 'p':
              switch (KR_keyword [7])
a16635 3
                case 'd':
                  if (strncmp (KR_keyword, "/dev/sddp7", 10) == 0)
                    {
d16637 1
a16637 1
return dev_storage + 2303;
d16640 3
a16642 3
                    }
                  else
                    {
d16647 4
a16650 4
                    }
                case 'c':
                  if (strncmp (KR_keyword, "/dev/sdcp7", 10) == 0)
                    {
d16652 1
a16652 1
return dev_storage + 1889;
d16655 3
a16657 3
                    }
                  else
                    {
d16662 4
a16665 26
                    }
                case 'b':
                  if (strncmp (KR_keyword, "/dev/sdbp7", 10) == 0)
                    {
{
return dev_storage + 1473;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'a':
                  if (strncmp (KR_keyword, "/dev/sdap7", 10) == 0)
                    {
{
return dev_storage + 1057;

}
                    }
                  else
                    {
d16667 1
a16667 1
return	NULL;
d16670 3
a16672 2
                    }
                default:
d16678 2
a16679 2
            case 'o':
              switch (KR_keyword [7])
a16680 3
                case 'd':
                  if (strncmp (KR_keyword, "/dev/sddo7", 10) == 0)
                    {
d16682 1
a16682 1
return dev_storage + 2288;
d16685 3
a16687 3
                    }
                  else
                    {
d16692 4
a16695 4
                    }
                case 'c':
                  if (strncmp (KR_keyword, "/dev/sdco7", 10) == 0)
                    {
d16697 1
a16697 1
return dev_storage + 1874;
d16700 3
a16702 3
                    }
                  else
                    {
d16707 6
a16712 3
                    }
                case 'b':
                  if (strncmp (KR_keyword, "/dev/sdbo7", 10) == 0)
d16715 1
a16715 1
return dev_storage + 1458;
d16726 2
a16727 2
                case 'a':
                  if (strncmp (KR_keyword, "/dev/sdao7", 10) == 0)
d16730 1
a16730 1
return dev_storage + 1042;
d16747 2
a16748 2
            case 'n':
              switch (KR_keyword [7])
d16750 2
a16751 2
                case 'd':
                  if (strncmp (KR_keyword, "/dev/sddn7", 10) == 0)
d16754 1
a16754 1
return dev_storage + 2273;
d16765 2
a16766 2
                case 'c':
                  if (strncmp (KR_keyword, "/dev/sdcn7", 10) == 0)
d16769 1
a16769 1
return dev_storage + 1859;
d16780 11
a16790 2
                case 'b':
                  if (strncmp (KR_keyword, "/dev/sdbn7", 10) == 0)
d16793 1
a16793 1
return dev_storage + 1443;
d16804 2
a16805 2
                case 'a':
                  if (strncmp (KR_keyword, "/dev/sdan7", 10) == 0)
d16808 1
a16808 1
return dev_storage + 1027;
d16825 2
a16826 2
            case 'm':
              switch (KR_keyword [7])
d16828 2
a16829 2
                case 'y':
                  if (strncmp (KR_keyword, "/dev/ptym7", 10) == 0)
d16832 1
a16832 1
return dev_storage + 310;
d16843 2
a16844 2
                case 'd':
                  if (strncmp (KR_keyword, "/dev/sddm7", 10) == 0)
d16847 1
a16847 1
return dev_storage + 2258;
d16858 11
a16868 2
                case 'c':
                  if (strncmp (KR_keyword, "/dev/sdcm7", 10) == 0)
d16871 1
a16871 1
return dev_storage + 1844;
d16882 2
a16883 2
                case 'b':
                  if (strncmp (KR_keyword, "/dev/sdbm7", 10) == 0)
d16886 1
a16886 1
return dev_storage + 1428;
d16897 2
a16898 2
                case 'a':
                  if (strncmp (KR_keyword, "/dev/sdam7", 10) == 0)
d16901 1
a16901 1
return dev_storage + 1012;
d16918 9
a16926 2
            case 'l':
              switch (KR_keyword [7])
a16927 3
                case 'd':
                  if (strncmp (KR_keyword, "/dev/sddl7", 10) == 0)
                    {
d16929 1
a16929 1
return dev_storage + 2243;
d16932 2
a16933 3
                    }
                  else
                    {
d16938 7
a16944 1
                    }
d16946 1
a16946 1
                  if (strncmp (KR_keyword, "/dev/sdcl7", 10) == 0)
d16949 1
a16949 1
return dev_storage + 1829;
d16961 1
a16961 1
                  if (strncmp (KR_keyword, "/dev/sdbl7", 10) == 0)
d16964 1
a16964 1
return dev_storage + 1413;
d16976 1
a16976 1
                  if (strncmp (KR_keyword, "/dev/sdal7", 10) == 0)
d16979 1
a16979 1
return dev_storage + 997;
d16996 1
a16996 1
            case 'k':
a16998 15
                case 'd':
                  if (strncmp (KR_keyword, "/dev/sddk7", 10) == 0)
                    {
{
return dev_storage + 2228;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
d17000 1
a17000 1
                  if (strncmp (KR_keyword, "/dev/sdck7", 10) == 0)
d17003 1
a17003 1
return dev_storage + 1814;
d17015 1
a17015 1
                  if (strncmp (KR_keyword, "/dev/sdbk7", 10) == 0)
d17018 1
a17018 1
return dev_storage + 1398;
d17030 1
a17030 1
                  if (strncmp (KR_keyword, "/dev/sdak7", 10) == 0)
d17033 1
a17033 1
return dev_storage + 982;
d17050 1
a17050 1
            case 'j':
d17054 1
a17054 1
                  if (strncmp (KR_keyword, "/dev/sddj7", 10) == 0)
d17057 1
a17057 1
return dev_storage + 2213;
d17069 1
a17069 1
                  if (strncmp (KR_keyword, "/dev/sdcj7", 10) == 0)
d17072 1
a17072 1
return dev_storage + 1799;
d17084 1
a17084 1
                  if (strncmp (KR_keyword, "/dev/sdbj7", 10) == 0)
d17087 1
a17087 1
return dev_storage + 1383;
d17099 1
a17099 1
                  if (strncmp (KR_keyword, "/dev/sdaj7", 10) == 0)
d17102 1
a17102 1
return dev_storage + 967;
d17119 1
a17119 1
            case 'i':
d17123 1
a17123 1
                  if (strncmp (KR_keyword, "/dev/sddi7", 10) == 0)
d17126 1
a17126 1
return dev_storage + 2198;
d17138 1
a17138 1
                  if (strncmp (KR_keyword, "/dev/sdci7", 10) == 0)
d17141 1
a17141 1
return dev_storage + 1784;
d17153 1
a17153 1
                  if (strncmp (KR_keyword, "/dev/sdbi7", 10) == 0)
d17156 1
a17156 1
return dev_storage + 1368;
d17168 1
a17168 1
                  if (strncmp (KR_keyword, "/dev/sdai7", 10) == 0)
d17171 1
a17171 1
return dev_storage + 952;
d17188 1
a17188 1
            case 'h':
d17192 1
a17192 1
                  if (strncmp (KR_keyword, "/dev/sddh7", 10) == 0)
d17195 1
a17195 1
return dev_storage + 2183;
d17207 1
a17207 1
                  if (strncmp (KR_keyword, "/dev/sdch7", 10) == 0)
d17210 1
a17210 1
return dev_storage + 1769;
d17222 1
a17222 1
                  if (strncmp (KR_keyword, "/dev/sdbh7", 10) == 0)
d17225 1
a17225 1
return dev_storage + 1353;
d17237 1
a17237 1
                  if (strncmp (KR_keyword, "/dev/sdah7", 10) == 0)
d17240 1
a17240 1
return dev_storage + 937;
d17257 1
a17257 1
            case 'g':
d17261 1
a17261 1
                  if (strncmp (KR_keyword, "/dev/sddg7", 10) == 0)
d17264 1
a17264 1
return dev_storage + 2168;
d17276 1
a17276 1
                  if (strncmp (KR_keyword, "/dev/sdcg7", 10) == 0)
d17279 1
a17279 1
return dev_storage + 1754;
d17291 1
a17291 1
                  if (strncmp (KR_keyword, "/dev/sdbg7", 10) == 0)
d17294 1
a17294 1
return dev_storage + 1338;
d17306 1
a17306 1
                  if (strncmp (KR_keyword, "/dev/sdag7", 10) == 0)
d17309 1
a17309 1
return dev_storage + 922;
d17326 1
a17326 1
            case 'f':
d17330 1
a17330 1
                  if (strncmp (KR_keyword, "/dev/sddf7", 10) == 0)
d17333 1
a17333 1
return dev_storage + 2153;
d17345 1
a17345 1
                  if (strncmp (KR_keyword, "/dev/sdcf7", 10) == 0)
d17348 1
a17348 1
return dev_storage + 1739;
d17360 1
a17360 1
                  if (strncmp (KR_keyword, "/dev/sdbf7", 10) == 0)
d17363 1
a17363 1
return dev_storage + 1323;
d17375 1
a17375 1
                  if (strncmp (KR_keyword, "/dev/sdaf7", 10) == 0)
d17378 1
a17378 1
return dev_storage + 907;
d17395 1
a17395 1
            case 'e':
d17398 15
d17414 1
a17414 1
                  if (strncmp (KR_keyword, "/dev/sdde7", 10) == 0)
d17417 1
a17417 1
return dev_storage + 2138;
d17429 1
a17429 1
                  if (strncmp (KR_keyword, "/dev/sdce7", 10) == 0)
d17432 1
a17432 1
return dev_storage + 1724;
d17444 1
a17444 1
                  if (strncmp (KR_keyword, "/dev/sdbe7", 10) == 0)
d17447 1
a17447 1
return dev_storage + 1308;
d17459 1
a17459 1
                  if (strncmp (KR_keyword, "/dev/sdae7", 10) == 0)
d17462 1
a17462 1
return dev_storage + 892;
d17479 1
a17479 1
            case 'd':
d17483 1
a17483 1
                  if (strncmp (KR_keyword, "/dev/sddd7", 10) == 0)
d17486 1
a17486 1
return dev_storage + 2123;
d17498 1
a17498 1
                  if (strncmp (KR_keyword, "/dev/sdcd7", 10) == 0)
d17501 1
a17501 1
return dev_storage + 1709;
d17513 1
a17513 1
                  if (strncmp (KR_keyword, "/dev/sdbd7", 10) == 0)
d17516 1
a17516 1
return dev_storage + 1293;
d17528 1
a17528 1
                  if (strncmp (KR_keyword, "/dev/sdad7", 10) == 0)
d17531 1
a17531 1
return dev_storage + 877;
d17548 1
a17548 1
            case 'c':
d17552 1
a17552 1
                  if (strncmp (KR_keyword, "/dev/sddc7", 10) == 0)
d17555 1
a17555 1
return dev_storage + 2108;
d17567 1
a17567 1
                  if (strncmp (KR_keyword, "/dev/sdcc7", 10) == 0)
d17570 1
a17570 1
return dev_storage + 1694;
d17582 1
a17582 1
                  if (strncmp (KR_keyword, "/dev/sdbc7", 10) == 0)
d17585 1
a17585 1
return dev_storage + 1278;
d17597 1
a17597 1
                  if (strncmp (KR_keyword, "/dev/sdac7", 10) == 0)
d17600 1
a17600 1
return dev_storage + 862;
d17617 1
a17617 1
            case 'b':
d17621 1
a17621 1
                  if (strncmp (KR_keyword, "/dev/sddb7", 10) == 0)
d17624 1
a17624 1
return dev_storage + 2093;
d17636 1
a17636 1
                  if (strncmp (KR_keyword, "/dev/sdcb7", 10) == 0)
d17639 1
a17639 1
return dev_storage + 1679;
d17651 1
a17651 1
                  if (strncmp (KR_keyword, "/dev/sdbb7", 10) == 0)
d17654 1
a17654 1
return dev_storage + 1263;
d17666 1
a17666 1
                  if (strncmp (KR_keyword, "/dev/sdab7", 10) == 0)
d17669 1
a17669 1
return dev_storage + 847;
d17686 1
a17686 1
            case 'a':
d17690 1
a17690 1
                  if (strncmp (KR_keyword, "/dev/sdda7", 10) == 0)
d17693 1
a17693 1
return dev_storage + 2078;
d17705 1
a17705 1
                  if (strncmp (KR_keyword, "/dev/sdca7", 10) == 0)
d17708 1
a17708 1
return dev_storage + 1664;
d17720 1
a17720 1
                  if (strncmp (KR_keyword, "/dev/sdba7", 10) == 0)
d17723 1
a17723 1
return dev_storage + 1248;
d17735 1
a17735 1
                  if (strncmp (KR_keyword, "/dev/sdaa7", 10) == 0)
d17738 1
a17738 1
return dev_storage + 832;
d17755 2
a17756 2
            case 'S':
              if (strncmp (KR_keyword, "/dev/ttyS7", 10) == 0)
d17758 2
a17759 77
{
return dev_storage + 2584;

}
                }
              else
                {
{
return	NULL;

}
                }
            case '9':
              if (strncmp (KR_keyword, "/dev/nst97", 10) == 0)
                {
{
return dev_storage + 204;

}
                }
              else
                {
{
return	NULL;

}
                }
            case '8':
              if (strncmp (KR_keyword, "/dev/nst87", 10) == 0)
                {
{
return dev_storage + 194;

}
                }
              else
                {
{
return	NULL;

}
                }
            case '7':
              if (strncmp (KR_keyword, "/dev/nst77", 10) == 0)
                {
{
return dev_storage + 184;

}
                }
              else
                {
{
return	NULL;

}
                }
            case '6':
              if (strncmp (KR_keyword, "/dev/nst67", 10) == 0)
                {
{
return dev_storage + 174;

}
                }
              else
                {
{
return	NULL;

}
                }
            case '5':
              switch (KR_keyword [5])
                {
                case 'p':
                  if (strncmp (KR_keyword, "/dev/pty57", 10) == 0)
d17762 1
a17762 1
return dev_storage + 296;
d17773 2
a17774 2
                case 'n':
                  if (strncmp (KR_keyword, "/dev/nst57", 10) == 0)
d17777 1
a17777 1
return dev_storage + 164;
d17788 2
a17789 11
                default:
{
return	NULL;

}
                }
            case '4':
              switch (KR_keyword [5])
                {
                case 'p':
                  if (strncmp (KR_keyword, "/dev/pty47", 10) == 0)
d17792 1
a17792 1
return dev_storage + 286;
d17802 3
a17804 3
                    }
                case 'n':
                  if (strncmp (KR_keyword, "/dev/nst47", 10) == 0)
d17807 1
a17807 1
return dev_storage + 154;
d17824 2
a17825 2
            case '3':
              switch (KR_keyword [5])
d17827 2
a17828 2
                case 'p':
                  if (strncmp (KR_keyword, "/dev/pty37", 10) == 0)
d17831 1
a17831 1
return dev_storage + 276;
d17842 2
a17843 2
                case 'n':
                  if (strncmp (KR_keyword, "/dev/nst37", 10) == 0)
d17846 1
a17846 1
return dev_storage + 144;
d17857 2
a17858 11
                default:
{
return	NULL;

}
                }
            case '2':
              switch (KR_keyword [5])
                {
                case 's':
                  if (strncmp (KR_keyword, "/dev/st127", 10) == 0)
d17861 1
a17861 1
return dev_storage + 2575;
d17872 2
a17873 2
                case 'p':
                  if (strncmp (KR_keyword, "/dev/pty27", 10) == 0)
d17876 1
a17876 1
return dev_storage + 266;
d17887 11
a17897 2
                case 'n':
                  if (strncmp (KR_keyword, "/dev/nst27", 10) == 0)
d17900 1
a17900 1
return dev_storage + 134;
d17911 2
a17912 11
                default:
{
return	NULL;

}
                }
            case '1':
              switch (KR_keyword [5])
                {
                case 's':
                  if (strncmp (KR_keyword, "/dev/st117", 10) == 0)
d17915 1
a17915 1
return dev_storage + 2565;
d17926 2
a17927 2
                case 'p':
                  if (strncmp (KR_keyword, "/dev/pty17", 10) == 0)
d17930 1
a17930 1
return dev_storage + 256;
d17941 2
a17942 2
                case 'n':
                  if (strncmp (KR_keyword, "/dev/nst17", 10) == 0)
d17945 1
a17945 1
return dev_storage + 124;
d17962 2
a17963 2
            case '0':
              if (strncmp (KR_keyword, "/dev/st107", 10) == 0)
d17965 3
d17969 1
a17969 1
return dev_storage + 2555;
d17972 3
a17974 3
                }
              else
                {
d17979 1
a17979 13
                }
            default:
{
return	NULL;

}
            }
        case '6':
          switch (KR_keyword [8])
            {
            case 'z':
              switch (KR_keyword [7])
                {
d17981 1
a17981 1
                  if (strncmp (KR_keyword, "/dev/sdcz6", 10) == 0)
d17984 1
a17984 1
return dev_storage + 2038;
d17996 1
a17996 1
                  if (strncmp (KR_keyword, "/dev/sdbz6", 10) == 0)
d17999 1
a17999 1
return dev_storage + 1622;
d18011 1
a18011 1
                  if (strncmp (KR_keyword, "/dev/sdaz6", 10) == 0)
d18014 1
a18014 1
return dev_storage + 1206;
d18031 1
a18031 1
            case 'y':
d18034 15
d18050 1
a18050 1
                  if (strncmp (KR_keyword, "/dev/sdcy6", 10) == 0)
d18053 1
a18053 1
return dev_storage + 2023;
d18065 1
a18065 1
                  if (strncmp (KR_keyword, "/dev/sdby6", 10) == 0)
d18068 1
a18068 1
return dev_storage + 1607;
d18080 1
a18080 1
                  if (strncmp (KR_keyword, "/dev/sday6", 10) == 0)
d18083 1
a18083 1
return dev_storage + 1191;
d18100 1
a18100 1
            case 'x':
d18104 1
a18104 1
                  if (strncmp (KR_keyword, "/dev/sddx6", 10) == 0)
d18107 1
a18107 1
return dev_storage + 2422;
d18119 1
a18119 1
                  if (strncmp (KR_keyword, "/dev/sdcx6", 10) == 0)
d18122 1
a18122 1
return dev_storage + 2008;
d18134 1
a18134 1
                  if (strncmp (KR_keyword, "/dev/sdbx6", 10) == 0)
d18137 1
a18137 1
return dev_storage + 1592;
d18149 1
a18149 1
                  if (strncmp (KR_keyword, "/dev/sdax6", 10) == 0)
d18152 1
a18152 1
return dev_storage + 1176;
d18169 1
a18169 1
            case 'w':
d18173 1
a18173 1
                  if (strncmp (KR_keyword, "/dev/sddw6", 10) == 0)
d18176 1
a18176 1
return dev_storage + 2407;
d18188 1
a18188 1
                  if (strncmp (KR_keyword, "/dev/sdcw6", 10) == 0)
d18191 1
a18191 1
return dev_storage + 1993;
d18203 1
a18203 1
                  if (strncmp (KR_keyword, "/dev/sdbw6", 10) == 0)
d18206 1
a18206 1
return dev_storage + 1577;
d18218 1
a18218 1
                  if (strncmp (KR_keyword, "/dev/sdaw6", 10) == 0)
d18221 1
a18221 1
return dev_storage + 1161;
d18238 1
a18238 1
            case 'v':
d18242 1
a18242 1
                  if (strncmp (KR_keyword, "/dev/sddv6", 10) == 0)
d18245 1
a18245 1
return dev_storage + 2392;
d18257 1
a18257 1
                  if (strncmp (KR_keyword, "/dev/sdcv6", 10) == 0)
d18260 1
a18260 1
return dev_storage + 1978;
d18272 1
a18272 1
                  if (strncmp (KR_keyword, "/dev/sdbv6", 10) == 0)
d18275 1
a18275 1
return dev_storage + 1562;
d18287 1
a18287 1
                  if (strncmp (KR_keyword, "/dev/sdav6", 10) == 0)
d18290 1
a18290 1
return dev_storage + 1146;
d18307 1
a18307 1
            case 'u':
d18311 1
a18311 1
                  if (strncmp (KR_keyword, "/dev/sddu6", 10) == 0)
d18314 1
a18314 1
return dev_storage + 2377;
d18326 1
a18326 1
                  if (strncmp (KR_keyword, "/dev/sdcu6", 10) == 0)
d18329 1
a18329 1
return dev_storage + 1963;
d18341 1
a18341 1
                  if (strncmp (KR_keyword, "/dev/sdbu6", 10) == 0)
d18344 1
a18344 1
return dev_storage + 1547;
d18356 1
a18356 1
                  if (strncmp (KR_keyword, "/dev/sdau6", 10) == 0)
d18359 1
a18359 1
return dev_storage + 1131;
d18376 1
a18376 1
            case 't':
d18380 1
a18380 1
                  if (strncmp (KR_keyword, "/dev/sddt6", 10) == 0)
d18383 1
a18383 1
return dev_storage + 2362;
d18395 1
a18395 1
                  if (strncmp (KR_keyword, "/dev/sdct6", 10) == 0)
d18398 1
a18398 1
return dev_storage + 1948;
d18410 1
a18410 1
                  if (strncmp (KR_keyword, "/dev/sdbt6", 10) == 0)
d18413 1
a18413 1
return dev_storage + 1532;
d18425 1
a18425 1
                  if (strncmp (KR_keyword, "/dev/sdat6", 10) == 0)
d18428 1
a18428 1
return dev_storage + 1116;
d18445 1
a18445 1
            case 's':
a18447 15
                case 'n':
                  if (strncmp (KR_keyword, "/dev/cons6", 10) == 0)
                    {
{
return dev_storage + 26;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
d18449 1
a18449 1
                  if (strncmp (KR_keyword, "/dev/sdds6", 10) == 0)
d18452 1
a18452 1
return dev_storage + 2347;
d18464 1
a18464 1
                  if (strncmp (KR_keyword, "/dev/sdcs6", 10) == 0)
d18467 1
a18467 1
return dev_storage + 1933;
d18479 1
a18479 1
                  if (strncmp (KR_keyword, "/dev/sdbs6", 10) == 0)
d18482 1
a18482 1
return dev_storage + 1517;
d18494 1
a18494 1
                  if (strncmp (KR_keyword, "/dev/sdas6", 10) == 0)
d18497 1
a18497 1
return dev_storage + 1101;
d18514 1
a18514 1
            case 'r':
d18518 1
a18518 1
                  if (strncmp (KR_keyword, "/dev/sddr6", 10) == 0)
d18521 1
a18521 1
return dev_storage + 2332;
d18533 1
a18533 1
                  if (strncmp (KR_keyword, "/dev/sdcr6", 10) == 0)
d18536 1
a18536 1
return dev_storage + 1918;
d18548 1
a18548 1
                  if (strncmp (KR_keyword, "/dev/sdbr6", 10) == 0)
d18551 1
a18551 1
return dev_storage + 1502;
d18563 1
a18563 1
                  if (strncmp (KR_keyword, "/dev/sdar6", 10) == 0)
d18566 1
a18566 1
return dev_storage + 1086;
d18583 1
a18583 1
            case 'q':
d18587 1
a18587 1
                  if (strncmp (KR_keyword, "/dev/sddq6", 10) == 0)
d18590 1
a18590 1
return dev_storage + 2317;
d18602 1
a18602 1
                  if (strncmp (KR_keyword, "/dev/sdcq6", 10) == 0)
d18605 1
a18605 1
return dev_storage + 1903;
d18617 1
a18617 1
                  if (strncmp (KR_keyword, "/dev/sdbq6", 10) == 0)
d18620 1
a18620 1
return dev_storage + 1487;
d18632 1
a18632 1
                  if (strncmp (KR_keyword, "/dev/sdaq6", 10) == 0)
d18635 1
a18635 1
return dev_storage + 1071;
d18652 1
a18652 1
            case 'p':
d18656 1
a18656 1
                  if (strncmp (KR_keyword, "/dev/sddp6", 10) == 0)
d18659 1
a18659 1
return dev_storage + 2302;
d18671 1
a18671 1
                  if (strncmp (KR_keyword, "/dev/sdcp6", 10) == 0)
d18674 1
a18674 1
return dev_storage + 1888;
d18686 1
a18686 1
                  if (strncmp (KR_keyword, "/dev/sdbp6", 10) == 0)
d18689 1
a18689 1
return dev_storage + 1472;
d18701 1
a18701 1
                  if (strncmp (KR_keyword, "/dev/sdap6", 10) == 0)
d18704 1
a18704 1
return dev_storage + 1056;
d18721 47
a18767 2
            case 'o':
              switch (KR_keyword [7])
a18768 3
                case 'd':
                  if (strncmp (KR_keyword, "/dev/sddo6", 10) == 0)
                    {
d18770 1
a18770 1
return dev_storage + 2287;
d18773 3
a18775 3
                    }
                  else
                    {
d18780 4
a18783 4
                    }
                case 'c':
                  if (strncmp (KR_keyword, "/dev/sdco6", 10) == 0)
                    {
d18785 1
a18785 1
return dev_storage + 1873;
d18788 3
a18790 3
                    }
                  else
                    {
d18795 6
a18800 3
                    }
                case 'b':
                  if (strncmp (KR_keyword, "/dev/sdbo6", 10) == 0)
d18803 1
a18803 1
return dev_storage + 1457;
d18814 2
a18815 2
                case 'a':
                  if (strncmp (KR_keyword, "/dev/sdao6", 10) == 0)
d18818 1
a18818 1
return dev_storage + 1041;
d18835 2
a18836 2
            case 'n':
              switch (KR_keyword [7])
d18838 2
a18839 2
                case 'd':
                  if (strncmp (KR_keyword, "/dev/sddn6", 10) == 0)
d18842 1
a18842 1
return dev_storage + 2272;
d18853 2
a18854 2
                case 'c':
                  if (strncmp (KR_keyword, "/dev/sdcn6", 10) == 0)
d18857 1
a18857 1
return dev_storage + 1858;
d18868 11
a18878 2
                case 'b':
                  if (strncmp (KR_keyword, "/dev/sdbn6", 10) == 0)
d18881 1
a18881 1
return dev_storage + 1442;
d18892 2
a18893 2
                case 'a':
                  if (strncmp (KR_keyword, "/dev/sdan6", 10) == 0)
d18896 1
a18896 1
return dev_storage + 1026;
d18913 2
a18914 2
            case 'm':
              switch (KR_keyword [7])
d18916 17
a18932 2
                case 'y':
                  if (strncmp (KR_keyword, "/dev/ptym6", 10) == 0)
d18935 1
a18935 1
return dev_storage + 309;
d18946 2
a18947 2
                case 'd':
                  if (strncmp (KR_keyword, "/dev/sddm6", 10) == 0)
d18950 1
a18950 1
return dev_storage + 2257;
d18961 11
a18971 2
                case 'c':
                  if (strncmp (KR_keyword, "/dev/sdcm6", 10) == 0)
d18974 1
a18974 1
return dev_storage + 1843;
d18985 2
a18986 2
                case 'b':
                  if (strncmp (KR_keyword, "/dev/sdbm6", 10) == 0)
d18989 1
a18989 1
return dev_storage + 1427;
d19000 2
a19001 2
                case 'a':
                  if (strncmp (KR_keyword, "/dev/sdam6", 10) == 0)
d19004 1
a19004 1
return dev_storage + 1011;
d19021 9
a19029 2
            case 'l':
              switch (KR_keyword [7])
a19030 3
                case 'd':
                  if (strncmp (KR_keyword, "/dev/sddl6", 10) == 0)
                    {
d19032 1
a19032 1
return dev_storage + 2242;
d19035 2
a19036 3
                    }
                  else
                    {
d19041 7
a19047 1
                    }
d19049 1
a19049 1
                  if (strncmp (KR_keyword, "/dev/sdcl6", 10) == 0)
d19052 1
a19052 1
return dev_storage + 1828;
d19064 1
a19064 1
                  if (strncmp (KR_keyword, "/dev/sdbl6", 10) == 0)
d19067 1
a19067 1
return dev_storage + 1412;
d19079 1
a19079 1
                  if (strncmp (KR_keyword, "/dev/sdal6", 10) == 0)
d19082 1
a19082 1
return dev_storage + 996;
d19099 1
a19099 1
            case 'k':
a19101 15
                case 'd':
                  if (strncmp (KR_keyword, "/dev/sddk6", 10) == 0)
                    {
{
return dev_storage + 2227;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
d19103 1
a19103 1
                  if (strncmp (KR_keyword, "/dev/sdck6", 10) == 0)
d19106 1
a19106 1
return dev_storage + 1813;
d19118 1
a19118 1
                  if (strncmp (KR_keyword, "/dev/sdbk6", 10) == 0)
d19121 1
a19121 1
return dev_storage + 1397;
d19133 1
a19133 1
                  if (strncmp (KR_keyword, "/dev/sdak6", 10) == 0)
d19136 1
a19136 1
return dev_storage + 981;
d19153 1
a19153 1
            case 'j':
d19157 1
a19157 1
                  if (strncmp (KR_keyword, "/dev/sddj6", 10) == 0)
d19160 1
a19160 1
return dev_storage + 2212;
d19172 1
a19172 1
                  if (strncmp (KR_keyword, "/dev/sdcj6", 10) == 0)
d19175 1
a19175 1
return dev_storage + 1798;
d19187 1
a19187 1
                  if (strncmp (KR_keyword, "/dev/sdbj6", 10) == 0)
d19190 1
a19190 1
return dev_storage + 1382;
d19202 1
a19202 1
                  if (strncmp (KR_keyword, "/dev/sdaj6", 10) == 0)
d19205 1
a19205 1
return dev_storage + 966;
d19222 1
a19222 1
            case 'i':
d19226 1
a19226 1
                  if (strncmp (KR_keyword, "/dev/sddi6", 10) == 0)
d19229 1
a19229 1
return dev_storage + 2197;
d19241 1
a19241 1
                  if (strncmp (KR_keyword, "/dev/sdci6", 10) == 0)
d19244 1
a19244 1
return dev_storage + 1783;
d19256 1
a19256 1
                  if (strncmp (KR_keyword, "/dev/sdbi6", 10) == 0)
d19259 1
a19259 1
return dev_storage + 1367;
d19271 1
a19271 1
                  if (strncmp (KR_keyword, "/dev/sdai6", 10) == 0)
d19274 1
a19274 1
return dev_storage + 951;
d19291 1
a19291 1
            case 'h':
d19295 1
a19295 1
                  if (strncmp (KR_keyword, "/dev/sddh6", 10) == 0)
d19298 1
a19298 1
return dev_storage + 2182;
d19310 1
a19310 1
                  if (strncmp (KR_keyword, "/dev/sdch6", 10) == 0)
d19313 1
a19313 1
return dev_storage + 1768;
d19325 1
a19325 1
                  if (strncmp (KR_keyword, "/dev/sdbh6", 10) == 0)
d19328 1
a19328 1
return dev_storage + 1352;
d19340 1
a19340 1
                  if (strncmp (KR_keyword, "/dev/sdah6", 10) == 0)
d19343 1
a19343 1
return dev_storage + 936;
d19360 1
a19360 1
            case 'g':
d19364 1
a19364 1
                  if (strncmp (KR_keyword, "/dev/sddg6", 10) == 0)
d19367 1
a19367 1
return dev_storage + 2167;
d19379 1
a19379 1
                  if (strncmp (KR_keyword, "/dev/sdcg6", 10) == 0)
d19382 1
a19382 1
return dev_storage + 1753;
d19394 1
a19394 1
                  if (strncmp (KR_keyword, "/dev/sdbg6", 10) == 0)
d19397 1
a19397 1
return dev_storage + 1337;
d19409 1
a19409 1
                  if (strncmp (KR_keyword, "/dev/sdag6", 10) == 0)
d19412 1
a19412 1
return dev_storage + 921;
d19429 1
a19429 1
            case 'f':
d19433 1
a19433 1
                  if (strncmp (KR_keyword, "/dev/sddf6", 10) == 0)
d19436 1
a19436 1
return dev_storage + 2152;
d19448 1
a19448 1
                  if (strncmp (KR_keyword, "/dev/sdcf6", 10) == 0)
d19451 1
a19451 1
return dev_storage + 1738;
d19463 1
a19463 1
                  if (strncmp (KR_keyword, "/dev/sdbf6", 10) == 0)
d19466 1
a19466 1
return dev_storage + 1322;
d19478 1
a19478 1
                  if (strncmp (KR_keyword, "/dev/sdaf6", 10) == 0)
d19481 1
a19481 1
return dev_storage + 906;
d19498 1
a19498 1
            case 'e':
d19501 15
d19517 1
a19517 1
                  if (strncmp (KR_keyword, "/dev/sdde6", 10) == 0)
d19520 1
a19520 1
return dev_storage + 2137;
d19532 1
a19532 1
                  if (strncmp (KR_keyword, "/dev/sdce6", 10) == 0)
d19535 1
a19535 1
return dev_storage + 1723;
d19547 1
a19547 1
                  if (strncmp (KR_keyword, "/dev/sdbe6", 10) == 0)
d19550 1
a19550 1
return dev_storage + 1307;
d19562 1
a19562 1
                  if (strncmp (KR_keyword, "/dev/sdae6", 10) == 0)
d19565 1
a19565 1
return dev_storage + 891;
d19582 1
a19582 1
            case 'd':
d19586 1
a19586 1
                  if (strncmp (KR_keyword, "/dev/sddd6", 10) == 0)
d19589 1
a19589 1
return dev_storage + 2122;
d19601 1
a19601 1
                  if (strncmp (KR_keyword, "/dev/sdcd6", 10) == 0)
d19604 1
a19604 1
return dev_storage + 1708;
d19616 1
a19616 1
                  if (strncmp (KR_keyword, "/dev/sdbd6", 10) == 0)
d19619 1
a19619 1
return dev_storage + 1292;
d19631 1
a19631 1
                  if (strncmp (KR_keyword, "/dev/sdad6", 10) == 0)
d19634 1
a19634 1
return dev_storage + 876;
d19651 1
a19651 1
            case 'c':
d19655 1
a19655 1
                  if (strncmp (KR_keyword, "/dev/sddc6", 10) == 0)
d19658 1
a19658 1
return dev_storage + 2107;
d19670 1
a19670 1
                  if (strncmp (KR_keyword, "/dev/sdcc6", 10) == 0)
d19673 1
a19673 1
return dev_storage + 1693;
d19685 1
a19685 1
                  if (strncmp (KR_keyword, "/dev/sdbc6", 10) == 0)
d19688 1
a19688 1
return dev_storage + 1277;
d19700 1
a19700 1
                  if (strncmp (KR_keyword, "/dev/sdac6", 10) == 0)
d19703 1
a19703 1
return dev_storage + 861;
d19720 1
a19720 1
            case 'b':
d19724 1
a19724 1
                  if (strncmp (KR_keyword, "/dev/sddb6", 10) == 0)
d19727 1
a19727 1
return dev_storage + 2092;
d19739 1
a19739 1
                  if (strncmp (KR_keyword, "/dev/sdcb6", 10) == 0)
d19742 1
a19742 1
return dev_storage + 1678;
d19754 1
a19754 1
                  if (strncmp (KR_keyword, "/dev/sdbb6", 10) == 0)
d19757 1
a19757 1
return dev_storage + 1262;
d19769 1
a19769 1
                  if (strncmp (KR_keyword, "/dev/sdab6", 10) == 0)
d19772 1
a19772 1
return dev_storage + 846;
d19789 1
a19789 1
            case 'a':
d19793 1
a19793 1
                  if (strncmp (KR_keyword, "/dev/sdda6", 10) == 0)
d19796 1
a19796 1
return dev_storage + 2077;
d19808 1
a19808 1
                  if (strncmp (KR_keyword, "/dev/sdca6", 10) == 0)
d19811 1
a19811 1
return dev_storage + 1663;
d19823 1
a19823 1
                  if (strncmp (KR_keyword, "/dev/sdba6", 10) == 0)
d19826 1
a19826 1
return dev_storage + 1247;
d19838 1
a19838 1
                  if (strncmp (KR_keyword, "/dev/sdaa6", 10) == 0)
d19841 1
a19841 1
return dev_storage + 831;
d19858 2
a19859 2
            case 'S':
              if (strncmp (KR_keyword, "/dev/ttyS6", 10) == 0)
d19861 3
d19865 1
a19865 1
return dev_storage + 2583;
d19868 3
a19870 3
                }
              else
                {
d19875 4
a19878 4
                }
            case '9':
              if (strncmp (KR_keyword, "/dev/nst96", 10) == 0)
                {
d19880 1
a19880 1
return dev_storage + 203;
d19883 3
a19885 3
                }
              else
                {
d19890 4
a19893 4
                }
            case '8':
              if (strncmp (KR_keyword, "/dev/nst86", 10) == 0)
                {
d19895 1
a19895 1
return dev_storage + 193;
d19898 3
a19900 3
                }
              else
                {
d19905 4
a19908 4
                }
            case '7':
              if (strncmp (KR_keyword, "/dev/nst76", 10) == 0)
                {
d19910 1
a19910 1
return dev_storage + 183;
d19913 3
a19915 3
                }
              else
                {
d19920 2
a19921 11
                }
            case '6':
              if (strncmp (KR_keyword, "/dev/nst66", 10) == 0)
                {
{
return dev_storage + 173;

}
                }
              else
                {
d19927 2
a19928 2
            case '5':
              switch (KR_keyword [5])
d19930 2
a19931 2
                case 'p':
                  if (strncmp (KR_keyword, "/dev/pty56", 10) == 0)
d19934 1
a19934 1
return dev_storage + 295;
d19945 2
a19946 2
                case 'n':
                  if (strncmp (KR_keyword, "/dev/nst56", 10) == 0)
d19949 1
a19949 1
return dev_storage + 163;
d19960 2
a19961 11
                default:
{
return	NULL;

}
                }
            case '4':
              switch (KR_keyword [5])
                {
                case 'p':
                  if (strncmp (KR_keyword, "/dev/pty46", 10) == 0)
d19964 1
a19964 1
return dev_storage + 285;
d19975 2
a19976 2
                case 'n':
                  if (strncmp (KR_keyword, "/dev/nst46", 10) == 0)
d19979 1
a19979 1
return dev_storage + 153;
d19996 2
a19997 2
            case '3':
              switch (KR_keyword [5])
d19999 2
a20000 2
                case 'p':
                  if (strncmp (KR_keyword, "/dev/pty36", 10) == 0)
d20003 1
a20003 1
return dev_storage + 275;
d20014 2
a20015 2
                case 'n':
                  if (strncmp (KR_keyword, "/dev/nst36", 10) == 0)
d20018 1
a20018 1
return dev_storage + 143;
d20029 2
a20030 11
                default:
{
return	NULL;

}
                }
            case '2':
              switch (KR_keyword [5])
                {
                case 's':
                  if (strncmp (KR_keyword, "/dev/st126", 10) == 0)
d20033 1
a20033 1
return dev_storage + 2574;
d20044 2
a20045 2
                case 'p':
                  if (strncmp (KR_keyword, "/dev/pty26", 10) == 0)
d20048 1
a20048 16
return dev_storage + 265;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'n':
                  if (strncmp (KR_keyword, "/dev/nst26", 10) == 0)
                    {
{
return dev_storage + 133;
d20065 2
a20066 2
            case '1':
              switch (KR_keyword [5])
d20068 2
a20069 2
                case 's':
                  if (strncmp (KR_keyword, "/dev/st116", 10) == 0)
d20072 1
a20072 1
return dev_storage + 2564;
d20083 2
a20084 2
                case 'p':
                  if (strncmp (KR_keyword, "/dev/pty16", 10) == 0)
d20087 1
a20087 1
return dev_storage + 255;
d20098 2
a20099 2
                case 'n':
                  if (strncmp (KR_keyword, "/dev/nst16", 10) == 0)
d20102 1
a20102 1
return dev_storage + 123;
d20113 2
a20114 2
                case 'c':
                  if (strncmp (KR_keyword, "/dev/com16", 10) == 0)
d20117 1
a20117 1
return dev_storage + 17;
d20134 2
a20135 2
            case '0':
              if (strncmp (KR_keyword, "/dev/st106", 10) == 0)
d20137 2
a20138 41
{
return dev_storage + 2554;

}
                }
              else
                {
{
return	NULL;

}
                }
            default:
{
return	NULL;

}
            }
        case '5':
          switch (KR_keyword [7])
            {
            case 'z':
              if (strncmp (KR_keyword, "/dev/sdz15", 10) == 0)
                {
{
return dev_storage + 799;

}
                }
              else
                {
{
return	NULL;

}
                }
            case 'y':
              switch (KR_keyword [8])
                {
                case 'm':
                  if (strncmp (KR_keyword, "/dev/ptym5", 10) == 0)
d20141 1
a20141 1
return dev_storage + 308;
d20152 2
a20153 2
                case 'S':
                  if (strncmp (KR_keyword, "/dev/ttyS5", 10) == 0)
d20156 1
a20156 1
return dev_storage + 2582;
d20167 2
a20168 2
                case '5':
                  if (strncmp (KR_keyword, "/dev/pty55", 10) == 0)
d20171 1
a20171 1
return dev_storage + 294;
d20182 2
a20183 2
                case '4':
                  if (strncmp (KR_keyword, "/dev/pty45", 10) == 0)
d20186 1
a20186 1
return dev_storage + 284;
d20197 11
a20207 2
                case '3':
                  if (strncmp (KR_keyword, "/dev/pty35", 10) == 0)
d20210 1
a20210 1
return dev_storage + 274;
d20221 2
a20222 2
                case '2':
                  if (strncmp (KR_keyword, "/dev/pty25", 10) == 0)
d20225 1
a20225 1
return dev_storage + 264;
d20236 2
a20237 2
                case '1':
                  switch (KR_keyword [5])
a20238 3
                    case 's':
                      if (strncmp (KR_keyword, "/dev/sdy15", 10) == 0)
                        {
d20240 1
a20240 1
return dev_storage + 784;
d20243 3
a20245 3
                        }
                      else
                        {
d20250 4
a20253 4
                        }
                    case 'p':
                      if (strncmp (KR_keyword, "/dev/pty15", 10) == 0)
                        {
d20255 1
a20255 1
return dev_storage + 254;
d20258 3
a20260 9
                        }
                      else
                        {
{
return	NULL;

}
                        }
                    default:
d20272 2
a20273 2
            case 'x':
              if (strncmp (KR_keyword, "/dev/sdx15", 10) == 0)
d20275 3
d20279 1
a20279 1
return dev_storage + 769;
d20282 3
a20284 3
                }
              else
                {
d20289 4
a20292 4
                }
            case 'w':
              if (strncmp (KR_keyword, "/dev/sdw15", 10) == 0)
                {
d20294 1
a20294 1
return dev_storage + 754;
d20297 3
a20299 3
                }
              else
                {
d20304 4
a20307 4
                }
            case 'v':
              if (strncmp (KR_keyword, "/dev/sdv15", 10) == 0)
                {
d20309 1
a20309 1
return dev_storage + 739;
d20312 3
a20314 3
                }
              else
                {
d20319 11
a20329 4
                }
            case 'u':
              if (strncmp (KR_keyword, "/dev/sdu15", 10) == 0)
                {
d20331 1
a20331 1
return dev_storage + 724;
d20334 2
a20335 3
                }
              else
                {
d20341 2
a20342 2
            case 't':
              switch (KR_keyword [8])
d20344 2
a20345 2
                case '9':
                  if (strncmp (KR_keyword, "/dev/nst95", 10) == 0)
d20348 1
a20348 1
return dev_storage + 202;
d20359 2
a20360 2
                case '8':
                  if (strncmp (KR_keyword, "/dev/nst85", 10) == 0)
d20363 1
a20363 1
return dev_storage + 192;
d20374 2
a20375 2
                case '7':
                  if (strncmp (KR_keyword, "/dev/nst75", 10) == 0)
d20378 1
a20378 1
return dev_storage + 182;
d20389 2
a20390 2
                case '6':
                  if (strncmp (KR_keyword, "/dev/nst65", 10) == 0)
d20393 1
a20393 1
return dev_storage + 172;
d20404 1
a20404 10
                case '5':
                  if (strncmp (KR_keyword, "/dev/nst55", 10) == 0)
                    {
{
return dev_storage + 162;

}
                    }
                  else
                    {
d20409 6
a20414 3
                    }
                case '4':
                  if (strncmp (KR_keyword, "/dev/nst45", 10) == 0)
d20417 1
a20417 1
return dev_storage + 152;
d20428 2
a20429 2
                case '3':
                  if (strncmp (KR_keyword, "/dev/nst35", 10) == 0)
d20432 1
a20432 1
return dev_storage + 142;
d20443 2
a20444 2
                case '2':
                  if (strncmp (KR_keyword, "/dev/nst25", 10) == 0)
d20447 1
a20447 1
return dev_storage + 132;
d20458 2
a20459 2
                case '1':
                  switch (KR_keyword [5])
a20460 3
                    case 's':
                      if (strncmp (KR_keyword, "/dev/sdt15", 10) == 0)
                        {
d20462 1
a20462 1
return dev_storage + 709;
d20465 3
a20467 24
                        }
                      else
                        {
{
return	NULL;

}
                        }
                    case 'n':
                      if (strncmp (KR_keyword, "/dev/nst15", 10) == 0)
                        {
{
return dev_storage + 122;

}
                        }
                      else
                        {
{
return	NULL;

}
                        }
                    default:
d20479 2
a20480 2
            case 's':
              if (strncmp (KR_keyword, "/dev/sds15", 10) == 0)
d20482 3
d20486 1
a20486 1
return dev_storage + 694;
d20489 3
a20491 3
                }
              else
                {
d20496 4
a20499 4
                }
            case 'r':
              if (strncmp (KR_keyword, "/dev/sdr15", 10) == 0)
                {
d20501 1
a20501 1
return dev_storage + 679;
d20504 3
a20506 3
                }
              else
                {
d20511 4
a20514 4
                }
            case 'q':
              if (strncmp (KR_keyword, "/dev/sdq15", 10) == 0)
                {
d20516 1
a20516 1
return dev_storage + 664;
d20519 3
a20521 3
                }
              else
                {
d20526 4
a20529 4
                }
            case 'p':
              if (strncmp (KR_keyword, "/dev/sdp15", 10) == 0)
                {
d20531 1
a20531 1
return dev_storage + 649;
d20534 3
a20536 3
                }
              else
                {
d20541 2
a20542 11
                }
            case 'o':
              if (strncmp (KR_keyword, "/dev/sdo15", 10) == 0)
                {
{
return dev_storage + 634;

}
                }
              else
                {
d20548 2
a20549 2
            case 'n':
              switch (KR_keyword [5])
d20551 2
a20552 2
                case 's':
                  if (strncmp (KR_keyword, "/dev/sdn15", 10) == 0)
d20555 1
a20555 1
return dev_storage + 619;
d20567 1
a20567 1
                  if (strncmp (KR_keyword, "/dev/cons5", 10) == 0)
d20570 1
a20570 1
return dev_storage + 25;
d20581 2
a20582 11
                default:
{
return	NULL;

}
                }
            case 'm':
              switch (KR_keyword [5])
                {
                case 's':
                  if (strncmp (KR_keyword, "/dev/sdm15", 10) == 0)
d20585 1
a20585 1
return dev_storage + 604;
d20596 2
a20597 2
                case 'c':
                  if (strncmp (KR_keyword, "/dev/com15", 10) == 0)
d20600 1
a20600 1
return dev_storage + 16;
d20617 2
a20618 2
            case 'l':
              if (strncmp (KR_keyword, "/dev/sdl15", 10) == 0)
d20620 3
d20624 1
a20624 1
return dev_storage + 589;
d20627 3
a20629 3
                }
              else
                {
d20634 4
a20637 4
                }
            case 'k':
              if (strncmp (KR_keyword, "/dev/sdk15", 10) == 0)
                {
d20639 1
a20639 1
return dev_storage + 574;
d20642 3
a20644 3
                }
              else
                {
d20649 4
a20652 4
                }
            case 'j':
              if (strncmp (KR_keyword, "/dev/sdj15", 10) == 0)
                {
d20654 1
a20654 1
return dev_storage + 559;
d20657 3
a20659 3
                }
              else
                {
d20664 4
a20667 4
                }
            case 'i':
              if (strncmp (KR_keyword, "/dev/sdi15", 10) == 0)
                {
d20669 1
a20669 1
return dev_storage + 544;
d20672 3
a20674 3
                }
              else
                {
d20679 2
a20680 11
                }
            case 'h':
              if (strncmp (KR_keyword, "/dev/sdh15", 10) == 0)
                {
{
return dev_storage + 529;

}
                }
              else
                {
d20686 2
a20687 2
            case 'g':
              if (strncmp (KR_keyword, "/dev/sdg15", 10) == 0)
d20689 3
d20693 1
a20693 1
return dev_storage + 514;
d20696 3
a20698 3
                }
              else
                {
d20703 4
a20706 4
                }
            case 'f':
              if (strncmp (KR_keyword, "/dev/sdf15", 10) == 0)
                {
d20708 1
a20708 1
return dev_storage + 499;
d20711 3
a20713 3
                }
              else
                {
d20718 3
a20720 21
                }
            case 'e':
              if (strncmp (KR_keyword, "/dev/sde15", 10) == 0)
                {
{
return dev_storage + 484;

}
                }
              else
                {
{
return	NULL;

}
                }
            case 'd':
              switch (KR_keyword [8])
                {
                case 'x':
                  if (strncmp (KR_keyword, "/dev/sddx5", 10) == 0)
d20723 1
a20723 1
return dev_storage + 2421;
d20734 2
a20735 2
                case 'w':
                  if (strncmp (KR_keyword, "/dev/sddw5", 10) == 0)
d20738 1
a20738 1
return dev_storage + 2406;
d20749 11
a20759 2
                case 'v':
                  if (strncmp (KR_keyword, "/dev/sddv5", 10) == 0)
d20762 1
a20762 1
return dev_storage + 2391;
d20773 2
a20774 2
                case 'u':
                  if (strncmp (KR_keyword, "/dev/sddu5", 10) == 0)
d20777 1
a20777 1
return dev_storage + 2376;
d20788 2
a20789 2
                case 't':
                  if (strncmp (KR_keyword, "/dev/sddt5", 10) == 0)
d20792 1
a20792 1
return dev_storage + 2361;
d20803 2
a20804 2
                case 's':
                  if (strncmp (KR_keyword, "/dev/sdds5", 10) == 0)
d20807 1
a20807 1
return dev_storage + 2346;
d20818 9
a20826 3
                case 'r':
                  if (strncmp (KR_keyword, "/dev/sddr5", 10) == 0)
                    {
d20828 1
a20828 1
return dev_storage + 2331;
d20831 3
a20833 3
                    }
                  else
                    {
d20838 4
a20841 4
                    }
                case 'q':
                  if (strncmp (KR_keyword, "/dev/sddq5", 10) == 0)
                    {
d20843 1
a20843 1
return dev_storage + 2316;
d20846 3
a20848 3
                    }
                  else
                    {
d20853 4
a20856 4
                    }
                case 'p':
                  if (strncmp (KR_keyword, "/dev/sddp5", 10) == 0)
                    {
d20858 1
a20858 1
return dev_storage + 2301;
d20861 3
a20863 3
                    }
                  else
                    {
d20868 4
a20871 4
                    }
                case 'o':
                  if (strncmp (KR_keyword, "/dev/sddo5", 10) == 0)
                    {
d20873 1
a20873 1
return dev_storage + 2286;
d20876 3
a20878 3
                    }
                  else
                    {
d20883 4
a20886 4
                    }
                case 'n':
                  if (strncmp (KR_keyword, "/dev/sddn5", 10) == 0)
                    {
d20888 1
a20888 1
return dev_storage + 2271;
d20891 3
a20893 3
                    }
                  else
                    {
d20898 6
a20903 3
                    }
                case 'm':
                  if (strncmp (KR_keyword, "/dev/sddm5", 10) == 0)
d20906 1
a20906 1
return dev_storage + 2256;
d20917 2
a20918 2
                case 'l':
                  if (strncmp (KR_keyword, "/dev/sddl5", 10) == 0)
d20921 1
a20921 1
return dev_storage + 2241;
d20932 11
a20942 2
                case 'k':
                  if (strncmp (KR_keyword, "/dev/sddk5", 10) == 0)
d20945 1
a20945 1
return dev_storage + 2226;
d20956 2
a20957 2
                case 'j':
                  if (strncmp (KR_keyword, "/dev/sddj5", 10) == 0)
d20960 1
a20960 1
return dev_storage + 2211;
d20971 11
a20981 2
                case 'i':
                  if (strncmp (KR_keyword, "/dev/sddi5", 10) == 0)
d20984 1
a20984 1
return dev_storage + 2196;
d20995 2
a20996 2
                case 'h':
                  if (strncmp (KR_keyword, "/dev/sddh5", 10) == 0)
d20999 1
a20999 1
return dev_storage + 2181;
d21010 11
a21020 2
                case 'g':
                  if (strncmp (KR_keyword, "/dev/sddg5", 10) == 0)
d21023 1
a21023 1
return dev_storage + 2166;
d21034 2
a21035 2
                case 'f':
                  if (strncmp (KR_keyword, "/dev/sddf5", 10) == 0)
d21038 1
a21038 1
return dev_storage + 2151;
d21049 2
a21050 2
                case 'e':
                  if (strncmp (KR_keyword, "/dev/sdde5", 10) == 0)
d21053 1
a21053 1
return dev_storage + 2136;
d21064 11
a21074 2
                case 'd':
                  if (strncmp (KR_keyword, "/dev/sddd5", 10) == 0)
d21077 1
a21077 1
return dev_storage + 2121;
d21088 2
a21089 2
                case 'c':
                  if (strncmp (KR_keyword, "/dev/sddc5", 10) == 0)
d21092 1
a21092 1
return dev_storage + 2106;
d21103 2
a21104 2
                case 'b':
                  if (strncmp (KR_keyword, "/dev/sddb5", 10) == 0)
d21107 1
a21107 1
return dev_storage + 2091;
d21118 2
a21119 2
                case 'a':
                  if (strncmp (KR_keyword, "/dev/sdda5", 10) == 0)
d21122 1
a21122 1
return dev_storage + 2076;
d21133 1
a21133 6
                case '1':
                  switch (KR_keyword [6])
                    {
                    case 'd':
                      if (strncmp (KR_keyword, "/dev/sdd15", 10) == 0)
                        {
d21135 1
a21135 1
return dev_storage + 469;
d21138 4
a21141 3
                        }
                      else
                        {
d21143 1
a21143 1
return	NULL;
d21146 3
a21148 4
                        }
                    case 'c':
                      if (strncmp (KR_keyword, "/dev/scd15", 10) == 0)
                        {
d21150 1
a21150 1
return dev_storage + 383;
d21153 2
a21154 3
                        }
                      else
                        {
d21159 7
a21165 2
                        }
                    default:
d21167 1
a21167 1
return	NULL;
d21170 3
a21172 2
                    }
                default:
d21178 1
a21178 1
            case 'c':
d21181 2
a21182 2
                case 'z':
                  if (strncmp (KR_keyword, "/dev/sdcz5", 10) == 0)
d21185 1
a21185 1
return dev_storage + 2037;
d21196 2
a21197 2
                case 'y':
                  if (strncmp (KR_keyword, "/dev/sdcy5", 10) == 0)
d21200 1
a21200 1
return dev_storage + 2022;
d21211 2
a21212 2
                case 'x':
                  if (strncmp (KR_keyword, "/dev/sdcx5", 10) == 0)
d21215 1
a21215 1
return dev_storage + 2007;
d21226 2
a21227 2
                case 'w':
                  if (strncmp (KR_keyword, "/dev/sdcw5", 10) == 0)
d21230 1
a21230 1
return dev_storage + 1992;
d21241 2
a21242 2
                case 'v':
                  if (strncmp (KR_keyword, "/dev/sdcv5", 10) == 0)
d21245 1
a21245 1
return dev_storage + 1977;
d21256 2
a21257 2
                case 'u':
                  if (strncmp (KR_keyword, "/dev/sdcu5", 10) == 0)
d21259 3
d21263 16
a21278 1
return dev_storage + 1962;
d21281 3
a21283 3
                    }
                  else
                    {
d21288 2
a21289 4
                    }
                case 't':
                  if (strncmp (KR_keyword, "/dev/sdct5", 10) == 0)
                    {
d21291 1
a21291 1
return dev_storage + 1947;
d21295 1
a21295 2
                  else
                    {
d21300 4
a21303 4
                    }
                case 's':
                  if (strncmp (KR_keyword, "/dev/sdcs5", 10) == 0)
                    {
d21305 1
a21305 1
return dev_storage + 1932;
d21308 3
a21310 3
                    }
                  else
                    {
d21315 4
a21318 4
                    }
                case 'r':
                  if (strncmp (KR_keyword, "/dev/sdcr5", 10) == 0)
                    {
d21320 1
a21320 1
return dev_storage + 1917;
d21323 3
a21325 3
                    }
                  else
                    {
d21330 4
a21333 4
                    }
                case 'q':
                  if (strncmp (KR_keyword, "/dev/sdcq5", 10) == 0)
                    {
d21335 1
a21335 1
return dev_storage + 1902;
d21338 3
a21340 3
                    }
                  else
                    {
d21345 4
a21348 4
                    }
                case 'p':
                  if (strncmp (KR_keyword, "/dev/sdcp5", 10) == 0)
                    {
d21350 1
a21350 1
return dev_storage + 1887;
d21353 3
a21355 3
                    }
                  else
                    {
d21360 6
a21365 3
                    }
                case 'o':
                  if (strncmp (KR_keyword, "/dev/sdco5", 10) == 0)
d21368 1
a21368 1
return dev_storage + 1872;
d21379 2
a21380 2
                case 'n':
                  if (strncmp (KR_keyword, "/dev/sdcn5", 10) == 0)
d21383 1
a21383 1
return dev_storage + 1857;
d21394 2
a21395 2
                case 'm':
                  if (strncmp (KR_keyword, "/dev/sdcm5", 10) == 0)
d21398 1
a21398 1
return dev_storage + 1842;
d21409 2
a21410 2
                case 'l':
                  if (strncmp (KR_keyword, "/dev/sdcl5", 10) == 0)
d21413 1
a21413 1
return dev_storage + 1827;
d21424 2
a21425 2
                case 'k':
                  if (strncmp (KR_keyword, "/dev/sdck5", 10) == 0)
d21428 1
a21428 1
return dev_storage + 1812;
d21439 2
a21440 2
                case 'j':
                  if (strncmp (KR_keyword, "/dev/sdcj5", 10) == 0)
d21443 1
a21443 1
return dev_storage + 1797;
d21454 2
a21455 2
                case 'i':
                  if (strncmp (KR_keyword, "/dev/sdci5", 10) == 0)
d21458 1
a21458 1
return dev_storage + 1782;
d21469 2
a21470 2
                case 'h':
                  if (strncmp (KR_keyword, "/dev/sdch5", 10) == 0)
d21473 1
a21473 1
return dev_storage + 1767;
d21484 2
a21485 2
                case 'g':
                  if (strncmp (KR_keyword, "/dev/sdcg5", 10) == 0)
d21487 3
d21491 1
a21491 1
return dev_storage + 1752;
d21494 3
a21496 3
                    }
                  else
                    {
d21501 4
a21504 4
                    }
                case 'f':
                  if (strncmp (KR_keyword, "/dev/sdcf5", 10) == 0)
                    {
d21506 1
a21506 1
return dev_storage + 1737;
d21509 3
a21511 3
                    }
                  else
                    {
d21516 2
a21517 4
                    }
                case 'e':
                  if (strncmp (KR_keyword, "/dev/sdce5", 10) == 0)
                    {
d21519 1
a21519 1
return dev_storage + 1722;
d21523 1
a21523 2
                  else
                    {
d21528 4
a21531 4
                    }
                case 'd':
                  if (strncmp (KR_keyword, "/dev/sdcd5", 10) == 0)
                    {
d21533 1
a21533 1
return dev_storage + 1707;
d21536 3
a21538 3
                    }
                  else
                    {
d21543 4
a21546 4
                    }
                case 'c':
                  if (strncmp (KR_keyword, "/dev/sdcc5", 10) == 0)
                    {
d21548 1
a21548 1
return dev_storage + 1692;
d21551 3
a21553 3
                    }
                  else
                    {
d21558 4
a21561 4
                    }
                case 'b':
                  if (strncmp (KR_keyword, "/dev/sdcb5", 10) == 0)
                    {
d21563 1
a21563 1
return dev_storage + 1677;
d21566 3
a21568 3
                    }
                  else
                    {
d21573 4
a21576 4
                    }
                case 'a':
                  if (strncmp (KR_keyword, "/dev/sdca5", 10) == 0)
                    {
d21578 1
a21578 1
return dev_storage + 1662;
d21581 3
a21583 3
                    }
                  else
                    {
d21588 4
a21591 4
                    }
                case '1':
                  if (strncmp (KR_keyword, "/dev/sdc15", 10) == 0)
                    {
d21593 1
a21593 1
return dev_storage + 454;
d21596 3
a21598 9
                    }
                  else
                    {
{
return	NULL;

}
                    }
                default:
d21604 2
a21605 2
            case 'b':
              switch (KR_keyword [8])
d21607 2
a21608 2
                case 'z':
                  if (strncmp (KR_keyword, "/dev/sdbz5", 10) == 0)
d21611 1
a21611 1
return dev_storage + 1621;
d21622 2
a21623 2
                case 'y':
                  if (strncmp (KR_keyword, "/dev/sdby5", 10) == 0)
d21626 1
a21626 1
return dev_storage + 1606;
d21637 11
a21647 2
                case 'x':
                  if (strncmp (KR_keyword, "/dev/sdbx5", 10) == 0)
d21650 1
a21650 1
return dev_storage + 1591;
d21661 2
a21662 2
                case 'w':
                  if (strncmp (KR_keyword, "/dev/sdbw5", 10) == 0)
d21665 1
a21665 1
return dev_storage + 1576;
d21676 1
a21676 10
                case 'v':
                  if (strncmp (KR_keyword, "/dev/sdbv5", 10) == 0)
                    {
{
return dev_storage + 1561;

}
                    }
                  else
                    {
d21681 4
a21684 4
                    }
                case 'u':
                  if (strncmp (KR_keyword, "/dev/sdbu5", 10) == 0)
                    {
d21686 1
a21686 1
return dev_storage + 1546;
d21689 3
a21691 3
                    }
                  else
                    {
d21696 4
a21699 4
                    }
                case 't':
                  if (strncmp (KR_keyword, "/dev/sdbt5", 10) == 0)
                    {
d21701 1
a21701 1
return dev_storage + 1531;
d21704 3
a21706 3
                    }
                  else
                    {
d21711 4
a21714 4
                    }
                case 's':
                  if (strncmp (KR_keyword, "/dev/sdbs5", 10) == 0)
                    {
d21716 1
a21716 1
return dev_storage + 1516;
d21719 3
a21721 3
                    }
                  else
                    {
d21726 4
a21729 4
                    }
                case 'r':
                  if (strncmp (KR_keyword, "/dev/sdbr5", 10) == 0)
                    {
d21731 1
a21731 1
return dev_storage + 1501;
d21734 3
a21736 3
                    }
                  else
                    {
d21741 4
a21744 4
                    }
                case 'q':
                  if (strncmp (KR_keyword, "/dev/sdbq5", 10) == 0)
                    {
d21746 1
a21746 1
return dev_storage + 1486;
d21749 3
a21751 3
                    }
                  else
                    {
d21756 4
a21759 4
                    }
                case 'p':
                  if (strncmp (KR_keyword, "/dev/sdbp5", 10) == 0)
                    {
d21761 1
a21761 1
return dev_storage + 1471;
d21764 3
a21766 3
                    }
                  else
                    {
d21771 4
a21774 4
                    }
                case 'o':
                  if (strncmp (KR_keyword, "/dev/sdbo5", 10) == 0)
                    {
d21776 1
a21776 1
return dev_storage + 1456;
d21779 3
a21781 3
                    }
                  else
                    {
d21786 4
a21789 4
                    }
                case 'n':
                  if (strncmp (KR_keyword, "/dev/sdbn5", 10) == 0)
                    {
d21791 1
a21791 1
return dev_storage + 1441;
d21794 3
a21796 3
                    }
                  else
                    {
d21801 6
a21806 3
                    }
                case 'm':
                  if (strncmp (KR_keyword, "/dev/sdbm5", 10) == 0)
d21809 1
a21809 1
return dev_storage + 1426;
d21820 2
a21821 2
                case 'l':
                  if (strncmp (KR_keyword, "/dev/sdbl5", 10) == 0)
d21824 1
a21824 1
return dev_storage + 1411;
d21835 2
a21836 2
                case 'k':
                  if (strncmp (KR_keyword, "/dev/sdbk5", 10) == 0)
d21839 1
a21839 1
return dev_storage + 1396;
d21850 2
a21851 2
                case 'j':
                  if (strncmp (KR_keyword, "/dev/sdbj5", 10) == 0)
d21854 1
a21854 1
return dev_storage + 1381;
d21865 2
a21866 2
                case 'i':
                  if (strncmp (KR_keyword, "/dev/sdbi5", 10) == 0)
d21869 1
a21869 1
return dev_storage + 1366;
d21880 2
a21881 2
                case 'h':
                  if (strncmp (KR_keyword, "/dev/sdbh5", 10) == 0)
d21884 1
a21884 1
return dev_storage + 1351;
d21895 2
a21896 2
                case 'g':
                  if (strncmp (KR_keyword, "/dev/sdbg5", 10) == 0)
d21899 1
a21899 1
return dev_storage + 1336;
d21910 2
a21911 2
                case 'f':
                  if (strncmp (KR_keyword, "/dev/sdbf5", 10) == 0)
d21914 1
a21914 1
return dev_storage + 1321;
d21925 2
a21926 2
                case 'e':
                  if (strncmp (KR_keyword, "/dev/sdbe5", 10) == 0)
d21929 1
a21929 1
return dev_storage + 1306;
d21940 2
a21941 2
                case 'd':
                  if (strncmp (KR_keyword, "/dev/sdbd5", 10) == 0)
d21944 1
a21944 1
return dev_storage + 1291;
d21955 2
a21956 2
                case 'c':
                  if (strncmp (KR_keyword, "/dev/sdbc5", 10) == 0)
d21959 1
a21959 1
return dev_storage + 1276;
d21970 2
a21971 2
                case 'b':
                  if (strncmp (KR_keyword, "/dev/sdbb5", 10) == 0)
d21974 1
a21974 1
return dev_storage + 1261;
d21985 2
a21986 2
                case 'a':
                  if (strncmp (KR_keyword, "/dev/sdba5", 10) == 0)
d21989 1
a21989 1
return dev_storage + 1246;
d22000 2
a22001 2
                case '1':
                  if (strncmp (KR_keyword, "/dev/sdb15", 10) == 0)
d22004 1
a22004 1
return dev_storage + 439;
d22015 2
a22016 11
                default:
{
return	NULL;

}
                }
            case 'a':
              switch (KR_keyword [8])
                {
                case 'z':
                  if (strncmp (KR_keyword, "/dev/sdaz5", 10) == 0)
d22019 1
a22019 1
return dev_storage + 1205;
d22030 2
a22031 2
                case 'y':
                  if (strncmp (KR_keyword, "/dev/sday5", 10) == 0)
d22034 1
a22034 1
return dev_storage + 1190;
d22045 2
a22046 2
                case 'x':
                  if (strncmp (KR_keyword, "/dev/sdax5", 10) == 0)
d22049 1
a22049 1
return dev_storage + 1175;
d22060 2
a22061 2
                case 'w':
                  if (strncmp (KR_keyword, "/dev/sdaw5", 10) == 0)
d22064 1
a22064 1
return dev_storage + 1160;
d22075 2
a22076 2
                case 'v':
                  if (strncmp (KR_keyword, "/dev/sdav5", 10) == 0)
d22079 1
a22079 1
return dev_storage + 1145;
d22090 2
a22091 2
                case 'u':
                  if (strncmp (KR_keyword, "/dev/sdau5", 10) == 0)
d22094 1
a22094 1
return dev_storage + 1130;
d22105 2
a22106 2
                case 't':
                  if (strncmp (KR_keyword, "/dev/sdat5", 10) == 0)
d22109 1
a22109 1
return dev_storage + 1115;
d22120 2
a22121 2
                case 's':
                  if (strncmp (KR_keyword, "/dev/sdas5", 10) == 0)
d22124 1
a22124 1
return dev_storage + 1100;
d22135 2
a22136 2
                case 'r':
                  if (strncmp (KR_keyword, "/dev/sdar5", 10) == 0)
d22139 1
a22139 1
return dev_storage + 1085;
d22150 2
a22151 2
                case 'q':
                  if (strncmp (KR_keyword, "/dev/sdaq5", 10) == 0)
d22154 1
a22154 1
return dev_storage + 1070;
d22165 2
a22166 2
                case 'p':
                  if (strncmp (KR_keyword, "/dev/sdap5", 10) == 0)
d22168 3
d22172 1
a22172 1
return dev_storage + 1055;
d22175 3
a22177 3
                    }
                  else
                    {
d22182 4
a22185 4
                    }
                case 'o':
                  if (strncmp (KR_keyword, "/dev/sdao5", 10) == 0)
                    {
d22187 1
a22187 1
return dev_storage + 1040;
d22190 3
a22192 3
                    }
                  else
                    {
d22197 2
a22198 4
                    }
                case 'n':
                  if (strncmp (KR_keyword, "/dev/sdan5", 10) == 0)
                    {
d22200 1
a22200 1
return dev_storage + 1025;
d22204 1
a22204 2
                  else
                    {
d22209 6
a22214 3
                    }
                case 'm':
                  if (strncmp (KR_keyword, "/dev/sdam5", 10) == 0)
d22217 1
a22217 1
return dev_storage + 1010;
d22228 2
a22229 2
                case 'l':
                  if (strncmp (KR_keyword, "/dev/sdal5", 10) == 0)
d22232 1
a22232 1
return dev_storage + 995;
d22243 2
a22244 2
                case 'k':
                  if (strncmp (KR_keyword, "/dev/sdak5", 10) == 0)
d22247 1
a22247 1
return dev_storage + 980;
d22258 2
a22259 2
                case 'j':
                  if (strncmp (KR_keyword, "/dev/sdaj5", 10) == 0)
d22262 1
a22262 1
return dev_storage + 965;
d22273 2
a22274 2
                case 'i':
                  if (strncmp (KR_keyword, "/dev/sdai5", 10) == 0)
d22277 1
a22277 1
return dev_storage + 950;
d22288 2
a22289 2
                case 'h':
                  if (strncmp (KR_keyword, "/dev/sdah5", 10) == 0)
d22292 1
a22292 1
return dev_storage + 935;
d22303 2
a22304 2
                case 'g':
                  if (strncmp (KR_keyword, "/dev/sdag5", 10) == 0)
d22307 1
a22307 1
return dev_storage + 920;
d22318 2
a22319 2
                case 'f':
                  if (strncmp (KR_keyword, "/dev/sdaf5", 10) == 0)
d22322 1
a22322 1
return dev_storage + 905;
d22333 2
a22334 2
                case 'e':
                  if (strncmp (KR_keyword, "/dev/sdae5", 10) == 0)
d22337 1
a22337 1
return dev_storage + 890;
d22348 2
a22349 2
                case 'd':
                  if (strncmp (KR_keyword, "/dev/sdad5", 10) == 0)
d22352 1
a22352 1
return dev_storage + 875;
d22363 2
a22364 2
                case 'c':
                  if (strncmp (KR_keyword, "/dev/sdac5", 10) == 0)
d22367 1
a22367 1
return dev_storage + 860;
d22378 2
a22379 2
                case 'b':
                  if (strncmp (KR_keyword, "/dev/sdab5", 10) == 0)
d22382 1
a22382 1
return dev_storage + 845;
d22393 2
a22394 2
                case 'a':
                  if (strncmp (KR_keyword, "/dev/sdaa5", 10) == 0)
d22397 1
a22397 1
return dev_storage + 830;
d22408 2
a22409 2
                case '1':
                  if (strncmp (KR_keyword, "/dev/sda15", 10) == 0)
d22412 1
a22412 1
return dev_storage + 424;
d22423 2
a22424 11
                default:
{
return	NULL;

}
                }
            case '1':
              switch (KR_keyword [8])
                {
                case '2':
                  if (strncmp (KR_keyword, "/dev/st125", 10) == 0)
d22427 1
a22427 1
return dev_storage + 2573;
d22438 2
a22439 2
                case '1':
                  if (strncmp (KR_keyword, "/dev/st115", 10) == 0)
d22442 1
a22442 1
return dev_storage + 2563;
d22453 2
a22454 2
                case '0':
                  if (strncmp (KR_keyword, "/dev/st105", 10) == 0)
d22457 1
a22457 1
return dev_storage + 2553;
d22468 3
a22470 1
                default:
d22472 1
a22472 1
return	NULL;
d22475 3
a22477 2
                }
            default:
d22482 4
a22485 7
            }
        case '4':
          switch (KR_keyword [7])
            {
            case 'z':
              if (strncmp (KR_keyword, "/dev/sdz14", 10) == 0)
                {
d22487 1
a22487 1
return dev_storage + 798;
d22490 3
a22492 3
                }
              else
                {
d22497 3
a22499 6
                }
            case 'y':
              switch (KR_keyword [8])
                {
                case 'm':
                  if (strncmp (KR_keyword, "/dev/ptym4", 10) == 0)
d22502 1
a22502 1
return dev_storage + 307;
d22513 2
a22514 2
                case 'S':
                  if (strncmp (KR_keyword, "/dev/ttyS4", 10) == 0)
d22517 1
a22517 1
return dev_storage + 2581;
d22528 2
a22529 2
                case '5':
                  if (strncmp (KR_keyword, "/dev/pty54", 10) == 0)
d22532 1
a22532 1
return dev_storage + 293;
d22543 2
a22544 2
                case '4':
                  if (strncmp (KR_keyword, "/dev/pty44", 10) == 0)
d22547 1
a22547 1
return dev_storage + 283;
d22558 2
a22559 2
                case '3':
                  if (strncmp (KR_keyword, "/dev/pty34", 10) == 0)
d22562 1
a22562 1
return dev_storage + 273;
d22573 2
a22574 2
                case '2':
                  if (strncmp (KR_keyword, "/dev/pty24", 10) == 0)
d22577 1
a22577 1
return dev_storage + 263;
d22588 2
a22589 2
                case '1':
                  switch (KR_keyword [5])
a22590 3
                    case 's':
                      if (strncmp (KR_keyword, "/dev/sdy14", 10) == 0)
                        {
d22592 1
a22592 1
return dev_storage + 783;
d22595 3
a22597 3
                        }
                      else
                        {
d22602 4
a22605 4
                        }
                    case 'p':
                      if (strncmp (KR_keyword, "/dev/pty14", 10) == 0)
                        {
d22607 1
a22607 1
return dev_storage + 253;
d22610 3
a22612 9
                        }
                      else
                        {
{
return	NULL;

}
                        }
                    default:
d22624 2
a22625 2
            case 'x':
              if (strncmp (KR_keyword, "/dev/sdx14", 10) == 0)
d22627 3
d22631 1
a22631 1
return dev_storage + 768;
d22634 3
a22636 3
                }
              else
                {
d22641 4
a22644 4
                }
            case 'w':
              if (strncmp (KR_keyword, "/dev/sdw14", 10) == 0)
                {
d22646 1
a22646 1
return dev_storage + 753;
d22649 3
a22651 3
                }
              else
                {
d22656 4
a22659 4
                }
            case 'v':
              if (strncmp (KR_keyword, "/dev/sdv14", 10) == 0)
                {
d22661 1
a22661 1
return dev_storage + 738;
d22664 3
a22666 3
                }
              else
                {
d22671 4
a22674 4
                }
            case 'u':
              if (strncmp (KR_keyword, "/dev/sdu14", 10) == 0)
                {
d22676 1
a22676 1
return dev_storage + 723;
d22679 3
a22681 3
                }
              else
                {
d22686 3
a22688 6
                }
            case 't':
              switch (KR_keyword [8])
                {
                case '9':
                  if (strncmp (KR_keyword, "/dev/nst94", 10) == 0)
d22691 1
a22691 1
return dev_storage + 201;
d22702 2
a22703 2
                case '8':
                  if (strncmp (KR_keyword, "/dev/nst84", 10) == 0)
d22706 1
a22706 1
return dev_storage + 191;
d22717 2
a22718 2
                case '7':
                  if (strncmp (KR_keyword, "/dev/nst74", 10) == 0)
d22721 1
a22721 1
return dev_storage + 181;
d22732 2
a22733 2
                case '6':
                  if (strncmp (KR_keyword, "/dev/nst64", 10) == 0)
d22736 1
a22736 1
return dev_storage + 171;
d22747 2
a22748 2
                case '5':
                  if (strncmp (KR_keyword, "/dev/nst54", 10) == 0)
d22751 1
a22751 1
return dev_storage + 161;
d22762 2
a22763 2
                case '4':
                  if (strncmp (KR_keyword, "/dev/nst44", 10) == 0)
d22766 1
a22766 1
return dev_storage + 151;
d22777 2
a22778 2
                case '3':
                  if (strncmp (KR_keyword, "/dev/nst34", 10) == 0)
d22781 1
a22781 1
return dev_storage + 141;
d22792 2
a22793 2
                case '2':
                  if (strncmp (KR_keyword, "/dev/nst24", 10) == 0)
d22796 1
a22796 1
return dev_storage + 131;
d22807 2
a22808 2
                case '1':
                  switch (KR_keyword [5])
a22809 3
                    case 's':
                      if (strncmp (KR_keyword, "/dev/sdt14", 10) == 0)
                        {
d22811 1
a22811 1
return dev_storage + 708;
d22814 3
a22816 3
                        }
                      else
                        {
d22821 4
a22824 4
                        }
                    case 'n':
                      if (strncmp (KR_keyword, "/dev/nst14", 10) == 0)
                        {
d22826 1
a22826 1
return dev_storage + 121;
d22829 3
a22831 3
                        }
                      else
                        {
d22836 4
a22839 2
                        }
                    default:
d22841 1
a22841 1
return	NULL;
d22845 2
a22846 1
                default:
d22851 4
a22854 4
                }
            case 's':
              if (strncmp (KR_keyword, "/dev/sds14", 10) == 0)
                {
d22856 1
a22856 1
return dev_storage + 693;
d22859 3
a22861 3
                }
              else
                {
d22866 4
a22869 4
                }
            case 'r':
              if (strncmp (KR_keyword, "/dev/sdr14", 10) == 0)
                {
d22871 1
a22871 1
return dev_storage + 678;
d22874 3
a22876 3
                }
              else
                {
d22881 4
a22884 4
                }
            case 'q':
              if (strncmp (KR_keyword, "/dev/sdq14", 10) == 0)
                {
d22886 1
a22886 1
return dev_storage + 663;
d22889 3
a22891 3
                }
              else
                {
d22896 4
a22899 4
                }
            case 'p':
              if (strncmp (KR_keyword, "/dev/sdp14", 10) == 0)
                {
d22901 1
a22901 1
return dev_storage + 648;
d22904 3
a22906 3
                }
              else
                {
d22911 4
a22914 4
                }
            case 'o':
              if (strncmp (KR_keyword, "/dev/sdo14", 10) == 0)
                {
d22916 1
a22916 1
return dev_storage + 633;
d22919 3
a22921 3
                }
              else
                {
d22926 3
a22928 6
                }
            case 'n':
              switch (KR_keyword [5])
                {
                case 's':
                  if (strncmp (KR_keyword, "/dev/sdn14", 10) == 0)
d22931 1
a22931 1
return dev_storage + 618;
d22942 2
a22943 2
                case 'c':
                  if (strncmp (KR_keyword, "/dev/cons4", 10) == 0)
d22946 1
a22946 1
return dev_storage + 24;
d22957 2
a22958 11
                default:
{
return	NULL;

}
                }
            case 'm':
              switch (KR_keyword [5])
                {
                case 's':
                  if (strncmp (KR_keyword, "/dev/sdm14", 10) == 0)
d22961 1
a22961 1
return dev_storage + 603;
d22973 1
a22973 1
                  if (strncmp (KR_keyword, "/dev/com14", 10) == 0)
d22976 1
a22976 1
return dev_storage + 15;
d22987 3
a22989 1
                default:
d22991 1
a22991 1
return	NULL;
d22994 3
a22996 11
                }
            case 'l':
              if (strncmp (KR_keyword, "/dev/sdl14", 10) == 0)
                {
{
return dev_storage + 588;

}
                }
              else
                {
d23001 4
a23004 4
                }
            case 'k':
              if (strncmp (KR_keyword, "/dev/sdk14", 10) == 0)
                {
d23006 1
a23006 1
return dev_storage + 573;
d23009 3
a23011 3
                }
              else
                {
d23016 4
a23019 41
                }
            case 'j':
              if (strncmp (KR_keyword, "/dev/sdj14", 10) == 0)
                {
{
return dev_storage + 558;

}
                }
              else
                {
{
return	NULL;

}
                }
            case 'i':
              if (strncmp (KR_keyword, "/dev/sdi14", 10) == 0)
                {
{
return dev_storage + 543;

}
                }
              else
                {
{
return	NULL;

}
                }
            case 'h':
              if (strncmp (KR_keyword, "/dev/sdh14", 10) == 0)
                {
{
return dev_storage + 528;

}
                }
              else
                {
d23021 1
a23021 1
return	NULL;
d23024 3
a23026 4
                }
            case 'g':
              if (strncmp (KR_keyword, "/dev/sdg14", 10) == 0)
                {
d23028 1
a23028 1
return dev_storage + 513;
d23031 2
a23032 3
                }
              else
                {
d23038 2
a23039 2
            case 'f':
              if (strncmp (KR_keyword, "/dev/sdf14", 10) == 0)
d23041 3
d23045 1
a23045 1
return dev_storage + 498;
d23048 3
a23050 3
                }
              else
                {
d23055 4
a23058 4
                }
            case 'e':
              if (strncmp (KR_keyword, "/dev/sde14", 10) == 0)
                {
d23060 1
a23060 1
return dev_storage + 483;
d23063 3
a23065 3
                }
              else
                {
d23070 1
a23070 4
                }
            case 'd':
              switch (KR_keyword [8])
                {
d23072 1
a23072 1
                  if (strncmp (KR_keyword, "/dev/sddx4", 10) == 0)
d23075 1
a23075 1
return dev_storage + 2420;
d23087 1
a23087 1
                  if (strncmp (KR_keyword, "/dev/sddw4", 10) == 0)
d23090 1
a23090 1
return dev_storage + 2405;
d23102 1
a23102 1
                  if (strncmp (KR_keyword, "/dev/sddv4", 10) == 0)
d23105 1
a23105 1
return dev_storage + 2390;
d23117 1
a23117 1
                  if (strncmp (KR_keyword, "/dev/sddu4", 10) == 0)
d23120 1
a23120 1
return dev_storage + 2375;
d23132 1
a23132 1
                  if (strncmp (KR_keyword, "/dev/sddt4", 10) == 0)
d23135 1
a23135 1
return dev_storage + 2360;
d23147 1
a23147 1
                  if (strncmp (KR_keyword, "/dev/sdds4", 10) == 0)
d23150 1
a23150 1
return dev_storage + 2345;
d23162 1
a23162 1
                  if (strncmp (KR_keyword, "/dev/sddr4", 10) == 0)
d23165 1
a23165 1
return dev_storage + 2330;
d23177 1
a23177 1
                  if (strncmp (KR_keyword, "/dev/sddq4", 10) == 0)
d23180 1
a23180 1
return dev_storage + 2315;
d23192 1
a23192 1
                  if (strncmp (KR_keyword, "/dev/sddp4", 10) == 0)
d23195 1
a23195 1
return dev_storage + 2300;
d23207 1
a23207 1
                  if (strncmp (KR_keyword, "/dev/sddo4", 10) == 0)
d23210 1
a23210 1
return dev_storage + 2285;
d23222 1
a23222 1
                  if (strncmp (KR_keyword, "/dev/sddn4", 10) == 0)
d23225 1
a23225 1
return dev_storage + 2270;
d23237 1
a23237 1
                  if (strncmp (KR_keyword, "/dev/sddm4", 10) == 0)
d23240 1
a23240 1
return dev_storage + 2255;
d23252 1
a23252 1
                  if (strncmp (KR_keyword, "/dev/sddl4", 10) == 0)
d23255 1
a23255 1
return dev_storage + 2240;
d23267 1
a23267 1
                  if (strncmp (KR_keyword, "/dev/sddk4", 10) == 0)
d23270 1
a23270 1
return dev_storage + 2225;
d23282 1
a23282 1
                  if (strncmp (KR_keyword, "/dev/sddj4", 10) == 0)
d23285 1
a23285 1
return dev_storage + 2210;
d23297 1
a23297 1
                  if (strncmp (KR_keyword, "/dev/sddi4", 10) == 0)
d23300 1
a23300 1
return dev_storage + 2195;
d23312 1
a23312 1
                  if (strncmp (KR_keyword, "/dev/sddh4", 10) == 0)
d23315 1
a23315 1
return dev_storage + 2180;
d23327 1
a23327 1
                  if (strncmp (KR_keyword, "/dev/sddg4", 10) == 0)
d23330 1
a23330 1
return dev_storage + 2165;
d23342 1
a23342 1
                  if (strncmp (KR_keyword, "/dev/sddf4", 10) == 0)
d23345 1
a23345 1
return dev_storage + 2150;
d23357 1
a23357 1
                  if (strncmp (KR_keyword, "/dev/sdde4", 10) == 0)
d23360 1
a23360 1
return dev_storage + 2135;
d23372 1
a23372 1
                  if (strncmp (KR_keyword, "/dev/sddd4", 10) == 0)
d23375 1
a23375 1
return dev_storage + 2120;
d23387 1
a23387 1
                  if (strncmp (KR_keyword, "/dev/sddc4", 10) == 0)
d23390 1
a23390 1
return dev_storage + 2105;
d23402 1
a23402 1
                  if (strncmp (KR_keyword, "/dev/sddb4", 10) == 0)
d23405 1
a23405 1
return dev_storage + 2090;
d23417 1
a23417 1
                  if (strncmp (KR_keyword, "/dev/sdda4", 10) == 0)
d23420 1
a23420 1
return dev_storage + 2075;
d23432 1
a23432 1
                  switch (KR_keyword [6])
a23433 3
                    case 'd':
                      if (strncmp (KR_keyword, "/dev/sdd14", 10) == 0)
                        {
d23435 1
a23435 1
return dev_storage + 468;
d23438 3
a23440 24
                        }
                      else
                        {
{
return	NULL;

}
                        }
                    case 'c':
                      if (strncmp (KR_keyword, "/dev/scd14", 10) == 0)
                        {
{
return dev_storage + 382;

}
                        }
                      else
                        {
{
return	NULL;

}
                        }
                    default:
d23452 1
a23452 1
            case 'c':
d23455 2
a23456 2
                case 'z':
                  if (strncmp (KR_keyword, "/dev/sdcz4", 10) == 0)
d23459 1
a23459 1
return dev_storage + 2036;
d23470 2
a23471 2
                case 'y':
                  if (strncmp (KR_keyword, "/dev/sdcy4", 10) == 0)
d23474 1
a23474 1
return dev_storage + 2021;
d23485 2
a23486 2
                case 'x':
                  if (strncmp (KR_keyword, "/dev/sdcx4", 10) == 0)
d23489 1
a23489 1
return dev_storage + 2006;
d23500 35
a23534 2
                case 'w':
                  if (strncmp (KR_keyword, "/dev/sdcw4", 10) == 0)
d23537 1
a23537 1
return dev_storage + 1991;
d23548 2
a23549 2
                case 'v':
                  if (strncmp (KR_keyword, "/dev/sdcv4", 10) == 0)
d23552 1
a23552 1
return dev_storage + 1976;
d23563 2
a23564 2
                case 'u':
                  if (strncmp (KR_keyword, "/dev/sdcu4", 10) == 0)
d23567 1
a23567 1
return dev_storage + 1961;
d23578 2
a23579 2
                case 't':
                  if (strncmp (KR_keyword, "/dev/sdct4", 10) == 0)
d23582 1
a23582 1
return dev_storage + 1946;
d23593 2
a23594 2
                case 's':
                  if (strncmp (KR_keyword, "/dev/sdcs4", 10) == 0)
d23597 1
a23597 1
return dev_storage + 1931;
d23608 2
a23609 2
                case 'r':
                  if (strncmp (KR_keyword, "/dev/sdcr4", 10) == 0)
d23611 18
d23630 14
a23643 1
return dev_storage + 1916;
d23647 16
a23662 2
                  else
                    {
d23667 4
a23670 4
                    }
                case 'q':
                  if (strncmp (KR_keyword, "/dev/sdcq4", 10) == 0)
                    {
d23672 1
a23672 1
return dev_storage + 1901;
d23675 3
a23677 3
                    }
                  else
                    {
d23682 4
a23685 4
                    }
                case 'p':
                  if (strncmp (KR_keyword, "/dev/sdcp4", 10) == 0)
                    {
d23687 1
a23687 1
return dev_storage + 1886;
d23690 3
a23692 3
                    }
                  else
                    {
d23697 4
a23700 4
                    }
                case 'o':
                  if (strncmp (KR_keyword, "/dev/sdco4", 10) == 0)
                    {
d23702 1
a23702 1
return dev_storage + 1871;
d23705 3
a23707 3
                    }
                  else
                    {
d23712 6
a23717 3
                    }
                case 'n':
                  if (strncmp (KR_keyword, "/dev/sdcn4", 10) == 0)
d23720 1
a23720 1
return dev_storage + 1856;
d23731 2
a23732 2
                case 'm':
                  if (strncmp (KR_keyword, "/dev/sdcm4", 10) == 0)
d23735 1
a23735 1
return dev_storage + 1841;
d23746 2
a23747 2
                case 'l':
                  if (strncmp (KR_keyword, "/dev/sdcl4", 10) == 0)
d23750 1
a23750 1
return dev_storage + 1826;
d23761 2
a23762 2
                case 'k':
                  if (strncmp (KR_keyword, "/dev/sdck4", 10) == 0)
d23765 1
a23765 1
return dev_storage + 1811;
d23776 2
a23777 2
                case 'j':
                  if (strncmp (KR_keyword, "/dev/sdcj4", 10) == 0)
d23780 1
a23780 1
return dev_storage + 1796;
d23791 2
a23792 2
                case 'i':
                  if (strncmp (KR_keyword, "/dev/sdci4", 10) == 0)
d23795 1
a23795 1
return dev_storage + 1781;
d23806 2
a23807 2
                case 'h':
                  if (strncmp (KR_keyword, "/dev/sdch4", 10) == 0)
d23810 1
a23810 1
return dev_storage + 1766;
d23821 2
a23822 2
                case 'g':
                  if (strncmp (KR_keyword, "/dev/sdcg4", 10) == 0)
d23825 1
a23825 1
return dev_storage + 1751;
d23836 2
a23837 2
                case 'f':
                  if (strncmp (KR_keyword, "/dev/sdcf4", 10) == 0)
d23839 3
d23843 1
a23843 1
return dev_storage + 1736;
d23846 3
a23848 3
                    }
                  else
                    {
d23853 4
a23856 4
                    }
                case 'e':
                  if (strncmp (KR_keyword, "/dev/sdce4", 10) == 0)
                    {
d23858 1
a23858 1
return dev_storage + 1721;
d23861 3
a23863 3
                    }
                  else
                    {
d23868 2
a23869 4
                    }
                case 'd':
                  if (strncmp (KR_keyword, "/dev/sdcd4", 10) == 0)
                    {
d23871 1
a23871 1
return dev_storage + 1706;
d23875 1
a23875 2
                  else
                    {
d23880 4
a23883 4
                    }
                case 'c':
                  if (strncmp (KR_keyword, "/dev/sdcc4", 10) == 0)
                    {
d23885 1
a23885 1
return dev_storage + 1691;
d23888 3
a23890 3
                    }
                  else
                    {
d23895 4
a23898 4
                    }
                case 'b':
                  if (strncmp (KR_keyword, "/dev/sdcb4", 10) == 0)
                    {
d23900 1
a23900 1
return dev_storage + 1676;
d23903 3
a23905 3
                    }
                  else
                    {
d23910 11
a23920 4
                    }
                case 'a':
                  if (strncmp (KR_keyword, "/dev/sdca4", 10) == 0)
                    {
d23922 1
a23922 1
return dev_storage + 1661;
d23925 4
a23928 3
                    }
                  else
                    {
d23930 1
a23930 1
return	NULL;
d23933 3
a23935 4
                    }
                case '1':
                  if (strncmp (KR_keyword, "/dev/sdc14", 10) == 0)
                    {
d23937 1
a23937 1
return dev_storage + 453;
d23940 4
a23943 3
                    }
                  else
                    {
d23945 1
a23945 1
return	NULL;
d23948 3
a23950 2
                    }
                default:
d23956 2
a23957 2
            case 'b':
              switch (KR_keyword [8])
d23959 2
a23960 2
                case 'z':
                  if (strncmp (KR_keyword, "/dev/sdbz4", 10) == 0)
d23963 1
a23963 1
return dev_storage + 1620;
d23974 2
a23975 2
                case 'y':
                  if (strncmp (KR_keyword, "/dev/sdby4", 10) == 0)
d23978 1
a23978 1
return dev_storage + 1605;
d23989 1
a23989 10
                case 'x':
                  if (strncmp (KR_keyword, "/dev/sdbx4", 10) == 0)
                    {
{
return dev_storage + 1590;

}
                    }
                  else
                    {
d23994 6
a23999 3
                    }
                case 'w':
                  if (strncmp (KR_keyword, "/dev/sdbw4", 10) == 0)
d24002 1
a24002 1
return dev_storage + 1575;
d24013 2
a24014 2
                case 'v':
                  if (strncmp (KR_keyword, "/dev/sdbv4", 10) == 0)
d24017 1
a24017 1
return dev_storage + 1560;
d24028 1
a24028 10
                case 'u':
                  if (strncmp (KR_keyword, "/dev/sdbu4", 10) == 0)
                    {
{
return dev_storage + 1545;

}
                    }
                  else
                    {
d24033 4
a24036 4
                    }
                case 't':
                  if (strncmp (KR_keyword, "/dev/sdbt4", 10) == 0)
                    {
d24038 1
a24038 1
return dev_storage + 1530;
d24041 3
a24043 3
                    }
                  else
                    {
d24048 4
a24051 4
                    }
                case 's':
                  if (strncmp (KR_keyword, "/dev/sdbs4", 10) == 0)
                    {
d24053 1
a24053 1
return dev_storage + 1515;
d24056 3
a24058 3
                    }
                  else
                    {
d24063 4
a24066 4
                    }
                case 'r':
                  if (strncmp (KR_keyword, "/dev/sdbr4", 10) == 0)
                    {
d24068 1
a24068 1
return dev_storage + 1500;
d24071 3
a24073 3
                    }
                  else
                    {
d24078 4
a24081 4
                    }
                case 'q':
                  if (strncmp (KR_keyword, "/dev/sdbq4", 10) == 0)
                    {
d24083 1
a24083 1
return dev_storage + 1485;
d24086 3
a24088 3
                    }
                  else
                    {
d24093 4
a24096 4
                    }
                case 'p':
                  if (strncmp (KR_keyword, "/dev/sdbp4", 10) == 0)
                    {
d24098 1
a24098 1
return dev_storage + 1470;
d24101 3
a24103 3
                    }
                  else
                    {
d24108 4
a24111 4
                    }
                case 'o':
                  if (strncmp (KR_keyword, "/dev/sdbo4", 10) == 0)
                    {
d24113 1
a24113 1
return dev_storage + 1455;
d24116 3
a24118 3
                    }
                  else
                    {
d24123 4
a24126 4
                    }
                case 'n':
                  if (strncmp (KR_keyword, "/dev/sdbn4", 10) == 0)
                    {
d24128 1
a24128 1
return dev_storage + 1440;
d24131 3
a24133 3
                    }
                  else
                    {
d24138 4
a24141 4
                    }
                case 'm':
                  if (strncmp (KR_keyword, "/dev/sdbm4", 10) == 0)
                    {
d24143 1
a24143 1
return dev_storage + 1425;
d24146 3
a24148 3
                    }
                  else
                    {
d24153 6
a24158 3
                    }
                case 'l':
                  if (strncmp (KR_keyword, "/dev/sdbl4", 10) == 0)
d24161 1
a24161 1
return dev_storage + 1410;
d24172 2
a24173 2
                case 'k':
                  if (strncmp (KR_keyword, "/dev/sdbk4", 10) == 0)
d24176 1
a24176 1
return dev_storage + 1395;
d24187 2
a24188 2
                case 'j':
                  if (strncmp (KR_keyword, "/dev/sdbj4", 10) == 0)
d24191 1
a24191 1
return dev_storage + 1380;
d24202 2
a24203 2
                case 'i':
                  if (strncmp (KR_keyword, "/dev/sdbi4", 10) == 0)
d24206 1
a24206 1
return dev_storage + 1365;
d24217 2
a24218 2
                case 'h':
                  if (strncmp (KR_keyword, "/dev/sdbh4", 10) == 0)
d24221 1
a24221 1
return dev_storage + 1350;
d24232 2
a24233 2
                case 'g':
                  if (strncmp (KR_keyword, "/dev/sdbg4", 10) == 0)
d24236 1
a24236 1
return dev_storage + 1335;
d24247 2
a24248 2
                case 'f':
                  if (strncmp (KR_keyword, "/dev/sdbf4", 10) == 0)
d24251 1
a24251 1
return dev_storage + 1320;
d24262 2
a24263 2
                case 'e':
                  if (strncmp (KR_keyword, "/dev/sdbe4", 10) == 0)
d24266 1
a24266 1
return dev_storage + 1305;
d24277 2
a24278 2
                case 'd':
                  if (strncmp (KR_keyword, "/dev/sdbd4", 10) == 0)
d24281 1
a24281 1
return dev_storage + 1290;
d24292 2
a24293 2
                case 'c':
                  if (strncmp (KR_keyword, "/dev/sdbc4", 10) == 0)
d24296 1
a24296 1
return dev_storage + 1275;
d24307 2
a24308 2
                case 'b':
                  if (strncmp (KR_keyword, "/dev/sdbb4", 10) == 0)
d24311 1
a24311 1
return dev_storage + 1260;
d24322 2
a24323 2
                case 'a':
                  if (strncmp (KR_keyword, "/dev/sdba4", 10) == 0)
d24326 1
a24326 1
return dev_storage + 1245;
d24337 2
a24338 2
                case '1':
                  if (strncmp (KR_keyword, "/dev/sdb14", 10) == 0)
d24341 1
a24341 1
return dev_storage + 438;
d24352 2
a24353 11
                default:
{
return	NULL;

}
                }
            case 'a':
              switch (KR_keyword [8])
                {
                case 'z':
                  if (strncmp (KR_keyword, "/dev/sdaz4", 10) == 0)
d24356 1
a24356 1
return dev_storage + 1204;
d24367 2
a24368 2
                case 'y':
                  if (strncmp (KR_keyword, "/dev/sday4", 10) == 0)
d24371 1
a24371 1
return dev_storage + 1189;
d24382 2
a24383 2
                case 'x':
                  if (strncmp (KR_keyword, "/dev/sdax4", 10) == 0)
d24386 1
a24386 1
return dev_storage + 1174;
d24397 2
a24398 2
                case 'w':
                  if (strncmp (KR_keyword, "/dev/sdaw4", 10) == 0)
d24401 1
a24401 1
return dev_storage + 1159;
d24412 2
a24413 2
                case 'v':
                  if (strncmp (KR_keyword, "/dev/sdav4", 10) == 0)
d24416 1
a24416 1
return dev_storage + 1144;
d24427 2
a24428 2
                case 'u':
                  if (strncmp (KR_keyword, "/dev/sdau4", 10) == 0)
d24431 1
a24431 1
return dev_storage + 1129;
d24442 2
a24443 2
                case 't':
                  if (strncmp (KR_keyword, "/dev/sdat4", 10) == 0)
d24446 1
a24446 1
return dev_storage + 1114;
d24457 2
a24458 2
                case 's':
                  if (strncmp (KR_keyword, "/dev/sdas4", 10) == 0)
d24461 1
a24461 1
return dev_storage + 1099;
d24472 2
a24473 2
                case 'r':
                  if (strncmp (KR_keyword, "/dev/sdar4", 10) == 0)
d24476 1
a24476 1
return dev_storage + 1084;
d24487 2
a24488 2
                case 'q':
                  if (strncmp (KR_keyword, "/dev/sdaq4", 10) == 0)
d24491 1
a24491 1
return dev_storage + 1069;
d24502 2
a24503 2
                case 'p':
                  if (strncmp (KR_keyword, "/dev/sdap4", 10) == 0)
d24506 1
a24506 1
return dev_storage + 1054;
d24517 2
a24518 2
                case 'o':
                  if (strncmp (KR_keyword, "/dev/sdao4", 10) == 0)
d24520 3
d24524 1
a24524 1
return dev_storage + 1039;
d24527 3
a24529 3
                    }
                  else
                    {
d24534 4
a24537 4
                    }
                case 'n':
                  if (strncmp (KR_keyword, "/dev/sdan4", 10) == 0)
                    {
d24539 1
a24539 1
return dev_storage + 1024;
d24542 3
a24544 3
                    }
                  else
                    {
d24549 2
a24550 4
                    }
                case 'm':
                  if (strncmp (KR_keyword, "/dev/sdam4", 10) == 0)
                    {
d24552 1
a24552 1
return dev_storage + 1009;
d24556 1
a24556 2
                  else
                    {
d24561 6
a24566 3
                    }
                case 'l':
                  if (strncmp (KR_keyword, "/dev/sdal4", 10) == 0)
d24569 1
a24569 1
return dev_storage + 994;
d24580 2
a24581 2
                case 'k':
                  if (strncmp (KR_keyword, "/dev/sdak4", 10) == 0)
d24584 1
a24584 1
return dev_storage + 979;
d24595 2
a24596 2
                case 'j':
                  if (strncmp (KR_keyword, "/dev/sdaj4", 10) == 0)
d24599 1
a24599 1
return dev_storage + 964;
d24610 2
a24611 2
                case 'i':
                  if (strncmp (KR_keyword, "/dev/sdai4", 10) == 0)
d24614 1
a24614 1
return dev_storage + 949;
d24625 2
a24626 2
                case 'h':
                  if (strncmp (KR_keyword, "/dev/sdah4", 10) == 0)
d24629 1
a24629 1
return dev_storage + 934;
d24640 2
a24641 2
                case 'g':
                  if (strncmp (KR_keyword, "/dev/sdag4", 10) == 0)
d24644 1
a24644 1
return dev_storage + 919;
d24655 2
a24656 2
                case 'f':
                  if (strncmp (KR_keyword, "/dev/sdaf4", 10) == 0)
d24659 1
a24659 1
return dev_storage + 904;
d24670 2
a24671 2
                case 'e':
                  if (strncmp (KR_keyword, "/dev/sdae4", 10) == 0)
d24674 1
a24674 1
return dev_storage + 889;
d24685 2
a24686 2
                case 'd':
                  if (strncmp (KR_keyword, "/dev/sdad4", 10) == 0)
d24689 1
a24689 1
return dev_storage + 874;
d24700 2
a24701 2
                case 'c':
                  if (strncmp (KR_keyword, "/dev/sdac4", 10) == 0)
d24704 1
a24704 1
return dev_storage + 859;
d24715 2
a24716 2
                case 'b':
                  if (strncmp (KR_keyword, "/dev/sdab4", 10) == 0)
d24719 1
a24719 1
return dev_storage + 844;
d24730 2
a24731 2
                case 'a':
                  if (strncmp (KR_keyword, "/dev/sdaa4", 10) == 0)
d24734 1
a24734 1
return dev_storage + 829;
d24745 2
a24746 2
                case '1':
                  if (strncmp (KR_keyword, "/dev/sda14", 10) == 0)
d24749 1
a24749 1
return dev_storage + 423;
d24760 2
a24761 11
                default:
{
return	NULL;

}
                }
            case '1':
              switch (KR_keyword [8])
                {
                case '2':
                  if (strncmp (KR_keyword, "/dev/st124", 10) == 0)
d24764 1
a24764 1
return dev_storage + 2572;
d24775 2
a24776 2
                case '1':
                  if (strncmp (KR_keyword, "/dev/st114", 10) == 0)
d24779 1
a24779 1
return dev_storage + 2562;
d24790 2
a24791 2
                case '0':
                  if (strncmp (KR_keyword, "/dev/st104", 10) == 0)
d24794 1
a24794 1
return dev_storage + 2552;
d24805 3
a24807 1
                default:
d24809 1
a24809 1
return	NULL;
d24812 3
a24814 2
                }
            default:
d24819 4
a24822 7
            }
        case '3':
          switch (KR_keyword [7])
            {
            case 'z':
              if (strncmp (KR_keyword, "/dev/sdz13", 10) == 0)
                {
d24824 1
a24824 1
return dev_storage + 797;
d24827 3
a24829 3
                }
              else
                {
d24834 3
a24836 6
                }
            case 'y':
              switch (KR_keyword [8])
                {
                case 'm':
                  if (strncmp (KR_keyword, "/dev/ptym3", 10) == 0)
d24839 1
a24839 1
return dev_storage + 306;
d24850 2
a24851 2
                case 'S':
                  if (strncmp (KR_keyword, "/dev/ttyS3", 10) == 0)
d24854 1
a24854 1
return dev_storage + 2580;
d24865 2
a24866 2
                case '6':
                  if (strncmp (KR_keyword, "/dev/pty63", 10) == 0)
d24869 1
a24869 1
return dev_storage + 302;
d24880 2
a24881 2
                case '5':
                  if (strncmp (KR_keyword, "/dev/pty53", 10) == 0)
d24884 1
a24884 1
return dev_storage + 292;
d24895 2
a24896 2
                case '4':
                  if (strncmp (KR_keyword, "/dev/pty43", 10) == 0)
d24899 1
a24899 1
return dev_storage + 282;
d24910 2
a24911 2
                case '3':
                  if (strncmp (KR_keyword, "/dev/pty33", 10) == 0)
d24914 1
a24914 1
return dev_storage + 272;
d24925 2
a24926 2
                case '2':
                  if (strncmp (KR_keyword, "/dev/pty23", 10) == 0)
d24929 1
a24929 1
return dev_storage + 262;
d24940 2
a24941 2
                case '1':
                  switch (KR_keyword [5])
a24942 3
                    case 's':
                      if (strncmp (KR_keyword, "/dev/sdy13", 10) == 0)
                        {
d24944 1
a24944 1
return dev_storage + 782;
d24947 3
a24949 3
                        }
                      else
                        {
d24954 4
a24957 4
                        }
                    case 'p':
                      if (strncmp (KR_keyword, "/dev/pty13", 10) == 0)
                        {
d24959 1
a24959 1
return dev_storage + 252;
d24962 3
a24964 9
                        }
                      else
                        {
{
return	NULL;

}
                        }
                    default:
d24976 2
a24977 2
            case 'x':
              if (strncmp (KR_keyword, "/dev/sdx13", 10) == 0)
d24979 3
d24983 1
a24983 1
return dev_storage + 767;
d24986 3
a24988 3
                }
              else
                {
d24993 4
a24996 4
                }
            case 'w':
              if (strncmp (KR_keyword, "/dev/sdw13", 10) == 0)
                {
d24998 1
a24998 1
return dev_storage + 752;
d25001 3
a25003 3
                }
              else
                {
d25008 4
a25011 4
                }
            case 'v':
              if (strncmp (KR_keyword, "/dev/sdv13", 10) == 0)
                {
d25013 1
a25013 1
return dev_storage + 737;
d25016 3
a25018 3
                }
              else
                {
d25023 4
a25026 4
                }
            case 'u':
              if (strncmp (KR_keyword, "/dev/sdu13", 10) == 0)
                {
d25028 1
a25028 1
return dev_storage + 722;
d25031 3
a25033 3
                }
              else
                {
d25038 3
a25040 6
                }
            case 't':
              switch (KR_keyword [8])
                {
                case '9':
                  if (strncmp (KR_keyword, "/dev/nst93", 10) == 0)
d25043 1
a25043 1
return dev_storage + 200;
d25054 2
a25055 2
                case '8':
                  if (strncmp (KR_keyword, "/dev/nst83", 10) == 0)
d25058 1
a25058 1
return dev_storage + 190;
d25069 2
a25070 2
                case '7':
                  if (strncmp (KR_keyword, "/dev/nst73", 10) == 0)
d25073 1
a25073 1
return dev_storage + 180;
d25084 2
a25085 2
                case '6':
                  if (strncmp (KR_keyword, "/dev/nst63", 10) == 0)
d25088 1
a25088 1
return dev_storage + 170;
d25099 2
a25100 2
                case '5':
                  if (strncmp (KR_keyword, "/dev/nst53", 10) == 0)
d25103 1
a25103 1
return dev_storage + 160;
d25114 2
a25115 2
                case '4':
                  if (strncmp (KR_keyword, "/dev/nst43", 10) == 0)
d25118 1
a25118 1
return dev_storage + 150;
d25129 2
a25130 2
                case '3':
                  if (strncmp (KR_keyword, "/dev/nst33", 10) == 0)
d25133 1
a25133 1
return dev_storage + 140;
d25144 2
a25145 2
                case '2':
                  if (strncmp (KR_keyword, "/dev/nst23", 10) == 0)
d25148 1
a25148 1
return dev_storage + 130;
d25159 2
a25160 2
                case '1':
                  switch (KR_keyword [5])
a25161 3
                    case 's':
                      if (strncmp (KR_keyword, "/dev/sdt13", 10) == 0)
                        {
d25163 1
a25163 1
return dev_storage + 707;
d25166 3
a25168 3
                        }
                      else
                        {
d25173 4
a25176 4
                        }
                    case 'n':
                      if (strncmp (KR_keyword, "/dev/nst13", 10) == 0)
                        {
d25178 1
a25178 1
return dev_storage + 120;
d25181 3
a25183 3
                        }
                      else
                        {
d25188 4
a25191 2
                        }
                    default:
d25193 1
a25193 1
return	NULL;
d25197 2
a25198 1
                default:
d25203 4
a25206 4
                }
            case 's':
              if (strncmp (KR_keyword, "/dev/sds13", 10) == 0)
                {
d25208 1
a25208 1
return dev_storage + 692;
d25211 3
a25213 3
                }
              else
                {
d25218 4
a25221 4
                }
            case 'r':
              if (strncmp (KR_keyword, "/dev/sdr13", 10) == 0)
                {
d25223 1
a25223 1
return dev_storage + 677;
d25226 3
a25228 3
                }
              else
                {
d25233 4
a25236 4
                }
            case 'q':
              if (strncmp (KR_keyword, "/dev/sdq13", 10) == 0)
                {
d25238 1
a25238 1
return dev_storage + 662;
d25241 3
a25243 3
                }
              else
                {
d25248 4
a25251 4
                }
            case 'p':
              if (strncmp (KR_keyword, "/dev/sdp13", 10) == 0)
                {
d25253 1
a25253 1
return dev_storage + 647;
d25256 3
a25258 3
                }
              else
                {
d25263 4
a25266 4
                }
            case 'o':
              if (strncmp (KR_keyword, "/dev/sdo13", 10) == 0)
                {
d25268 1
a25268 1
return dev_storage + 632;
d25271 3
a25273 3
                }
              else
                {
d25278 3
a25280 6
                }
            case 'n':
              switch (KR_keyword [5])
                {
                case 's':
                  if (strncmp (KR_keyword, "/dev/sdn13", 10) == 0)
d25283 1
a25283 1
return dev_storage + 617;
d25294 2
a25295 2
                case 'c':
                  if (strncmp (KR_keyword, "/dev/cons3", 10) == 0)
d25298 1
a25298 1
return dev_storage + 23;
d25309 2
a25310 11
                default:
{
return	NULL;

}
                }
            case 'm':
              switch (KR_keyword [5])
                {
                case 's':
                  if (strncmp (KR_keyword, "/dev/sdm13", 10) == 0)
d25313 1
a25313 1
return dev_storage + 602;
d25325 1
a25325 1
                  if (strncmp (KR_keyword, "/dev/com13", 10) == 0)
d25328 1
a25328 1
return dev_storage + 14;
d25339 3
a25341 1
                default:
d25343 1
a25343 1
return	NULL;
d25346 3
a25348 11
                }
            case 'l':
              if (strncmp (KR_keyword, "/dev/sdl13", 10) == 0)
                {
{
return dev_storage + 587;

}
                }
              else
                {
d25353 4
a25356 4
                }
            case 'k':
              if (strncmp (KR_keyword, "/dev/sdk13", 10) == 0)
                {
d25358 1
a25358 1
return dev_storage + 572;
d25361 3
a25363 3
                }
              else
                {
d25368 4
a25371 4
                }
            case 'j':
              if (strncmp (KR_keyword, "/dev/sdj13", 10) == 0)
                {
d25373 1
a25373 1
return dev_storage + 557;
d25376 3
a25378 3
                }
              else
                {
d25383 2
a25384 11
                }
            case 'i':
              if (strncmp (KR_keyword, "/dev/sdi13", 10) == 0)
                {
{
return dev_storage + 542;

}
                }
              else
                {
d25390 2
a25391 2
            case 'h':
              if (strncmp (KR_keyword, "/dev/sdh13", 10) == 0)
d25393 3
d25397 1
a25397 1
return dev_storage + 527;
d25400 3
a25402 3
                }
              else
                {
d25407 4
a25410 34
                }
            case 'g':
              if (strncmp (KR_keyword, "/dev/sdg13", 10) == 0)
                {
{
return dev_storage + 512;

}
                }
              else
                {
{
return	NULL;

}
                }
            case 'f':
              if (strncmp (KR_keyword, "/dev/sdf13", 10) == 0)
                {
{
return dev_storage + 497;

}
                }
              else
                {
{
return	NULL;

}
                }
            case 'e':
              if (strncmp (KR_keyword, "/dev/sde13", 10) == 0)
                {
d25412 1
a25412 1
return dev_storage + 482;
d25415 3
a25417 3
                }
              else
                {
d25422 1
a25422 4
                }
            case 'd':
              switch (KR_keyword [8])
                {
d25424 1
a25424 1
                  if (strncmp (KR_keyword, "/dev/sddx3", 10) == 0)
d25427 1
a25427 1
return dev_storage + 2419;
d25439 1
a25439 1
                  if (strncmp (KR_keyword, "/dev/sddw3", 10) == 0)
d25442 1
a25442 1
return dev_storage + 2404;
d25454 1
a25454 1
                  if (strncmp (KR_keyword, "/dev/sddv3", 10) == 0)
d25457 1
a25457 1
return dev_storage + 2389;
d25469 1
a25469 1
                  if (strncmp (KR_keyword, "/dev/sddu3", 10) == 0)
d25472 1
a25472 1
return dev_storage + 2374;
d25484 1
a25484 1
                  if (strncmp (KR_keyword, "/dev/sddt3", 10) == 0)
d25487 1
a25487 1
return dev_storage + 2359;
d25499 1
a25499 1
                  if (strncmp (KR_keyword, "/dev/sdds3", 10) == 0)
d25502 1
a25502 1
return dev_storage + 2344;
d25514 1
a25514 1
                  if (strncmp (KR_keyword, "/dev/sddr3", 10) == 0)
d25517 1
a25517 1
return dev_storage + 2329;
d25529 1
a25529 1
                  if (strncmp (KR_keyword, "/dev/sddq3", 10) == 0)
d25532 1
a25532 1
return dev_storage + 2314;
d25544 1
a25544 1
                  if (strncmp (KR_keyword, "/dev/sddp3", 10) == 0)
d25547 1
a25547 1
return dev_storage + 2299;
d25559 1
a25559 1
                  if (strncmp (KR_keyword, "/dev/sddo3", 10) == 0)
d25562 1
a25562 1
return dev_storage + 2284;
d25574 1
a25574 1
                  if (strncmp (KR_keyword, "/dev/sddn3", 10) == 0)
d25577 1
a25577 1
return dev_storage + 2269;
d25589 1
a25589 1
                  if (strncmp (KR_keyword, "/dev/sddm3", 10) == 0)
d25592 1
a25592 1
return dev_storage + 2254;
d25604 1
a25604 1
                  if (strncmp (KR_keyword, "/dev/sddl3", 10) == 0)
d25607 1
a25607 1
return dev_storage + 2239;
d25619 1
a25619 1
                  if (strncmp (KR_keyword, "/dev/sddk3", 10) == 0)
d25622 1
a25622 1
return dev_storage + 2224;
d25634 1
a25634 1
                  if (strncmp (KR_keyword, "/dev/sddj3", 10) == 0)
d25637 1
a25637 1
return dev_storage + 2209;
d25649 1
a25649 1
                  if (strncmp (KR_keyword, "/dev/sddi3", 10) == 0)
d25652 1
a25652 1
return dev_storage + 2194;
d25664 1
a25664 1
                  if (strncmp (KR_keyword, "/dev/sddh3", 10) == 0)
d25667 1
a25667 1
return dev_storage + 2179;
d25679 1
a25679 1
                  if (strncmp (KR_keyword, "/dev/sddg3", 10) == 0)
d25682 1
a25682 1
return dev_storage + 2164;
d25694 1
a25694 1
                  if (strncmp (KR_keyword, "/dev/sddf3", 10) == 0)
d25697 1
a25697 1
return dev_storage + 2149;
d25709 1
a25709 1
                  if (strncmp (KR_keyword, "/dev/sdde3", 10) == 0)
d25712 1
a25712 1
return dev_storage + 2134;
d25724 1
a25724 1
                  if (strncmp (KR_keyword, "/dev/sddd3", 10) == 0)
d25727 1
a25727 1
return dev_storage + 2119;
d25739 1
a25739 1
                  if (strncmp (KR_keyword, "/dev/sddc3", 10) == 0)
d25742 1
a25742 1
return dev_storage + 2104;
d25754 1
a25754 1
                  if (strncmp (KR_keyword, "/dev/sddb3", 10) == 0)
d25757 1
a25757 1
return dev_storage + 2089;
d25769 1
a25769 1
                  if (strncmp (KR_keyword, "/dev/sdda3", 10) == 0)
d25772 1
a25772 1
return dev_storage + 2074;
d25784 25
a25808 1
                  switch (KR_keyword [6])
a25809 3
                    case 'd':
                      if (strncmp (KR_keyword, "/dev/sdd13", 10) == 0)
                        {
d25811 1
a25811 1
return dev_storage + 467;
d25814 3
a25816 3
                        }
                      else
                        {
d25821 4
a25824 4
                        }
                    case 'c':
                      if (strncmp (KR_keyword, "/dev/scd13", 10) == 0)
                        {
d25826 1
a25826 1
return dev_storage + 381;
d25829 3
a25831 3
                        }
                      else
                        {
d25836 11
a25846 2
                        }
                    default:
d25858 25
a25882 1
            case 'c':
d25885 2
a25886 2
                case 'z':
                  if (strncmp (KR_keyword, "/dev/sdcz3", 10) == 0)
d25889 1
a25889 1
return dev_storage + 2035;
d25900 2
a25901 2
                case 'y':
                  if (strncmp (KR_keyword, "/dev/sdcy3", 10) == 0)
d25904 1
a25904 1
return dev_storage + 2020;
d25915 2
a25916 2
                case 'x':
                  if (strncmp (KR_keyword, "/dev/sdcx3", 10) == 0)
d25919 1
a25919 1
return dev_storage + 2005;
d25930 2
a25931 2
                case 'w':
                  if (strncmp (KR_keyword, "/dev/sdcw3", 10) == 0)
d25934 1
a25934 1
return dev_storage + 1990;
d25945 2
a25946 2
                case 'v':
                  if (strncmp (KR_keyword, "/dev/sdcv3", 10) == 0)
d25949 1
a25949 1
return dev_storage + 1975;
d25960 2
a25961 2
                case 'u':
                  if (strncmp (KR_keyword, "/dev/sdcu3", 10) == 0)
d25964 1
a25964 1
return dev_storage + 1960;
d25975 2
a25976 2
                case 't':
                  if (strncmp (KR_keyword, "/dev/sdct3", 10) == 0)
d25978 31
d26010 1
a26010 1
return dev_storage + 1945;
d26014 61
a26074 2
                  else
                    {
d26079 6
a26084 3
                    }
                case 's':
                  if (strncmp (KR_keyword, "/dev/sdcs3", 10) == 0)
d26087 1
a26087 1
return dev_storage + 1930;
d26098 2
a26099 2
                case 'r':
                  if (strncmp (KR_keyword, "/dev/sdcr3", 10) == 0)
d26102 1
a26102 1
return dev_storage + 1915;
d26113 2
a26114 2
                case 'q':
                  if (strncmp (KR_keyword, "/dev/sdcq3", 10) == 0)
d26117 1
a26117 1
return dev_storage + 1900;
d26128 2
a26129 2
                case 'p':
                  if (strncmp (KR_keyword, "/dev/sdcp3", 10) == 0)
d26132 1
a26132 1
return dev_storage + 1885;
d26143 2
a26144 2
                case 'o':
                  if (strncmp (KR_keyword, "/dev/sdco3", 10) == 0)
d26147 1
a26147 1
return dev_storage + 1870;
d26158 2
a26159 2
                case 'n':
                  if (strncmp (KR_keyword, "/dev/sdcn3", 10) == 0)
d26162 1
a26162 1
return dev_storage + 1855;
d26173 2
a26174 2
                case 'm':
                  if (strncmp (KR_keyword, "/dev/sdcm3", 10) == 0)
d26177 1
a26177 1
return dev_storage + 1840;
d26188 2
a26189 2
                case 'l':
                  if (strncmp (KR_keyword, "/dev/sdcl3", 10) == 0)
d26192 1
a26192 1
return dev_storage + 1825;
d26203 2
a26204 2
                case 'k':
                  if (strncmp (KR_keyword, "/dev/sdck3", 10) == 0)
d26206 31
d26238 1
a26238 1
return dev_storage + 1810;
d26242 76
a26317 2
                  else
                    {
d26322 6
a26327 3
                    }
                case 'j':
                  if (strncmp (KR_keyword, "/dev/sdcj3", 10) == 0)
d26330 1
a26330 1
return dev_storage + 1795;
d26341 2
a26342 2
                case 'i':
                  if (strncmp (KR_keyword, "/dev/sdci3", 10) == 0)
d26345 1
a26345 1
return dev_storage + 1780;
d26356 1
a26356 10
                case 'h':
                  if (strncmp (KR_keyword, "/dev/sdch3", 10) == 0)
                    {
{
return dev_storage + 1765;

}
                    }
                  else
                    {
d26361 6
a26366 3
                    }
                case 'g':
                  if (strncmp (KR_keyword, "/dev/sdcg3", 10) == 0)
d26369 1
a26369 1
return dev_storage + 1750;
d26380 2
a26381 2
                case 'f':
                  if (strncmp (KR_keyword, "/dev/sdcf3", 10) == 0)
d26384 1
a26384 1
return dev_storage + 1735;
d26395 1
a26395 10
                case 'e':
                  if (strncmp (KR_keyword, "/dev/sdce3", 10) == 0)
                    {
{
return dev_storage + 1720;

}
                    }
                  else
                    {
d26400 4
a26403 4
                    }
                case 'd':
                  if (strncmp (KR_keyword, "/dev/sdcd3", 10) == 0)
                    {
d26405 1
a26405 1
return dev_storage + 1705;
d26408 3
a26410 3
                    }
                  else
                    {
d26415 4
a26418 4
                    }
                case 'c':
                  if (strncmp (KR_keyword, "/dev/sdcc3", 10) == 0)
                    {
d26420 1
a26420 1
return dev_storage + 1690;
d26423 3
a26425 3
                    }
                  else
                    {
d26430 4
a26433 4
                    }
                case 'b':
                  if (strncmp (KR_keyword, "/dev/sdcb3", 10) == 0)
                    {
d26435 1
a26435 1
return dev_storage + 1675;
d26438 3
a26440 3
                    }
                  else
                    {
d26445 4
a26448 4
                    }
                case 'a':
                  if (strncmp (KR_keyword, "/dev/sdca3", 10) == 0)
                    {
d26450 1
a26450 1
return dev_storage + 1660;
d26453 3
a26455 3
                    }
                  else
                    {
d26460 4
a26463 4
                    }
                case '1':
                  if (strncmp (KR_keyword, "/dev/sdc13", 10) == 0)
                    {
d26465 1
a26465 1
return dev_storage + 452;
d26468 3
a26470 3
                    }
                  else
                    {
d26475 11
a26485 2
                    }
                default:
d26491 2
a26492 2
            case 'b':
              switch (KR_keyword [8])
a26493 3
                case 'z':
                  if (strncmp (KR_keyword, "/dev/sdbz3", 10) == 0)
                    {
d26495 1
a26495 1
return dev_storage + 1619;
d26498 3
a26500 3
                    }
                  else
                    {
d26505 4
a26508 4
                    }
                case 'y':
                  if (strncmp (KR_keyword, "/dev/sdby3", 10) == 0)
                    {
d26510 1
a26510 1
return dev_storage + 1604;
d26513 3
a26515 3
                    }
                  else
                    {
d26520 4
a26523 1
                    }
d26525 1
a26525 1
                  if (strncmp (KR_keyword, "/dev/sdbx3", 10) == 0)
d26528 1
a26528 1
return dev_storage + 1589;
d26540 1
a26540 1
                  if (strncmp (KR_keyword, "/dev/sdbw3", 10) == 0)
d26543 1
a26543 1
return dev_storage + 1574;
d26555 1
a26555 1
                  if (strncmp (KR_keyword, "/dev/sdbv3", 10) == 0)
d26558 1
a26558 1
return dev_storage + 1559;
d26570 1
a26570 1
                  if (strncmp (KR_keyword, "/dev/sdbu3", 10) == 0)
d26573 1
a26573 1
return dev_storage + 1544;
d26585 1
a26585 1
                  if (strncmp (KR_keyword, "/dev/sdbt3", 10) == 0)
d26588 1
a26588 1
return dev_storage + 1529;
d26600 1
a26600 1
                  if (strncmp (KR_keyword, "/dev/sdbs3", 10) == 0)
d26603 1
a26603 1
return dev_storage + 1514;
d26615 1
a26615 1
                  if (strncmp (KR_keyword, "/dev/sdbr3", 10) == 0)
d26618 1
a26618 1
return dev_storage + 1499;
d26630 1
a26630 1
                  if (strncmp (KR_keyword, "/dev/sdbq3", 10) == 0)
d26633 1
a26633 1
return dev_storage + 1484;
d26645 1
a26645 1
                  if (strncmp (KR_keyword, "/dev/sdbp3", 10) == 0)
d26648 1
a26648 1
return dev_storage + 1469;
d26660 1
a26660 1
                  if (strncmp (KR_keyword, "/dev/sdbo3", 10) == 0)
d26663 1
a26663 1
return dev_storage + 1454;
d26675 1
a26675 1
                  if (strncmp (KR_keyword, "/dev/sdbn3", 10) == 0)
d26678 1
a26678 1
return dev_storage + 1439;
d26690 1
a26690 1
                  if (strncmp (KR_keyword, "/dev/sdbm3", 10) == 0)
d26693 1
a26693 1
return dev_storage + 1424;
d26705 1
a26705 1
                  if (strncmp (KR_keyword, "/dev/sdbl3", 10) == 0)
d26708 1
a26708 1
return dev_storage + 1409;
d26720 1
a26720 1
                  if (strncmp (KR_keyword, "/dev/sdbk3", 10) == 0)
d26723 1
a26723 1
return dev_storage + 1394;
d26735 1
a26735 1
                  if (strncmp (KR_keyword, "/dev/sdbj3", 10) == 0)
d26738 1
a26738 1
return dev_storage + 1379;
d26750 1
a26750 1
                  if (strncmp (KR_keyword, "/dev/sdbi3", 10) == 0)
d26753 1
a26753 1
return dev_storage + 1364;
d26765 1
a26765 1
                  if (strncmp (KR_keyword, "/dev/sdbh3", 10) == 0)
d26768 1
a26768 1
return dev_storage + 1349;
d26780 1
a26780 1
                  if (strncmp (KR_keyword, "/dev/sdbg3", 10) == 0)
d26783 1
a26783 1
return dev_storage + 1334;
d26795 1
a26795 1
                  if (strncmp (KR_keyword, "/dev/sdbf3", 10) == 0)
d26798 1
a26798 1
return dev_storage + 1319;
d26810 1
a26810 1
                  if (strncmp (KR_keyword, "/dev/sdbe3", 10) == 0)
d26813 1
a26813 1
return dev_storage + 1304;
d26825 1
a26825 1
                  if (strncmp (KR_keyword, "/dev/sdbd3", 10) == 0)
d26828 1
a26828 1
return dev_storage + 1289;
d26840 1
a26840 1
                  if (strncmp (KR_keyword, "/dev/sdbc3", 10) == 0)
d26843 1
a26843 1
return dev_storage + 1274;
d26855 1
a26855 1
                  if (strncmp (KR_keyword, "/dev/sdbb3", 10) == 0)
d26858 1
a26858 1
return dev_storage + 1259;
d26870 1
a26870 1
                  if (strncmp (KR_keyword, "/dev/sdba3", 10) == 0)
d26873 1
a26873 1
return dev_storage + 1244;
d26885 1
a26885 1
                  if (strncmp (KR_keyword, "/dev/sdb13", 10) == 0)
d26887 25
d26913 1
a26913 1
return dev_storage + 437;
d26916 2
a26917 3
                    }
                  else
                    {
d26929 1
a26929 1
            case 'a':
d26933 1
a26933 1
                  if (strncmp (KR_keyword, "/dev/sdaz3", 10) == 0)
d26936 1
a26936 1
return dev_storage + 1203;
d26948 1
a26948 1
                  if (strncmp (KR_keyword, "/dev/sday3", 10) == 0)
d26951 1
a26951 1
return dev_storage + 1188;
d26963 1
a26963 1
                  if (strncmp (KR_keyword, "/dev/sdax3", 10) == 0)
d26966 1
a26966 1
return dev_storage + 1173;
d26978 1
a26978 1
                  if (strncmp (KR_keyword, "/dev/sdaw3", 10) == 0)
d26981 1
a26981 1
return dev_storage + 1158;
d26993 1
a26993 1
                  if (strncmp (KR_keyword, "/dev/sdav3", 10) == 0)
d26996 1
a26996 1
return dev_storage + 1143;
d27008 1
a27008 1
                  if (strncmp (KR_keyword, "/dev/sdau3", 10) == 0)
d27011 1
a27011 1
return dev_storage + 1128;
d27023 1
a27023 1
                  if (strncmp (KR_keyword, "/dev/sdat3", 10) == 0)
d27026 1
a27026 1
return dev_storage + 1113;
d27038 1
a27038 1
                  if (strncmp (KR_keyword, "/dev/sdas3", 10) == 0)
d27041 1
a27041 1
return dev_storage + 1098;
d27053 1
a27053 1
                  if (strncmp (KR_keyword, "/dev/sdar3", 10) == 0)
d27056 1
a27056 1
return dev_storage + 1083;
d27068 1
a27068 1
                  if (strncmp (KR_keyword, "/dev/sdaq3", 10) == 0)
d27071 1
a27071 1
return dev_storage + 1068;
d27083 1
a27083 1
                  if (strncmp (KR_keyword, "/dev/sdap3", 10) == 0)
d27086 1
a27086 1
return dev_storage + 1053;
d27098 1
a27098 1
                  if (strncmp (KR_keyword, "/dev/sdao3", 10) == 0)
d27101 1
a27101 1
return dev_storage + 1038;
d27113 1
a27113 1
                  if (strncmp (KR_keyword, "/dev/sdan3", 10) == 0)
d27116 1
a27116 1
return dev_storage + 1023;
d27128 1
a27128 1
                  if (strncmp (KR_keyword, "/dev/sdam3", 10) == 0)
d27131 1
a27131 1
return dev_storage + 1008;
d27143 1
a27143 1
                  if (strncmp (KR_keyword, "/dev/sdal3", 10) == 0)
d27146 1
a27146 1
return dev_storage + 993;
d27158 1
a27158 1
                  if (strncmp (KR_keyword, "/dev/sdak3", 10) == 0)
d27161 1
a27161 1
return dev_storage + 978;
d27173 1
a27173 1
                  if (strncmp (KR_keyword, "/dev/sdaj3", 10) == 0)
d27176 1
a27176 1
return dev_storage + 963;
d27188 1
a27188 1
                  if (strncmp (KR_keyword, "/dev/sdai3", 10) == 0)
d27191 1
a27191 1
return dev_storage + 948;
d27203 1
a27203 1
                  if (strncmp (KR_keyword, "/dev/sdah3", 10) == 0)
d27206 1
a27206 1
return dev_storage + 933;
d27218 1
a27218 1
                  if (strncmp (KR_keyword, "/dev/sdag3", 10) == 0)
d27221 1
a27221 1
return dev_storage + 918;
d27233 1
a27233 1
                  if (strncmp (KR_keyword, "/dev/sdaf3", 10) == 0)
d27236 1
a27236 1
return dev_storage + 903;
d27248 1
a27248 1
                  if (strncmp (KR_keyword, "/dev/sdae3", 10) == 0)
d27251 1
a27251 1
return dev_storage + 888;
d27263 1
a27263 1
                  if (strncmp (KR_keyword, "/dev/sdad3", 10) == 0)
d27266 1
a27266 1
return dev_storage + 873;
d27278 1
a27278 1
                  if (strncmp (KR_keyword, "/dev/sdac3", 10) == 0)
d27281 1
a27281 1
return dev_storage + 858;
d27293 1
a27293 1
                  if (strncmp (KR_keyword, "/dev/sdab3", 10) == 0)
d27296 1
a27296 1
return dev_storage + 843;
d27308 1
a27308 1
                  if (strncmp (KR_keyword, "/dev/sdaa3", 10) == 0)
d27311 1
a27311 1
return dev_storage + 828;
d27323 1
a27323 1
                  if (strncmp (KR_keyword, "/dev/sda13", 10) == 0)
d27326 1
a27326 1
return dev_storage + 422;
d27343 1
a27343 1
            case '1':
d27346 2
a27347 2
                case '2':
                  if (strncmp (KR_keyword, "/dev/st123", 10) == 0)
d27350 1
a27350 1
return dev_storage + 2571;
d27361 2
a27362 80
                case '1':
                  if (strncmp (KR_keyword, "/dev/st113", 10) == 0)
                    {
{
return dev_storage + 2561;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case '0':
                  if (strncmp (KR_keyword, "/dev/st103", 10) == 0)
                    {
{
return dev_storage + 2551;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                default:
{
return	NULL;

}
                }
            default:
{
return	NULL;

}
            }
        case '2':
          switch (KR_keyword [7])
            {
            case 'z':
              if (strncmp (KR_keyword, "/dev/sdz12", 10) == 0)
                {
{
return dev_storage + 796;

}
                }
              else
                {
{
return	NULL;

}
                }
            case 'y':
              switch (KR_keyword [8])
                {
                case 'm':
                  if (strncmp (KR_keyword, "/dev/ptym2", 10) == 0)
                    {
{
return dev_storage + 305;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'S':
                  if (strncmp (KR_keyword, "/dev/ttyS2", 10) == 0)
d27365 1
a27365 1
return dev_storage + 2579;
d27376 2
a27377 2
                case '6':
                  if (strncmp (KR_keyword, "/dev/pty62", 10) == 0)
d27380 1
a27380 1
return dev_storage + 301;
d27391 2
a27392 2
                case '5':
                  if (strncmp (KR_keyword, "/dev/pty52", 10) == 0)
d27395 1
a27395 1
return dev_storage + 291;
d27406 2
a27407 2
                case '4':
                  if (strncmp (KR_keyword, "/dev/pty42", 10) == 0)
d27410 1
a27410 1
return dev_storage + 281;
d27421 2
a27422 2
                case '3':
                  if (strncmp (KR_keyword, "/dev/pty32", 10) == 0)
d27425 1
a27425 1
return dev_storage + 271;
d27436 2
a27437 2
                case '2':
                  if (strncmp (KR_keyword, "/dev/pty22", 10) == 0)
d27440 1
a27440 1
return dev_storage + 261;
d27451 2
a27452 2
                case '1':
                  switch (KR_keyword [5])
a27453 3
                    case 's':
                      if (strncmp (KR_keyword, "/dev/sdy12", 10) == 0)
                        {
d27455 1
a27455 1
return dev_storage + 781;
d27458 3
a27460 3
                        }
                      else
                        {
d27465 4
a27468 4
                        }
                    case 'p':
                      if (strncmp (KR_keyword, "/dev/pty12", 10) == 0)
                        {
d27470 1
a27470 1
return dev_storage + 251;
d27473 3
a27475 3
                        }
                      else
                        {
d27480 4
a27483 2
                        }
                    default:
d27485 1
a27485 1
return	NULL;
d27489 2
a27490 1
                default:
d27495 4
a27498 4
                }
            case 'x':
              if (strncmp (KR_keyword, "/dev/sdx12", 10) == 0)
                {
d27500 1
a27500 1
return dev_storage + 766;
d27503 3
a27505 3
                }
              else
                {
d27510 4
a27513 4
                }
            case 'w':
              if (strncmp (KR_keyword, "/dev/sdw12", 10) == 0)
                {
d27515 1
a27515 1
return dev_storage + 751;
d27518 3
a27520 3
                }
              else
                {
d27525 4
a27528 4
                }
            case 'v':
              if (strncmp (KR_keyword, "/dev/sdv12", 10) == 0)
                {
d27530 1
a27530 1
return dev_storage + 736;
d27533 3
a27535 3
                }
              else
                {
d27540 4
a27543 4
                }
            case 'u':
              if (strncmp (KR_keyword, "/dev/sdu12", 10) == 0)
                {
d27545 1
a27545 1
return dev_storage + 721;
d27548 3
a27550 3
                }
              else
                {
d27555 3
a27557 6
                }
            case 't':
              switch (KR_keyword [8])
                {
                case '9':
                  if (strncmp (KR_keyword, "/dev/nst92", 10) == 0)
d27560 1
a27560 1
return dev_storage + 199;
d27571 2
a27572 2
                case '8':
                  if (strncmp (KR_keyword, "/dev/nst82", 10) == 0)
d27575 1
a27575 1
return dev_storage + 189;
d27586 2
a27587 2
                case '7':
                  if (strncmp (KR_keyword, "/dev/nst72", 10) == 0)
d27590 1
a27590 1
return dev_storage + 179;
d27601 2
a27602 2
                case '6':
                  if (strncmp (KR_keyword, "/dev/nst62", 10) == 0)
d27605 1
a27605 1
return dev_storage + 169;
d27616 2
a27617 2
                case '5':
                  if (strncmp (KR_keyword, "/dev/nst52", 10) == 0)
d27620 1
a27620 1
return dev_storage + 159;
d27631 2
a27632 2
                case '4':
                  if (strncmp (KR_keyword, "/dev/nst42", 10) == 0)
d27635 1
a27635 1
return dev_storage + 149;
d27646 2
a27647 2
                case '3':
                  if (strncmp (KR_keyword, "/dev/nst32", 10) == 0)
d27650 1
a27650 1
return dev_storage + 139;
d27661 2
a27662 2
                case '2':
                  if (strncmp (KR_keyword, "/dev/nst22", 10) == 0)
d27665 1
a27665 1
return dev_storage + 129;
d27676 2
a27677 2
                case '1':
                  switch (KR_keyword [5])
a27678 3
                    case 's':
                      if (strncmp (KR_keyword, "/dev/sdt12", 10) == 0)
                        {
d27680 1
a27680 1
return dev_storage + 706;
d27683 3
a27685 3
                        }
                      else
                        {
d27690 4
a27693 4
                        }
                    case 'n':
                      if (strncmp (KR_keyword, "/dev/nst12", 10) == 0)
                        {
d27695 1
a27695 1
return dev_storage + 119;
d27698 3
a27700 3
                        }
                      else
                        {
d27705 4
a27708 2
                        }
                    default:
d27710 1
a27710 1
return	NULL;
d27714 2
a27715 1
                default:
d27720 4
a27723 4
                }
            case 's':
              if (strncmp (KR_keyword, "/dev/sds12", 10) == 0)
                {
d27725 1
a27725 1
return dev_storage + 691;
d27728 3
a27730 3
                }
              else
                {
d27735 4
a27738 4
                }
            case 'r':
              if (strncmp (KR_keyword, "/dev/sdr12", 10) == 0)
                {
d27740 1
a27740 1
return dev_storage + 676;
d27743 3
a27745 3
                }
              else
                {
d27750 2
a27751 11
                }
            case 'q':
              if (strncmp (KR_keyword, "/dev/sdq12", 10) == 0)
                {
{
return dev_storage + 661;

}
                }
              else
                {
d27757 2
a27758 2
            case 'p':
              if (strncmp (KR_keyword, "/dev/sdp12", 10) == 0)
d27760 3
d27764 1
a27764 1
return dev_storage + 646;
d27767 3
a27769 3
                }
              else
                {
d27774 4
a27777 4
                }
            case 'o':
              if (strncmp (KR_keyword, "/dev/sdo12", 10) == 0)
                {
d27779 1
a27779 1
return dev_storage + 631;
d27782 3
a27784 3
                }
              else
                {
d27789 3
a27791 6
                }
            case 'n':
              switch (KR_keyword [5])
                {
                case 's':
                  if (strncmp (KR_keyword, "/dev/sdn12", 10) == 0)
d27794 1
a27794 1
return dev_storage + 616;
d27805 2
a27806 2
                case 'c':
                  if (strncmp (KR_keyword, "/dev/cons2", 10) == 0)
d27809 1
a27809 1
return dev_storage + 22;
d27820 2
a27821 11
                default:
{
return	NULL;

}
                }
            case 'm':
              switch (KR_keyword [5])
                {
                case 's':
                  if (strncmp (KR_keyword, "/dev/sdm12", 10) == 0)
d27824 1
a27824 1
return dev_storage + 601;
d27835 2
a27836 2
                case 'c':
                  if (strncmp (KR_keyword, "/dev/com12", 10) == 0)
d27839 1
a27839 1
return dev_storage + 13;
d27850 3
a27852 1
                default:
d27854 1
a27854 1
return	NULL;
d27857 3
a27859 11
                }
            case 'l':
              if (strncmp (KR_keyword, "/dev/sdl12", 10) == 0)
                {
{
return dev_storage + 586;

}
                }
              else
                {
d27864 4
a27867 4
                }
            case 'k':
              if (strncmp (KR_keyword, "/dev/sdk12", 10) == 0)
                {
d27869 1
a27869 1
return dev_storage + 571;
d27872 3
a27874 3
                }
              else
                {
d27879 4
a27882 4
                }
            case 'j':
              if (strncmp (KR_keyword, "/dev/sdj12", 10) == 0)
                {
d27884 1
a27884 1
return dev_storage + 556;
d27887 3
a27889 3
                }
              else
                {
d27894 4
a27897 4
                }
            case 'i':
              if (strncmp (KR_keyword, "/dev/sdi12", 10) == 0)
                {
d27899 1
a27899 1
return dev_storage + 541;
d27902 3
a27904 3
                }
              else
                {
d27909 4
a27912 4
                }
            case 'h':
              if (strncmp (KR_keyword, "/dev/sdh12", 10) == 0)
                {
d27914 1
a27914 1
return dev_storage + 526;
d27917 3
a27919 3
                }
              else
                {
d27924 4
a27927 4
                }
            case 'g':
              if (strncmp (KR_keyword, "/dev/sdg12", 10) == 0)
                {
d27929 1
a27929 1
return dev_storage + 511;
d27932 3
a27934 3
                }
              else
                {
d27939 4
a27942 4
                }
            case 'f':
              if (strncmp (KR_keyword, "/dev/sdf12", 10) == 0)
                {
d27944 1
a27944 1
return dev_storage + 496;
d27947 3
a27949 3
                }
              else
                {
d27954 4
a27957 4
                }
            case 'e':
              if (strncmp (KR_keyword, "/dev/sde12", 10) == 0)
                {
d27959 1
a27959 1
return dev_storage + 481;
d27962 3
a27964 3
                }
              else
                {
d27969 3
a27971 6
                }
            case 'd':
              switch (KR_keyword [8])
                {
                case 'x':
                  if (strncmp (KR_keyword, "/dev/sddx2", 10) == 0)
d27974 1
a27974 1
return dev_storage + 2418;
d27985 2
a27986 2
                case 'w':
                  if (strncmp (KR_keyword, "/dev/sddw2", 10) == 0)
d27989 1
a27989 1
return dev_storage + 2403;
d28000 2
a28001 2
                case 'v':
                  if (strncmp (KR_keyword, "/dev/sddv2", 10) == 0)
d28004 1
a28004 1
return dev_storage + 2388;
d28015 2
a28016 2
                case 'u':
                  if (strncmp (KR_keyword, "/dev/sddu2", 10) == 0)
d28019 1
a28019 1
return dev_storage + 2373;
d28030 2
a28031 2
                case 't':
                  if (strncmp (KR_keyword, "/dev/sddt2", 10) == 0)
d28034 1
a28034 1
return dev_storage + 2358;
d28045 2
a28046 2
                case 's':
                  if (strncmp (KR_keyword, "/dev/sdds2", 10) == 0)
d28049 1
a28049 1
return dev_storage + 2343;
d28060 2
a28061 2
                case 'r':
                  if (strncmp (KR_keyword, "/dev/sddr2", 10) == 0)
d28064 1
a28064 1
return dev_storage + 2328;
d28075 2
a28076 2
                case 'q':
                  if (strncmp (KR_keyword, "/dev/sddq2", 10) == 0)
d28079 1
a28079 1
return dev_storage + 2313;
d28090 2
a28091 2
                case 'p':
                  if (strncmp (KR_keyword, "/dev/sddp2", 10) == 0)
d28094 1
a28094 1
return dev_storage + 2298;
d28105 2
a28106 2
                case 'o':
                  if (strncmp (KR_keyword, "/dev/sddo2", 10) == 0)
d28109 1
a28109 1
return dev_storage + 2283;
d28120 2
a28121 2
                case 'n':
                  if (strncmp (KR_keyword, "/dev/sddn2", 10) == 0)
d28124 1
a28124 1
return dev_storage + 2268;
d28135 2
a28136 2
                case 'm':
                  if (strncmp (KR_keyword, "/dev/sddm2", 10) == 0)
d28139 1
a28139 1
return dev_storage + 2253;
d28150 2
a28151 2
                case 'l':
                  if (strncmp (KR_keyword, "/dev/sddl2", 10) == 0)
d28154 1
a28154 1
return dev_storage + 2238;
d28165 11
a28175 2
                case 'k':
                  if (strncmp (KR_keyword, "/dev/sddk2", 10) == 0)
d28178 1
a28178 1
return dev_storage + 2223;
d28189 2
a28190 2
                case 'j':
                  if (strncmp (KR_keyword, "/dev/sddj2", 10) == 0)
d28193 1
a28193 1
return dev_storage + 2208;
d28204 2
a28205 2
                case 'i':
                  if (strncmp (KR_keyword, "/dev/sddi2", 10) == 0)
d28208 1
a28208 1
return dev_storage + 2193;
d28219 1
a28219 3
                case 'h':
                  if (strncmp (KR_keyword, "/dev/sddh2", 10) == 0)
                    {
d28221 1
a28221 1
return dev_storage + 2178;
d28224 2
a28225 3
                    }
                  else
                    {
d28230 7
a28236 4
                    }
                case 'g':
                  if (strncmp (KR_keyword, "/dev/sddg2", 10) == 0)
                    {
d28238 1
a28238 1
return dev_storage + 2163;
d28241 3
a28243 3
                    }
                  else
                    {
d28248 6
a28253 3
                    }
                case 'f':
                  if (strncmp (KR_keyword, "/dev/sddf2", 10) == 0)
d28256 1
a28256 1
return dev_storage + 2148;
d28267 2
a28268 2
                case 'e':
                  if (strncmp (KR_keyword, "/dev/sdde2", 10) == 0)
d28271 1
a28271 1
return dev_storage + 2133;
d28282 2
a28283 2
                case 'd':
                  if (strncmp (KR_keyword, "/dev/sddd2", 10) == 0)
d28286 1
a28286 1
return dev_storage + 2118;
d28297 2
a28298 2
                case 'c':
                  if (strncmp (KR_keyword, "/dev/sddc2", 10) == 0)
d28301 1
a28301 1
return dev_storage + 2103;
d28312 2
a28313 2
                case 'b':
                  if (strncmp (KR_keyword, "/dev/sddb2", 10) == 0)
d28316 1
a28316 1
return dev_storage + 2088;
d28327 2
a28328 2
                case 'a':
                  if (strncmp (KR_keyword, "/dev/sdda2", 10) == 0)
d28331 1
a28331 1
return dev_storage + 2073;
d28343 1
a28343 1
                  switch (KR_keyword [6])
d28345 2
a28346 2
                    case 'd':
                      if (strncmp (KR_keyword, "/dev/sdd12", 10) == 0)
d28349 1
a28349 1
return dev_storage + 466;
d28360 2
a28361 2
                    case 'c':
                      if (strncmp (KR_keyword, "/dev/scd12", 10) == 0)
d28364 1
a28364 1
return dev_storage + 380;
d28387 2
a28388 2
            case 'c':
              switch (KR_keyword [8])
a28389 3
                case 'z':
                  if (strncmp (KR_keyword, "/dev/sdcz2", 10) == 0)
                    {
d28391 1
a28391 1
return dev_storage + 2034;
d28394 3
a28396 3
                    }
                  else
                    {
d28401 4
a28404 4
                    }
                case 'y':
                  if (strncmp (KR_keyword, "/dev/sdcy2", 10) == 0)
                    {
d28406 1
a28406 1
return dev_storage + 2019;
d28409 3
a28411 3
                    }
                  else
                    {
d28416 4
a28419 4
                    }
                case 'x':
                  if (strncmp (KR_keyword, "/dev/sdcx2", 10) == 0)
                    {
d28421 1
a28421 1
return dev_storage + 2004;
d28424 3
a28426 3
                    }
                  else
                    {
d28431 4
a28434 4
                    }
                case 'w':
                  if (strncmp (KR_keyword, "/dev/sdcw2", 10) == 0)
                    {
d28436 1
a28436 1
return dev_storage + 1989;
d28439 3
a28441 3
                    }
                  else
                    {
d28446 6
a28451 3
                    }
                case 'v':
                  if (strncmp (KR_keyword, "/dev/sdcv2", 10) == 0)
d28454 1
a28454 1
return dev_storage + 1974;
d28465 2
a28466 2
                case 'u':
                  if (strncmp (KR_keyword, "/dev/sdcu2", 10) == 0)
d28469 1
a28469 1
return dev_storage + 1959;
d28480 2
a28481 2
                case 't':
                  if (strncmp (KR_keyword, "/dev/sdct2", 10) == 0)
d28484 1
a28484 1
return dev_storage + 1944;
d28495 2
a28496 2
                case 's':
                  if (strncmp (KR_keyword, "/dev/sdcs2", 10) == 0)
d28499 1
a28499 1
return dev_storage + 1929;
d28510 2
a28511 2
                case 'r':
                  if (strncmp (KR_keyword, "/dev/sdcr2", 10) == 0)
d28514 1
a28514 1
return dev_storage + 1914;
d28525 2
a28526 2
                case 'q':
                  if (strncmp (KR_keyword, "/dev/sdcq2", 10) == 0)
d28529 1
a28529 1
return dev_storage + 1899;
d28540 2
a28541 2
                case 'p':
                  if (strncmp (KR_keyword, "/dev/sdcp2", 10) == 0)
d28544 1
a28544 1
return dev_storage + 1884;
d28555 2
a28556 2
                case 'o':
                  if (strncmp (KR_keyword, "/dev/sdco2", 10) == 0)
d28559 1
a28559 1
return dev_storage + 1869;
d28570 2
a28571 2
                case 'n':
                  if (strncmp (KR_keyword, "/dev/sdcn2", 10) == 0)
d28573 3
d28577 1
a28577 1
return dev_storage + 1854;
d28580 3
a28582 3
                    }
                  else
                    {
d28587 4
a28590 4
                    }
                case 'm':
                  if (strncmp (KR_keyword, "/dev/sdcm2", 10) == 0)
                    {
d28592 1
a28592 1
return dev_storage + 1839;
d28595 3
a28597 3
                    }
                  else
                    {
d28602 2
a28603 4
                    }
                case 'l':
                  if (strncmp (KR_keyword, "/dev/sdcl2", 10) == 0)
                    {
d28605 1
a28605 1
return dev_storage + 1824;
d28609 1
a28609 2
                  else
                    {
d28614 4
a28617 4
                    }
                case 'k':
                  if (strncmp (KR_keyword, "/dev/sdck2", 10) == 0)
                    {
d28619 1
a28619 1
return dev_storage + 1809;
d28622 3
a28624 3
                    }
                  else
                    {
d28629 4
a28632 4
                    }
                case 'j':
                  if (strncmp (KR_keyword, "/dev/sdcj2", 10) == 0)
                    {
d28634 1
a28634 1
return dev_storage + 1794;
d28637 3
a28639 3
                    }
                  else
                    {
d28644 4
a28647 4
                    }
                case 'i':
                  if (strncmp (KR_keyword, "/dev/sdci2", 10) == 0)
                    {
d28649 1
a28649 1
return dev_storage + 1779;
d28652 3
a28654 3
                    }
                  else
                    {
d28659 4
a28662 4
                    }
                case 'h':
                  if (strncmp (KR_keyword, "/dev/sdch2", 10) == 0)
                    {
d28664 1
a28664 1
return dev_storage + 1764;
d28667 3
a28669 3
                    }
                  else
                    {
d28674 4
a28677 4
                    }
                case 'g':
                  if (strncmp (KR_keyword, "/dev/sdcg2", 10) == 0)
                    {
d28679 1
a28679 1
return dev_storage + 1749;
d28682 3
a28684 3
                    }
                  else
                    {
d28689 6
a28694 3
                    }
                case 'f':
                  if (strncmp (KR_keyword, "/dev/sdcf2", 10) == 0)
d28697 1
a28697 1
return dev_storage + 1734;
d28708 2
a28709 2
                case 'e':
                  if (strncmp (KR_keyword, "/dev/sdce2", 10) == 0)
d28712 1
a28712 1
return dev_storage + 1719;
d28723 11
a28733 2
                case 'd':
                  if (strncmp (KR_keyword, "/dev/sdcd2", 10) == 0)
d28736 1
a28736 1
return dev_storage + 1704;
d28748 1
a28748 1
                  if (strncmp (KR_keyword, "/dev/sdcc2", 10) == 0)
d28751 1
a28751 1
return dev_storage + 1689;
d28762 39
a28800 3
                case 'b':
                  if (strncmp (KR_keyword, "/dev/sdcb2", 10) == 0)
                    {
d28802 1
a28802 1
return dev_storage + 1674;
d28805 3
a28807 3
                    }
                  else
                    {
d28812 4
a28815 4
                    }
                case 'a':
                  if (strncmp (KR_keyword, "/dev/sdca2", 10) == 0)
                    {
d28817 1
a28817 1
return dev_storage + 1659;
d28820 3
a28822 3
                    }
                  else
                    {
d28827 4
a28830 4
                    }
                case '1':
                  if (strncmp (KR_keyword, "/dev/sdc12", 10) == 0)
                    {
d28832 1
a28832 1
return dev_storage + 451;
d28835 3
a28837 3
                    }
                  else
                    {
d28842 11
a28852 2
                    }
                default:
d28858 2
a28859 2
            case 'b':
              switch (KR_keyword [8])
a28860 3
                case 'z':
                  if (strncmp (KR_keyword, "/dev/sdbz2", 10) == 0)
                    {
d28862 1
a28862 1
return dev_storage + 1618;
d28865 3
a28867 3
                    }
                  else
                    {
d28872 4
a28875 4
                    }
                case 'y':
                  if (strncmp (KR_keyword, "/dev/sdby2", 10) == 0)
                    {
d28877 1
a28877 1
return dev_storage + 1603;
d28880 3
a28882 3
                    }
                  else
                    {
d28887 4
a28890 1
                    }
d28892 1
a28892 1
                  if (strncmp (KR_keyword, "/dev/sdbx2", 10) == 0)
d28895 1
a28895 1
return dev_storage + 1588;
d28907 1
a28907 1
                  if (strncmp (KR_keyword, "/dev/sdbw2", 10) == 0)
d28910 1
a28910 1
return dev_storage + 1573;
d28922 1
a28922 1
                  if (strncmp (KR_keyword, "/dev/sdbv2", 10) == 0)
d28925 1
a28925 1
return dev_storage + 1558;
d28937 1
a28937 1
                  if (strncmp (KR_keyword, "/dev/sdbu2", 10) == 0)
d28940 1
a28940 1
return dev_storage + 1543;
d28952 1
a28952 1
                  if (strncmp (KR_keyword, "/dev/sdbt2", 10) == 0)
d28955 1
a28955 1
return dev_storage + 1528;
d28967 1
a28967 1
                  if (strncmp (KR_keyword, "/dev/sdbs2", 10) == 0)
d28970 1
a28970 1
return dev_storage + 1513;
d28982 1
a28982 1
                  if (strncmp (KR_keyword, "/dev/sdbr2", 10) == 0)
d28985 1
a28985 1
return dev_storage + 1498;
d28997 1
a28997 1
                  if (strncmp (KR_keyword, "/dev/sdbq2", 10) == 0)
d29000 1
a29000 1
return dev_storage + 1483;
d29012 1
a29012 1
                  if (strncmp (KR_keyword, "/dev/sdbp2", 10) == 0)
d29015 1
a29015 1
return dev_storage + 1468;
d29027 1
a29027 1
                  if (strncmp (KR_keyword, "/dev/sdbo2", 10) == 0)
d29030 1
a29030 1
return dev_storage + 1453;
d29042 1
a29042 1
                  if (strncmp (KR_keyword, "/dev/sdbn2", 10) == 0)
d29045 1
a29045 1
return dev_storage + 1438;
d29057 1
a29057 1
                  if (strncmp (KR_keyword, "/dev/sdbm2", 10) == 0)
d29060 1
a29060 1
return dev_storage + 1423;
d29072 1
a29072 1
                  if (strncmp (KR_keyword, "/dev/sdbl2", 10) == 0)
d29075 1
a29075 1
return dev_storage + 1408;
d29087 1
a29087 1
                  if (strncmp (KR_keyword, "/dev/sdbk2", 10) == 0)
d29090 1
a29090 1
return dev_storage + 1393;
d29102 1
a29102 1
                  if (strncmp (KR_keyword, "/dev/sdbj2", 10) == 0)
d29105 1
a29105 1
return dev_storage + 1378;
d29117 1
a29117 1
                  if (strncmp (KR_keyword, "/dev/sdbi2", 10) == 0)
d29120 1
a29120 1
return dev_storage + 1363;
d29132 1
a29132 1
                  if (strncmp (KR_keyword, "/dev/sdbh2", 10) == 0)
d29135 1
a29135 1
return dev_storage + 1348;
d29147 1
a29147 1
                  if (strncmp (KR_keyword, "/dev/sdbg2", 10) == 0)
d29150 1
a29150 1
return dev_storage + 1333;
d29162 1
a29162 1
                  if (strncmp (KR_keyword, "/dev/sdbf2", 10) == 0)
d29165 1
a29165 1
return dev_storage + 1318;
d29177 1
a29177 1
                  if (strncmp (KR_keyword, "/dev/sdbe2", 10) == 0)
d29180 1
a29180 1
return dev_storage + 1303;
d29192 1
a29192 1
                  if (strncmp (KR_keyword, "/dev/sdbd2", 10) == 0)
d29195 1
a29195 1
return dev_storage + 1288;
d29207 1
a29207 1
                  if (strncmp (KR_keyword, "/dev/sdbc2", 10) == 0)
d29210 1
a29210 1
return dev_storage + 1273;
d29222 1
a29222 1
                  if (strncmp (KR_keyword, "/dev/sdbb2", 10) == 0)
d29225 1
a29225 1
return dev_storage + 1258;
d29237 1
a29237 1
                  if (strncmp (KR_keyword, "/dev/sdba2", 10) == 0)
d29240 1
a29240 1
return dev_storage + 1243;
d29252 1
a29252 1
                  if (strncmp (KR_keyword, "/dev/sdb12", 10) == 0)
d29254 25
d29280 1
a29280 1
return dev_storage + 436;
d29283 2
a29284 3
                    }
                  else
                    {
d29296 1
a29296 1
            case 'a':
d29300 1
a29300 1
                  if (strncmp (KR_keyword, "/dev/sdaz2", 10) == 0)
d29303 1
a29303 1
return dev_storage + 1202;
d29315 1
a29315 1
                  if (strncmp (KR_keyword, "/dev/sday2", 10) == 0)
d29318 1
a29318 1
return dev_storage + 1187;
d29330 1
a29330 1
                  if (strncmp (KR_keyword, "/dev/sdax2", 10) == 0)
d29333 1
a29333 1
return dev_storage + 1172;
d29345 1
a29345 1
                  if (strncmp (KR_keyword, "/dev/sdaw2", 10) == 0)
d29348 1
a29348 1
return dev_storage + 1157;
d29360 1
a29360 1
                  if (strncmp (KR_keyword, "/dev/sdav2", 10) == 0)
d29363 1
a29363 1
return dev_storage + 1142;
d29375 1
a29375 1
                  if (strncmp (KR_keyword, "/dev/sdau2", 10) == 0)
d29378 1
a29378 1
return dev_storage + 1127;
d29390 1
a29390 1
                  if (strncmp (KR_keyword, "/dev/sdat2", 10) == 0)
d29393 1
a29393 1
return dev_storage + 1112;
d29405 1
a29405 1
                  if (strncmp (KR_keyword, "/dev/sdas2", 10) == 0)
d29408 1
a29408 1
return dev_storage + 1097;
d29420 1
a29420 1
                  if (strncmp (KR_keyword, "/dev/sdar2", 10) == 0)
d29423 1
a29423 1
return dev_storage + 1082;
d29435 1
a29435 1
                  if (strncmp (KR_keyword, "/dev/sdaq2", 10) == 0)
d29438 1
a29438 1
return dev_storage + 1067;
d29450 1
a29450 1
                  if (strncmp (KR_keyword, "/dev/sdap2", 10) == 0)
d29453 1
a29453 1
return dev_storage + 1052;
d29465 1
a29465 1
                  if (strncmp (KR_keyword, "/dev/sdao2", 10) == 0)
d29468 1
a29468 1
return dev_storage + 1037;
d29480 1
a29480 1
                  if (strncmp (KR_keyword, "/dev/sdan2", 10) == 0)
d29483 1
a29483 1
return dev_storage + 1022;
d29495 1
a29495 1
                  if (strncmp (KR_keyword, "/dev/sdam2", 10) == 0)
d29498 1
a29498 1
return dev_storage + 1007;
d29510 1
a29510 1
                  if (strncmp (KR_keyword, "/dev/sdal2", 10) == 0)
d29513 1
a29513 1
return dev_storage + 992;
d29525 1
a29525 1
                  if (strncmp (KR_keyword, "/dev/sdak2", 10) == 0)
d29528 1
a29528 1
return dev_storage + 977;
d29540 1
a29540 1
                  if (strncmp (KR_keyword, "/dev/sdaj2", 10) == 0)
d29543 1
a29543 1
return dev_storage + 962;
d29555 1
a29555 1
                  if (strncmp (KR_keyword, "/dev/sdai2", 10) == 0)
d29558 1
a29558 1
return dev_storage + 947;
d29570 1
a29570 1
                  if (strncmp (KR_keyword, "/dev/sdah2", 10) == 0)
d29573 1
a29573 1
return dev_storage + 932;
d29585 1
a29585 1
                  if (strncmp (KR_keyword, "/dev/sdag2", 10) == 0)
d29588 1
a29588 1
return dev_storage + 917;
d29600 1
a29600 1
                  if (strncmp (KR_keyword, "/dev/sdaf2", 10) == 0)
d29603 1
a29603 1
return dev_storage + 902;
d29615 1
a29615 1
                  if (strncmp (KR_keyword, "/dev/sdae2", 10) == 0)
d29618 1
a29618 1
return dev_storage + 887;
d29630 1
a29630 1
                  if (strncmp (KR_keyword, "/dev/sdad2", 10) == 0)
d29633 1
a29633 1
return dev_storage + 872;
d29645 1
a29645 1
                  if (strncmp (KR_keyword, "/dev/sdac2", 10) == 0)
d29648 1
a29648 1
return dev_storage + 857;
d29660 1
a29660 1
                  if (strncmp (KR_keyword, "/dev/sdab2", 10) == 0)
d29663 1
a29663 1
return dev_storage + 842;
d29675 1
a29675 1
                  if (strncmp (KR_keyword, "/dev/sdaa2", 10) == 0)
d29678 1
a29678 1
return dev_storage + 827;
d29690 1
a29690 1
                  if (strncmp (KR_keyword, "/dev/sda12", 10) == 0)
d29693 1
a29693 1
return dev_storage + 421;
d29710 1
a29710 1
            case '1':
d29713 2
a29714 2
                case '2':
                  if (strncmp (KR_keyword, "/dev/st122", 10) == 0)
d29717 1
a29717 1
return dev_storage + 2570;
d29728 2
a29729 2
                case '1':
                  if (strncmp (KR_keyword, "/dev/st112", 10) == 0)
d29732 1
a29732 1
return dev_storage + 2560;
d29743 2
a29744 2
                case '0':
                  if (strncmp (KR_keyword, "/dev/st102", 10) == 0)
d29747 1
a29747 1
return dev_storage + 2550;
d29758 2
a29759 35
                default:
{
return	NULL;

}
                }
            default:
{
return	NULL;

}
            }
        case '1':
          switch (KR_keyword [7])
            {
            case 'z':
              if (strncmp (KR_keyword, "/dev/sdz11", 10) == 0)
                {
{
return dev_storage + 795;

}
                }
              else
                {
{
return	NULL;

}
                }
            case 'y':
              switch (KR_keyword [8])
                {
                case 'm':
                  if (strncmp (KR_keyword, "/dev/ptym1", 10) == 0)
d29762 1
a29762 1
return dev_storage + 304;
d29773 2
a29774 2
                case 'S':
                  if (strncmp (KR_keyword, "/dev/ttyS1", 10) == 0)
d29777 1
a29777 1
return dev_storage + 2578;
d29788 2
a29789 2
                case '6':
                  if (strncmp (KR_keyword, "/dev/pty61", 10) == 0)
d29792 1
a29792 1
return dev_storage + 300;
d29803 2
a29804 2
                case '5':
                  if (strncmp (KR_keyword, "/dev/pty51", 10) == 0)
d29807 1
a29807 1
return dev_storage + 290;
d29818 2
a29819 2
                case '4':
                  if (strncmp (KR_keyword, "/dev/pty41", 10) == 0)
d29822 1
a29822 1
return dev_storage + 280;
d29833 2
a29834 2
                case '3':
                  if (strncmp (KR_keyword, "/dev/pty31", 10) == 0)
d29837 1
a29837 1
return dev_storage + 270;
d29848 2
a29849 125
                case '2':
                  if (strncmp (KR_keyword, "/dev/pty21", 10) == 0)
                    {
{
return dev_storage + 260;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case '1':
                  switch (KR_keyword [5])
                    {
                    case 's':
                      if (strncmp (KR_keyword, "/dev/sdy11", 10) == 0)
                        {
{
return dev_storage + 780;

}
                        }
                      else
                        {
{
return	NULL;

}
                        }
                    case 'p':
                      if (strncmp (KR_keyword, "/dev/pty11", 10) == 0)
                        {
{
return dev_storage + 250;

}
                        }
                      else
                        {
{
return	NULL;

}
                        }
                    default:
{
return	NULL;

}
                    }
                default:
{
return	NULL;

}
                }
            case 'x':
              if (strncmp (KR_keyword, "/dev/sdx11", 10) == 0)
                {
{
return dev_storage + 765;

}
                }
              else
                {
{
return	NULL;

}
                }
            case 'w':
              if (strncmp (KR_keyword, "/dev/sdw11", 10) == 0)
                {
{
return dev_storage + 750;

}
                }
              else
                {
{
return	NULL;

}
                }
            case 'v':
              if (strncmp (KR_keyword, "/dev/sdv11", 10) == 0)
                {
{
return dev_storage + 735;

}
                }
              else
                {
{
return	NULL;

}
                }
            case 'u':
              if (strncmp (KR_keyword, "/dev/sdu11", 10) == 0)
                {
{
return dev_storage + 720;

}
                }
              else
                {
{
return	NULL;

}
                }
            case 't':
              switch (KR_keyword [8])
                {
                case '9':
                  if (strncmp (KR_keyword, "/dev/nst91", 10) == 0)
d29852 1
a29852 1
return dev_storage + 198;
d29863 2
a29864 2
                case '8':
                  if (strncmp (KR_keyword, "/dev/nst81", 10) == 0)
d29867 1
a29867 1
return dev_storage + 188;
d29878 2
a29879 2
                case '7':
                  if (strncmp (KR_keyword, "/dev/nst71", 10) == 0)
d29882 1
a29882 1
return dev_storage + 178;
d29893 2
a29894 2
                case '6':
                  if (strncmp (KR_keyword, "/dev/nst61", 10) == 0)
d29897 1
a29897 1
return dev_storage + 168;
d29908 2
a29909 2
                case '5':
                  if (strncmp (KR_keyword, "/dev/nst51", 10) == 0)
d29912 1
a29912 1
return dev_storage + 158;
d29923 2
a29924 2
                case '4':
                  if (strncmp (KR_keyword, "/dev/nst41", 10) == 0)
d29927 1
a29927 1
return dev_storage + 148;
d29938 2
a29939 2
                case '3':
                  if (strncmp (KR_keyword, "/dev/nst31", 10) == 0)
d29942 1
a29942 1
return dev_storage + 138;
d29953 2
a29954 2
                case '2':
                  if (strncmp (KR_keyword, "/dev/nst21", 10) == 0)
d29957 1
a29957 1
return dev_storage + 128;
d29968 2
a29969 2
                case '1':
                  switch (KR_keyword [5])
a29970 3
                    case 's':
                      if (strncmp (KR_keyword, "/dev/sdt11", 10) == 0)
                        {
d29972 1
a29972 1
return dev_storage + 705;
d29975 3
a29977 3
                        }
                      else
                        {
d29982 4
a29985 4
                        }
                    case 'n':
                      if (strncmp (KR_keyword, "/dev/nst11", 10) == 0)
                        {
d29987 1
a29987 1
return dev_storage + 118;
d29990 3
a29992 3
                        }
                      else
                        {
d29997 4
a30000 2
                        }
                    default:
d30002 1
a30002 1
return	NULL;
d30006 2
a30007 1
                default:
d30012 4
a30015 4
                }
            case 's':
              if (strncmp (KR_keyword, "/dev/sds11", 10) == 0)
                {
d30017 1
a30017 1
return dev_storage + 690;
d30020 3
a30022 3
                }
              else
                {
d30027 4
a30030 4
                }
            case 'r':
              if (strncmp (KR_keyword, "/dev/sdr11", 10) == 0)
                {
d30032 1
a30032 1
return dev_storage + 675;
d30035 3
a30037 3
                }
              else
                {
d30042 4
a30045 4
                }
            case 'q':
              if (strncmp (KR_keyword, "/dev/sdq11", 10) == 0)
                {
d30047 1
a30047 1
return dev_storage + 660;
d30050 3
a30052 3
                }
              else
                {
d30057 4
a30060 4
                }
            case 'p':
              if (strncmp (KR_keyword, "/dev/sdp11", 10) == 0)
                {
d30062 1
a30062 1
return dev_storage + 645;
d30065 3
a30067 3
                }
              else
                {
d30072 4
a30075 4
                }
            case 'o':
              if (strncmp (KR_keyword, "/dev/sdo11", 10) == 0)
                {
d30077 1
a30077 1
return dev_storage + 630;
d30080 3
a30082 3
                }
              else
                {
d30087 3
a30089 6
                }
            case 'n':
              switch (KR_keyword [5])
                {
                case 's':
                  if (strncmp (KR_keyword, "/dev/sdn11", 10) == 0)
d30092 1
a30092 1
return dev_storage + 615;
d30103 2
a30104 2
                case 'c':
                  if (strncmp (KR_keyword, "/dev/cons1", 10) == 0)
d30107 1
a30107 1
return dev_storage + 21;
d30124 2
a30125 2
            case 'm':
              switch (KR_keyword [5])
d30127 17
a30143 2
                case 's':
                  if (strncmp (KR_keyword, "/dev/sdm11", 10) == 0)
d30146 1
a30146 1
return dev_storage + 600;
d30157 2
a30158 2
                case 'c':
                  if (strncmp (KR_keyword, "/dev/com11", 10) == 0)
d30161 1
a30161 1
return dev_storage + 12;
d30172 10
a30181 1
                default:
d30186 4
a30189 4
                }
            case 'l':
              if (strncmp (KR_keyword, "/dev/sdl11", 10) == 0)
                {
d30191 1
a30191 1
return dev_storage + 585;
d30194 3
a30196 3
                }
              else
                {
d30201 4
a30204 4
                }
            case 'k':
              if (strncmp (KR_keyword, "/dev/sdk11", 10) == 0)
                {
d30206 1
a30206 1
return dev_storage + 570;
d30209 3
a30211 3
                }
              else
                {
d30216 4
a30219 4
                }
            case 'j':
              if (strncmp (KR_keyword, "/dev/sdj11", 10) == 0)
                {
d30221 1
a30221 1
return dev_storage + 555;
d30224 3
a30226 3
                }
              else
                {
d30231 4
a30234 4
                }
            case 'i':
              if (strncmp (KR_keyword, "/dev/sdi11", 10) == 0)
                {
d30236 1
a30236 1
return dev_storage + 540;
d30239 3
a30241 3
                }
              else
                {
d30246 4
a30249 4
                }
            case 'h':
              if (strncmp (KR_keyword, "/dev/sdh11", 10) == 0)
                {
d30251 1
a30251 1
return dev_storage + 525;
d30254 3
a30256 3
                }
              else
                {
d30261 4
a30264 4
                }
            case 'g':
              if (strncmp (KR_keyword, "/dev/sdg11", 10) == 0)
                {
d30266 1
a30266 1
return dev_storage + 510;
d30269 3
a30271 3
                }
              else
                {
d30276 4
a30279 4
                }
            case 'f':
              if (strncmp (KR_keyword, "/dev/sdf11", 10) == 0)
                {
d30281 1
a30281 1
return dev_storage + 495;
d30284 3
a30286 3
                }
              else
                {
d30291 4
a30294 4
                }
            case 'e':
              if (strncmp (KR_keyword, "/dev/sde11", 10) == 0)
                {
d30296 1
a30296 1
return dev_storage + 480;
d30299 3
a30301 3
                }
              else
                {
d30306 3
a30308 6
                }
            case 'd':
              switch (KR_keyword [8])
                {
                case 'x':
                  if (strncmp (KR_keyword, "/dev/sddx1", 10) == 0)
d30311 1
a30311 1
return dev_storage + 2417;
d30322 2
a30323 2
                case 'w':
                  if (strncmp (KR_keyword, "/dev/sddw1", 10) == 0)
d30326 1
a30326 1
return dev_storage + 2402;
d30337 2
a30338 2
                case 'v':
                  if (strncmp (KR_keyword, "/dev/sddv1", 10) == 0)
d30341 1
a30341 1
return dev_storage + 2387;
d30352 2
a30353 2
                case 'u':
                  if (strncmp (KR_keyword, "/dev/sddu1", 10) == 0)
d30356 1
a30356 1
return dev_storage + 2372;
d30367 2
a30368 2
                case 't':
                  if (strncmp (KR_keyword, "/dev/sddt1", 10) == 0)
d30371 1
a30371 1
return dev_storage + 2357;
d30382 2
a30383 2
                case 's':
                  if (strncmp (KR_keyword, "/dev/sdds1", 10) == 0)
d30386 1
a30386 1
return dev_storage + 2342;
d30397 2
a30398 2
                case 'r':
                  if (strncmp (KR_keyword, "/dev/sddr1", 10) == 0)
d30401 1
a30401 1
return dev_storage + 2327;
d30412 2
a30413 2
                case 'q':
                  if (strncmp (KR_keyword, "/dev/sddq1", 10) == 0)
d30416 1
a30416 1
return dev_storage + 2312;
d30427 2
a30428 2
                case 'p':
                  if (strncmp (KR_keyword, "/dev/sddp1", 10) == 0)
d30431 1
a30431 1
return dev_storage + 2297;
d30442 2
a30443 2
                case 'o':
                  if (strncmp (KR_keyword, "/dev/sddo1", 10) == 0)
d30446 1
a30446 1
return dev_storage + 2282;
d30457 2
a30458 2
                case 'n':
                  if (strncmp (KR_keyword, "/dev/sddn1", 10) == 0)
d30461 1
a30461 1
return dev_storage + 2267;
d30472 2
a30473 2
                case 'm':
                  if (strncmp (KR_keyword, "/dev/sddm1", 10) == 0)
d30476 1
a30476 1
return dev_storage + 2252;
d30487 2
a30488 2
                case 'l':
                  if (strncmp (KR_keyword, "/dev/sddl1", 10) == 0)
d30491 1
a30491 1
return dev_storage + 2237;
d30502 2
a30503 2
                case 'k':
                  if (strncmp (KR_keyword, "/dev/sddk1", 10) == 0)
d30506 1
a30506 1
return dev_storage + 2222;
d30517 2
a30518 2
                case 'j':
                  if (strncmp (KR_keyword, "/dev/sddj1", 10) == 0)
d30521 1
a30521 1
return dev_storage + 2207;
d30532 11
a30542 2
                case 'i':
                  if (strncmp (KR_keyword, "/dev/sddi1", 10) == 0)
d30545 1
a30545 1
return dev_storage + 2192;
d30556 2
a30557 2
                case 'h':
                  if (strncmp (KR_keyword, "/dev/sddh1", 10) == 0)
d30560 1
a30560 1
return dev_storage + 2177;
d30571 2
a30572 2
                case 'g':
                  if (strncmp (KR_keyword, "/dev/sddg1", 10) == 0)
d30575 1
a30575 1
return dev_storage + 2162;
d30584 37
a30620 4
}
                    }
                case 'f':
                  if (strncmp (KR_keyword, "/dev/sddf1", 10) == 0)
d30623 1
a30623 1
return dev_storage + 2147;
d30634 2
a30635 2
                case 'e':
                  if (strncmp (KR_keyword, "/dev/sdde1", 10) == 0)
d30638 1
a30638 1
return dev_storage + 2132;
d30649 2
a30650 2
                case 'd':
                  if (strncmp (KR_keyword, "/dev/sddd1", 10) == 0)
d30653 1
a30653 1
return dev_storage + 2117;
d30664 2
a30665 2
                case 'c':
                  if (strncmp (KR_keyword, "/dev/sddc1", 10) == 0)
d30668 1
a30668 1
return dev_storage + 2102;
d30679 2
a30680 2
                case 'b':
                  if (strncmp (KR_keyword, "/dev/sddb1", 10) == 0)
d30683 1
a30683 1
return dev_storage + 2087;
d30694 2
a30695 2
                case 'a':
                  if (strncmp (KR_keyword, "/dev/sdda1", 10) == 0)
d30698 1
a30698 1
return dev_storage + 2072;
d30710 1
a30710 1
                  switch (KR_keyword [6])
d30712 2
a30713 2
                    case 'd':
                      if (strncmp (KR_keyword, "/dev/sdd11", 10) == 0)
d30716 1
a30716 1
return dev_storage + 465;
d30727 2
a30728 2
                    case 'c':
                      if (strncmp (KR_keyword, "/dev/scd11", 10) == 0)
d30731 1
a30731 1
return dev_storage + 379;
d30754 2
a30755 2
            case 'c':
              switch (KR_keyword [8])
a30756 3
                case 'z':
                  if (strncmp (KR_keyword, "/dev/sdcz1", 10) == 0)
                    {
d30758 1
a30758 1
return dev_storage + 2033;
d30761 3
a30763 3
                    }
                  else
                    {
d30768 4
a30771 4
                    }
                case 'y':
                  if (strncmp (KR_keyword, "/dev/sdcy1", 10) == 0)
                    {
d30773 1
a30773 1
return dev_storage + 2018;
d30776 3
a30778 3
                    }
                  else
                    {
d30783 4
a30786 4
                    }
                case 'x':
                  if (strncmp (KR_keyword, "/dev/sdcx1", 10) == 0)
                    {
d30788 1
a30788 1
return dev_storage + 2003;
d30791 3
a30793 3
                    }
                  else
                    {
d30798 4
a30801 4
                    }
                case 'w':
                  if (strncmp (KR_keyword, "/dev/sdcw1", 10) == 0)
                    {
d30803 1
a30803 1
return dev_storage + 1988;
d30806 3
a30808 3
                    }
                  else
                    {
d30813 6
a30818 3
                    }
                case 'v':
                  if (strncmp (KR_keyword, "/dev/sdcv1", 10) == 0)
d30821 1
a30821 1
return dev_storage + 1973;
d30832 2
a30833 2
                case 'u':
                  if (strncmp (KR_keyword, "/dev/sdcu1", 10) == 0)
d30836 1
a30836 1
return dev_storage + 1958;
d30847 2
a30848 2
                case 't':
                  if (strncmp (KR_keyword, "/dev/sdct1", 10) == 0)
d30851 1
a30851 1
return dev_storage + 1943;
d30862 2
a30863 2
                case 's':
                  if (strncmp (KR_keyword, "/dev/sdcs1", 10) == 0)
d30866 1
a30866 1
return dev_storage + 1928;
d30877 2
a30878 2
                case 'r':
                  if (strncmp (KR_keyword, "/dev/sdcr1", 10) == 0)
d30881 1
a30881 1
return dev_storage + 1913;
d30892 2
a30893 2
                case 'q':
                  if (strncmp (KR_keyword, "/dev/sdcq1", 10) == 0)
d30896 1
a30896 1
return dev_storage + 1898;
d30907 2
a30908 2
                case 'p':
                  if (strncmp (KR_keyword, "/dev/sdcp1", 10) == 0)
d30911 1
a30911 1
return dev_storage + 1883;
d30922 2
a30923 2
                case 'o':
                  if (strncmp (KR_keyword, "/dev/sdco1", 10) == 0)
d30926 1
a30926 1
return dev_storage + 1868;
d30937 2
a30938 2
                case 'n':
                  if (strncmp (KR_keyword, "/dev/sdcn1", 10) == 0)
d30940 3
d30944 1
a30944 1
return dev_storage + 1853;
d30947 3
a30949 3
                    }
                  else
                    {
d30954 4
a30957 4
                    }
                case 'm':
                  if (strncmp (KR_keyword, "/dev/sdcm1", 10) == 0)
                    {
d30959 1
a30959 1
return dev_storage + 1838;
d30962 3
a30964 3
                    }
                  else
                    {
d30969 2
a30970 11
                    }
                case 'l':
                  if (strncmp (KR_keyword, "/dev/sdcl1", 10) == 0)
                    {
{
return dev_storage + 1823;

}
                    }
                  else
                    {
d30976 1
a30976 10
                case 'k':
                  if (strncmp (KR_keyword, "/dev/sdck1", 10) == 0)
                    {
{
return dev_storage + 1808;

}
                    }
                  else
                    {
d30981 4
a30984 4
                    }
                case 'j':
                  if (strncmp (KR_keyword, "/dev/sdcj1", 10) == 0)
                    {
d30986 1
a30986 1
return dev_storage + 1793;
d30989 3
a30991 3
                    }
                  else
                    {
d30996 4
a30999 4
                    }
                case 'i':
                  if (strncmp (KR_keyword, "/dev/sdci1", 10) == 0)
                    {
d31001 1
a31001 1
return dev_storage + 1778;
d31004 3
a31006 3
                    }
                  else
                    {
d31011 4
a31014 4
                    }
                case 'h':
                  if (strncmp (KR_keyword, "/dev/sdch1", 10) == 0)
                    {
d31016 1
a31016 1
return dev_storage + 1763;
d31019 3
a31021 3
                    }
                  else
                    {
d31026 4
a31029 4
                    }
                case 'g':
                  if (strncmp (KR_keyword, "/dev/sdcg1", 10) == 0)
                    {
d31031 1
a31031 1
return dev_storage + 1748;
d31034 3
a31036 3
                    }
                  else
                    {
d31041 4
a31044 4
                    }
                case 'f':
                  if (strncmp (KR_keyword, "/dev/sdcf1", 10) == 0)
                    {
d31046 1
a31046 1
return dev_storage + 1733;
d31049 3
a31051 3
                    }
                  else
                    {
d31056 6
a31061 3
                    }
                case 'e':
                  if (strncmp (KR_keyword, "/dev/sdce1", 10) == 0)
d31064 1
a31064 16
return dev_storage + 1718;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'd':
                  if (strncmp (KR_keyword, "/dev/sdcd1", 10) == 0)
                    {
{
return dev_storage + 1703;
d31076 1
a31076 1
                  if (strncmp (KR_keyword, "/dev/sdcc1", 10) == 0)
d31079 1
a31079 1
return dev_storage + 1688;
d31090 1
a31090 10
                case 'b':
                  if (strncmp (KR_keyword, "/dev/sdcb1", 10) == 0)
                    {
{
return dev_storage + 1673;

}
                    }
                  else
                    {
d31095 6
a31100 3
                    }
                case 'a':
                  if (strncmp (KR_keyword, "/dev/sdca1", 10) == 0)
d31103 1
a31103 1
return dev_storage + 1658;
d31114 2
a31115 2
                case '1':
                  if (strncmp (KR_keyword, "/dev/sdc11", 10) == 0)
d31118 1
a31118 1
return dev_storage + 450;
d31135 2
a31136 2
            case 'b':
              switch (KR_keyword [8])
a31137 3
                case 'z':
                  if (strncmp (KR_keyword, "/dev/sdbz1", 10) == 0)
                    {
d31139 1
a31139 1
return dev_storage + 1617;
d31142 3
a31144 3
                    }
                  else
                    {
d31149 4
a31152 4
                    }
                case 'y':
                  if (strncmp (KR_keyword, "/dev/sdby1", 10) == 0)
                    {
d31154 1
a31154 1
return dev_storage + 1602;
d31157 3
a31159 3
                    }
                  else
                    {
d31164 4
a31167 4
                    }
                case 'x':
                  if (strncmp (KR_keyword, "/dev/sdbx1", 10) == 0)
                    {
d31169 1
a31169 1
return dev_storage + 1587;
d31172 3
a31174 3
                    }
                  else
                    {
d31179 4
a31182 4
                    }
                case 'w':
                  if (strncmp (KR_keyword, "/dev/sdbw1", 10) == 0)
                    {
d31184 1
a31184 1
return dev_storage + 1572;
d31187 3
a31189 3
                    }
                  else
                    {
d31194 4
a31197 4
                    }
                case 'v':
                  if (strncmp (KR_keyword, "/dev/sdbv1", 10) == 0)
                    {
d31199 1
a31199 1
return dev_storage + 1557;
d31202 3
a31204 3
                    }
                  else
                    {
d31209 4
a31212 4
                    }
                case 'u':
                  if (strncmp (KR_keyword, "/dev/sdbu1", 10) == 0)
                    {
d31214 1
a31214 1
return dev_storage + 1542;
d31217 3
a31219 3
                    }
                  else
                    {
d31224 4
a31227 4
                    }
                case 't':
                  if (strncmp (KR_keyword, "/dev/sdbt1", 10) == 0)
                    {
d31229 1
a31229 1
return dev_storage + 1527;
d31232 3
a31234 48
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 's':
                  if (strncmp (KR_keyword, "/dev/sdbs1", 10) == 0)
                    {
{
return dev_storage + 1512;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'r':
                  if (strncmp (KR_keyword, "/dev/sdbr1", 10) == 0)
                    {
{
return dev_storage + 1497;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'q':
                  if (strncmp (KR_keyword, "/dev/sdbq1", 10) == 0)
                    {
{
return dev_storage + 1482;

}
                    }
                  else
                    {
d31239 4
a31242 4
                    }
                case 'p':
                  if (strncmp (KR_keyword, "/dev/sdbp1", 10) == 0)
                    {
d31244 1
a31244 1
return dev_storage + 1467;
d31247 3
a31249 3
                    }
                  else
                    {
d31254 6
a31259 3
                    }
                case 'o':
                  if (strncmp (KR_keyword, "/dev/sdbo1", 10) == 0)
d31262 1
a31262 1
return dev_storage + 1452;
d31273 2
a31274 2
                case 'n':
                  if (strncmp (KR_keyword, "/dev/sdbn1", 10) == 0)
d31277 1
a31277 1
return dev_storage + 1437;
d31288 2
a31289 2
                case 'm':
                  if (strncmp (KR_keyword, "/dev/sdbm1", 10) == 0)
d31292 1
a31292 1
return dev_storage + 1422;
d31303 2
a31304 2
                case 'l':
                  if (strncmp (KR_keyword, "/dev/sdbl1", 10) == 0)
d31307 1
a31307 1
return dev_storage + 1407;
d31318 2
a31319 2
                case 'k':
                  if (strncmp (KR_keyword, "/dev/sdbk1", 10) == 0)
d31322 1
a31322 1
return dev_storage + 1392;
d31333 2
a31334 2
                case 'j':
                  if (strncmp (KR_keyword, "/dev/sdbj1", 10) == 0)
d31337 1
a31337 1
return dev_storage + 1377;
d31348 2
a31349 2
                case 'i':
                  if (strncmp (KR_keyword, "/dev/sdbi1", 10) == 0)
d31352 1
a31352 1
return dev_storage + 1362;
d31363 2
a31364 2
                case 'h':
                  if (strncmp (KR_keyword, "/dev/sdbh1", 10) == 0)
d31367 1
a31367 1
return dev_storage + 1347;
d31378 2
a31379 2
                case 'g':
                  if (strncmp (KR_keyword, "/dev/sdbg1", 10) == 0)
d31382 1
a31382 1
return dev_storage + 1332;
d31393 2
a31394 2
                case 'f':
                  if (strncmp (KR_keyword, "/dev/sdbf1", 10) == 0)
d31397 1
a31397 1
return dev_storage + 1317;
d31408 2
a31409 2
                case 'e':
                  if (strncmp (KR_keyword, "/dev/sdbe1", 10) == 0)
d31412 1
a31412 1
return dev_storage + 1302;
d31423 2
a31424 2
                case 'd':
                  if (strncmp (KR_keyword, "/dev/sdbd1", 10) == 0)
d31427 1
a31427 1
return dev_storage + 1287;
d31438 2
a31439 2
                case 'c':
                  if (strncmp (KR_keyword, "/dev/sdbc1", 10) == 0)
d31442 1
a31442 1
return dev_storage + 1272;
d31453 2
a31454 2
                case 'b':
                  if (strncmp (KR_keyword, "/dev/sdbb1", 10) == 0)
d31457 1
a31457 1
return dev_storage + 1257;
d31468 2
a31469 2
                case 'a':
                  if (strncmp (KR_keyword, "/dev/sdba1", 10) == 0)
d31472 1
a31472 1
return dev_storage + 1242;
d31483 2
a31484 2
                case '1':
                  if (strncmp (KR_keyword, "/dev/sdb11", 10) == 0)
d31487 1
a31487 1
return dev_storage + 435;
d31498 2
a31499 11
                default:
{
return	NULL;

}
                }
            case 'a':
              switch (KR_keyword [8])
                {
                case 'z':
                  if (strncmp (KR_keyword, "/dev/sdaz1", 10) == 0)
d31502 1
a31502 1
return dev_storage + 1201;
d31513 2
a31514 2
                case 'y':
                  if (strncmp (KR_keyword, "/dev/sday1", 10) == 0)
d31517 1
a31517 1
return dev_storage + 1186;
d31528 2
a31529 2
                case 'x':
                  if (strncmp (KR_keyword, "/dev/sdax1", 10) == 0)
d31532 1
a31532 1
return dev_storage + 1171;
d31543 2
a31544 2
                case 'w':
                  if (strncmp (KR_keyword, "/dev/sdaw1", 10) == 0)
d31547 1
a31547 1
return dev_storage + 1156;
d31558 2
a31559 2
                case 'v':
                  if (strncmp (KR_keyword, "/dev/sdav1", 10) == 0)
d31562 1
a31562 1
return dev_storage + 1141;
d31573 2
a31574 2
                case 'u':
                  if (strncmp (KR_keyword, "/dev/sdau1", 10) == 0)
d31577 1
a31577 1
return dev_storage + 1126;
d31588 2
a31589 2
                case 't':
                  if (strncmp (KR_keyword, "/dev/sdat1", 10) == 0)
d31592 1
a31592 1
return dev_storage + 1111;
d31603 2
a31604 2
                case 's':
                  if (strncmp (KR_keyword, "/dev/sdas1", 10) == 0)
d31607 1
a31607 1
return dev_storage + 1096;
d31618 2
a31619 2
                case 'r':
                  if (strncmp (KR_keyword, "/dev/sdar1", 10) == 0)
d31621 3
d31625 1
a31625 1
return dev_storage + 1081;
d31628 3
a31630 3
                    }
                  else
                    {
d31635 4
a31638 4
                    }
                case 'q':
                  if (strncmp (KR_keyword, "/dev/sdaq1", 10) == 0)
                    {
d31640 1
a31640 1
return dev_storage + 1066;
d31643 3
a31645 3
                    }
                  else
                    {
d31650 2
a31651 4
                    }
                case 'p':
                  if (strncmp (KR_keyword, "/dev/sdap1", 10) == 0)
                    {
d31653 1
a31653 1
return dev_storage + 1051;
d31657 1
a31657 2
                  else
                    {
d31662 6
a31667 3
                    }
                case 'o':
                  if (strncmp (KR_keyword, "/dev/sdao1", 10) == 0)
d31670 1
a31670 1
return dev_storage + 1036;
d31681 2
a31682 2
                case 'n':
                  if (strncmp (KR_keyword, "/dev/sdan1", 10) == 0)
d31685 1
a31685 1
return dev_storage + 1021;
d31696 2
a31697 2
                case 'm':
                  if (strncmp (KR_keyword, "/dev/sdam1", 10) == 0)
d31700 1
a31700 1
return dev_storage + 1006;
d31711 2
a31712 2
                case 'l':
                  if (strncmp (KR_keyword, "/dev/sdal1", 10) == 0)
d31715 1
a31715 1
return dev_storage + 991;
d31726 2
a31727 2
                case 'k':
                  if (strncmp (KR_keyword, "/dev/sdak1", 10) == 0)
d31730 1
a31730 1
return dev_storage + 976;
d31741 2
a31742 2
                case 'j':
                  if (strncmp (KR_keyword, "/dev/sdaj1", 10) == 0)
d31745 1
a31745 1
return dev_storage + 961;
d31756 2
a31757 2
                case 'i':
                  if (strncmp (KR_keyword, "/dev/sdai1", 10) == 0)
d31760 1
a31760 1
return dev_storage + 946;
d31771 2
a31772 2
                case 'h':
                  if (strncmp (KR_keyword, "/dev/sdah1", 10) == 0)
d31775 1
a31775 1
return dev_storage + 931;
d31786 2
a31787 2
                case 'g':
                  if (strncmp (KR_keyword, "/dev/sdag1", 10) == 0)
d31790 1
a31790 1
return dev_storage + 916;
d31801 2
a31802 2
                case 'f':
                  if (strncmp (KR_keyword, "/dev/sdaf1", 10) == 0)
d31805 1
a31805 1
return dev_storage + 901;
d31816 2
a31817 2
                case 'e':
                  if (strncmp (KR_keyword, "/dev/sdae1", 10) == 0)
d31820 1
a31820 1
return dev_storage + 886;
d31831 2
a31832 2
                case 'd':
                  if (strncmp (KR_keyword, "/dev/sdad1", 10) == 0)
d31835 1
a31835 1
return dev_storage + 871;
d31846 2
a31847 2
                case 'c':
                  if (strncmp (KR_keyword, "/dev/sdac1", 10) == 0)
d31850 1
a31850 1
return dev_storage + 856;
d31861 2
a31862 2
                case 'b':
                  if (strncmp (KR_keyword, "/dev/sdab1", 10) == 0)
d31865 1
a31865 1
return dev_storage + 841;
d31876 2
a31877 2
                case 'a':
                  if (strncmp (KR_keyword, "/dev/sdaa1", 10) == 0)
d31880 1
a31880 1
return dev_storage + 826;
d31891 2
a31892 2
                case '1':
                  if (strncmp (KR_keyword, "/dev/sda11", 10) == 0)
d31895 1
a31895 1
return dev_storage + 420;
d31906 2
a31907 11
                default:
{
return	NULL;

}
                }
            case '1':
              switch (KR_keyword [8])
                {
                case '2':
                  if (strncmp (KR_keyword, "/dev/st121", 10) == 0)
d31910 1
a31910 1
return dev_storage + 2569;
d31921 2
a31922 2
                case '1':
                  if (strncmp (KR_keyword, "/dev/st111", 10) == 0)
d31925 1
a31925 1
return dev_storage + 2559;
d31936 2
a31937 2
                case '0':
                  if (strncmp (KR_keyword, "/dev/st101", 10) == 0)
d31940 1
a31940 1
return dev_storage + 2549;
d31951 2
a31952 35
                default:
{
return	NULL;

}
                }
            default:
{
return	NULL;

}
            }
        case '0':
          switch (KR_keyword [7])
            {
            case 'z':
              if (strncmp (KR_keyword, "/dev/sdz10", 10) == 0)
                {
{
return dev_storage + 794;

}
                }
              else
                {
{
return	NULL;

}
                }
            case 'y':
              switch (KR_keyword [8])
                {
                case 'm':
                  if (strncmp (KR_keyword, "/dev/ptym0", 10) == 0)
d31955 1
a31955 1
return dev_storage + 303;
d31966 2
a31967 2
                case 'S':
                  if (strncmp (KR_keyword, "/dev/ttyS0", 10) == 0)
d31970 1
a31970 1
return dev_storage + 2577;
d31981 2
a31982 2
                case '6':
                  if (strncmp (KR_keyword, "/dev/pty60", 10) == 0)
d31985 1
a31985 1
return dev_storage + 299;
d31996 2
a31997 2
                case '5':
                  if (strncmp (KR_keyword, "/dev/pty50", 10) == 0)
d32000 1
a32000 1
return dev_storage + 289;
d32011 2
a32012 2
                case '4':
                  if (strncmp (KR_keyword, "/dev/pty40", 10) == 0)
d32015 1
a32015 1
return dev_storage + 279;
d32026 2
a32027 2
                case '3':
                  if (strncmp (KR_keyword, "/dev/pty30", 10) == 0)
d32030 1
a32030 1
return dev_storage + 269;
d32041 2
a32042 2
                case '2':
                  if (strncmp (KR_keyword, "/dev/pty20", 10) == 0)
d32045 1
a32045 1
return dev_storage + 259;
d32057 1
a32057 1
                  switch (KR_keyword [5])
a32058 3
                    case 's':
                      if (strncmp (KR_keyword, "/dev/sdy10", 10) == 0)
                        {
d32060 1
a32060 29
return dev_storage + 779;

}
                        }
                      else
                        {
{
return	NULL;

}
                        }
                    case 'p':
                      if (strncmp (KR_keyword, "/dev/pty10", 10) == 0)
                        {
{
return dev_storage + 249;

}
                        }
                      else
                        {
{
return	NULL;

}
                        }
                    default:
{
return	NULL;
d32064 2
a32065 54
                default:
{
return	NULL;

}
                }
            case 'x':
              if (strncmp (KR_keyword, "/dev/sdx10", 10) == 0)
                {
{
return dev_storage + 764;

}
                }
              else
                {
{
return	NULL;

}
                }
            case 'w':
              if (strncmp (KR_keyword, "/dev/sdw10", 10) == 0)
                {
{
return dev_storage + 749;

}
                }
              else
                {
{
return	NULL;

}
                }
            case 'v':
              if (strncmp (KR_keyword, "/dev/sdv10", 10) == 0)
                {
{
return dev_storage + 734;

}
                }
              else
                {
{
return	NULL;

}
                }
            case 'u':
              if (strncmp (KR_keyword, "/dev/sdu10", 10) == 0)
                {
d32067 1
a32067 1
return dev_storage + 719;
d32070 2
a32071 3
                }
              else
                {
d32077 1
a32077 1
            case 't':
d32080 2
a32081 2
                case '9':
                  if (strncmp (KR_keyword, "/dev/nst90", 10) == 0)
d32084 1
a32084 1
return dev_storage + 197;
d32095 2
a32096 2
                case '8':
                  if (strncmp (KR_keyword, "/dev/nst80", 10) == 0)
d32099 1
a32099 1
return dev_storage + 187;
d32110 2
a32111 2
                case '7':
                  if (strncmp (KR_keyword, "/dev/nst70", 10) == 0)
d32114 1
a32114 1
return dev_storage + 177;
d32125 2
a32126 2
                case '6':
                  if (strncmp (KR_keyword, "/dev/nst60", 10) == 0)
d32129 1
a32129 1
return dev_storage + 167;
d32140 2
a32141 2
                case '5':
                  if (strncmp (KR_keyword, "/dev/nst50", 10) == 0)
d32144 1
a32144 1
return dev_storage + 157;
d32155 2
a32156 2
                case '4':
                  if (strncmp (KR_keyword, "/dev/nst40", 10) == 0)
d32159 1
a32159 1
return dev_storage + 147;
d32170 2
a32171 2
                case '3':
                  if (strncmp (KR_keyword, "/dev/nst30", 10) == 0)
d32174 1
a32174 1
return dev_storage + 137;
d32185 2
a32186 2
                case '2':
                  if (strncmp (KR_keyword, "/dev/nst20", 10) == 0)
d32189 1
a32189 1
return dev_storage + 127;
d32200 2
a32201 2
                case '1':
                  switch (KR_keyword [5])
a32202 3
                    case 's':
                      if (strncmp (KR_keyword, "/dev/sdt10", 10) == 0)
                        {
d32204 1
a32204 1
return dev_storage + 704;
d32207 3
a32209 3
                        }
                      else
                        {
d32214 4
a32217 4
                        }
                    case 'n':
                      if (strncmp (KR_keyword, "/dev/nst10", 10) == 0)
                        {
d32219 1
a32219 1
return dev_storage + 117;
d32222 3
a32224 3
                        }
                      else
                        {
d32229 4
a32232 2
                        }
                    default:
d32234 1
a32234 1
return	NULL;
d32238 2
a32239 1
                default:
d32244 4
a32247 4
                }
            case 's':
              if (strncmp (KR_keyword, "/dev/sds10", 10) == 0)
                {
d32249 1
a32249 1
return dev_storage + 689;
d32252 3
a32254 3
                }
              else
                {
d32259 4
a32262 4
                }
            case 'r':
              if (strncmp (KR_keyword, "/dev/sdr10", 10) == 0)
                {
d32264 1
a32264 1
return dev_storage + 674;
d32267 3
a32269 3
                }
              else
                {
d32274 4
a32277 4
                }
            case 'q':
              if (strncmp (KR_keyword, "/dev/sdq10", 10) == 0)
                {
d32279 1
a32279 1
return dev_storage + 659;
d32282 3
a32284 3
                }
              else
                {
d32289 4
a32292 4
                }
            case 'p':
              if (strncmp (KR_keyword, "/dev/sdp10", 10) == 0)
                {
d32294 1
a32294 1
return dev_storage + 644;
d32297 3
a32299 3
                }
              else
                {
d32304 4
a32307 4
                }
            case 'o':
              if (strncmp (KR_keyword, "/dev/sdo10", 10) == 0)
                {
d32309 1
a32309 1
return dev_storage + 629;
d32312 3
a32314 3
                }
              else
                {
d32319 3
a32321 6
                }
            case 'n':
              switch (KR_keyword [5])
                {
                case 's':
                  if (strncmp (KR_keyword, "/dev/sdn10", 10) == 0)
d32324 1
a32324 1
return dev_storage + 614;
d32335 2
a32336 2
                case 'c':
                  if (strncmp (KR_keyword, "/dev/cons0", 10) == 0)
d32339 1
a32339 1
return dev_storage + 20;
d32350 10
a32359 1
                default:
d32364 3
a32366 6
                }
            case 'm':
              switch (KR_keyword [5])
                {
                case 's':
                  if (strncmp (KR_keyword, "/dev/sdm10", 10) == 0)
d32369 1
a32369 1
return dev_storage + 599;
d32380 2
a32381 2
                case 'c':
                  if (strncmp (KR_keyword, "/dev/com10", 10) == 0)
d32384 1
a32384 1
return dev_storage + 11;
d32395 10
a32404 1
                default:
d32409 4
a32412 4
                }
            case 'l':
              if (strncmp (KR_keyword, "/dev/sdl10", 10) == 0)
                {
d32414 1
a32414 1
return dev_storage + 584;
d32417 3
a32419 3
                }
              else
                {
d32424 4
a32427 4
                }
            case 'k':
              if (strncmp (KR_keyword, "/dev/sdk10", 10) == 0)
                {
d32429 1
a32429 1
return dev_storage + 569;
d32432 3
a32434 3
                }
              else
                {
d32439 4
a32442 4
                }
            case 'j':
              if (strncmp (KR_keyword, "/dev/sdj10", 10) == 0)
                {
d32444 1
a32444 1
return dev_storage + 554;
d32447 3
a32449 3
                }
              else
                {
d32454 4
a32457 4
                }
            case 'i':
              if (strncmp (KR_keyword, "/dev/sdi10", 10) == 0)
                {
d32459 1
a32459 1
return dev_storage + 539;
d32462 3
a32464 3
                }
              else
                {
d32469 4
a32472 4
                }
            case 'h':
              if (strncmp (KR_keyword, "/dev/sdh10", 10) == 0)
                {
d32474 1
a32474 1
return dev_storage + 524;
d32477 3
a32479 3
                }
              else
                {
d32484 2
a32485 11
                }
            case 'g':
              if (strncmp (KR_keyword, "/dev/sdg10", 10) == 0)
                {
{
return dev_storage + 509;

}
                }
              else
                {
d32491 2
a32492 2
            case 'f':
              if (strncmp (KR_keyword, "/dev/sdf10", 10) == 0)
d32494 3
d32498 1
a32498 1
return dev_storage + 494;
d32501 3
a32503 3
                }
              else
                {
d32508 4
a32511 4
                }
            case 'e':
              if (strncmp (KR_keyword, "/dev/sde10", 10) == 0)
                {
d32513 1
a32513 1
return dev_storage + 479;
d32516 3
a32518 3
                }
              else
                {
d32523 3
a32525 6
                }
            case 'd':
              switch (KR_keyword [6])
                {
                case 'd':
                  if (strncmp (KR_keyword, "/dev/sdd10", 10) == 0)
d32528 1
a32528 1
return dev_storage + 464;
d32539 2
a32540 2
                case 'c':
                  if (strncmp (KR_keyword, "/dev/scd10", 10) == 0)
d32543 1
a32543 1
return dev_storage + 378;
d32554 3
a32556 1
                default:
d32558 1
a32558 1
return	NULL;
d32561 3
a32563 11
                }
            case 'c':
              if (strncmp (KR_keyword, "/dev/sdc10", 10) == 0)
                {
{
return dev_storage + 449;

}
                }
              else
                {
d32568 4
a32571 4
                }
            case 'b':
              if (strncmp (KR_keyword, "/dev/sdb10", 10) == 0)
                {
d32573 1
a32573 1
return dev_storage + 434;
d32576 3
a32578 3
                }
              else
                {
d32583 4
a32586 4
                }
            case 'a':
              if (strncmp (KR_keyword, "/dev/sda10", 10) == 0)
                {
d32588 1
a32588 1
return dev_storage + 419;
d32591 3
a32593 3
                }
              else
                {
d32598 3
a32600 6
                }
            case '1':
              switch (KR_keyword [8])
                {
                case '2':
                  if (strncmp (KR_keyword, "/dev/st120", 10) == 0)
d32603 1
a32603 1
return dev_storage + 2568;
d32614 2
a32615 2
                case '1':
                  if (strncmp (KR_keyword, "/dev/st110", 10) == 0)
d32618 1
a32618 1
return dev_storage + 2558;
d32629 2
a32630 2
                case '0':
                  if (strncmp (KR_keyword, "/dev/st100", 10) == 0)
d32633 1
a32633 1
return dev_storage + 2548;
d32644 3
a32646 1
                default:
d32648 1
a32648 1
return	NULL;
d32651 3
a32653 2
                }
            default:
d32658 4
a32661 2
            }
        default:
d32663 1
a32663 1
return	NULL;
d32666 3
a32668 14
        }
    case 11:
      switch (KR_keyword [10])
        {
        case 't':
          if (strncmp (KR_keyword, "/dev/conout", 11) == 0)
            {
{
return dev_storage + 19;

}
            }
          else
            {
d32673 4
a32676 4
            }
        case 'm':
          if (strncmp (KR_keyword, "/dev/random", 11) == 0)
            {
d32678 1
a32678 1
return dev_storage + 367;
d32681 3
a32683 3
            }
          else
            {
d32688 3
a32690 9
            }
        case '9':
          switch (KR_keyword [9])
            {
            case '5':
              switch (KR_keyword [5])
                {
                case 't':
                  if (strncmp (KR_keyword, "/dev/ttyS59", 11) == 0)
d32693 1
a32693 1
return dev_storage + 2636;
d32704 2
a32705 2
                case 'p':
                  if (strncmp (KR_keyword, "/dev/ptym59", 11) == 0)
d32708 1
a32708 1
return dev_storage + 362;
d32719 2
a32720 2
                case 'c':
                  if (strncmp (KR_keyword, "/dev/cons59", 11) == 0)
d32723 1
a32723 1
return dev_storage + 79;
d32734 10
a32743 1
                default:
d32748 3
a32750 6
                }
            case '4':
              switch (KR_keyword [5])
                {
                case 't':
                  if (strncmp (KR_keyword, "/dev/ttyS49", 11) == 0)
d32753 1
a32753 1
return dev_storage + 2626;
d32764 2
a32765 2
                case 'p':
                  if (strncmp (KR_keyword, "/dev/ptym49", 11) == 0)
d32768 1
a32768 1
return dev_storage + 352;
d32779 2
a32780 2
                case 'c':
                  if (strncmp (KR_keyword, "/dev/cons49", 11) == 0)
d32783 1
a32783 1
return dev_storage + 69;
d32794 10
a32803 1
                default:
d32808 3
a32810 6
                }
            case '3':
              switch (KR_keyword [5])
                {
                case 't':
                  if (strncmp (KR_keyword, "/dev/ttyS39", 11) == 0)
d32813 1
a32813 1
return dev_storage + 2616;
d32824 2
a32825 2
                case 'p':
                  if (strncmp (KR_keyword, "/dev/ptym39", 11) == 0)
d32828 1
a32828 1
return dev_storage + 342;
d32840 1
a32840 1
                  if (strncmp (KR_keyword, "/dev/cons39", 11) == 0)
d32843 1
a32843 1
return dev_storage + 59;
d32854 2
a32855 11
                default:
{
return	NULL;

}
                }
            case '2':
              switch (KR_keyword [5])
                {
                case 't':
                  if (strncmp (KR_keyword, "/dev/ttyS29", 11) == 0)
d32858 1
a32858 1
return dev_storage + 2606;
d32869 2
a32870 2
                case 'p':
                  if (strncmp (KR_keyword, "/dev/ptym29", 11) == 0)
d32873 1
a32873 1
return dev_storage + 332;
d32884 2
a32885 2
                case 'c':
                  if (strncmp (KR_keyword, "/dev/cons29", 11) == 0)
d32888 1
a32888 1
return dev_storage + 49;
d32906 1
a32906 1
              switch (KR_keyword [5])
d32908 2
a32909 2
                case 't':
                  if (strncmp (KR_keyword, "/dev/ttyS19", 11) == 0)
d32912 1
a32912 1
return dev_storage + 2596;
d32923 2
a32924 2
                case 'p':
                  if (strncmp (KR_keyword, "/dev/ptym19", 11) == 0)
d32927 1
a32927 1
return dev_storage + 322;
d32938 2
a32939 2
                case 'n':
                  if (strncmp (KR_keyword, "/dev/nst119", 11) == 0)
d32942 1
a32942 1
return dev_storage + 226;
d32953 1
a32953 10
                case 'c':
                  if (strncmp (KR_keyword, "/dev/cons19", 11) == 0)
                    {
{
return dev_storage + 39;

}
                    }
                  else
                    {
d32958 2
a32959 2
                    }
                default:
d32964 6
a32969 3
                }
            case '0':
              if (strncmp (KR_keyword, "/dev/nst109", 11) == 0)
d32972 1
a32972 1
return dev_storage + 216;
d32983 2
a32984 11
            default:
{
return	NULL;

}
            }
        case '8':
          switch (KR_keyword [9])
            {
            case '5':
              switch (KR_keyword [5])
d32986 2
a32987 2
                case 't':
                  if (strncmp (KR_keyword, "/dev/ttyS58", 11) == 0)
d32990 1
a32990 1
return dev_storage + 2635;
d33001 2
a33002 2
                case 'p':
                  if (strncmp (KR_keyword, "/dev/ptym58", 11) == 0)
d33005 1
a33005 1
return dev_storage + 361;
d33016 2
a33017 2
                case 'c':
                  if (strncmp (KR_keyword, "/dev/cons58", 11) == 0)
d33020 1
a33020 1
return dev_storage + 78;
d33031 2
a33032 11
                default:
{
return	NULL;

}
                }
            case '4':
              switch (KR_keyword [5])
                {
                case 't':
                  if (strncmp (KR_keyword, "/dev/ttyS48", 11) == 0)
d33035 1
a33035 1
return dev_storage + 2625;
d33046 2
a33047 2
                case 'p':
                  if (strncmp (KR_keyword, "/dev/ptym48", 11) == 0)
d33050 1
a33050 1
return dev_storage + 351;
d33061 2
a33062 2
                case 'c':
                  if (strncmp (KR_keyword, "/dev/cons48", 11) == 0)
d33065 1
a33065 1
return dev_storage + 68;
d33076 2
a33077 11
                default:
{
return	NULL;

}
                }
            case '3':
              switch (KR_keyword [5])
                {
                case 't':
                  if (strncmp (KR_keyword, "/dev/ttyS38", 11) == 0)
d33079 3
d33083 1
a33083 1
return dev_storage + 2615;
d33086 3
a33088 3
                    }
                  else
                    {
d33093 4
a33096 4
                    }
                case 'p':
                  if (strncmp (KR_keyword, "/dev/ptym38", 11) == 0)
                    {
d33098 1
a33098 1
return dev_storage + 341;
d33101 3
a33103 3
                    }
                  else
                    {
d33108 2
a33109 11
                    }
                case 'c':
                  if (strncmp (KR_keyword, "/dev/cons38", 11) == 0)
                    {
{
return dev_storage + 58;

}
                    }
                  else
                    {
d33121 2
a33122 2
            case '2':
              switch (KR_keyword [5])
a33123 3
                case 't':
                  if (strncmp (KR_keyword, "/dev/ttyS28", 11) == 0)
                    {
d33125 1
a33125 1
return dev_storage + 2605;
d33128 3
a33130 3
                    }
                  else
                    {
d33135 4
a33138 4
                    }
                case 'p':
                  if (strncmp (KR_keyword, "/dev/ptym28", 11) == 0)
                    {
d33140 1
a33140 1
return dev_storage + 331;
d33143 3
a33145 3
                    }
                  else
                    {
d33150 4
a33153 4
                    }
                case 'c':
                  if (strncmp (KR_keyword, "/dev/cons28", 11) == 0)
                    {
d33155 1
a33155 1
return dev_storage + 48;
d33158 3
a33160 3
                    }
                  else
                    {
d33165 11
a33175 2
                    }
                default:
d33181 2
a33182 2
            case '1':
              switch (KR_keyword [5])
d33184 2
a33185 2
                case 't':
                  if (strncmp (KR_keyword, "/dev/ttyS18", 11) == 0)
d33188 1
a33188 1
return dev_storage + 2595;
d33199 2
a33200 2
                case 'p':
                  if (strncmp (KR_keyword, "/dev/ptym18", 11) == 0)
d33203 1
a33203 1
return dev_storage + 321;
d33214 2
a33215 2
                case 'n':
                  if (strncmp (KR_keyword, "/dev/nst118", 11) == 0)
d33218 1
a33218 1
return dev_storage + 225;
d33229 2
a33230 2
                case 'c':
                  if (strncmp (KR_keyword, "/dev/cons18", 11) == 0)
d33233 1
a33233 1
return dev_storage + 38;
d33244 3
a33246 1
                default:
d33248 1
a33248 1
return	NULL;
d33251 3
a33253 11
                }
            case '0':
              if (strncmp (KR_keyword, "/dev/nst108", 11) == 0)
                {
{
return dev_storage + 215;

}
                }
              else
                {
d33258 3
a33260 15
                }
            default:
{
return	NULL;

}
            }
        case '7':
          switch (KR_keyword [9])
            {
            case '5':
              switch (KR_keyword [5])
                {
                case 't':
                  if (strncmp (KR_keyword, "/dev/ttyS57", 11) == 0)
d33263 1
a33263 1
return dev_storage + 2634;
d33274 2
a33275 2
                case 'p':
                  if (strncmp (KR_keyword, "/dev/ptym57", 11) == 0)
d33278 1
a33278 1
return dev_storage + 360;
d33289 2
a33290 2
                case 'c':
                  if (strncmp (KR_keyword, "/dev/cons57", 11) == 0)
d33293 1
a33293 1
return dev_storage + 77;
d33304 13
a33316 1
                default:
d33321 4
a33324 7
                }
            case '4':
              switch (KR_keyword [5])
                {
                case 't':
                  if (strncmp (KR_keyword, "/dev/ttyS47", 11) == 0)
                    {
d33326 1
a33326 1
return dev_storage + 2624;
d33329 3
a33331 3
                    }
                  else
                    {
d33336 2
a33337 4
                    }
                case 'p':
                  if (strncmp (KR_keyword, "/dev/ptym47", 11) == 0)
                    {
d33339 1
a33339 1
return dev_storage + 350;
d33343 1
a33343 2
                  else
                    {
d33348 4
a33351 4
                    }
                case 'c':
                  if (strncmp (KR_keyword, "/dev/cons47", 11) == 0)
                    {
d33353 1
a33353 1
return dev_storage + 67;
d33356 3
a33358 3
                    }
                  else
                    {
d33363 11
a33373 2
                    }
                default:
d33379 2
a33380 2
            case '3':
              switch (KR_keyword [5])
a33381 3
                case 't':
                  if (strncmp (KR_keyword, "/dev/ttyS37", 11) == 0)
                    {
d33383 1
a33383 1
return dev_storage + 2614;
d33386 3
a33388 3
                    }
                  else
                    {
d33393 4
a33396 4
                    }
                case 'p':
                  if (strncmp (KR_keyword, "/dev/ptym37", 11) == 0)
                    {
d33398 1
a33398 1
return dev_storage + 340;
d33401 3
a33403 3
                    }
                  else
                    {
d33408 4
a33411 11
                    }
                case 'c':
                  if (strncmp (KR_keyword, "/dev/cons37", 11) == 0)
                    {
{
return dev_storage + 57;

}
                    }
                  else
                    {
d33413 1
a33413 1
return	NULL;
d33416 3
a33418 2
                    }
                default:
d33424 1
a33424 1
            case '2':
d33427 2
a33428 2
                case 't':
                  if (strncmp (KR_keyword, "/dev/ttyS27", 11) == 0)
d33431 1
a33431 1
return dev_storage + 2604;
d33442 2
a33443 2
                case 'p':
                  if (strncmp (KR_keyword, "/dev/ptym27", 11) == 0)
d33446 1
a33446 1
return dev_storage + 330;
d33457 11
a33467 2
                case 'n':
                  if (strncmp (KR_keyword, "/dev/nst127", 11) == 0)
d33470 1
a33470 1
return dev_storage + 234;
d33482 1
a33482 1
                  if (strncmp (KR_keyword, "/dev/cons27", 11) == 0)
d33485 1
a33485 1
return dev_storage + 47;
d33502 2
a33503 2
            case '1':
              switch (KR_keyword [5])
a33504 3
                case 't':
                  if (strncmp (KR_keyword, "/dev/ttyS17", 11) == 0)
                    {
d33506 1
a33506 1
return dev_storage + 2594;
d33509 3
a33511 3
                    }
                  else
                    {
d33516 4
a33519 4
                    }
                case 'p':
                  if (strncmp (KR_keyword, "/dev/ptym17", 11) == 0)
                    {
d33521 1
a33521 1
return dev_storage + 320;
d33524 3
a33526 3
                    }
                  else
                    {
d33531 4
a33534 4
                    }
                case 'n':
                  if (strncmp (KR_keyword, "/dev/nst117", 11) == 0)
                    {
d33536 1
a33536 1
return dev_storage + 224;
d33539 3
a33541 3
                    }
                  else
                    {
d33546 4
a33549 4
                    }
                case 'c':
                  if (strncmp (KR_keyword, "/dev/cons17", 11) == 0)
                    {
d33551 1
a33551 1
return dev_storage + 37;
d33554 3
a33556 3
                    }
                  else
                    {
d33561 11
a33571 2
                    }
                default:
d33577 2
a33578 2
            case '0':
              if (strncmp (KR_keyword, "/dev/nst107", 11) == 0)
d33581 1
a33581 1
return dev_storage + 214;
d33592 10
a33601 1
            default:
d33606 3
a33608 6
            }
        case '6':
          switch (KR_keyword [9])
            {
            case '5':
              switch (KR_keyword [5])
a33609 3
                case 't':
                  if (strncmp (KR_keyword, "/dev/ttyS56", 11) == 0)
                    {
d33611 1
a33611 1
return dev_storage + 2633;
d33614 3
a33616 3
                    }
                  else
                    {
d33621 6
a33626 3
                    }
                case 'p':
                  if (strncmp (KR_keyword, "/dev/ptym56", 11) == 0)
d33629 1
a33629 1
return dev_storage + 359;
d33641 1
a33641 1
                  if (strncmp (KR_keyword, "/dev/cons56", 11) == 0)
d33644 1
a33644 1
return dev_storage + 76;
d33661 2
a33662 2
            case '4':
              switch (KR_keyword [5])
a33663 3
                case 't':
                  if (strncmp (KR_keyword, "/dev/ttyS46", 11) == 0)
                    {
d33665 1
a33665 1
return dev_storage + 2623;
d33668 3
a33670 3
                    }
                  else
                    {
d33675 4
a33678 4
                    }
                case 'p':
                  if (strncmp (KR_keyword, "/dev/ptym46", 11) == 0)
                    {
d33680 1
a33680 1
return dev_storage + 349;
d33683 3
a33685 3
                    }
                  else
                    {
d33690 4
a33693 4
                    }
                case 'c':
                  if (strncmp (KR_keyword, "/dev/cons46", 11) == 0)
                    {
d33695 1
a33695 1
return dev_storage + 66;
d33698 3
a33700 9
                    }
                  else
                    {
{
return	NULL;

}
                    }
                default:
d33706 2
a33707 2
            case '3':
              switch (KR_keyword [5])
d33709 2
a33710 2
                case 't':
                  if (strncmp (KR_keyword, "/dev/ttyS36", 11) == 0)
d33713 1
a33713 1
return dev_storage + 2613;
d33724 2
a33725 2
                case 'p':
                  if (strncmp (KR_keyword, "/dev/ptym36", 11) == 0)
d33728 1
a33728 1
return dev_storage + 339;
d33739 2
a33740 2
                case 'c':
                  if (strncmp (KR_keyword, "/dev/cons36", 11) == 0)
d33743 1
a33743 1
return dev_storage + 56;
d33760 18
a33777 6
            case '2':
              switch (KR_keyword [5])
                {
                case 't':
                  if (strncmp (KR_keyword, "/dev/ttyS26", 11) == 0)
                    {
d33779 1
a33779 1
return dev_storage + 2603;
d33782 3
a33784 3
                    }
                  else
                    {
d33789 4
a33792 4
                    }
                case 'p':
                  if (strncmp (KR_keyword, "/dev/ptym26", 11) == 0)
                    {
d33794 1
a33794 1
return dev_storage + 329;
d33797 3
a33799 3
                    }
                  else
                    {
d33804 9
a33812 3
                    }
                case 'n':
                  if (strncmp (KR_keyword, "/dev/nst126", 11) == 0)
d33815 1
a33815 1
return dev_storage + 233;
d33827 1
a33827 1
                  if (strncmp (KR_keyword, "/dev/cons26", 11) == 0)
d33830 1
a33830 1
return dev_storage + 46;
d33847 1
a33847 1
            case '1':
d33851 1
a33851 1
                  if (strncmp (KR_keyword, "/dev/ttyS16", 11) == 0)
d33854 1
a33854 1
return dev_storage + 2593;
d33865 2
a33866 2
                case 'p':
                  if (strncmp (KR_keyword, "/dev/ptym16", 11) == 0)
d33869 1
a33869 1
return dev_storage + 319;
d33880 11
a33890 2
                case 'n':
                  if (strncmp (KR_keyword, "/dev/nst116", 11) == 0)
d33893 1
a33893 1
return dev_storage + 223;
d33905 1
a33905 1
                  if (strncmp (KR_keyword, "/dev/cons16", 11) == 0)
d33908 1
a33908 1
return dev_storage + 36;
d33925 1
a33925 25
            case '0':
              if (strncmp (KR_keyword, "/dev/nst106", 11) == 0)
                {
{
return dev_storage + 213;

}
                }
              else
                {
{
return	NULL;

}
                }
            default:
{
return	NULL;

}
            }
        case '5':
          switch (KR_keyword [7])
            {
            case 'y':
d33929 1
a33929 1
                  switch (KR_keyword [9])
a33930 3
                    case '5':
                      if (strncmp (KR_keyword, "/dev/ttyS55", 11) == 0)
                        {
d33932 1
a33932 1
return dev_storage + 2632;
d33935 3
a33937 3
                        }
                      else
                        {
d33942 4
a33945 4
                        }
                    case '4':
                      if (strncmp (KR_keyword, "/dev/ttyS45", 11) == 0)
                        {
d33947 1
a33947 59
return dev_storage + 2622;

}
                        }
                      else
                        {
{
return	NULL;

}
                        }
                    case '3':
                      if (strncmp (KR_keyword, "/dev/ttyS35", 11) == 0)
                        {
{
return dev_storage + 2612;

}
                        }
                      else
                        {
{
return	NULL;

}
                        }
                    case '2':
                      if (strncmp (KR_keyword, "/dev/ttyS25", 11) == 0)
                        {
{
return dev_storage + 2602;

}
                        }
                      else
                        {
{
return	NULL;

}
                        }
                    case '1':
                      if (strncmp (KR_keyword, "/dev/ttyS15", 11) == 0)
                        {
{
return dev_storage + 2592;

}
                        }
                      else
                        {
{
return	NULL;

}
                        }
                    default:
{
return	NULL;
d33951 1
a33951 2
                case 'p':
                  switch (KR_keyword [9])
a33952 76
                    case '5':
                      if (strncmp (KR_keyword, "/dev/ptym55", 11) == 0)
                        {
{
return dev_storage + 358;

}
                        }
                      else
                        {
{
return	NULL;

}
                        }
                    case '4':
                      if (strncmp (KR_keyword, "/dev/ptym45", 11) == 0)
                        {
{
return dev_storage + 348;

}
                        }
                      else
                        {
{
return	NULL;

}
                        }
                    case '3':
                      if (strncmp (KR_keyword, "/dev/ptym35", 11) == 0)
                        {
{
return dev_storage + 338;

}
                        }
                      else
                        {
{
return	NULL;

}
                        }
                    case '2':
                      if (strncmp (KR_keyword, "/dev/ptym25", 11) == 0)
                        {
{
return dev_storage + 328;

}
                        }
                      else
                        {
{
return	NULL;

}
                        }
                    case '1':
                      if (strncmp (KR_keyword, "/dev/ptym15", 11) == 0)
                        {
{
return dev_storage + 318;

}
                        }
                      else
                        {
{
return	NULL;

}
                        }
                    default:
d33964 2
a33965 2
            case 't':
              switch (KR_keyword [9])
d33967 2
a33968 2
                case '2':
                  if (strncmp (KR_keyword, "/dev/nst125", 11) == 0)
d33971 1
a33971 1
return dev_storage + 232;
d33982 2
a33983 2
                case '1':
                  if (strncmp (KR_keyword, "/dev/nst115", 11) == 0)
d33986 1
a33986 1
return dev_storage + 222;
d33997 2
a33998 2
                case '0':
                  if (strncmp (KR_keyword, "/dev/nst105", 11) == 0)
d34001 1
a34001 1
return dev_storage + 212;
d34018 9
a34026 2
            case 'n':
              switch (KR_keyword [9])
a34027 3
                case '5':
                  if (strncmp (KR_keyword, "/dev/cons55", 11) == 0)
                    {
d34029 1
a34029 1
return dev_storage + 75;
d34032 2
a34033 3
                    }
                  else
                    {
d34038 9
a34046 3
                    }
                case '4':
                  if (strncmp (KR_keyword, "/dev/cons45", 11) == 0)
d34049 1
a34049 1
return dev_storage + 65;
d34060 2
a34061 2
                case '3':
                  if (strncmp (KR_keyword, "/dev/cons35", 11) == 0)
d34064 1
a34064 1
return dev_storage + 55;
d34075 11
a34085 2
                case '2':
                  if (strncmp (KR_keyword, "/dev/cons25", 11) == 0)
d34088 1
a34088 1
return dev_storage + 45;
d34099 2
a34100 2
                case '1':
                  if (strncmp (KR_keyword, "/dev/cons15", 11) == 0)
d34103 1
a34103 1
return dev_storage + 35;
d34120 2
a34121 2
            case 'd':
              switch (KR_keyword [8])
d34123 2
a34124 2
                case 'x':
                  if (strncmp (KR_keyword, "/dev/sddx15", 11) == 0)
d34127 1
a34127 1
return dev_storage + 2431;
d34138 2
a34139 2
                case 'w':
                  if (strncmp (KR_keyword, "/dev/sddw15", 11) == 0)
d34142 1
a34142 1
return dev_storage + 2416;
d34153 11
a34163 2
                case 'v':
                  if (strncmp (KR_keyword, "/dev/sddv15", 11) == 0)
d34166 1
a34166 1
return dev_storage + 2401;
d34177 2
a34178 2
                case 'u':
                  if (strncmp (KR_keyword, "/dev/sddu15", 11) == 0)
d34181 1
a34181 1
return dev_storage + 2386;
d34192 9
d34202 1
a34202 1
                  if (strncmp (KR_keyword, "/dev/sddt15", 11) == 0)
d34205 1
a34205 1
return dev_storage + 2371;
d34216 2
a34217 2
                case 's':
                  if (strncmp (KR_keyword, "/dev/sdds15", 11) == 0)
d34220 1
a34220 1
return dev_storage + 2356;
d34231 2
a34232 2
                case 'r':
                  if (strncmp (KR_keyword, "/dev/sddr15", 11) == 0)
d34235 1
a34235 1
return dev_storage + 2341;
d34246 16
a34261 3
                case 'q':
                  if (strncmp (KR_keyword, "/dev/sddq15", 11) == 0)
                    {
d34263 1
a34263 1
return dev_storage + 2326;
d34266 2
a34267 3
                    }
                  else
                    {
d34272 9
a34280 3
                    }
                case 'p':
                  if (strncmp (KR_keyword, "/dev/sddp15", 11) == 0)
d34283 1
a34283 1
return dev_storage + 2311;
d34294 2
a34295 2
                case 'o':
                  if (strncmp (KR_keyword, "/dev/sddo15", 11) == 0)
d34298 1
a34298 1
return dev_storage + 2296;
d34309 11
a34319 2
                case 'n':
                  if (strncmp (KR_keyword, "/dev/sddn15", 11) == 0)
d34322 1
a34322 1
return dev_storage + 2281;
d34333 2
a34334 2
                case 'm':
                  if (strncmp (KR_keyword, "/dev/sddm15", 11) == 0)
d34337 1
a34337 1
return dev_storage + 2266;
d34348 11
a34358 2
                case 'l':
                  if (strncmp (KR_keyword, "/dev/sddl15", 11) == 0)
d34361 1
a34361 1
return dev_storage + 2251;
d34372 2
a34373 2
                case 'k':
                  if (strncmp (KR_keyword, "/dev/sddk15", 11) == 0)
d34376 1
a34376 1
return dev_storage + 2236;
d34387 11
a34397 2
                case 'j':
                  if (strncmp (KR_keyword, "/dev/sddj15", 11) == 0)
d34400 1
a34400 1
return dev_storage + 2221;
d34411 2
a34412 2
                case 'i':
                  if (strncmp (KR_keyword, "/dev/sddi15", 11) == 0)
d34415 1
a34415 1
return dev_storage + 2206;
d34426 2
a34427 2
                case 'h':
                  if (strncmp (KR_keyword, "/dev/sddh15", 11) == 0)
d34430 1
a34430 1
return dev_storage + 2191;
d34441 11
a34451 2
                case 'g':
                  if (strncmp (KR_keyword, "/dev/sddg15", 11) == 0)
d34454 1
a34454 1
return dev_storage + 2176;
d34465 2
a34466 2
                case 'f':
                  if (strncmp (KR_keyword, "/dev/sddf15", 11) == 0)
d34469 1
a34469 1
return dev_storage + 2161;
d34480 2
a34481 2
                case 'e':
                  if (strncmp (KR_keyword, "/dev/sdde15", 11) == 0)
d34484 1
a34484 1
return dev_storage + 2146;
d34495 1
a34495 3
                case 'd':
                  if (strncmp (KR_keyword, "/dev/sddd15", 11) == 0)
                    {
d34497 1
a34497 1
return dev_storage + 2131;
d34500 4
a34503 3
                    }
                  else
                    {
d34505 1
a34505 1
return	NULL;
d34508 3
a34510 4
                    }
                case 'c':
                  if (strncmp (KR_keyword, "/dev/sddc15", 11) == 0)
                    {
d34512 1
a34512 1
return dev_storage + 2116;
d34515 2
a34516 3
                    }
                  else
                    {
d34521 9
a34529 3
                    }
                case 'b':
                  if (strncmp (KR_keyword, "/dev/sddb15", 11) == 0)
d34532 1
a34532 1
return dev_storage + 2101;
d34543 2
a34544 2
                case 'a':
                  if (strncmp (KR_keyword, "/dev/sdda15", 11) == 0)
d34547 1
a34547 1
return dev_storage + 2086;
d34564 2
a34565 2
            case 'c':
              switch (KR_keyword [8])
d34567 2
a34568 2
                case 'z':
                  if (strncmp (KR_keyword, "/dev/sdcz15", 11) == 0)
d34571 1
a34571 1
return dev_storage + 2047;
d34582 2
a34583 2
                case 'y':
                  if (strncmp (KR_keyword, "/dev/sdcy15", 11) == 0)
d34586 1
a34586 1
return dev_storage + 2032;
d34597 1
a34597 10
                case 'x':
                  if (strncmp (KR_keyword, "/dev/sdcx15", 11) == 0)
                    {
{
return dev_storage + 2017;

}
                    }
                  else
                    {
d34602 6
a34607 3
                    }
                case 'w':
                  if (strncmp (KR_keyword, "/dev/sdcw15", 11) == 0)
d34610 1
a34610 1
return dev_storage + 2002;
d34621 2
a34622 2
                case 'v':
                  if (strncmp (KR_keyword, "/dev/sdcv15", 11) == 0)
d34625 1
a34625 1
return dev_storage + 1987;
d34636 1
a34636 10
                case 'u':
                  if (strncmp (KR_keyword, "/dev/sdcu15", 11) == 0)
                    {
{
return dev_storage + 1972;

}
                    }
                  else
                    {
d34641 4
a34644 1
                    }
d34646 1
a34646 1
                  if (strncmp (KR_keyword, "/dev/sdct15", 11) == 0)
d34649 1
a34649 1
return dev_storage + 1957;
d34660 2
a34661 2
                case 's':
                  if (strncmp (KR_keyword, "/dev/sdcs15", 11) == 0)
d34664 1
a34664 1
return dev_storage + 1942;
d34675 2
a34676 2
                case 'r':
                  if (strncmp (KR_keyword, "/dev/sdcr15", 11) == 0)
d34679 1
a34679 1
return dev_storage + 1927;
d34690 11
a34700 2
                case 'q':
                  if (strncmp (KR_keyword, "/dev/sdcq15", 11) == 0)
d34703 1
a34703 1
return dev_storage + 1912;
d34714 2
a34715 2
                case 'p':
                  if (strncmp (KR_keyword, "/dev/sdcp15", 11) == 0)
d34718 1
a34718 1
return dev_storage + 1897;
d34729 2
a34730 2
                case 'o':
                  if (strncmp (KR_keyword, "/dev/sdco15", 11) == 0)
d34733 1
a34733 1
return dev_storage + 1882;
d34744 1
a34744 3
                case 'n':
                  if (strncmp (KR_keyword, "/dev/sdcn15", 11) == 0)
                    {
d34746 1
a34746 1
return dev_storage + 1867;
d34749 4
a34752 3
                    }
                  else
                    {
d34754 1
a34754 1
return	NULL;
d34757 3
a34759 4
                    }
                case 'm':
                  if (strncmp (KR_keyword, "/dev/sdcm15", 11) == 0)
                    {
d34761 1
a34761 1
return dev_storage + 1852;
d34764 2
a34765 3
                    }
                  else
                    {
d34770 9
a34778 3
                    }
                case 'l':
                  if (strncmp (KR_keyword, "/dev/sdcl15", 11) == 0)
d34781 1
a34781 1
return dev_storage + 1837;
d34792 2
a34793 2
                case 'k':
                  if (strncmp (KR_keyword, "/dev/sdck15", 11) == 0)
d34796 1
a34796 1
return dev_storage + 1822;
d34807 2
a34808 2
                case 'j':
                  if (strncmp (KR_keyword, "/dev/sdcj15", 11) == 0)
d34811 1
a34811 1
return dev_storage + 1807;
d34822 2
a34823 2
                case 'i':
                  if (strncmp (KR_keyword, "/dev/sdci15", 11) == 0)
d34826 1
a34826 1
return dev_storage + 1792;
d34837 2
a34838 2
                case 'h':
                  if (strncmp (KR_keyword, "/dev/sdch15", 11) == 0)
d34841 1
a34841 1
return dev_storage + 1777;
d34852 1
a34852 10
                case 'g':
                  if (strncmp (KR_keyword, "/dev/sdcg15", 11) == 0)
                    {
{
return dev_storage + 1762;

}
                    }
                  else
                    {
d34857 6
a34862 3
                    }
                case 'f':
                  if (strncmp (KR_keyword, "/dev/sdcf15", 11) == 0)
d34865 1
a34865 1
return dev_storage + 1747;
d34876 2
a34877 2
                case 'e':
                  if (strncmp (KR_keyword, "/dev/sdce15", 11) == 0)
d34880 1
a34880 1
return dev_storage + 1732;
d34891 2
a34892 2
                case 'd':
                  if (strncmp (KR_keyword, "/dev/sdcd15", 11) == 0)
d34895 1
a34895 1
return dev_storage + 1717;
d34906 11
a34916 2
                case 'c':
                  if (strncmp (KR_keyword, "/dev/sdcc15", 11) == 0)
d34919 1
a34919 1
return dev_storage + 1702;
d34930 2
a34931 2
                case 'b':
                  if (strncmp (KR_keyword, "/dev/sdcb15", 11) == 0)
d34934 1
a34934 1
return dev_storage + 1687;
d34945 2
a34946 2
                case 'a':
                  if (strncmp (KR_keyword, "/dev/sdca15", 11) == 0)
d34949 1
a34949 1
return dev_storage + 1672;
d34960 2
a34961 11
                default:
{
return	NULL;

}
                }
            case 'b':
              switch (KR_keyword [8])
                {
                case 'z':
                  if (strncmp (KR_keyword, "/dev/sdbz15", 11) == 0)
d34964 1
a34964 1
return dev_storage + 1631;
d34975 2
a34976 2
                case 'y':
                  if (strncmp (KR_keyword, "/dev/sdby15", 11) == 0)
d34979 1
a34979 1
return dev_storage + 1616;
d34990 9
d35000 1
a35000 1
                  if (strncmp (KR_keyword, "/dev/sdbx15", 11) == 0)
d35003 1
a35003 1
return dev_storage + 1601;
d35015 1
a35015 1
                  if (strncmp (KR_keyword, "/dev/sdbw15", 11) == 0)
d35018 1
a35018 1
return dev_storage + 1586;
d35030 1
a35030 1
                  if (strncmp (KR_keyword, "/dev/sdbv15", 11) == 0)
d35033 1
a35033 1
return dev_storage + 1571;
d35045 1
a35045 1
                  if (strncmp (KR_keyword, "/dev/sdbu15", 11) == 0)
d35048 1
a35048 1
return dev_storage + 1556;
d35060 1
a35060 1
                  if (strncmp (KR_keyword, "/dev/sdbt15", 11) == 0)
d35063 1
a35063 1
return dev_storage + 1541;
d35075 1
a35075 1
                  if (strncmp (KR_keyword, "/dev/sdbs15", 11) == 0)
d35078 1
a35078 1
return dev_storage + 1526;
d35090 1
a35090 1
                  if (strncmp (KR_keyword, "/dev/sdbr15", 11) == 0)
d35093 1
a35093 1
return dev_storage + 1511;
d35105 1
a35105 1
                  if (strncmp (KR_keyword, "/dev/sdbq15", 11) == 0)
d35108 1
a35108 1
return dev_storage + 1496;
d35120 1
a35120 1
                  if (strncmp (KR_keyword, "/dev/sdbp15", 11) == 0)
d35123 1
a35123 1
return dev_storage + 1481;
d35135 1
a35135 1
                  if (strncmp (KR_keyword, "/dev/sdbo15", 11) == 0)
d35138 1
a35138 1
return dev_storage + 1466;
d35150 1
a35150 1
                  if (strncmp (KR_keyword, "/dev/sdbn15", 11) == 0)
d35153 1
a35153 1
return dev_storage + 1451;
d35165 1
a35165 1
                  if (strncmp (KR_keyword, "/dev/sdbm15", 11) == 0)
d35168 1
a35168 1
return dev_storage + 1436;
d35180 1
a35180 1
                  if (strncmp (KR_keyword, "/dev/sdbl15", 11) == 0)
d35183 1
a35183 1
return dev_storage + 1421;
d35195 1
a35195 1
                  if (strncmp (KR_keyword, "/dev/sdbk15", 11) == 0)
d35198 1
a35198 1
return dev_storage + 1406;
d35210 1
a35210 1
                  if (strncmp (KR_keyword, "/dev/sdbj15", 11) == 0)
d35213 1
a35213 1
return dev_storage + 1391;
d35225 1
a35225 1
                  if (strncmp (KR_keyword, "/dev/sdbi15", 11) == 0)
d35228 1
a35228 1
return dev_storage + 1376;
d35240 1
a35240 1
                  if (strncmp (KR_keyword, "/dev/sdbh15", 11) == 0)
d35243 1
a35243 1
return dev_storage + 1361;
d35255 1
a35255 1
                  if (strncmp (KR_keyword, "/dev/sdbg15", 11) == 0)
d35258 1
a35258 1
return dev_storage + 1346;
d35270 1
a35270 1
                  if (strncmp (KR_keyword, "/dev/sdbf15", 11) == 0)
d35273 1
a35273 1
return dev_storage + 1331;
d35285 1
a35285 1
                  if (strncmp (KR_keyword, "/dev/sdbe15", 11) == 0)
d35288 1
a35288 1
return dev_storage + 1316;
d35300 1
a35300 1
                  if (strncmp (KR_keyword, "/dev/sdbd15", 11) == 0)
d35303 1
a35303 1
return dev_storage + 1301;
d35315 1
a35315 1
                  if (strncmp (KR_keyword, "/dev/sdbc15", 11) == 0)
d35318 1
a35318 1
return dev_storage + 1286;
d35330 1
a35330 1
                  if (strncmp (KR_keyword, "/dev/sdbb15", 11) == 0)
d35333 1
a35333 1
return dev_storage + 1271;
d35345 1
a35345 1
                  if (strncmp (KR_keyword, "/dev/sdba15", 11) == 0)
d35348 1
a35348 1
return dev_storage + 1256;
d35365 1
a35365 1
            case 'a':
d35369 1
a35369 1
                  if (strncmp (KR_keyword, "/dev/sdaz15", 11) == 0)
d35372 1
a35372 1
return dev_storage + 1215;
d35384 1
a35384 1
                  if (strncmp (KR_keyword, "/dev/sday15", 11) == 0)
d35387 1
a35387 1
return dev_storage + 1200;
d35399 1
a35399 1
                  if (strncmp (KR_keyword, "/dev/sdax15", 11) == 0)
d35402 1
a35402 1
return dev_storage + 1185;
d35414 1
a35414 1
                  if (strncmp (KR_keyword, "/dev/sdaw15", 11) == 0)
d35417 1
a35417 1
return dev_storage + 1170;
d35429 1
a35429 1
                  if (strncmp (KR_keyword, "/dev/sdav15", 11) == 0)
d35432 1
a35432 1
return dev_storage + 1155;
d35444 1
a35444 1
                  if (strncmp (KR_keyword, "/dev/sdau15", 11) == 0)
d35447 1
a35447 1
return dev_storage + 1140;
d35459 1
a35459 1
                  if (strncmp (KR_keyword, "/dev/sdat15", 11) == 0)
d35462 1
a35462 1
return dev_storage + 1125;
d35474 1
a35474 1
                  if (strncmp (KR_keyword, "/dev/sdas15", 11) == 0)
d35477 1
a35477 1
return dev_storage + 1110;
d35489 1
a35489 1
                  if (strncmp (KR_keyword, "/dev/sdar15", 11) == 0)
d35492 1
a35492 1
return dev_storage + 1095;
d35504 1
a35504 1
                  if (strncmp (KR_keyword, "/dev/sdaq15", 11) == 0)
d35507 1
a35507 1
return dev_storage + 1080;
d35519 1
a35519 1
                  if (strncmp (KR_keyword, "/dev/sdap15", 11) == 0)
d35522 1
a35522 1
return dev_storage + 1065;
d35534 1
a35534 1
                  if (strncmp (KR_keyword, "/dev/sdao15", 11) == 0)
d35537 1
a35537 1
return dev_storage + 1050;
d35549 1
a35549 1
                  if (strncmp (KR_keyword, "/dev/sdan15", 11) == 0)
d35552 1
a35552 1
return dev_storage + 1035;
d35564 1
a35564 1
                  if (strncmp (KR_keyword, "/dev/sdam15", 11) == 0)
d35567 1
a35567 1
return dev_storage + 1020;
d35579 1
a35579 1
                  if (strncmp (KR_keyword, "/dev/sdal15", 11) == 0)
d35582 1
a35582 1
return dev_storage + 1005;
d35594 1
a35594 1
                  if (strncmp (KR_keyword, "/dev/sdak15", 11) == 0)
d35597 1
a35597 1
return dev_storage + 990;
d35609 1
a35609 1
                  if (strncmp (KR_keyword, "/dev/sdaj15", 11) == 0)
d35612 1
a35612 1
return dev_storage + 975;
d35624 1
a35624 1
                  if (strncmp (KR_keyword, "/dev/sdai15", 11) == 0)
d35627 1
a35627 1
return dev_storage + 960;
d35639 1
a35639 1
                  if (strncmp (KR_keyword, "/dev/sdah15", 11) == 0)
d35642 1
a35642 1
return dev_storage + 945;
d35654 1
a35654 1
                  if (strncmp (KR_keyword, "/dev/sdag15", 11) == 0)
d35657 1
a35657 1
return dev_storage + 930;
d35669 1
a35669 1
                  if (strncmp (KR_keyword, "/dev/sdaf15", 11) == 0)
d35672 1
a35672 286
return dev_storage + 915;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'e':
                  if (strncmp (KR_keyword, "/dev/sdae15", 11) == 0)
                    {
{
return dev_storage + 900;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'd':
                  if (strncmp (KR_keyword, "/dev/sdad15", 11) == 0)
                    {
{
return dev_storage + 885;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'c':
                  if (strncmp (KR_keyword, "/dev/sdac15", 11) == 0)
                    {
{
return dev_storage + 870;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'b':
                  if (strncmp (KR_keyword, "/dev/sdab15", 11) == 0)
                    {
{
return dev_storage + 855;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'a':
                  if (strncmp (KR_keyword, "/dev/sdaa15", 11) == 0)
                    {
{
return dev_storage + 840;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                default:
{
return	NULL;

}
                }
            default:
{
return	NULL;

}
            }
        case '4':
          switch (KR_keyword [7])
            {
            case 'y':
              switch (KR_keyword [5])
                {
                case 't':
                  switch (KR_keyword [9])
                    {
                    case '5':
                      if (strncmp (KR_keyword, "/dev/ttyS54", 11) == 0)
                        {
{
return dev_storage + 2631;

}
                        }
                      else
                        {
{
return	NULL;

}
                        }
                    case '4':
                      if (strncmp (KR_keyword, "/dev/ttyS44", 11) == 0)
                        {
{
return dev_storage + 2621;

}
                        }
                      else
                        {
{
return	NULL;

}
                        }
                    case '3':
                      if (strncmp (KR_keyword, "/dev/ttyS34", 11) == 0)
                        {
{
return dev_storage + 2611;

}
                        }
                      else
                        {
{
return	NULL;

}
                        }
                    case '2':
                      if (strncmp (KR_keyword, "/dev/ttyS24", 11) == 0)
                        {
{
return dev_storage + 2601;

}
                        }
                      else
                        {
{
return	NULL;

}
                        }
                    case '1':
                      if (strncmp (KR_keyword, "/dev/ttyS14", 11) == 0)
                        {
{
return dev_storage + 2591;

}
                        }
                      else
                        {
{
return	NULL;

}
                        }
                    default:
{
return	NULL;

}
                    }
                case 'p':
                  switch (KR_keyword [9])
                    {
                    case '5':
                      if (strncmp (KR_keyword, "/dev/ptym54", 11) == 0)
                        {
{
return dev_storage + 357;

}
                        }
                      else
                        {
{
return	NULL;

}
                        }
                    case '4':
                      if (strncmp (KR_keyword, "/dev/ptym44", 11) == 0)
                        {
{
return dev_storage + 347;

}
                        }
                      else
                        {
{
return	NULL;

}
                        }
                    case '3':
                      if (strncmp (KR_keyword, "/dev/ptym34", 11) == 0)
                        {
{
return dev_storage + 337;

}
                        }
                      else
                        {
{
return	NULL;

}
                        }
                    case '2':
                      if (strncmp (KR_keyword, "/dev/ptym24", 11) == 0)
                        {
{
return dev_storage + 327;

}
                        }
                      else
                        {
{
return	NULL;

}
                        }
                    case '1':
                      if (strncmp (KR_keyword, "/dev/ptym14", 11) == 0)
                        {
{
return dev_storage + 317;

}
                        }
                      else
                        {
{
return	NULL;

}
                        }
                    default:
{
return	NULL;

}
                    }
                default:
{
return	NULL;

}
                }
            case 't':
              switch (KR_keyword [9])
                {
                case '2':
                  if (strncmp (KR_keyword, "/dev/nst124", 11) == 0)
                    {
{
return dev_storage + 231;
d35683 2
a35684 2
                case '1':
                  if (strncmp (KR_keyword, "/dev/nst114", 11) == 0)
d35687 1
a35687 1
return dev_storage + 221;
d35698 2
a35699 2
                case '0':
                  if (strncmp (KR_keyword, "/dev/nst104", 11) == 0)
d35702 1
a35702 1
return dev_storage + 211;
d35713 2
a35714 11
                default:
{
return	NULL;

}
                }
            case 'n':
              switch (KR_keyword [9])
                {
                case '5':
                  if (strncmp (KR_keyword, "/dev/cons54", 11) == 0)
d35717 1
a35717 1
return dev_storage + 74;
d35728 2
a35729 2
                case '4':
                  if (strncmp (KR_keyword, "/dev/cons44", 11) == 0)
d35732 1
a35732 1
return dev_storage + 64;
d35743 2
a35744 2
                case '3':
                  if (strncmp (KR_keyword, "/dev/cons34", 11) == 0)
d35747 1
a35747 1
return dev_storage + 54;
d35758 11
a35768 2
                case '2':
                  if (strncmp (KR_keyword, "/dev/cons24", 11) == 0)
d35771 1
a35771 1
return dev_storage + 44;
d35782 2
a35783 2
                case '1':
                  if (strncmp (KR_keyword, "/dev/cons14", 11) == 0)
d35786 1
a35786 1
return dev_storage + 34;
a35796 9
                default:
{
return	NULL;

}
                }
            case 'd':
              switch (KR_keyword [8])
                {
d35798 1
a35798 1
                  if (strncmp (KR_keyword, "/dev/sddx14", 11) == 0)
d35801 1
a35801 1
return dev_storage + 2430;
d35813 1
a35813 1
                  if (strncmp (KR_keyword, "/dev/sddw14", 11) == 0)
d35816 1
a35816 1
return dev_storage + 2415;
d35828 1
a35828 1
                  if (strncmp (KR_keyword, "/dev/sddv14", 11) == 0)
d35831 1
a35831 1
return dev_storage + 2400;
d35843 1
a35843 1
                  if (strncmp (KR_keyword, "/dev/sddu14", 11) == 0)
d35846 1
a35846 1
return dev_storage + 2385;
d35858 1
a35858 1
                  if (strncmp (KR_keyword, "/dev/sddt14", 11) == 0)
d35861 1
a35861 1
return dev_storage + 2370;
d35873 1
a35873 1
                  if (strncmp (KR_keyword, "/dev/sdds14", 11) == 0)
d35876 1
a35876 1
return dev_storage + 2355;
d35888 1
a35888 1
                  if (strncmp (KR_keyword, "/dev/sddr14", 11) == 0)
d35891 1
a35891 1
return dev_storage + 2340;
d35903 1
a35903 1
                  if (strncmp (KR_keyword, "/dev/sddq14", 11) == 0)
d35906 1
a35906 1
return dev_storage + 2325;
d35918 1
a35918 1
                  if (strncmp (KR_keyword, "/dev/sddp14", 11) == 0)
d35921 1
a35921 1
return dev_storage + 2310;
d35933 1
a35933 1
                  if (strncmp (KR_keyword, "/dev/sddo14", 11) == 0)
d35936 1
a35936 1
return dev_storage + 2295;
d35948 1
a35948 1
                  if (strncmp (KR_keyword, "/dev/sddn14", 11) == 0)
d35951 1
a35951 1
return dev_storage + 2280;
d35963 1
a35963 1
                  if (strncmp (KR_keyword, "/dev/sddm14", 11) == 0)
d35966 1
a35966 1
return dev_storage + 2265;
d35978 1
a35978 1
                  if (strncmp (KR_keyword, "/dev/sddl14", 11) == 0)
d35981 1
a35981 1
return dev_storage + 2250;
d35993 1
a35993 1
                  if (strncmp (KR_keyword, "/dev/sddk14", 11) == 0)
d35996 1
a35996 1
return dev_storage + 2235;
d36008 1
a36008 1
                  if (strncmp (KR_keyword, "/dev/sddj14", 11) == 0)
d36011 1
a36011 1
return dev_storage + 2220;
d36023 1
a36023 1
                  if (strncmp (KR_keyword, "/dev/sddi14", 11) == 0)
d36026 1
a36026 1
return dev_storage + 2205;
d36038 1
a36038 1
                  if (strncmp (KR_keyword, "/dev/sddh14", 11) == 0)
d36041 1
a36041 1
return dev_storage + 2190;
d36053 1
a36053 1
                  if (strncmp (KR_keyword, "/dev/sddg14", 11) == 0)
d36056 1
a36056 1
return dev_storage + 2175;
d36068 1
a36068 1
                  if (strncmp (KR_keyword, "/dev/sddf14", 11) == 0)
d36071 1
a36071 1
return dev_storage + 2160;
d36083 1
a36083 1
                  if (strncmp (KR_keyword, "/dev/sdde14", 11) == 0)
d36086 1
a36086 1
return dev_storage + 2145;
d36098 1
a36098 1
                  if (strncmp (KR_keyword, "/dev/sddd14", 11) == 0)
d36101 1
a36101 1
return dev_storage + 2130;
d36113 1
a36113 1
                  if (strncmp (KR_keyword, "/dev/sddc14", 11) == 0)
d36116 1
a36116 1
return dev_storage + 2115;
d36128 1
a36128 1
                  if (strncmp (KR_keyword, "/dev/sddb14", 11) == 0)
d36131 1
a36131 1
return dev_storage + 2100;
d36143 1
a36143 1
                  if (strncmp (KR_keyword, "/dev/sdda14", 11) == 0)
d36146 1
a36146 1
return dev_storage + 2085;
d36163 1
a36163 1
            case 'c':
d36167 1
a36167 1
                  if (strncmp (KR_keyword, "/dev/sdcz14", 11) == 0)
d36170 1
a36170 1
return dev_storage + 2046;
d36182 1
a36182 1
                  if (strncmp (KR_keyword, "/dev/sdcy14", 11) == 0)
d36185 1
a36185 1
return dev_storage + 2031;
d36197 1
a36197 1
                  if (strncmp (KR_keyword, "/dev/sdcx14", 11) == 0)
d36200 1
a36200 1
return dev_storage + 2016;
d36212 1
a36212 1
                  if (strncmp (KR_keyword, "/dev/sdcw14", 11) == 0)
d36215 1
a36215 1
return dev_storage + 2001;
d36227 1
a36227 1
                  if (strncmp (KR_keyword, "/dev/sdcv14", 11) == 0)
d36230 1
a36230 1
return dev_storage + 1986;
d36242 1
a36242 1
                  if (strncmp (KR_keyword, "/dev/sdcu14", 11) == 0)
d36245 1
a36245 1
return dev_storage + 1971;
d36257 1
a36257 1
                  if (strncmp (KR_keyword, "/dev/sdct14", 11) == 0)
d36260 1
a36260 1
return dev_storage + 1956;
d36272 1
a36272 1
                  if (strncmp (KR_keyword, "/dev/sdcs14", 11) == 0)
d36275 1
a36275 1
return dev_storage + 1941;
d36287 1
a36287 1
                  if (strncmp (KR_keyword, "/dev/sdcr14", 11) == 0)
d36290 1
a36290 1
return dev_storage + 1926;
d36302 1
a36302 1
                  if (strncmp (KR_keyword, "/dev/sdcq14", 11) == 0)
d36305 1
a36305 1
return dev_storage + 1911;
d36317 1
a36317 1
                  if (strncmp (KR_keyword, "/dev/sdcp14", 11) == 0)
d36320 1
a36320 1
return dev_storage + 1896;
d36332 1
a36332 1
                  if (strncmp (KR_keyword, "/dev/sdco14", 11) == 0)
d36335 1
a36335 1
return dev_storage + 1881;
d36347 1
a36347 1
                  if (strncmp (KR_keyword, "/dev/sdcn14", 11) == 0)
d36350 1
a36350 1
return dev_storage + 1866;
d36362 1
a36362 1
                  if (strncmp (KR_keyword, "/dev/sdcm14", 11) == 0)
d36365 1
a36365 1
return dev_storage + 1851;
d36377 1
a36377 1
                  if (strncmp (KR_keyword, "/dev/sdcl14", 11) == 0)
d36380 1
a36380 1
return dev_storage + 1836;
d36392 1
a36392 1
                  if (strncmp (KR_keyword, "/dev/sdck14", 11) == 0)
d36395 1
a36395 1
return dev_storage + 1821;
d36407 1
a36407 1
                  if (strncmp (KR_keyword, "/dev/sdcj14", 11) == 0)
d36410 1
a36410 1
return dev_storage + 1806;
d36422 1
a36422 1
                  if (strncmp (KR_keyword, "/dev/sdci14", 11) == 0)
d36425 1
a36425 1
return dev_storage + 1791;
d36437 1
a36437 1
                  if (strncmp (KR_keyword, "/dev/sdch14", 11) == 0)
d36440 1
a36440 1
return dev_storage + 1776;
d36452 1
a36452 1
                  if (strncmp (KR_keyword, "/dev/sdcg14", 11) == 0)
d36455 1
a36455 1
return dev_storage + 1761;
d36467 1
a36467 1
                  if (strncmp (KR_keyword, "/dev/sdcf14", 11) == 0)
d36470 1
a36470 1
return dev_storage + 1746;
d36482 1
a36482 1
                  if (strncmp (KR_keyword, "/dev/sdce14", 11) == 0)
d36485 1
a36485 1
return dev_storage + 1731;
d36497 1
a36497 1
                  if (strncmp (KR_keyword, "/dev/sdcd14", 11) == 0)
d36500 1
a36500 1
return dev_storage + 1716;
d36512 1
a36512 1
                  if (strncmp (KR_keyword, "/dev/sdcc14", 11) == 0)
d36515 1
a36515 1
return dev_storage + 1701;
d36527 1
a36527 1
                  if (strncmp (KR_keyword, "/dev/sdcb14", 11) == 0)
d36530 1
a36530 1
return dev_storage + 1686;
d36542 148
a36689 1
                  if (strncmp (KR_keyword, "/dev/sdca14", 11) == 0)
d36692 1
a36692 1
return dev_storage + 1671;
d36709 2
a36710 2
            case 'b':
              switch (KR_keyword [8])
d36712 47
a36758 2
                case 'z':
                  if (strncmp (KR_keyword, "/dev/sdbz14", 11) == 0)
d36761 1
a36761 1
return dev_storage + 1630;
d36772 2
a36773 2
                case 'y':
                  if (strncmp (KR_keyword, "/dev/sdby14", 11) == 0)
d36776 1
a36776 1
return dev_storage + 1615;
d36787 9
d36797 1
a36797 1
                  if (strncmp (KR_keyword, "/dev/sdbx14", 11) == 0)
d36800 1
a36800 1
return dev_storage + 1600;
d36812 1
a36812 1
                  if (strncmp (KR_keyword, "/dev/sdbw14", 11) == 0)
d36815 1
a36815 1
return dev_storage + 1585;
d36827 1
a36827 1
                  if (strncmp (KR_keyword, "/dev/sdbv14", 11) == 0)
d36830 1
a36830 1
return dev_storage + 1570;
d36842 1
a36842 1
                  if (strncmp (KR_keyword, "/dev/sdbu14", 11) == 0)
d36845 1
a36845 1
return dev_storage + 1555;
d36857 1
a36857 1
                  if (strncmp (KR_keyword, "/dev/sdbt14", 11) == 0)
d36860 1
a36860 1
return dev_storage + 1540;
d36872 1
a36872 1
                  if (strncmp (KR_keyword, "/dev/sdbs14", 11) == 0)
d36875 1
a36875 1
return dev_storage + 1525;
d36887 1
a36887 1
                  if (strncmp (KR_keyword, "/dev/sdbr14", 11) == 0)
d36890 1
a36890 1
return dev_storage + 1510;
d36902 1
a36902 1
                  if (strncmp (KR_keyword, "/dev/sdbq14", 11) == 0)
d36905 1
a36905 1
return dev_storage + 1495;
d36917 1
a36917 1
                  if (strncmp (KR_keyword, "/dev/sdbp14", 11) == 0)
d36920 1
a36920 1
return dev_storage + 1480;
d36932 1
a36932 1
                  if (strncmp (KR_keyword, "/dev/sdbo14", 11) == 0)
d36935 1
a36935 1
return dev_storage + 1465;
d36947 1
a36947 1
                  if (strncmp (KR_keyword, "/dev/sdbn14", 11) == 0)
d36950 1
a36950 1
return dev_storage + 1450;
d36962 1
a36962 1
                  if (strncmp (KR_keyword, "/dev/sdbm14", 11) == 0)
d36965 1
a36965 1
return dev_storage + 1435;
d36977 1
a36977 1
                  if (strncmp (KR_keyword, "/dev/sdbl14", 11) == 0)
d36980 1
a36980 1
return dev_storage + 1420;
d36992 1
a36992 1
                  if (strncmp (KR_keyword, "/dev/sdbk14", 11) == 0)
d36995 1
a36995 1
return dev_storage + 1405;
d37007 1
a37007 1
                  if (strncmp (KR_keyword, "/dev/sdbj14", 11) == 0)
d37010 1
a37010 1
return dev_storage + 1390;
d37022 1
a37022 1
                  if (strncmp (KR_keyword, "/dev/sdbi14", 11) == 0)
d37025 1
a37025 1
return dev_storage + 1375;
d37037 1
a37037 1
                  if (strncmp (KR_keyword, "/dev/sdbh14", 11) == 0)
d37040 1
a37040 1
return dev_storage + 1360;
d37052 1
a37052 1
                  if (strncmp (KR_keyword, "/dev/sdbg14", 11) == 0)
d37055 1
a37055 1
return dev_storage + 1345;
d37067 1
a37067 1
                  if (strncmp (KR_keyword, "/dev/sdbf14", 11) == 0)
d37070 1
a37070 1
return dev_storage + 1330;
d37082 1
a37082 1
                  if (strncmp (KR_keyword, "/dev/sdbe14", 11) == 0)
d37085 1
a37085 1
return dev_storage + 1315;
d37097 1
a37097 1
                  if (strncmp (KR_keyword, "/dev/sdbd14", 11) == 0)
d37100 1
a37100 1
return dev_storage + 1300;
d37112 1
a37112 1
                  if (strncmp (KR_keyword, "/dev/sdbc14", 11) == 0)
d37115 1
a37115 1
return dev_storage + 1285;
d37127 1
a37127 1
                  if (strncmp (KR_keyword, "/dev/sdbb14", 11) == 0)
d37130 1
a37130 1
return dev_storage + 1270;
d37142 1
a37142 1
                  if (strncmp (KR_keyword, "/dev/sdba14", 11) == 0)
d37145 1
a37145 1
return dev_storage + 1255;
d37162 1
a37162 1
            case 'a':
d37166 1
a37166 1
                  if (strncmp (KR_keyword, "/dev/sdaz14", 11) == 0)
d37169 1
a37169 1
return dev_storage + 1214;
d37181 1
a37181 1
                  if (strncmp (KR_keyword, "/dev/sday14", 11) == 0)
d37184 1
a37184 1
return dev_storage + 1199;
d37196 1
a37196 1
                  if (strncmp (KR_keyword, "/dev/sdax14", 11) == 0)
d37199 1
a37199 1
return dev_storage + 1184;
d37211 1
a37211 1
                  if (strncmp (KR_keyword, "/dev/sdaw14", 11) == 0)
d37214 1
a37214 1
return dev_storage + 1169;
d37226 1
a37226 1
                  if (strncmp (KR_keyword, "/dev/sdav14", 11) == 0)
d37229 1
a37229 1
return dev_storage + 1154;
d37241 1
a37241 1
                  if (strncmp (KR_keyword, "/dev/sdau14", 11) == 0)
d37244 1
a37244 1
return dev_storage + 1139;
d37256 1
a37256 1
                  if (strncmp (KR_keyword, "/dev/sdat14", 11) == 0)
d37259 1
a37259 1
return dev_storage + 1124;
d37271 1
a37271 1
                  if (strncmp (KR_keyword, "/dev/sdas14", 11) == 0)
d37274 1
a37274 1
return dev_storage + 1109;
d37286 1
a37286 1
                  if (strncmp (KR_keyword, "/dev/sdar14", 11) == 0)
d37289 1
a37289 1
return dev_storage + 1094;
d37301 1
a37301 1
                  if (strncmp (KR_keyword, "/dev/sdaq14", 11) == 0)
d37304 1
a37304 1
return dev_storage + 1079;
d37316 1
a37316 1
                  if (strncmp (KR_keyword, "/dev/sdap14", 11) == 0)
d37319 1
a37319 1
return dev_storage + 1064;
d37331 1
a37331 1
                  if (strncmp (KR_keyword, "/dev/sdao14", 11) == 0)
d37334 1
a37334 1
return dev_storage + 1049;
d37346 1
a37346 1
                  if (strncmp (KR_keyword, "/dev/sdan14", 11) == 0)
d37349 1
a37349 1
return dev_storage + 1034;
d37361 1
a37361 1
                  if (strncmp (KR_keyword, "/dev/sdam14", 11) == 0)
d37364 1
a37364 1
return dev_storage + 1019;
d37376 1
a37376 1
                  if (strncmp (KR_keyword, "/dev/sdal14", 11) == 0)
d37379 1
a37379 1
return dev_storage + 1004;
d37391 1
a37391 1
                  if (strncmp (KR_keyword, "/dev/sdak14", 11) == 0)
d37394 1
a37394 1
return dev_storage + 989;
d37406 1
a37406 1
                  if (strncmp (KR_keyword, "/dev/sdaj14", 11) == 0)
d37409 1
a37409 1
return dev_storage + 974;
d37421 1
a37421 1
                  if (strncmp (KR_keyword, "/dev/sdai14", 11) == 0)
d37424 1
a37424 1
return dev_storage + 959;
d37436 1
a37436 1
                  if (strncmp (KR_keyword, "/dev/sdah14", 11) == 0)
d37439 1
a37439 1
return dev_storage + 944;
d37451 1
a37451 1
                  if (strncmp (KR_keyword, "/dev/sdag14", 11) == 0)
d37454 1
a37454 1
return dev_storage + 929;
d37466 1
a37466 1
                  if (strncmp (KR_keyword, "/dev/sdaf14", 11) == 0)
d37469 1
a37469 1
return dev_storage + 914;
d37481 1
a37481 1
                  if (strncmp (KR_keyword, "/dev/sdae14", 11) == 0)
d37484 1
a37484 1
return dev_storage + 899;
d37496 1
a37496 1
                  if (strncmp (KR_keyword, "/dev/sdad14", 11) == 0)
d37499 1
a37499 1
return dev_storage + 884;
d37511 1
a37511 1
                  if (strncmp (KR_keyword, "/dev/sdac14", 11) == 0)
d37514 1
a37514 1
return dev_storage + 869;
d37526 1
a37526 1
                  if (strncmp (KR_keyword, "/dev/sdab14", 11) == 0)
d37529 1
a37529 1
return dev_storage + 854;
d37541 1
a37541 1
                  if (strncmp (KR_keyword, "/dev/sdaa14", 11) == 0)
d37544 1
a37544 1
return dev_storage + 839;
d37561 2
a37562 11
            default:
{
return	NULL;

}
            }
        case '3':
          switch (KR_keyword [8])
            {
            case 'z':
              switch (KR_keyword [7])
d37564 2
a37565 2
                case 'c':
                  if (strncmp (KR_keyword, "/dev/sdcz13", 11) == 0)
d37568 1
a37568 1
return dev_storage + 2045;
d37579 2
a37580 2
                case 'b':
                  if (strncmp (KR_keyword, "/dev/sdbz13", 11) == 0)
d37583 1
a37583 1
return dev_storage + 1629;
d37594 2
a37595 2
                case 'a':
                  if (strncmp (KR_keyword, "/dev/sdaz13", 11) == 0)
d37598 1
a37598 1
return dev_storage + 1213;
d37609 2
a37610 11
                default:
{
return	NULL;

}
                }
            case 'y':
              switch (KR_keyword [7])
                {
                case 'c':
                  if (strncmp (KR_keyword, "/dev/sdcy13", 11) == 0)
d37613 1
a37613 1
return dev_storage + 2030;
d37624 2
a37625 2
                case 'b':
                  if (strncmp (KR_keyword, "/dev/sdby13", 11) == 0)
d37628 1
a37628 1
return dev_storage + 1614;
d37639 2
a37640 2
                case 'a':
                  if (strncmp (KR_keyword, "/dev/sday13", 11) == 0)
d37643 1
a37643 1
return dev_storage + 1198;
d37654 2
a37655 11
                default:
{
return	NULL;

}
                }
            case 'x':
              switch (KR_keyword [7])
                {
                case 'd':
                  if (strncmp (KR_keyword, "/dev/sddx13", 11) == 0)
d37658 1
a37658 1
return dev_storage + 2429;
d37669 2
a37670 2
                case 'c':
                  if (strncmp (KR_keyword, "/dev/sdcx13", 11) == 0)
d37673 1
a37673 1
return dev_storage + 2015;
d37684 2
a37685 2
                case 'b':
                  if (strncmp (KR_keyword, "/dev/sdbx13", 11) == 0)
d37688 1
a37688 1
return dev_storage + 1599;
d37699 2
a37700 2
                case 'a':
                  if (strncmp (KR_keyword, "/dev/sdax13", 11) == 0)
d37703 1
a37703 1
return dev_storage + 1183;
d37714 2
a37715 11
                default:
{
return	NULL;

}
                }
            case 'w':
              switch (KR_keyword [7])
                {
                case 'd':
                  if (strncmp (KR_keyword, "/dev/sddw13", 11) == 0)
d37718 1
a37718 1
return dev_storage + 2414;
d37729 2
a37730 2
                case 'c':
                  if (strncmp (KR_keyword, "/dev/sdcw13", 11) == 0)
d37733 1
a37733 1
return dev_storage + 2000;
d37744 2
a37745 2
                case 'b':
                  if (strncmp (KR_keyword, "/dev/sdbw13", 11) == 0)
d37748 1
a37748 1
return dev_storage + 1584;
d37759 2
a37760 2
                case 'a':
                  if (strncmp (KR_keyword, "/dev/sdaw13", 11) == 0)
d37763 1
a37763 1
return dev_storage + 1168;
d37774 2
a37775 11
                default:
{
return	NULL;

}
                }
            case 'v':
              switch (KR_keyword [7])
                {
                case 'd':
                  if (strncmp (KR_keyword, "/dev/sddv13", 11) == 0)
d37778 1
a37778 1
return dev_storage + 2399;
d37789 2
a37790 2
                case 'c':
                  if (strncmp (KR_keyword, "/dev/sdcv13", 11) == 0)
d37793 1
a37793 1
return dev_storage + 1985;
d37804 2
a37805 2
                case 'b':
                  if (strncmp (KR_keyword, "/dev/sdbv13", 11) == 0)
d37808 1
a37808 1
return dev_storage + 1569;
d37819 2
a37820 2
                case 'a':
                  if (strncmp (KR_keyword, "/dev/sdav13", 11) == 0)
d37823 1
a37823 1
return dev_storage + 1153;
d37834 2
a37835 11
                default:
{
return	NULL;

}
                }
            case 'u':
              switch (KR_keyword [7])
                {
                case 'd':
                  if (strncmp (KR_keyword, "/dev/sddu13", 11) == 0)
d37838 1
a37838 1
return dev_storage + 2384;
d37849 2
a37850 2
                case 'c':
                  if (strncmp (KR_keyword, "/dev/sdcu13", 11) == 0)
d37853 1
a37853 1
return dev_storage + 1970;
d37864 2
a37865 2
                case 'b':
                  if (strncmp (KR_keyword, "/dev/sdbu13", 11) == 0)
d37868 1
a37868 1
return dev_storage + 1554;
d37879 2
a37880 2
                case 'a':
                  if (strncmp (KR_keyword, "/dev/sdau13", 11) == 0)
d37883 1
a37883 1
return dev_storage + 1138;
a37893 9
                default:
{
return	NULL;

}
                }
            case 't':
              switch (KR_keyword [7])
                {
d37895 1
a37895 1
                  if (strncmp (KR_keyword, "/dev/sddt13", 11) == 0)
d37898 1
a37898 1
return dev_storage + 2369;
d37910 1
a37910 1
                  if (strncmp (KR_keyword, "/dev/sdct13", 11) == 0)
d37913 1
a37913 1
return dev_storage + 1955;
d37925 1
a37925 1
                  if (strncmp (KR_keyword, "/dev/sdbt13", 11) == 0)
d37928 1
a37928 1
return dev_storage + 1539;
d37940 1
a37940 1
                  if (strncmp (KR_keyword, "/dev/sdat13", 11) == 0)
d37943 1
a37943 1
return dev_storage + 1123;
d37960 2
a37961 2
            case 's':
              switch (KR_keyword [9])
d37963 2
a37964 2
                case '6':
                  if (strncmp (KR_keyword, "/dev/cons63", 11) == 0)
d37967 1
a37967 1
return dev_storage + 83;
d37978 2
a37979 2
                case '5':
                  if (strncmp (KR_keyword, "/dev/cons53", 11) == 0)
d37982 1
a37982 1
return dev_storage + 73;
d37993 2
a37994 2
                case '4':
                  if (strncmp (KR_keyword, "/dev/cons43", 11) == 0)
d37997 1
a37997 1
return dev_storage + 63;
d38008 2
a38009 2
                case '3':
                  if (strncmp (KR_keyword, "/dev/cons33", 11) == 0)
d38012 1
a38012 1
return dev_storage + 53;
d38023 2
a38024 2
                case '2':
                  if (strncmp (KR_keyword, "/dev/cons23", 11) == 0)
d38027 1
a38027 1
return dev_storage + 43;
d38038 2
a38039 2
                case '1':
                  switch (KR_keyword [7])
a38040 3
                    case 'n':
                      if (strncmp (KR_keyword, "/dev/cons13", 11) == 0)
                        {
d38042 1
a38042 91
return dev_storage + 33;

}
                        }
                      else
                        {
{
return	NULL;

}
                        }
                    case 'd':
                      if (strncmp (KR_keyword, "/dev/sdds13", 11) == 0)
                        {
{
return dev_storage + 2354;

}
                        }
                      else
                        {
{
return	NULL;

}
                        }
                    case 'c':
                      if (strncmp (KR_keyword, "/dev/sdcs13", 11) == 0)
                        {
{
return dev_storage + 1940;

}
                        }
                      else
                        {
{
return	NULL;

}
                        }
                    case 'b':
                      if (strncmp (KR_keyword, "/dev/sdbs13", 11) == 0)
                        {
{
return dev_storage + 1524;

}
                        }
                      else
                        {
{
return	NULL;

}
                        }
                    case 'a':
                      if (strncmp (KR_keyword, "/dev/sdas13", 11) == 0)
                        {
{
return dev_storage + 1108;

}
                        }
                      else
                        {
{
return	NULL;

}
                        }
                    default:
{
return	NULL;

}
                    }
                default:
{
return	NULL;

}
                }
            case 'r':
              switch (KR_keyword [7])
                {
                case 'd':
                  if (strncmp (KR_keyword, "/dev/sddr13", 11) == 0)
                    {
{
return dev_storage + 2339;
d38053 2
a38054 2
                case 'c':
                  if (strncmp (KR_keyword, "/dev/sdcr13", 11) == 0)
d38057 1
a38057 1
return dev_storage + 1925;
d38068 2
a38069 2
                case 'b':
                  if (strncmp (KR_keyword, "/dev/sdbr13", 11) == 0)
d38072 1
a38072 1
return dev_storage + 1509;
d38083 2
a38084 2
                case 'a':
                  if (strncmp (KR_keyword, "/dev/sdar13", 11) == 0)
d38087 1
a38087 1
return dev_storage + 1093;
d38098 10
a38107 1
                default:
d38112 3
a38114 6
                }
            case 'q':
              switch (KR_keyword [7])
                {
                case 'd':
                  if (strncmp (KR_keyword, "/dev/sddq13", 11) == 0)
d38117 1
a38117 1
return dev_storage + 2324;
d38128 2
a38129 2
                case 'c':
                  if (strncmp (KR_keyword, "/dev/sdcq13", 11) == 0)
d38132 1
a38132 1
return dev_storage + 1910;
d38143 2
a38144 2
                case 'b':
                  if (strncmp (KR_keyword, "/dev/sdbq13", 11) == 0)
d38147 1
a38147 1
return dev_storage + 1494;
d38158 2
a38159 2
                case 'a':
                  if (strncmp (KR_keyword, "/dev/sdaq13", 11) == 0)
d38162 1
a38162 1
return dev_storage + 1078;
d38173 2
a38174 11
                default:
{
return	NULL;

}
                }
            case 'p':
              switch (KR_keyword [7])
                {
                case 'd':
                  if (strncmp (KR_keyword, "/dev/sddp13", 11) == 0)
d38177 1
a38177 1
return dev_storage + 2309;
d38188 2
a38189 2
                case 'c':
                  if (strncmp (KR_keyword, "/dev/sdcp13", 11) == 0)
d38192 1
a38192 1
return dev_storage + 1895;
d38203 2
a38204 2
                case 'b':
                  if (strncmp (KR_keyword, "/dev/sdbp13", 11) == 0)
d38207 1
a38207 1
return dev_storage + 1479;
d38218 2
a38219 2
                case 'a':
                  if (strncmp (KR_keyword, "/dev/sdap13", 11) == 0)
d38222 1
a38222 1
return dev_storage + 1063;
d38233 2
a38234 11
                default:
{
return	NULL;

}
                }
            case 'o':
              switch (KR_keyword [7])
                {
                case 'd':
                  if (strncmp (KR_keyword, "/dev/sddo13", 11) == 0)
d38237 1
a38237 1
return dev_storage + 2294;
d38248 2
a38249 2
                case 'c':
                  if (strncmp (KR_keyword, "/dev/sdco13", 11) == 0)
d38252 1
a38252 1
return dev_storage + 1880;
d38263 2
a38264 2
                case 'b':
                  if (strncmp (KR_keyword, "/dev/sdbo13", 11) == 0)
d38267 1
a38267 1
return dev_storage + 1464;
d38278 2
a38279 2
                case 'a':
                  if (strncmp (KR_keyword, "/dev/sdao13", 11) == 0)
d38282 1
a38282 1
return dev_storage + 1048;
a38292 9
                default:
{
return	NULL;

}
                }
            case 'n':
              switch (KR_keyword [7])
                {
d38294 1
a38294 1
                  if (strncmp (KR_keyword, "/dev/sddn13", 11) == 0)
d38297 1
a38297 1
return dev_storage + 2279;
d38309 1
a38309 1
                  if (strncmp (KR_keyword, "/dev/sdcn13", 11) == 0)
d38312 1
a38312 1
return dev_storage + 1865;
d38324 1
a38324 1
                  if (strncmp (KR_keyword, "/dev/sdbn13", 11) == 0)
d38327 1
a38327 1
return dev_storage + 1449;
d38339 1
a38339 1
                  if (strncmp (KR_keyword, "/dev/sdan13", 11) == 0)
d38342 1
a38342 1
return dev_storage + 1033;
d38359 10
a38368 1
            case 'm':
d38372 1
a38372 1
                  if (strncmp (KR_keyword, "/dev/ptym63", 11) == 0)
d38375 1
a38375 1
return dev_storage + 366;
d38387 1
a38387 1
                  if (strncmp (KR_keyword, "/dev/ptym53", 11) == 0)
d38390 1
a38390 1
return dev_storage + 356;
d38402 1
a38402 1
                  if (strncmp (KR_keyword, "/dev/ptym43", 11) == 0)
d38405 1
a38405 1
return dev_storage + 346;
d38417 1
a38417 1
                  if (strncmp (KR_keyword, "/dev/ptym33", 11) == 0)
d38420 1
a38420 1
return dev_storage + 336;
d38432 1
a38432 1
                  if (strncmp (KR_keyword, "/dev/ptym23", 11) == 0)
d38435 1
a38435 1
return dev_storage + 326;
d38447 8
a38454 1
                  switch (KR_keyword [7])
a38455 3
                    case 'y':
                      if (strncmp (KR_keyword, "/dev/ptym13", 11) == 0)
                        {
d38457 1
a38457 1
return dev_storage + 316;
d38460 2
a38461 3
                        }
                      else
                        {
d38466 7
a38472 4
                        }
                    case 'd':
                      if (strncmp (KR_keyword, "/dev/sddm13", 11) == 0)
                        {
d38474 1
a38474 1
return dev_storage + 2264;
d38477 3
a38479 3
                        }
                      else
                        {
d38484 4
a38487 4
                        }
                    case 'c':
                      if (strncmp (KR_keyword, "/dev/sdcm13", 11) == 0)
                        {
d38489 1
a38489 1
return dev_storage + 1850;
d38492 3
a38494 3
                        }
                      else
                        {
d38499 11
a38509 4
                        }
                    case 'b':
                      if (strncmp (KR_keyword, "/dev/sdbm13", 11) == 0)
                        {
d38511 1
a38511 1
return dev_storage + 1434;
d38514 2
a38515 3
                        }
                      else
                        {
d38520 7
a38526 4
                        }
                    case 'a':
                      if (strncmp (KR_keyword, "/dev/sdam13", 11) == 0)
                        {
d38528 1
a38528 1
return dev_storage + 1018;
d38531 3
a38533 3
                        }
                      else
                        {
d38538 4
a38541 2
                        }
                    default:
d38543 1
a38543 1
return	NULL;
d38547 2
a38548 1
                default:
d38553 3
a38555 6
                }
            case 'l':
              switch (KR_keyword [7])
                {
                case 'd':
                  if (strncmp (KR_keyword, "/dev/sddl13", 11) == 0)
d38558 1
a38558 1
return dev_storage + 2249;
d38569 2
a38570 2
                case 'c':
                  if (strncmp (KR_keyword, "/dev/sdcl13", 11) == 0)
d38573 1
a38573 1
return dev_storage + 1835;
d38584 2
a38585 2
                case 'b':
                  if (strncmp (KR_keyword, "/dev/sdbl13", 11) == 0)
d38588 1
a38588 1
return dev_storage + 1419;
d38599 2
a38600 2
                case 'a':
                  if (strncmp (KR_keyword, "/dev/sdal13", 11) == 0)
d38603 1
a38603 1
return dev_storage + 1003;
d38620 2
a38621 2
            case 'k':
              switch (KR_keyword [7])
d38623 2
a38624 2
                case 'd':
                  if (strncmp (KR_keyword, "/dev/sddk13", 11) == 0)
d38627 1
a38627 1
return dev_storage + 2234;
d38638 2
a38639 2
                case 'c':
                  if (strncmp (KR_keyword, "/dev/sdck13", 11) == 0)
d38642 1
a38642 1
return dev_storage + 1820;
d38653 2
a38654 2
                case 'b':
                  if (strncmp (KR_keyword, "/dev/sdbk13", 11) == 0)
d38657 1
a38657 1
return dev_storage + 1404;
d38668 2
a38669 2
                case 'a':
                  if (strncmp (KR_keyword, "/dev/sdak13", 11) == 0)
d38672 1
a38672 1
return dev_storage + 988;
d38683 10
a38692 1
                default:
d38697 3
a38699 6
                }
            case 'j':
              switch (KR_keyword [7])
                {
                case 'd':
                  if (strncmp (KR_keyword, "/dev/sddj13", 11) == 0)
d38702 1
a38702 1
return dev_storage + 2219;
d38713 2
a38714 2
                case 'c':
                  if (strncmp (KR_keyword, "/dev/sdcj13", 11) == 0)
d38717 1
a38717 1
return dev_storage + 1805;
d38728 2
a38729 2
                case 'b':
                  if (strncmp (KR_keyword, "/dev/sdbj13", 11) == 0)
d38732 1
a38732 1
return dev_storage + 1389;
d38743 2
a38744 2
                case 'a':
                  if (strncmp (KR_keyword, "/dev/sdaj13", 11) == 0)
d38747 1
a38747 1
return dev_storage + 973;
d38758 10
a38767 1
                default:
d38772 3
a38774 6
                }
            case 'i':
              switch (KR_keyword [7])
                {
                case 'd':
                  if (strncmp (KR_keyword, "/dev/sddi13", 11) == 0)
d38777 1
a38777 1
return dev_storage + 2204;
d38788 2
a38789 2
                case 'c':
                  if (strncmp (KR_keyword, "/dev/sdci13", 11) == 0)
d38792 1
a38792 1
return dev_storage + 1790;
d38803 2
a38804 2
                case 'b':
                  if (strncmp (KR_keyword, "/dev/sdbi13", 11) == 0)
d38807 1
a38807 1
return dev_storage + 1374;
d38818 2
a38819 2
                case 'a':
                  if (strncmp (KR_keyword, "/dev/sdai13", 11) == 0)
d38822 1
a38822 1
return dev_storage + 958;
d38833 10
a38842 1
                default:
d38847 3
a38849 6
                }
            case 'h':
              switch (KR_keyword [7])
                {
                case 'd':
                  if (strncmp (KR_keyword, "/dev/sddh13", 11) == 0)
d38852 1
a38852 1
return dev_storage + 2189;
d38863 2
a38864 2
                case 'c':
                  if (strncmp (KR_keyword, "/dev/sdch13", 11) == 0)
d38867 1
a38867 1
return dev_storage + 1775;
d38878 2
a38879 2
                case 'b':
                  if (strncmp (KR_keyword, "/dev/sdbh13", 11) == 0)
d38882 1
a38882 1
return dev_storage + 1359;
d38893 2
a38894 2
                case 'a':
                  if (strncmp (KR_keyword, "/dev/sdah13", 11) == 0)
d38897 1
a38897 1
return dev_storage + 943;
d38908 10
a38917 1
                default:
d38922 1
a38922 4
                }
            case 'g':
              switch (KR_keyword [7])
                {
d38924 1
a38924 1
                  if (strncmp (KR_keyword, "/dev/sddg13", 11) == 0)
d38927 1
a38927 1
return dev_storage + 2174;
d38939 1
a38939 1
                  if (strncmp (KR_keyword, "/dev/sdcg13", 11) == 0)
d38942 1
a38942 1
return dev_storage + 1760;
d38954 1
a38954 1
                  if (strncmp (KR_keyword, "/dev/sdbg13", 11) == 0)
d38957 1
a38957 1
return dev_storage + 1344;
d38969 1
a38969 1
                  if (strncmp (KR_keyword, "/dev/sdag13", 11) == 0)
d38972 1
a38972 1
return dev_storage + 928;
d38988 36
a39023 6
                }
            case 'f':
              switch (KR_keyword [7])
                {
                case 'd':
                  if (strncmp (KR_keyword, "/dev/sddf13", 11) == 0)
d39026 1
a39026 1
return dev_storage + 2159;
d39037 2
a39038 2
                case 'c':
                  if (strncmp (KR_keyword, "/dev/sdcf13", 11) == 0)
d39041 1
a39041 1
return dev_storage + 1745;
d39052 2
a39053 2
                case 'b':
                  if (strncmp (KR_keyword, "/dev/sdbf13", 11) == 0)
d39056 1
a39056 1
return dev_storage + 1329;
d39067 2
a39068 2
                case 'a':
                  if (strncmp (KR_keyword, "/dev/sdaf13", 11) == 0)
d39071 1
a39071 1
return dev_storage + 913;
d39082 2
a39083 11
                default:
{
return	NULL;

}
                }
            case 'e':
              switch (KR_keyword [7])
                {
                case 'd':
                  if (strncmp (KR_keyword, "/dev/sdde13", 11) == 0)
d39086 1
a39086 1
return dev_storage + 2144;
d39097 2
a39098 2
                case 'c':
                  if (strncmp (KR_keyword, "/dev/sdce13", 11) == 0)
d39101 1
a39101 1
return dev_storage + 1730;
d39112 2
a39113 2
                case 'b':
                  if (strncmp (KR_keyword, "/dev/sdbe13", 11) == 0)
d39116 1
a39116 1
return dev_storage + 1314;
d39127 2
a39128 2
                case 'a':
                  if (strncmp (KR_keyword, "/dev/sdae13", 11) == 0)
d39131 1
a39131 1
return dev_storage + 898;
d39142 2
a39143 11
                default:
{
return	NULL;

}
                }
            case 'd':
              switch (KR_keyword [7])
                {
                case 'd':
                  if (strncmp (KR_keyword, "/dev/sddd13", 11) == 0)
d39146 1
a39146 1
return dev_storage + 2129;
d39157 2
a39158 2
                case 'c':
                  if (strncmp (KR_keyword, "/dev/sdcd13", 11) == 0)
d39161 1
a39161 1
return dev_storage + 1715;
d39172 2
a39173 2
                case 'b':
                  if (strncmp (KR_keyword, "/dev/sdbd13", 11) == 0)
d39176 1
a39176 1
return dev_storage + 1299;
d39187 2
a39188 2
                case 'a':
                  if (strncmp (KR_keyword, "/dev/sdad13", 11) == 0)
d39191 1
a39191 1
return dev_storage + 883;
d39202 2
a39203 11
                default:
{
return	NULL;

}
                }
            case 'c':
              switch (KR_keyword [7])
                {
                case 'd':
                  if (strncmp (KR_keyword, "/dev/sddc13", 11) == 0)
d39206 1
a39206 1
return dev_storage + 2114;
d39217 2
a39218 2
                case 'c':
                  if (strncmp (KR_keyword, "/dev/sdcc13", 11) == 0)
d39221 1
a39221 1
return dev_storage + 1700;
d39232 2
a39233 2
                case 'b':
                  if (strncmp (KR_keyword, "/dev/sdbc13", 11) == 0)
d39236 1
a39236 1
return dev_storage + 1284;
d39247 2
a39248 2
                case 'a':
                  if (strncmp (KR_keyword, "/dev/sdac13", 11) == 0)
d39251 1
a39251 1
return dev_storage + 868;
d39262 2
a39263 11
                default:
{
return	NULL;

}
                }
            case 'b':
              switch (KR_keyword [7])
                {
                case 'd':
                  if (strncmp (KR_keyword, "/dev/sddb13", 11) == 0)
d39266 1
a39266 1
return dev_storage + 2099;
d39277 2
a39278 2
                case 'c':
                  if (strncmp (KR_keyword, "/dev/sdcb13", 11) == 0)
d39281 1
a39281 1
return dev_storage + 1685;
d39292 2
a39293 2
                case 'b':
                  if (strncmp (KR_keyword, "/dev/sdbb13", 11) == 0)
d39296 1
a39296 1
return dev_storage + 1269;
d39307 2
a39308 2
                case 'a':
                  if (strncmp (KR_keyword, "/dev/sdab13", 11) == 0)
d39311 1
a39311 1
return dev_storage + 853;
a39321 9
                default:
{
return	NULL;

}
                }
            case 'a':
              switch (KR_keyword [7])
                {
d39323 1
a39323 1
                  if (strncmp (KR_keyword, "/dev/sdda13", 11) == 0)
d39326 1
a39326 1
return dev_storage + 2084;
d39338 1
a39338 1
                  if (strncmp (KR_keyword, "/dev/sdca13", 11) == 0)
d39341 1
a39341 1
return dev_storage + 1670;
d39353 1
a39353 1
                  if (strncmp (KR_keyword, "/dev/sdba13", 11) == 0)
d39356 1
a39356 1
return dev_storage + 1254;
d39368 1
a39368 1
                  if (strncmp (KR_keyword, "/dev/sdaa13", 11) == 0)
d39371 1
a39371 1
return dev_storage + 838;
d39388 2
a39389 2
            case 'S':
              switch (KR_keyword [9])
d39391 2
a39392 2
                case '6':
                  if (strncmp (KR_keyword, "/dev/ttyS63", 11) == 0)
d39395 1
a39395 1
return dev_storage + 2640;
d39406 2
a39407 2
                case '5':
                  if (strncmp (KR_keyword, "/dev/ttyS53", 11) == 0)
d39410 1
a39410 1
return dev_storage + 2630;
d39421 2
a39422 2
                case '4':
                  if (strncmp (KR_keyword, "/dev/ttyS43", 11) == 0)
d39425 1
a39425 1
return dev_storage + 2620;
d39436 2
a39437 2
                case '3':
                  if (strncmp (KR_keyword, "/dev/ttyS33", 11) == 0)
d39440 1
a39440 1
return dev_storage + 2610;
d39451 2
a39452 2
                case '2':
                  if (strncmp (KR_keyword, "/dev/ttyS23", 11) == 0)
d39455 1
a39455 1
return dev_storage + 2600;
d39466 2
a39467 2
                case '1':
                  if (strncmp (KR_keyword, "/dev/ttyS13", 11) == 0)
d39470 1
a39470 1
return dev_storage + 2590;
d39481 10
a39490 1
                default:
d39495 3
a39497 6
                }
            case '1':
              switch (KR_keyword [9])
                {
                case '2':
                  if (strncmp (KR_keyword, "/dev/nst123", 11) == 0)
d39500 1
a39500 1
return dev_storage + 230;
d39511 2
a39512 2
                case '1':
                  if (strncmp (KR_keyword, "/dev/nst113", 11) == 0)
d39515 1
a39515 1
return dev_storage + 220;
d39526 2
a39527 2
                case '0':
                  if (strncmp (KR_keyword, "/dev/nst103", 11) == 0)
d39530 1
a39530 1
return dev_storage + 210;
d39541 3
a39543 1
                default:
d39545 1
a39545 1
return	NULL;
d39548 3
a39550 2
                }
            default:
d39555 3
a39557 9
            }
        case '2':
          switch (KR_keyword [8])
            {
            case 'z':
              switch (KR_keyword [7])
                {
                case 'c':
                  if (strncmp (KR_keyword, "/dev/sdcz12", 11) == 0)
d39560 1
a39560 1
return dev_storage + 2044;
d39571 2
a39572 2
                case 'b':
                  if (strncmp (KR_keyword, "/dev/sdbz12", 11) == 0)
d39575 1
a39575 1
return dev_storage + 1628;
d39586 2
a39587 2
                case 'a':
                  if (strncmp (KR_keyword, "/dev/sdaz12", 11) == 0)
d39590 1
a39590 1
return dev_storage + 1212;
d39601 10
a39610 1
                default:
d39615 3
a39617 6
                }
            case 'y':
              switch (KR_keyword [7])
                {
                case 'c':
                  if (strncmp (KR_keyword, "/dev/sdcy12", 11) == 0)
d39620 1
a39620 1
return dev_storage + 2029;
d39631 2
a39632 2
                case 'b':
                  if (strncmp (KR_keyword, "/dev/sdby12", 11) == 0)
d39635 1
a39635 1
return dev_storage + 1613;
d39646 2
a39647 2
                case 'a':
                  if (strncmp (KR_keyword, "/dev/sday12", 11) == 0)
d39650 1
a39650 1
return dev_storage + 1197;
d39661 2
a39662 11
                default:
{
return	NULL;

}
                }
            case 'x':
              switch (KR_keyword [7])
                {
                case 'd':
                  if (strncmp (KR_keyword, "/dev/sddx12", 11) == 0)
d39665 1
a39665 1
return dev_storage + 2428;
d39676 2
a39677 2
                case 'c':
                  if (strncmp (KR_keyword, "/dev/sdcx12", 11) == 0)
d39680 1
a39680 1
return dev_storage + 2014;
d39691 2
a39692 2
                case 'b':
                  if (strncmp (KR_keyword, "/dev/sdbx12", 11) == 0)
d39695 1
a39695 1
return dev_storage + 1598;
d39706 2
a39707 2
                case 'a':
                  if (strncmp (KR_keyword, "/dev/sdax12", 11) == 0)
d39710 1
a39710 1
return dev_storage + 1182;
a39720 9
                default:
{
return	NULL;

}
                }
            case 'w':
              switch (KR_keyword [7])
                {
d39722 1
a39722 1
                  if (strncmp (KR_keyword, "/dev/sddw12", 11) == 0)
d39725 1
a39725 1
return dev_storage + 2413;
d39737 1
a39737 1
                  if (strncmp (KR_keyword, "/dev/sdcw12", 11) == 0)
d39740 1
a39740 1
return dev_storage + 1999;
d39752 1
a39752 1
                  if (strncmp (KR_keyword, "/dev/sdbw12", 11) == 0)
d39755 1
a39755 1
return dev_storage + 1583;
d39767 1
a39767 1
                  if (strncmp (KR_keyword, "/dev/sdaw12", 11) == 0)
d39770 1
a39770 1
return dev_storage + 1167;
d39787 2
a39788 2
            case 'v':
              switch (KR_keyword [7])
d39790 2
a39791 2
                case 'd':
                  if (strncmp (KR_keyword, "/dev/sddv12", 11) == 0)
d39794 1
a39794 1
return dev_storage + 2398;
d39805 2
a39806 2
                case 'c':
                  if (strncmp (KR_keyword, "/dev/sdcv12", 11) == 0)
d39809 1
a39809 1
return dev_storage + 1984;
d39820 2
a39821 2
                case 'b':
                  if (strncmp (KR_keyword, "/dev/sdbv12", 11) == 0)
d39824 1
a39824 1
return dev_storage + 1568;
d39835 2
a39836 2
                case 'a':
                  if (strncmp (KR_keyword, "/dev/sdav12", 11) == 0)
d39839 1
a39839 1
return dev_storage + 1152;
d39850 2
a39851 11
                default:
{
return	NULL;

}
                }
            case 'u':
              switch (KR_keyword [7])
                {
                case 'd':
                  if (strncmp (KR_keyword, "/dev/sddu12", 11) == 0)
d39854 1
a39854 1
return dev_storage + 2383;
d39865 2
a39866 2
                case 'c':
                  if (strncmp (KR_keyword, "/dev/sdcu12", 11) == 0)
d39869 1
a39869 1
return dev_storage + 1969;
d39880 2
a39881 2
                case 'b':
                  if (strncmp (KR_keyword, "/dev/sdbu12", 11) == 0)
d39884 1
a39884 1
return dev_storage + 1553;
d39895 2
a39896 2
                case 'a':
                  if (strncmp (KR_keyword, "/dev/sdau12", 11) == 0)
d39899 1
a39899 1
return dev_storage + 1137;
d39910 2
a39911 11
                default:
{
return	NULL;

}
                }
            case 't':
              switch (KR_keyword [7])
                {
                case 'd':
                  if (strncmp (KR_keyword, "/dev/sddt12", 11) == 0)
d39914 1
a39914 1
return dev_storage + 2368;
d39925 2
a39926 2
                case 'c':
                  if (strncmp (KR_keyword, "/dev/sdct12", 11) == 0)
d39929 1
a39929 1
return dev_storage + 1954;
d39940 2
a39941 2
                case 'b':
                  if (strncmp (KR_keyword, "/dev/sdbt12", 11) == 0)
d39944 1
a39944 1
return dev_storage + 1538;
d39955 2
a39956 2
                case 'a':
                  if (strncmp (KR_keyword, "/dev/sdat12", 11) == 0)
d39959 1
a39959 1
return dev_storage + 1122;
d39970 2
a39971 11
                default:
{
return	NULL;

}
                }
            case 's':
              switch (KR_keyword [9])
                {
                case '6':
                  if (strncmp (KR_keyword, "/dev/cons62", 11) == 0)
d39974 1
a39974 1
return dev_storage + 82;
d39985 2
a39986 2
                case '5':
                  if (strncmp (KR_keyword, "/dev/cons52", 11) == 0)
d39989 1
a39989 16
return dev_storage + 72;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case '4':
                  if (strncmp (KR_keyword, "/dev/cons42", 11) == 0)
                    {
{
return dev_storage + 62;
d40000 2
a40001 2
                case '3':
                  if (strncmp (KR_keyword, "/dev/cons32", 11) == 0)
d40004 1
a40004 1
return dev_storage + 52;
d40015 2
a40016 2
                case '2':
                  if (strncmp (KR_keyword, "/dev/cons22", 11) == 0)
d40019 1
a40019 1
return dev_storage + 42;
d40030 2
a40031 2
                case '1':
                  switch (KR_keyword [7])
a40032 3
                    case 'n':
                      if (strncmp (KR_keyword, "/dev/cons12", 11) == 0)
                        {
d40034 1
a40034 1
return dev_storage + 32;
d40037 3
a40039 3
                        }
                      else
                        {
d40044 4
a40047 4
                        }
                    case 'd':
                      if (strncmp (KR_keyword, "/dev/sdds12", 11) == 0)
                        {
d40049 1
a40049 1
return dev_storage + 2353;
d40052 3
a40054 3
                        }
                      else
                        {
d40059 4
a40062 4
                        }
                    case 'c':
                      if (strncmp (KR_keyword, "/dev/sdcs12", 11) == 0)
                        {
d40064 1
a40064 1
return dev_storage + 1939;
d40067 3
a40069 3
                        }
                      else
                        {
d40074 4
a40077 4
                        }
                    case 'b':
                      if (strncmp (KR_keyword, "/dev/sdbs12", 11) == 0)
                        {
d40079 1
a40079 1
return dev_storage + 1523;
d40082 3
a40084 3
                        }
                      else
                        {
d40089 4
a40092 4
                        }
                    case 'a':
                      if (strncmp (KR_keyword, "/dev/sdas12", 11) == 0)
                        {
d40094 1
a40094 1
return dev_storage + 1107;
d40097 3
a40099 3
                        }
                      else
                        {
d40104 4
a40107 2
                        }
                    default:
d40109 1
a40109 1
return	NULL;
d40113 2
a40114 1
                default:
d40119 1
a40119 4
                }
            case 'r':
              switch (KR_keyword [7])
                {
d40121 1
a40121 1
                  if (strncmp (KR_keyword, "/dev/sddr12", 11) == 0)
d40124 1
a40124 1
return dev_storage + 2338;
d40136 1
a40136 1
                  if (strncmp (KR_keyword, "/dev/sdcr12", 11) == 0)
d40139 1
a40139 1
return dev_storage + 1924;
d40151 1
a40151 1
                  if (strncmp (KR_keyword, "/dev/sdbr12", 11) == 0)
d40154 1
a40154 1
return dev_storage + 1508;
d40166 1
a40166 1
                  if (strncmp (KR_keyword, "/dev/sdar12", 11) == 0)
d40169 1
a40169 1
return dev_storage + 1092;
d40186 11
a40196 2
            case 'q':
              switch (KR_keyword [7])
d40198 2
a40199 2
                case 'd':
                  if (strncmp (KR_keyword, "/dev/sddq12", 11) == 0)
d40202 1
a40202 1
return dev_storage + 2323;
d40213 2
a40214 2
                case 'c':
                  if (strncmp (KR_keyword, "/dev/sdcq12", 11) == 0)
d40217 1
a40217 1
return dev_storage + 1909;
d40228 2
a40229 2
                case 'b':
                  if (strncmp (KR_keyword, "/dev/sdbq12", 11) == 0)
d40232 1
a40232 1
return dev_storage + 1493;
d40243 2
a40244 2
                case 'a':
                  if (strncmp (KR_keyword, "/dev/sdaq12", 11) == 0)
d40247 1
a40247 1
return dev_storage + 1077;
d40258 10
a40267 1
                default:
d40272 3
a40274 6
                }
            case 'p':
              switch (KR_keyword [7])
                {
                case 'd':
                  if (strncmp (KR_keyword, "/dev/sddp12", 11) == 0)
d40277 1
a40277 1
return dev_storage + 2308;
d40288 11
a40298 2
                case 'c':
                  if (strncmp (KR_keyword, "/dev/sdcp12", 11) == 0)
d40301 1
a40301 1
return dev_storage + 1894;
d40312 2
a40313 2
                case 'b':
                  if (strncmp (KR_keyword, "/dev/sdbp12", 11) == 0)
d40316 1
a40316 1
return dev_storage + 1478;
d40327 2
a40328 2
                case 'a':
                  if (strncmp (KR_keyword, "/dev/sdap12", 11) == 0)
d40331 1
a40331 1
return dev_storage + 1062;
d40348 2
a40349 2
            case 'o':
              switch (KR_keyword [7])
d40351 2
a40352 2
                case 'd':
                  if (strncmp (KR_keyword, "/dev/sddo12", 11) == 0)
d40355 1
a40355 1
return dev_storage + 2293;
d40366 2
a40367 2
                case 'c':
                  if (strncmp (KR_keyword, "/dev/sdco12", 11) == 0)
d40370 1
a40370 1
return dev_storage + 1879;
d40381 2
a40382 2
                case 'b':
                  if (strncmp (KR_keyword, "/dev/sdbo12", 11) == 0)
d40385 1
a40385 1
return dev_storage + 1463;
d40396 2
a40397 2
                case 'a':
                  if (strncmp (KR_keyword, "/dev/sdao12", 11) == 0)
d40400 1
a40400 1
return dev_storage + 1047;
d40411 2
a40412 11
                default:
{
return	NULL;

}
                }
            case 'n':
              switch (KR_keyword [7])
                {
                case 'd':
                  if (strncmp (KR_keyword, "/dev/sddn12", 11) == 0)
d40415 1
a40415 1
return dev_storage + 2278;
d40426 2
a40427 2
                case 'c':
                  if (strncmp (KR_keyword, "/dev/sdcn12", 11) == 0)
d40430 1
a40430 1
return dev_storage + 1864;
d40441 11
a40451 2
                case 'b':
                  if (strncmp (KR_keyword, "/dev/sdbn12", 11) == 0)
d40454 1
a40454 1
return dev_storage + 1448;
d40465 2
a40466 2
                case 'a':
                  if (strncmp (KR_keyword, "/dev/sdan12", 11) == 0)
d40469 1
a40469 1
return dev_storage + 1032;
d40480 2
a40481 11
                default:
{
return	NULL;

}
                }
            case 'm':
              switch (KR_keyword [9])
                {
                case '6':
                  if (strncmp (KR_keyword, "/dev/ptym62", 11) == 0)
d40484 1
a40484 1
return dev_storage + 365;
d40495 2
a40496 2
                case '5':
                  if (strncmp (KR_keyword, "/dev/ptym52", 11) == 0)
d40499 1
a40499 1
return dev_storage + 355;
d40510 2
a40511 2
                case '4':
                  if (strncmp (KR_keyword, "/dev/ptym42", 11) == 0)
d40514 1
a40514 1
return dev_storage + 345;
d40525 2
a40526 2
                case '3':
                  if (strncmp (KR_keyword, "/dev/ptym32", 11) == 0)
d40529 1
a40529 1
return dev_storage + 335;
d40540 2
a40541 2
                case '2':
                  if (strncmp (KR_keyword, "/dev/ptym22", 11) == 0)
d40544 1
a40544 1
return dev_storage + 325;
d40555 2
a40556 2
                case '1':
                  switch (KR_keyword [7])
a40557 3
                    case 'y':
                      if (strncmp (KR_keyword, "/dev/ptym12", 11) == 0)
                        {
d40559 1
a40559 1
return dev_storage + 315;
d40562 3
a40564 3
                        }
                      else
                        {
d40569 4
a40572 4
                        }
                    case 'd':
                      if (strncmp (KR_keyword, "/dev/sddm12", 11) == 0)
                        {
d40574 1
a40574 1
return dev_storage + 2263;
d40577 3
a40579 3
                        }
                      else
                        {
d40584 4
a40587 4
                        }
                    case 'c':
                      if (strncmp (KR_keyword, "/dev/sdcm12", 11) == 0)
                        {
d40589 1
a40589 1
return dev_storage + 1849;
d40592 3
a40594 3
                        }
                      else
                        {
d40599 4
a40602 4
                        }
                    case 'b':
                      if (strncmp (KR_keyword, "/dev/sdbm12", 11) == 0)
                        {
d40604 1
a40604 1
return dev_storage + 1433;
d40607 3
a40609 3
                        }
                      else
                        {
d40614 4
a40617 4
                        }
                    case 'a':
                      if (strncmp (KR_keyword, "/dev/sdam12", 11) == 0)
                        {
d40619 1
a40619 1
return dev_storage + 1017;
d40622 3
a40624 9
                        }
                      else
                        {
{
return	NULL;

}
                        }
                    default:
d40630 1
a40630 10
                default:
{
return	NULL;

}
                }
            case 'l':
              switch (KR_keyword [7])
                {
                case 'd':
d40634 1
a40634 1
return dev_storage + 2248;
d40645 2
a40646 2
                case 'c':
                  if (strncmp (KR_keyword, "/dev/sdcl12", 11) == 0)
d40649 1
a40649 1
return dev_storage + 1834;
d40660 2
a40661 2
                case 'b':
                  if (strncmp (KR_keyword, "/dev/sdbl12", 11) == 0)
d40664 1
a40664 1
return dev_storage + 1418;
d40675 2
a40676 2
                case 'a':
                  if (strncmp (KR_keyword, "/dev/sdal12", 11) == 0)
d40679 1
a40679 1
return dev_storage + 1002;
d40690 2
a40691 11
                default:
{
return	NULL;

}
                }
            case 'k':
              switch (KR_keyword [7])
                {
                case 'd':
                  if (strncmp (KR_keyword, "/dev/sddk12", 11) == 0)
d40694 1
a40694 1
return dev_storage + 2233;
d40705 2
a40706 2
                case 'c':
                  if (strncmp (KR_keyword, "/dev/sdck12", 11) == 0)
d40709 1
a40709 1
return dev_storage + 1819;
d40720 2
a40721 2
                case 'b':
                  if (strncmp (KR_keyword, "/dev/sdbk12", 11) == 0)
d40724 1
a40724 1
return dev_storage + 1403;
d40735 2
a40736 2
                case 'a':
                  if (strncmp (KR_keyword, "/dev/sdak12", 11) == 0)
d40739 1
a40739 1
return dev_storage + 987;
a40749 9
                default:
{
return	NULL;

}
                }
            case 'j':
              switch (KR_keyword [7])
                {
d40751 1
a40751 1
                  if (strncmp (KR_keyword, "/dev/sddj12", 11) == 0)
d40754 1
a40754 1
return dev_storage + 2218;
d40766 1
a40766 1
                  if (strncmp (KR_keyword, "/dev/sdcj12", 11) == 0)
d40769 1
a40769 1
return dev_storage + 1804;
d40781 1
a40781 1
                  if (strncmp (KR_keyword, "/dev/sdbj12", 11) == 0)
d40784 1
a40784 1
return dev_storage + 1388;
d40796 1
a40796 1
                  if (strncmp (KR_keyword, "/dev/sdaj12", 11) == 0)
d40799 1
a40799 1
return dev_storage + 972;
d40816 2
a40817 2
            case 'i':
              switch (KR_keyword [7])
d40819 32
a40850 2
                case 'd':
                  if (strncmp (KR_keyword, "/dev/sddi12", 11) == 0)
d40853 1
a40853 1
return dev_storage + 2203;
d40864 2
a40865 2
                case 'c':
                  if (strncmp (KR_keyword, "/dev/sdci12", 11) == 0)
d40868 1
a40868 1
return dev_storage + 1789;
d40879 2
a40880 2
                case 'b':
                  if (strncmp (KR_keyword, "/dev/sdbi12", 11) == 0)
d40883 1
a40883 1
return dev_storage + 1373;
d40894 2
a40895 2
                case 'a':
                  if (strncmp (KR_keyword, "/dev/sdai12", 11) == 0)
d40898 1
a40898 1
return dev_storage + 957;
d40909 2
a40910 11
                default:
{
return	NULL;

}
                }
            case 'h':
              switch (KR_keyword [7])
                {
                case 'd':
                  if (strncmp (KR_keyword, "/dev/sddh12", 11) == 0)
d40913 1
a40913 1
return dev_storage + 2188;
d40924 2
a40925 2
                case 'c':
                  if (strncmp (KR_keyword, "/dev/sdch12", 11) == 0)
d40928 1
a40928 1
return dev_storage + 1774;
d40939 2
a40940 2
                case 'b':
                  if (strncmp (KR_keyword, "/dev/sdbh12", 11) == 0)
d40943 1
a40943 1
return dev_storage + 1358;
d40954 2
a40955 2
                case 'a':
                  if (strncmp (KR_keyword, "/dev/sdah12", 11) == 0)
d40958 1
a40958 1
return dev_storage + 942;
d40969 2
a40970 11
                default:
{
return	NULL;

}
                }
            case 'g':
              switch (KR_keyword [7])
                {
                case 'd':
                  if (strncmp (KR_keyword, "/dev/sddg12", 11) == 0)
d40973 1
a40973 1
return dev_storage + 2173;
d40984 2
a40985 2
                case 'c':
                  if (strncmp (KR_keyword, "/dev/sdcg12", 11) == 0)
d40988 1
a40988 1
return dev_storage + 1759;
d40999 2
a41000 2
                case 'b':
                  if (strncmp (KR_keyword, "/dev/sdbg12", 11) == 0)
d41003 1
a41003 1
return dev_storage + 1343;
d41014 2
a41015 2
                case 'a':
                  if (strncmp (KR_keyword, "/dev/sdag12", 11) == 0)
d41018 1
a41018 1
return dev_storage + 927;
d41029 2
a41030 11
                default:
{
return	NULL;

}
                }
            case 'f':
              switch (KR_keyword [7])
                {
                case 'd':
                  if (strncmp (KR_keyword, "/dev/sddf12", 11) == 0)
d41033 1
a41033 1
return dev_storage + 2158;
d41044 2
a41045 2
                case 'c':
                  if (strncmp (KR_keyword, "/dev/sdcf12", 11) == 0)
d41048 1
a41048 1
return dev_storage + 1744;
d41059 2
a41060 2
                case 'b':
                  if (strncmp (KR_keyword, "/dev/sdbf12", 11) == 0)
d41063 1
a41063 1
return dev_storage + 1328;
d41074 2
a41075 2
                case 'a':
                  if (strncmp (KR_keyword, "/dev/sdaf12", 11) == 0)
d41078 1
a41078 1
return dev_storage + 912;
d41089 2
a41090 11
                default:
{
return	NULL;

}
                }
            case 'e':
              switch (KR_keyword [7])
                {
                case 'd':
                  if (strncmp (KR_keyword, "/dev/sdde12", 11) == 0)
d41093 1
a41093 1
return dev_storage + 2143;
d41104 2
a41105 2
                case 'c':
                  if (strncmp (KR_keyword, "/dev/sdce12", 11) == 0)
d41108 1
a41108 1
return dev_storage + 1729;
d41119 2
a41120 2
                case 'b':
                  if (strncmp (KR_keyword, "/dev/sdbe12", 11) == 0)
d41123 1
a41123 1
return dev_storage + 1313;
d41134 2
a41135 2
                case 'a':
                  if (strncmp (KR_keyword, "/dev/sdae12", 11) == 0)
d41138 1
a41138 1
return dev_storage + 897;
a41148 9
                default:
{
return	NULL;

}
                }
            case 'd':
              switch (KR_keyword [7])
                {
d41150 1
a41150 1
                  if (strncmp (KR_keyword, "/dev/sddd12", 11) == 0)
d41153 1
a41153 1
return dev_storage + 2128;
d41165 1
a41165 1
                  if (strncmp (KR_keyword, "/dev/sdcd12", 11) == 0)
d41168 1
a41168 1
return dev_storage + 1714;
d41180 1
a41180 1
                  if (strncmp (KR_keyword, "/dev/sdbd12", 11) == 0)
d41183 1
a41183 1
return dev_storage + 1298;
d41195 1
a41195 1
                  if (strncmp (KR_keyword, "/dev/sdad12", 11) == 0)
d41198 1
a41198 1
return dev_storage + 882;
d41215 2
a41216 2
            case 'c':
              switch (KR_keyword [7])
d41218 2
a41219 2
                case 'd':
                  if (strncmp (KR_keyword, "/dev/sddc12", 11) == 0)
d41222 1
a41222 1
return dev_storage + 2113;
d41233 2
a41234 2
                case 'c':
                  if (strncmp (KR_keyword, "/dev/sdcc12", 11) == 0)
d41237 1
a41237 1
return dev_storage + 1699;
d41248 2
a41249 2
                case 'b':
                  if (strncmp (KR_keyword, "/dev/sdbc12", 11) == 0)
d41252 1
a41252 1
return dev_storage + 1283;
d41263 2
a41264 2
                case 'a':
                  if (strncmp (KR_keyword, "/dev/sdac12", 11) == 0)
d41267 1
a41267 1
return dev_storage + 867;
d41278 10
a41287 1
                default:
d41292 3
a41294 6
                }
            case 'b':
              switch (KR_keyword [7])
                {
                case 'd':
                  if (strncmp (KR_keyword, "/dev/sddb12", 11) == 0)
d41297 1
a41297 1
return dev_storage + 2098;
d41308 2
a41309 2
                case 'c':
                  if (strncmp (KR_keyword, "/dev/sdcb12", 11) == 0)
d41312 1
a41312 1
return dev_storage + 1684;
d41323 2
a41324 2
                case 'b':
                  if (strncmp (KR_keyword, "/dev/sdbb12", 11) == 0)
d41327 1
a41327 1
return dev_storage + 1268;
d41338 2
a41339 2
                case 'a':
                  if (strncmp (KR_keyword, "/dev/sdab12", 11) == 0)
d41342 1
a41342 1
return dev_storage + 852;
d41353 2
a41354 11
                default:
{
return	NULL;

}
                }
            case 'a':
              switch (KR_keyword [7])
                {
                case 'd':
                  if (strncmp (KR_keyword, "/dev/sdda12", 11) == 0)
d41357 1
a41357 1
return dev_storage + 2083;
d41368 2
a41369 2
                case 'c':
                  if (strncmp (KR_keyword, "/dev/sdca12", 11) == 0)
d41372 1
a41372 1
return dev_storage + 1669;
d41383 2
a41384 2
                case 'b':
                  if (strncmp (KR_keyword, "/dev/sdba12", 11) == 0)
d41387 1
a41387 1
return dev_storage + 1253;
d41398 2
a41399 2
                case 'a':
                  if (strncmp (KR_keyword, "/dev/sdaa12", 11) == 0)
d41402 1
a41402 1
return dev_storage + 837;
d41413 2
a41414 11
                default:
{
return	NULL;

}
                }
            case 'S':
              switch (KR_keyword [9])
                {
                case '6':
                  if (strncmp (KR_keyword, "/dev/ttyS62", 11) == 0)
d41417 1
a41417 1
return dev_storage + 2639;
d41428 2
a41429 2
                case '5':
                  if (strncmp (KR_keyword, "/dev/ttyS52", 11) == 0)
d41432 1
a41432 1
return dev_storage + 2629;
d41443 2
a41444 2
                case '4':
                  if (strncmp (KR_keyword, "/dev/ttyS42", 11) == 0)
d41447 1
a41447 1
return dev_storage + 2619;
d41458 2
a41459 2
                case '3':
                  if (strncmp (KR_keyword, "/dev/ttyS32", 11) == 0)
d41462 1
a41462 1
return dev_storage + 2609;
d41473 2
a41474 2
                case '2':
                  if (strncmp (KR_keyword, "/dev/ttyS22", 11) == 0)
d41477 1
a41477 1
return dev_storage + 2599;
d41488 2
a41489 2
                case '1':
                  if (strncmp (KR_keyword, "/dev/ttyS12", 11) == 0)
d41492 1
a41492 1
return dev_storage + 2589;
d41503 2
a41504 11
                default:
{
return	NULL;

}
                }
            case '1':
              switch (KR_keyword [9])
                {
                case '2':
                  if (strncmp (KR_keyword, "/dev/nst122", 11) == 0)
d41507 1
a41507 1
return dev_storage + 229;
d41518 2
a41519 2
                case '1':
                  if (strncmp (KR_keyword, "/dev/nst112", 11) == 0)
d41522 1
a41522 1
return dev_storage + 219;
d41533 2
a41534 2
                case '0':
                  if (strncmp (KR_keyword, "/dev/nst102", 11) == 0)
d41537 1
a41537 1
return dev_storage + 209;
d41548 3
a41550 1
                default:
d41552 1
a41552 1
return	NULL;
d41555 3
a41557 2
                }
            default:
d41562 1
a41562 7
            }
        case '1':
          switch (KR_keyword [8])
            {
            case 'z':
              switch (KR_keyword [7])
                {
d41564 1
a41564 1
                  if (strncmp (KR_keyword, "/dev/sdcz11", 11) == 0)
d41567 1
a41567 1
return dev_storage + 2043;
d41579 1
a41579 1
                  if (strncmp (KR_keyword, "/dev/sdbz11", 11) == 0)
d41582 1
a41582 1
return dev_storage + 1627;
d41594 1
a41594 1
                  if (strncmp (KR_keyword, "/dev/sdaz11", 11) == 0)
d41597 1
a41597 1
return dev_storage + 1211;
d41614 2
a41615 2
            case 'y':
              switch (KR_keyword [7])
d41617 2
a41618 2
                case 'c':
                  if (strncmp (KR_keyword, "/dev/sdcy11", 11) == 0)
d41621 1
a41621 1
return dev_storage + 2028;
d41632 2
a41633 2
                case 'b':
                  if (strncmp (KR_keyword, "/dev/sdby11", 11) == 0)
d41636 1
a41636 1
return dev_storage + 1612;
d41647 2
a41648 2
                case 'a':
                  if (strncmp (KR_keyword, "/dev/sday11", 11) == 0)
d41651 1
a41651 1
return dev_storage + 1196;
d41662 10
a41671 1
                default:
d41676 3
a41678 6
                }
            case 'x':
              switch (KR_keyword [7])
                {
                case 'd':
                  if (strncmp (KR_keyword, "/dev/sddx11", 11) == 0)
d41681 1
a41681 1
return dev_storage + 2427;
d41692 2
a41693 2
                case 'c':
                  if (strncmp (KR_keyword, "/dev/sdcx11", 11) == 0)
d41696 1
a41696 1
return dev_storage + 2013;
d41707 2
a41708 2
                case 'b':
                  if (strncmp (KR_keyword, "/dev/sdbx11", 11) == 0)
d41711 1
a41711 1
return dev_storage + 1597;
d41722 2
a41723 2
                case 'a':
                  if (strncmp (KR_keyword, "/dev/sdax11", 11) == 0)
d41726 1
a41726 1
return dev_storage + 1181;
d41737 10
a41746 1
                default:
d41751 3
a41753 6
                }
            case 'w':
              switch (KR_keyword [7])
                {
                case 'd':
                  if (strncmp (KR_keyword, "/dev/sddw11", 11) == 0)
d41756 1
a41756 1
return dev_storage + 2412;
d41767 2
a41768 2
                case 'c':
                  if (strncmp (KR_keyword, "/dev/sdcw11", 11) == 0)
d41771 1
a41771 1
return dev_storage + 1998;
d41782 2
a41783 2
                case 'b':
                  if (strncmp (KR_keyword, "/dev/sdbw11", 11) == 0)
d41786 1
a41786 1
return dev_storage + 1582;
d41797 2
a41798 2
                case 'a':
                  if (strncmp (KR_keyword, "/dev/sdaw11", 11) == 0)
d41801 1
a41801 1
return dev_storage + 1166;
d41812 2
a41813 11
                default:
{
return	NULL;

}
                }
            case 'v':
              switch (KR_keyword [7])
                {
                case 'd':
                  if (strncmp (KR_keyword, "/dev/sddv11", 11) == 0)
d41816 1
a41816 1
return dev_storage + 2397;
d41827 2
a41828 2
                case 'c':
                  if (strncmp (KR_keyword, "/dev/sdcv11", 11) == 0)
d41831 1
a41831 1
return dev_storage + 1983;
d41842 2
a41843 2
                case 'b':
                  if (strncmp (KR_keyword, "/dev/sdbv11", 11) == 0)
d41846 1
a41846 1
return dev_storage + 1567;
d41857 2
a41858 2
                case 'a':
                  if (strncmp (KR_keyword, "/dev/sdav11", 11) == 0)
d41861 1
a41861 1
return dev_storage + 1151;
d41872 10
a41881 1
                default:
d41886 3
a41888 6
                }
            case 'u':
              switch (KR_keyword [7])
                {
                case 'd':
                  if (strncmp (KR_keyword, "/dev/sddu11", 11) == 0)
d41891 1
a41891 1
return dev_storage + 2382;
d41902 2
a41903 2
                case 'c':
                  if (strncmp (KR_keyword, "/dev/sdcu11", 11) == 0)
d41906 1
a41906 1
return dev_storage + 1968;
d41917 2
a41918 2
                case 'b':
                  if (strncmp (KR_keyword, "/dev/sdbu11", 11) == 0)
d41921 1
a41921 1
return dev_storage + 1552;
d41932 2
a41933 2
                case 'a':
                  if (strncmp (KR_keyword, "/dev/sdau11", 11) == 0)
d41936 1
a41936 1
return dev_storage + 1136;
a41946 9
                default:
{
return	NULL;

}
                }
            case 't':
              switch (KR_keyword [7])
                {
d41948 1
a41948 1
                  if (strncmp (KR_keyword, "/dev/sddt11", 11) == 0)
d41951 1
a41951 1
return dev_storage + 2367;
d41963 1
a41963 1
                  if (strncmp (KR_keyword, "/dev/sdct11", 11) == 0)
d41966 1
a41966 1
return dev_storage + 1953;
d41978 1
a41978 1
                  if (strncmp (KR_keyword, "/dev/sdbt11", 11) == 0)
d41981 1
a41981 1
return dev_storage + 1537;
d41993 1
a41993 1
                  if (strncmp (KR_keyword, "/dev/sdat11", 11) == 0)
d41996 1
a41996 1
return dev_storage + 1121;
d42013 10
a42022 1
            case 's':
d42026 1
a42026 1
                  if (strncmp (KR_keyword, "/dev/cons61", 11) == 0)
d42029 1
a42029 1
return dev_storage + 81;
d42041 1
a42041 1
                  if (strncmp (KR_keyword, "/dev/cons51", 11) == 0)
d42044 1
a42044 1
return dev_storage + 71;
d42056 1
a42056 1
                  if (strncmp (KR_keyword, "/dev/cons41", 11) == 0)
d42059 1
a42059 1
return dev_storage + 61;
d42071 1
a42071 1
                  if (strncmp (KR_keyword, "/dev/cons31", 11) == 0)
d42074 1
a42074 1
return dev_storage + 51;
d42086 1
a42086 1
                  if (strncmp (KR_keyword, "/dev/cons21", 11) == 0)
d42089 1
a42089 1
return dev_storage + 41;
d42101 1
a42101 1
                  switch (KR_keyword [7])
a42102 3
                    case 'n':
                      if (strncmp (KR_keyword, "/dev/cons11", 11) == 0)
                        {
d42104 1
a42104 1
return dev_storage + 31;
d42107 3
a42109 3
                        }
                      else
                        {
d42114 2
a42115 11
                        }
                    case 'd':
                      if (strncmp (KR_keyword, "/dev/sdds11", 11) == 0)
                        {
{
return dev_storage + 2352;

}
                        }
                      else
                        {
d42120 7
a42126 4
                        }
                    case 'c':
                      if (strncmp (KR_keyword, "/dev/sdcs11", 11) == 0)
                        {
d42128 1
a42128 1
return dev_storage + 1938;
d42131 3
a42133 3
                        }
                      else
                        {
d42138 4
a42141 4
                        }
                    case 'b':
                      if (strncmp (KR_keyword, "/dev/sdbs11", 11) == 0)
                        {
d42143 1
a42143 1
return dev_storage + 1522;
d42146 3
a42148 3
                        }
                      else
                        {
d42153 4
a42156 4
                        }
                    case 'a':
                      if (strncmp (KR_keyword, "/dev/sdas11", 11) == 0)
                        {
d42158 1
a42158 1
return dev_storage + 1106;
d42161 3
a42163 9
                        }
                      else
                        {
{
return	NULL;

}
                        }
                    default:
d42175 2
a42176 2
            case 'r':
              switch (KR_keyword [7])
d42178 2
a42179 2
                case 'd':
                  if (strncmp (KR_keyword, "/dev/sddr11", 11) == 0)
d42182 1
a42182 1
return dev_storage + 2337;
d42193 2
a42194 2
                case 'c':
                  if (strncmp (KR_keyword, "/dev/sdcr11", 11) == 0)
d42197 1
a42197 1
return dev_storage + 1923;
d42208 2
a42209 2
                case 'b':
                  if (strncmp (KR_keyword, "/dev/sdbr11", 11) == 0)
d42212 1
a42212 1
return dev_storage + 1507;
d42223 2
a42224 2
                case 'a':
                  if (strncmp (KR_keyword, "/dev/sdar11", 11) == 0)
d42227 1
a42227 1
return dev_storage + 1091;
d42238 2
a42239 11
                default:
{
return	NULL;

}
                }
            case 'q':
              switch (KR_keyword [7])
                {
                case 'd':
                  if (strncmp (KR_keyword, "/dev/sddq11", 11) == 0)
d42242 1
a42242 1
return dev_storage + 2322;
d42253 2
a42254 2
                case 'c':
                  if (strncmp (KR_keyword, "/dev/sdcq11", 11) == 0)
d42257 1
a42257 1
return dev_storage + 1908;
d42268 11
a42278 2
                case 'b':
                  if (strncmp (KR_keyword, "/dev/sdbq11", 11) == 0)
d42281 1
a42281 1
return dev_storage + 1492;
d42292 2
a42293 2
                case 'a':
                  if (strncmp (KR_keyword, "/dev/sdaq11", 11) == 0)
d42296 1
a42296 1
return dev_storage + 1076;
d42307 2
a42308 11
                default:
{
return	NULL;

}
                }
            case 'p':
              switch (KR_keyword [7])
                {
                case 'd':
                  if (strncmp (KR_keyword, "/dev/sddp11", 11) == 0)
d42311 1
a42311 1
return dev_storage + 2307;
d42322 2
a42323 2
                case 'c':
                  if (strncmp (KR_keyword, "/dev/sdcp11", 11) == 0)
d42326 1
a42326 1
return dev_storage + 1893;
d42337 2
a42338 2
                case 'b':
                  if (strncmp (KR_keyword, "/dev/sdbp11", 11) == 0)
d42341 1
a42341 1
return dev_storage + 1477;
d42352 2
a42353 2
                case 'a':
                  if (strncmp (KR_keyword, "/dev/sdap11", 11) == 0)
d42356 1
a42356 1
return dev_storage + 1061;
d42367 2
a42368 11
                default:
{
return	NULL;

}
                }
            case 'o':
              switch (KR_keyword [7])
                {
                case 'd':
                  if (strncmp (KR_keyword, "/dev/sddo11", 11) == 0)
d42371 1
a42371 1
return dev_storage + 2292;
d42382 2
a42383 2
                case 'c':
                  if (strncmp (KR_keyword, "/dev/sdco11", 11) == 0)
d42386 1
a42386 1
return dev_storage + 1878;
d42397 2
a42398 2
                case 'b':
                  if (strncmp (KR_keyword, "/dev/sdbo11", 11) == 0)
d42401 1
a42401 1
return dev_storage + 1462;
d42412 2
a42413 2
                case 'a':
                  if (strncmp (KR_keyword, "/dev/sdao11", 11) == 0)
d42416 1
a42416 1
return dev_storage + 1046;
d42427 1
a42427 10
                default:
{
return	NULL;

}
                }
            case 'n':
              switch (KR_keyword [7])
                {
                case 'd':
d42431 1
a42431 1
return dev_storage + 2277;
d42442 2
a42443 2
                case 'c':
                  if (strncmp (KR_keyword, "/dev/sdcn11", 11) == 0)
d42446 1
a42446 1
return dev_storage + 1863;
d42457 2
a42458 2
                case 'b':
                  if (strncmp (KR_keyword, "/dev/sdbn11", 11) == 0)
d42461 1
a42461 1
return dev_storage + 1447;
d42472 2
a42473 2
                case 'a':
                  if (strncmp (KR_keyword, "/dev/sdan11", 11) == 0)
d42476 1
a42476 1
return dev_storage + 1031;
d42487 2
a42488 11
                default:
{
return	NULL;

}
                }
            case 'm':
              switch (KR_keyword [9])
                {
                case '6':
                  if (strncmp (KR_keyword, "/dev/ptym61", 11) == 0)
d42491 1
a42491 1
return dev_storage + 364;
d42502 2
a42503 2
                case '5':
                  if (strncmp (KR_keyword, "/dev/ptym51", 11) == 0)
d42506 1
a42506 1
return dev_storage + 354;
d42517 2
a42518 2
                case '4':
                  if (strncmp (KR_keyword, "/dev/ptym41", 11) == 0)
d42521 1
a42521 1
return dev_storage + 344;
d42532 2
a42533 2
                case '3':
                  if (strncmp (KR_keyword, "/dev/ptym31", 11) == 0)
d42536 1
a42536 1
return dev_storage + 334;
d42547 2
a42548 2
                case '2':
                  if (strncmp (KR_keyword, "/dev/ptym21", 11) == 0)
d42551 1
a42551 1
return dev_storage + 324;
d42562 2
a42563 2
                case '1':
                  switch (KR_keyword [7])
a42564 3
                    case 'y':
                      if (strncmp (KR_keyword, "/dev/ptym11", 11) == 0)
                        {
d42566 1
a42566 1
return dev_storage + 314;
d42569 3
a42571 3
                        }
                      else
                        {
d42576 4
a42579 4
                        }
                    case 'd':
                      if (strncmp (KR_keyword, "/dev/sddm11", 11) == 0)
                        {
d42581 1
a42581 1
return dev_storage + 2262;
d42584 3
a42586 3
                        }
                      else
                        {
d42591 4
a42594 4
                        }
                    case 'c':
                      if (strncmp (KR_keyword, "/dev/sdcm11", 11) == 0)
                        {
d42596 1
a42596 1
return dev_storage + 1848;
d42599 3
a42601 3
                        }
                      else
                        {
d42606 4
a42609 4
                        }
                    case 'b':
                      if (strncmp (KR_keyword, "/dev/sdbm11", 11) == 0)
                        {
d42611 1
a42611 1
return dev_storage + 1432;
d42614 3
a42616 3
                        }
                      else
                        {
d42621 4
a42624 4
                        }
                    case 'a':
                      if (strncmp (KR_keyword, "/dev/sdam11", 11) == 0)
                        {
d42626 1
a42626 1
return dev_storage + 1016;
d42629 3
a42631 9
                        }
                      else
                        {
{
return	NULL;

}
                        }
                    default:
d42643 2
a42644 2
            case 'l':
              switch (KR_keyword [7])
d42646 2
a42647 2
                case 'd':
                  if (strncmp (KR_keyword, "/dev/sddl11", 11) == 0)
d42650 1
a42650 1
return dev_storage + 2247;
d42661 2
a42662 2
                case 'c':
                  if (strncmp (KR_keyword, "/dev/sdcl11", 11) == 0)
d42665 1
a42665 1
return dev_storage + 1833;
d42676 2
a42677 2
                case 'b':
                  if (strncmp (KR_keyword, "/dev/sdbl11", 11) == 0)
d42680 1
a42680 1
return dev_storage + 1417;
d42691 2
a42692 2
                case 'a':
                  if (strncmp (KR_keyword, "/dev/sdal11", 11) == 0)
d42695 1
a42695 1
return dev_storage + 1001;
d42706 2
a42707 11
                default:
{
return	NULL;

}
                }
            case 'k':
              switch (KR_keyword [7])
                {
                case 'd':
                  if (strncmp (KR_keyword, "/dev/sddk11", 11) == 0)
d42710 1
a42710 1
return dev_storage + 2232;
d42721 2
a42722 2
                case 'c':
                  if (strncmp (KR_keyword, "/dev/sdck11", 11) == 0)
d42725 1
a42725 1
return dev_storage + 1818;
d42736 2
a42737 2
                case 'b':
                  if (strncmp (KR_keyword, "/dev/sdbk11", 11) == 0)
d42740 1
a42740 1
return dev_storage + 1402;
d42751 2
a42752 2
                case 'a':
                  if (strncmp (KR_keyword, "/dev/sdak11", 11) == 0)
d42755 1
a42755 1
return dev_storage + 986;
d42766 2
a42767 11
                default:
{
return	NULL;

}
                }
            case 'j':
              switch (KR_keyword [7])
                {
                case 'd':
                  if (strncmp (KR_keyword, "/dev/sddj11", 11) == 0)
d42770 1
a42770 1
return dev_storage + 2217;
d42781 2
a42782 2
                case 'c':
                  if (strncmp (KR_keyword, "/dev/sdcj11", 11) == 0)
d42785 1
a42785 1
return dev_storage + 1803;
d42796 2
a42797 2
                case 'b':
                  if (strncmp (KR_keyword, "/dev/sdbj11", 11) == 0)
d42800 1
a42800 1
return dev_storage + 1387;
d42811 2
a42812 2
                case 'a':
                  if (strncmp (KR_keyword, "/dev/sdaj11", 11) == 0)
d42815 1
a42815 1
return dev_storage + 971;
d42826 10
a42835 1
                default:
d42840 3
a42842 6
                }
            case 'i':
              switch (KR_keyword [7])
                {
                case 'd':
                  if (strncmp (KR_keyword, "/dev/sddi11", 11) == 0)
d42845 1
a42845 1
return dev_storage + 2202;
d42856 2
a42857 2
                case 'c':
                  if (strncmp (KR_keyword, "/dev/sdci11", 11) == 0)
d42860 1
a42860 1
return dev_storage + 1788;
d42871 2
a42872 2
                case 'b':
                  if (strncmp (KR_keyword, "/dev/sdbi11", 11) == 0)
d42875 1
a42875 1
return dev_storage + 1372;
d42886 2
a42887 2
                case 'a':
                  if (strncmp (KR_keyword, "/dev/sdai11", 11) == 0)
d42890 1
a42890 1
return dev_storage + 956;
d42901 2
a42902 11
                default:
{
return	NULL;

}
                }
            case 'h':
              switch (KR_keyword [7])
                {
                case 'd':
                  if (strncmp (KR_keyword, "/dev/sddh11", 11) == 0)
d42905 1
a42905 1
return dev_storage + 2187;
d42916 1
a42916 1
                case 'c':
d42920 1
a42920 1
return dev_storage + 1773;
d42931 2
a42932 2
                case 'b':
                  if (strncmp (KR_keyword, "/dev/sdbh11", 11) == 0)
d42935 1
a42935 1
return dev_storage + 1357;
d42946 2
a42947 2
                case 'a':
                  if (strncmp (KR_keyword, "/dev/sdah11", 11) == 0)
d42950 1
a42950 1
return dev_storage + 941;
d42961 10
a42970 1
                default:
d42975 1
a42975 4
                }
            case 'g':
              switch (KR_keyword [7])
                {
d42977 1
a42977 1
                  if (strncmp (KR_keyword, "/dev/sddg11", 11) == 0)
d42980 1
a42980 1
return dev_storage + 2172;
d42992 1
a42992 1
                  if (strncmp (KR_keyword, "/dev/sdcg11", 11) == 0)
d42995 1
a42995 1
return dev_storage + 1758;
d43007 1
a43007 1
                  if (strncmp (KR_keyword, "/dev/sdbg11", 11) == 0)
d43010 1
a43010 1
return dev_storage + 1342;
d43022 1
a43022 1
                  if (strncmp (KR_keyword, "/dev/sdag11", 11) == 0)
d43025 1
a43025 1
return dev_storage + 926;
d43042 2
a43043 2
            case 'f':
              switch (KR_keyword [7])
d43045 2
a43046 2
                case 'd':
                  if (strncmp (KR_keyword, "/dev/sddf11", 11) == 0)
d43049 1
a43049 1
return dev_storage + 2157;
d43060 2
a43061 2
                case 'c':
                  if (strncmp (KR_keyword, "/dev/sdcf11", 11) == 0)
d43064 1
a43064 1
return dev_storage + 1743;
d43075 2
a43076 2
                case 'b':
                  if (strncmp (KR_keyword, "/dev/sdbf11", 11) == 0)
d43079 1
a43079 1
return dev_storage + 1327;
d43090 2
a43091 2
                case 'a':
                  if (strncmp (KR_keyword, "/dev/sdaf11", 11) == 0)
d43094 1
a43094 1
return dev_storage + 911;
d43105 10
a43114 1
                default:
d43119 3
a43121 6
                }
            case 'e':
              switch (KR_keyword [7])
                {
                case 'd':
                  if (strncmp (KR_keyword, "/dev/sdde11", 11) == 0)
d43124 1
a43124 1
return dev_storage + 2142;
d43135 2
a43136 2
                case 'c':
                  if (strncmp (KR_keyword, "/dev/sdce11", 11) == 0)
d43139 1
a43139 1
return dev_storage + 1728;
d43150 2
a43151 2
                case 'b':
                  if (strncmp (KR_keyword, "/dev/sdbe11", 11) == 0)
d43154 1
a43154 1
return dev_storage + 1312;
d43165 2
a43166 2
                case 'a':
                  if (strncmp (KR_keyword, "/dev/sdae11", 11) == 0)
d43169 1
a43169 1
return dev_storage + 896;
d43180 10
a43189 1
                default:
d43194 3
a43196 6
                }
            case 'd':
              switch (KR_keyword [7])
                {
                case 'd':
                  if (strncmp (KR_keyword, "/dev/sddd11", 11) == 0)
d43199 1
a43199 1
return dev_storage + 2127;
d43210 2
a43211 2
                case 'c':
                  if (strncmp (KR_keyword, "/dev/sdcd11", 11) == 0)
d43214 1
a43214 1
return dev_storage + 1713;
d43225 2
a43226 2
                case 'b':
                  if (strncmp (KR_keyword, "/dev/sdbd11", 11) == 0)
d43229 1
a43229 1
return dev_storage + 1297;
d43240 2
a43241 2
                case 'a':
                  if (strncmp (KR_keyword, "/dev/sdad11", 11) == 0)
d43244 1
a43244 1
return dev_storage + 881;
d43255 2
a43256 11
                default:
{
return	NULL;

}
                }
            case 'c':
              switch (KR_keyword [7])
                {
                case 'd':
                  if (strncmp (KR_keyword, "/dev/sddc11", 11) == 0)
d43259 1
a43259 1
return dev_storage + 2112;
d43270 2
a43271 2
                case 'c':
                  if (strncmp (KR_keyword, "/dev/sdcc11", 11) == 0)
d43274 1
a43274 1
return dev_storage + 1698;
d43285 2
a43286 2
                case 'b':
                  if (strncmp (KR_keyword, "/dev/sdbc11", 11) == 0)
d43289 1
a43289 1
return dev_storage + 1282;
d43300 2
a43301 2
                case 'a':
                  if (strncmp (KR_keyword, "/dev/sdac11", 11) == 0)
d43304 1
a43304 1
return dev_storage + 866;
d43315 2
a43316 11
                default:
{
return	NULL;

}
                }
            case 'b':
              switch (KR_keyword [7])
                {
                case 'd':
                  if (strncmp (KR_keyword, "/dev/sddb11", 11) == 0)
d43319 1
a43319 1
return dev_storage + 2097;
d43330 2
a43331 2
                case 'c':
                  if (strncmp (KR_keyword, "/dev/sdcb11", 11) == 0)
d43334 1
a43334 1
return dev_storage + 1683;
d43345 2
a43346 2
                case 'b':
                  if (strncmp (KR_keyword, "/dev/sdbb11", 11) == 0)
d43349 1
a43349 1
return dev_storage + 1267;
d43360 2
a43361 2
                case 'a':
                  if (strncmp (KR_keyword, "/dev/sdab11", 11) == 0)
d43364 1
a43364 1
return dev_storage + 851;
a43374 9
                default:
{
return	NULL;

}
                }
            case 'a':
              switch (KR_keyword [7])
                {
d43376 1
a43376 1
                  if (strncmp (KR_keyword, "/dev/sdda11", 11) == 0)
d43379 1
a43379 1
return dev_storage + 2082;
d43391 1
a43391 1
                  if (strncmp (KR_keyword, "/dev/sdca11", 11) == 0)
d43394 1
a43394 1
return dev_storage + 1668;
d43406 1
a43406 1
                  if (strncmp (KR_keyword, "/dev/sdba11", 11) == 0)
d43409 1
a43409 1
return dev_storage + 1252;
d43421 1
a43421 1
                  if (strncmp (KR_keyword, "/dev/sdaa11", 11) == 0)
d43424 1
a43424 1
return dev_storage + 836;
d43441 2
a43442 2
            case 'S':
              switch (KR_keyword [9])
d43444 2
a43445 2
                case '6':
                  if (strncmp (KR_keyword, "/dev/ttyS61", 11) == 0)
d43448 1
a43448 1
return dev_storage + 2638;
d43459 2
a43460 2
                case '5':
                  if (strncmp (KR_keyword, "/dev/ttyS51", 11) == 0)
d43463 1
a43463 1
return dev_storage + 2628;
d43474 2
a43475 2
                case '4':
                  if (strncmp (KR_keyword, "/dev/ttyS41", 11) == 0)
d43478 1
a43478 1
return dev_storage + 2618;
d43489 2
a43490 2
                case '3':
                  if (strncmp (KR_keyword, "/dev/ttyS31", 11) == 0)
d43493 1
a43493 1
return dev_storage + 2608;
d43504 2
a43505 2
                case '2':
                  if (strncmp (KR_keyword, "/dev/ttyS21", 11) == 0)
d43508 1
a43508 1
return dev_storage + 2598;
d43519 2
a43520 2
                case '1':
                  if (strncmp (KR_keyword, "/dev/ttyS11", 11) == 0)
d43523 1
a43523 1
return dev_storage + 2588;
d43534 2
a43535 11
                default:
{
return	NULL;

}
                }
            case '1':
              switch (KR_keyword [9])
                {
                case '2':
                  if (strncmp (KR_keyword, "/dev/nst121", 11) == 0)
d43538 1
a43538 1
return dev_storage + 228;
d43549 2
a43550 2
                case '1':
                  if (strncmp (KR_keyword, "/dev/nst111", 11) == 0)
d43553 1
a43553 1
return dev_storage + 218;
d43564 2
a43565 2
                case '0':
                  if (strncmp (KR_keyword, "/dev/nst101", 11) == 0)
d43568 1
a43568 1
return dev_storage + 208;
d43579 2
a43580 20
                default:
{
return	NULL;

}
                }
            default:
{
return	NULL;

}
            }
        case '0':
          switch (KR_keyword [8])
            {
            case 'z':
              switch (KR_keyword [7])
                {
                case 'c':
                  if (strncmp (KR_keyword, "/dev/sdcz10", 11) == 0)
d43583 1
a43583 1
return dev_storage + 2042;
d43594 2
a43595 2
                case 'b':
                  if (strncmp (KR_keyword, "/dev/sdbz10", 11) == 0)
d43598 1
a43598 1
return dev_storage + 1626;
d43609 2
a43610 2
                case 'a':
                  if (strncmp (KR_keyword, "/dev/sdaz10", 11) == 0)
d43613 1
a43613 1
return dev_storage + 1210;
d43624 2
a43625 11
                default:
{
return	NULL;

}
                }
            case 'y':
              switch (KR_keyword [7])
                {
                case 'c':
                  if (strncmp (KR_keyword, "/dev/sdcy10", 11) == 0)
d43628 1
a43628 1
return dev_storage + 2027;
d43639 2
a43640 2
                case 'b':
                  if (strncmp (KR_keyword, "/dev/sdby10", 11) == 0)
d43643 1
a43643 1
return dev_storage + 1611;
d43654 2
a43655 2
                case 'a':
                  if (strncmp (KR_keyword, "/dev/sday10", 11) == 0)
d43658 1
a43658 1
return dev_storage + 1195;
d43669 2
a43670 11
                default:
{
return	NULL;

}
                }
            case 'x':
              switch (KR_keyword [7])
                {
                case 'd':
                  if (strncmp (KR_keyword, "/dev/sddx10", 11) == 0)
d43673 1
a43673 1
return dev_storage + 2426;
d43684 2
a43685 2
                case 'c':
                  if (strncmp (KR_keyword, "/dev/sdcx10", 11) == 0)
d43688 1
a43688 1
return dev_storage + 2012;
d43699 2
a43700 2
                case 'b':
                  if (strncmp (KR_keyword, "/dev/sdbx10", 11) == 0)
d43703 1
a43703 1
return dev_storage + 1596;
d43714 2
a43715 2
                case 'a':
                  if (strncmp (KR_keyword, "/dev/sdax10", 11) == 0)
d43718 1
a43718 1
return dev_storage + 1180;
d43729 2
a43730 11
                default:
{
return	NULL;

}
                }
            case 'w':
              switch (KR_keyword [7])
                {
                case 'd':
                  if (strncmp (KR_keyword, "/dev/sddw10", 11) == 0)
d43733 1
a43733 1
return dev_storage + 2411;
d43744 2
a43745 17
                case 'c':
                  if (strncmp (KR_keyword, "/dev/sdcw10", 11) == 0)
                    {
{
return dev_storage + 1997;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'b':
                  if (strncmp (KR_keyword, "/dev/sdbw10", 11) == 0)
d43748 1
a43748 1
return dev_storage + 1581;
d43759 2
a43760 2
                case 'a':
                  if (strncmp (KR_keyword, "/dev/sdaw10", 11) == 0)
d43763 1
a43763 1
return dev_storage + 1165;
a43773 9
                default:
{
return	NULL;

}
                }
            case 'v':
              switch (KR_keyword [7])
                {
d43775 1
a43775 1
                  if (strncmp (KR_keyword, "/dev/sddv10", 11) == 0)
d43778 1
a43778 1
return dev_storage + 2396;
d43790 1
a43790 1
                  if (strncmp (KR_keyword, "/dev/sdcv10", 11) == 0)
d43793 1
a43793 1
return dev_storage + 1982;
d43805 1
a43805 1
                  if (strncmp (KR_keyword, "/dev/sdbv10", 11) == 0)
d43808 1
a43808 1
return dev_storage + 1566;
d43820 1
a43820 1
                  if (strncmp (KR_keyword, "/dev/sdav10", 11) == 0)
d43823 1
a43823 1
return dev_storage + 1150;
d43840 11
a43850 2
            case 'u':
              switch (KR_keyword [7])
d43852 2
a43853 2
                case 'd':
                  if (strncmp (KR_keyword, "/dev/sddu10", 11) == 0)
d43856 1
a43856 1
return dev_storage + 2381;
d43867 2
a43868 2
                case 'c':
                  if (strncmp (KR_keyword, "/dev/sdcu10", 11) == 0)
d43871 1
a43871 1
return dev_storage + 1967;
d43882 2
a43883 2
                case 'b':
                  if (strncmp (KR_keyword, "/dev/sdbu10", 11) == 0)
d43886 1
a43886 1
return dev_storage + 1551;
d43897 2
a43898 2
                case 'a':
                  if (strncmp (KR_keyword, "/dev/sdau10", 11) == 0)
d43901 1
a43901 1
return dev_storage + 1135;
d43912 10
a43921 1
                default:
d43926 3
a43928 6
                }
            case 't':
              switch (KR_keyword [7])
                {
                case 'd':
                  if (strncmp (KR_keyword, "/dev/sddt10", 11) == 0)
d43931 1
a43931 1
return dev_storage + 2366;
d43942 11
a43952 2
                case 'c':
                  if (strncmp (KR_keyword, "/dev/sdct10", 11) == 0)
d43955 1
a43955 1
return dev_storage + 1952;
d43966 2
a43967 2
                case 'b':
                  if (strncmp (KR_keyword, "/dev/sdbt10", 11) == 0)
d43970 1
a43970 1
return dev_storage + 1536;
d43981 2
a43982 2
                case 'a':
                  if (strncmp (KR_keyword, "/dev/sdat10", 11) == 0)
d43985 1
a43985 1
return dev_storage + 1120;
d44002 1
a44002 1
            case 's':
d44081 1
a44081 1
                  switch (KR_keyword [7])
a44082 3
                    case 'n':
                      if (strncmp (KR_keyword, "/dev/cons10", 11) == 0)
                        {
d44087 9
a44095 3
                        }
                      else
                        {
d44100 7
a44106 4
                        }
                    case 'd':
                      if (strncmp (KR_keyword, "/dev/sdds10", 11) == 0)
                        {
d44108 1
a44108 1
return dev_storage + 2351;
d44111 3
a44113 3
                        }
                      else
                        {
d44118 4
a44121 4
                        }
                    case 'c':
                      if (strncmp (KR_keyword, "/dev/sdcs10", 11) == 0)
                        {
d44123 1
a44123 1
return dev_storage + 1937;
d44126 3
a44128 3
                        }
                      else
                        {
d44133 4
a44136 4
                        }
                    case 'b':
                      if (strncmp (KR_keyword, "/dev/sdbs10", 11) == 0)
                        {
d44138 1
a44138 1
return dev_storage + 1521;
d44141 3
a44143 3
                        }
                      else
                        {
d44148 4
a44151 4
                        }
                    case 'a':
                      if (strncmp (KR_keyword, "/dev/sdas10", 11) == 0)
                        {
d44153 1
a44153 1
return dev_storage + 1105;
d44156 3
a44158 3
                        }
                      else
                        {
d44163 4
a44166 2
                        }
                    default:
d44168 1
a44168 1
return	NULL;
d44172 2
a44173 1
                default:
d44178 3
a44180 6
                }
            case 'r':
              switch (KR_keyword [7])
                {
                case 'd':
                  if (strncmp (KR_keyword, "/dev/sddr10", 11) == 0)
d44183 1
a44183 1
return dev_storage + 2336;
d44194 2
a44195 2
                case 'c':
                  if (strncmp (KR_keyword, "/dev/sdcr10", 11) == 0)
d44198 1
a44198 1
return dev_storage + 1922;
d44209 2
a44210 2
                case 'b':
                  if (strncmp (KR_keyword, "/dev/sdbr10", 11) == 0)
d44213 1
a44213 1
return dev_storage + 1506;
d44224 2
a44225 2
                case 'a':
                  if (strncmp (KR_keyword, "/dev/sdar10", 11) == 0)
d44228 1
a44228 1
return dev_storage + 1090;
d44239 10
a44248 1
                default:
d44253 3
a44255 6
                }
            case 'q':
              switch (KR_keyword [7])
                {
                case 'd':
                  if (strncmp (KR_keyword, "/dev/sddq10", 11) == 0)
d44258 1
a44258 1
return dev_storage + 2321;
d44269 2
a44270 2
                case 'c':
                  if (strncmp (KR_keyword, "/dev/sdcq10", 11) == 0)
d44273 1
a44273 1
return dev_storage + 1907;
d44284 2
a44285 2
                case 'b':
                  if (strncmp (KR_keyword, "/dev/sdbq10", 11) == 0)
d44288 1
a44288 1
return dev_storage + 1491;
d44299 2
a44300 2
                case 'a':
                  if (strncmp (KR_keyword, "/dev/sdaq10", 11) == 0)
d44303 1
a44303 1
return dev_storage + 1075;
d44314 10
a44323 1
                default:
d44328 3
a44330 6
                }
            case 'p':
              switch (KR_keyword [7])
                {
                case 'd':
                  if (strncmp (KR_keyword, "/dev/sddp10", 11) == 0)
d44333 1
a44333 1
return dev_storage + 2306;
d44344 2
a44345 2
                case 'c':
                  if (strncmp (KR_keyword, "/dev/sdcp10", 11) == 0)
d44348 1
a44348 1
return dev_storage + 1892;
d44359 2
a44360 2
                case 'b':
                  if (strncmp (KR_keyword, "/dev/sdbp10", 11) == 0)
d44363 1
a44363 1
return dev_storage + 1476;
d44374 2
a44375 2
                case 'a':
                  if (strncmp (KR_keyword, "/dev/sdap10", 11) == 0)
d44378 1
a44378 1
return dev_storage + 1060;
d44389 10
a44398 1
                default:
d44403 1
a44403 4
                }
            case 'o':
              switch (KR_keyword [7])
                {
d44405 1
a44405 1
                  if (strncmp (KR_keyword, "/dev/sddo10", 11) == 0)
d44408 1
a44408 1
return dev_storage + 2291;
d44420 1
a44420 1
                  if (strncmp (KR_keyword, "/dev/sdco10", 11) == 0)
d44423 1
a44423 1
return dev_storage + 1877;
d44435 1
a44435 1
                  if (strncmp (KR_keyword, "/dev/sdbo10", 11) == 0)
d44438 1
a44438 1
return dev_storage + 1461;
d44450 1
a44450 1
                  if (strncmp (KR_keyword, "/dev/sdao10", 11) == 0)
d44453 1
a44453 1
return dev_storage + 1045;
d44470 2
a44471 2
            case 'n':
              switch (KR_keyword [7])
d44473 32
a44504 2
                case 'd':
                  if (strncmp (KR_keyword, "/dev/sddn10", 11) == 0)
d44507 1
a44507 1
return dev_storage + 2276;
d44518 2
a44519 2
                case 'c':
                  if (strncmp (KR_keyword, "/dev/sdcn10", 11) == 0)
d44522 1
a44522 1
return dev_storage + 1862;
d44533 2
a44534 2
                case 'b':
                  if (strncmp (KR_keyword, "/dev/sdbn10", 11) == 0)
d44537 1
a44537 1
return dev_storage + 1446;
d44548 2
a44549 2
                case 'a':
                  if (strncmp (KR_keyword, "/dev/sdan10", 11) == 0)
d44552 1
a44552 1
return dev_storage + 1030;
d44563 10
a44572 1
                default:
d44577 3
a44579 6
                }
            case 'm':
              switch (KR_keyword [9])
                {
                case '6':
                  if (strncmp (KR_keyword, "/dev/ptym60", 11) == 0)
d44582 1
a44582 1
return dev_storage + 363;
d44593 2
a44594 2
                case '5':
                  if (strncmp (KR_keyword, "/dev/ptym50", 11) == 0)
d44597 1
a44597 1
return dev_storage + 353;
d44608 2
a44609 2
                case '4':
                  if (strncmp (KR_keyword, "/dev/ptym40", 11) == 0)
d44612 1
a44612 1
return dev_storage + 343;
d44623 2
a44624 2
                case '3':
                  if (strncmp (KR_keyword, "/dev/ptym30", 11) == 0)
d44627 1
a44627 1
return dev_storage + 333;
d44638 2
a44639 2
                case '2':
                  if (strncmp (KR_keyword, "/dev/ptym20", 11) == 0)
d44642 1
a44642 1
return dev_storage + 323;
d44653 2
a44654 2
                case '1':
                  switch (KR_keyword [7])
a44655 3
                    case 'y':
                      if (strncmp (KR_keyword, "/dev/ptym10", 11) == 0)
                        {
d44657 1
a44657 1
return dev_storage + 313;
d44660 3
a44662 3
                        }
                      else
                        {
d44667 4
a44670 4
                        }
                    case 'd':
                      if (strncmp (KR_keyword, "/dev/sddm10", 11) == 0)
                        {
d44672 1
a44672 1
return dev_storage + 2261;
d44675 3
a44677 3
                        }
                      else
                        {
d44682 4
a44685 4
                        }
                    case 'c':
                      if (strncmp (KR_keyword, "/dev/sdcm10", 11) == 0)
                        {
d44687 1
a44687 1
return dev_storage + 1847;
d44690 3
a44692 3
                        }
                      else
                        {
d44697 4
a44700 4
                        }
                    case 'b':
                      if (strncmp (KR_keyword, "/dev/sdbm10", 11) == 0)
                        {
d44702 1
a44702 1
return dev_storage + 1431;
d44705 3
a44707 3
                        }
                      else
                        {
d44712 4
a44715 4
                        }
                    case 'a':
                      if (strncmp (KR_keyword, "/dev/sdam10", 11) == 0)
                        {
d44717 6
a44722 6
return dev_storage + 1015;

}
                        }
                      else
                        {
d44727 4
a44730 2
                        }
                    default:
d44732 1
a44732 1
return	NULL;
d44736 2
a44737 1
                default:
d44742 3
a44744 6
                }
            case 'l':
              switch (KR_keyword [7])
                {
                case 'd':
                  if (strncmp (KR_keyword, "/dev/sddl10", 11) == 0)
d44747 1
a44747 1
return dev_storage + 2246;
d44758 2
a44759 2
                case 'c':
                  if (strncmp (KR_keyword, "/dev/sdcl10", 11) == 0)
d44762 1
a44762 1
return dev_storage + 1832;
d44773 2
a44774 2
                case 'b':
                  if (strncmp (KR_keyword, "/dev/sdbl10", 11) == 0)
d44777 1
a44777 1
return dev_storage + 1416;
d44788 2
a44789 2
                case 'a':
                  if (strncmp (KR_keyword, "/dev/sdal10", 11) == 0)
d44792 1
a44792 1
return dev_storage + 1000;
a44802 9
                default:
{
return	NULL;

}
                }
            case 'k':
              switch (KR_keyword [7])
                {
d44804 1
a44804 1
                  if (strncmp (KR_keyword, "/dev/sddk10", 11) == 0)
d44807 1
a44807 1
return dev_storage + 2231;
d44819 1
a44819 1
                  if (strncmp (KR_keyword, "/dev/sdck10", 11) == 0)
d44822 1
a44822 1
return dev_storage + 1817;
d44834 1
a44834 1
                  if (strncmp (KR_keyword, "/dev/sdbk10", 11) == 0)
d44837 1
a44837 1
return dev_storage + 1401;
d44849 1
a44849 1
                  if (strncmp (KR_keyword, "/dev/sdak10", 11) == 0)
d44852 1
a44852 1
return dev_storage + 985;
d44869 2
a44870 2
            case 'j':
              switch (KR_keyword [7])
d44872 2
a44873 2
                case 'd':
                  if (strncmp (KR_keyword, "/dev/sddj10", 11) == 0)
d44876 1
a44876 1
return dev_storage + 2216;
d44887 2
a44888 2
                case 'c':
                  if (strncmp (KR_keyword, "/dev/sdcj10", 11) == 0)
d44891 1
a44891 1
return dev_storage + 1802;
d44902 2
a44903 2
                case 'b':
                  if (strncmp (KR_keyword, "/dev/sdbj10", 11) == 0)
d44906 1
a44906 1
return dev_storage + 1386;
d44917 2
a44918 2
                case 'a':
                  if (strncmp (KR_keyword, "/dev/sdaj10", 11) == 0)
d44921 1
a44921 1
return dev_storage + 970;
d44932 10
a44941 1
                default:
d44946 3
a44948 6
                }
            case 'i':
              switch (KR_keyword [7])
                {
                case 'd':
                  if (strncmp (KR_keyword, "/dev/sddi10", 11) == 0)
d44951 1
a44951 1
return dev_storage + 2201;
d44962 2
a44963 2
                case 'c':
                  if (strncmp (KR_keyword, "/dev/sdci10", 11) == 0)
d44966 1
a44966 1
return dev_storage + 1787;
d44977 2
a44978 2
                case 'b':
                  if (strncmp (KR_keyword, "/dev/sdbi10", 11) == 0)
d44981 1
a44981 1
return dev_storage + 1371;
d44992 2
a44993 2
                case 'a':
                  if (strncmp (KR_keyword, "/dev/sdai10", 11) == 0)
d44996 1
a44996 1
return dev_storage + 955;
d45007 10
a45016 1
                default:
d45021 3
a45023 6
                }
            case 'h':
              switch (KR_keyword [7])
                {
                case 'd':
                  if (strncmp (KR_keyword, "/dev/sddh10", 11) == 0)
d45026 1
a45026 1
return dev_storage + 2186;
d45037 2
a45038 2
                case 'c':
                  if (strncmp (KR_keyword, "/dev/sdch10", 11) == 0)
d45041 1
a45041 1
return dev_storage + 1772;
d45052 2
a45053 2
                case 'b':
                  if (strncmp (KR_keyword, "/dev/sdbh10", 11) == 0)
d45056 1
a45056 1
return dev_storage + 1356;
d45067 2
a45068 2
                case 'a':
                  if (strncmp (KR_keyword, "/dev/sdah10", 11) == 0)
d45071 1
a45071 1
return dev_storage + 940;
d45082 2
a45083 11
                default:
{
return	NULL;

}
                }
            case 'g':
              switch (KR_keyword [7])
                {
                case 'd':
                  if (strncmp (KR_keyword, "/dev/sddg10", 11) == 0)
d45086 1
a45086 1
return dev_storage + 2171;
d45097 2
a45098 2
                case 'c':
                  if (strncmp (KR_keyword, "/dev/sdcg10", 11) == 0)
d45101 1
a45101 1
return dev_storage + 1757;
d45112 2
a45113 2
                case 'b':
                  if (strncmp (KR_keyword, "/dev/sdbg10", 11) == 0)
d45116 1
a45116 1
return dev_storage + 1341;
d45127 2
a45128 2
                case 'a':
                  if (strncmp (KR_keyword, "/dev/sdag10", 11) == 0)
d45131 1
a45131 1
return dev_storage + 925;
d45142 2
a45143 11
                default:
{
return	NULL;

}
                }
            case 'f':
              switch (KR_keyword [7])
                {
                case 'd':
                  if (strncmp (KR_keyword, "/dev/sddf10", 11) == 0)
d45146 1
a45146 1
return dev_storage + 2156;
d45157 2
a45158 2
                case 'c':
                  if (strncmp (KR_keyword, "/dev/sdcf10", 11) == 0)
d45161 1
a45161 1
return dev_storage + 1742;
d45172 1
a45172 1
                case 'b':
d45176 1
a45176 1
return dev_storage + 1326;
d45187 2
a45188 2
                case 'a':
                  if (strncmp (KR_keyword, "/dev/sdaf10", 11) == 0)
d45191 1
a45191 1
return dev_storage + 910;
a45201 9
                default:
{
return	NULL;

}
                }
            case 'e':
              switch (KR_keyword [7])
                {
d45203 1
a45203 1
                  if (strncmp (KR_keyword, "/dev/sdde10", 11) == 0)
d45206 1
a45206 1
return dev_storage + 2141;
d45218 1
a45218 1
                  if (strncmp (KR_keyword, "/dev/sdce10", 11) == 0)
d45221 1
a45221 1
return dev_storage + 1727;
d45233 1
a45233 1
                  if (strncmp (KR_keyword, "/dev/sdbe10", 11) == 0)
d45236 1
a45236 1
return dev_storage + 1311;
d45248 1
a45248 1
                  if (strncmp (KR_keyword, "/dev/sdae10", 11) == 0)
d45251 1
a45251 1
return dev_storage + 895;
d45268 2
a45269 2
            case 'd':
              switch (KR_keyword [7])
d45271 2
a45272 2
                case 'd':
                  if (strncmp (KR_keyword, "/dev/sddd10", 11) == 0)
d45275 1
a45275 1
return dev_storage + 2126;
d45286 2
a45287 2
                case 'c':
                  if (strncmp (KR_keyword, "/dev/sdcd10", 11) == 0)
d45290 1
a45290 1
return dev_storage + 1712;
d45301 2
a45302 2
                case 'b':
                  if (strncmp (KR_keyword, "/dev/sdbd10", 11) == 0)
d45305 1
a45305 1
return dev_storage + 1296;
d45316 2
a45317 2
                case 'a':
                  if (strncmp (KR_keyword, "/dev/sdad10", 11) == 0)
d45320 1
a45320 1
return dev_storage + 880;
d45331 10
a45340 1
                default:
d45345 3
a45347 6
                }
            case 'c':
              switch (KR_keyword [7])
                {
                case 'd':
                  if (strncmp (KR_keyword, "/dev/sddc10", 11) == 0)
d45350 1
a45350 1
return dev_storage + 2111;
d45361 2
a45362 2
                case 'c':
                  if (strncmp (KR_keyword, "/dev/sdcc10", 11) == 0)
d45365 1
a45365 1
return dev_storage + 1697;
d45376 2
a45377 2
                case 'b':
                  if (strncmp (KR_keyword, "/dev/sdbc10", 11) == 0)
d45380 1
a45380 1
return dev_storage + 1281;
d45391 2
a45392 2
                case 'a':
                  if (strncmp (KR_keyword, "/dev/sdac10", 11) == 0)
d45395 1
a45395 1
return dev_storage + 865;
d45406 2
a45407 11
                default:
{
return	NULL;

}
                }
            case 'b':
              switch (KR_keyword [7])
                {
                case 'd':
                  if (strncmp (KR_keyword, "/dev/sddb10", 11) == 0)
d45410 1
a45410 1
return dev_storage + 2096;
d45421 2
a45422 2
                case 'c':
                  if (strncmp (KR_keyword, "/dev/sdcb10", 11) == 0)
d45425 1
a45425 1
return dev_storage + 1682;
d45436 2
a45437 2
                case 'b':
                  if (strncmp (KR_keyword, "/dev/sdbb10", 11) == 0)
d45440 1
a45440 1
return dev_storage + 1266;
d45451 2
a45452 2
                case 'a':
                  if (strncmp (KR_keyword, "/dev/sdab10", 11) == 0)
d45455 1
a45455 1
return dev_storage + 850;
d45466 2
a45467 11
                default:
{
return	NULL;

}
                }
            case 'a':
              switch (KR_keyword [7])
                {
                case 'd':
                  if (strncmp (KR_keyword, "/dev/sdda10", 11) == 0)
d45470 1
a45470 1
return dev_storage + 2081;
d45481 2
a45482 2
                case 'c':
                  if (strncmp (KR_keyword, "/dev/sdca10", 11) == 0)
d45485 1
a45485 1
return dev_storage + 1667;
d45496 2
a45497 2
                case 'b':
                  if (strncmp (KR_keyword, "/dev/sdba10", 11) == 0)
d45500 1
a45500 1
return dev_storage + 1251;
d45511 2
a45512 2
                case 'a':
                  if (strncmp (KR_keyword, "/dev/sdaa10", 11) == 0)
d45515 1
a45515 1
return dev_storage + 835;
d45526 2
a45527 11
                default:
{
return	NULL;

}
                }
            case 'S':
              switch (KR_keyword [9])
                {
                case '6':
                  if (strncmp (KR_keyword, "/dev/ttyS60", 11) == 0)
d45530 1
a45530 1
return dev_storage + 2637;
d45541 2
a45542 2
                case '5':
                  if (strncmp (KR_keyword, "/dev/ttyS50", 11) == 0)
d45545 1
a45545 1
return dev_storage + 2627;
d45556 2
a45557 2
                case '4':
                  if (strncmp (KR_keyword, "/dev/ttyS40", 11) == 0)
d45560 1
a45560 1
return dev_storage + 2617;
d45571 2
a45572 2
                case '3':
                  if (strncmp (KR_keyword, "/dev/ttyS30", 11) == 0)
d45575 1
a45575 1
return dev_storage + 2607;
d45586 2
a45587 2
                case '2':
                  if (strncmp (KR_keyword, "/dev/ttyS20", 11) == 0)
d45590 1
a45590 1
return dev_storage + 2597;
d45601 2
a45602 2
                case '1':
                  if (strncmp (KR_keyword, "/dev/ttyS10", 11) == 0)
d45605 1
a45605 1
return dev_storage + 2587;
d45616 2
a45617 11
                default:
{
return	NULL;

}
                }
            case '1':
              switch (KR_keyword [9])
                {
                case '2':
                  if (strncmp (KR_keyword, "/dev/nst120", 11) == 0)
d45620 1
a45620 1
return dev_storage + 227;
d45631 2
a45632 2
                case '1':
                  if (strncmp (KR_keyword, "/dev/nst110", 11) == 0)
d45635 1
a45635 1
return dev_storage + 217;
d45646 2
a45647 2
                case '0':
                  if (strncmp (KR_keyword, "/dev/nst100", 11) == 0)
d45650 1
a45650 1
return dev_storage + 207;
d45686 1
a45686 1
return dev_storage + 2642;
d45701 1
a45701 1
return dev_storage + 2641;
d45786 1
a45786 1
  _dev_t dev = FHDEV (major, minor);
d45790 2
a45791 2
  for (unsigned i = 0; i < (sizeof (dev_storage) / sizeof (dev_storage[0])); i++)
    if (dev_storage[i].d.devn == dev)
d45793 1
a45793 1
	*this = dev_storage[i];
a45852 68
bool
device::exists_never () const
{
  return false;
}

bool
device::exists_ptys () const
{
  /* Only in-use ptys exist. */
  return cygwin_shared->tty.connect (get_minor ()) != -1;
}

bool
device::exists_cons () const
{
  /* /dev/consX only exists, if it's the current controlling tty. */
  return iscons_dev (myself->ctty) && myself->ctty == d.devn_int;
}

bool
device::exists_console () const
{
  /* console, conin, conout only exist if a console is our controlling tty. */
  return iscons_dev (myself->ctty);
}

bool
device::exists_nt_dev () const
{
  /* POSIX devices backed by real NT devices only exist if their NT device
     exists. */
  WCHAR wpath[MAX_PATH];
  UNICODE_STRING upath;
  OBJECT_ATTRIBUTES attr;
  HANDLE h;
  NTSTATUS status;

  sys_mbstowcs (wpath, MAX_PATH, native);
  RtlInitUnicodeString (&upath, wpath);
  InitializeObjectAttributes (&attr, &upath,
			      OBJ_CASE_INSENSITIVE, NULL, NULL);
  /* Except for the serial IO devices, the native paths are direct device
     paths, not symlinks, so every status code except for "NOT_FOUND" means
     the device exists. */
  status = NtOpenSymbolicLinkObject (&h, SYMBOLIC_LINK_QUERY, &attr);
  switch (status)
    {
    case STATUS_OBJECT_NAME_NOT_FOUND:
    case STATUS_OBJECT_PATH_NOT_FOUND:
      return false;
    case STATUS_SUCCESS:
      NtClose (h);
      break;
    default:
      break;
    }
  return true;
}

bool  
device::exists () const
{
  if (!exists_func)
    return true;
  return (this->*exists_func)();
}

@


1.42
log
@(Interim checkin while we work on this)
* devices.cc: Regenerate.
* devices.h (device::noexpose): New field.
(device::dev_on_fs): Make a bit field.
(get_major): Use proper type for declaration.
(expose): New field.
(ext_dev_storage): Delete declaration.
(dev_storage_size): Ditto.
(dev_storage): New declaration.
(dev_storage_end): Ditto.
* devices.in: Mark /dev/ptym*, /dev/com*, /dev/pipe, /dev/fifo, and "/dev" as
"no expose".
* fhandler.h (fhandler_dev::lastrealpos): Delete declaration.
(fhandler_dev::devidx): Declare new field.
* fhandler_disk_file.cc: Move fhandler_dev functions into fhandler_dev.cc.
* fhandler_dev.cc: Add includes needed for functions moved from
fhandler_disk_file.cc.
(dev_storage_scan_start): Define place to start listing devices.
(dev_storage_size): Define size of array to scan.
(fhandler_dev::fhandler_dev): Move here from fhandler_disk_file.cc.
(fhandler_dev::opendir): Ditto.
(fhandler_dev::readdir): Just check devidx for non-NULL to determine when to go
to disk for /dev content.  Use dev_storage rather than ext_dev_storage.
Iterate over dev_storage using devidx pointer.  Use accessor functions rather
than raw references to the device struct.  Only increment dir->__d_position
when we are actually going to be returning something.  Add debug_printf for
exit.
(fhandler_dev::rewinddir): Set devidx as appropriate depending on whether
there's a /dev on disk or not.
* gendevices: Don't mark dev_storage static but do put it in the _RDATA
section.
* path.cc (path_conv::check): Use new "device::expose()" function to decide to
forbid programs from referencing internal device types.
@
text
@d8 2
d73 83
a155 83
  {"/dev/com1", BRACK(FHDEV(DEV_SERIAL_MAJOR, 0)), "\\??\\COM1", true},
  {"/dev/com2", BRACK(FHDEV(DEV_SERIAL_MAJOR, 1)), "\\??\\COM2", true},
  {"/dev/com3", BRACK(FHDEV(DEV_SERIAL_MAJOR, 2)), "\\??\\COM3", true},
  {"/dev/com4", BRACK(FHDEV(DEV_SERIAL_MAJOR, 3)), "\\??\\COM4", true},
  {"/dev/com5", BRACK(FHDEV(DEV_SERIAL_MAJOR, 4)), "\\??\\COM5", true},
  {"/dev/com6", BRACK(FHDEV(DEV_SERIAL_MAJOR, 5)), "\\??\\COM6", true},
  {"/dev/com7", BRACK(FHDEV(DEV_SERIAL_MAJOR, 6)), "\\??\\COM7", true},
  {"/dev/com8", BRACK(FHDEV(DEV_SERIAL_MAJOR, 7)), "\\??\\COM8", true},
  {"/dev/com9", BRACK(FHDEV(DEV_SERIAL_MAJOR, 8)), "\\??\\COM9", true},
  {"/dev/com10", BRACK(FHDEV(DEV_SERIAL_MAJOR, 9)), "\\??\\COM10", true},
  {"/dev/com11", BRACK(FHDEV(DEV_SERIAL_MAJOR, 10)), "\\??\\COM11", true},
  {"/dev/com12", BRACK(FHDEV(DEV_SERIAL_MAJOR, 11)), "\\??\\COM12", true},
  {"/dev/com13", BRACK(FHDEV(DEV_SERIAL_MAJOR, 12)), "\\??\\COM13", true},
  {"/dev/com14", BRACK(FHDEV(DEV_SERIAL_MAJOR, 13)), "\\??\\COM14", true},
  {"/dev/com15", BRACK(FHDEV(DEV_SERIAL_MAJOR, 14)), "\\??\\COM15", true},
  {"/dev/com16", BRACK(FHDEV(DEV_SERIAL_MAJOR, 15)), "\\??\\COM16", true},
  {"/dev/conin", BRACK(FH_CONIN), "/dev/conin"},
  {"/dev/conout", BRACK(FH_CONOUT), "/dev/conout"},
  {"/dev/cons0", BRACK(FHDEV(DEV_CONS_MAJOR, 0)), "/dev/cons0"},
  {"/dev/cons1", BRACK(FHDEV(DEV_CONS_MAJOR, 1)), "/dev/cons1"},
  {"/dev/cons2", BRACK(FHDEV(DEV_CONS_MAJOR, 2)), "/dev/cons2"},
  {"/dev/cons3", BRACK(FHDEV(DEV_CONS_MAJOR, 3)), "/dev/cons3"},
  {"/dev/cons4", BRACK(FHDEV(DEV_CONS_MAJOR, 4)), "/dev/cons4"},
  {"/dev/cons5", BRACK(FHDEV(DEV_CONS_MAJOR, 5)), "/dev/cons5"},
  {"/dev/cons6", BRACK(FHDEV(DEV_CONS_MAJOR, 6)), "/dev/cons6"},
  {"/dev/cons7", BRACK(FHDEV(DEV_CONS_MAJOR, 7)), "/dev/cons7"},
  {"/dev/cons8", BRACK(FHDEV(DEV_CONS_MAJOR, 8)), "/dev/cons8"},
  {"/dev/cons9", BRACK(FHDEV(DEV_CONS_MAJOR, 9)), "/dev/cons9"},
  {"/dev/cons10", BRACK(FHDEV(DEV_CONS_MAJOR, 10)), "/dev/cons10"},
  {"/dev/cons11", BRACK(FHDEV(DEV_CONS_MAJOR, 11)), "/dev/cons11"},
  {"/dev/cons12", BRACK(FHDEV(DEV_CONS_MAJOR, 12)), "/dev/cons12"},
  {"/dev/cons13", BRACK(FHDEV(DEV_CONS_MAJOR, 13)), "/dev/cons13"},
  {"/dev/cons14", BRACK(FHDEV(DEV_CONS_MAJOR, 14)), "/dev/cons14"},
  {"/dev/cons15", BRACK(FHDEV(DEV_CONS_MAJOR, 15)), "/dev/cons15"},
  {"/dev/cons16", BRACK(FHDEV(DEV_CONS_MAJOR, 16)), "/dev/cons16"},
  {"/dev/cons17", BRACK(FHDEV(DEV_CONS_MAJOR, 17)), "/dev/cons17"},
  {"/dev/cons18", BRACK(FHDEV(DEV_CONS_MAJOR, 18)), "/dev/cons18"},
  {"/dev/cons19", BRACK(FHDEV(DEV_CONS_MAJOR, 19)), "/dev/cons19"},
  {"/dev/cons20", BRACK(FHDEV(DEV_CONS_MAJOR, 20)), "/dev/cons20"},
  {"/dev/cons21", BRACK(FHDEV(DEV_CONS_MAJOR, 21)), "/dev/cons21"},
  {"/dev/cons22", BRACK(FHDEV(DEV_CONS_MAJOR, 22)), "/dev/cons22"},
  {"/dev/cons23", BRACK(FHDEV(DEV_CONS_MAJOR, 23)), "/dev/cons23"},
  {"/dev/cons24", BRACK(FHDEV(DEV_CONS_MAJOR, 24)), "/dev/cons24"},
  {"/dev/cons25", BRACK(FHDEV(DEV_CONS_MAJOR, 25)), "/dev/cons25"},
  {"/dev/cons26", BRACK(FHDEV(DEV_CONS_MAJOR, 26)), "/dev/cons26"},
  {"/dev/cons27", BRACK(FHDEV(DEV_CONS_MAJOR, 27)), "/dev/cons27"},
  {"/dev/cons28", BRACK(FHDEV(DEV_CONS_MAJOR, 28)), "/dev/cons28"},
  {"/dev/cons29", BRACK(FHDEV(DEV_CONS_MAJOR, 29)), "/dev/cons29"},
  {"/dev/cons30", BRACK(FHDEV(DEV_CONS_MAJOR, 30)), "/dev/cons30"},
  {"/dev/cons31", BRACK(FHDEV(DEV_CONS_MAJOR, 31)), "/dev/cons31"},
  {"/dev/cons32", BRACK(FHDEV(DEV_CONS_MAJOR, 32)), "/dev/cons32"},
  {"/dev/cons33", BRACK(FHDEV(DEV_CONS_MAJOR, 33)), "/dev/cons33"},
  {"/dev/cons34", BRACK(FHDEV(DEV_CONS_MAJOR, 34)), "/dev/cons34"},
  {"/dev/cons35", BRACK(FHDEV(DEV_CONS_MAJOR, 35)), "/dev/cons35"},
  {"/dev/cons36", BRACK(FHDEV(DEV_CONS_MAJOR, 36)), "/dev/cons36"},
  {"/dev/cons37", BRACK(FHDEV(DEV_CONS_MAJOR, 37)), "/dev/cons37"},
  {"/dev/cons38", BRACK(FHDEV(DEV_CONS_MAJOR, 38)), "/dev/cons38"},
  {"/dev/cons39", BRACK(FHDEV(DEV_CONS_MAJOR, 39)), "/dev/cons39"},
  {"/dev/cons40", BRACK(FHDEV(DEV_CONS_MAJOR, 40)), "/dev/cons40"},
  {"/dev/cons41", BRACK(FHDEV(DEV_CONS_MAJOR, 41)), "/dev/cons41"},
  {"/dev/cons42", BRACK(FHDEV(DEV_CONS_MAJOR, 42)), "/dev/cons42"},
  {"/dev/cons43", BRACK(FHDEV(DEV_CONS_MAJOR, 43)), "/dev/cons43"},
  {"/dev/cons44", BRACK(FHDEV(DEV_CONS_MAJOR, 44)), "/dev/cons44"},
  {"/dev/cons45", BRACK(FHDEV(DEV_CONS_MAJOR, 45)), "/dev/cons45"},
  {"/dev/cons46", BRACK(FHDEV(DEV_CONS_MAJOR, 46)), "/dev/cons46"},
  {"/dev/cons47", BRACK(FHDEV(DEV_CONS_MAJOR, 47)), "/dev/cons47"},
  {"/dev/cons48", BRACK(FHDEV(DEV_CONS_MAJOR, 48)), "/dev/cons48"},
  {"/dev/cons49", BRACK(FHDEV(DEV_CONS_MAJOR, 49)), "/dev/cons49"},
  {"/dev/cons50", BRACK(FHDEV(DEV_CONS_MAJOR, 50)), "/dev/cons50"},
  {"/dev/cons51", BRACK(FHDEV(DEV_CONS_MAJOR, 51)), "/dev/cons51"},
  {"/dev/cons52", BRACK(FHDEV(DEV_CONS_MAJOR, 52)), "/dev/cons52"},
  {"/dev/cons53", BRACK(FHDEV(DEV_CONS_MAJOR, 53)), "/dev/cons53"},
  {"/dev/cons54", BRACK(FHDEV(DEV_CONS_MAJOR, 54)), "/dev/cons54"},
  {"/dev/cons55", BRACK(FHDEV(DEV_CONS_MAJOR, 55)), "/dev/cons55"},
  {"/dev/cons56", BRACK(FHDEV(DEV_CONS_MAJOR, 56)), "/dev/cons56"},
  {"/dev/cons57", BRACK(FHDEV(DEV_CONS_MAJOR, 57)), "/dev/cons57"},
  {"/dev/cons58", BRACK(FHDEV(DEV_CONS_MAJOR, 58)), "/dev/cons58"},
  {"/dev/cons59", BRACK(FHDEV(DEV_CONS_MAJOR, 59)), "/dev/cons59"},
  {"/dev/cons60", BRACK(FHDEV(DEV_CONS_MAJOR, 60)), "/dev/cons60"},
  {"/dev/cons61", BRACK(FHDEV(DEV_CONS_MAJOR, 61)), "/dev/cons61"},
  {"/dev/cons62", BRACK(FHDEV(DEV_CONS_MAJOR, 62)), "/dev/cons62"},
  {"/dev/cons63", BRACK(FHDEV(DEV_CONS_MAJOR, 63)), "/dev/cons63"},
  {"/dev/console", BRACK(FH_CONSOLE), "/dev/console"},
d157 17
a173 17
  {"/dev/fd0", BRACK(FHDEV(DEV_FLOPPY_MAJOR, 0)), "\\Device\\Floppy0"},
  {"/dev/fd1", BRACK(FHDEV(DEV_FLOPPY_MAJOR, 1)), "\\Device\\Floppy1"},
  {"/dev/fd2", BRACK(FHDEV(DEV_FLOPPY_MAJOR, 2)), "\\Device\\Floppy2"},
  {"/dev/fd3", BRACK(FHDEV(DEV_FLOPPY_MAJOR, 3)), "\\Device\\Floppy3"},
  {"/dev/fd4", BRACK(FHDEV(DEV_FLOPPY_MAJOR, 4)), "\\Device\\Floppy4"},
  {"/dev/fd5", BRACK(FHDEV(DEV_FLOPPY_MAJOR, 5)), "\\Device\\Floppy5"},
  {"/dev/fd6", BRACK(FHDEV(DEV_FLOPPY_MAJOR, 6)), "\\Device\\Floppy6"},
  {"/dev/fd7", BRACK(FHDEV(DEV_FLOPPY_MAJOR, 7)), "\\Device\\Floppy7"},
  {"/dev/fd8", BRACK(FHDEV(DEV_FLOPPY_MAJOR, 8)), "\\Device\\Floppy8"},
  {"/dev/fd9", BRACK(FHDEV(DEV_FLOPPY_MAJOR, 9)), "\\Device\\Floppy9"},
  {"/dev/fd10", BRACK(FHDEV(DEV_FLOPPY_MAJOR, 10)), "\\Device\\Floppy10"},
  {"/dev/fd11", BRACK(FHDEV(DEV_FLOPPY_MAJOR, 11)), "\\Device\\Floppy11"},
  {"/dev/fd12", BRACK(FHDEV(DEV_FLOPPY_MAJOR, 12)), "\\Device\\Floppy12"},
  {"/dev/fd13", BRACK(FHDEV(DEV_FLOPPY_MAJOR, 13)), "\\Device\\Floppy13"},
  {"/dev/fd14", BRACK(FHDEV(DEV_FLOPPY_MAJOR, 14)), "\\Device\\Floppy14"},
  {"/dev/fd15", BRACK(FHDEV(DEV_FLOPPY_MAJOR, 15)), "\\Device\\Floppy15"},
  {"/dev/fifo", BRACK(FH_FIFO), "/dev/fifo", true},
d178 128
a305 128
  {"/dev/nst0", BRACK(FHDEV(DEV_TAPE_MAJOR, 128)), "\\Device\\Tape0"},
  {"/dev/nst1", BRACK(FHDEV(DEV_TAPE_MAJOR, 129)), "\\Device\\Tape1"},
  {"/dev/nst2", BRACK(FHDEV(DEV_TAPE_MAJOR, 130)), "\\Device\\Tape2"},
  {"/dev/nst3", BRACK(FHDEV(DEV_TAPE_MAJOR, 131)), "\\Device\\Tape3"},
  {"/dev/nst4", BRACK(FHDEV(DEV_TAPE_MAJOR, 132)), "\\Device\\Tape4"},
  {"/dev/nst5", BRACK(FHDEV(DEV_TAPE_MAJOR, 133)), "\\Device\\Tape5"},
  {"/dev/nst6", BRACK(FHDEV(DEV_TAPE_MAJOR, 134)), "\\Device\\Tape6"},
  {"/dev/nst7", BRACK(FHDEV(DEV_TAPE_MAJOR, 135)), "\\Device\\Tape7"},
  {"/dev/nst8", BRACK(FHDEV(DEV_TAPE_MAJOR, 136)), "\\Device\\Tape8"},
  {"/dev/nst9", BRACK(FHDEV(DEV_TAPE_MAJOR, 137)), "\\Device\\Tape9"},
  {"/dev/nst10", BRACK(FHDEV(DEV_TAPE_MAJOR, 138)), "\\Device\\Tape10"},
  {"/dev/nst11", BRACK(FHDEV(DEV_TAPE_MAJOR, 139)), "\\Device\\Tape11"},
  {"/dev/nst12", BRACK(FHDEV(DEV_TAPE_MAJOR, 140)), "\\Device\\Tape12"},
  {"/dev/nst13", BRACK(FHDEV(DEV_TAPE_MAJOR, 141)), "\\Device\\Tape13"},
  {"/dev/nst14", BRACK(FHDEV(DEV_TAPE_MAJOR, 142)), "\\Device\\Tape14"},
  {"/dev/nst15", BRACK(FHDEV(DEV_TAPE_MAJOR, 143)), "\\Device\\Tape15"},
  {"/dev/nst16", BRACK(FHDEV(DEV_TAPE_MAJOR, 144)), "\\Device\\Tape16"},
  {"/dev/nst17", BRACK(FHDEV(DEV_TAPE_MAJOR, 145)), "\\Device\\Tape17"},
  {"/dev/nst18", BRACK(FHDEV(DEV_TAPE_MAJOR, 146)), "\\Device\\Tape18"},
  {"/dev/nst19", BRACK(FHDEV(DEV_TAPE_MAJOR, 147)), "\\Device\\Tape19"},
  {"/dev/nst20", BRACK(FHDEV(DEV_TAPE_MAJOR, 148)), "\\Device\\Tape20"},
  {"/dev/nst21", BRACK(FHDEV(DEV_TAPE_MAJOR, 149)), "\\Device\\Tape21"},
  {"/dev/nst22", BRACK(FHDEV(DEV_TAPE_MAJOR, 150)), "\\Device\\Tape22"},
  {"/dev/nst23", BRACK(FHDEV(DEV_TAPE_MAJOR, 151)), "\\Device\\Tape23"},
  {"/dev/nst24", BRACK(FHDEV(DEV_TAPE_MAJOR, 152)), "\\Device\\Tape24"},
  {"/dev/nst25", BRACK(FHDEV(DEV_TAPE_MAJOR, 153)), "\\Device\\Tape25"},
  {"/dev/nst26", BRACK(FHDEV(DEV_TAPE_MAJOR, 154)), "\\Device\\Tape26"},
  {"/dev/nst27", BRACK(FHDEV(DEV_TAPE_MAJOR, 155)), "\\Device\\Tape27"},
  {"/dev/nst28", BRACK(FHDEV(DEV_TAPE_MAJOR, 156)), "\\Device\\Tape28"},
  {"/dev/nst29", BRACK(FHDEV(DEV_TAPE_MAJOR, 157)), "\\Device\\Tape29"},
  {"/dev/nst30", BRACK(FHDEV(DEV_TAPE_MAJOR, 158)), "\\Device\\Tape30"},
  {"/dev/nst31", BRACK(FHDEV(DEV_TAPE_MAJOR, 159)), "\\Device\\Tape31"},
  {"/dev/nst32", BRACK(FHDEV(DEV_TAPE_MAJOR, 160)), "\\Device\\Tape32"},
  {"/dev/nst33", BRACK(FHDEV(DEV_TAPE_MAJOR, 161)), "\\Device\\Tape33"},
  {"/dev/nst34", BRACK(FHDEV(DEV_TAPE_MAJOR, 162)), "\\Device\\Tape34"},
  {"/dev/nst35", BRACK(FHDEV(DEV_TAPE_MAJOR, 163)), "\\Device\\Tape35"},
  {"/dev/nst36", BRACK(FHDEV(DEV_TAPE_MAJOR, 164)), "\\Device\\Tape36"},
  {"/dev/nst37", BRACK(FHDEV(DEV_TAPE_MAJOR, 165)), "\\Device\\Tape37"},
  {"/dev/nst38", BRACK(FHDEV(DEV_TAPE_MAJOR, 166)), "\\Device\\Tape38"},
  {"/dev/nst39", BRACK(FHDEV(DEV_TAPE_MAJOR, 167)), "\\Device\\Tape39"},
  {"/dev/nst40", BRACK(FHDEV(DEV_TAPE_MAJOR, 168)), "\\Device\\Tape40"},
  {"/dev/nst41", BRACK(FHDEV(DEV_TAPE_MAJOR, 169)), "\\Device\\Tape41"},
  {"/dev/nst42", BRACK(FHDEV(DEV_TAPE_MAJOR, 170)), "\\Device\\Tape42"},
  {"/dev/nst43", BRACK(FHDEV(DEV_TAPE_MAJOR, 171)), "\\Device\\Tape43"},
  {"/dev/nst44", BRACK(FHDEV(DEV_TAPE_MAJOR, 172)), "\\Device\\Tape44"},
  {"/dev/nst45", BRACK(FHDEV(DEV_TAPE_MAJOR, 173)), "\\Device\\Tape45"},
  {"/dev/nst46", BRACK(FHDEV(DEV_TAPE_MAJOR, 174)), "\\Device\\Tape46"},
  {"/dev/nst47", BRACK(FHDEV(DEV_TAPE_MAJOR, 175)), "\\Device\\Tape47"},
  {"/dev/nst48", BRACK(FHDEV(DEV_TAPE_MAJOR, 176)), "\\Device\\Tape48"},
  {"/dev/nst49", BRACK(FHDEV(DEV_TAPE_MAJOR, 177)), "\\Device\\Tape49"},
  {"/dev/nst50", BRACK(FHDEV(DEV_TAPE_MAJOR, 178)), "\\Device\\Tape50"},
  {"/dev/nst51", BRACK(FHDEV(DEV_TAPE_MAJOR, 179)), "\\Device\\Tape51"},
  {"/dev/nst52", BRACK(FHDEV(DEV_TAPE_MAJOR, 180)), "\\Device\\Tape52"},
  {"/dev/nst53", BRACK(FHDEV(DEV_TAPE_MAJOR, 181)), "\\Device\\Tape53"},
  {"/dev/nst54", BRACK(FHDEV(DEV_TAPE_MAJOR, 182)), "\\Device\\Tape54"},
  {"/dev/nst55", BRACK(FHDEV(DEV_TAPE_MAJOR, 183)), "\\Device\\Tape55"},
  {"/dev/nst56", BRACK(FHDEV(DEV_TAPE_MAJOR, 184)), "\\Device\\Tape56"},
  {"/dev/nst57", BRACK(FHDEV(DEV_TAPE_MAJOR, 185)), "\\Device\\Tape57"},
  {"/dev/nst58", BRACK(FHDEV(DEV_TAPE_MAJOR, 186)), "\\Device\\Tape58"},
  {"/dev/nst59", BRACK(FHDEV(DEV_TAPE_MAJOR, 187)), "\\Device\\Tape59"},
  {"/dev/nst60", BRACK(FHDEV(DEV_TAPE_MAJOR, 188)), "\\Device\\Tape60"},
  {"/dev/nst61", BRACK(FHDEV(DEV_TAPE_MAJOR, 189)), "\\Device\\Tape61"},
  {"/dev/nst62", BRACK(FHDEV(DEV_TAPE_MAJOR, 190)), "\\Device\\Tape62"},
  {"/dev/nst63", BRACK(FHDEV(DEV_TAPE_MAJOR, 191)), "\\Device\\Tape63"},
  {"/dev/nst64", BRACK(FHDEV(DEV_TAPE_MAJOR, 192)), "\\Device\\Tape64"},
  {"/dev/nst65", BRACK(FHDEV(DEV_TAPE_MAJOR, 193)), "\\Device\\Tape65"},
  {"/dev/nst66", BRACK(FHDEV(DEV_TAPE_MAJOR, 194)), "\\Device\\Tape66"},
  {"/dev/nst67", BRACK(FHDEV(DEV_TAPE_MAJOR, 195)), "\\Device\\Tape67"},
  {"/dev/nst68", BRACK(FHDEV(DEV_TAPE_MAJOR, 196)), "\\Device\\Tape68"},
  {"/dev/nst69", BRACK(FHDEV(DEV_TAPE_MAJOR, 197)), "\\Device\\Tape69"},
  {"/dev/nst70", BRACK(FHDEV(DEV_TAPE_MAJOR, 198)), "\\Device\\Tape70"},
  {"/dev/nst71", BRACK(FHDEV(DEV_TAPE_MAJOR, 199)), "\\Device\\Tape71"},
  {"/dev/nst72", BRACK(FHDEV(DEV_TAPE_MAJOR, 200)), "\\Device\\Tape72"},
  {"/dev/nst73", BRACK(FHDEV(DEV_TAPE_MAJOR, 201)), "\\Device\\Tape73"},
  {"/dev/nst74", BRACK(FHDEV(DEV_TAPE_MAJOR, 202)), "\\Device\\Tape74"},
  {"/dev/nst75", BRACK(FHDEV(DEV_TAPE_MAJOR, 203)), "\\Device\\Tape75"},
  {"/dev/nst76", BRACK(FHDEV(DEV_TAPE_MAJOR, 204)), "\\Device\\Tape76"},
  {"/dev/nst77", BRACK(FHDEV(DEV_TAPE_MAJOR, 205)), "\\Device\\Tape77"},
  {"/dev/nst78", BRACK(FHDEV(DEV_TAPE_MAJOR, 206)), "\\Device\\Tape78"},
  {"/dev/nst79", BRACK(FHDEV(DEV_TAPE_MAJOR, 207)), "\\Device\\Tape79"},
  {"/dev/nst80", BRACK(FHDEV(DEV_TAPE_MAJOR, 208)), "\\Device\\Tape80"},
  {"/dev/nst81", BRACK(FHDEV(DEV_TAPE_MAJOR, 209)), "\\Device\\Tape81"},
  {"/dev/nst82", BRACK(FHDEV(DEV_TAPE_MAJOR, 210)), "\\Device\\Tape82"},
  {"/dev/nst83", BRACK(FHDEV(DEV_TAPE_MAJOR, 211)), "\\Device\\Tape83"},
  {"/dev/nst84", BRACK(FHDEV(DEV_TAPE_MAJOR, 212)), "\\Device\\Tape84"},
  {"/dev/nst85", BRACK(FHDEV(DEV_TAPE_MAJOR, 213)), "\\Device\\Tape85"},
  {"/dev/nst86", BRACK(FHDEV(DEV_TAPE_MAJOR, 214)), "\\Device\\Tape86"},
  {"/dev/nst87", BRACK(FHDEV(DEV_TAPE_MAJOR, 215)), "\\Device\\Tape87"},
  {"/dev/nst88", BRACK(FHDEV(DEV_TAPE_MAJOR, 216)), "\\Device\\Tape88"},
  {"/dev/nst89", BRACK(FHDEV(DEV_TAPE_MAJOR, 217)), "\\Device\\Tape89"},
  {"/dev/nst90", BRACK(FHDEV(DEV_TAPE_MAJOR, 218)), "\\Device\\Tape90"},
  {"/dev/nst91", BRACK(FHDEV(DEV_TAPE_MAJOR, 219)), "\\Device\\Tape91"},
  {"/dev/nst92", BRACK(FHDEV(DEV_TAPE_MAJOR, 220)), "\\Device\\Tape92"},
  {"/dev/nst93", BRACK(FHDEV(DEV_TAPE_MAJOR, 221)), "\\Device\\Tape93"},
  {"/dev/nst94", BRACK(FHDEV(DEV_TAPE_MAJOR, 222)), "\\Device\\Tape94"},
  {"/dev/nst95", BRACK(FHDEV(DEV_TAPE_MAJOR, 223)), "\\Device\\Tape95"},
  {"/dev/nst96", BRACK(FHDEV(DEV_TAPE_MAJOR, 224)), "\\Device\\Tape96"},
  {"/dev/nst97", BRACK(FHDEV(DEV_TAPE_MAJOR, 225)), "\\Device\\Tape97"},
  {"/dev/nst98", BRACK(FHDEV(DEV_TAPE_MAJOR, 226)), "\\Device\\Tape98"},
  {"/dev/nst99", BRACK(FHDEV(DEV_TAPE_MAJOR, 227)), "\\Device\\Tape99"},
  {"/dev/nst100", BRACK(FHDEV(DEV_TAPE_MAJOR, 228)), "\\Device\\Tape100"},
  {"/dev/nst101", BRACK(FHDEV(DEV_TAPE_MAJOR, 229)), "\\Device\\Tape101"},
  {"/dev/nst102", BRACK(FHDEV(DEV_TAPE_MAJOR, 230)), "\\Device\\Tape102"},
  {"/dev/nst103", BRACK(FHDEV(DEV_TAPE_MAJOR, 231)), "\\Device\\Tape103"},
  {"/dev/nst104", BRACK(FHDEV(DEV_TAPE_MAJOR, 232)), "\\Device\\Tape104"},
  {"/dev/nst105", BRACK(FHDEV(DEV_TAPE_MAJOR, 233)), "\\Device\\Tape105"},
  {"/dev/nst106", BRACK(FHDEV(DEV_TAPE_MAJOR, 234)), "\\Device\\Tape106"},
  {"/dev/nst107", BRACK(FHDEV(DEV_TAPE_MAJOR, 235)), "\\Device\\Tape107"},
  {"/dev/nst108", BRACK(FHDEV(DEV_TAPE_MAJOR, 236)), "\\Device\\Tape108"},
  {"/dev/nst109", BRACK(FHDEV(DEV_TAPE_MAJOR, 237)), "\\Device\\Tape109"},
  {"/dev/nst110", BRACK(FHDEV(DEV_TAPE_MAJOR, 238)), "\\Device\\Tape110"},
  {"/dev/nst111", BRACK(FHDEV(DEV_TAPE_MAJOR, 239)), "\\Device\\Tape111"},
  {"/dev/nst112", BRACK(FHDEV(DEV_TAPE_MAJOR, 240)), "\\Device\\Tape112"},
  {"/dev/nst113", BRACK(FHDEV(DEV_TAPE_MAJOR, 241)), "\\Device\\Tape113"},
  {"/dev/nst114", BRACK(FHDEV(DEV_TAPE_MAJOR, 242)), "\\Device\\Tape114"},
  {"/dev/nst115", BRACK(FHDEV(DEV_TAPE_MAJOR, 243)), "\\Device\\Tape115"},
  {"/dev/nst116", BRACK(FHDEV(DEV_TAPE_MAJOR, 244)), "\\Device\\Tape116"},
  {"/dev/nst117", BRACK(FHDEV(DEV_TAPE_MAJOR, 245)), "\\Device\\Tape117"},
  {"/dev/nst118", BRACK(FHDEV(DEV_TAPE_MAJOR, 246)), "\\Device\\Tape118"},
  {"/dev/nst119", BRACK(FHDEV(DEV_TAPE_MAJOR, 247)), "\\Device\\Tape119"},
  {"/dev/nst120", BRACK(FHDEV(DEV_TAPE_MAJOR, 248)), "\\Device\\Tape120"},
  {"/dev/nst121", BRACK(FHDEV(DEV_TAPE_MAJOR, 249)), "\\Device\\Tape121"},
  {"/dev/nst122", BRACK(FHDEV(DEV_TAPE_MAJOR, 250)), "\\Device\\Tape122"},
  {"/dev/nst123", BRACK(FHDEV(DEV_TAPE_MAJOR, 251)), "\\Device\\Tape123"},
  {"/dev/nst124", BRACK(FHDEV(DEV_TAPE_MAJOR, 252)), "\\Device\\Tape124"},
  {"/dev/nst125", BRACK(FHDEV(DEV_TAPE_MAJOR, 253)), "\\Device\\Tape125"},
  {"/dev/nst126", BRACK(FHDEV(DEV_TAPE_MAJOR, 254)), "\\Device\\Tape126"},
  {"/dev/nst127", BRACK(FHDEV(DEV_TAPE_MAJOR, 255)), "\\Device\\Tape127"},
d307 1
a307 1
  {"/dev/pipe", BRACK(FH_PIPE), "/dev/pipe", true},
d310 128
a437 128
  {"/dev/pty0", BRACK(FHDEV(DEV_PTYS_MAJOR, 0)), "/dev/pty0"},
  {"/dev/pty1", BRACK(FHDEV(DEV_PTYS_MAJOR, 1)), "/dev/pty1"},
  {"/dev/pty2", BRACK(FHDEV(DEV_PTYS_MAJOR, 2)), "/dev/pty2"},
  {"/dev/pty3", BRACK(FHDEV(DEV_PTYS_MAJOR, 3)), "/dev/pty3"},
  {"/dev/pty4", BRACK(FHDEV(DEV_PTYS_MAJOR, 4)), "/dev/pty4"},
  {"/dev/pty5", BRACK(FHDEV(DEV_PTYS_MAJOR, 5)), "/dev/pty5"},
  {"/dev/pty6", BRACK(FHDEV(DEV_PTYS_MAJOR, 6)), "/dev/pty6"},
  {"/dev/pty7", BRACK(FHDEV(DEV_PTYS_MAJOR, 7)), "/dev/pty7"},
  {"/dev/pty8", BRACK(FHDEV(DEV_PTYS_MAJOR, 8)), "/dev/pty8"},
  {"/dev/pty9", BRACK(FHDEV(DEV_PTYS_MAJOR, 9)), "/dev/pty9"},
  {"/dev/pty10", BRACK(FHDEV(DEV_PTYS_MAJOR, 10)), "/dev/pty10"},
  {"/dev/pty11", BRACK(FHDEV(DEV_PTYS_MAJOR, 11)), "/dev/pty11"},
  {"/dev/pty12", BRACK(FHDEV(DEV_PTYS_MAJOR, 12)), "/dev/pty12"},
  {"/dev/pty13", BRACK(FHDEV(DEV_PTYS_MAJOR, 13)), "/dev/pty13"},
  {"/dev/pty14", BRACK(FHDEV(DEV_PTYS_MAJOR, 14)), "/dev/pty14"},
  {"/dev/pty15", BRACK(FHDEV(DEV_PTYS_MAJOR, 15)), "/dev/pty15"},
  {"/dev/pty16", BRACK(FHDEV(DEV_PTYS_MAJOR, 16)), "/dev/pty16"},
  {"/dev/pty17", BRACK(FHDEV(DEV_PTYS_MAJOR, 17)), "/dev/pty17"},
  {"/dev/pty18", BRACK(FHDEV(DEV_PTYS_MAJOR, 18)), "/dev/pty18"},
  {"/dev/pty19", BRACK(FHDEV(DEV_PTYS_MAJOR, 19)), "/dev/pty19"},
  {"/dev/pty20", BRACK(FHDEV(DEV_PTYS_MAJOR, 20)), "/dev/pty20"},
  {"/dev/pty21", BRACK(FHDEV(DEV_PTYS_MAJOR, 21)), "/dev/pty21"},
  {"/dev/pty22", BRACK(FHDEV(DEV_PTYS_MAJOR, 22)), "/dev/pty22"},
  {"/dev/pty23", BRACK(FHDEV(DEV_PTYS_MAJOR, 23)), "/dev/pty23"},
  {"/dev/pty24", BRACK(FHDEV(DEV_PTYS_MAJOR, 24)), "/dev/pty24"},
  {"/dev/pty25", BRACK(FHDEV(DEV_PTYS_MAJOR, 25)), "/dev/pty25"},
  {"/dev/pty26", BRACK(FHDEV(DEV_PTYS_MAJOR, 26)), "/dev/pty26"},
  {"/dev/pty27", BRACK(FHDEV(DEV_PTYS_MAJOR, 27)), "/dev/pty27"},
  {"/dev/pty28", BRACK(FHDEV(DEV_PTYS_MAJOR, 28)), "/dev/pty28"},
  {"/dev/pty29", BRACK(FHDEV(DEV_PTYS_MAJOR, 29)), "/dev/pty29"},
  {"/dev/pty30", BRACK(FHDEV(DEV_PTYS_MAJOR, 30)), "/dev/pty30"},
  {"/dev/pty31", BRACK(FHDEV(DEV_PTYS_MAJOR, 31)), "/dev/pty31"},
  {"/dev/pty32", BRACK(FHDEV(DEV_PTYS_MAJOR, 32)), "/dev/pty32"},
  {"/dev/pty33", BRACK(FHDEV(DEV_PTYS_MAJOR, 33)), "/dev/pty33"},
  {"/dev/pty34", BRACK(FHDEV(DEV_PTYS_MAJOR, 34)), "/dev/pty34"},
  {"/dev/pty35", BRACK(FHDEV(DEV_PTYS_MAJOR, 35)), "/dev/pty35"},
  {"/dev/pty36", BRACK(FHDEV(DEV_PTYS_MAJOR, 36)), "/dev/pty36"},
  {"/dev/pty37", BRACK(FHDEV(DEV_PTYS_MAJOR, 37)), "/dev/pty37"},
  {"/dev/pty38", BRACK(FHDEV(DEV_PTYS_MAJOR, 38)), "/dev/pty38"},
  {"/dev/pty39", BRACK(FHDEV(DEV_PTYS_MAJOR, 39)), "/dev/pty39"},
  {"/dev/pty40", BRACK(FHDEV(DEV_PTYS_MAJOR, 40)), "/dev/pty40"},
  {"/dev/pty41", BRACK(FHDEV(DEV_PTYS_MAJOR, 41)), "/dev/pty41"},
  {"/dev/pty42", BRACK(FHDEV(DEV_PTYS_MAJOR, 42)), "/dev/pty42"},
  {"/dev/pty43", BRACK(FHDEV(DEV_PTYS_MAJOR, 43)), "/dev/pty43"},
  {"/dev/pty44", BRACK(FHDEV(DEV_PTYS_MAJOR, 44)), "/dev/pty44"},
  {"/dev/pty45", BRACK(FHDEV(DEV_PTYS_MAJOR, 45)), "/dev/pty45"},
  {"/dev/pty46", BRACK(FHDEV(DEV_PTYS_MAJOR, 46)), "/dev/pty46"},
  {"/dev/pty47", BRACK(FHDEV(DEV_PTYS_MAJOR, 47)), "/dev/pty47"},
  {"/dev/pty48", BRACK(FHDEV(DEV_PTYS_MAJOR, 48)), "/dev/pty48"},
  {"/dev/pty49", BRACK(FHDEV(DEV_PTYS_MAJOR, 49)), "/dev/pty49"},
  {"/dev/pty50", BRACK(FHDEV(DEV_PTYS_MAJOR, 50)), "/dev/pty50"},
  {"/dev/pty51", BRACK(FHDEV(DEV_PTYS_MAJOR, 51)), "/dev/pty51"},
  {"/dev/pty52", BRACK(FHDEV(DEV_PTYS_MAJOR, 52)), "/dev/pty52"},
  {"/dev/pty53", BRACK(FHDEV(DEV_PTYS_MAJOR, 53)), "/dev/pty53"},
  {"/dev/pty54", BRACK(FHDEV(DEV_PTYS_MAJOR, 54)), "/dev/pty54"},
  {"/dev/pty55", BRACK(FHDEV(DEV_PTYS_MAJOR, 55)), "/dev/pty55"},
  {"/dev/pty56", BRACK(FHDEV(DEV_PTYS_MAJOR, 56)), "/dev/pty56"},
  {"/dev/pty57", BRACK(FHDEV(DEV_PTYS_MAJOR, 57)), "/dev/pty57"},
  {"/dev/pty58", BRACK(FHDEV(DEV_PTYS_MAJOR, 58)), "/dev/pty58"},
  {"/dev/pty59", BRACK(FHDEV(DEV_PTYS_MAJOR, 59)), "/dev/pty59"},
  {"/dev/pty60", BRACK(FHDEV(DEV_PTYS_MAJOR, 60)), "/dev/pty60"},
  {"/dev/pty61", BRACK(FHDEV(DEV_PTYS_MAJOR, 61)), "/dev/pty61"},
  {"/dev/pty62", BRACK(FHDEV(DEV_PTYS_MAJOR, 62)), "/dev/pty62"},
  {"/dev/pty63", BRACK(FHDEV(DEV_PTYS_MAJOR, 63)), "/dev/pty63"},
  {"/dev/ptym0", BRACK(FHDEV(DEV_PTYM_MAJOR, 0)), "/dev/ptym0", true},
  {"/dev/ptym1", BRACK(FHDEV(DEV_PTYM_MAJOR, 1)), "/dev/ptym1", true},
  {"/dev/ptym2", BRACK(FHDEV(DEV_PTYM_MAJOR, 2)), "/dev/ptym2", true},
  {"/dev/ptym3", BRACK(FHDEV(DEV_PTYM_MAJOR, 3)), "/dev/ptym3", true},
  {"/dev/ptym4", BRACK(FHDEV(DEV_PTYM_MAJOR, 4)), "/dev/ptym4", true},
  {"/dev/ptym5", BRACK(FHDEV(DEV_PTYM_MAJOR, 5)), "/dev/ptym5", true},
  {"/dev/ptym6", BRACK(FHDEV(DEV_PTYM_MAJOR, 6)), "/dev/ptym6", true},
  {"/dev/ptym7", BRACK(FHDEV(DEV_PTYM_MAJOR, 7)), "/dev/ptym7", true},
  {"/dev/ptym8", BRACK(FHDEV(DEV_PTYM_MAJOR, 8)), "/dev/ptym8", true},
  {"/dev/ptym9", BRACK(FHDEV(DEV_PTYM_MAJOR, 9)), "/dev/ptym9", true},
  {"/dev/ptym10", BRACK(FHDEV(DEV_PTYM_MAJOR, 10)), "/dev/ptym10", true},
  {"/dev/ptym11", BRACK(FHDEV(DEV_PTYM_MAJOR, 11)), "/dev/ptym11", true},
  {"/dev/ptym12", BRACK(FHDEV(DEV_PTYM_MAJOR, 12)), "/dev/ptym12", true},
  {"/dev/ptym13", BRACK(FHDEV(DEV_PTYM_MAJOR, 13)), "/dev/ptym13", true},
  {"/dev/ptym14", BRACK(FHDEV(DEV_PTYM_MAJOR, 14)), "/dev/ptym14", true},
  {"/dev/ptym15", BRACK(FHDEV(DEV_PTYM_MAJOR, 15)), "/dev/ptym15", true},
  {"/dev/ptym16", BRACK(FHDEV(DEV_PTYM_MAJOR, 16)), "/dev/ptym16", true},
  {"/dev/ptym17", BRACK(FHDEV(DEV_PTYM_MAJOR, 17)), "/dev/ptym17", true},
  {"/dev/ptym18", BRACK(FHDEV(DEV_PTYM_MAJOR, 18)), "/dev/ptym18", true},
  {"/dev/ptym19", BRACK(FHDEV(DEV_PTYM_MAJOR, 19)), "/dev/ptym19", true},
  {"/dev/ptym20", BRACK(FHDEV(DEV_PTYM_MAJOR, 20)), "/dev/ptym20", true},
  {"/dev/ptym21", BRACK(FHDEV(DEV_PTYM_MAJOR, 21)), "/dev/ptym21", true},
  {"/dev/ptym22", BRACK(FHDEV(DEV_PTYM_MAJOR, 22)), "/dev/ptym22", true},
  {"/dev/ptym23", BRACK(FHDEV(DEV_PTYM_MAJOR, 23)), "/dev/ptym23", true},
  {"/dev/ptym24", BRACK(FHDEV(DEV_PTYM_MAJOR, 24)), "/dev/ptym24", true},
  {"/dev/ptym25", BRACK(FHDEV(DEV_PTYM_MAJOR, 25)), "/dev/ptym25", true},
  {"/dev/ptym26", BRACK(FHDEV(DEV_PTYM_MAJOR, 26)), "/dev/ptym26", true},
  {"/dev/ptym27", BRACK(FHDEV(DEV_PTYM_MAJOR, 27)), "/dev/ptym27", true},
  {"/dev/ptym28", BRACK(FHDEV(DEV_PTYM_MAJOR, 28)), "/dev/ptym28", true},
  {"/dev/ptym29", BRACK(FHDEV(DEV_PTYM_MAJOR, 29)), "/dev/ptym29", true},
  {"/dev/ptym30", BRACK(FHDEV(DEV_PTYM_MAJOR, 30)), "/dev/ptym30", true},
  {"/dev/ptym31", BRACK(FHDEV(DEV_PTYM_MAJOR, 31)), "/dev/ptym31", true},
  {"/dev/ptym32", BRACK(FHDEV(DEV_PTYM_MAJOR, 32)), "/dev/ptym32", true},
  {"/dev/ptym33", BRACK(FHDEV(DEV_PTYM_MAJOR, 33)), "/dev/ptym33", true},
  {"/dev/ptym34", BRACK(FHDEV(DEV_PTYM_MAJOR, 34)), "/dev/ptym34", true},
  {"/dev/ptym35", BRACK(FHDEV(DEV_PTYM_MAJOR, 35)), "/dev/ptym35", true},
  {"/dev/ptym36", BRACK(FHDEV(DEV_PTYM_MAJOR, 36)), "/dev/ptym36", true},
  {"/dev/ptym37", BRACK(FHDEV(DEV_PTYM_MAJOR, 37)), "/dev/ptym37", true},
  {"/dev/ptym38", BRACK(FHDEV(DEV_PTYM_MAJOR, 38)), "/dev/ptym38", true},
  {"/dev/ptym39", BRACK(FHDEV(DEV_PTYM_MAJOR, 39)), "/dev/ptym39", true},
  {"/dev/ptym40", BRACK(FHDEV(DEV_PTYM_MAJOR, 40)), "/dev/ptym40", true},
  {"/dev/ptym41", BRACK(FHDEV(DEV_PTYM_MAJOR, 41)), "/dev/ptym41", true},
  {"/dev/ptym42", BRACK(FHDEV(DEV_PTYM_MAJOR, 42)), "/dev/ptym42", true},
  {"/dev/ptym43", BRACK(FHDEV(DEV_PTYM_MAJOR, 43)), "/dev/ptym43", true},
  {"/dev/ptym44", BRACK(FHDEV(DEV_PTYM_MAJOR, 44)), "/dev/ptym44", true},
  {"/dev/ptym45", BRACK(FHDEV(DEV_PTYM_MAJOR, 45)), "/dev/ptym45", true},
  {"/dev/ptym46", BRACK(FHDEV(DEV_PTYM_MAJOR, 46)), "/dev/ptym46", true},
  {"/dev/ptym47", BRACK(FHDEV(DEV_PTYM_MAJOR, 47)), "/dev/ptym47", true},
  {"/dev/ptym48", BRACK(FHDEV(DEV_PTYM_MAJOR, 48)), "/dev/ptym48", true},
  {"/dev/ptym49", BRACK(FHDEV(DEV_PTYM_MAJOR, 49)), "/dev/ptym49", true},
  {"/dev/ptym50", BRACK(FHDEV(DEV_PTYM_MAJOR, 50)), "/dev/ptym50", true},
  {"/dev/ptym51", BRACK(FHDEV(DEV_PTYM_MAJOR, 51)), "/dev/ptym51", true},
  {"/dev/ptym52", BRACK(FHDEV(DEV_PTYM_MAJOR, 52)), "/dev/ptym52", true},
  {"/dev/ptym53", BRACK(FHDEV(DEV_PTYM_MAJOR, 53)), "/dev/ptym53", true},
  {"/dev/ptym54", BRACK(FHDEV(DEV_PTYM_MAJOR, 54)), "/dev/ptym54", true},
  {"/dev/ptym55", BRACK(FHDEV(DEV_PTYM_MAJOR, 55)), "/dev/ptym55", true},
  {"/dev/ptym56", BRACK(FHDEV(DEV_PTYM_MAJOR, 56)), "/dev/ptym56", true},
  {"/dev/ptym57", BRACK(FHDEV(DEV_PTYM_MAJOR, 57)), "/dev/ptym57", true},
  {"/dev/ptym58", BRACK(FHDEV(DEV_PTYM_MAJOR, 58)), "/dev/ptym58", true},
  {"/dev/ptym59", BRACK(FHDEV(DEV_PTYM_MAJOR, 59)), "/dev/ptym59", true},
  {"/dev/ptym60", BRACK(FHDEV(DEV_PTYM_MAJOR, 60)), "/dev/ptym60", true},
  {"/dev/ptym61", BRACK(FHDEV(DEV_PTYM_MAJOR, 61)), "/dev/ptym61", true},
  {"/dev/ptym62", BRACK(FHDEV(DEV_PTYM_MAJOR, 62)), "/dev/ptym62", true},
  {"/dev/ptym63", BRACK(FHDEV(DEV_PTYM_MAJOR, 63)), "/dev/ptym63", true},
d439 2208
a2646 2208
  {"/dev/scd0", BRACK(FHDEV(DEV_CDROM_MAJOR, 0)), "\\Device\\CdRom0"},
  {"/dev/scd1", BRACK(FHDEV(DEV_CDROM_MAJOR, 1)), "\\Device\\CdRom1"},
  {"/dev/scd2", BRACK(FHDEV(DEV_CDROM_MAJOR, 2)), "\\Device\\CdRom2"},
  {"/dev/scd3", BRACK(FHDEV(DEV_CDROM_MAJOR, 3)), "\\Device\\CdRom3"},
  {"/dev/scd4", BRACK(FHDEV(DEV_CDROM_MAJOR, 4)), "\\Device\\CdRom4"},
  {"/dev/scd5", BRACK(FHDEV(DEV_CDROM_MAJOR, 5)), "\\Device\\CdRom5"},
  {"/dev/scd6", BRACK(FHDEV(DEV_CDROM_MAJOR, 6)), "\\Device\\CdRom6"},
  {"/dev/scd7", BRACK(FHDEV(DEV_CDROM_MAJOR, 7)), "\\Device\\CdRom7"},
  {"/dev/scd8", BRACK(FHDEV(DEV_CDROM_MAJOR, 8)), "\\Device\\CdRom8"},
  {"/dev/scd9", BRACK(FHDEV(DEV_CDROM_MAJOR, 9)), "\\Device\\CdRom9"},
  {"/dev/scd10", BRACK(FHDEV(DEV_CDROM_MAJOR, 10)), "\\Device\\CdRom10"},
  {"/dev/scd11", BRACK(FHDEV(DEV_CDROM_MAJOR, 11)), "\\Device\\CdRom11"},
  {"/dev/scd12", BRACK(FHDEV(DEV_CDROM_MAJOR, 12)), "\\Device\\CdRom12"},
  {"/dev/scd13", BRACK(FHDEV(DEV_CDROM_MAJOR, 13)), "\\Device\\CdRom13"},
  {"/dev/scd14", BRACK(FHDEV(DEV_CDROM_MAJOR, 14)), "\\Device\\CdRom14"},
  {"/dev/scd15", BRACK(FHDEV(DEV_CDROM_MAJOR, 15)), "\\Device\\CdRom15"},
  {"/dev/sda", BRACK(FH_SDA), "\\Device\\Harddisk0\\Partition0"},
  {"/dev/sdb", BRACK(FH_SDB), "\\Device\\Harddisk1\\Partition0"},
  {"/dev/sdc", BRACK(FH_SDC), "\\Device\\Harddisk2\\Partition0"},
  {"/dev/sdd", BRACK(FH_SDD), "\\Device\\Harddisk3\\Partition0"},
  {"/dev/sde", BRACK(FH_SDE), "\\Device\\Harddisk4\\Partition0"},
  {"/dev/sdf", BRACK(FH_SDF), "\\Device\\Harddisk5\\Partition0"},
  {"/dev/sdg", BRACK(FH_SDG), "\\Device\\Harddisk6\\Partition0"},
  {"/dev/sdh", BRACK(FH_SDH), "\\Device\\Harddisk7\\Partition0"},
  {"/dev/sdi", BRACK(FH_SDI), "\\Device\\Harddisk8\\Partition0"},
  {"/dev/sdj", BRACK(FH_SDJ), "\\Device\\Harddisk9\\Partition0"},
  {"/dev/sdk", BRACK(FH_SDK), "\\Device\\Harddisk10\\Partition0"},
  {"/dev/sdl", BRACK(FH_SDL), "\\Device\\Harddisk11\\Partition0"},
  {"/dev/sdm", BRACK(FH_SDM), "\\Device\\Harddisk12\\Partition0"},
  {"/dev/sdn", BRACK(FH_SDN), "\\Device\\Harddisk13\\Partition0"},
  {"/dev/sdo", BRACK(FH_SDO), "\\Device\\Harddisk14\\Partition0"},
  {"/dev/sdp", BRACK(FH_SDP), "\\Device\\Harddisk15\\Partition0"},
  {"/dev/sdq", BRACK(FH_SDQ), "\\Device\\Harddisk16\\Partition0"},
  {"/dev/sdr", BRACK(FH_SDR), "\\Device\\Harddisk17\\Partition0"},
  {"/dev/sds", BRACK(FH_SDS), "\\Device\\Harddisk18\\Partition0"},
  {"/dev/sdt", BRACK(FH_SDT), "\\Device\\Harddisk19\\Partition0"},
  {"/dev/sdu", BRACK(FH_SDU), "\\Device\\Harddisk20\\Partition0"},
  {"/dev/sdv", BRACK(FH_SDV), "\\Device\\Harddisk21\\Partition0"},
  {"/dev/sdw", BRACK(FH_SDW), "\\Device\\Harddisk22\\Partition0"},
  {"/dev/sdx", BRACK(FH_SDX), "\\Device\\Harddisk23\\Partition0"},
  {"/dev/sdy", BRACK(FH_SDY), "\\Device\\Harddisk24\\Partition0"},
  {"/dev/sdz", BRACK(FH_SDZ), "\\Device\\Harddisk25\\Partition0"},
  {"/dev/sda1", BRACK(FH_SDA | 1), "\\Device\\Harddisk0\\Partition1"},
  {"/dev/sda2", BRACK(FH_SDA | 2), "\\Device\\Harddisk0\\Partition2"},
  {"/dev/sda3", BRACK(FH_SDA | 3), "\\Device\\Harddisk0\\Partition3"},
  {"/dev/sda4", BRACK(FH_SDA | 4), "\\Device\\Harddisk0\\Partition4"},
  {"/dev/sda5", BRACK(FH_SDA | 5), "\\Device\\Harddisk0\\Partition5"},
  {"/dev/sda6", BRACK(FH_SDA | 6), "\\Device\\Harddisk0\\Partition6"},
  {"/dev/sda7", BRACK(FH_SDA | 7), "\\Device\\Harddisk0\\Partition7"},
  {"/dev/sda8", BRACK(FH_SDA | 8), "\\Device\\Harddisk0\\Partition8"},
  {"/dev/sda9", BRACK(FH_SDA | 9), "\\Device\\Harddisk0\\Partition9"},
  {"/dev/sda10", BRACK(FH_SDA | 10), "\\Device\\Harddisk0\\Partition10"},
  {"/dev/sda11", BRACK(FH_SDA | 11), "\\Device\\Harddisk0\\Partition11"},
  {"/dev/sda12", BRACK(FH_SDA | 12), "\\Device\\Harddisk0\\Partition12"},
  {"/dev/sda13", BRACK(FH_SDA | 13), "\\Device\\Harddisk0\\Partition13"},
  {"/dev/sda14", BRACK(FH_SDA | 14), "\\Device\\Harddisk0\\Partition14"},
  {"/dev/sda15", BRACK(FH_SDA | 15), "\\Device\\Harddisk0\\Partition15"},
  {"/dev/sdb1", BRACK(FH_SDB | 1), "\\Device\\Harddisk1\\Partition1"},
  {"/dev/sdb2", BRACK(FH_SDB | 2), "\\Device\\Harddisk1\\Partition2"},
  {"/dev/sdb3", BRACK(FH_SDB | 3), "\\Device\\Harddisk1\\Partition3"},
  {"/dev/sdb4", BRACK(FH_SDB | 4), "\\Device\\Harddisk1\\Partition4"},
  {"/dev/sdb5", BRACK(FH_SDB | 5), "\\Device\\Harddisk1\\Partition5"},
  {"/dev/sdb6", BRACK(FH_SDB | 6), "\\Device\\Harddisk1\\Partition6"},
  {"/dev/sdb7", BRACK(FH_SDB | 7), "\\Device\\Harddisk1\\Partition7"},
  {"/dev/sdb8", BRACK(FH_SDB | 8), "\\Device\\Harddisk1\\Partition8"},
  {"/dev/sdb9", BRACK(FH_SDB | 9), "\\Device\\Harddisk1\\Partition9"},
  {"/dev/sdb10", BRACK(FH_SDB | 10), "\\Device\\Harddisk1\\Partition10"},
  {"/dev/sdb11", BRACK(FH_SDB | 11), "\\Device\\Harddisk1\\Partition11"},
  {"/dev/sdb12", BRACK(FH_SDB | 12), "\\Device\\Harddisk1\\Partition12"},
  {"/dev/sdb13", BRACK(FH_SDB | 13), "\\Device\\Harddisk1\\Partition13"},
  {"/dev/sdb14", BRACK(FH_SDB | 14), "\\Device\\Harddisk1\\Partition14"},
  {"/dev/sdb15", BRACK(FH_SDB | 15), "\\Device\\Harddisk1\\Partition15"},
  {"/dev/sdc1", BRACK(FH_SDC | 1), "\\Device\\Harddisk2\\Partition1"},
  {"/dev/sdc2", BRACK(FH_SDC | 2), "\\Device\\Harddisk2\\Partition2"},
  {"/dev/sdc3", BRACK(FH_SDC | 3), "\\Device\\Harddisk2\\Partition3"},
  {"/dev/sdc4", BRACK(FH_SDC | 4), "\\Device\\Harddisk2\\Partition4"},
  {"/dev/sdc5", BRACK(FH_SDC | 5), "\\Device\\Harddisk2\\Partition5"},
  {"/dev/sdc6", BRACK(FH_SDC | 6), "\\Device\\Harddisk2\\Partition6"},
  {"/dev/sdc7", BRACK(FH_SDC | 7), "\\Device\\Harddisk2\\Partition7"},
  {"/dev/sdc8", BRACK(FH_SDC | 8), "\\Device\\Harddisk2\\Partition8"},
  {"/dev/sdc9", BRACK(FH_SDC | 9), "\\Device\\Harddisk2\\Partition9"},
  {"/dev/sdc10", BRACK(FH_SDC | 10), "\\Device\\Harddisk2\\Partition10"},
  {"/dev/sdc11", BRACK(FH_SDC | 11), "\\Device\\Harddisk2\\Partition11"},
  {"/dev/sdc12", BRACK(FH_SDC | 12), "\\Device\\Harddisk2\\Partition12"},
  {"/dev/sdc13", BRACK(FH_SDC | 13), "\\Device\\Harddisk2\\Partition13"},
  {"/dev/sdc14", BRACK(FH_SDC | 14), "\\Device\\Harddisk2\\Partition14"},
  {"/dev/sdc15", BRACK(FH_SDC | 15), "\\Device\\Harddisk2\\Partition15"},
  {"/dev/sdd1", BRACK(FH_SDD | 1), "\\Device\\Harddisk3\\Partition1"},
  {"/dev/sdd2", BRACK(FH_SDD | 2), "\\Device\\Harddisk3\\Partition2"},
  {"/dev/sdd3", BRACK(FH_SDD | 3), "\\Device\\Harddisk3\\Partition3"},
  {"/dev/sdd4", BRACK(FH_SDD | 4), "\\Device\\Harddisk3\\Partition4"},
  {"/dev/sdd5", BRACK(FH_SDD | 5), "\\Device\\Harddisk3\\Partition5"},
  {"/dev/sdd6", BRACK(FH_SDD | 6), "\\Device\\Harddisk3\\Partition6"},
  {"/dev/sdd7", BRACK(FH_SDD | 7), "\\Device\\Harddisk3\\Partition7"},
  {"/dev/sdd8", BRACK(FH_SDD | 8), "\\Device\\Harddisk3\\Partition8"},
  {"/dev/sdd9", BRACK(FH_SDD | 9), "\\Device\\Harddisk3\\Partition9"},
  {"/dev/sdd10", BRACK(FH_SDD | 10), "\\Device\\Harddisk3\\Partition10"},
  {"/dev/sdd11", BRACK(FH_SDD | 11), "\\Device\\Harddisk3\\Partition11"},
  {"/dev/sdd12", BRACK(FH_SDD | 12), "\\Device\\Harddisk3\\Partition12"},
  {"/dev/sdd13", BRACK(FH_SDD | 13), "\\Device\\Harddisk3\\Partition13"},
  {"/dev/sdd14", BRACK(FH_SDD | 14), "\\Device\\Harddisk3\\Partition14"},
  {"/dev/sdd15", BRACK(FH_SDD | 15), "\\Device\\Harddisk3\\Partition15"},
  {"/dev/sde1", BRACK(FH_SDE | 1), "\\Device\\Harddisk4\\Partition1"},
  {"/dev/sde2", BRACK(FH_SDE | 2), "\\Device\\Harddisk4\\Partition2"},
  {"/dev/sde3", BRACK(FH_SDE | 3), "\\Device\\Harddisk4\\Partition3"},
  {"/dev/sde4", BRACK(FH_SDE | 4), "\\Device\\Harddisk4\\Partition4"},
  {"/dev/sde5", BRACK(FH_SDE | 5), "\\Device\\Harddisk4\\Partition5"},
  {"/dev/sde6", BRACK(FH_SDE | 6), "\\Device\\Harddisk4\\Partition6"},
  {"/dev/sde7", BRACK(FH_SDE | 7), "\\Device\\Harddisk4\\Partition7"},
  {"/dev/sde8", BRACK(FH_SDE | 8), "\\Device\\Harddisk4\\Partition8"},
  {"/dev/sde9", BRACK(FH_SDE | 9), "\\Device\\Harddisk4\\Partition9"},
  {"/dev/sde10", BRACK(FH_SDE | 10), "\\Device\\Harddisk4\\Partition10"},
  {"/dev/sde11", BRACK(FH_SDE | 11), "\\Device\\Harddisk4\\Partition11"},
  {"/dev/sde12", BRACK(FH_SDE | 12), "\\Device\\Harddisk4\\Partition12"},
  {"/dev/sde13", BRACK(FH_SDE | 13), "\\Device\\Harddisk4\\Partition13"},
  {"/dev/sde14", BRACK(FH_SDE | 14), "\\Device\\Harddisk4\\Partition14"},
  {"/dev/sde15", BRACK(FH_SDE | 15), "\\Device\\Harddisk4\\Partition15"},
  {"/dev/sdf1", BRACK(FH_SDF | 1), "\\Device\\Harddisk5\\Partition1"},
  {"/dev/sdf2", BRACK(FH_SDF | 2), "\\Device\\Harddisk5\\Partition2"},
  {"/dev/sdf3", BRACK(FH_SDF | 3), "\\Device\\Harddisk5\\Partition3"},
  {"/dev/sdf4", BRACK(FH_SDF | 4), "\\Device\\Harddisk5\\Partition4"},
  {"/dev/sdf5", BRACK(FH_SDF | 5), "\\Device\\Harddisk5\\Partition5"},
  {"/dev/sdf6", BRACK(FH_SDF | 6), "\\Device\\Harddisk5\\Partition6"},
  {"/dev/sdf7", BRACK(FH_SDF | 7), "\\Device\\Harddisk5\\Partition7"},
  {"/dev/sdf8", BRACK(FH_SDF | 8), "\\Device\\Harddisk5\\Partition8"},
  {"/dev/sdf9", BRACK(FH_SDF | 9), "\\Device\\Harddisk5\\Partition9"},
  {"/dev/sdf10", BRACK(FH_SDF | 10), "\\Device\\Harddisk5\\Partition10"},
  {"/dev/sdf11", BRACK(FH_SDF | 11), "\\Device\\Harddisk5\\Partition11"},
  {"/dev/sdf12", BRACK(FH_SDF | 12), "\\Device\\Harddisk5\\Partition12"},
  {"/dev/sdf13", BRACK(FH_SDF | 13), "\\Device\\Harddisk5\\Partition13"},
  {"/dev/sdf14", BRACK(FH_SDF | 14), "\\Device\\Harddisk5\\Partition14"},
  {"/dev/sdf15", BRACK(FH_SDF | 15), "\\Device\\Harddisk5\\Partition15"},
  {"/dev/sdg1", BRACK(FH_SDG | 1), "\\Device\\Harddisk6\\Partition1"},
  {"/dev/sdg2", BRACK(FH_SDG | 2), "\\Device\\Harddisk6\\Partition2"},
  {"/dev/sdg3", BRACK(FH_SDG | 3), "\\Device\\Harddisk6\\Partition3"},
  {"/dev/sdg4", BRACK(FH_SDG | 4), "\\Device\\Harddisk6\\Partition4"},
  {"/dev/sdg5", BRACK(FH_SDG | 5), "\\Device\\Harddisk6\\Partition5"},
  {"/dev/sdg6", BRACK(FH_SDG | 6), "\\Device\\Harddisk6\\Partition6"},
  {"/dev/sdg7", BRACK(FH_SDG | 7), "\\Device\\Harddisk6\\Partition7"},
  {"/dev/sdg8", BRACK(FH_SDG | 8), "\\Device\\Harddisk6\\Partition8"},
  {"/dev/sdg9", BRACK(FH_SDG | 9), "\\Device\\Harddisk6\\Partition9"},
  {"/dev/sdg10", BRACK(FH_SDG | 10), "\\Device\\Harddisk6\\Partition10"},
  {"/dev/sdg11", BRACK(FH_SDG | 11), "\\Device\\Harddisk6\\Partition11"},
  {"/dev/sdg12", BRACK(FH_SDG | 12), "\\Device\\Harddisk6\\Partition12"},
  {"/dev/sdg13", BRACK(FH_SDG | 13), "\\Device\\Harddisk6\\Partition13"},
  {"/dev/sdg14", BRACK(FH_SDG | 14), "\\Device\\Harddisk6\\Partition14"},
  {"/dev/sdg15", BRACK(FH_SDG | 15), "\\Device\\Harddisk6\\Partition15"},
  {"/dev/sdh1", BRACK(FH_SDH | 1), "\\Device\\Harddisk7\\Partition1"},
  {"/dev/sdh2", BRACK(FH_SDH | 2), "\\Device\\Harddisk7\\Partition2"},
  {"/dev/sdh3", BRACK(FH_SDH | 3), "\\Device\\Harddisk7\\Partition3"},
  {"/dev/sdh4", BRACK(FH_SDH | 4), "\\Device\\Harddisk7\\Partition4"},
  {"/dev/sdh5", BRACK(FH_SDH | 5), "\\Device\\Harddisk7\\Partition5"},
  {"/dev/sdh6", BRACK(FH_SDH | 6), "\\Device\\Harddisk7\\Partition6"},
  {"/dev/sdh7", BRACK(FH_SDH | 7), "\\Device\\Harddisk7\\Partition7"},
  {"/dev/sdh8", BRACK(FH_SDH | 8), "\\Device\\Harddisk7\\Partition8"},
  {"/dev/sdh9", BRACK(FH_SDH | 9), "\\Device\\Harddisk7\\Partition9"},
  {"/dev/sdh10", BRACK(FH_SDH | 10), "\\Device\\Harddisk7\\Partition10"},
  {"/dev/sdh11", BRACK(FH_SDH | 11), "\\Device\\Harddisk7\\Partition11"},
  {"/dev/sdh12", BRACK(FH_SDH | 12), "\\Device\\Harddisk7\\Partition12"},
  {"/dev/sdh13", BRACK(FH_SDH | 13), "\\Device\\Harddisk7\\Partition13"},
  {"/dev/sdh14", BRACK(FH_SDH | 14), "\\Device\\Harddisk7\\Partition14"},
  {"/dev/sdh15", BRACK(FH_SDH | 15), "\\Device\\Harddisk7\\Partition15"},
  {"/dev/sdi1", BRACK(FH_SDI | 1), "\\Device\\Harddisk8\\Partition1"},
  {"/dev/sdi2", BRACK(FH_SDI | 2), "\\Device\\Harddisk8\\Partition2"},
  {"/dev/sdi3", BRACK(FH_SDI | 3), "\\Device\\Harddisk8\\Partition3"},
  {"/dev/sdi4", BRACK(FH_SDI | 4), "\\Device\\Harddisk8\\Partition4"},
  {"/dev/sdi5", BRACK(FH_SDI | 5), "\\Device\\Harddisk8\\Partition5"},
  {"/dev/sdi6", BRACK(FH_SDI | 6), "\\Device\\Harddisk8\\Partition6"},
  {"/dev/sdi7", BRACK(FH_SDI | 7), "\\Device\\Harddisk8\\Partition7"},
  {"/dev/sdi8", BRACK(FH_SDI | 8), "\\Device\\Harddisk8\\Partition8"},
  {"/dev/sdi9", BRACK(FH_SDI | 9), "\\Device\\Harddisk8\\Partition9"},
  {"/dev/sdi10", BRACK(FH_SDI | 10), "\\Device\\Harddisk8\\Partition10"},
  {"/dev/sdi11", BRACK(FH_SDI | 11), "\\Device\\Harddisk8\\Partition11"},
  {"/dev/sdi12", BRACK(FH_SDI | 12), "\\Device\\Harddisk8\\Partition12"},
  {"/dev/sdi13", BRACK(FH_SDI | 13), "\\Device\\Harddisk8\\Partition13"},
  {"/dev/sdi14", BRACK(FH_SDI | 14), "\\Device\\Harddisk8\\Partition14"},
  {"/dev/sdi15", BRACK(FH_SDI | 15), "\\Device\\Harddisk8\\Partition15"},
  {"/dev/sdj1", BRACK(FH_SDJ | 1), "\\Device\\Harddisk9\\Partition1"},
  {"/dev/sdj2", BRACK(FH_SDJ | 2), "\\Device\\Harddisk9\\Partition2"},
  {"/dev/sdj3", BRACK(FH_SDJ | 3), "\\Device\\Harddisk9\\Partition3"},
  {"/dev/sdj4", BRACK(FH_SDJ | 4), "\\Device\\Harddisk9\\Partition4"},
  {"/dev/sdj5", BRACK(FH_SDJ | 5), "\\Device\\Harddisk9\\Partition5"},
  {"/dev/sdj6", BRACK(FH_SDJ | 6), "\\Device\\Harddisk9\\Partition6"},
  {"/dev/sdj7", BRACK(FH_SDJ | 7), "\\Device\\Harddisk9\\Partition7"},
  {"/dev/sdj8", BRACK(FH_SDJ | 8), "\\Device\\Harddisk9\\Partition8"},
  {"/dev/sdj9", BRACK(FH_SDJ | 9), "\\Device\\Harddisk9\\Partition9"},
  {"/dev/sdj10", BRACK(FH_SDJ | 10), "\\Device\\Harddisk9\\Partition10"},
  {"/dev/sdj11", BRACK(FH_SDJ | 11), "\\Device\\Harddisk9\\Partition11"},
  {"/dev/sdj12", BRACK(FH_SDJ | 12), "\\Device\\Harddisk9\\Partition12"},
  {"/dev/sdj13", BRACK(FH_SDJ | 13), "\\Device\\Harddisk9\\Partition13"},
  {"/dev/sdj14", BRACK(FH_SDJ | 14), "\\Device\\Harddisk9\\Partition14"},
  {"/dev/sdj15", BRACK(FH_SDJ | 15), "\\Device\\Harddisk9\\Partition15"},
  {"/dev/sdk1", BRACK(FH_SDK | 1), "\\Device\\Harddisk10\\Partition1"},
  {"/dev/sdk2", BRACK(FH_SDK | 2), "\\Device\\Harddisk10\\Partition2"},
  {"/dev/sdk3", BRACK(FH_SDK | 3), "\\Device\\Harddisk10\\Partition3"},
  {"/dev/sdk4", BRACK(FH_SDK | 4), "\\Device\\Harddisk10\\Partition4"},
  {"/dev/sdk5", BRACK(FH_SDK | 5), "\\Device\\Harddisk10\\Partition5"},
  {"/dev/sdk6", BRACK(FH_SDK | 6), "\\Device\\Harddisk10\\Partition6"},
  {"/dev/sdk7", BRACK(FH_SDK | 7), "\\Device\\Harddisk10\\Partition7"},
  {"/dev/sdk8", BRACK(FH_SDK | 8), "\\Device\\Harddisk10\\Partition8"},
  {"/dev/sdk9", BRACK(FH_SDK | 9), "\\Device\\Harddisk10\\Partition9"},
  {"/dev/sdk10", BRACK(FH_SDK | 10), "\\Device\\Harddisk10\\Partition10"},
  {"/dev/sdk11", BRACK(FH_SDK | 11), "\\Device\\Harddisk10\\Partition11"},
  {"/dev/sdk12", BRACK(FH_SDK | 12), "\\Device\\Harddisk10\\Partition12"},
  {"/dev/sdk13", BRACK(FH_SDK | 13), "\\Device\\Harddisk10\\Partition13"},
  {"/dev/sdk14", BRACK(FH_SDK | 14), "\\Device\\Harddisk10\\Partition14"},
  {"/dev/sdk15", BRACK(FH_SDK | 15), "\\Device\\Harddisk10\\Partition15"},
  {"/dev/sdl1", BRACK(FH_SDL | 1), "\\Device\\Harddisk11\\Partition1"},
  {"/dev/sdl2", BRACK(FH_SDL | 2), "\\Device\\Harddisk11\\Partition2"},
  {"/dev/sdl3", BRACK(FH_SDL | 3), "\\Device\\Harddisk11\\Partition3"},
  {"/dev/sdl4", BRACK(FH_SDL | 4), "\\Device\\Harddisk11\\Partition4"},
  {"/dev/sdl5", BRACK(FH_SDL | 5), "\\Device\\Harddisk11\\Partition5"},
  {"/dev/sdl6", BRACK(FH_SDL | 6), "\\Device\\Harddisk11\\Partition6"},
  {"/dev/sdl7", BRACK(FH_SDL | 7), "\\Device\\Harddisk11\\Partition7"},
  {"/dev/sdl8", BRACK(FH_SDL | 8), "\\Device\\Harddisk11\\Partition8"},
  {"/dev/sdl9", BRACK(FH_SDL | 9), "\\Device\\Harddisk11\\Partition9"},
  {"/dev/sdl10", BRACK(FH_SDL | 10), "\\Device\\Harddisk11\\Partition10"},
  {"/dev/sdl11", BRACK(FH_SDL | 11), "\\Device\\Harddisk11\\Partition11"},
  {"/dev/sdl12", BRACK(FH_SDL | 12), "\\Device\\Harddisk11\\Partition12"},
  {"/dev/sdl13", BRACK(FH_SDL | 13), "\\Device\\Harddisk11\\Partition13"},
  {"/dev/sdl14", BRACK(FH_SDL | 14), "\\Device\\Harddisk11\\Partition14"},
  {"/dev/sdl15", BRACK(FH_SDL | 15), "\\Device\\Harddisk11\\Partition15"},
  {"/dev/sdm1", BRACK(FH_SDM | 1), "\\Device\\Harddisk12\\Partition1"},
  {"/dev/sdm2", BRACK(FH_SDM | 2), "\\Device\\Harddisk12\\Partition2"},
  {"/dev/sdm3", BRACK(FH_SDM | 3), "\\Device\\Harddisk12\\Partition3"},
  {"/dev/sdm4", BRACK(FH_SDM | 4), "\\Device\\Harddisk12\\Partition4"},
  {"/dev/sdm5", BRACK(FH_SDM | 5), "\\Device\\Harddisk12\\Partition5"},
  {"/dev/sdm6", BRACK(FH_SDM | 6), "\\Device\\Harddisk12\\Partition6"},
  {"/dev/sdm7", BRACK(FH_SDM | 7), "\\Device\\Harddisk12\\Partition7"},
  {"/dev/sdm8", BRACK(FH_SDM | 8), "\\Device\\Harddisk12\\Partition8"},
  {"/dev/sdm9", BRACK(FH_SDM | 9), "\\Device\\Harddisk12\\Partition9"},
  {"/dev/sdm10", BRACK(FH_SDM | 10), "\\Device\\Harddisk12\\Partition10"},
  {"/dev/sdm11", BRACK(FH_SDM | 11), "\\Device\\Harddisk12\\Partition11"},
  {"/dev/sdm12", BRACK(FH_SDM | 12), "\\Device\\Harddisk12\\Partition12"},
  {"/dev/sdm13", BRACK(FH_SDM | 13), "\\Device\\Harddisk12\\Partition13"},
  {"/dev/sdm14", BRACK(FH_SDM | 14), "\\Device\\Harddisk12\\Partition14"},
  {"/dev/sdm15", BRACK(FH_SDM | 15), "\\Device\\Harddisk12\\Partition15"},
  {"/dev/sdn1", BRACK(FH_SDN | 1), "\\Device\\Harddisk13\\Partition1"},
  {"/dev/sdn2", BRACK(FH_SDN | 2), "\\Device\\Harddisk13\\Partition2"},
  {"/dev/sdn3", BRACK(FH_SDN | 3), "\\Device\\Harddisk13\\Partition3"},
  {"/dev/sdn4", BRACK(FH_SDN | 4), "\\Device\\Harddisk13\\Partition4"},
  {"/dev/sdn5", BRACK(FH_SDN | 5), "\\Device\\Harddisk13\\Partition5"},
  {"/dev/sdn6", BRACK(FH_SDN | 6), "\\Device\\Harddisk13\\Partition6"},
  {"/dev/sdn7", BRACK(FH_SDN | 7), "\\Device\\Harddisk13\\Partition7"},
  {"/dev/sdn8", BRACK(FH_SDN | 8), "\\Device\\Harddisk13\\Partition8"},
  {"/dev/sdn9", BRACK(FH_SDN | 9), "\\Device\\Harddisk13\\Partition9"},
  {"/dev/sdn10", BRACK(FH_SDN | 10), "\\Device\\Harddisk13\\Partition10"},
  {"/dev/sdn11", BRACK(FH_SDN | 11), "\\Device\\Harddisk13\\Partition11"},
  {"/dev/sdn12", BRACK(FH_SDN | 12), "\\Device\\Harddisk13\\Partition12"},
  {"/dev/sdn13", BRACK(FH_SDN | 13), "\\Device\\Harddisk13\\Partition13"},
  {"/dev/sdn14", BRACK(FH_SDN | 14), "\\Device\\Harddisk13\\Partition14"},
  {"/dev/sdn15", BRACK(FH_SDN | 15), "\\Device\\Harddisk13\\Partition15"},
  {"/dev/sdo1", BRACK(FH_SDO | 1), "\\Device\\Harddisk14\\Partition1"},
  {"/dev/sdo2", BRACK(FH_SDO | 2), "\\Device\\Harddisk14\\Partition2"},
  {"/dev/sdo3", BRACK(FH_SDO | 3), "\\Device\\Harddisk14\\Partition3"},
  {"/dev/sdo4", BRACK(FH_SDO | 4), "\\Device\\Harddisk14\\Partition4"},
  {"/dev/sdo5", BRACK(FH_SDO | 5), "\\Device\\Harddisk14\\Partition5"},
  {"/dev/sdo6", BRACK(FH_SDO | 6), "\\Device\\Harddisk14\\Partition6"},
  {"/dev/sdo7", BRACK(FH_SDO | 7), "\\Device\\Harddisk14\\Partition7"},
  {"/dev/sdo8", BRACK(FH_SDO | 8), "\\Device\\Harddisk14\\Partition8"},
  {"/dev/sdo9", BRACK(FH_SDO | 9), "\\Device\\Harddisk14\\Partition9"},
  {"/dev/sdo10", BRACK(FH_SDO | 10), "\\Device\\Harddisk14\\Partition10"},
  {"/dev/sdo11", BRACK(FH_SDO | 11), "\\Device\\Harddisk14\\Partition11"},
  {"/dev/sdo12", BRACK(FH_SDO | 12), "\\Device\\Harddisk14\\Partition12"},
  {"/dev/sdo13", BRACK(FH_SDO | 13), "\\Device\\Harddisk14\\Partition13"},
  {"/dev/sdo14", BRACK(FH_SDO | 14), "\\Device\\Harddisk14\\Partition14"},
  {"/dev/sdo15", BRACK(FH_SDO | 15), "\\Device\\Harddisk14\\Partition15"},
  {"/dev/sdp1", BRACK(FH_SDP | 1), "\\Device\\Harddisk15\\Partition1"},
  {"/dev/sdp2", BRACK(FH_SDP | 2), "\\Device\\Harddisk15\\Partition2"},
  {"/dev/sdp3", BRACK(FH_SDP | 3), "\\Device\\Harddisk15\\Partition3"},
  {"/dev/sdp4", BRACK(FH_SDP | 4), "\\Device\\Harddisk15\\Partition4"},
  {"/dev/sdp5", BRACK(FH_SDP | 5), "\\Device\\Harddisk15\\Partition5"},
  {"/dev/sdp6", BRACK(FH_SDP | 6), "\\Device\\Harddisk15\\Partition6"},
  {"/dev/sdp7", BRACK(FH_SDP | 7), "\\Device\\Harddisk15\\Partition7"},
  {"/dev/sdp8", BRACK(FH_SDP | 8), "\\Device\\Harddisk15\\Partition8"},
  {"/dev/sdp9", BRACK(FH_SDP | 9), "\\Device\\Harddisk15\\Partition9"},
  {"/dev/sdp10", BRACK(FH_SDP | 10), "\\Device\\Harddisk15\\Partition10"},
  {"/dev/sdp11", BRACK(FH_SDP | 11), "\\Device\\Harddisk15\\Partition11"},
  {"/dev/sdp12", BRACK(FH_SDP | 12), "\\Device\\Harddisk15\\Partition12"},
  {"/dev/sdp13", BRACK(FH_SDP | 13), "\\Device\\Harddisk15\\Partition13"},
  {"/dev/sdp14", BRACK(FH_SDP | 14), "\\Device\\Harddisk15\\Partition14"},
  {"/dev/sdp15", BRACK(FH_SDP | 15), "\\Device\\Harddisk15\\Partition15"},
  {"/dev/sdq1", BRACK(FH_SDQ | 1), "\\Device\\Harddisk16\\Partition1"},
  {"/dev/sdq2", BRACK(FH_SDQ | 2), "\\Device\\Harddisk16\\Partition2"},
  {"/dev/sdq3", BRACK(FH_SDQ | 3), "\\Device\\Harddisk16\\Partition3"},
  {"/dev/sdq4", BRACK(FH_SDQ | 4), "\\Device\\Harddisk16\\Partition4"},
  {"/dev/sdq5", BRACK(FH_SDQ | 5), "\\Device\\Harddisk16\\Partition5"},
  {"/dev/sdq6", BRACK(FH_SDQ | 6), "\\Device\\Harddisk16\\Partition6"},
  {"/dev/sdq7", BRACK(FH_SDQ | 7), "\\Device\\Harddisk16\\Partition7"},
  {"/dev/sdq8", BRACK(FH_SDQ | 8), "\\Device\\Harddisk16\\Partition8"},
  {"/dev/sdq9", BRACK(FH_SDQ | 9), "\\Device\\Harddisk16\\Partition9"},
  {"/dev/sdq10", BRACK(FH_SDQ | 10), "\\Device\\Harddisk16\\Partition10"},
  {"/dev/sdq11", BRACK(FH_SDQ | 11), "\\Device\\Harddisk16\\Partition11"},
  {"/dev/sdq12", BRACK(FH_SDQ | 12), "\\Device\\Harddisk16\\Partition12"},
  {"/dev/sdq13", BRACK(FH_SDQ | 13), "\\Device\\Harddisk16\\Partition13"},
  {"/dev/sdq14", BRACK(FH_SDQ | 14), "\\Device\\Harddisk16\\Partition14"},
  {"/dev/sdq15", BRACK(FH_SDQ | 15), "\\Device\\Harddisk16\\Partition15"},
  {"/dev/sdr1", BRACK(FH_SDR | 1), "\\Device\\Harddisk17\\Partition1"},
  {"/dev/sdr2", BRACK(FH_SDR | 2), "\\Device\\Harddisk17\\Partition2"},
  {"/dev/sdr3", BRACK(FH_SDR | 3), "\\Device\\Harddisk17\\Partition3"},
  {"/dev/sdr4", BRACK(FH_SDR | 4), "\\Device\\Harddisk17\\Partition4"},
  {"/dev/sdr5", BRACK(FH_SDR | 5), "\\Device\\Harddisk17\\Partition5"},
  {"/dev/sdr6", BRACK(FH_SDR | 6), "\\Device\\Harddisk17\\Partition6"},
  {"/dev/sdr7", BRACK(FH_SDR | 7), "\\Device\\Harddisk17\\Partition7"},
  {"/dev/sdr8", BRACK(FH_SDR | 8), "\\Device\\Harddisk17\\Partition8"},
  {"/dev/sdr9", BRACK(FH_SDR | 9), "\\Device\\Harddisk17\\Partition9"},
  {"/dev/sdr10", BRACK(FH_SDR | 10), "\\Device\\Harddisk17\\Partition10"},
  {"/dev/sdr11", BRACK(FH_SDR | 11), "\\Device\\Harddisk17\\Partition11"},
  {"/dev/sdr12", BRACK(FH_SDR | 12), "\\Device\\Harddisk17\\Partition12"},
  {"/dev/sdr13", BRACK(FH_SDR | 13), "\\Device\\Harddisk17\\Partition13"},
  {"/dev/sdr14", BRACK(FH_SDR | 14), "\\Device\\Harddisk17\\Partition14"},
  {"/dev/sdr15", BRACK(FH_SDR | 15), "\\Device\\Harddisk17\\Partition15"},
  {"/dev/sds1", BRACK(FH_SDS | 1), "\\Device\\Harddisk18\\Partition1"},
  {"/dev/sds2", BRACK(FH_SDS | 2), "\\Device\\Harddisk18\\Partition2"},
  {"/dev/sds3", BRACK(FH_SDS | 3), "\\Device\\Harddisk18\\Partition3"},
  {"/dev/sds4", BRACK(FH_SDS | 4), "\\Device\\Harddisk18\\Partition4"},
  {"/dev/sds5", BRACK(FH_SDS | 5), "\\Device\\Harddisk18\\Partition5"},
  {"/dev/sds6", BRACK(FH_SDS | 6), "\\Device\\Harddisk18\\Partition6"},
  {"/dev/sds7", BRACK(FH_SDS | 7), "\\Device\\Harddisk18\\Partition7"},
  {"/dev/sds8", BRACK(FH_SDS | 8), "\\Device\\Harddisk18\\Partition8"},
  {"/dev/sds9", BRACK(FH_SDS | 9), "\\Device\\Harddisk18\\Partition9"},
  {"/dev/sds10", BRACK(FH_SDS | 10), "\\Device\\Harddisk18\\Partition10"},
  {"/dev/sds11", BRACK(FH_SDS | 11), "\\Device\\Harddisk18\\Partition11"},
  {"/dev/sds12", BRACK(FH_SDS | 12), "\\Device\\Harddisk18\\Partition12"},
  {"/dev/sds13", BRACK(FH_SDS | 13), "\\Device\\Harddisk18\\Partition13"},
  {"/dev/sds14", BRACK(FH_SDS | 14), "\\Device\\Harddisk18\\Partition14"},
  {"/dev/sds15", BRACK(FH_SDS | 15), "\\Device\\Harddisk18\\Partition15"},
  {"/dev/sdt1", BRACK(FH_SDT | 1), "\\Device\\Harddisk19\\Partition1"},
  {"/dev/sdt2", BRACK(FH_SDT | 2), "\\Device\\Harddisk19\\Partition2"},
  {"/dev/sdt3", BRACK(FH_SDT | 3), "\\Device\\Harddisk19\\Partition3"},
  {"/dev/sdt4", BRACK(FH_SDT | 4), "\\Device\\Harddisk19\\Partition4"},
  {"/dev/sdt5", BRACK(FH_SDT | 5), "\\Device\\Harddisk19\\Partition5"},
  {"/dev/sdt6", BRACK(FH_SDT | 6), "\\Device\\Harddisk19\\Partition6"},
  {"/dev/sdt7", BRACK(FH_SDT | 7), "\\Device\\Harddisk19\\Partition7"},
  {"/dev/sdt8", BRACK(FH_SDT | 8), "\\Device\\Harddisk19\\Partition8"},
  {"/dev/sdt9", BRACK(FH_SDT | 9), "\\Device\\Harddisk19\\Partition9"},
  {"/dev/sdt10", BRACK(FH_SDT | 10), "\\Device\\Harddisk19\\Partition10"},
  {"/dev/sdt11", BRACK(FH_SDT | 11), "\\Device\\Harddisk19\\Partition11"},
  {"/dev/sdt12", BRACK(FH_SDT | 12), "\\Device\\Harddisk19\\Partition12"},
  {"/dev/sdt13", BRACK(FH_SDT | 13), "\\Device\\Harddisk19\\Partition13"},
  {"/dev/sdt14", BRACK(FH_SDT | 14), "\\Device\\Harddisk19\\Partition14"},
  {"/dev/sdt15", BRACK(FH_SDT | 15), "\\Device\\Harddisk19\\Partition15"},
  {"/dev/sdu1", BRACK(FH_SDU | 1), "\\Device\\Harddisk20\\Partition1"},
  {"/dev/sdu2", BRACK(FH_SDU | 2), "\\Device\\Harddisk20\\Partition2"},
  {"/dev/sdu3", BRACK(FH_SDU | 3), "\\Device\\Harddisk20\\Partition3"},
  {"/dev/sdu4", BRACK(FH_SDU | 4), "\\Device\\Harddisk20\\Partition4"},
  {"/dev/sdu5", BRACK(FH_SDU | 5), "\\Device\\Harddisk20\\Partition5"},
  {"/dev/sdu6", BRACK(FH_SDU | 6), "\\Device\\Harddisk20\\Partition6"},
  {"/dev/sdu7", BRACK(FH_SDU | 7), "\\Device\\Harddisk20\\Partition7"},
  {"/dev/sdu8", BRACK(FH_SDU | 8), "\\Device\\Harddisk20\\Partition8"},
  {"/dev/sdu9", BRACK(FH_SDU | 9), "\\Device\\Harddisk20\\Partition9"},
  {"/dev/sdu10", BRACK(FH_SDU | 10), "\\Device\\Harddisk20\\Partition10"},
  {"/dev/sdu11", BRACK(FH_SDU | 11), "\\Device\\Harddisk20\\Partition11"},
  {"/dev/sdu12", BRACK(FH_SDU | 12), "\\Device\\Harddisk20\\Partition12"},
  {"/dev/sdu13", BRACK(FH_SDU | 13), "\\Device\\Harddisk20\\Partition13"},
  {"/dev/sdu14", BRACK(FH_SDU | 14), "\\Device\\Harddisk20\\Partition14"},
  {"/dev/sdu15", BRACK(FH_SDU | 15), "\\Device\\Harddisk20\\Partition15"},
  {"/dev/sdv1", BRACK(FH_SDV | 1), "\\Device\\Harddisk21\\Partition1"},
  {"/dev/sdv2", BRACK(FH_SDV | 2), "\\Device\\Harddisk21\\Partition2"},
  {"/dev/sdv3", BRACK(FH_SDV | 3), "\\Device\\Harddisk21\\Partition3"},
  {"/dev/sdv4", BRACK(FH_SDV | 4), "\\Device\\Harddisk21\\Partition4"},
  {"/dev/sdv5", BRACK(FH_SDV | 5), "\\Device\\Harddisk21\\Partition5"},
  {"/dev/sdv6", BRACK(FH_SDV | 6), "\\Device\\Harddisk21\\Partition6"},
  {"/dev/sdv7", BRACK(FH_SDV | 7), "\\Device\\Harddisk21\\Partition7"},
  {"/dev/sdv8", BRACK(FH_SDV | 8), "\\Device\\Harddisk21\\Partition8"},
  {"/dev/sdv9", BRACK(FH_SDV | 9), "\\Device\\Harddisk21\\Partition9"},
  {"/dev/sdv10", BRACK(FH_SDV | 10), "\\Device\\Harddisk21\\Partition10"},
  {"/dev/sdv11", BRACK(FH_SDV | 11), "\\Device\\Harddisk21\\Partition11"},
  {"/dev/sdv12", BRACK(FH_SDV | 12), "\\Device\\Harddisk21\\Partition12"},
  {"/dev/sdv13", BRACK(FH_SDV | 13), "\\Device\\Harddisk21\\Partition13"},
  {"/dev/sdv14", BRACK(FH_SDV | 14), "\\Device\\Harddisk21\\Partition14"},
  {"/dev/sdv15", BRACK(FH_SDV | 15), "\\Device\\Harddisk21\\Partition15"},
  {"/dev/sdw1", BRACK(FH_SDW | 1), "\\Device\\Harddisk22\\Partition1"},
  {"/dev/sdw2", BRACK(FH_SDW | 2), "\\Device\\Harddisk22\\Partition2"},
  {"/dev/sdw3", BRACK(FH_SDW | 3), "\\Device\\Harddisk22\\Partition3"},
  {"/dev/sdw4", BRACK(FH_SDW | 4), "\\Device\\Harddisk22\\Partition4"},
  {"/dev/sdw5", BRACK(FH_SDW | 5), "\\Device\\Harddisk22\\Partition5"},
  {"/dev/sdw6", BRACK(FH_SDW | 6), "\\Device\\Harddisk22\\Partition6"},
  {"/dev/sdw7", BRACK(FH_SDW | 7), "\\Device\\Harddisk22\\Partition7"},
  {"/dev/sdw8", BRACK(FH_SDW | 8), "\\Device\\Harddisk22\\Partition8"},
  {"/dev/sdw9", BRACK(FH_SDW | 9), "\\Device\\Harddisk22\\Partition9"},
  {"/dev/sdw10", BRACK(FH_SDW | 10), "\\Device\\Harddisk22\\Partition10"},
  {"/dev/sdw11", BRACK(FH_SDW | 11), "\\Device\\Harddisk22\\Partition11"},
  {"/dev/sdw12", BRACK(FH_SDW | 12), "\\Device\\Harddisk22\\Partition12"},
  {"/dev/sdw13", BRACK(FH_SDW | 13), "\\Device\\Harddisk22\\Partition13"},
  {"/dev/sdw14", BRACK(FH_SDW | 14), "\\Device\\Harddisk22\\Partition14"},
  {"/dev/sdw15", BRACK(FH_SDW | 15), "\\Device\\Harddisk22\\Partition15"},
  {"/dev/sdx1", BRACK(FH_SDX | 1), "\\Device\\Harddisk23\\Partition1"},
  {"/dev/sdx2", BRACK(FH_SDX | 2), "\\Device\\Harddisk23\\Partition2"},
  {"/dev/sdx3", BRACK(FH_SDX | 3), "\\Device\\Harddisk23\\Partition3"},
  {"/dev/sdx4", BRACK(FH_SDX | 4), "\\Device\\Harddisk23\\Partition4"},
  {"/dev/sdx5", BRACK(FH_SDX | 5), "\\Device\\Harddisk23\\Partition5"},
  {"/dev/sdx6", BRACK(FH_SDX | 6), "\\Device\\Harddisk23\\Partition6"},
  {"/dev/sdx7", BRACK(FH_SDX | 7), "\\Device\\Harddisk23\\Partition7"},
  {"/dev/sdx8", BRACK(FH_SDX | 8), "\\Device\\Harddisk23\\Partition8"},
  {"/dev/sdx9", BRACK(FH_SDX | 9), "\\Device\\Harddisk23\\Partition9"},
  {"/dev/sdx10", BRACK(FH_SDX | 10), "\\Device\\Harddisk23\\Partition10"},
  {"/dev/sdx11", BRACK(FH_SDX | 11), "\\Device\\Harddisk23\\Partition11"},
  {"/dev/sdx12", BRACK(FH_SDX | 12), "\\Device\\Harddisk23\\Partition12"},
  {"/dev/sdx13", BRACK(FH_SDX | 13), "\\Device\\Harddisk23\\Partition13"},
  {"/dev/sdx14", BRACK(FH_SDX | 14), "\\Device\\Harddisk23\\Partition14"},
  {"/dev/sdx15", BRACK(FH_SDX | 15), "\\Device\\Harddisk23\\Partition15"},
  {"/dev/sdy1", BRACK(FH_SDY | 1), "\\Device\\Harddisk24\\Partition1"},
  {"/dev/sdy2", BRACK(FH_SDY | 2), "\\Device\\Harddisk24\\Partition2"},
  {"/dev/sdy3", BRACK(FH_SDY | 3), "\\Device\\Harddisk24\\Partition3"},
  {"/dev/sdy4", BRACK(FH_SDY | 4), "\\Device\\Harddisk24\\Partition4"},
  {"/dev/sdy5", BRACK(FH_SDY | 5), "\\Device\\Harddisk24\\Partition5"},
  {"/dev/sdy6", BRACK(FH_SDY | 6), "\\Device\\Harddisk24\\Partition6"},
  {"/dev/sdy7", BRACK(FH_SDY | 7), "\\Device\\Harddisk24\\Partition7"},
  {"/dev/sdy8", BRACK(FH_SDY | 8), "\\Device\\Harddisk24\\Partition8"},
  {"/dev/sdy9", BRACK(FH_SDY | 9), "\\Device\\Harddisk24\\Partition9"},
  {"/dev/sdy10", BRACK(FH_SDY | 10), "\\Device\\Harddisk24\\Partition10"},
  {"/dev/sdy11", BRACK(FH_SDY | 11), "\\Device\\Harddisk24\\Partition11"},
  {"/dev/sdy12", BRACK(FH_SDY | 12), "\\Device\\Harddisk24\\Partition12"},
  {"/dev/sdy13", BRACK(FH_SDY | 13), "\\Device\\Harddisk24\\Partition13"},
  {"/dev/sdy14", BRACK(FH_SDY | 14), "\\Device\\Harddisk24\\Partition14"},
  {"/dev/sdy15", BRACK(FH_SDY | 15), "\\Device\\Harddisk24\\Partition15"},
  {"/dev/sdz1", BRACK(FH_SDZ | 1), "\\Device\\Harddisk25\\Partition1"},
  {"/dev/sdz2", BRACK(FH_SDZ | 2), "\\Device\\Harddisk25\\Partition2"},
  {"/dev/sdz3", BRACK(FH_SDZ | 3), "\\Device\\Harddisk25\\Partition3"},
  {"/dev/sdz4", BRACK(FH_SDZ | 4), "\\Device\\Harddisk25\\Partition4"},
  {"/dev/sdz5", BRACK(FH_SDZ | 5), "\\Device\\Harddisk25\\Partition5"},
  {"/dev/sdz6", BRACK(FH_SDZ | 6), "\\Device\\Harddisk25\\Partition6"},
  {"/dev/sdz7", BRACK(FH_SDZ | 7), "\\Device\\Harddisk25\\Partition7"},
  {"/dev/sdz8", BRACK(FH_SDZ | 8), "\\Device\\Harddisk25\\Partition8"},
  {"/dev/sdz9", BRACK(FH_SDZ | 9), "\\Device\\Harddisk25\\Partition9"},
  {"/dev/sdz10", BRACK(FH_SDZ | 10), "\\Device\\Harddisk25\\Partition10"},
  {"/dev/sdz11", BRACK(FH_SDZ | 11), "\\Device\\Harddisk25\\Partition11"},
  {"/dev/sdz12", BRACK(FH_SDZ | 12), "\\Device\\Harddisk25\\Partition12"},
  {"/dev/sdz13", BRACK(FH_SDZ | 13), "\\Device\\Harddisk25\\Partition13"},
  {"/dev/sdz14", BRACK(FH_SDZ | 14), "\\Device\\Harddisk25\\Partition14"},
  {"/dev/sdz15", BRACK(FH_SDZ | 15), "\\Device\\Harddisk25\\Partition15"},
  {"/dev/sdaa", BRACK(FH_SDAA), "\\Device\\Harddisk26\\Partition0"},
  {"/dev/sdab", BRACK(FH_SDAB), "\\Device\\Harddisk27\\Partition0"},
  {"/dev/sdac", BRACK(FH_SDAC), "\\Device\\Harddisk28\\Partition0"},
  {"/dev/sdad", BRACK(FH_SDAD), "\\Device\\Harddisk29\\Partition0"},
  {"/dev/sdae", BRACK(FH_SDAE), "\\Device\\Harddisk30\\Partition0"},
  {"/dev/sdaf", BRACK(FH_SDAF), "\\Device\\Harddisk31\\Partition0"},
  {"/dev/sdag", BRACK(FH_SDAG), "\\Device\\Harddisk32\\Partition0"},
  {"/dev/sdah", BRACK(FH_SDAH), "\\Device\\Harddisk33\\Partition0"},
  {"/dev/sdai", BRACK(FH_SDAI), "\\Device\\Harddisk34\\Partition0"},
  {"/dev/sdaj", BRACK(FH_SDAJ), "\\Device\\Harddisk35\\Partition0"},
  {"/dev/sdak", BRACK(FH_SDAK), "\\Device\\Harddisk36\\Partition0"},
  {"/dev/sdal", BRACK(FH_SDAL), "\\Device\\Harddisk37\\Partition0"},
  {"/dev/sdam", BRACK(FH_SDAM), "\\Device\\Harddisk38\\Partition0"},
  {"/dev/sdan", BRACK(FH_SDAN), "\\Device\\Harddisk39\\Partition0"},
  {"/dev/sdao", BRACK(FH_SDAO), "\\Device\\Harddisk40\\Partition0"},
  {"/dev/sdap", BRACK(FH_SDAP), "\\Device\\Harddisk41\\Partition0"},
  {"/dev/sdaq", BRACK(FH_SDAQ), "\\Device\\Harddisk42\\Partition0"},
  {"/dev/sdar", BRACK(FH_SDAR), "\\Device\\Harddisk43\\Partition0"},
  {"/dev/sdas", BRACK(FH_SDAS), "\\Device\\Harddisk44\\Partition0"},
  {"/dev/sdat", BRACK(FH_SDAT), "\\Device\\Harddisk45\\Partition0"},
  {"/dev/sdau", BRACK(FH_SDAU), "\\Device\\Harddisk46\\Partition0"},
  {"/dev/sdav", BRACK(FH_SDAV), "\\Device\\Harddisk47\\Partition0"},
  {"/dev/sdaw", BRACK(FH_SDAW), "\\Device\\Harddisk48\\Partition0"},
  {"/dev/sdax", BRACK(FH_SDAX), "\\Device\\Harddisk49\\Partition0"},
  {"/dev/sday", BRACK(FH_SDAY), "\\Device\\Harddisk50\\Partition0"},
  {"/dev/sdaz", BRACK(FH_SDAZ), "\\Device\\Harddisk51\\Partition0"},
  {"/dev/sdaa1", BRACK(FH_SDAA | 1), "\\Device\\Harddisk26\\Partition1"},
  {"/dev/sdaa2", BRACK(FH_SDAA | 2), "\\Device\\Harddisk26\\Partition2"},
  {"/dev/sdaa3", BRACK(FH_SDAA | 3), "\\Device\\Harddisk26\\Partition3"},
  {"/dev/sdaa4", BRACK(FH_SDAA | 4), "\\Device\\Harddisk26\\Partition4"},
  {"/dev/sdaa5", BRACK(FH_SDAA | 5), "\\Device\\Harddisk26\\Partition5"},
  {"/dev/sdaa6", BRACK(FH_SDAA | 6), "\\Device\\Harddisk26\\Partition6"},
  {"/dev/sdaa7", BRACK(FH_SDAA | 7), "\\Device\\Harddisk26\\Partition7"},
  {"/dev/sdaa8", BRACK(FH_SDAA | 8), "\\Device\\Harddisk26\\Partition8"},
  {"/dev/sdaa9", BRACK(FH_SDAA | 9), "\\Device\\Harddisk26\\Partition9"},
  {"/dev/sdaa10", BRACK(FH_SDAA | 10), "\\Device\\Harddisk26\\Partition10"},
  {"/dev/sdaa11", BRACK(FH_SDAA | 11), "\\Device\\Harddisk26\\Partition11"},
  {"/dev/sdaa12", BRACK(FH_SDAA | 12), "\\Device\\Harddisk26\\Partition12"},
  {"/dev/sdaa13", BRACK(FH_SDAA | 13), "\\Device\\Harddisk26\\Partition13"},
  {"/dev/sdaa14", BRACK(FH_SDAA | 14), "\\Device\\Harddisk26\\Partition14"},
  {"/dev/sdaa15", BRACK(FH_SDAA | 15), "\\Device\\Harddisk26\\Partition15"},
  {"/dev/sdab1", BRACK(FH_SDAB | 1), "\\Device\\Harddisk27\\Partition1"},
  {"/dev/sdab2", BRACK(FH_SDAB | 2), "\\Device\\Harddisk27\\Partition2"},
  {"/dev/sdab3", BRACK(FH_SDAB | 3), "\\Device\\Harddisk27\\Partition3"},
  {"/dev/sdab4", BRACK(FH_SDAB | 4), "\\Device\\Harddisk27\\Partition4"},
  {"/dev/sdab5", BRACK(FH_SDAB | 5), "\\Device\\Harddisk27\\Partition5"},
  {"/dev/sdab6", BRACK(FH_SDAB | 6), "\\Device\\Harddisk27\\Partition6"},
  {"/dev/sdab7", BRACK(FH_SDAB | 7), "\\Device\\Harddisk27\\Partition7"},
  {"/dev/sdab8", BRACK(FH_SDAB | 8), "\\Device\\Harddisk27\\Partition8"},
  {"/dev/sdab9", BRACK(FH_SDAB | 9), "\\Device\\Harddisk27\\Partition9"},
  {"/dev/sdab10", BRACK(FH_SDAB | 10), "\\Device\\Harddisk27\\Partition10"},
  {"/dev/sdab11", BRACK(FH_SDAB | 11), "\\Device\\Harddisk27\\Partition11"},
  {"/dev/sdab12", BRACK(FH_SDAB | 12), "\\Device\\Harddisk27\\Partition12"},
  {"/dev/sdab13", BRACK(FH_SDAB | 13), "\\Device\\Harddisk27\\Partition13"},
  {"/dev/sdab14", BRACK(FH_SDAB | 14), "\\Device\\Harddisk27\\Partition14"},
  {"/dev/sdab15", BRACK(FH_SDAB | 15), "\\Device\\Harddisk27\\Partition15"},
  {"/dev/sdac1", BRACK(FH_SDAC | 1), "\\Device\\Harddisk28\\Partition1"},
  {"/dev/sdac2", BRACK(FH_SDAC | 2), "\\Device\\Harddisk28\\Partition2"},
  {"/dev/sdac3", BRACK(FH_SDAC | 3), "\\Device\\Harddisk28\\Partition3"},
  {"/dev/sdac4", BRACK(FH_SDAC | 4), "\\Device\\Harddisk28\\Partition4"},
  {"/dev/sdac5", BRACK(FH_SDAC | 5), "\\Device\\Harddisk28\\Partition5"},
  {"/dev/sdac6", BRACK(FH_SDAC | 6), "\\Device\\Harddisk28\\Partition6"},
  {"/dev/sdac7", BRACK(FH_SDAC | 7), "\\Device\\Harddisk28\\Partition7"},
  {"/dev/sdac8", BRACK(FH_SDAC | 8), "\\Device\\Harddisk28\\Partition8"},
  {"/dev/sdac9", BRACK(FH_SDAC | 9), "\\Device\\Harddisk28\\Partition9"},
  {"/dev/sdac10", BRACK(FH_SDAC | 10), "\\Device\\Harddisk28\\Partition10"},
  {"/dev/sdac11", BRACK(FH_SDAC | 11), "\\Device\\Harddisk28\\Partition11"},
  {"/dev/sdac12", BRACK(FH_SDAC | 12), "\\Device\\Harddisk28\\Partition12"},
  {"/dev/sdac13", BRACK(FH_SDAC | 13), "\\Device\\Harddisk28\\Partition13"},
  {"/dev/sdac14", BRACK(FH_SDAC | 14), "\\Device\\Harddisk28\\Partition14"},
  {"/dev/sdac15", BRACK(FH_SDAC | 15), "\\Device\\Harddisk28\\Partition15"},
  {"/dev/sdad1", BRACK(FH_SDAD | 1), "\\Device\\Harddisk29\\Partition1"},
  {"/dev/sdad2", BRACK(FH_SDAD | 2), "\\Device\\Harddisk29\\Partition2"},
  {"/dev/sdad3", BRACK(FH_SDAD | 3), "\\Device\\Harddisk29\\Partition3"},
  {"/dev/sdad4", BRACK(FH_SDAD | 4), "\\Device\\Harddisk29\\Partition4"},
  {"/dev/sdad5", BRACK(FH_SDAD | 5), "\\Device\\Harddisk29\\Partition5"},
  {"/dev/sdad6", BRACK(FH_SDAD | 6), "\\Device\\Harddisk29\\Partition6"},
  {"/dev/sdad7", BRACK(FH_SDAD | 7), "\\Device\\Harddisk29\\Partition7"},
  {"/dev/sdad8", BRACK(FH_SDAD | 8), "\\Device\\Harddisk29\\Partition8"},
  {"/dev/sdad9", BRACK(FH_SDAD | 9), "\\Device\\Harddisk29\\Partition9"},
  {"/dev/sdad10", BRACK(FH_SDAD | 10), "\\Device\\Harddisk29\\Partition10"},
  {"/dev/sdad11", BRACK(FH_SDAD | 11), "\\Device\\Harddisk29\\Partition11"},
  {"/dev/sdad12", BRACK(FH_SDAD | 12), "\\Device\\Harddisk29\\Partition12"},
  {"/dev/sdad13", BRACK(FH_SDAD | 13), "\\Device\\Harddisk29\\Partition13"},
  {"/dev/sdad14", BRACK(FH_SDAD | 14), "\\Device\\Harddisk29\\Partition14"},
  {"/dev/sdad15", BRACK(FH_SDAD | 15), "\\Device\\Harddisk29\\Partition15"},
  {"/dev/sdae1", BRACK(FH_SDAE | 1), "\\Device\\Harddisk30\\Partition1"},
  {"/dev/sdae2", BRACK(FH_SDAE | 2), "\\Device\\Harddisk30\\Partition2"},
  {"/dev/sdae3", BRACK(FH_SDAE | 3), "\\Device\\Harddisk30\\Partition3"},
  {"/dev/sdae4", BRACK(FH_SDAE | 4), "\\Device\\Harddisk30\\Partition4"},
  {"/dev/sdae5", BRACK(FH_SDAE | 5), "\\Device\\Harddisk30\\Partition5"},
  {"/dev/sdae6", BRACK(FH_SDAE | 6), "\\Device\\Harddisk30\\Partition6"},
  {"/dev/sdae7", BRACK(FH_SDAE | 7), "\\Device\\Harddisk30\\Partition7"},
  {"/dev/sdae8", BRACK(FH_SDAE | 8), "\\Device\\Harddisk30\\Partition8"},
  {"/dev/sdae9", BRACK(FH_SDAE | 9), "\\Device\\Harddisk30\\Partition9"},
  {"/dev/sdae10", BRACK(FH_SDAE | 10), "\\Device\\Harddisk30\\Partition10"},
  {"/dev/sdae11", BRACK(FH_SDAE | 11), "\\Device\\Harddisk30\\Partition11"},
  {"/dev/sdae12", BRACK(FH_SDAE | 12), "\\Device\\Harddisk30\\Partition12"},
  {"/dev/sdae13", BRACK(FH_SDAE | 13), "\\Device\\Harddisk30\\Partition13"},
  {"/dev/sdae14", BRACK(FH_SDAE | 14), "\\Device\\Harddisk30\\Partition14"},
  {"/dev/sdae15", BRACK(FH_SDAE | 15), "\\Device\\Harddisk30\\Partition15"},
  {"/dev/sdaf1", BRACK(FH_SDAF | 1), "\\Device\\Harddisk31\\Partition1"},
  {"/dev/sdaf2", BRACK(FH_SDAF | 2), "\\Device\\Harddisk31\\Partition2"},
  {"/dev/sdaf3", BRACK(FH_SDAF | 3), "\\Device\\Harddisk31\\Partition3"},
  {"/dev/sdaf4", BRACK(FH_SDAF | 4), "\\Device\\Harddisk31\\Partition4"},
  {"/dev/sdaf5", BRACK(FH_SDAF | 5), "\\Device\\Harddisk31\\Partition5"},
  {"/dev/sdaf6", BRACK(FH_SDAF | 6), "\\Device\\Harddisk31\\Partition6"},
  {"/dev/sdaf7", BRACK(FH_SDAF | 7), "\\Device\\Harddisk31\\Partition7"},
  {"/dev/sdaf8", BRACK(FH_SDAF | 8), "\\Device\\Harddisk31\\Partition8"},
  {"/dev/sdaf9", BRACK(FH_SDAF | 9), "\\Device\\Harddisk31\\Partition9"},
  {"/dev/sdaf10", BRACK(FH_SDAF | 10), "\\Device\\Harddisk31\\Partition10"},
  {"/dev/sdaf11", BRACK(FH_SDAF | 11), "\\Device\\Harddisk31\\Partition11"},
  {"/dev/sdaf12", BRACK(FH_SDAF | 12), "\\Device\\Harddisk31\\Partition12"},
  {"/dev/sdaf13", BRACK(FH_SDAF | 13), "\\Device\\Harddisk31\\Partition13"},
  {"/dev/sdaf14", BRACK(FH_SDAF | 14), "\\Device\\Harddisk31\\Partition14"},
  {"/dev/sdaf15", BRACK(FH_SDAF | 15), "\\Device\\Harddisk31\\Partition15"},
  {"/dev/sdag1", BRACK(FH_SDAG | 1), "\\Device\\Harddisk32\\Partition1"},
  {"/dev/sdag2", BRACK(FH_SDAG | 2), "\\Device\\Harddisk32\\Partition2"},
  {"/dev/sdag3", BRACK(FH_SDAG | 3), "\\Device\\Harddisk32\\Partition3"},
  {"/dev/sdag4", BRACK(FH_SDAG | 4), "\\Device\\Harddisk32\\Partition4"},
  {"/dev/sdag5", BRACK(FH_SDAG | 5), "\\Device\\Harddisk32\\Partition5"},
  {"/dev/sdag6", BRACK(FH_SDAG | 6), "\\Device\\Harddisk32\\Partition6"},
  {"/dev/sdag7", BRACK(FH_SDAG | 7), "\\Device\\Harddisk32\\Partition7"},
  {"/dev/sdag8", BRACK(FH_SDAG | 8), "\\Device\\Harddisk32\\Partition8"},
  {"/dev/sdag9", BRACK(FH_SDAG | 9), "\\Device\\Harddisk32\\Partition9"},
  {"/dev/sdag10", BRACK(FH_SDAG | 10), "\\Device\\Harddisk32\\Partition10"},
  {"/dev/sdag11", BRACK(FH_SDAG | 11), "\\Device\\Harddisk32\\Partition11"},
  {"/dev/sdag12", BRACK(FH_SDAG | 12), "\\Device\\Harddisk32\\Partition12"},
  {"/dev/sdag13", BRACK(FH_SDAG | 13), "\\Device\\Harddisk32\\Partition13"},
  {"/dev/sdag14", BRACK(FH_SDAG | 14), "\\Device\\Harddisk32\\Partition14"},
  {"/dev/sdag15", BRACK(FH_SDAG | 15), "\\Device\\Harddisk32\\Partition15"},
  {"/dev/sdah1", BRACK(FH_SDAH | 1), "\\Device\\Harddisk33\\Partition1"},
  {"/dev/sdah2", BRACK(FH_SDAH | 2), "\\Device\\Harddisk33\\Partition2"},
  {"/dev/sdah3", BRACK(FH_SDAH | 3), "\\Device\\Harddisk33\\Partition3"},
  {"/dev/sdah4", BRACK(FH_SDAH | 4), "\\Device\\Harddisk33\\Partition4"},
  {"/dev/sdah5", BRACK(FH_SDAH | 5), "\\Device\\Harddisk33\\Partition5"},
  {"/dev/sdah6", BRACK(FH_SDAH | 6), "\\Device\\Harddisk33\\Partition6"},
  {"/dev/sdah7", BRACK(FH_SDAH | 7), "\\Device\\Harddisk33\\Partition7"},
  {"/dev/sdah8", BRACK(FH_SDAH | 8), "\\Device\\Harddisk33\\Partition8"},
  {"/dev/sdah9", BRACK(FH_SDAH | 9), "\\Device\\Harddisk33\\Partition9"},
  {"/dev/sdah10", BRACK(FH_SDAH | 10), "\\Device\\Harddisk33\\Partition10"},
  {"/dev/sdah11", BRACK(FH_SDAH | 11), "\\Device\\Harddisk33\\Partition11"},
  {"/dev/sdah12", BRACK(FH_SDAH | 12), "\\Device\\Harddisk33\\Partition12"},
  {"/dev/sdah13", BRACK(FH_SDAH | 13), "\\Device\\Harddisk33\\Partition13"},
  {"/dev/sdah14", BRACK(FH_SDAH | 14), "\\Device\\Harddisk33\\Partition14"},
  {"/dev/sdah15", BRACK(FH_SDAH | 15), "\\Device\\Harddisk33\\Partition15"},
  {"/dev/sdai1", BRACK(FH_SDAI | 1), "\\Device\\Harddisk34\\Partition1"},
  {"/dev/sdai2", BRACK(FH_SDAI | 2), "\\Device\\Harddisk34\\Partition2"},
  {"/dev/sdai3", BRACK(FH_SDAI | 3), "\\Device\\Harddisk34\\Partition3"},
  {"/dev/sdai4", BRACK(FH_SDAI | 4), "\\Device\\Harddisk34\\Partition4"},
  {"/dev/sdai5", BRACK(FH_SDAI | 5), "\\Device\\Harddisk34\\Partition5"},
  {"/dev/sdai6", BRACK(FH_SDAI | 6), "\\Device\\Harddisk34\\Partition6"},
  {"/dev/sdai7", BRACK(FH_SDAI | 7), "\\Device\\Harddisk34\\Partition7"},
  {"/dev/sdai8", BRACK(FH_SDAI | 8), "\\Device\\Harddisk34\\Partition8"},
  {"/dev/sdai9", BRACK(FH_SDAI | 9), "\\Device\\Harddisk34\\Partition9"},
  {"/dev/sdai10", BRACK(FH_SDAI | 10), "\\Device\\Harddisk34\\Partition10"},
  {"/dev/sdai11", BRACK(FH_SDAI | 11), "\\Device\\Harddisk34\\Partition11"},
  {"/dev/sdai12", BRACK(FH_SDAI | 12), "\\Device\\Harddisk34\\Partition12"},
  {"/dev/sdai13", BRACK(FH_SDAI | 13), "\\Device\\Harddisk34\\Partition13"},
  {"/dev/sdai14", BRACK(FH_SDAI | 14), "\\Device\\Harddisk34\\Partition14"},
  {"/dev/sdai15", BRACK(FH_SDAI | 15), "\\Device\\Harddisk34\\Partition15"},
  {"/dev/sdaj1", BRACK(FH_SDAJ | 1), "\\Device\\Harddisk35\\Partition1"},
  {"/dev/sdaj2", BRACK(FH_SDAJ | 2), "\\Device\\Harddisk35\\Partition2"},
  {"/dev/sdaj3", BRACK(FH_SDAJ | 3), "\\Device\\Harddisk35\\Partition3"},
  {"/dev/sdaj4", BRACK(FH_SDAJ | 4), "\\Device\\Harddisk35\\Partition4"},
  {"/dev/sdaj5", BRACK(FH_SDAJ | 5), "\\Device\\Harddisk35\\Partition5"},
  {"/dev/sdaj6", BRACK(FH_SDAJ | 6), "\\Device\\Harddisk35\\Partition6"},
  {"/dev/sdaj7", BRACK(FH_SDAJ | 7), "\\Device\\Harddisk35\\Partition7"},
  {"/dev/sdaj8", BRACK(FH_SDAJ | 8), "\\Device\\Harddisk35\\Partition8"},
  {"/dev/sdaj9", BRACK(FH_SDAJ | 9), "\\Device\\Harddisk35\\Partition9"},
  {"/dev/sdaj10", BRACK(FH_SDAJ | 10), "\\Device\\Harddisk35\\Partition10"},
  {"/dev/sdaj11", BRACK(FH_SDAJ | 11), "\\Device\\Harddisk35\\Partition11"},
  {"/dev/sdaj12", BRACK(FH_SDAJ | 12), "\\Device\\Harddisk35\\Partition12"},
  {"/dev/sdaj13", BRACK(FH_SDAJ | 13), "\\Device\\Harddisk35\\Partition13"},
  {"/dev/sdaj14", BRACK(FH_SDAJ | 14), "\\Device\\Harddisk35\\Partition14"},
  {"/dev/sdaj15", BRACK(FH_SDAJ | 15), "\\Device\\Harddisk35\\Partition15"},
  {"/dev/sdak1", BRACK(FH_SDAK | 1), "\\Device\\Harddisk36\\Partition1"},
  {"/dev/sdak2", BRACK(FH_SDAK | 2), "\\Device\\Harddisk36\\Partition2"},
  {"/dev/sdak3", BRACK(FH_SDAK | 3), "\\Device\\Harddisk36\\Partition3"},
  {"/dev/sdak4", BRACK(FH_SDAK | 4), "\\Device\\Harddisk36\\Partition4"},
  {"/dev/sdak5", BRACK(FH_SDAK | 5), "\\Device\\Harddisk36\\Partition5"},
  {"/dev/sdak6", BRACK(FH_SDAK | 6), "\\Device\\Harddisk36\\Partition6"},
  {"/dev/sdak7", BRACK(FH_SDAK | 7), "\\Device\\Harddisk36\\Partition7"},
  {"/dev/sdak8", BRACK(FH_SDAK | 8), "\\Device\\Harddisk36\\Partition8"},
  {"/dev/sdak9", BRACK(FH_SDAK | 9), "\\Device\\Harddisk36\\Partition9"},
  {"/dev/sdak10", BRACK(FH_SDAK | 10), "\\Device\\Harddisk36\\Partition10"},
  {"/dev/sdak11", BRACK(FH_SDAK | 11), "\\Device\\Harddisk36\\Partition11"},
  {"/dev/sdak12", BRACK(FH_SDAK | 12), "\\Device\\Harddisk36\\Partition12"},
  {"/dev/sdak13", BRACK(FH_SDAK | 13), "\\Device\\Harddisk36\\Partition13"},
  {"/dev/sdak14", BRACK(FH_SDAK | 14), "\\Device\\Harddisk36\\Partition14"},
  {"/dev/sdak15", BRACK(FH_SDAK | 15), "\\Device\\Harddisk36\\Partition15"},
  {"/dev/sdal1", BRACK(FH_SDAL | 1), "\\Device\\Harddisk37\\Partition1"},
  {"/dev/sdal2", BRACK(FH_SDAL | 2), "\\Device\\Harddisk37\\Partition2"},
  {"/dev/sdal3", BRACK(FH_SDAL | 3), "\\Device\\Harddisk37\\Partition3"},
  {"/dev/sdal4", BRACK(FH_SDAL | 4), "\\Device\\Harddisk37\\Partition4"},
  {"/dev/sdal5", BRACK(FH_SDAL | 5), "\\Device\\Harddisk37\\Partition5"},
  {"/dev/sdal6", BRACK(FH_SDAL | 6), "\\Device\\Harddisk37\\Partition6"},
  {"/dev/sdal7", BRACK(FH_SDAL | 7), "\\Device\\Harddisk37\\Partition7"},
  {"/dev/sdal8", BRACK(FH_SDAL | 8), "\\Device\\Harddisk37\\Partition8"},
  {"/dev/sdal9", BRACK(FH_SDAL | 9), "\\Device\\Harddisk37\\Partition9"},
  {"/dev/sdal10", BRACK(FH_SDAL | 10), "\\Device\\Harddisk37\\Partition10"},
  {"/dev/sdal11", BRACK(FH_SDAL | 11), "\\Device\\Harddisk37\\Partition11"},
  {"/dev/sdal12", BRACK(FH_SDAL | 12), "\\Device\\Harddisk37\\Partition12"},
  {"/dev/sdal13", BRACK(FH_SDAL | 13), "\\Device\\Harddisk37\\Partition13"},
  {"/dev/sdal14", BRACK(FH_SDAL | 14), "\\Device\\Harddisk37\\Partition14"},
  {"/dev/sdal15", BRACK(FH_SDAL | 15), "\\Device\\Harddisk37\\Partition15"},
  {"/dev/sdam1", BRACK(FH_SDAM | 1), "\\Device\\Harddisk38\\Partition1"},
  {"/dev/sdam2", BRACK(FH_SDAM | 2), "\\Device\\Harddisk38\\Partition2"},
  {"/dev/sdam3", BRACK(FH_SDAM | 3), "\\Device\\Harddisk38\\Partition3"},
  {"/dev/sdam4", BRACK(FH_SDAM | 4), "\\Device\\Harddisk38\\Partition4"},
  {"/dev/sdam5", BRACK(FH_SDAM | 5), "\\Device\\Harddisk38\\Partition5"},
  {"/dev/sdam6", BRACK(FH_SDAM | 6), "\\Device\\Harddisk38\\Partition6"},
  {"/dev/sdam7", BRACK(FH_SDAM | 7), "\\Device\\Harddisk38\\Partition7"},
  {"/dev/sdam8", BRACK(FH_SDAM | 8), "\\Device\\Harddisk38\\Partition8"},
  {"/dev/sdam9", BRACK(FH_SDAM | 9), "\\Device\\Harddisk38\\Partition9"},
  {"/dev/sdam10", BRACK(FH_SDAM | 10), "\\Device\\Harddisk38\\Partition10"},
  {"/dev/sdam11", BRACK(FH_SDAM | 11), "\\Device\\Harddisk38\\Partition11"},
  {"/dev/sdam12", BRACK(FH_SDAM | 12), "\\Device\\Harddisk38\\Partition12"},
  {"/dev/sdam13", BRACK(FH_SDAM | 13), "\\Device\\Harddisk38\\Partition13"},
  {"/dev/sdam14", BRACK(FH_SDAM | 14), "\\Device\\Harddisk38\\Partition14"},
  {"/dev/sdam15", BRACK(FH_SDAM | 15), "\\Device\\Harddisk38\\Partition15"},
  {"/dev/sdan1", BRACK(FH_SDAN | 1), "\\Device\\Harddisk39\\Partition1"},
  {"/dev/sdan2", BRACK(FH_SDAN | 2), "\\Device\\Harddisk39\\Partition2"},
  {"/dev/sdan3", BRACK(FH_SDAN | 3), "\\Device\\Harddisk39\\Partition3"},
  {"/dev/sdan4", BRACK(FH_SDAN | 4), "\\Device\\Harddisk39\\Partition4"},
  {"/dev/sdan5", BRACK(FH_SDAN | 5), "\\Device\\Harddisk39\\Partition5"},
  {"/dev/sdan6", BRACK(FH_SDAN | 6), "\\Device\\Harddisk39\\Partition6"},
  {"/dev/sdan7", BRACK(FH_SDAN | 7), "\\Device\\Harddisk39\\Partition7"},
  {"/dev/sdan8", BRACK(FH_SDAN | 8), "\\Device\\Harddisk39\\Partition8"},
  {"/dev/sdan9", BRACK(FH_SDAN | 9), "\\Device\\Harddisk39\\Partition9"},
  {"/dev/sdan10", BRACK(FH_SDAN | 10), "\\Device\\Harddisk39\\Partition10"},
  {"/dev/sdan11", BRACK(FH_SDAN | 11), "\\Device\\Harddisk39\\Partition11"},
  {"/dev/sdan12", BRACK(FH_SDAN | 12), "\\Device\\Harddisk39\\Partition12"},
  {"/dev/sdan13", BRACK(FH_SDAN | 13), "\\Device\\Harddisk39\\Partition13"},
  {"/dev/sdan14", BRACK(FH_SDAN | 14), "\\Device\\Harddisk39\\Partition14"},
  {"/dev/sdan15", BRACK(FH_SDAN | 15), "\\Device\\Harddisk39\\Partition15"},
  {"/dev/sdao1", BRACK(FH_SDAO | 1), "\\Device\\Harddisk40\\Partition1"},
  {"/dev/sdao2", BRACK(FH_SDAO | 2), "\\Device\\Harddisk40\\Partition2"},
  {"/dev/sdao3", BRACK(FH_SDAO | 3), "\\Device\\Harddisk40\\Partition3"},
  {"/dev/sdao4", BRACK(FH_SDAO | 4), "\\Device\\Harddisk40\\Partition4"},
  {"/dev/sdao5", BRACK(FH_SDAO | 5), "\\Device\\Harddisk40\\Partition5"},
  {"/dev/sdao6", BRACK(FH_SDAO | 6), "\\Device\\Harddisk40\\Partition6"},
  {"/dev/sdao7", BRACK(FH_SDAO | 7), "\\Device\\Harddisk40\\Partition7"},
  {"/dev/sdao8", BRACK(FH_SDAO | 8), "\\Device\\Harddisk40\\Partition8"},
  {"/dev/sdao9", BRACK(FH_SDAO | 9), "\\Device\\Harddisk40\\Partition9"},
  {"/dev/sdao10", BRACK(FH_SDAO | 10), "\\Device\\Harddisk40\\Partition10"},
  {"/dev/sdao11", BRACK(FH_SDAO | 11), "\\Device\\Harddisk40\\Partition11"},
  {"/dev/sdao12", BRACK(FH_SDAO | 12), "\\Device\\Harddisk40\\Partition12"},
  {"/dev/sdao13", BRACK(FH_SDAO | 13), "\\Device\\Harddisk40\\Partition13"},
  {"/dev/sdao14", BRACK(FH_SDAO | 14), "\\Device\\Harddisk40\\Partition14"},
  {"/dev/sdao15", BRACK(FH_SDAO | 15), "\\Device\\Harddisk40\\Partition15"},
  {"/dev/sdap1", BRACK(FH_SDAP | 1), "\\Device\\Harddisk41\\Partition1"},
  {"/dev/sdap2", BRACK(FH_SDAP | 2), "\\Device\\Harddisk41\\Partition2"},
  {"/dev/sdap3", BRACK(FH_SDAP | 3), "\\Device\\Harddisk41\\Partition3"},
  {"/dev/sdap4", BRACK(FH_SDAP | 4), "\\Device\\Harddisk41\\Partition4"},
  {"/dev/sdap5", BRACK(FH_SDAP | 5), "\\Device\\Harddisk41\\Partition5"},
  {"/dev/sdap6", BRACK(FH_SDAP | 6), "\\Device\\Harddisk41\\Partition6"},
  {"/dev/sdap7", BRACK(FH_SDAP | 7), "\\Device\\Harddisk41\\Partition7"},
  {"/dev/sdap8", BRACK(FH_SDAP | 8), "\\Device\\Harddisk41\\Partition8"},
  {"/dev/sdap9", BRACK(FH_SDAP | 9), "\\Device\\Harddisk41\\Partition9"},
  {"/dev/sdap10", BRACK(FH_SDAP | 10), "\\Device\\Harddisk41\\Partition10"},
  {"/dev/sdap11", BRACK(FH_SDAP | 11), "\\Device\\Harddisk41\\Partition11"},
  {"/dev/sdap12", BRACK(FH_SDAP | 12), "\\Device\\Harddisk41\\Partition12"},
  {"/dev/sdap13", BRACK(FH_SDAP | 13), "\\Device\\Harddisk41\\Partition13"},
  {"/dev/sdap14", BRACK(FH_SDAP | 14), "\\Device\\Harddisk41\\Partition14"},
  {"/dev/sdap15", BRACK(FH_SDAP | 15), "\\Device\\Harddisk41\\Partition15"},
  {"/dev/sdaq1", BRACK(FH_SDAQ | 1), "\\Device\\Harddisk42\\Partition1"},
  {"/dev/sdaq2", BRACK(FH_SDAQ | 2), "\\Device\\Harddisk42\\Partition2"},
  {"/dev/sdaq3", BRACK(FH_SDAQ | 3), "\\Device\\Harddisk42\\Partition3"},
  {"/dev/sdaq4", BRACK(FH_SDAQ | 4), "\\Device\\Harddisk42\\Partition4"},
  {"/dev/sdaq5", BRACK(FH_SDAQ | 5), "\\Device\\Harddisk42\\Partition5"},
  {"/dev/sdaq6", BRACK(FH_SDAQ | 6), "\\Device\\Harddisk42\\Partition6"},
  {"/dev/sdaq7", BRACK(FH_SDAQ | 7), "\\Device\\Harddisk42\\Partition7"},
  {"/dev/sdaq8", BRACK(FH_SDAQ | 8), "\\Device\\Harddisk42\\Partition8"},
  {"/dev/sdaq9", BRACK(FH_SDAQ | 9), "\\Device\\Harddisk42\\Partition9"},
  {"/dev/sdaq10", BRACK(FH_SDAQ | 10), "\\Device\\Harddisk42\\Partition10"},
  {"/dev/sdaq11", BRACK(FH_SDAQ | 11), "\\Device\\Harddisk42\\Partition11"},
  {"/dev/sdaq12", BRACK(FH_SDAQ | 12), "\\Device\\Harddisk42\\Partition12"},
  {"/dev/sdaq13", BRACK(FH_SDAQ | 13), "\\Device\\Harddisk42\\Partition13"},
  {"/dev/sdaq14", BRACK(FH_SDAQ | 14), "\\Device\\Harddisk42\\Partition14"},
  {"/dev/sdaq15", BRACK(FH_SDAQ | 15), "\\Device\\Harddisk42\\Partition15"},
  {"/dev/sdar1", BRACK(FH_SDAR | 1), "\\Device\\Harddisk43\\Partition1"},
  {"/dev/sdar2", BRACK(FH_SDAR | 2), "\\Device\\Harddisk43\\Partition2"},
  {"/dev/sdar3", BRACK(FH_SDAR | 3), "\\Device\\Harddisk43\\Partition3"},
  {"/dev/sdar4", BRACK(FH_SDAR | 4), "\\Device\\Harddisk43\\Partition4"},
  {"/dev/sdar5", BRACK(FH_SDAR | 5), "\\Device\\Harddisk43\\Partition5"},
  {"/dev/sdar6", BRACK(FH_SDAR | 6), "\\Device\\Harddisk43\\Partition6"},
  {"/dev/sdar7", BRACK(FH_SDAR | 7), "\\Device\\Harddisk43\\Partition7"},
  {"/dev/sdar8", BRACK(FH_SDAR | 8), "\\Device\\Harddisk43\\Partition8"},
  {"/dev/sdar9", BRACK(FH_SDAR | 9), "\\Device\\Harddisk43\\Partition9"},
  {"/dev/sdar10", BRACK(FH_SDAR | 10), "\\Device\\Harddisk43\\Partition10"},
  {"/dev/sdar11", BRACK(FH_SDAR | 11), "\\Device\\Harddisk43\\Partition11"},
  {"/dev/sdar12", BRACK(FH_SDAR | 12), "\\Device\\Harddisk43\\Partition12"},
  {"/dev/sdar13", BRACK(FH_SDAR | 13), "\\Device\\Harddisk43\\Partition13"},
  {"/dev/sdar14", BRACK(FH_SDAR | 14), "\\Device\\Harddisk43\\Partition14"},
  {"/dev/sdar15", BRACK(FH_SDAR | 15), "\\Device\\Harddisk43\\Partition15"},
  {"/dev/sdas1", BRACK(FH_SDAS | 1), "\\Device\\Harddisk44\\Partition1"},
  {"/dev/sdas2", BRACK(FH_SDAS | 2), "\\Device\\Harddisk44\\Partition2"},
  {"/dev/sdas3", BRACK(FH_SDAS | 3), "\\Device\\Harddisk44\\Partition3"},
  {"/dev/sdas4", BRACK(FH_SDAS | 4), "\\Device\\Harddisk44\\Partition4"},
  {"/dev/sdas5", BRACK(FH_SDAS | 5), "\\Device\\Harddisk44\\Partition5"},
  {"/dev/sdas6", BRACK(FH_SDAS | 6), "\\Device\\Harddisk44\\Partition6"},
  {"/dev/sdas7", BRACK(FH_SDAS | 7), "\\Device\\Harddisk44\\Partition7"},
  {"/dev/sdas8", BRACK(FH_SDAS | 8), "\\Device\\Harddisk44\\Partition8"},
  {"/dev/sdas9", BRACK(FH_SDAS | 9), "\\Device\\Harddisk44\\Partition9"},
  {"/dev/sdas10", BRACK(FH_SDAS | 10), "\\Device\\Harddisk44\\Partition10"},
  {"/dev/sdas11", BRACK(FH_SDAS | 11), "\\Device\\Harddisk44\\Partition11"},
  {"/dev/sdas12", BRACK(FH_SDAS | 12), "\\Device\\Harddisk44\\Partition12"},
  {"/dev/sdas13", BRACK(FH_SDAS | 13), "\\Device\\Harddisk44\\Partition13"},
  {"/dev/sdas14", BRACK(FH_SDAS | 14), "\\Device\\Harddisk44\\Partition14"},
  {"/dev/sdas15", BRACK(FH_SDAS | 15), "\\Device\\Harddisk44\\Partition15"},
  {"/dev/sdat1", BRACK(FH_SDAT | 1), "\\Device\\Harddisk45\\Partition1"},
  {"/dev/sdat2", BRACK(FH_SDAT | 2), "\\Device\\Harddisk45\\Partition2"},
  {"/dev/sdat3", BRACK(FH_SDAT | 3), "\\Device\\Harddisk45\\Partition3"},
  {"/dev/sdat4", BRACK(FH_SDAT | 4), "\\Device\\Harddisk45\\Partition4"},
  {"/dev/sdat5", BRACK(FH_SDAT | 5), "\\Device\\Harddisk45\\Partition5"},
  {"/dev/sdat6", BRACK(FH_SDAT | 6), "\\Device\\Harddisk45\\Partition6"},
  {"/dev/sdat7", BRACK(FH_SDAT | 7), "\\Device\\Harddisk45\\Partition7"},
  {"/dev/sdat8", BRACK(FH_SDAT | 8), "\\Device\\Harddisk45\\Partition8"},
  {"/dev/sdat9", BRACK(FH_SDAT | 9), "\\Device\\Harddisk45\\Partition9"},
  {"/dev/sdat10", BRACK(FH_SDAT | 10), "\\Device\\Harddisk45\\Partition10"},
  {"/dev/sdat11", BRACK(FH_SDAT | 11), "\\Device\\Harddisk45\\Partition11"},
  {"/dev/sdat12", BRACK(FH_SDAT | 12), "\\Device\\Harddisk45\\Partition12"},
  {"/dev/sdat13", BRACK(FH_SDAT | 13), "\\Device\\Harddisk45\\Partition13"},
  {"/dev/sdat14", BRACK(FH_SDAT | 14), "\\Device\\Harddisk45\\Partition14"},
  {"/dev/sdat15", BRACK(FH_SDAT | 15), "\\Device\\Harddisk45\\Partition15"},
  {"/dev/sdau1", BRACK(FH_SDAU | 1), "\\Device\\Harddisk46\\Partition1"},
  {"/dev/sdau2", BRACK(FH_SDAU | 2), "\\Device\\Harddisk46\\Partition2"},
  {"/dev/sdau3", BRACK(FH_SDAU | 3), "\\Device\\Harddisk46\\Partition3"},
  {"/dev/sdau4", BRACK(FH_SDAU | 4), "\\Device\\Harddisk46\\Partition4"},
  {"/dev/sdau5", BRACK(FH_SDAU | 5), "\\Device\\Harddisk46\\Partition5"},
  {"/dev/sdau6", BRACK(FH_SDAU | 6), "\\Device\\Harddisk46\\Partition6"},
  {"/dev/sdau7", BRACK(FH_SDAU | 7), "\\Device\\Harddisk46\\Partition7"},
  {"/dev/sdau8", BRACK(FH_SDAU | 8), "\\Device\\Harddisk46\\Partition8"},
  {"/dev/sdau9", BRACK(FH_SDAU | 9), "\\Device\\Harddisk46\\Partition9"},
  {"/dev/sdau10", BRACK(FH_SDAU | 10), "\\Device\\Harddisk46\\Partition10"},
  {"/dev/sdau11", BRACK(FH_SDAU | 11), "\\Device\\Harddisk46\\Partition11"},
  {"/dev/sdau12", BRACK(FH_SDAU | 12), "\\Device\\Harddisk46\\Partition12"},
  {"/dev/sdau13", BRACK(FH_SDAU | 13), "\\Device\\Harddisk46\\Partition13"},
  {"/dev/sdau14", BRACK(FH_SDAU | 14), "\\Device\\Harddisk46\\Partition14"},
  {"/dev/sdau15", BRACK(FH_SDAU | 15), "\\Device\\Harddisk46\\Partition15"},
  {"/dev/sdav1", BRACK(FH_SDAV | 1), "\\Device\\Harddisk47\\Partition1"},
  {"/dev/sdav2", BRACK(FH_SDAV | 2), "\\Device\\Harddisk47\\Partition2"},
  {"/dev/sdav3", BRACK(FH_SDAV | 3), "\\Device\\Harddisk47\\Partition3"},
  {"/dev/sdav4", BRACK(FH_SDAV | 4), "\\Device\\Harddisk47\\Partition4"},
  {"/dev/sdav5", BRACK(FH_SDAV | 5), "\\Device\\Harddisk47\\Partition5"},
  {"/dev/sdav6", BRACK(FH_SDAV | 6), "\\Device\\Harddisk47\\Partition6"},
  {"/dev/sdav7", BRACK(FH_SDAV | 7), "\\Device\\Harddisk47\\Partition7"},
  {"/dev/sdav8", BRACK(FH_SDAV | 8), "\\Device\\Harddisk47\\Partition8"},
  {"/dev/sdav9", BRACK(FH_SDAV | 9), "\\Device\\Harddisk47\\Partition9"},
  {"/dev/sdav10", BRACK(FH_SDAV | 10), "\\Device\\Harddisk47\\Partition10"},
  {"/dev/sdav11", BRACK(FH_SDAV | 11), "\\Device\\Harddisk47\\Partition11"},
  {"/dev/sdav12", BRACK(FH_SDAV | 12), "\\Device\\Harddisk47\\Partition12"},
  {"/dev/sdav13", BRACK(FH_SDAV | 13), "\\Device\\Harddisk47\\Partition13"},
  {"/dev/sdav14", BRACK(FH_SDAV | 14), "\\Device\\Harddisk47\\Partition14"},
  {"/dev/sdav15", BRACK(FH_SDAV | 15), "\\Device\\Harddisk47\\Partition15"},
  {"/dev/sdaw1", BRACK(FH_SDAW | 1), "\\Device\\Harddisk48\\Partition1"},
  {"/dev/sdaw2", BRACK(FH_SDAW | 2), "\\Device\\Harddisk48\\Partition2"},
  {"/dev/sdaw3", BRACK(FH_SDAW | 3), "\\Device\\Harddisk48\\Partition3"},
  {"/dev/sdaw4", BRACK(FH_SDAW | 4), "\\Device\\Harddisk48\\Partition4"},
  {"/dev/sdaw5", BRACK(FH_SDAW | 5), "\\Device\\Harddisk48\\Partition5"},
  {"/dev/sdaw6", BRACK(FH_SDAW | 6), "\\Device\\Harddisk48\\Partition6"},
  {"/dev/sdaw7", BRACK(FH_SDAW | 7), "\\Device\\Harddisk48\\Partition7"},
  {"/dev/sdaw8", BRACK(FH_SDAW | 8), "\\Device\\Harddisk48\\Partition8"},
  {"/dev/sdaw9", BRACK(FH_SDAW | 9), "\\Device\\Harddisk48\\Partition9"},
  {"/dev/sdaw10", BRACK(FH_SDAW | 10), "\\Device\\Harddisk48\\Partition10"},
  {"/dev/sdaw11", BRACK(FH_SDAW | 11), "\\Device\\Harddisk48\\Partition11"},
  {"/dev/sdaw12", BRACK(FH_SDAW | 12), "\\Device\\Harddisk48\\Partition12"},
  {"/dev/sdaw13", BRACK(FH_SDAW | 13), "\\Device\\Harddisk48\\Partition13"},
  {"/dev/sdaw14", BRACK(FH_SDAW | 14), "\\Device\\Harddisk48\\Partition14"},
  {"/dev/sdaw15", BRACK(FH_SDAW | 15), "\\Device\\Harddisk48\\Partition15"},
  {"/dev/sdax1", BRACK(FH_SDAX | 1), "\\Device\\Harddisk49\\Partition1"},
  {"/dev/sdax2", BRACK(FH_SDAX | 2), "\\Device\\Harddisk49\\Partition2"},
  {"/dev/sdax3", BRACK(FH_SDAX | 3), "\\Device\\Harddisk49\\Partition3"},
  {"/dev/sdax4", BRACK(FH_SDAX | 4), "\\Device\\Harddisk49\\Partition4"},
  {"/dev/sdax5", BRACK(FH_SDAX | 5), "\\Device\\Harddisk49\\Partition5"},
  {"/dev/sdax6", BRACK(FH_SDAX | 6), "\\Device\\Harddisk49\\Partition6"},
  {"/dev/sdax7", BRACK(FH_SDAX | 7), "\\Device\\Harddisk49\\Partition7"},
  {"/dev/sdax8", BRACK(FH_SDAX | 8), "\\Device\\Harddisk49\\Partition8"},
  {"/dev/sdax9", BRACK(FH_SDAX | 9), "\\Device\\Harddisk49\\Partition9"},
  {"/dev/sdax10", BRACK(FH_SDAX | 10), "\\Device\\Harddisk49\\Partition10"},
  {"/dev/sdax11", BRACK(FH_SDAX | 11), "\\Device\\Harddisk49\\Partition11"},
  {"/dev/sdax12", BRACK(FH_SDAX | 12), "\\Device\\Harddisk49\\Partition12"},
  {"/dev/sdax13", BRACK(FH_SDAX | 13), "\\Device\\Harddisk49\\Partition13"},
  {"/dev/sdax14", BRACK(FH_SDAX | 14), "\\Device\\Harddisk49\\Partition14"},
  {"/dev/sdax15", BRACK(FH_SDAX | 15), "\\Device\\Harddisk49\\Partition15"},
  {"/dev/sday1", BRACK(FH_SDAY | 1), "\\Device\\Harddisk50\\Partition1"},
  {"/dev/sday2", BRACK(FH_SDAY | 2), "\\Device\\Harddisk50\\Partition2"},
  {"/dev/sday3", BRACK(FH_SDAY | 3), "\\Device\\Harddisk50\\Partition3"},
  {"/dev/sday4", BRACK(FH_SDAY | 4), "\\Device\\Harddisk50\\Partition4"},
  {"/dev/sday5", BRACK(FH_SDAY | 5), "\\Device\\Harddisk50\\Partition5"},
  {"/dev/sday6", BRACK(FH_SDAY | 6), "\\Device\\Harddisk50\\Partition6"},
  {"/dev/sday7", BRACK(FH_SDAY | 7), "\\Device\\Harddisk50\\Partition7"},
  {"/dev/sday8", BRACK(FH_SDAY | 8), "\\Device\\Harddisk50\\Partition8"},
  {"/dev/sday9", BRACK(FH_SDAY | 9), "\\Device\\Harddisk50\\Partition9"},
  {"/dev/sday10", BRACK(FH_SDAY | 10), "\\Device\\Harddisk50\\Partition10"},
  {"/dev/sday11", BRACK(FH_SDAY | 11), "\\Device\\Harddisk50\\Partition11"},
  {"/dev/sday12", BRACK(FH_SDAY | 12), "\\Device\\Harddisk50\\Partition12"},
  {"/dev/sday13", BRACK(FH_SDAY | 13), "\\Device\\Harddisk50\\Partition13"},
  {"/dev/sday14", BRACK(FH_SDAY | 14), "\\Device\\Harddisk50\\Partition14"},
  {"/dev/sday15", BRACK(FH_SDAY | 15), "\\Device\\Harddisk50\\Partition15"},
  {"/dev/sdaz1", BRACK(FH_SDAZ | 1), "\\Device\\Harddisk51\\Partition1"},
  {"/dev/sdaz2", BRACK(FH_SDAZ | 2), "\\Device\\Harddisk51\\Partition2"},
  {"/dev/sdaz3", BRACK(FH_SDAZ | 3), "\\Device\\Harddisk51\\Partition3"},
  {"/dev/sdaz4", BRACK(FH_SDAZ | 4), "\\Device\\Harddisk51\\Partition4"},
  {"/dev/sdaz5", BRACK(FH_SDAZ | 5), "\\Device\\Harddisk51\\Partition5"},
  {"/dev/sdaz6", BRACK(FH_SDAZ | 6), "\\Device\\Harddisk51\\Partition6"},
  {"/dev/sdaz7", BRACK(FH_SDAZ | 7), "\\Device\\Harddisk51\\Partition7"},
  {"/dev/sdaz8", BRACK(FH_SDAZ | 8), "\\Device\\Harddisk51\\Partition8"},
  {"/dev/sdaz9", BRACK(FH_SDAZ | 9), "\\Device\\Harddisk51\\Partition9"},
  {"/dev/sdaz10", BRACK(FH_SDAZ | 10), "\\Device\\Harddisk51\\Partition10"},
  {"/dev/sdaz11", BRACK(FH_SDAZ | 11), "\\Device\\Harddisk51\\Partition11"},
  {"/dev/sdaz12", BRACK(FH_SDAZ | 12), "\\Device\\Harddisk51\\Partition12"},
  {"/dev/sdaz13", BRACK(FH_SDAZ | 13), "\\Device\\Harddisk51\\Partition13"},
  {"/dev/sdaz14", BRACK(FH_SDAZ | 14), "\\Device\\Harddisk51\\Partition14"},
  {"/dev/sdaz15", BRACK(FH_SDAZ | 15), "\\Device\\Harddisk51\\Partition15"},
  {"/dev/sdba", BRACK(FH_SDBA), "\\Device\\Harddisk52\\Partition0"},
  {"/dev/sdbb", BRACK(FH_SDBB), "\\Device\\Harddisk53\\Partition0"},
  {"/dev/sdbc", BRACK(FH_SDBC), "\\Device\\Harddisk54\\Partition0"},
  {"/dev/sdbd", BRACK(FH_SDBD), "\\Device\\Harddisk55\\Partition0"},
  {"/dev/sdbe", BRACK(FH_SDBE), "\\Device\\Harddisk56\\Partition0"},
  {"/dev/sdbf", BRACK(FH_SDBF), "\\Device\\Harddisk57\\Partition0"},
  {"/dev/sdbg", BRACK(FH_SDBG), "\\Device\\Harddisk58\\Partition0"},
  {"/dev/sdbh", BRACK(FH_SDBH), "\\Device\\Harddisk59\\Partition0"},
  {"/dev/sdbi", BRACK(FH_SDBI), "\\Device\\Harddisk60\\Partition0"},
  {"/dev/sdbj", BRACK(FH_SDBJ), "\\Device\\Harddisk61\\Partition0"},
  {"/dev/sdbk", BRACK(FH_SDBK), "\\Device\\Harddisk62\\Partition0"},
  {"/dev/sdbl", BRACK(FH_SDBL), "\\Device\\Harddisk63\\Partition0"},
  {"/dev/sdbm", BRACK(FH_SDBM), "\\Device\\Harddisk64\\Partition0"},
  {"/dev/sdbn", BRACK(FH_SDBN), "\\Device\\Harddisk65\\Partition0"},
  {"/dev/sdbo", BRACK(FH_SDBO), "\\Device\\Harddisk66\\Partition0"},
  {"/dev/sdbp", BRACK(FH_SDBP), "\\Device\\Harddisk67\\Partition0"},
  {"/dev/sdbq", BRACK(FH_SDBQ), "\\Device\\Harddisk68\\Partition0"},
  {"/dev/sdbr", BRACK(FH_SDBR), "\\Device\\Harddisk69\\Partition0"},
  {"/dev/sdbs", BRACK(FH_SDBS), "\\Device\\Harddisk70\\Partition0"},
  {"/dev/sdbt", BRACK(FH_SDBT), "\\Device\\Harddisk71\\Partition0"},
  {"/dev/sdbu", BRACK(FH_SDBU), "\\Device\\Harddisk72\\Partition0"},
  {"/dev/sdbv", BRACK(FH_SDBV), "\\Device\\Harddisk73\\Partition0"},
  {"/dev/sdbw", BRACK(FH_SDBW), "\\Device\\Harddisk74\\Partition0"},
  {"/dev/sdbx", BRACK(FH_SDBX), "\\Device\\Harddisk75\\Partition0"},
  {"/dev/sdby", BRACK(FH_SDBY), "\\Device\\Harddisk76\\Partition0"},
  {"/dev/sdbz", BRACK(FH_SDBZ), "\\Device\\Harddisk77\\Partition0"},
  {"/dev/sdba1", BRACK(FH_SDBA | 1), "\\Device\\Harddisk52\\Partition1"},
  {"/dev/sdba2", BRACK(FH_SDBA | 2), "\\Device\\Harddisk52\\Partition2"},
  {"/dev/sdba3", BRACK(FH_SDBA | 3), "\\Device\\Harddisk52\\Partition3"},
  {"/dev/sdba4", BRACK(FH_SDBA | 4), "\\Device\\Harddisk52\\Partition4"},
  {"/dev/sdba5", BRACK(FH_SDBA | 5), "\\Device\\Harddisk52\\Partition5"},
  {"/dev/sdba6", BRACK(FH_SDBA | 6), "\\Device\\Harddisk52\\Partition6"},
  {"/dev/sdba7", BRACK(FH_SDBA | 7), "\\Device\\Harddisk52\\Partition7"},
  {"/dev/sdba8", BRACK(FH_SDBA | 8), "\\Device\\Harddisk52\\Partition8"},
  {"/dev/sdba9", BRACK(FH_SDBA | 9), "\\Device\\Harddisk52\\Partition9"},
  {"/dev/sdba10", BRACK(FH_SDBA | 10), "\\Device\\Harddisk52\\Partition10"},
  {"/dev/sdba11", BRACK(FH_SDBA | 11), "\\Device\\Harddisk52\\Partition11"},
  {"/dev/sdba12", BRACK(FH_SDBA | 12), "\\Device\\Harddisk52\\Partition12"},
  {"/dev/sdba13", BRACK(FH_SDBA | 13), "\\Device\\Harddisk52\\Partition13"},
  {"/dev/sdba14", BRACK(FH_SDBA | 14), "\\Device\\Harddisk52\\Partition14"},
  {"/dev/sdba15", BRACK(FH_SDBA | 15), "\\Device\\Harddisk52\\Partition15"},
  {"/dev/sdbb1", BRACK(FH_SDBB | 1), "\\Device\\Harddisk53\\Partition1"},
  {"/dev/sdbb2", BRACK(FH_SDBB | 2), "\\Device\\Harddisk53\\Partition2"},
  {"/dev/sdbb3", BRACK(FH_SDBB | 3), "\\Device\\Harddisk53\\Partition3"},
  {"/dev/sdbb4", BRACK(FH_SDBB | 4), "\\Device\\Harddisk53\\Partition4"},
  {"/dev/sdbb5", BRACK(FH_SDBB | 5), "\\Device\\Harddisk53\\Partition5"},
  {"/dev/sdbb6", BRACK(FH_SDBB | 6), "\\Device\\Harddisk53\\Partition6"},
  {"/dev/sdbb7", BRACK(FH_SDBB | 7), "\\Device\\Harddisk53\\Partition7"},
  {"/dev/sdbb8", BRACK(FH_SDBB | 8), "\\Device\\Harddisk53\\Partition8"},
  {"/dev/sdbb9", BRACK(FH_SDBB | 9), "\\Device\\Harddisk53\\Partition9"},
  {"/dev/sdbb10", BRACK(FH_SDBB | 10), "\\Device\\Harddisk53\\Partition10"},
  {"/dev/sdbb11", BRACK(FH_SDBB | 11), "\\Device\\Harddisk53\\Partition11"},
  {"/dev/sdbb12", BRACK(FH_SDBB | 12), "\\Device\\Harddisk53\\Partition12"},
  {"/dev/sdbb13", BRACK(FH_SDBB | 13), "\\Device\\Harddisk53\\Partition13"},
  {"/dev/sdbb14", BRACK(FH_SDBB | 14), "\\Device\\Harddisk53\\Partition14"},
  {"/dev/sdbb15", BRACK(FH_SDBB | 15), "\\Device\\Harddisk53\\Partition15"},
  {"/dev/sdbc1", BRACK(FH_SDBC | 1), "\\Device\\Harddisk54\\Partition1"},
  {"/dev/sdbc2", BRACK(FH_SDBC | 2), "\\Device\\Harddisk54\\Partition2"},
  {"/dev/sdbc3", BRACK(FH_SDBC | 3), "\\Device\\Harddisk54\\Partition3"},
  {"/dev/sdbc4", BRACK(FH_SDBC | 4), "\\Device\\Harddisk54\\Partition4"},
  {"/dev/sdbc5", BRACK(FH_SDBC | 5), "\\Device\\Harddisk54\\Partition5"},
  {"/dev/sdbc6", BRACK(FH_SDBC | 6), "\\Device\\Harddisk54\\Partition6"},
  {"/dev/sdbc7", BRACK(FH_SDBC | 7), "\\Device\\Harddisk54\\Partition7"},
  {"/dev/sdbc8", BRACK(FH_SDBC | 8), "\\Device\\Harddisk54\\Partition8"},
  {"/dev/sdbc9", BRACK(FH_SDBC | 9), "\\Device\\Harddisk54\\Partition9"},
  {"/dev/sdbc10", BRACK(FH_SDBC | 10), "\\Device\\Harddisk54\\Partition10"},
  {"/dev/sdbc11", BRACK(FH_SDBC | 11), "\\Device\\Harddisk54\\Partition11"},
  {"/dev/sdbc12", BRACK(FH_SDBC | 12), "\\Device\\Harddisk54\\Partition12"},
  {"/dev/sdbc13", BRACK(FH_SDBC | 13), "\\Device\\Harddisk54\\Partition13"},
  {"/dev/sdbc14", BRACK(FH_SDBC | 14), "\\Device\\Harddisk54\\Partition14"},
  {"/dev/sdbc15", BRACK(FH_SDBC | 15), "\\Device\\Harddisk54\\Partition15"},
  {"/dev/sdbd1", BRACK(FH_SDBD | 1), "\\Device\\Harddisk55\\Partition1"},
  {"/dev/sdbd2", BRACK(FH_SDBD | 2), "\\Device\\Harddisk55\\Partition2"},
  {"/dev/sdbd3", BRACK(FH_SDBD | 3), "\\Device\\Harddisk55\\Partition3"},
  {"/dev/sdbd4", BRACK(FH_SDBD | 4), "\\Device\\Harddisk55\\Partition4"},
  {"/dev/sdbd5", BRACK(FH_SDBD | 5), "\\Device\\Harddisk55\\Partition5"},
  {"/dev/sdbd6", BRACK(FH_SDBD | 6), "\\Device\\Harddisk55\\Partition6"},
  {"/dev/sdbd7", BRACK(FH_SDBD | 7), "\\Device\\Harddisk55\\Partition7"},
  {"/dev/sdbd8", BRACK(FH_SDBD | 8), "\\Device\\Harddisk55\\Partition8"},
  {"/dev/sdbd9", BRACK(FH_SDBD | 9), "\\Device\\Harddisk55\\Partition9"},
  {"/dev/sdbd10", BRACK(FH_SDBD | 10), "\\Device\\Harddisk55\\Partition10"},
  {"/dev/sdbd11", BRACK(FH_SDBD | 11), "\\Device\\Harddisk55\\Partition11"},
  {"/dev/sdbd12", BRACK(FH_SDBD | 12), "\\Device\\Harddisk55\\Partition12"},
  {"/dev/sdbd13", BRACK(FH_SDBD | 13), "\\Device\\Harddisk55\\Partition13"},
  {"/dev/sdbd14", BRACK(FH_SDBD | 14), "\\Device\\Harddisk55\\Partition14"},
  {"/dev/sdbd15", BRACK(FH_SDBD | 15), "\\Device\\Harddisk55\\Partition15"},
  {"/dev/sdbe1", BRACK(FH_SDBE | 1), "\\Device\\Harddisk56\\Partition1"},
  {"/dev/sdbe2", BRACK(FH_SDBE | 2), "\\Device\\Harddisk56\\Partition2"},
  {"/dev/sdbe3", BRACK(FH_SDBE | 3), "\\Device\\Harddisk56\\Partition3"},
  {"/dev/sdbe4", BRACK(FH_SDBE | 4), "\\Device\\Harddisk56\\Partition4"},
  {"/dev/sdbe5", BRACK(FH_SDBE | 5), "\\Device\\Harddisk56\\Partition5"},
  {"/dev/sdbe6", BRACK(FH_SDBE | 6), "\\Device\\Harddisk56\\Partition6"},
  {"/dev/sdbe7", BRACK(FH_SDBE | 7), "\\Device\\Harddisk56\\Partition7"},
  {"/dev/sdbe8", BRACK(FH_SDBE | 8), "\\Device\\Harddisk56\\Partition8"},
  {"/dev/sdbe9", BRACK(FH_SDBE | 9), "\\Device\\Harddisk56\\Partition9"},
  {"/dev/sdbe10", BRACK(FH_SDBE | 10), "\\Device\\Harddisk56\\Partition10"},
  {"/dev/sdbe11", BRACK(FH_SDBE | 11), "\\Device\\Harddisk56\\Partition11"},
  {"/dev/sdbe12", BRACK(FH_SDBE | 12), "\\Device\\Harddisk56\\Partition12"},
  {"/dev/sdbe13", BRACK(FH_SDBE | 13), "\\Device\\Harddisk56\\Partition13"},
  {"/dev/sdbe14", BRACK(FH_SDBE | 14), "\\Device\\Harddisk56\\Partition14"},
  {"/dev/sdbe15", BRACK(FH_SDBE | 15), "\\Device\\Harddisk56\\Partition15"},
  {"/dev/sdbf1", BRACK(FH_SDBF | 1), "\\Device\\Harddisk57\\Partition1"},
  {"/dev/sdbf2", BRACK(FH_SDBF | 2), "\\Device\\Harddisk57\\Partition2"},
  {"/dev/sdbf3", BRACK(FH_SDBF | 3), "\\Device\\Harddisk57\\Partition3"},
  {"/dev/sdbf4", BRACK(FH_SDBF | 4), "\\Device\\Harddisk57\\Partition4"},
  {"/dev/sdbf5", BRACK(FH_SDBF | 5), "\\Device\\Harddisk57\\Partition5"},
  {"/dev/sdbf6", BRACK(FH_SDBF | 6), "\\Device\\Harddisk57\\Partition6"},
  {"/dev/sdbf7", BRACK(FH_SDBF | 7), "\\Device\\Harddisk57\\Partition7"},
  {"/dev/sdbf8", BRACK(FH_SDBF | 8), "\\Device\\Harddisk57\\Partition8"},
  {"/dev/sdbf9", BRACK(FH_SDBF | 9), "\\Device\\Harddisk57\\Partition9"},
  {"/dev/sdbf10", BRACK(FH_SDBF | 10), "\\Device\\Harddisk57\\Partition10"},
  {"/dev/sdbf11", BRACK(FH_SDBF | 11), "\\Device\\Harddisk57\\Partition11"},
  {"/dev/sdbf12", BRACK(FH_SDBF | 12), "\\Device\\Harddisk57\\Partition12"},
  {"/dev/sdbf13", BRACK(FH_SDBF | 13), "\\Device\\Harddisk57\\Partition13"},
  {"/dev/sdbf14", BRACK(FH_SDBF | 14), "\\Device\\Harddisk57\\Partition14"},
  {"/dev/sdbf15", BRACK(FH_SDBF | 15), "\\Device\\Harddisk57\\Partition15"},
  {"/dev/sdbg1", BRACK(FH_SDBG | 1), "\\Device\\Harddisk58\\Partition1"},
  {"/dev/sdbg2", BRACK(FH_SDBG | 2), "\\Device\\Harddisk58\\Partition2"},
  {"/dev/sdbg3", BRACK(FH_SDBG | 3), "\\Device\\Harddisk58\\Partition3"},
  {"/dev/sdbg4", BRACK(FH_SDBG | 4), "\\Device\\Harddisk58\\Partition4"},
  {"/dev/sdbg5", BRACK(FH_SDBG | 5), "\\Device\\Harddisk58\\Partition5"},
  {"/dev/sdbg6", BRACK(FH_SDBG | 6), "\\Device\\Harddisk58\\Partition6"},
  {"/dev/sdbg7", BRACK(FH_SDBG | 7), "\\Device\\Harddisk58\\Partition7"},
  {"/dev/sdbg8", BRACK(FH_SDBG | 8), "\\Device\\Harddisk58\\Partition8"},
  {"/dev/sdbg9", BRACK(FH_SDBG | 9), "\\Device\\Harddisk58\\Partition9"},
  {"/dev/sdbg10", BRACK(FH_SDBG | 10), "\\Device\\Harddisk58\\Partition10"},
  {"/dev/sdbg11", BRACK(FH_SDBG | 11), "\\Device\\Harddisk58\\Partition11"},
  {"/dev/sdbg12", BRACK(FH_SDBG | 12), "\\Device\\Harddisk58\\Partition12"},
  {"/dev/sdbg13", BRACK(FH_SDBG | 13), "\\Device\\Harddisk58\\Partition13"},
  {"/dev/sdbg14", BRACK(FH_SDBG | 14), "\\Device\\Harddisk58\\Partition14"},
  {"/dev/sdbg15", BRACK(FH_SDBG | 15), "\\Device\\Harddisk58\\Partition15"},
  {"/dev/sdbh1", BRACK(FH_SDBH | 1), "\\Device\\Harddisk59\\Partition1"},
  {"/dev/sdbh2", BRACK(FH_SDBH | 2), "\\Device\\Harddisk59\\Partition2"},
  {"/dev/sdbh3", BRACK(FH_SDBH | 3), "\\Device\\Harddisk59\\Partition3"},
  {"/dev/sdbh4", BRACK(FH_SDBH | 4), "\\Device\\Harddisk59\\Partition4"},
  {"/dev/sdbh5", BRACK(FH_SDBH | 5), "\\Device\\Harddisk59\\Partition5"},
  {"/dev/sdbh6", BRACK(FH_SDBH | 6), "\\Device\\Harddisk59\\Partition6"},
  {"/dev/sdbh7", BRACK(FH_SDBH | 7), "\\Device\\Harddisk59\\Partition7"},
  {"/dev/sdbh8", BRACK(FH_SDBH | 8), "\\Device\\Harddisk59\\Partition8"},
  {"/dev/sdbh9", BRACK(FH_SDBH | 9), "\\Device\\Harddisk59\\Partition9"},
  {"/dev/sdbh10", BRACK(FH_SDBH | 10), "\\Device\\Harddisk59\\Partition10"},
  {"/dev/sdbh11", BRACK(FH_SDBH | 11), "\\Device\\Harddisk59\\Partition11"},
  {"/dev/sdbh12", BRACK(FH_SDBH | 12), "\\Device\\Harddisk59\\Partition12"},
  {"/dev/sdbh13", BRACK(FH_SDBH | 13), "\\Device\\Harddisk59\\Partition13"},
  {"/dev/sdbh14", BRACK(FH_SDBH | 14), "\\Device\\Harddisk59\\Partition14"},
  {"/dev/sdbh15", BRACK(FH_SDBH | 15), "\\Device\\Harddisk59\\Partition15"},
  {"/dev/sdbi1", BRACK(FH_SDBI | 1), "\\Device\\Harddisk60\\Partition1"},
  {"/dev/sdbi2", BRACK(FH_SDBI | 2), "\\Device\\Harddisk60\\Partition2"},
  {"/dev/sdbi3", BRACK(FH_SDBI | 3), "\\Device\\Harddisk60\\Partition3"},
  {"/dev/sdbi4", BRACK(FH_SDBI | 4), "\\Device\\Harddisk60\\Partition4"},
  {"/dev/sdbi5", BRACK(FH_SDBI | 5), "\\Device\\Harddisk60\\Partition5"},
  {"/dev/sdbi6", BRACK(FH_SDBI | 6), "\\Device\\Harddisk60\\Partition6"},
  {"/dev/sdbi7", BRACK(FH_SDBI | 7), "\\Device\\Harddisk60\\Partition7"},
  {"/dev/sdbi8", BRACK(FH_SDBI | 8), "\\Device\\Harddisk60\\Partition8"},
  {"/dev/sdbi9", BRACK(FH_SDBI | 9), "\\Device\\Harddisk60\\Partition9"},
  {"/dev/sdbi10", BRACK(FH_SDBI | 10), "\\Device\\Harddisk60\\Partition10"},
  {"/dev/sdbi11", BRACK(FH_SDBI | 11), "\\Device\\Harddisk60\\Partition11"},
  {"/dev/sdbi12", BRACK(FH_SDBI | 12), "\\Device\\Harddisk60\\Partition12"},
  {"/dev/sdbi13", BRACK(FH_SDBI | 13), "\\Device\\Harddisk60\\Partition13"},
  {"/dev/sdbi14", BRACK(FH_SDBI | 14), "\\Device\\Harddisk60\\Partition14"},
  {"/dev/sdbi15", BRACK(FH_SDBI | 15), "\\Device\\Harddisk60\\Partition15"},
  {"/dev/sdbj1", BRACK(FH_SDBJ | 1), "\\Device\\Harddisk61\\Partition1"},
  {"/dev/sdbj2", BRACK(FH_SDBJ | 2), "\\Device\\Harddisk61\\Partition2"},
  {"/dev/sdbj3", BRACK(FH_SDBJ | 3), "\\Device\\Harddisk61\\Partition3"},
  {"/dev/sdbj4", BRACK(FH_SDBJ | 4), "\\Device\\Harddisk61\\Partition4"},
  {"/dev/sdbj5", BRACK(FH_SDBJ | 5), "\\Device\\Harddisk61\\Partition5"},
  {"/dev/sdbj6", BRACK(FH_SDBJ | 6), "\\Device\\Harddisk61\\Partition6"},
  {"/dev/sdbj7", BRACK(FH_SDBJ | 7), "\\Device\\Harddisk61\\Partition7"},
  {"/dev/sdbj8", BRACK(FH_SDBJ | 8), "\\Device\\Harddisk61\\Partition8"},
  {"/dev/sdbj9", BRACK(FH_SDBJ | 9), "\\Device\\Harddisk61\\Partition9"},
  {"/dev/sdbj10", BRACK(FH_SDBJ | 10), "\\Device\\Harddisk61\\Partition10"},
  {"/dev/sdbj11", BRACK(FH_SDBJ | 11), "\\Device\\Harddisk61\\Partition11"},
  {"/dev/sdbj12", BRACK(FH_SDBJ | 12), "\\Device\\Harddisk61\\Partition12"},
  {"/dev/sdbj13", BRACK(FH_SDBJ | 13), "\\Device\\Harddisk61\\Partition13"},
  {"/dev/sdbj14", BRACK(FH_SDBJ | 14), "\\Device\\Harddisk61\\Partition14"},
  {"/dev/sdbj15", BRACK(FH_SDBJ | 15), "\\Device\\Harddisk61\\Partition15"},
  {"/dev/sdbk1", BRACK(FH_SDBK | 1), "\\Device\\Harddisk62\\Partition1"},
  {"/dev/sdbk2", BRACK(FH_SDBK | 2), "\\Device\\Harddisk62\\Partition2"},
  {"/dev/sdbk3", BRACK(FH_SDBK | 3), "\\Device\\Harddisk62\\Partition3"},
  {"/dev/sdbk4", BRACK(FH_SDBK | 4), "\\Device\\Harddisk62\\Partition4"},
  {"/dev/sdbk5", BRACK(FH_SDBK | 5), "\\Device\\Harddisk62\\Partition5"},
  {"/dev/sdbk6", BRACK(FH_SDBK | 6), "\\Device\\Harddisk62\\Partition6"},
  {"/dev/sdbk7", BRACK(FH_SDBK | 7), "\\Device\\Harddisk62\\Partition7"},
  {"/dev/sdbk8", BRACK(FH_SDBK | 8), "\\Device\\Harddisk62\\Partition8"},
  {"/dev/sdbk9", BRACK(FH_SDBK | 9), "\\Device\\Harddisk62\\Partition9"},
  {"/dev/sdbk10", BRACK(FH_SDBK | 10), "\\Device\\Harddisk62\\Partition10"},
  {"/dev/sdbk11", BRACK(FH_SDBK | 11), "\\Device\\Harddisk62\\Partition11"},
  {"/dev/sdbk12", BRACK(FH_SDBK | 12), "\\Device\\Harddisk62\\Partition12"},
  {"/dev/sdbk13", BRACK(FH_SDBK | 13), "\\Device\\Harddisk62\\Partition13"},
  {"/dev/sdbk14", BRACK(FH_SDBK | 14), "\\Device\\Harddisk62\\Partition14"},
  {"/dev/sdbk15", BRACK(FH_SDBK | 15), "\\Device\\Harddisk62\\Partition15"},
  {"/dev/sdbl1", BRACK(FH_SDBL | 1), "\\Device\\Harddisk63\\Partition1"},
  {"/dev/sdbl2", BRACK(FH_SDBL | 2), "\\Device\\Harddisk63\\Partition2"},
  {"/dev/sdbl3", BRACK(FH_SDBL | 3), "\\Device\\Harddisk63\\Partition3"},
  {"/dev/sdbl4", BRACK(FH_SDBL | 4), "\\Device\\Harddisk63\\Partition4"},
  {"/dev/sdbl5", BRACK(FH_SDBL | 5), "\\Device\\Harddisk63\\Partition5"},
  {"/dev/sdbl6", BRACK(FH_SDBL | 6), "\\Device\\Harddisk63\\Partition6"},
  {"/dev/sdbl7", BRACK(FH_SDBL | 7), "\\Device\\Harddisk63\\Partition7"},
  {"/dev/sdbl8", BRACK(FH_SDBL | 8), "\\Device\\Harddisk63\\Partition8"},
  {"/dev/sdbl9", BRACK(FH_SDBL | 9), "\\Device\\Harddisk63\\Partition9"},
  {"/dev/sdbl10", BRACK(FH_SDBL | 10), "\\Device\\Harddisk63\\Partition10"},
  {"/dev/sdbl11", BRACK(FH_SDBL | 11), "\\Device\\Harddisk63\\Partition11"},
  {"/dev/sdbl12", BRACK(FH_SDBL | 12), "\\Device\\Harddisk63\\Partition12"},
  {"/dev/sdbl13", BRACK(FH_SDBL | 13), "\\Device\\Harddisk63\\Partition13"},
  {"/dev/sdbl14", BRACK(FH_SDBL | 14), "\\Device\\Harddisk63\\Partition14"},
  {"/dev/sdbl15", BRACK(FH_SDBL | 15), "\\Device\\Harddisk63\\Partition15"},
  {"/dev/sdbm1", BRACK(FH_SDBM | 1), "\\Device\\Harddisk64\\Partition1"},
  {"/dev/sdbm2", BRACK(FH_SDBM | 2), "\\Device\\Harddisk64\\Partition2"},
  {"/dev/sdbm3", BRACK(FH_SDBM | 3), "\\Device\\Harddisk64\\Partition3"},
  {"/dev/sdbm4", BRACK(FH_SDBM | 4), "\\Device\\Harddisk64\\Partition4"},
  {"/dev/sdbm5", BRACK(FH_SDBM | 5), "\\Device\\Harddisk64\\Partition5"},
  {"/dev/sdbm6", BRACK(FH_SDBM | 6), "\\Device\\Harddisk64\\Partition6"},
  {"/dev/sdbm7", BRACK(FH_SDBM | 7), "\\Device\\Harddisk64\\Partition7"},
  {"/dev/sdbm8", BRACK(FH_SDBM | 8), "\\Device\\Harddisk64\\Partition8"},
  {"/dev/sdbm9", BRACK(FH_SDBM | 9), "\\Device\\Harddisk64\\Partition9"},
  {"/dev/sdbm10", BRACK(FH_SDBM | 10), "\\Device\\Harddisk64\\Partition10"},
  {"/dev/sdbm11", BRACK(FH_SDBM | 11), "\\Device\\Harddisk64\\Partition11"},
  {"/dev/sdbm12", BRACK(FH_SDBM | 12), "\\Device\\Harddisk64\\Partition12"},
  {"/dev/sdbm13", BRACK(FH_SDBM | 13), "\\Device\\Harddisk64\\Partition13"},
  {"/dev/sdbm14", BRACK(FH_SDBM | 14), "\\Device\\Harddisk64\\Partition14"},
  {"/dev/sdbm15", BRACK(FH_SDBM | 15), "\\Device\\Harddisk64\\Partition15"},
  {"/dev/sdbn1", BRACK(FH_SDBN | 1), "\\Device\\Harddisk65\\Partition1"},
  {"/dev/sdbn2", BRACK(FH_SDBN | 2), "\\Device\\Harddisk65\\Partition2"},
  {"/dev/sdbn3", BRACK(FH_SDBN | 3), "\\Device\\Harddisk65\\Partition3"},
  {"/dev/sdbn4", BRACK(FH_SDBN | 4), "\\Device\\Harddisk65\\Partition4"},
  {"/dev/sdbn5", BRACK(FH_SDBN | 5), "\\Device\\Harddisk65\\Partition5"},
  {"/dev/sdbn6", BRACK(FH_SDBN | 6), "\\Device\\Harddisk65\\Partition6"},
  {"/dev/sdbn7", BRACK(FH_SDBN | 7), "\\Device\\Harddisk65\\Partition7"},
  {"/dev/sdbn8", BRACK(FH_SDBN | 8), "\\Device\\Harddisk65\\Partition8"},
  {"/dev/sdbn9", BRACK(FH_SDBN | 9), "\\Device\\Harddisk65\\Partition9"},
  {"/dev/sdbn10", BRACK(FH_SDBN | 10), "\\Device\\Harddisk65\\Partition10"},
  {"/dev/sdbn11", BRACK(FH_SDBN | 11), "\\Device\\Harddisk65\\Partition11"},
  {"/dev/sdbn12", BRACK(FH_SDBN | 12), "\\Device\\Harddisk65\\Partition12"},
  {"/dev/sdbn13", BRACK(FH_SDBN | 13), "\\Device\\Harddisk65\\Partition13"},
  {"/dev/sdbn14", BRACK(FH_SDBN | 14), "\\Device\\Harddisk65\\Partition14"},
  {"/dev/sdbn15", BRACK(FH_SDBN | 15), "\\Device\\Harddisk65\\Partition15"},
  {"/dev/sdbo1", BRACK(FH_SDBO | 1), "\\Device\\Harddisk66\\Partition1"},
  {"/dev/sdbo2", BRACK(FH_SDBO | 2), "\\Device\\Harddisk66\\Partition2"},
  {"/dev/sdbo3", BRACK(FH_SDBO | 3), "\\Device\\Harddisk66\\Partition3"},
  {"/dev/sdbo4", BRACK(FH_SDBO | 4), "\\Device\\Harddisk66\\Partition4"},
  {"/dev/sdbo5", BRACK(FH_SDBO | 5), "\\Device\\Harddisk66\\Partition5"},
  {"/dev/sdbo6", BRACK(FH_SDBO | 6), "\\Device\\Harddisk66\\Partition6"},
  {"/dev/sdbo7", BRACK(FH_SDBO | 7), "\\Device\\Harddisk66\\Partition7"},
  {"/dev/sdbo8", BRACK(FH_SDBO | 8), "\\Device\\Harddisk66\\Partition8"},
  {"/dev/sdbo9", BRACK(FH_SDBO | 9), "\\Device\\Harddisk66\\Partition9"},
  {"/dev/sdbo10", BRACK(FH_SDBO | 10), "\\Device\\Harddisk66\\Partition10"},
  {"/dev/sdbo11", BRACK(FH_SDBO | 11), "\\Device\\Harddisk66\\Partition11"},
  {"/dev/sdbo12", BRACK(FH_SDBO | 12), "\\Device\\Harddisk66\\Partition12"},
  {"/dev/sdbo13", BRACK(FH_SDBO | 13), "\\Device\\Harddisk66\\Partition13"},
  {"/dev/sdbo14", BRACK(FH_SDBO | 14), "\\Device\\Harddisk66\\Partition14"},
  {"/dev/sdbo15", BRACK(FH_SDBO | 15), "\\Device\\Harddisk66\\Partition15"},
  {"/dev/sdbp1", BRACK(FH_SDBP | 1), "\\Device\\Harddisk67\\Partition1"},
  {"/dev/sdbp2", BRACK(FH_SDBP | 2), "\\Device\\Harddisk67\\Partition2"},
  {"/dev/sdbp3", BRACK(FH_SDBP | 3), "\\Device\\Harddisk67\\Partition3"},
  {"/dev/sdbp4", BRACK(FH_SDBP | 4), "\\Device\\Harddisk67\\Partition4"},
  {"/dev/sdbp5", BRACK(FH_SDBP | 5), "\\Device\\Harddisk67\\Partition5"},
  {"/dev/sdbp6", BRACK(FH_SDBP | 6), "\\Device\\Harddisk67\\Partition6"},
  {"/dev/sdbp7", BRACK(FH_SDBP | 7), "\\Device\\Harddisk67\\Partition7"},
  {"/dev/sdbp8", BRACK(FH_SDBP | 8), "\\Device\\Harddisk67\\Partition8"},
  {"/dev/sdbp9", BRACK(FH_SDBP | 9), "\\Device\\Harddisk67\\Partition9"},
  {"/dev/sdbp10", BRACK(FH_SDBP | 10), "\\Device\\Harddisk67\\Partition10"},
  {"/dev/sdbp11", BRACK(FH_SDBP | 11), "\\Device\\Harddisk67\\Partition11"},
  {"/dev/sdbp12", BRACK(FH_SDBP | 12), "\\Device\\Harddisk67\\Partition12"},
  {"/dev/sdbp13", BRACK(FH_SDBP | 13), "\\Device\\Harddisk67\\Partition13"},
  {"/dev/sdbp14", BRACK(FH_SDBP | 14), "\\Device\\Harddisk67\\Partition14"},
  {"/dev/sdbp15", BRACK(FH_SDBP | 15), "\\Device\\Harddisk67\\Partition15"},
  {"/dev/sdbq1", BRACK(FH_SDBQ | 1), "\\Device\\Harddisk68\\Partition1"},
  {"/dev/sdbq2", BRACK(FH_SDBQ | 2), "\\Device\\Harddisk68\\Partition2"},
  {"/dev/sdbq3", BRACK(FH_SDBQ | 3), "\\Device\\Harddisk68\\Partition3"},
  {"/dev/sdbq4", BRACK(FH_SDBQ | 4), "\\Device\\Harddisk68\\Partition4"},
  {"/dev/sdbq5", BRACK(FH_SDBQ | 5), "\\Device\\Harddisk68\\Partition5"},
  {"/dev/sdbq6", BRACK(FH_SDBQ | 6), "\\Device\\Harddisk68\\Partition6"},
  {"/dev/sdbq7", BRACK(FH_SDBQ | 7), "\\Device\\Harddisk68\\Partition7"},
  {"/dev/sdbq8", BRACK(FH_SDBQ | 8), "\\Device\\Harddisk68\\Partition8"},
  {"/dev/sdbq9", BRACK(FH_SDBQ | 9), "\\Device\\Harddisk68\\Partition9"},
  {"/dev/sdbq10", BRACK(FH_SDBQ | 10), "\\Device\\Harddisk68\\Partition10"},
  {"/dev/sdbq11", BRACK(FH_SDBQ | 11), "\\Device\\Harddisk68\\Partition11"},
  {"/dev/sdbq12", BRACK(FH_SDBQ | 12), "\\Device\\Harddisk68\\Partition12"},
  {"/dev/sdbq13", BRACK(FH_SDBQ | 13), "\\Device\\Harddisk68\\Partition13"},
  {"/dev/sdbq14", BRACK(FH_SDBQ | 14), "\\Device\\Harddisk68\\Partition14"},
  {"/dev/sdbq15", BRACK(FH_SDBQ | 15), "\\Device\\Harddisk68\\Partition15"},
  {"/dev/sdbr1", BRACK(FH_SDBR | 1), "\\Device\\Harddisk69\\Partition1"},
  {"/dev/sdbr2", BRACK(FH_SDBR | 2), "\\Device\\Harddisk69\\Partition2"},
  {"/dev/sdbr3", BRACK(FH_SDBR | 3), "\\Device\\Harddisk69\\Partition3"},
  {"/dev/sdbr4", BRACK(FH_SDBR | 4), "\\Device\\Harddisk69\\Partition4"},
  {"/dev/sdbr5", BRACK(FH_SDBR | 5), "\\Device\\Harddisk69\\Partition5"},
  {"/dev/sdbr6", BRACK(FH_SDBR | 6), "\\Device\\Harddisk69\\Partition6"},
  {"/dev/sdbr7", BRACK(FH_SDBR | 7), "\\Device\\Harddisk69\\Partition7"},
  {"/dev/sdbr8", BRACK(FH_SDBR | 8), "\\Device\\Harddisk69\\Partition8"},
  {"/dev/sdbr9", BRACK(FH_SDBR | 9), "\\Device\\Harddisk69\\Partition9"},
  {"/dev/sdbr10", BRACK(FH_SDBR | 10), "\\Device\\Harddisk69\\Partition10"},
  {"/dev/sdbr11", BRACK(FH_SDBR | 11), "\\Device\\Harddisk69\\Partition11"},
  {"/dev/sdbr12", BRACK(FH_SDBR | 12), "\\Device\\Harddisk69\\Partition12"},
  {"/dev/sdbr13", BRACK(FH_SDBR | 13), "\\Device\\Harddisk69\\Partition13"},
  {"/dev/sdbr14", BRACK(FH_SDBR | 14), "\\Device\\Harddisk69\\Partition14"},
  {"/dev/sdbr15", BRACK(FH_SDBR | 15), "\\Device\\Harddisk69\\Partition15"},
  {"/dev/sdbs1", BRACK(FH_SDBS | 1), "\\Device\\Harddisk70\\Partition1"},
  {"/dev/sdbs2", BRACK(FH_SDBS | 2), "\\Device\\Harddisk70\\Partition2"},
  {"/dev/sdbs3", BRACK(FH_SDBS | 3), "\\Device\\Harddisk70\\Partition3"},
  {"/dev/sdbs4", BRACK(FH_SDBS | 4), "\\Device\\Harddisk70\\Partition4"},
  {"/dev/sdbs5", BRACK(FH_SDBS | 5), "\\Device\\Harddisk70\\Partition5"},
  {"/dev/sdbs6", BRACK(FH_SDBS | 6), "\\Device\\Harddisk70\\Partition6"},
  {"/dev/sdbs7", BRACK(FH_SDBS | 7), "\\Device\\Harddisk70\\Partition7"},
  {"/dev/sdbs8", BRACK(FH_SDBS | 8), "\\Device\\Harddisk70\\Partition8"},
  {"/dev/sdbs9", BRACK(FH_SDBS | 9), "\\Device\\Harddisk70\\Partition9"},
  {"/dev/sdbs10", BRACK(FH_SDBS | 10), "\\Device\\Harddisk70\\Partition10"},
  {"/dev/sdbs11", BRACK(FH_SDBS | 11), "\\Device\\Harddisk70\\Partition11"},
  {"/dev/sdbs12", BRACK(FH_SDBS | 12), "\\Device\\Harddisk70\\Partition12"},
  {"/dev/sdbs13", BRACK(FH_SDBS | 13), "\\Device\\Harddisk70\\Partition13"},
  {"/dev/sdbs14", BRACK(FH_SDBS | 14), "\\Device\\Harddisk70\\Partition14"},
  {"/dev/sdbs15", BRACK(FH_SDBS | 15), "\\Device\\Harddisk70\\Partition15"},
  {"/dev/sdbt1", BRACK(FH_SDBT | 1), "\\Device\\Harddisk71\\Partition1"},
  {"/dev/sdbt2", BRACK(FH_SDBT | 2), "\\Device\\Harddisk71\\Partition2"},
  {"/dev/sdbt3", BRACK(FH_SDBT | 3), "\\Device\\Harddisk71\\Partition3"},
  {"/dev/sdbt4", BRACK(FH_SDBT | 4), "\\Device\\Harddisk71\\Partition4"},
  {"/dev/sdbt5", BRACK(FH_SDBT | 5), "\\Device\\Harddisk71\\Partition5"},
  {"/dev/sdbt6", BRACK(FH_SDBT | 6), "\\Device\\Harddisk71\\Partition6"},
  {"/dev/sdbt7", BRACK(FH_SDBT | 7), "\\Device\\Harddisk71\\Partition7"},
  {"/dev/sdbt8", BRACK(FH_SDBT | 8), "\\Device\\Harddisk71\\Partition8"},
  {"/dev/sdbt9", BRACK(FH_SDBT | 9), "\\Device\\Harddisk71\\Partition9"},
  {"/dev/sdbt10", BRACK(FH_SDBT | 10), "\\Device\\Harddisk71\\Partition10"},
  {"/dev/sdbt11", BRACK(FH_SDBT | 11), "\\Device\\Harddisk71\\Partition11"},
  {"/dev/sdbt12", BRACK(FH_SDBT | 12), "\\Device\\Harddisk71\\Partition12"},
  {"/dev/sdbt13", BRACK(FH_SDBT | 13), "\\Device\\Harddisk71\\Partition13"},
  {"/dev/sdbt14", BRACK(FH_SDBT | 14), "\\Device\\Harddisk71\\Partition14"},
  {"/dev/sdbt15", BRACK(FH_SDBT | 15), "\\Device\\Harddisk71\\Partition15"},
  {"/dev/sdbu1", BRACK(FH_SDBU | 1), "\\Device\\Harddisk72\\Partition1"},
  {"/dev/sdbu2", BRACK(FH_SDBU | 2), "\\Device\\Harddisk72\\Partition2"},
  {"/dev/sdbu3", BRACK(FH_SDBU | 3), "\\Device\\Harddisk72\\Partition3"},
  {"/dev/sdbu4", BRACK(FH_SDBU | 4), "\\Device\\Harddisk72\\Partition4"},
  {"/dev/sdbu5", BRACK(FH_SDBU | 5), "\\Device\\Harddisk72\\Partition5"},
  {"/dev/sdbu6", BRACK(FH_SDBU | 6), "\\Device\\Harddisk72\\Partition6"},
  {"/dev/sdbu7", BRACK(FH_SDBU | 7), "\\Device\\Harddisk72\\Partition7"},
  {"/dev/sdbu8", BRACK(FH_SDBU | 8), "\\Device\\Harddisk72\\Partition8"},
  {"/dev/sdbu9", BRACK(FH_SDBU | 9), "\\Device\\Harddisk72\\Partition9"},
  {"/dev/sdbu10", BRACK(FH_SDBU | 10), "\\Device\\Harddisk72\\Partition10"},
  {"/dev/sdbu11", BRACK(FH_SDBU | 11), "\\Device\\Harddisk72\\Partition11"},
  {"/dev/sdbu12", BRACK(FH_SDBU | 12), "\\Device\\Harddisk72\\Partition12"},
  {"/dev/sdbu13", BRACK(FH_SDBU | 13), "\\Device\\Harddisk72\\Partition13"},
  {"/dev/sdbu14", BRACK(FH_SDBU | 14), "\\Device\\Harddisk72\\Partition14"},
  {"/dev/sdbu15", BRACK(FH_SDBU | 15), "\\Device\\Harddisk72\\Partition15"},
  {"/dev/sdbv1", BRACK(FH_SDBV | 1), "\\Device\\Harddisk73\\Partition1"},
  {"/dev/sdbv2", BRACK(FH_SDBV | 2), "\\Device\\Harddisk73\\Partition2"},
  {"/dev/sdbv3", BRACK(FH_SDBV | 3), "\\Device\\Harddisk73\\Partition3"},
  {"/dev/sdbv4", BRACK(FH_SDBV | 4), "\\Device\\Harddisk73\\Partition4"},
  {"/dev/sdbv5", BRACK(FH_SDBV | 5), "\\Device\\Harddisk73\\Partition5"},
  {"/dev/sdbv6", BRACK(FH_SDBV | 6), "\\Device\\Harddisk73\\Partition6"},
  {"/dev/sdbv7", BRACK(FH_SDBV | 7), "\\Device\\Harddisk73\\Partition7"},
  {"/dev/sdbv8", BRACK(FH_SDBV | 8), "\\Device\\Harddisk73\\Partition8"},
  {"/dev/sdbv9", BRACK(FH_SDBV | 9), "\\Device\\Harddisk73\\Partition9"},
  {"/dev/sdbv10", BRACK(FH_SDBV | 10), "\\Device\\Harddisk73\\Partition10"},
  {"/dev/sdbv11", BRACK(FH_SDBV | 11), "\\Device\\Harddisk73\\Partition11"},
  {"/dev/sdbv12", BRACK(FH_SDBV | 12), "\\Device\\Harddisk73\\Partition12"},
  {"/dev/sdbv13", BRACK(FH_SDBV | 13), "\\Device\\Harddisk73\\Partition13"},
  {"/dev/sdbv14", BRACK(FH_SDBV | 14), "\\Device\\Harddisk73\\Partition14"},
  {"/dev/sdbv15", BRACK(FH_SDBV | 15), "\\Device\\Harddisk73\\Partition15"},
  {"/dev/sdbw1", BRACK(FH_SDBW | 1), "\\Device\\Harddisk74\\Partition1"},
  {"/dev/sdbw2", BRACK(FH_SDBW | 2), "\\Device\\Harddisk74\\Partition2"},
  {"/dev/sdbw3", BRACK(FH_SDBW | 3), "\\Device\\Harddisk74\\Partition3"},
  {"/dev/sdbw4", BRACK(FH_SDBW | 4), "\\Device\\Harddisk74\\Partition4"},
  {"/dev/sdbw5", BRACK(FH_SDBW | 5), "\\Device\\Harddisk74\\Partition5"},
  {"/dev/sdbw6", BRACK(FH_SDBW | 6), "\\Device\\Harddisk74\\Partition6"},
  {"/dev/sdbw7", BRACK(FH_SDBW | 7), "\\Device\\Harddisk74\\Partition7"},
  {"/dev/sdbw8", BRACK(FH_SDBW | 8), "\\Device\\Harddisk74\\Partition8"},
  {"/dev/sdbw9", BRACK(FH_SDBW | 9), "\\Device\\Harddisk74\\Partition9"},
  {"/dev/sdbw10", BRACK(FH_SDBW | 10), "\\Device\\Harddisk74\\Partition10"},
  {"/dev/sdbw11", BRACK(FH_SDBW | 11), "\\Device\\Harddisk74\\Partition11"},
  {"/dev/sdbw12", BRACK(FH_SDBW | 12), "\\Device\\Harddisk74\\Partition12"},
  {"/dev/sdbw13", BRACK(FH_SDBW | 13), "\\Device\\Harddisk74\\Partition13"},
  {"/dev/sdbw14", BRACK(FH_SDBW | 14), "\\Device\\Harddisk74\\Partition14"},
  {"/dev/sdbw15", BRACK(FH_SDBW | 15), "\\Device\\Harddisk74\\Partition15"},
  {"/dev/sdbx1", BRACK(FH_SDBX | 1), "\\Device\\Harddisk75\\Partition1"},
  {"/dev/sdbx2", BRACK(FH_SDBX | 2), "\\Device\\Harddisk75\\Partition2"},
  {"/dev/sdbx3", BRACK(FH_SDBX | 3), "\\Device\\Harddisk75\\Partition3"},
  {"/dev/sdbx4", BRACK(FH_SDBX | 4), "\\Device\\Harddisk75\\Partition4"},
  {"/dev/sdbx5", BRACK(FH_SDBX | 5), "\\Device\\Harddisk75\\Partition5"},
  {"/dev/sdbx6", BRACK(FH_SDBX | 6), "\\Device\\Harddisk75\\Partition6"},
  {"/dev/sdbx7", BRACK(FH_SDBX | 7), "\\Device\\Harddisk75\\Partition7"},
  {"/dev/sdbx8", BRACK(FH_SDBX | 8), "\\Device\\Harddisk75\\Partition8"},
  {"/dev/sdbx9", BRACK(FH_SDBX | 9), "\\Device\\Harddisk75\\Partition9"},
  {"/dev/sdbx10", BRACK(FH_SDBX | 10), "\\Device\\Harddisk75\\Partition10"},
  {"/dev/sdbx11", BRACK(FH_SDBX | 11), "\\Device\\Harddisk75\\Partition11"},
  {"/dev/sdbx12", BRACK(FH_SDBX | 12), "\\Device\\Harddisk75\\Partition12"},
  {"/dev/sdbx13", BRACK(FH_SDBX | 13), "\\Device\\Harddisk75\\Partition13"},
  {"/dev/sdbx14", BRACK(FH_SDBX | 14), "\\Device\\Harddisk75\\Partition14"},
  {"/dev/sdbx15", BRACK(FH_SDBX | 15), "\\Device\\Harddisk75\\Partition15"},
  {"/dev/sdby1", BRACK(FH_SDBY | 1), "\\Device\\Harddisk76\\Partition1"},
  {"/dev/sdby2", BRACK(FH_SDBY | 2), "\\Device\\Harddisk76\\Partition2"},
  {"/dev/sdby3", BRACK(FH_SDBY | 3), "\\Device\\Harddisk76\\Partition3"},
  {"/dev/sdby4", BRACK(FH_SDBY | 4), "\\Device\\Harddisk76\\Partition4"},
  {"/dev/sdby5", BRACK(FH_SDBY | 5), "\\Device\\Harddisk76\\Partition5"},
  {"/dev/sdby6", BRACK(FH_SDBY | 6), "\\Device\\Harddisk76\\Partition6"},
  {"/dev/sdby7", BRACK(FH_SDBY | 7), "\\Device\\Harddisk76\\Partition7"},
  {"/dev/sdby8", BRACK(FH_SDBY | 8), "\\Device\\Harddisk76\\Partition8"},
  {"/dev/sdby9", BRACK(FH_SDBY | 9), "\\Device\\Harddisk76\\Partition9"},
  {"/dev/sdby10", BRACK(FH_SDBY | 10), "\\Device\\Harddisk76\\Partition10"},
  {"/dev/sdby11", BRACK(FH_SDBY | 11), "\\Device\\Harddisk76\\Partition11"},
  {"/dev/sdby12", BRACK(FH_SDBY | 12), "\\Device\\Harddisk76\\Partition12"},
  {"/dev/sdby13", BRACK(FH_SDBY | 13), "\\Device\\Harddisk76\\Partition13"},
  {"/dev/sdby14", BRACK(FH_SDBY | 14), "\\Device\\Harddisk76\\Partition14"},
  {"/dev/sdby15", BRACK(FH_SDBY | 15), "\\Device\\Harddisk76\\Partition15"},
  {"/dev/sdbz1", BRACK(FH_SDBZ | 1), "\\Device\\Harddisk77\\Partition1"},
  {"/dev/sdbz2", BRACK(FH_SDBZ | 2), "\\Device\\Harddisk77\\Partition2"},
  {"/dev/sdbz3", BRACK(FH_SDBZ | 3), "\\Device\\Harddisk77\\Partition3"},
  {"/dev/sdbz4", BRACK(FH_SDBZ | 4), "\\Device\\Harddisk77\\Partition4"},
  {"/dev/sdbz5", BRACK(FH_SDBZ | 5), "\\Device\\Harddisk77\\Partition5"},
  {"/dev/sdbz6", BRACK(FH_SDBZ | 6), "\\Device\\Harddisk77\\Partition6"},
  {"/dev/sdbz7", BRACK(FH_SDBZ | 7), "\\Device\\Harddisk77\\Partition7"},
  {"/dev/sdbz8", BRACK(FH_SDBZ | 8), "\\Device\\Harddisk77\\Partition8"},
  {"/dev/sdbz9", BRACK(FH_SDBZ | 9), "\\Device\\Harddisk77\\Partition9"},
  {"/dev/sdbz10", BRACK(FH_SDBZ | 10), "\\Device\\Harddisk77\\Partition10"},
  {"/dev/sdbz11", BRACK(FH_SDBZ | 11), "\\Device\\Harddisk77\\Partition11"},
  {"/dev/sdbz12", BRACK(FH_SDBZ | 12), "\\Device\\Harddisk77\\Partition12"},
  {"/dev/sdbz13", BRACK(FH_SDBZ | 13), "\\Device\\Harddisk77\\Partition13"},
  {"/dev/sdbz14", BRACK(FH_SDBZ | 14), "\\Device\\Harddisk77\\Partition14"},
  {"/dev/sdbz15", BRACK(FH_SDBZ | 15), "\\Device\\Harddisk77\\Partition15"},
  {"/dev/sdca", BRACK(FH_SDCA), "\\Device\\Harddisk78\\Partition0"},
  {"/dev/sdcb", BRACK(FH_SDCB), "\\Device\\Harddisk79\\Partition0"},
  {"/dev/sdcc", BRACK(FH_SDCC), "\\Device\\Harddisk80\\Partition0"},
  {"/dev/sdcd", BRACK(FH_SDCD), "\\Device\\Harddisk81\\Partition0"},
  {"/dev/sdce", BRACK(FH_SDCE), "\\Device\\Harddisk82\\Partition0"},
  {"/dev/sdcf", BRACK(FH_SDCF), "\\Device\\Harddisk83\\Partition0"},
  {"/dev/sdcg", BRACK(FH_SDCG), "\\Device\\Harddisk84\\Partition0"},
  {"/dev/sdch", BRACK(FH_SDCH), "\\Device\\Harddisk85\\Partition0"},
  {"/dev/sdci", BRACK(FH_SDCI), "\\Device\\Harddisk86\\Partition0"},
  {"/dev/sdcj", BRACK(FH_SDCJ), "\\Device\\Harddisk87\\Partition0"},
  {"/dev/sdck", BRACK(FH_SDCK), "\\Device\\Harddisk88\\Partition0"},
  {"/dev/sdcl", BRACK(FH_SDCL), "\\Device\\Harddisk89\\Partition0"},
  {"/dev/sdcm", BRACK(FH_SDCM), "\\Device\\Harddisk90\\Partition0"},
  {"/dev/sdcn", BRACK(FH_SDCN), "\\Device\\Harddisk91\\Partition0"},
  {"/dev/sdco", BRACK(FH_SDCO), "\\Device\\Harddisk92\\Partition0"},
  {"/dev/sdcp", BRACK(FH_SDCP), "\\Device\\Harddisk93\\Partition0"},
  {"/dev/sdcq", BRACK(FH_SDCQ), "\\Device\\Harddisk94\\Partition0"},
  {"/dev/sdcr", BRACK(FH_SDCR), "\\Device\\Harddisk95\\Partition0"},
  {"/dev/sdcs", BRACK(FH_SDCS), "\\Device\\Harddisk96\\Partition0"},
  {"/dev/sdct", BRACK(FH_SDCT), "\\Device\\Harddisk97\\Partition0"},
  {"/dev/sdcu", BRACK(FH_SDCU), "\\Device\\Harddisk98\\Partition0"},
  {"/dev/sdcv", BRACK(FH_SDCV), "\\Device\\Harddisk99\\Partition0"},
  {"/dev/sdcw", BRACK(FH_SDCW), "\\Device\\Harddisk100\\Partition0"},
  {"/dev/sdcx", BRACK(FH_SDCX), "\\Device\\Harddisk101\\Partition0"},
  {"/dev/sdcy", BRACK(FH_SDCY), "\\Device\\Harddisk102\\Partition0"},
  {"/dev/sdcz", BRACK(FH_SDCZ), "\\Device\\Harddisk103\\Partition0"},
  {"/dev/sdca1", BRACK(FH_SDCA | 1), "\\Device\\Harddisk78\\Partition1"},
  {"/dev/sdca2", BRACK(FH_SDCA | 2), "\\Device\\Harddisk78\\Partition2"},
  {"/dev/sdca3", BRACK(FH_SDCA | 3), "\\Device\\Harddisk78\\Partition3"},
  {"/dev/sdca4", BRACK(FH_SDCA | 4), "\\Device\\Harddisk78\\Partition4"},
  {"/dev/sdca5", BRACK(FH_SDCA | 5), "\\Device\\Harddisk78\\Partition5"},
  {"/dev/sdca6", BRACK(FH_SDCA | 6), "\\Device\\Harddisk78\\Partition6"},
  {"/dev/sdca7", BRACK(FH_SDCA | 7), "\\Device\\Harddisk78\\Partition7"},
  {"/dev/sdca8", BRACK(FH_SDCA | 8), "\\Device\\Harddisk78\\Partition8"},
  {"/dev/sdca9", BRACK(FH_SDCA | 9), "\\Device\\Harddisk78\\Partition9"},
  {"/dev/sdca10", BRACK(FH_SDCA | 10), "\\Device\\Harddisk78\\Partition10"},
  {"/dev/sdca11", BRACK(FH_SDCA | 11), "\\Device\\Harddisk78\\Partition11"},
  {"/dev/sdca12", BRACK(FH_SDCA | 12), "\\Device\\Harddisk78\\Partition12"},
  {"/dev/sdca13", BRACK(FH_SDCA | 13), "\\Device\\Harddisk78\\Partition13"},
  {"/dev/sdca14", BRACK(FH_SDCA | 14), "\\Device\\Harddisk78\\Partition14"},
  {"/dev/sdca15", BRACK(FH_SDCA | 15), "\\Device\\Harddisk78\\Partition15"},
  {"/dev/sdcb1", BRACK(FH_SDCB | 1), "\\Device\\Harddisk79\\Partition1"},
  {"/dev/sdcb2", BRACK(FH_SDCB | 2), "\\Device\\Harddisk79\\Partition2"},
  {"/dev/sdcb3", BRACK(FH_SDCB | 3), "\\Device\\Harddisk79\\Partition3"},
  {"/dev/sdcb4", BRACK(FH_SDCB | 4), "\\Device\\Harddisk79\\Partition4"},
  {"/dev/sdcb5", BRACK(FH_SDCB | 5), "\\Device\\Harddisk79\\Partition5"},
  {"/dev/sdcb6", BRACK(FH_SDCB | 6), "\\Device\\Harddisk79\\Partition6"},
  {"/dev/sdcb7", BRACK(FH_SDCB | 7), "\\Device\\Harddisk79\\Partition7"},
  {"/dev/sdcb8", BRACK(FH_SDCB | 8), "\\Device\\Harddisk79\\Partition8"},
  {"/dev/sdcb9", BRACK(FH_SDCB | 9), "\\Device\\Harddisk79\\Partition9"},
  {"/dev/sdcb10", BRACK(FH_SDCB | 10), "\\Device\\Harddisk79\\Partition10"},
  {"/dev/sdcb11", BRACK(FH_SDCB | 11), "\\Device\\Harddisk79\\Partition11"},
  {"/dev/sdcb12", BRACK(FH_SDCB | 12), "\\Device\\Harddisk79\\Partition12"},
  {"/dev/sdcb13", BRACK(FH_SDCB | 13), "\\Device\\Harddisk79\\Partition13"},
  {"/dev/sdcb14", BRACK(FH_SDCB | 14), "\\Device\\Harddisk79\\Partition14"},
  {"/dev/sdcb15", BRACK(FH_SDCB | 15), "\\Device\\Harddisk79\\Partition15"},
  {"/dev/sdcc1", BRACK(FH_SDCC | 1), "\\Device\\Harddisk80\\Partition1"},
  {"/dev/sdcc2", BRACK(FH_SDCC | 2), "\\Device\\Harddisk80\\Partition2"},
  {"/dev/sdcc3", BRACK(FH_SDCC | 3), "\\Device\\Harddisk80\\Partition3"},
  {"/dev/sdcc4", BRACK(FH_SDCC | 4), "\\Device\\Harddisk80\\Partition4"},
  {"/dev/sdcc5", BRACK(FH_SDCC | 5), "\\Device\\Harddisk80\\Partition5"},
  {"/dev/sdcc6", BRACK(FH_SDCC | 6), "\\Device\\Harddisk80\\Partition6"},
  {"/dev/sdcc7", BRACK(FH_SDCC | 7), "\\Device\\Harddisk80\\Partition7"},
  {"/dev/sdcc8", BRACK(FH_SDCC | 8), "\\Device\\Harddisk80\\Partition8"},
  {"/dev/sdcc9", BRACK(FH_SDCC | 9), "\\Device\\Harddisk80\\Partition9"},
  {"/dev/sdcc10", BRACK(FH_SDCC | 10), "\\Device\\Harddisk80\\Partition10"},
  {"/dev/sdcc11", BRACK(FH_SDCC | 11), "\\Device\\Harddisk80\\Partition11"},
  {"/dev/sdcc12", BRACK(FH_SDCC | 12), "\\Device\\Harddisk80\\Partition12"},
  {"/dev/sdcc13", BRACK(FH_SDCC | 13), "\\Device\\Harddisk80\\Partition13"},
  {"/dev/sdcc14", BRACK(FH_SDCC | 14), "\\Device\\Harddisk80\\Partition14"},
  {"/dev/sdcc15", BRACK(FH_SDCC | 15), "\\Device\\Harddisk80\\Partition15"},
  {"/dev/sdcd1", BRACK(FH_SDCD | 1), "\\Device\\Harddisk81\\Partition1"},
  {"/dev/sdcd2", BRACK(FH_SDCD | 2), "\\Device\\Harddisk81\\Partition2"},
  {"/dev/sdcd3", BRACK(FH_SDCD | 3), "\\Device\\Harddisk81\\Partition3"},
  {"/dev/sdcd4", BRACK(FH_SDCD | 4), "\\Device\\Harddisk81\\Partition4"},
  {"/dev/sdcd5", BRACK(FH_SDCD | 5), "\\Device\\Harddisk81\\Partition5"},
  {"/dev/sdcd6", BRACK(FH_SDCD | 6), "\\Device\\Harddisk81\\Partition6"},
  {"/dev/sdcd7", BRACK(FH_SDCD | 7), "\\Device\\Harddisk81\\Partition7"},
  {"/dev/sdcd8", BRACK(FH_SDCD | 8), "\\Device\\Harddisk81\\Partition8"},
  {"/dev/sdcd9", BRACK(FH_SDCD | 9), "\\Device\\Harddisk81\\Partition9"},
  {"/dev/sdcd10", BRACK(FH_SDCD | 10), "\\Device\\Harddisk81\\Partition10"},
  {"/dev/sdcd11", BRACK(FH_SDCD | 11), "\\Device\\Harddisk81\\Partition11"},
  {"/dev/sdcd12", BRACK(FH_SDCD | 12), "\\Device\\Harddisk81\\Partition12"},
  {"/dev/sdcd13", BRACK(FH_SDCD | 13), "\\Device\\Harddisk81\\Partition13"},
  {"/dev/sdcd14", BRACK(FH_SDCD | 14), "\\Device\\Harddisk81\\Partition14"},
  {"/dev/sdcd15", BRACK(FH_SDCD | 15), "\\Device\\Harddisk81\\Partition15"},
  {"/dev/sdce1", BRACK(FH_SDCE | 1), "\\Device\\Harddisk82\\Partition1"},
  {"/dev/sdce2", BRACK(FH_SDCE | 2), "\\Device\\Harddisk82\\Partition2"},
  {"/dev/sdce3", BRACK(FH_SDCE | 3), "\\Device\\Harddisk82\\Partition3"},
  {"/dev/sdce4", BRACK(FH_SDCE | 4), "\\Device\\Harddisk82\\Partition4"},
  {"/dev/sdce5", BRACK(FH_SDCE | 5), "\\Device\\Harddisk82\\Partition5"},
  {"/dev/sdce6", BRACK(FH_SDCE | 6), "\\Device\\Harddisk82\\Partition6"},
  {"/dev/sdce7", BRACK(FH_SDCE | 7), "\\Device\\Harddisk82\\Partition7"},
  {"/dev/sdce8", BRACK(FH_SDCE | 8), "\\Device\\Harddisk82\\Partition8"},
  {"/dev/sdce9", BRACK(FH_SDCE | 9), "\\Device\\Harddisk82\\Partition9"},
  {"/dev/sdce10", BRACK(FH_SDCE | 10), "\\Device\\Harddisk82\\Partition10"},
  {"/dev/sdce11", BRACK(FH_SDCE | 11), "\\Device\\Harddisk82\\Partition11"},
  {"/dev/sdce12", BRACK(FH_SDCE | 12), "\\Device\\Harddisk82\\Partition12"},
  {"/dev/sdce13", BRACK(FH_SDCE | 13), "\\Device\\Harddisk82\\Partition13"},
  {"/dev/sdce14", BRACK(FH_SDCE | 14), "\\Device\\Harddisk82\\Partition14"},
  {"/dev/sdce15", BRACK(FH_SDCE | 15), "\\Device\\Harddisk82\\Partition15"},
  {"/dev/sdcf1", BRACK(FH_SDCF | 1), "\\Device\\Harddisk83\\Partition1"},
  {"/dev/sdcf2", BRACK(FH_SDCF | 2), "\\Device\\Harddisk83\\Partition2"},
  {"/dev/sdcf3", BRACK(FH_SDCF | 3), "\\Device\\Harddisk83\\Partition3"},
  {"/dev/sdcf4", BRACK(FH_SDCF | 4), "\\Device\\Harddisk83\\Partition4"},
  {"/dev/sdcf5", BRACK(FH_SDCF | 5), "\\Device\\Harddisk83\\Partition5"},
  {"/dev/sdcf6", BRACK(FH_SDCF | 6), "\\Device\\Harddisk83\\Partition6"},
  {"/dev/sdcf7", BRACK(FH_SDCF | 7), "\\Device\\Harddisk83\\Partition7"},
  {"/dev/sdcf8", BRACK(FH_SDCF | 8), "\\Device\\Harddisk83\\Partition8"},
  {"/dev/sdcf9", BRACK(FH_SDCF | 9), "\\Device\\Harddisk83\\Partition9"},
  {"/dev/sdcf10", BRACK(FH_SDCF | 10), "\\Device\\Harddisk83\\Partition10"},
  {"/dev/sdcf11", BRACK(FH_SDCF | 11), "\\Device\\Harddisk83\\Partition11"},
  {"/dev/sdcf12", BRACK(FH_SDCF | 12), "\\Device\\Harddisk83\\Partition12"},
  {"/dev/sdcf13", BRACK(FH_SDCF | 13), "\\Device\\Harddisk83\\Partition13"},
  {"/dev/sdcf14", BRACK(FH_SDCF | 14), "\\Device\\Harddisk83\\Partition14"},
  {"/dev/sdcf15", BRACK(FH_SDCF | 15), "\\Device\\Harddisk83\\Partition15"},
  {"/dev/sdcg1", BRACK(FH_SDCG | 1), "\\Device\\Harddisk84\\Partition1"},
  {"/dev/sdcg2", BRACK(FH_SDCG | 2), "\\Device\\Harddisk84\\Partition2"},
  {"/dev/sdcg3", BRACK(FH_SDCG | 3), "\\Device\\Harddisk84\\Partition3"},
  {"/dev/sdcg4", BRACK(FH_SDCG | 4), "\\Device\\Harddisk84\\Partition4"},
  {"/dev/sdcg5", BRACK(FH_SDCG | 5), "\\Device\\Harddisk84\\Partition5"},
  {"/dev/sdcg6", BRACK(FH_SDCG | 6), "\\Device\\Harddisk84\\Partition6"},
  {"/dev/sdcg7", BRACK(FH_SDCG | 7), "\\Device\\Harddisk84\\Partition7"},
  {"/dev/sdcg8", BRACK(FH_SDCG | 8), "\\Device\\Harddisk84\\Partition8"},
  {"/dev/sdcg9", BRACK(FH_SDCG | 9), "\\Device\\Harddisk84\\Partition9"},
  {"/dev/sdcg10", BRACK(FH_SDCG | 10), "\\Device\\Harddisk84\\Partition10"},
  {"/dev/sdcg11", BRACK(FH_SDCG | 11), "\\Device\\Harddisk84\\Partition11"},
  {"/dev/sdcg12", BRACK(FH_SDCG | 12), "\\Device\\Harddisk84\\Partition12"},
  {"/dev/sdcg13", BRACK(FH_SDCG | 13), "\\Device\\Harddisk84\\Partition13"},
  {"/dev/sdcg14", BRACK(FH_SDCG | 14), "\\Device\\Harddisk84\\Partition14"},
  {"/dev/sdcg15", BRACK(FH_SDCG | 15), "\\Device\\Harddisk84\\Partition15"},
  {"/dev/sdch1", BRACK(FH_SDCH | 1), "\\Device\\Harddisk85\\Partition1"},
  {"/dev/sdch2", BRACK(FH_SDCH | 2), "\\Device\\Harddisk85\\Partition2"},
  {"/dev/sdch3", BRACK(FH_SDCH | 3), "\\Device\\Harddisk85\\Partition3"},
  {"/dev/sdch4", BRACK(FH_SDCH | 4), "\\Device\\Harddisk85\\Partition4"},
  {"/dev/sdch5", BRACK(FH_SDCH | 5), "\\Device\\Harddisk85\\Partition5"},
  {"/dev/sdch6", BRACK(FH_SDCH | 6), "\\Device\\Harddisk85\\Partition6"},
  {"/dev/sdch7", BRACK(FH_SDCH | 7), "\\Device\\Harddisk85\\Partition7"},
  {"/dev/sdch8", BRACK(FH_SDCH | 8), "\\Device\\Harddisk85\\Partition8"},
  {"/dev/sdch9", BRACK(FH_SDCH | 9), "\\Device\\Harddisk85\\Partition9"},
  {"/dev/sdch10", BRACK(FH_SDCH | 10), "\\Device\\Harddisk85\\Partition10"},
  {"/dev/sdch11", BRACK(FH_SDCH | 11), "\\Device\\Harddisk85\\Partition11"},
  {"/dev/sdch12", BRACK(FH_SDCH | 12), "\\Device\\Harddisk85\\Partition12"},
  {"/dev/sdch13", BRACK(FH_SDCH | 13), "\\Device\\Harddisk85\\Partition13"},
  {"/dev/sdch14", BRACK(FH_SDCH | 14), "\\Device\\Harddisk85\\Partition14"},
  {"/dev/sdch15", BRACK(FH_SDCH | 15), "\\Device\\Harddisk85\\Partition15"},
  {"/dev/sdci1", BRACK(FH_SDCI | 1), "\\Device\\Harddisk86\\Partition1"},
  {"/dev/sdci2", BRACK(FH_SDCI | 2), "\\Device\\Harddisk86\\Partition2"},
  {"/dev/sdci3", BRACK(FH_SDCI | 3), "\\Device\\Harddisk86\\Partition3"},
  {"/dev/sdci4", BRACK(FH_SDCI | 4), "\\Device\\Harddisk86\\Partition4"},
  {"/dev/sdci5", BRACK(FH_SDCI | 5), "\\Device\\Harddisk86\\Partition5"},
  {"/dev/sdci6", BRACK(FH_SDCI | 6), "\\Device\\Harddisk86\\Partition6"},
  {"/dev/sdci7", BRACK(FH_SDCI | 7), "\\Device\\Harddisk86\\Partition7"},
  {"/dev/sdci8", BRACK(FH_SDCI | 8), "\\Device\\Harddisk86\\Partition8"},
  {"/dev/sdci9", BRACK(FH_SDCI | 9), "\\Device\\Harddisk86\\Partition9"},
  {"/dev/sdci10", BRACK(FH_SDCI | 10), "\\Device\\Harddisk86\\Partition10"},
  {"/dev/sdci11", BRACK(FH_SDCI | 11), "\\Device\\Harddisk86\\Partition11"},
  {"/dev/sdci12", BRACK(FH_SDCI | 12), "\\Device\\Harddisk86\\Partition12"},
  {"/dev/sdci13", BRACK(FH_SDCI | 13), "\\Device\\Harddisk86\\Partition13"},
  {"/dev/sdci14", BRACK(FH_SDCI | 14), "\\Device\\Harddisk86\\Partition14"},
  {"/dev/sdci15", BRACK(FH_SDCI | 15), "\\Device\\Harddisk86\\Partition15"},
  {"/dev/sdcj1", BRACK(FH_SDCJ | 1), "\\Device\\Harddisk87\\Partition1"},
  {"/dev/sdcj2", BRACK(FH_SDCJ | 2), "\\Device\\Harddisk87\\Partition2"},
  {"/dev/sdcj3", BRACK(FH_SDCJ | 3), "\\Device\\Harddisk87\\Partition3"},
  {"/dev/sdcj4", BRACK(FH_SDCJ | 4), "\\Device\\Harddisk87\\Partition4"},
  {"/dev/sdcj5", BRACK(FH_SDCJ | 5), "\\Device\\Harddisk87\\Partition5"},
  {"/dev/sdcj6", BRACK(FH_SDCJ | 6), "\\Device\\Harddisk87\\Partition6"},
  {"/dev/sdcj7", BRACK(FH_SDCJ | 7), "\\Device\\Harddisk87\\Partition7"},
  {"/dev/sdcj8", BRACK(FH_SDCJ | 8), "\\Device\\Harddisk87\\Partition8"},
  {"/dev/sdcj9", BRACK(FH_SDCJ | 9), "\\Device\\Harddisk87\\Partition9"},
  {"/dev/sdcj10", BRACK(FH_SDCJ | 10), "\\Device\\Harddisk87\\Partition10"},
  {"/dev/sdcj11", BRACK(FH_SDCJ | 11), "\\Device\\Harddisk87\\Partition11"},
  {"/dev/sdcj12", BRACK(FH_SDCJ | 12), "\\Device\\Harddisk87\\Partition12"},
  {"/dev/sdcj13", BRACK(FH_SDCJ | 13), "\\Device\\Harddisk87\\Partition13"},
  {"/dev/sdcj14", BRACK(FH_SDCJ | 14), "\\Device\\Harddisk87\\Partition14"},
  {"/dev/sdcj15", BRACK(FH_SDCJ | 15), "\\Device\\Harddisk87\\Partition15"},
  {"/dev/sdck1", BRACK(FH_SDCK | 1), "\\Device\\Harddisk88\\Partition1"},
  {"/dev/sdck2", BRACK(FH_SDCK | 2), "\\Device\\Harddisk88\\Partition2"},
  {"/dev/sdck3", BRACK(FH_SDCK | 3), "\\Device\\Harddisk88\\Partition3"},
  {"/dev/sdck4", BRACK(FH_SDCK | 4), "\\Device\\Harddisk88\\Partition4"},
  {"/dev/sdck5", BRACK(FH_SDCK | 5), "\\Device\\Harddisk88\\Partition5"},
  {"/dev/sdck6", BRACK(FH_SDCK | 6), "\\Device\\Harddisk88\\Partition6"},
  {"/dev/sdck7", BRACK(FH_SDCK | 7), "\\Device\\Harddisk88\\Partition7"},
  {"/dev/sdck8", BRACK(FH_SDCK | 8), "\\Device\\Harddisk88\\Partition8"},
  {"/dev/sdck9", BRACK(FH_SDCK | 9), "\\Device\\Harddisk88\\Partition9"},
  {"/dev/sdck10", BRACK(FH_SDCK | 10), "\\Device\\Harddisk88\\Partition10"},
  {"/dev/sdck11", BRACK(FH_SDCK | 11), "\\Device\\Harddisk88\\Partition11"},
  {"/dev/sdck12", BRACK(FH_SDCK | 12), "\\Device\\Harddisk88\\Partition12"},
  {"/dev/sdck13", BRACK(FH_SDCK | 13), "\\Device\\Harddisk88\\Partition13"},
  {"/dev/sdck14", BRACK(FH_SDCK | 14), "\\Device\\Harddisk88\\Partition14"},
  {"/dev/sdck15", BRACK(FH_SDCK | 15), "\\Device\\Harddisk88\\Partition15"},
  {"/dev/sdcl1", BRACK(FH_SDCL | 1), "\\Device\\Harddisk89\\Partition1"},
  {"/dev/sdcl2", BRACK(FH_SDCL | 2), "\\Device\\Harddisk89\\Partition2"},
  {"/dev/sdcl3", BRACK(FH_SDCL | 3), "\\Device\\Harddisk89\\Partition3"},
  {"/dev/sdcl4", BRACK(FH_SDCL | 4), "\\Device\\Harddisk89\\Partition4"},
  {"/dev/sdcl5", BRACK(FH_SDCL | 5), "\\Device\\Harddisk89\\Partition5"},
  {"/dev/sdcl6", BRACK(FH_SDCL | 6), "\\Device\\Harddisk89\\Partition6"},
  {"/dev/sdcl7", BRACK(FH_SDCL | 7), "\\Device\\Harddisk89\\Partition7"},
  {"/dev/sdcl8", BRACK(FH_SDCL | 8), "\\Device\\Harddisk89\\Partition8"},
  {"/dev/sdcl9", BRACK(FH_SDCL | 9), "\\Device\\Harddisk89\\Partition9"},
  {"/dev/sdcl10", BRACK(FH_SDCL | 10), "\\Device\\Harddisk89\\Partition10"},
  {"/dev/sdcl11", BRACK(FH_SDCL | 11), "\\Device\\Harddisk89\\Partition11"},
  {"/dev/sdcl12", BRACK(FH_SDCL | 12), "\\Device\\Harddisk89\\Partition12"},
  {"/dev/sdcl13", BRACK(FH_SDCL | 13), "\\Device\\Harddisk89\\Partition13"},
  {"/dev/sdcl14", BRACK(FH_SDCL | 14), "\\Device\\Harddisk89\\Partition14"},
  {"/dev/sdcl15", BRACK(FH_SDCL | 15), "\\Device\\Harddisk89\\Partition15"},
  {"/dev/sdcm1", BRACK(FH_SDCM | 1), "\\Device\\Harddisk90\\Partition1"},
  {"/dev/sdcm2", BRACK(FH_SDCM | 2), "\\Device\\Harddisk90\\Partition2"},
  {"/dev/sdcm3", BRACK(FH_SDCM | 3), "\\Device\\Harddisk90\\Partition3"},
  {"/dev/sdcm4", BRACK(FH_SDCM | 4), "\\Device\\Harddisk90\\Partition4"},
  {"/dev/sdcm5", BRACK(FH_SDCM | 5), "\\Device\\Harddisk90\\Partition5"},
  {"/dev/sdcm6", BRACK(FH_SDCM | 6), "\\Device\\Harddisk90\\Partition6"},
  {"/dev/sdcm7", BRACK(FH_SDCM | 7), "\\Device\\Harddisk90\\Partition7"},
  {"/dev/sdcm8", BRACK(FH_SDCM | 8), "\\Device\\Harddisk90\\Partition8"},
  {"/dev/sdcm9", BRACK(FH_SDCM | 9), "\\Device\\Harddisk90\\Partition9"},
  {"/dev/sdcm10", BRACK(FH_SDCM | 10), "\\Device\\Harddisk90\\Partition10"},
  {"/dev/sdcm11", BRACK(FH_SDCM | 11), "\\Device\\Harddisk90\\Partition11"},
  {"/dev/sdcm12", BRACK(FH_SDCM | 12), "\\Device\\Harddisk90\\Partition12"},
  {"/dev/sdcm13", BRACK(FH_SDCM | 13), "\\Device\\Harddisk90\\Partition13"},
  {"/dev/sdcm14", BRACK(FH_SDCM | 14), "\\Device\\Harddisk90\\Partition14"},
  {"/dev/sdcm15", BRACK(FH_SDCM | 15), "\\Device\\Harddisk90\\Partition15"},
  {"/dev/sdcn1", BRACK(FH_SDCN | 1), "\\Device\\Harddisk91\\Partition1"},
  {"/dev/sdcn2", BRACK(FH_SDCN | 2), "\\Device\\Harddisk91\\Partition2"},
  {"/dev/sdcn3", BRACK(FH_SDCN | 3), "\\Device\\Harddisk91\\Partition3"},
  {"/dev/sdcn4", BRACK(FH_SDCN | 4), "\\Device\\Harddisk91\\Partition4"},
  {"/dev/sdcn5", BRACK(FH_SDCN | 5), "\\Device\\Harddisk91\\Partition5"},
  {"/dev/sdcn6", BRACK(FH_SDCN | 6), "\\Device\\Harddisk91\\Partition6"},
  {"/dev/sdcn7", BRACK(FH_SDCN | 7), "\\Device\\Harddisk91\\Partition7"},
  {"/dev/sdcn8", BRACK(FH_SDCN | 8), "\\Device\\Harddisk91\\Partition8"},
  {"/dev/sdcn9", BRACK(FH_SDCN | 9), "\\Device\\Harddisk91\\Partition9"},
  {"/dev/sdcn10", BRACK(FH_SDCN | 10), "\\Device\\Harddisk91\\Partition10"},
  {"/dev/sdcn11", BRACK(FH_SDCN | 11), "\\Device\\Harddisk91\\Partition11"},
  {"/dev/sdcn12", BRACK(FH_SDCN | 12), "\\Device\\Harddisk91\\Partition12"},
  {"/dev/sdcn13", BRACK(FH_SDCN | 13), "\\Device\\Harddisk91\\Partition13"},
  {"/dev/sdcn14", BRACK(FH_SDCN | 14), "\\Device\\Harddisk91\\Partition14"},
  {"/dev/sdcn15", BRACK(FH_SDCN | 15), "\\Device\\Harddisk91\\Partition15"},
  {"/dev/sdco1", BRACK(FH_SDCO | 1), "\\Device\\Harddisk92\\Partition1"},
  {"/dev/sdco2", BRACK(FH_SDCO | 2), "\\Device\\Harddisk92\\Partition2"},
  {"/dev/sdco3", BRACK(FH_SDCO | 3), "\\Device\\Harddisk92\\Partition3"},
  {"/dev/sdco4", BRACK(FH_SDCO | 4), "\\Device\\Harddisk92\\Partition4"},
  {"/dev/sdco5", BRACK(FH_SDCO | 5), "\\Device\\Harddisk92\\Partition5"},
  {"/dev/sdco6", BRACK(FH_SDCO | 6), "\\Device\\Harddisk92\\Partition6"},
  {"/dev/sdco7", BRACK(FH_SDCO | 7), "\\Device\\Harddisk92\\Partition7"},
  {"/dev/sdco8", BRACK(FH_SDCO | 8), "\\Device\\Harddisk92\\Partition8"},
  {"/dev/sdco9", BRACK(FH_SDCO | 9), "\\Device\\Harddisk92\\Partition9"},
  {"/dev/sdco10", BRACK(FH_SDCO | 10), "\\Device\\Harddisk92\\Partition10"},
  {"/dev/sdco11", BRACK(FH_SDCO | 11), "\\Device\\Harddisk92\\Partition11"},
  {"/dev/sdco12", BRACK(FH_SDCO | 12), "\\Device\\Harddisk92\\Partition12"},
  {"/dev/sdco13", BRACK(FH_SDCO | 13), "\\Device\\Harddisk92\\Partition13"},
  {"/dev/sdco14", BRACK(FH_SDCO | 14), "\\Device\\Harddisk92\\Partition14"},
  {"/dev/sdco15", BRACK(FH_SDCO | 15), "\\Device\\Harddisk92\\Partition15"},
  {"/dev/sdcp1", BRACK(FH_SDCP | 1), "\\Device\\Harddisk93\\Partition1"},
  {"/dev/sdcp2", BRACK(FH_SDCP | 2), "\\Device\\Harddisk93\\Partition2"},
  {"/dev/sdcp3", BRACK(FH_SDCP | 3), "\\Device\\Harddisk93\\Partition3"},
  {"/dev/sdcp4", BRACK(FH_SDCP | 4), "\\Device\\Harddisk93\\Partition4"},
  {"/dev/sdcp5", BRACK(FH_SDCP | 5), "\\Device\\Harddisk93\\Partition5"},
  {"/dev/sdcp6", BRACK(FH_SDCP | 6), "\\Device\\Harddisk93\\Partition6"},
  {"/dev/sdcp7", BRACK(FH_SDCP | 7), "\\Device\\Harddisk93\\Partition7"},
  {"/dev/sdcp8", BRACK(FH_SDCP | 8), "\\Device\\Harddisk93\\Partition8"},
  {"/dev/sdcp9", BRACK(FH_SDCP | 9), "\\Device\\Harddisk93\\Partition9"},
  {"/dev/sdcp10", BRACK(FH_SDCP | 10), "\\Device\\Harddisk93\\Partition10"},
  {"/dev/sdcp11", BRACK(FH_SDCP | 11), "\\Device\\Harddisk93\\Partition11"},
  {"/dev/sdcp12", BRACK(FH_SDCP | 12), "\\Device\\Harddisk93\\Partition12"},
  {"/dev/sdcp13", BRACK(FH_SDCP | 13), "\\Device\\Harddisk93\\Partition13"},
  {"/dev/sdcp14", BRACK(FH_SDCP | 14), "\\Device\\Harddisk93\\Partition14"},
  {"/dev/sdcp15", BRACK(FH_SDCP | 15), "\\Device\\Harddisk93\\Partition15"},
  {"/dev/sdcq1", BRACK(FH_SDCQ | 1), "\\Device\\Harddisk94\\Partition1"},
  {"/dev/sdcq2", BRACK(FH_SDCQ | 2), "\\Device\\Harddisk94\\Partition2"},
  {"/dev/sdcq3", BRACK(FH_SDCQ | 3), "\\Device\\Harddisk94\\Partition3"},
  {"/dev/sdcq4", BRACK(FH_SDCQ | 4), "\\Device\\Harddisk94\\Partition4"},
  {"/dev/sdcq5", BRACK(FH_SDCQ | 5), "\\Device\\Harddisk94\\Partition5"},
  {"/dev/sdcq6", BRACK(FH_SDCQ | 6), "\\Device\\Harddisk94\\Partition6"},
  {"/dev/sdcq7", BRACK(FH_SDCQ | 7), "\\Device\\Harddisk94\\Partition7"},
  {"/dev/sdcq8", BRACK(FH_SDCQ | 8), "\\Device\\Harddisk94\\Partition8"},
  {"/dev/sdcq9", BRACK(FH_SDCQ | 9), "\\Device\\Harddisk94\\Partition9"},
  {"/dev/sdcq10", BRACK(FH_SDCQ | 10), "\\Device\\Harddisk94\\Partition10"},
  {"/dev/sdcq11", BRACK(FH_SDCQ | 11), "\\Device\\Harddisk94\\Partition11"},
  {"/dev/sdcq12", BRACK(FH_SDCQ | 12), "\\Device\\Harddisk94\\Partition12"},
  {"/dev/sdcq13", BRACK(FH_SDCQ | 13), "\\Device\\Harddisk94\\Partition13"},
  {"/dev/sdcq14", BRACK(FH_SDCQ | 14), "\\Device\\Harddisk94\\Partition14"},
  {"/dev/sdcq15", BRACK(FH_SDCQ | 15), "\\Device\\Harddisk94\\Partition15"},
  {"/dev/sdcr1", BRACK(FH_SDCR | 1), "\\Device\\Harddisk95\\Partition1"},
  {"/dev/sdcr2", BRACK(FH_SDCR | 2), "\\Device\\Harddisk95\\Partition2"},
  {"/dev/sdcr3", BRACK(FH_SDCR | 3), "\\Device\\Harddisk95\\Partition3"},
  {"/dev/sdcr4", BRACK(FH_SDCR | 4), "\\Device\\Harddisk95\\Partition4"},
  {"/dev/sdcr5", BRACK(FH_SDCR | 5), "\\Device\\Harddisk95\\Partition5"},
  {"/dev/sdcr6", BRACK(FH_SDCR | 6), "\\Device\\Harddisk95\\Partition6"},
  {"/dev/sdcr7", BRACK(FH_SDCR | 7), "\\Device\\Harddisk95\\Partition7"},
  {"/dev/sdcr8", BRACK(FH_SDCR | 8), "\\Device\\Harddisk95\\Partition8"},
  {"/dev/sdcr9", BRACK(FH_SDCR | 9), "\\Device\\Harddisk95\\Partition9"},
  {"/dev/sdcr10", BRACK(FH_SDCR | 10), "\\Device\\Harddisk95\\Partition10"},
  {"/dev/sdcr11", BRACK(FH_SDCR | 11), "\\Device\\Harddisk95\\Partition11"},
  {"/dev/sdcr12", BRACK(FH_SDCR | 12), "\\Device\\Harddisk95\\Partition12"},
  {"/dev/sdcr13", BRACK(FH_SDCR | 13), "\\Device\\Harddisk95\\Partition13"},
  {"/dev/sdcr14", BRACK(FH_SDCR | 14), "\\Device\\Harddisk95\\Partition14"},
  {"/dev/sdcr15", BRACK(FH_SDCR | 15), "\\Device\\Harddisk95\\Partition15"},
  {"/dev/sdcs1", BRACK(FH_SDCS | 1), "\\Device\\Harddisk96\\Partition1"},
  {"/dev/sdcs2", BRACK(FH_SDCS | 2), "\\Device\\Harddisk96\\Partition2"},
  {"/dev/sdcs3", BRACK(FH_SDCS | 3), "\\Device\\Harddisk96\\Partition3"},
  {"/dev/sdcs4", BRACK(FH_SDCS | 4), "\\Device\\Harddisk96\\Partition4"},
  {"/dev/sdcs5", BRACK(FH_SDCS | 5), "\\Device\\Harddisk96\\Partition5"},
  {"/dev/sdcs6", BRACK(FH_SDCS | 6), "\\Device\\Harddisk96\\Partition6"},
  {"/dev/sdcs7", BRACK(FH_SDCS | 7), "\\Device\\Harddisk96\\Partition7"},
  {"/dev/sdcs8", BRACK(FH_SDCS | 8), "\\Device\\Harddisk96\\Partition8"},
  {"/dev/sdcs9", BRACK(FH_SDCS | 9), "\\Device\\Harddisk96\\Partition9"},
  {"/dev/sdcs10", BRACK(FH_SDCS | 10), "\\Device\\Harddisk96\\Partition10"},
  {"/dev/sdcs11", BRACK(FH_SDCS | 11), "\\Device\\Harddisk96\\Partition11"},
  {"/dev/sdcs12", BRACK(FH_SDCS | 12), "\\Device\\Harddisk96\\Partition12"},
  {"/dev/sdcs13", BRACK(FH_SDCS | 13), "\\Device\\Harddisk96\\Partition13"},
  {"/dev/sdcs14", BRACK(FH_SDCS | 14), "\\Device\\Harddisk96\\Partition14"},
  {"/dev/sdcs15", BRACK(FH_SDCS | 15), "\\Device\\Harddisk96\\Partition15"},
  {"/dev/sdct1", BRACK(FH_SDCT | 1), "\\Device\\Harddisk97\\Partition1"},
  {"/dev/sdct2", BRACK(FH_SDCT | 2), "\\Device\\Harddisk97\\Partition2"},
  {"/dev/sdct3", BRACK(FH_SDCT | 3), "\\Device\\Harddisk97\\Partition3"},
  {"/dev/sdct4", BRACK(FH_SDCT | 4), "\\Device\\Harddisk97\\Partition4"},
  {"/dev/sdct5", BRACK(FH_SDCT | 5), "\\Device\\Harddisk97\\Partition5"},
  {"/dev/sdct6", BRACK(FH_SDCT | 6), "\\Device\\Harddisk97\\Partition6"},
  {"/dev/sdct7", BRACK(FH_SDCT | 7), "\\Device\\Harddisk97\\Partition7"},
  {"/dev/sdct8", BRACK(FH_SDCT | 8), "\\Device\\Harddisk97\\Partition8"},
  {"/dev/sdct9", BRACK(FH_SDCT | 9), "\\Device\\Harddisk97\\Partition9"},
  {"/dev/sdct10", BRACK(FH_SDCT | 10), "\\Device\\Harddisk97\\Partition10"},
  {"/dev/sdct11", BRACK(FH_SDCT | 11), "\\Device\\Harddisk97\\Partition11"},
  {"/dev/sdct12", BRACK(FH_SDCT | 12), "\\Device\\Harddisk97\\Partition12"},
  {"/dev/sdct13", BRACK(FH_SDCT | 13), "\\Device\\Harddisk97\\Partition13"},
  {"/dev/sdct14", BRACK(FH_SDCT | 14), "\\Device\\Harddisk97\\Partition14"},
  {"/dev/sdct15", BRACK(FH_SDCT | 15), "\\Device\\Harddisk97\\Partition15"},
  {"/dev/sdcu1", BRACK(FH_SDCU | 1), "\\Device\\Harddisk98\\Partition1"},
  {"/dev/sdcu2", BRACK(FH_SDCU | 2), "\\Device\\Harddisk98\\Partition2"},
  {"/dev/sdcu3", BRACK(FH_SDCU | 3), "\\Device\\Harddisk98\\Partition3"},
  {"/dev/sdcu4", BRACK(FH_SDCU | 4), "\\Device\\Harddisk98\\Partition4"},
  {"/dev/sdcu5", BRACK(FH_SDCU | 5), "\\Device\\Harddisk98\\Partition5"},
  {"/dev/sdcu6", BRACK(FH_SDCU | 6), "\\Device\\Harddisk98\\Partition6"},
  {"/dev/sdcu7", BRACK(FH_SDCU | 7), "\\Device\\Harddisk98\\Partition7"},
  {"/dev/sdcu8", BRACK(FH_SDCU | 8), "\\Device\\Harddisk98\\Partition8"},
  {"/dev/sdcu9", BRACK(FH_SDCU | 9), "\\Device\\Harddisk98\\Partition9"},
  {"/dev/sdcu10", BRACK(FH_SDCU | 10), "\\Device\\Harddisk98\\Partition10"},
  {"/dev/sdcu11", BRACK(FH_SDCU | 11), "\\Device\\Harddisk98\\Partition11"},
  {"/dev/sdcu12", BRACK(FH_SDCU | 12), "\\Device\\Harddisk98\\Partition12"},
  {"/dev/sdcu13", BRACK(FH_SDCU | 13), "\\Device\\Harddisk98\\Partition13"},
  {"/dev/sdcu14", BRACK(FH_SDCU | 14), "\\Device\\Harddisk98\\Partition14"},
  {"/dev/sdcu15", BRACK(FH_SDCU | 15), "\\Device\\Harddisk98\\Partition15"},
  {"/dev/sdcv1", BRACK(FH_SDCV | 1), "\\Device\\Harddisk99\\Partition1"},
  {"/dev/sdcv2", BRACK(FH_SDCV | 2), "\\Device\\Harddisk99\\Partition2"},
  {"/dev/sdcv3", BRACK(FH_SDCV | 3), "\\Device\\Harddisk99\\Partition3"},
  {"/dev/sdcv4", BRACK(FH_SDCV | 4), "\\Device\\Harddisk99\\Partition4"},
  {"/dev/sdcv5", BRACK(FH_SDCV | 5), "\\Device\\Harddisk99\\Partition5"},
  {"/dev/sdcv6", BRACK(FH_SDCV | 6), "\\Device\\Harddisk99\\Partition6"},
  {"/dev/sdcv7", BRACK(FH_SDCV | 7), "\\Device\\Harddisk99\\Partition7"},
  {"/dev/sdcv8", BRACK(FH_SDCV | 8), "\\Device\\Harddisk99\\Partition8"},
  {"/dev/sdcv9", BRACK(FH_SDCV | 9), "\\Device\\Harddisk99\\Partition9"},
  {"/dev/sdcv10", BRACK(FH_SDCV | 10), "\\Device\\Harddisk99\\Partition10"},
  {"/dev/sdcv11", BRACK(FH_SDCV | 11), "\\Device\\Harddisk99\\Partition11"},
  {"/dev/sdcv12", BRACK(FH_SDCV | 12), "\\Device\\Harddisk99\\Partition12"},
  {"/dev/sdcv13", BRACK(FH_SDCV | 13), "\\Device\\Harddisk99\\Partition13"},
  {"/dev/sdcv14", BRACK(FH_SDCV | 14), "\\Device\\Harddisk99\\Partition14"},
  {"/dev/sdcv15", BRACK(FH_SDCV | 15), "\\Device\\Harddisk99\\Partition15"},
  {"/dev/sdcw1", BRACK(FH_SDCW | 1), "\\Device\\Harddisk100\\Partition1"},
  {"/dev/sdcw2", BRACK(FH_SDCW | 2), "\\Device\\Harddisk100\\Partition2"},
  {"/dev/sdcw3", BRACK(FH_SDCW | 3), "\\Device\\Harddisk100\\Partition3"},
  {"/dev/sdcw4", BRACK(FH_SDCW | 4), "\\Device\\Harddisk100\\Partition4"},
  {"/dev/sdcw5", BRACK(FH_SDCW | 5), "\\Device\\Harddisk100\\Partition5"},
  {"/dev/sdcw6", BRACK(FH_SDCW | 6), "\\Device\\Harddisk100\\Partition6"},
  {"/dev/sdcw7", BRACK(FH_SDCW | 7), "\\Device\\Harddisk100\\Partition7"},
  {"/dev/sdcw8", BRACK(FH_SDCW | 8), "\\Device\\Harddisk100\\Partition8"},
  {"/dev/sdcw9", BRACK(FH_SDCW | 9), "\\Device\\Harddisk100\\Partition9"},
  {"/dev/sdcw10", BRACK(FH_SDCW | 10), "\\Device\\Harddisk100\\Partition10"},
  {"/dev/sdcw11", BRACK(FH_SDCW | 11), "\\Device\\Harddisk100\\Partition11"},
  {"/dev/sdcw12", BRACK(FH_SDCW | 12), "\\Device\\Harddisk100\\Partition12"},
  {"/dev/sdcw13", BRACK(FH_SDCW | 13), "\\Device\\Harddisk100\\Partition13"},
  {"/dev/sdcw14", BRACK(FH_SDCW | 14), "\\Device\\Harddisk100\\Partition14"},
  {"/dev/sdcw15", BRACK(FH_SDCW | 15), "\\Device\\Harddisk100\\Partition15"},
  {"/dev/sdcx1", BRACK(FH_SDCX | 1), "\\Device\\Harddisk101\\Partition1"},
  {"/dev/sdcx2", BRACK(FH_SDCX | 2), "\\Device\\Harddisk101\\Partition2"},
  {"/dev/sdcx3", BRACK(FH_SDCX | 3), "\\Device\\Harddisk101\\Partition3"},
  {"/dev/sdcx4", BRACK(FH_SDCX | 4), "\\Device\\Harddisk101\\Partition4"},
  {"/dev/sdcx5", BRACK(FH_SDCX | 5), "\\Device\\Harddisk101\\Partition5"},
  {"/dev/sdcx6", BRACK(FH_SDCX | 6), "\\Device\\Harddisk101\\Partition6"},
  {"/dev/sdcx7", BRACK(FH_SDCX | 7), "\\Device\\Harddisk101\\Partition7"},
  {"/dev/sdcx8", BRACK(FH_SDCX | 8), "\\Device\\Harddisk101\\Partition8"},
  {"/dev/sdcx9", BRACK(FH_SDCX | 9), "\\Device\\Harddisk101\\Partition9"},
  {"/dev/sdcx10", BRACK(FH_SDCX | 10), "\\Device\\Harddisk101\\Partition10"},
  {"/dev/sdcx11", BRACK(FH_SDCX | 11), "\\Device\\Harddisk101\\Partition11"},
  {"/dev/sdcx12", BRACK(FH_SDCX | 12), "\\Device\\Harddisk101\\Partition12"},
  {"/dev/sdcx13", BRACK(FH_SDCX | 13), "\\Device\\Harddisk101\\Partition13"},
  {"/dev/sdcx14", BRACK(FH_SDCX | 14), "\\Device\\Harddisk101\\Partition14"},
  {"/dev/sdcx15", BRACK(FH_SDCX | 15), "\\Device\\Harddisk101\\Partition15"},
  {"/dev/sdcy1", BRACK(FH_SDCY | 1), "\\Device\\Harddisk102\\Partition1"},
  {"/dev/sdcy2", BRACK(FH_SDCY | 2), "\\Device\\Harddisk102\\Partition2"},
  {"/dev/sdcy3", BRACK(FH_SDCY | 3), "\\Device\\Harddisk102\\Partition3"},
  {"/dev/sdcy4", BRACK(FH_SDCY | 4), "\\Device\\Harddisk102\\Partition4"},
  {"/dev/sdcy5", BRACK(FH_SDCY | 5), "\\Device\\Harddisk102\\Partition5"},
  {"/dev/sdcy6", BRACK(FH_SDCY | 6), "\\Device\\Harddisk102\\Partition6"},
  {"/dev/sdcy7", BRACK(FH_SDCY | 7), "\\Device\\Harddisk102\\Partition7"},
  {"/dev/sdcy8", BRACK(FH_SDCY | 8), "\\Device\\Harddisk102\\Partition8"},
  {"/dev/sdcy9", BRACK(FH_SDCY | 9), "\\Device\\Harddisk102\\Partition9"},
  {"/dev/sdcy10", BRACK(FH_SDCY | 10), "\\Device\\Harddisk102\\Partition10"},
  {"/dev/sdcy11", BRACK(FH_SDCY | 11), "\\Device\\Harddisk102\\Partition11"},
  {"/dev/sdcy12", BRACK(FH_SDCY | 12), "\\Device\\Harddisk102\\Partition12"},
  {"/dev/sdcy13", BRACK(FH_SDCY | 13), "\\Device\\Harddisk102\\Partition13"},
  {"/dev/sdcy14", BRACK(FH_SDCY | 14), "\\Device\\Harddisk102\\Partition14"},
  {"/dev/sdcy15", BRACK(FH_SDCY | 15), "\\Device\\Harddisk102\\Partition15"},
  {"/dev/sdcz1", BRACK(FH_SDCZ | 1), "\\Device\\Harddisk103\\Partition1"},
  {"/dev/sdcz2", BRACK(FH_SDCZ | 2), "\\Device\\Harddisk103\\Partition2"},
  {"/dev/sdcz3", BRACK(FH_SDCZ | 3), "\\Device\\Harddisk103\\Partition3"},
  {"/dev/sdcz4", BRACK(FH_SDCZ | 4), "\\Device\\Harddisk103\\Partition4"},
  {"/dev/sdcz5", BRACK(FH_SDCZ | 5), "\\Device\\Harddisk103\\Partition5"},
  {"/dev/sdcz6", BRACK(FH_SDCZ | 6), "\\Device\\Harddisk103\\Partition6"},
  {"/dev/sdcz7", BRACK(FH_SDCZ | 7), "\\Device\\Harddisk103\\Partition7"},
  {"/dev/sdcz8", BRACK(FH_SDCZ | 8), "\\Device\\Harddisk103\\Partition8"},
  {"/dev/sdcz9", BRACK(FH_SDCZ | 9), "\\Device\\Harddisk103\\Partition9"},
  {"/dev/sdcz10", BRACK(FH_SDCZ | 10), "\\Device\\Harddisk103\\Partition10"},
  {"/dev/sdcz11", BRACK(FH_SDCZ | 11), "\\Device\\Harddisk103\\Partition11"},
  {"/dev/sdcz12", BRACK(FH_SDCZ | 12), "\\Device\\Harddisk103\\Partition12"},
  {"/dev/sdcz13", BRACK(FH_SDCZ | 13), "\\Device\\Harddisk103\\Partition13"},
  {"/dev/sdcz14", BRACK(FH_SDCZ | 14), "\\Device\\Harddisk103\\Partition14"},
  {"/dev/sdcz15", BRACK(FH_SDCZ | 15), "\\Device\\Harddisk103\\Partition15"},
  {"/dev/sdda", BRACK(FH_SDDA), "\\Device\\Harddisk104\\Partition0"},
  {"/dev/sddb", BRACK(FH_SDDB), "\\Device\\Harddisk105\\Partition0"},
  {"/dev/sddc", BRACK(FH_SDDC), "\\Device\\Harddisk106\\Partition0"},
  {"/dev/sddd", BRACK(FH_SDDD), "\\Device\\Harddisk107\\Partition0"},
  {"/dev/sdde", BRACK(FH_SDDE), "\\Device\\Harddisk108\\Partition0"},
  {"/dev/sddf", BRACK(FH_SDDF), "\\Device\\Harddisk109\\Partition0"},
  {"/dev/sddg", BRACK(FH_SDDG), "\\Device\\Harddisk110\\Partition0"},
  {"/dev/sddh", BRACK(FH_SDDH), "\\Device\\Harddisk111\\Partition0"},
  {"/dev/sddi", BRACK(FH_SDDI), "\\Device\\Harddisk112\\Partition0"},
  {"/dev/sddj", BRACK(FH_SDDJ), "\\Device\\Harddisk113\\Partition0"},
  {"/dev/sddk", BRACK(FH_SDDK), "\\Device\\Harddisk114\\Partition0"},
  {"/dev/sddl", BRACK(FH_SDDL), "\\Device\\Harddisk115\\Partition0"},
  {"/dev/sddm", BRACK(FH_SDDM), "\\Device\\Harddisk116\\Partition0"},
  {"/dev/sddn", BRACK(FH_SDDN), "\\Device\\Harddisk117\\Partition0"},
  {"/dev/sddo", BRACK(FH_SDDO), "\\Device\\Harddisk118\\Partition0"},
  {"/dev/sddp", BRACK(FH_SDDP), "\\Device\\Harddisk119\\Partition0"},
  {"/dev/sddq", BRACK(FH_SDDQ), "\\Device\\Harddisk120\\Partition0"},
  {"/dev/sddr", BRACK(FH_SDDR), "\\Device\\Harddisk121\\Partition0"},
  {"/dev/sdds", BRACK(FH_SDDS), "\\Device\\Harddisk122\\Partition0"},
  {"/dev/sddt", BRACK(FH_SDDT), "\\Device\\Harddisk123\\Partition0"},
  {"/dev/sddu", BRACK(FH_SDDU), "\\Device\\Harddisk124\\Partition0"},
  {"/dev/sddv", BRACK(FH_SDDV), "\\Device\\Harddisk125\\Partition0"},
  {"/dev/sddw", BRACK(FH_SDDW), "\\Device\\Harddisk126\\Partition0"},
  {"/dev/sddx", BRACK(FH_SDDX), "\\Device\\Harddisk127\\Partition0"},
  {"/dev/sdda1", BRACK(FH_SDDA | 1), "\\Device\\Harddisk104\\Partition1"},
  {"/dev/sdda2", BRACK(FH_SDDA | 2), "\\Device\\Harddisk104\\Partition2"},
  {"/dev/sdda3", BRACK(FH_SDDA | 3), "\\Device\\Harddisk104\\Partition3"},
  {"/dev/sdda4", BRACK(FH_SDDA | 4), "\\Device\\Harddisk104\\Partition4"},
  {"/dev/sdda5", BRACK(FH_SDDA | 5), "\\Device\\Harddisk104\\Partition5"},
  {"/dev/sdda6", BRACK(FH_SDDA | 6), "\\Device\\Harddisk104\\Partition6"},
  {"/dev/sdda7", BRACK(FH_SDDA | 7), "\\Device\\Harddisk104\\Partition7"},
  {"/dev/sdda8", BRACK(FH_SDDA | 8), "\\Device\\Harddisk104\\Partition8"},
  {"/dev/sdda9", BRACK(FH_SDDA | 9), "\\Device\\Harddisk104\\Partition9"},
  {"/dev/sdda10", BRACK(FH_SDDA | 10), "\\Device\\Harddisk104\\Partition10"},
  {"/dev/sdda11", BRACK(FH_SDDA | 11), "\\Device\\Harddisk104\\Partition11"},
  {"/dev/sdda12", BRACK(FH_SDDA | 12), "\\Device\\Harddisk104\\Partition12"},
  {"/dev/sdda13", BRACK(FH_SDDA | 13), "\\Device\\Harddisk104\\Partition13"},
  {"/dev/sdda14", BRACK(FH_SDDA | 14), "\\Device\\Harddisk104\\Partition14"},
  {"/dev/sdda15", BRACK(FH_SDDA | 15), "\\Device\\Harddisk104\\Partition15"},
  {"/dev/sddb1", BRACK(FH_SDDB | 1), "\\Device\\Harddisk105\\Partition1"},
  {"/dev/sddb2", BRACK(FH_SDDB | 2), "\\Device\\Harddisk105\\Partition2"},
  {"/dev/sddb3", BRACK(FH_SDDB | 3), "\\Device\\Harddisk105\\Partition3"},
  {"/dev/sddb4", BRACK(FH_SDDB | 4), "\\Device\\Harddisk105\\Partition4"},
  {"/dev/sddb5", BRACK(FH_SDDB | 5), "\\Device\\Harddisk105\\Partition5"},
  {"/dev/sddb6", BRACK(FH_SDDB | 6), "\\Device\\Harddisk105\\Partition6"},
  {"/dev/sddb7", BRACK(FH_SDDB | 7), "\\Device\\Harddisk105\\Partition7"},
  {"/dev/sddb8", BRACK(FH_SDDB | 8), "\\Device\\Harddisk105\\Partition8"},
  {"/dev/sddb9", BRACK(FH_SDDB | 9), "\\Device\\Harddisk105\\Partition9"},
  {"/dev/sddb10", BRACK(FH_SDDB | 10), "\\Device\\Harddisk105\\Partition10"},
  {"/dev/sddb11", BRACK(FH_SDDB | 11), "\\Device\\Harddisk105\\Partition11"},
  {"/dev/sddb12", BRACK(FH_SDDB | 12), "\\Device\\Harddisk105\\Partition12"},
  {"/dev/sddb13", BRACK(FH_SDDB | 13), "\\Device\\Harddisk105\\Partition13"},
  {"/dev/sddb14", BRACK(FH_SDDB | 14), "\\Device\\Harddisk105\\Partition14"},
  {"/dev/sddb15", BRACK(FH_SDDB | 15), "\\Device\\Harddisk105\\Partition15"},
  {"/dev/sddc1", BRACK(FH_SDDC | 1), "\\Device\\Harddisk106\\Partition1"},
  {"/dev/sddc2", BRACK(FH_SDDC | 2), "\\Device\\Harddisk106\\Partition2"},
  {"/dev/sddc3", BRACK(FH_SDDC | 3), "\\Device\\Harddisk106\\Partition3"},
  {"/dev/sddc4", BRACK(FH_SDDC | 4), "\\Device\\Harddisk106\\Partition4"},
  {"/dev/sddc5", BRACK(FH_SDDC | 5), "\\Device\\Harddisk106\\Partition5"},
  {"/dev/sddc6", BRACK(FH_SDDC | 6), "\\Device\\Harddisk106\\Partition6"},
  {"/dev/sddc7", BRACK(FH_SDDC | 7), "\\Device\\Harddisk106\\Partition7"},
  {"/dev/sddc8", BRACK(FH_SDDC | 8), "\\Device\\Harddisk106\\Partition8"},
  {"/dev/sddc9", BRACK(FH_SDDC | 9), "\\Device\\Harddisk106\\Partition9"},
  {"/dev/sddc10", BRACK(FH_SDDC | 10), "\\Device\\Harddisk106\\Partition10"},
  {"/dev/sddc11", BRACK(FH_SDDC | 11), "\\Device\\Harddisk106\\Partition11"},
  {"/dev/sddc12", BRACK(FH_SDDC | 12), "\\Device\\Harddisk106\\Partition12"},
  {"/dev/sddc13", BRACK(FH_SDDC | 13), "\\Device\\Harddisk106\\Partition13"},
  {"/dev/sddc14", BRACK(FH_SDDC | 14), "\\Device\\Harddisk106\\Partition14"},
  {"/dev/sddc15", BRACK(FH_SDDC | 15), "\\Device\\Harddisk106\\Partition15"},
  {"/dev/sddd1", BRACK(FH_SDDD | 1), "\\Device\\Harddisk107\\Partition1"},
  {"/dev/sddd2", BRACK(FH_SDDD | 2), "\\Device\\Harddisk107\\Partition2"},
  {"/dev/sddd3", BRACK(FH_SDDD | 3), "\\Device\\Harddisk107\\Partition3"},
  {"/dev/sddd4", BRACK(FH_SDDD | 4), "\\Device\\Harddisk107\\Partition4"},
  {"/dev/sddd5", BRACK(FH_SDDD | 5), "\\Device\\Harddisk107\\Partition5"},
  {"/dev/sddd6", BRACK(FH_SDDD | 6), "\\Device\\Harddisk107\\Partition6"},
  {"/dev/sddd7", BRACK(FH_SDDD | 7), "\\Device\\Harddisk107\\Partition7"},
  {"/dev/sddd8", BRACK(FH_SDDD | 8), "\\Device\\Harddisk107\\Partition8"},
  {"/dev/sddd9", BRACK(FH_SDDD | 9), "\\Device\\Harddisk107\\Partition9"},
  {"/dev/sddd10", BRACK(FH_SDDD | 10), "\\Device\\Harddisk107\\Partition10"},
  {"/dev/sddd11", BRACK(FH_SDDD | 11), "\\Device\\Harddisk107\\Partition11"},
  {"/dev/sddd12", BRACK(FH_SDDD | 12), "\\Device\\Harddisk107\\Partition12"},
  {"/dev/sddd13", BRACK(FH_SDDD | 13), "\\Device\\Harddisk107\\Partition13"},
  {"/dev/sddd14", BRACK(FH_SDDD | 14), "\\Device\\Harddisk107\\Partition14"},
  {"/dev/sddd15", BRACK(FH_SDDD | 15), "\\Device\\Harddisk107\\Partition15"},
  {"/dev/sdde1", BRACK(FH_SDDE | 1), "\\Device\\Harddisk108\\Partition1"},
  {"/dev/sdde2", BRACK(FH_SDDE | 2), "\\Device\\Harddisk108\\Partition2"},
  {"/dev/sdde3", BRACK(FH_SDDE | 3), "\\Device\\Harddisk108\\Partition3"},
  {"/dev/sdde4", BRACK(FH_SDDE | 4), "\\Device\\Harddisk108\\Partition4"},
  {"/dev/sdde5", BRACK(FH_SDDE | 5), "\\Device\\Harddisk108\\Partition5"},
  {"/dev/sdde6", BRACK(FH_SDDE | 6), "\\Device\\Harddisk108\\Partition6"},
  {"/dev/sdde7", BRACK(FH_SDDE | 7), "\\Device\\Harddisk108\\Partition7"},
  {"/dev/sdde8", BRACK(FH_SDDE | 8), "\\Device\\Harddisk108\\Partition8"},
  {"/dev/sdde9", BRACK(FH_SDDE | 9), "\\Device\\Harddisk108\\Partition9"},
  {"/dev/sdde10", BRACK(FH_SDDE | 10), "\\Device\\Harddisk108\\Partition10"},
  {"/dev/sdde11", BRACK(FH_SDDE | 11), "\\Device\\Harddisk108\\Partition11"},
  {"/dev/sdde12", BRACK(FH_SDDE | 12), "\\Device\\Harddisk108\\Partition12"},
  {"/dev/sdde13", BRACK(FH_SDDE | 13), "\\Device\\Harddisk108\\Partition13"},
  {"/dev/sdde14", BRACK(FH_SDDE | 14), "\\Device\\Harddisk108\\Partition14"},
  {"/dev/sdde15", BRACK(FH_SDDE | 15), "\\Device\\Harddisk108\\Partition15"},
  {"/dev/sddf1", BRACK(FH_SDDF | 1), "\\Device\\Harddisk109\\Partition1"},
  {"/dev/sddf2", BRACK(FH_SDDF | 2), "\\Device\\Harddisk109\\Partition2"},
  {"/dev/sddf3", BRACK(FH_SDDF | 3), "\\Device\\Harddisk109\\Partition3"},
  {"/dev/sddf4", BRACK(FH_SDDF | 4), "\\Device\\Harddisk109\\Partition4"},
  {"/dev/sddf5", BRACK(FH_SDDF | 5), "\\Device\\Harddisk109\\Partition5"},
  {"/dev/sddf6", BRACK(FH_SDDF | 6), "\\Device\\Harddisk109\\Partition6"},
  {"/dev/sddf7", BRACK(FH_SDDF | 7), "\\Device\\Harddisk109\\Partition7"},
  {"/dev/sddf8", BRACK(FH_SDDF | 8), "\\Device\\Harddisk109\\Partition8"},
  {"/dev/sddf9", BRACK(FH_SDDF | 9), "\\Device\\Harddisk109\\Partition9"},
  {"/dev/sddf10", BRACK(FH_SDDF | 10), "\\Device\\Harddisk109\\Partition10"},
  {"/dev/sddf11", BRACK(FH_SDDF | 11), "\\Device\\Harddisk109\\Partition11"},
  {"/dev/sddf12", BRACK(FH_SDDF | 12), "\\Device\\Harddisk109\\Partition12"},
  {"/dev/sddf13", BRACK(FH_SDDF | 13), "\\Device\\Harddisk109\\Partition13"},
  {"/dev/sddf14", BRACK(FH_SDDF | 14), "\\Device\\Harddisk109\\Partition14"},
  {"/dev/sddf15", BRACK(FH_SDDF | 15), "\\Device\\Harddisk109\\Partition15"},
  {"/dev/sddg1", BRACK(FH_SDDG | 1), "\\Device\\Harddisk110\\Partition1"},
  {"/dev/sddg2", BRACK(FH_SDDG | 2), "\\Device\\Harddisk110\\Partition2"},
  {"/dev/sddg3", BRACK(FH_SDDG | 3), "\\Device\\Harddisk110\\Partition3"},
  {"/dev/sddg4", BRACK(FH_SDDG | 4), "\\Device\\Harddisk110\\Partition4"},
  {"/dev/sddg5", BRACK(FH_SDDG | 5), "\\Device\\Harddisk110\\Partition5"},
  {"/dev/sddg6", BRACK(FH_SDDG | 6), "\\Device\\Harddisk110\\Partition6"},
  {"/dev/sddg7", BRACK(FH_SDDG | 7), "\\Device\\Harddisk110\\Partition7"},
  {"/dev/sddg8", BRACK(FH_SDDG | 8), "\\Device\\Harddisk110\\Partition8"},
  {"/dev/sddg9", BRACK(FH_SDDG | 9), "\\Device\\Harddisk110\\Partition9"},
  {"/dev/sddg10", BRACK(FH_SDDG | 10), "\\Device\\Harddisk110\\Partition10"},
  {"/dev/sddg11", BRACK(FH_SDDG | 11), "\\Device\\Harddisk110\\Partition11"},
  {"/dev/sddg12", BRACK(FH_SDDG | 12), "\\Device\\Harddisk110\\Partition12"},
  {"/dev/sddg13", BRACK(FH_SDDG | 13), "\\Device\\Harddisk110\\Partition13"},
  {"/dev/sddg14", BRACK(FH_SDDG | 14), "\\Device\\Harddisk110\\Partition14"},
  {"/dev/sddg15", BRACK(FH_SDDG | 15), "\\Device\\Harddisk110\\Partition15"},
  {"/dev/sddh1", BRACK(FH_SDDH | 1), "\\Device\\Harddisk111\\Partition1"},
  {"/dev/sddh2", BRACK(FH_SDDH | 2), "\\Device\\Harddisk111\\Partition2"},
  {"/dev/sddh3", BRACK(FH_SDDH | 3), "\\Device\\Harddisk111\\Partition3"},
  {"/dev/sddh4", BRACK(FH_SDDH | 4), "\\Device\\Harddisk111\\Partition4"},
  {"/dev/sddh5", BRACK(FH_SDDH | 5), "\\Device\\Harddisk111\\Partition5"},
  {"/dev/sddh6", BRACK(FH_SDDH | 6), "\\Device\\Harddisk111\\Partition6"},
  {"/dev/sddh7", BRACK(FH_SDDH | 7), "\\Device\\Harddisk111\\Partition7"},
  {"/dev/sddh8", BRACK(FH_SDDH | 8), "\\Device\\Harddisk111\\Partition8"},
  {"/dev/sddh9", BRACK(FH_SDDH | 9), "\\Device\\Harddisk111\\Partition9"},
  {"/dev/sddh10", BRACK(FH_SDDH | 10), "\\Device\\Harddisk111\\Partition10"},
  {"/dev/sddh11", BRACK(FH_SDDH | 11), "\\Device\\Harddisk111\\Partition11"},
  {"/dev/sddh12", BRACK(FH_SDDH | 12), "\\Device\\Harddisk111\\Partition12"},
  {"/dev/sddh13", BRACK(FH_SDDH | 13), "\\Device\\Harddisk111\\Partition13"},
  {"/dev/sddh14", BRACK(FH_SDDH | 14), "\\Device\\Harddisk111\\Partition14"},
  {"/dev/sddh15", BRACK(FH_SDDH | 15), "\\Device\\Harddisk111\\Partition15"},
  {"/dev/sddi1", BRACK(FH_SDDI | 1), "\\Device\\Harddisk112\\Partition1"},
  {"/dev/sddi2", BRACK(FH_SDDI | 2), "\\Device\\Harddisk112\\Partition2"},
  {"/dev/sddi3", BRACK(FH_SDDI | 3), "\\Device\\Harddisk112\\Partition3"},
  {"/dev/sddi4", BRACK(FH_SDDI | 4), "\\Device\\Harddisk112\\Partition4"},
  {"/dev/sddi5", BRACK(FH_SDDI | 5), "\\Device\\Harddisk112\\Partition5"},
  {"/dev/sddi6", BRACK(FH_SDDI | 6), "\\Device\\Harddisk112\\Partition6"},
  {"/dev/sddi7", BRACK(FH_SDDI | 7), "\\Device\\Harddisk112\\Partition7"},
  {"/dev/sddi8", BRACK(FH_SDDI | 8), "\\Device\\Harddisk112\\Partition8"},
  {"/dev/sddi9", BRACK(FH_SDDI | 9), "\\Device\\Harddisk112\\Partition9"},
  {"/dev/sddi10", BRACK(FH_SDDI | 10), "\\Device\\Harddisk112\\Partition10"},
  {"/dev/sddi11", BRACK(FH_SDDI | 11), "\\Device\\Harddisk112\\Partition11"},
  {"/dev/sddi12", BRACK(FH_SDDI | 12), "\\Device\\Harddisk112\\Partition12"},
  {"/dev/sddi13", BRACK(FH_SDDI | 13), "\\Device\\Harddisk112\\Partition13"},
  {"/dev/sddi14", BRACK(FH_SDDI | 14), "\\Device\\Harddisk112\\Partition14"},
  {"/dev/sddi15", BRACK(FH_SDDI | 15), "\\Device\\Harddisk112\\Partition15"},
  {"/dev/sddj1", BRACK(FH_SDDJ | 1), "\\Device\\Harddisk113\\Partition1"},
  {"/dev/sddj2", BRACK(FH_SDDJ | 2), "\\Device\\Harddisk113\\Partition2"},
  {"/dev/sddj3", BRACK(FH_SDDJ | 3), "\\Device\\Harddisk113\\Partition3"},
  {"/dev/sddj4", BRACK(FH_SDDJ | 4), "\\Device\\Harddisk113\\Partition4"},
  {"/dev/sddj5", BRACK(FH_SDDJ | 5), "\\Device\\Harddisk113\\Partition5"},
  {"/dev/sddj6", BRACK(FH_SDDJ | 6), "\\Device\\Harddisk113\\Partition6"},
  {"/dev/sddj7", BRACK(FH_SDDJ | 7), "\\Device\\Harddisk113\\Partition7"},
  {"/dev/sddj8", BRACK(FH_SDDJ | 8), "\\Device\\Harddisk113\\Partition8"},
  {"/dev/sddj9", BRACK(FH_SDDJ | 9), "\\Device\\Harddisk113\\Partition9"},
  {"/dev/sddj10", BRACK(FH_SDDJ | 10), "\\Device\\Harddisk113\\Partition10"},
  {"/dev/sddj11", BRACK(FH_SDDJ | 11), "\\Device\\Harddisk113\\Partition11"},
  {"/dev/sddj12", BRACK(FH_SDDJ | 12), "\\Device\\Harddisk113\\Partition12"},
  {"/dev/sddj13", BRACK(FH_SDDJ | 13), "\\Device\\Harddisk113\\Partition13"},
  {"/dev/sddj14", BRACK(FH_SDDJ | 14), "\\Device\\Harddisk113\\Partition14"},
  {"/dev/sddj15", BRACK(FH_SDDJ | 15), "\\Device\\Harddisk113\\Partition15"},
  {"/dev/sddk1", BRACK(FH_SDDK | 1), "\\Device\\Harddisk114\\Partition1"},
  {"/dev/sddk2", BRACK(FH_SDDK | 2), "\\Device\\Harddisk114\\Partition2"},
  {"/dev/sddk3", BRACK(FH_SDDK | 3), "\\Device\\Harddisk114\\Partition3"},
  {"/dev/sddk4", BRACK(FH_SDDK | 4), "\\Device\\Harddisk114\\Partition4"},
  {"/dev/sddk5", BRACK(FH_SDDK | 5), "\\Device\\Harddisk114\\Partition5"},
  {"/dev/sddk6", BRACK(FH_SDDK | 6), "\\Device\\Harddisk114\\Partition6"},
  {"/dev/sddk7", BRACK(FH_SDDK | 7), "\\Device\\Harddisk114\\Partition7"},
  {"/dev/sddk8", BRACK(FH_SDDK | 8), "\\Device\\Harddisk114\\Partition8"},
  {"/dev/sddk9", BRACK(FH_SDDK | 9), "\\Device\\Harddisk114\\Partition9"},
  {"/dev/sddk10", BRACK(FH_SDDK | 10), "\\Device\\Harddisk114\\Partition10"},
  {"/dev/sddk11", BRACK(FH_SDDK | 11), "\\Device\\Harddisk114\\Partition11"},
  {"/dev/sddk12", BRACK(FH_SDDK | 12), "\\Device\\Harddisk114\\Partition12"},
  {"/dev/sddk13", BRACK(FH_SDDK | 13), "\\Device\\Harddisk114\\Partition13"},
  {"/dev/sddk14", BRACK(FH_SDDK | 14), "\\Device\\Harddisk114\\Partition14"},
  {"/dev/sddk15", BRACK(FH_SDDK | 15), "\\Device\\Harddisk114\\Partition15"},
  {"/dev/sddl1", BRACK(FH_SDDL | 1), "\\Device\\Harddisk115\\Partition1"},
  {"/dev/sddl2", BRACK(FH_SDDL | 2), "\\Device\\Harddisk115\\Partition2"},
  {"/dev/sddl3", BRACK(FH_SDDL | 3), "\\Device\\Harddisk115\\Partition3"},
  {"/dev/sddl4", BRACK(FH_SDDL | 4), "\\Device\\Harddisk115\\Partition4"},
  {"/dev/sddl5", BRACK(FH_SDDL | 5), "\\Device\\Harddisk115\\Partition5"},
  {"/dev/sddl6", BRACK(FH_SDDL | 6), "\\Device\\Harddisk115\\Partition6"},
  {"/dev/sddl7", BRACK(FH_SDDL | 7), "\\Device\\Harddisk115\\Partition7"},
  {"/dev/sddl8", BRACK(FH_SDDL | 8), "\\Device\\Harddisk115\\Partition8"},
  {"/dev/sddl9", BRACK(FH_SDDL | 9), "\\Device\\Harddisk115\\Partition9"},
  {"/dev/sddl10", BRACK(FH_SDDL | 10), "\\Device\\Harddisk115\\Partition10"},
  {"/dev/sddl11", BRACK(FH_SDDL | 11), "\\Device\\Harddisk115\\Partition11"},
  {"/dev/sddl12", BRACK(FH_SDDL | 12), "\\Device\\Harddisk115\\Partition12"},
  {"/dev/sddl13", BRACK(FH_SDDL | 13), "\\Device\\Harddisk115\\Partition13"},
  {"/dev/sddl14", BRACK(FH_SDDL | 14), "\\Device\\Harddisk115\\Partition14"},
  {"/dev/sddl15", BRACK(FH_SDDL | 15), "\\Device\\Harddisk115\\Partition15"},
  {"/dev/sddm1", BRACK(FH_SDDM | 1), "\\Device\\Harddisk116\\Partition1"},
  {"/dev/sddm2", BRACK(FH_SDDM | 2), "\\Device\\Harddisk116\\Partition2"},
  {"/dev/sddm3", BRACK(FH_SDDM | 3), "\\Device\\Harddisk116\\Partition3"},
  {"/dev/sddm4", BRACK(FH_SDDM | 4), "\\Device\\Harddisk116\\Partition4"},
  {"/dev/sddm5", BRACK(FH_SDDM | 5), "\\Device\\Harddisk116\\Partition5"},
  {"/dev/sddm6", BRACK(FH_SDDM | 6), "\\Device\\Harddisk116\\Partition6"},
  {"/dev/sddm7", BRACK(FH_SDDM | 7), "\\Device\\Harddisk116\\Partition7"},
  {"/dev/sddm8", BRACK(FH_SDDM | 8), "\\Device\\Harddisk116\\Partition8"},
  {"/dev/sddm9", BRACK(FH_SDDM | 9), "\\Device\\Harddisk116\\Partition9"},
  {"/dev/sddm10", BRACK(FH_SDDM | 10), "\\Device\\Harddisk116\\Partition10"},
  {"/dev/sddm11", BRACK(FH_SDDM | 11), "\\Device\\Harddisk116\\Partition11"},
  {"/dev/sddm12", BRACK(FH_SDDM | 12), "\\Device\\Harddisk116\\Partition12"},
  {"/dev/sddm13", BRACK(FH_SDDM | 13), "\\Device\\Harddisk116\\Partition13"},
  {"/dev/sddm14", BRACK(FH_SDDM | 14), "\\Device\\Harddisk116\\Partition14"},
  {"/dev/sddm15", BRACK(FH_SDDM | 15), "\\Device\\Harddisk116\\Partition15"},
  {"/dev/sddn1", BRACK(FH_SDDN | 1), "\\Device\\Harddisk117\\Partition1"},
  {"/dev/sddn2", BRACK(FH_SDDN | 2), "\\Device\\Harddisk117\\Partition2"},
  {"/dev/sddn3", BRACK(FH_SDDN | 3), "\\Device\\Harddisk117\\Partition3"},
  {"/dev/sddn4", BRACK(FH_SDDN | 4), "\\Device\\Harddisk117\\Partition4"},
  {"/dev/sddn5", BRACK(FH_SDDN | 5), "\\Device\\Harddisk117\\Partition5"},
  {"/dev/sddn6", BRACK(FH_SDDN | 6), "\\Device\\Harddisk117\\Partition6"},
  {"/dev/sddn7", BRACK(FH_SDDN | 7), "\\Device\\Harddisk117\\Partition7"},
  {"/dev/sddn8", BRACK(FH_SDDN | 8), "\\Device\\Harddisk117\\Partition8"},
  {"/dev/sddn9", BRACK(FH_SDDN | 9), "\\Device\\Harddisk117\\Partition9"},
  {"/dev/sddn10", BRACK(FH_SDDN | 10), "\\Device\\Harddisk117\\Partition10"},
  {"/dev/sddn11", BRACK(FH_SDDN | 11), "\\Device\\Harddisk117\\Partition11"},
  {"/dev/sddn12", BRACK(FH_SDDN | 12), "\\Device\\Harddisk117\\Partition12"},
  {"/dev/sddn13", BRACK(FH_SDDN | 13), "\\Device\\Harddisk117\\Partition13"},
  {"/dev/sddn14", BRACK(FH_SDDN | 14), "\\Device\\Harddisk117\\Partition14"},
  {"/dev/sddn15", BRACK(FH_SDDN | 15), "\\Device\\Harddisk117\\Partition15"},
  {"/dev/sddo1", BRACK(FH_SDDO | 1), "\\Device\\Harddisk118\\Partition1"},
  {"/dev/sddo2", BRACK(FH_SDDO | 2), "\\Device\\Harddisk118\\Partition2"},
  {"/dev/sddo3", BRACK(FH_SDDO | 3), "\\Device\\Harddisk118\\Partition3"},
  {"/dev/sddo4", BRACK(FH_SDDO | 4), "\\Device\\Harddisk118\\Partition4"},
  {"/dev/sddo5", BRACK(FH_SDDO | 5), "\\Device\\Harddisk118\\Partition5"},
  {"/dev/sddo6", BRACK(FH_SDDO | 6), "\\Device\\Harddisk118\\Partition6"},
  {"/dev/sddo7", BRACK(FH_SDDO | 7), "\\Device\\Harddisk118\\Partition7"},
  {"/dev/sddo8", BRACK(FH_SDDO | 8), "\\Device\\Harddisk118\\Partition8"},
  {"/dev/sddo9", BRACK(FH_SDDO | 9), "\\Device\\Harddisk118\\Partition9"},
  {"/dev/sddo10", BRACK(FH_SDDO | 10), "\\Device\\Harddisk118\\Partition10"},
  {"/dev/sddo11", BRACK(FH_SDDO | 11), "\\Device\\Harddisk118\\Partition11"},
  {"/dev/sddo12", BRACK(FH_SDDO | 12), "\\Device\\Harddisk118\\Partition12"},
  {"/dev/sddo13", BRACK(FH_SDDO | 13), "\\Device\\Harddisk118\\Partition13"},
  {"/dev/sddo14", BRACK(FH_SDDO | 14), "\\Device\\Harddisk118\\Partition14"},
  {"/dev/sddo15", BRACK(FH_SDDO | 15), "\\Device\\Harddisk118\\Partition15"},
  {"/dev/sddp1", BRACK(FH_SDDP | 1), "\\Device\\Harddisk119\\Partition1"},
  {"/dev/sddp2", BRACK(FH_SDDP | 2), "\\Device\\Harddisk119\\Partition2"},
  {"/dev/sddp3", BRACK(FH_SDDP | 3), "\\Device\\Harddisk119\\Partition3"},
  {"/dev/sddp4", BRACK(FH_SDDP | 4), "\\Device\\Harddisk119\\Partition4"},
  {"/dev/sddp5", BRACK(FH_SDDP | 5), "\\Device\\Harddisk119\\Partition5"},
  {"/dev/sddp6", BRACK(FH_SDDP | 6), "\\Device\\Harddisk119\\Partition6"},
  {"/dev/sddp7", BRACK(FH_SDDP | 7), "\\Device\\Harddisk119\\Partition7"},
  {"/dev/sddp8", BRACK(FH_SDDP | 8), "\\Device\\Harddisk119\\Partition8"},
  {"/dev/sddp9", BRACK(FH_SDDP | 9), "\\Device\\Harddisk119\\Partition9"},
  {"/dev/sddp10", BRACK(FH_SDDP | 10), "\\Device\\Harddisk119\\Partition10"},
  {"/dev/sddp11", BRACK(FH_SDDP | 11), "\\Device\\Harddisk119\\Partition11"},
  {"/dev/sddp12", BRACK(FH_SDDP | 12), "\\Device\\Harddisk119\\Partition12"},
  {"/dev/sddp13", BRACK(FH_SDDP | 13), "\\Device\\Harddisk119\\Partition13"},
  {"/dev/sddp14", BRACK(FH_SDDP | 14), "\\Device\\Harddisk119\\Partition14"},
  {"/dev/sddp15", BRACK(FH_SDDP | 15), "\\Device\\Harddisk119\\Partition15"},
  {"/dev/sddq1", BRACK(FH_SDDQ | 1), "\\Device\\Harddisk120\\Partition1"},
  {"/dev/sddq2", BRACK(FH_SDDQ | 2), "\\Device\\Harddisk120\\Partition2"},
  {"/dev/sddq3", BRACK(FH_SDDQ | 3), "\\Device\\Harddisk120\\Partition3"},
  {"/dev/sddq4", BRACK(FH_SDDQ | 4), "\\Device\\Harddisk120\\Partition4"},
  {"/dev/sddq5", BRACK(FH_SDDQ | 5), "\\Device\\Harddisk120\\Partition5"},
  {"/dev/sddq6", BRACK(FH_SDDQ | 6), "\\Device\\Harddisk120\\Partition6"},
  {"/dev/sddq7", BRACK(FH_SDDQ | 7), "\\Device\\Harddisk120\\Partition7"},
  {"/dev/sddq8", BRACK(FH_SDDQ | 8), "\\Device\\Harddisk120\\Partition8"},
  {"/dev/sddq9", BRACK(FH_SDDQ | 9), "\\Device\\Harddisk120\\Partition9"},
  {"/dev/sddq10", BRACK(FH_SDDQ | 10), "\\Device\\Harddisk120\\Partition10"},
  {"/dev/sddq11", BRACK(FH_SDDQ | 11), "\\Device\\Harddisk120\\Partition11"},
  {"/dev/sddq12", BRACK(FH_SDDQ | 12), "\\Device\\Harddisk120\\Partition12"},
  {"/dev/sddq13", BRACK(FH_SDDQ | 13), "\\Device\\Harddisk120\\Partition13"},
  {"/dev/sddq14", BRACK(FH_SDDQ | 14), "\\Device\\Harddisk120\\Partition14"},
  {"/dev/sddq15", BRACK(FH_SDDQ | 15), "\\Device\\Harddisk120\\Partition15"},
  {"/dev/sddr1", BRACK(FH_SDDR | 1), "\\Device\\Harddisk121\\Partition1"},
  {"/dev/sddr2", BRACK(FH_SDDR | 2), "\\Device\\Harddisk121\\Partition2"},
  {"/dev/sddr3", BRACK(FH_SDDR | 3), "\\Device\\Harddisk121\\Partition3"},
  {"/dev/sddr4", BRACK(FH_SDDR | 4), "\\Device\\Harddisk121\\Partition4"},
  {"/dev/sddr5", BRACK(FH_SDDR | 5), "\\Device\\Harddisk121\\Partition5"},
  {"/dev/sddr6", BRACK(FH_SDDR | 6), "\\Device\\Harddisk121\\Partition6"},
  {"/dev/sddr7", BRACK(FH_SDDR | 7), "\\Device\\Harddisk121\\Partition7"},
  {"/dev/sddr8", BRACK(FH_SDDR | 8), "\\Device\\Harddisk121\\Partition8"},
  {"/dev/sddr9", BRACK(FH_SDDR | 9), "\\Device\\Harddisk121\\Partition9"},
  {"/dev/sddr10", BRACK(FH_SDDR | 10), "\\Device\\Harddisk121\\Partition10"},
  {"/dev/sddr11", BRACK(FH_SDDR | 11), "\\Device\\Harddisk121\\Partition11"},
  {"/dev/sddr12", BRACK(FH_SDDR | 12), "\\Device\\Harddisk121\\Partition12"},
  {"/dev/sddr13", BRACK(FH_SDDR | 13), "\\Device\\Harddisk121\\Partition13"},
  {"/dev/sddr14", BRACK(FH_SDDR | 14), "\\Device\\Harddisk121\\Partition14"},
  {"/dev/sddr15", BRACK(FH_SDDR | 15), "\\Device\\Harddisk121\\Partition15"},
  {"/dev/sdds1", BRACK(FH_SDDS | 1), "\\Device\\Harddisk122\\Partition1"},
  {"/dev/sdds2", BRACK(FH_SDDS | 2), "\\Device\\Harddisk122\\Partition2"},
  {"/dev/sdds3", BRACK(FH_SDDS | 3), "\\Device\\Harddisk122\\Partition3"},
  {"/dev/sdds4", BRACK(FH_SDDS | 4), "\\Device\\Harddisk122\\Partition4"},
  {"/dev/sdds5", BRACK(FH_SDDS | 5), "\\Device\\Harddisk122\\Partition5"},
  {"/dev/sdds6", BRACK(FH_SDDS | 6), "\\Device\\Harddisk122\\Partition6"},
  {"/dev/sdds7", BRACK(FH_SDDS | 7), "\\Device\\Harddisk122\\Partition7"},
  {"/dev/sdds8", BRACK(FH_SDDS | 8), "\\Device\\Harddisk122\\Partition8"},
  {"/dev/sdds9", BRACK(FH_SDDS | 9), "\\Device\\Harddisk122\\Partition9"},
  {"/dev/sdds10", BRACK(FH_SDDS | 10), "\\Device\\Harddisk122\\Partition10"},
  {"/dev/sdds11", BRACK(FH_SDDS | 11), "\\Device\\Harddisk122\\Partition11"},
  {"/dev/sdds12", BRACK(FH_SDDS | 12), "\\Device\\Harddisk122\\Partition12"},
  {"/dev/sdds13", BRACK(FH_SDDS | 13), "\\Device\\Harddisk122\\Partition13"},
  {"/dev/sdds14", BRACK(FH_SDDS | 14), "\\Device\\Harddisk122\\Partition14"},
  {"/dev/sdds15", BRACK(FH_SDDS | 15), "\\Device\\Harddisk122\\Partition15"},
  {"/dev/sddt1", BRACK(FH_SDDT | 1), "\\Device\\Harddisk123\\Partition1"},
  {"/dev/sddt2", BRACK(FH_SDDT | 2), "\\Device\\Harddisk123\\Partition2"},
  {"/dev/sddt3", BRACK(FH_SDDT | 3), "\\Device\\Harddisk123\\Partition3"},
  {"/dev/sddt4", BRACK(FH_SDDT | 4), "\\Device\\Harddisk123\\Partition4"},
  {"/dev/sddt5", BRACK(FH_SDDT | 5), "\\Device\\Harddisk123\\Partition5"},
  {"/dev/sddt6", BRACK(FH_SDDT | 6), "\\Device\\Harddisk123\\Partition6"},
  {"/dev/sddt7", BRACK(FH_SDDT | 7), "\\Device\\Harddisk123\\Partition7"},
  {"/dev/sddt8", BRACK(FH_SDDT | 8), "\\Device\\Harddisk123\\Partition8"},
  {"/dev/sddt9", BRACK(FH_SDDT | 9), "\\Device\\Harddisk123\\Partition9"},
  {"/dev/sddt10", BRACK(FH_SDDT | 10), "\\Device\\Harddisk123\\Partition10"},
  {"/dev/sddt11", BRACK(FH_SDDT | 11), "\\Device\\Harddisk123\\Partition11"},
  {"/dev/sddt12", BRACK(FH_SDDT | 12), "\\Device\\Harddisk123\\Partition12"},
  {"/dev/sddt13", BRACK(FH_SDDT | 13), "\\Device\\Harddisk123\\Partition13"},
  {"/dev/sddt14", BRACK(FH_SDDT | 14), "\\Device\\Harddisk123\\Partition14"},
  {"/dev/sddt15", BRACK(FH_SDDT | 15), "\\Device\\Harddisk123\\Partition15"},
  {"/dev/sddu1", BRACK(FH_SDDU | 1), "\\Device\\Harddisk124\\Partition1"},
  {"/dev/sddu2", BRACK(FH_SDDU | 2), "\\Device\\Harddisk124\\Partition2"},
  {"/dev/sddu3", BRACK(FH_SDDU | 3), "\\Device\\Harddisk124\\Partition3"},
  {"/dev/sddu4", BRACK(FH_SDDU | 4), "\\Device\\Harddisk124\\Partition4"},
  {"/dev/sddu5", BRACK(FH_SDDU | 5), "\\Device\\Harddisk124\\Partition5"},
  {"/dev/sddu6", BRACK(FH_SDDU | 6), "\\Device\\Harddisk124\\Partition6"},
  {"/dev/sddu7", BRACK(FH_SDDU | 7), "\\Device\\Harddisk124\\Partition7"},
  {"/dev/sddu8", BRACK(FH_SDDU | 8), "\\Device\\Harddisk124\\Partition8"},
  {"/dev/sddu9", BRACK(FH_SDDU | 9), "\\Device\\Harddisk124\\Partition9"},
  {"/dev/sddu10", BRACK(FH_SDDU | 10), "\\Device\\Harddisk124\\Partition10"},
  {"/dev/sddu11", BRACK(FH_SDDU | 11), "\\Device\\Harddisk124\\Partition11"},
  {"/dev/sddu12", BRACK(FH_SDDU | 12), "\\Device\\Harddisk124\\Partition12"},
  {"/dev/sddu13", BRACK(FH_SDDU | 13), "\\Device\\Harddisk124\\Partition13"},
  {"/dev/sddu14", BRACK(FH_SDDU | 14), "\\Device\\Harddisk124\\Partition14"},
  {"/dev/sddu15", BRACK(FH_SDDU | 15), "\\Device\\Harddisk124\\Partition15"},
  {"/dev/sddv1", BRACK(FH_SDDV | 1), "\\Device\\Harddisk125\\Partition1"},
  {"/dev/sddv2", BRACK(FH_SDDV | 2), "\\Device\\Harddisk125\\Partition2"},
  {"/dev/sddv3", BRACK(FH_SDDV | 3), "\\Device\\Harddisk125\\Partition3"},
  {"/dev/sddv4", BRACK(FH_SDDV | 4), "\\Device\\Harddisk125\\Partition4"},
  {"/dev/sddv5", BRACK(FH_SDDV | 5), "\\Device\\Harddisk125\\Partition5"},
  {"/dev/sddv6", BRACK(FH_SDDV | 6), "\\Device\\Harddisk125\\Partition6"},
  {"/dev/sddv7", BRACK(FH_SDDV | 7), "\\Device\\Harddisk125\\Partition7"},
  {"/dev/sddv8", BRACK(FH_SDDV | 8), "\\Device\\Harddisk125\\Partition8"},
  {"/dev/sddv9", BRACK(FH_SDDV | 9), "\\Device\\Harddisk125\\Partition9"},
  {"/dev/sddv10", BRACK(FH_SDDV | 10), "\\Device\\Harddisk125\\Partition10"},
  {"/dev/sddv11", BRACK(FH_SDDV | 11), "\\Device\\Harddisk125\\Partition11"},
  {"/dev/sddv12", BRACK(FH_SDDV | 12), "\\Device\\Harddisk125\\Partition12"},
  {"/dev/sddv13", BRACK(FH_SDDV | 13), "\\Device\\Harddisk125\\Partition13"},
  {"/dev/sddv14", BRACK(FH_SDDV | 14), "\\Device\\Harddisk125\\Partition14"},
  {"/dev/sddv15", BRACK(FH_SDDV | 15), "\\Device\\Harddisk125\\Partition15"},
  {"/dev/sddw1", BRACK(FH_SDDW | 1), "\\Device\\Harddisk126\\Partition1"},
  {"/dev/sddw2", BRACK(FH_SDDW | 2), "\\Device\\Harddisk126\\Partition2"},
  {"/dev/sddw3", BRACK(FH_SDDW | 3), "\\Device\\Harddisk126\\Partition3"},
  {"/dev/sddw4", BRACK(FH_SDDW | 4), "\\Device\\Harddisk126\\Partition4"},
  {"/dev/sddw5", BRACK(FH_SDDW | 5), "\\Device\\Harddisk126\\Partition5"},
  {"/dev/sddw6", BRACK(FH_SDDW | 6), "\\Device\\Harddisk126\\Partition6"},
  {"/dev/sddw7", BRACK(FH_SDDW | 7), "\\Device\\Harddisk126\\Partition7"},
  {"/dev/sddw8", BRACK(FH_SDDW | 8), "\\Device\\Harddisk126\\Partition8"},
  {"/dev/sddw9", BRACK(FH_SDDW | 9), "\\Device\\Harddisk126\\Partition9"},
  {"/dev/sddw10", BRACK(FH_SDDW | 10), "\\Device\\Harddisk126\\Partition10"},
  {"/dev/sddw11", BRACK(FH_SDDW | 11), "\\Device\\Harddisk126\\Partition11"},
  {"/dev/sddw12", BRACK(FH_SDDW | 12), "\\Device\\Harddisk126\\Partition12"},
  {"/dev/sddw13", BRACK(FH_SDDW | 13), "\\Device\\Harddisk126\\Partition13"},
  {"/dev/sddw14", BRACK(FH_SDDW | 14), "\\Device\\Harddisk126\\Partition14"},
  {"/dev/sddw15", BRACK(FH_SDDW | 15), "\\Device\\Harddisk126\\Partition15"},
  {"/dev/sddx1", BRACK(FH_SDDX | 1), "\\Device\\Harddisk127\\Partition1"},
  {"/dev/sddx2", BRACK(FH_SDDX | 2), "\\Device\\Harddisk127\\Partition2"},
  {"/dev/sddx3", BRACK(FH_SDDX | 3), "\\Device\\Harddisk127\\Partition3"},
  {"/dev/sddx4", BRACK(FH_SDDX | 4), "\\Device\\Harddisk127\\Partition4"},
  {"/dev/sddx5", BRACK(FH_SDDX | 5), "\\Device\\Harddisk127\\Partition5"},
  {"/dev/sddx6", BRACK(FH_SDDX | 6), "\\Device\\Harddisk127\\Partition6"},
  {"/dev/sddx7", BRACK(FH_SDDX | 7), "\\Device\\Harddisk127\\Partition7"},
  {"/dev/sddx8", BRACK(FH_SDDX | 8), "\\Device\\Harddisk127\\Partition8"},
  {"/dev/sddx9", BRACK(FH_SDDX | 9), "\\Device\\Harddisk127\\Partition9"},
  {"/dev/sddx10", BRACK(FH_SDDX | 10), "\\Device\\Harddisk127\\Partition10"},
  {"/dev/sddx11", BRACK(FH_SDDX | 11), "\\Device\\Harddisk127\\Partition11"},
  {"/dev/sddx12", BRACK(FH_SDDX | 12), "\\Device\\Harddisk127\\Partition12"},
  {"/dev/sddx13", BRACK(FH_SDDX | 13), "\\Device\\Harddisk127\\Partition13"},
  {"/dev/sddx14", BRACK(FH_SDDX | 14), "\\Device\\Harddisk127\\Partition14"},
  {"/dev/sddx15", BRACK(FH_SDDX | 15), "\\Device\\Harddisk127\\Partition15"},
  {"/dev/sr0", BRACK(FHDEV(DEV_CDROM_MAJOR, 0)), "\\Device\\CdRom0"},
  {"/dev/sr1", BRACK(FHDEV(DEV_CDROM_MAJOR, 1)), "\\Device\\CdRom1"},
  {"/dev/sr2", BRACK(FHDEV(DEV_CDROM_MAJOR, 2)), "\\Device\\CdRom2"},
  {"/dev/sr3", BRACK(FHDEV(DEV_CDROM_MAJOR, 3)), "\\Device\\CdRom3"},
  {"/dev/sr4", BRACK(FHDEV(DEV_CDROM_MAJOR, 4)), "\\Device\\CdRom4"},
  {"/dev/sr5", BRACK(FHDEV(DEV_CDROM_MAJOR, 5)), "\\Device\\CdRom5"},
  {"/dev/sr6", BRACK(FHDEV(DEV_CDROM_MAJOR, 6)), "\\Device\\CdRom6"},
  {"/dev/sr7", BRACK(FHDEV(DEV_CDROM_MAJOR, 7)), "\\Device\\CdRom7"},
  {"/dev/sr8", BRACK(FHDEV(DEV_CDROM_MAJOR, 8)), "\\Device\\CdRom8"},
  {"/dev/sr9", BRACK(FHDEV(DEV_CDROM_MAJOR, 9)), "\\Device\\CdRom9"},
  {"/dev/sr10", BRACK(FHDEV(DEV_CDROM_MAJOR, 10)), "\\Device\\CdRom10"},
  {"/dev/sr11", BRACK(FHDEV(DEV_CDROM_MAJOR, 11)), "\\Device\\CdRom11"},
  {"/dev/sr12", BRACK(FHDEV(DEV_CDROM_MAJOR, 12)), "\\Device\\CdRom12"},
  {"/dev/sr13", BRACK(FHDEV(DEV_CDROM_MAJOR, 13)), "\\Device\\CdRom13"},
  {"/dev/sr14", BRACK(FHDEV(DEV_CDROM_MAJOR, 14)), "\\Device\\CdRom14"},
  {"/dev/sr15", BRACK(FHDEV(DEV_CDROM_MAJOR, 15)), "\\Device\\CdRom15"},
  {"/dev/st0", BRACK(FHDEV(DEV_TAPE_MAJOR, 0)), "\\Device\\Tape0"},
  {"/dev/st1", BRACK(FHDEV(DEV_TAPE_MAJOR, 1)), "\\Device\\Tape1"},
  {"/dev/st2", BRACK(FHDEV(DEV_TAPE_MAJOR, 2)), "\\Device\\Tape2"},
  {"/dev/st3", BRACK(FHDEV(DEV_TAPE_MAJOR, 3)), "\\Device\\Tape3"},
  {"/dev/st4", BRACK(FHDEV(DEV_TAPE_MAJOR, 4)), "\\Device\\Tape4"},
  {"/dev/st5", BRACK(FHDEV(DEV_TAPE_MAJOR, 5)), "\\Device\\Tape5"},
  {"/dev/st6", BRACK(FHDEV(DEV_TAPE_MAJOR, 6)), "\\Device\\Tape6"},
  {"/dev/st7", BRACK(FHDEV(DEV_TAPE_MAJOR, 7)), "\\Device\\Tape7"},
  {"/dev/st8", BRACK(FHDEV(DEV_TAPE_MAJOR, 8)), "\\Device\\Tape8"},
  {"/dev/st9", BRACK(FHDEV(DEV_TAPE_MAJOR, 9)), "\\Device\\Tape9"},
  {"/dev/st10", BRACK(FHDEV(DEV_TAPE_MAJOR, 10)), "\\Device\\Tape10"},
  {"/dev/st11", BRACK(FHDEV(DEV_TAPE_MAJOR, 11)), "\\Device\\Tape11"},
  {"/dev/st12", BRACK(FHDEV(DEV_TAPE_MAJOR, 12)), "\\Device\\Tape12"},
  {"/dev/st13", BRACK(FHDEV(DEV_TAPE_MAJOR, 13)), "\\Device\\Tape13"},
  {"/dev/st14", BRACK(FHDEV(DEV_TAPE_MAJOR, 14)), "\\Device\\Tape14"},
  {"/dev/st15", BRACK(FHDEV(DEV_TAPE_MAJOR, 15)), "\\Device\\Tape15"},
  {"/dev/st16", BRACK(FHDEV(DEV_TAPE_MAJOR, 16)), "\\Device\\Tape16"},
  {"/dev/st17", BRACK(FHDEV(DEV_TAPE_MAJOR, 17)), "\\Device\\Tape17"},
  {"/dev/st18", BRACK(FHDEV(DEV_TAPE_MAJOR, 18)), "\\Device\\Tape18"},
  {"/dev/st19", BRACK(FHDEV(DEV_TAPE_MAJOR, 19)), "\\Device\\Tape19"},
  {"/dev/st20", BRACK(FHDEV(DEV_TAPE_MAJOR, 20)), "\\Device\\Tape20"},
  {"/dev/st21", BRACK(FHDEV(DEV_TAPE_MAJOR, 21)), "\\Device\\Tape21"},
  {"/dev/st22", BRACK(FHDEV(DEV_TAPE_MAJOR, 22)), "\\Device\\Tape22"},
  {"/dev/st23", BRACK(FHDEV(DEV_TAPE_MAJOR, 23)), "\\Device\\Tape23"},
  {"/dev/st24", BRACK(FHDEV(DEV_TAPE_MAJOR, 24)), "\\Device\\Tape24"},
  {"/dev/st25", BRACK(FHDEV(DEV_TAPE_MAJOR, 25)), "\\Device\\Tape25"},
  {"/dev/st26", BRACK(FHDEV(DEV_TAPE_MAJOR, 26)), "\\Device\\Tape26"},
  {"/dev/st27", BRACK(FHDEV(DEV_TAPE_MAJOR, 27)), "\\Device\\Tape27"},
  {"/dev/st28", BRACK(FHDEV(DEV_TAPE_MAJOR, 28)), "\\Device\\Tape28"},
  {"/dev/st29", BRACK(FHDEV(DEV_TAPE_MAJOR, 29)), "\\Device\\Tape29"},
  {"/dev/st30", BRACK(FHDEV(DEV_TAPE_MAJOR, 30)), "\\Device\\Tape30"},
  {"/dev/st31", BRACK(FHDEV(DEV_TAPE_MAJOR, 31)), "\\Device\\Tape31"},
  {"/dev/st32", BRACK(FHDEV(DEV_TAPE_MAJOR, 32)), "\\Device\\Tape32"},
  {"/dev/st33", BRACK(FHDEV(DEV_TAPE_MAJOR, 33)), "\\Device\\Tape33"},
  {"/dev/st34", BRACK(FHDEV(DEV_TAPE_MAJOR, 34)), "\\Device\\Tape34"},
  {"/dev/st35", BRACK(FHDEV(DEV_TAPE_MAJOR, 35)), "\\Device\\Tape35"},
  {"/dev/st36", BRACK(FHDEV(DEV_TAPE_MAJOR, 36)), "\\Device\\Tape36"},
  {"/dev/st37", BRACK(FHDEV(DEV_TAPE_MAJOR, 37)), "\\Device\\Tape37"},
  {"/dev/st38", BRACK(FHDEV(DEV_TAPE_MAJOR, 38)), "\\Device\\Tape38"},
  {"/dev/st39", BRACK(FHDEV(DEV_TAPE_MAJOR, 39)), "\\Device\\Tape39"},
  {"/dev/st40", BRACK(FHDEV(DEV_TAPE_MAJOR, 40)), "\\Device\\Tape40"},
  {"/dev/st41", BRACK(FHDEV(DEV_TAPE_MAJOR, 41)), "\\Device\\Tape41"},
  {"/dev/st42", BRACK(FHDEV(DEV_TAPE_MAJOR, 42)), "\\Device\\Tape42"},
  {"/dev/st43", BRACK(FHDEV(DEV_TAPE_MAJOR, 43)), "\\Device\\Tape43"},
  {"/dev/st44", BRACK(FHDEV(DEV_TAPE_MAJOR, 44)), "\\Device\\Tape44"},
  {"/dev/st45", BRACK(FHDEV(DEV_TAPE_MAJOR, 45)), "\\Device\\Tape45"},
  {"/dev/st46", BRACK(FHDEV(DEV_TAPE_MAJOR, 46)), "\\Device\\Tape46"},
  {"/dev/st47", BRACK(FHDEV(DEV_TAPE_MAJOR, 47)), "\\Device\\Tape47"},
  {"/dev/st48", BRACK(FHDEV(DEV_TAPE_MAJOR, 48)), "\\Device\\Tape48"},
  {"/dev/st49", BRACK(FHDEV(DEV_TAPE_MAJOR, 49)), "\\Device\\Tape49"},
  {"/dev/st50", BRACK(FHDEV(DEV_TAPE_MAJOR, 50)), "\\Device\\Tape50"},
  {"/dev/st51", BRACK(FHDEV(DEV_TAPE_MAJOR, 51)), "\\Device\\Tape51"},
  {"/dev/st52", BRACK(FHDEV(DEV_TAPE_MAJOR, 52)), "\\Device\\Tape52"},
  {"/dev/st53", BRACK(FHDEV(DEV_TAPE_MAJOR, 53)), "\\Device\\Tape53"},
  {"/dev/st54", BRACK(FHDEV(DEV_TAPE_MAJOR, 54)), "\\Device\\Tape54"},
  {"/dev/st55", BRACK(FHDEV(DEV_TAPE_MAJOR, 55)), "\\Device\\Tape55"},
  {"/dev/st56", BRACK(FHDEV(DEV_TAPE_MAJOR, 56)), "\\Device\\Tape56"},
  {"/dev/st57", BRACK(FHDEV(DEV_TAPE_MAJOR, 57)), "\\Device\\Tape57"},
  {"/dev/st58", BRACK(FHDEV(DEV_TAPE_MAJOR, 58)), "\\Device\\Tape58"},
  {"/dev/st59", BRACK(FHDEV(DEV_TAPE_MAJOR, 59)), "\\Device\\Tape59"},
  {"/dev/st60", BRACK(FHDEV(DEV_TAPE_MAJOR, 60)), "\\Device\\Tape60"},
  {"/dev/st61", BRACK(FHDEV(DEV_TAPE_MAJOR, 61)), "\\Device\\Tape61"},
  {"/dev/st62", BRACK(FHDEV(DEV_TAPE_MAJOR, 62)), "\\Device\\Tape62"},
  {"/dev/st63", BRACK(FHDEV(DEV_TAPE_MAJOR, 63)), "\\Device\\Tape63"},
  {"/dev/st64", BRACK(FHDEV(DEV_TAPE_MAJOR, 64)), "\\Device\\Tape64"},
  {"/dev/st65", BRACK(FHDEV(DEV_TAPE_MAJOR, 65)), "\\Device\\Tape65"},
  {"/dev/st66", BRACK(FHDEV(DEV_TAPE_MAJOR, 66)), "\\Device\\Tape66"},
  {"/dev/st67", BRACK(FHDEV(DEV_TAPE_MAJOR, 67)), "\\Device\\Tape67"},
  {"/dev/st68", BRACK(FHDEV(DEV_TAPE_MAJOR, 68)), "\\Device\\Tape68"},
  {"/dev/st69", BRACK(FHDEV(DEV_TAPE_MAJOR, 69)), "\\Device\\Tape69"},
  {"/dev/st70", BRACK(FHDEV(DEV_TAPE_MAJOR, 70)), "\\Device\\Tape70"},
  {"/dev/st71", BRACK(FHDEV(DEV_TAPE_MAJOR, 71)), "\\Device\\Tape71"},
  {"/dev/st72", BRACK(FHDEV(DEV_TAPE_MAJOR, 72)), "\\Device\\Tape72"},
  {"/dev/st73", BRACK(FHDEV(DEV_TAPE_MAJOR, 73)), "\\Device\\Tape73"},
  {"/dev/st74", BRACK(FHDEV(DEV_TAPE_MAJOR, 74)), "\\Device\\Tape74"},
  {"/dev/st75", BRACK(FHDEV(DEV_TAPE_MAJOR, 75)), "\\Device\\Tape75"},
  {"/dev/st76", BRACK(FHDEV(DEV_TAPE_MAJOR, 76)), "\\Device\\Tape76"},
  {"/dev/st77", BRACK(FHDEV(DEV_TAPE_MAJOR, 77)), "\\Device\\Tape77"},
  {"/dev/st78", BRACK(FHDEV(DEV_TAPE_MAJOR, 78)), "\\Device\\Tape78"},
  {"/dev/st79", BRACK(FHDEV(DEV_TAPE_MAJOR, 79)), "\\Device\\Tape79"},
  {"/dev/st80", BRACK(FHDEV(DEV_TAPE_MAJOR, 80)), "\\Device\\Tape80"},
  {"/dev/st81", BRACK(FHDEV(DEV_TAPE_MAJOR, 81)), "\\Device\\Tape81"},
  {"/dev/st82", BRACK(FHDEV(DEV_TAPE_MAJOR, 82)), "\\Device\\Tape82"},
  {"/dev/st83", BRACK(FHDEV(DEV_TAPE_MAJOR, 83)), "\\Device\\Tape83"},
  {"/dev/st84", BRACK(FHDEV(DEV_TAPE_MAJOR, 84)), "\\Device\\Tape84"},
  {"/dev/st85", BRACK(FHDEV(DEV_TAPE_MAJOR, 85)), "\\Device\\Tape85"},
  {"/dev/st86", BRACK(FHDEV(DEV_TAPE_MAJOR, 86)), "\\Device\\Tape86"},
  {"/dev/st87", BRACK(FHDEV(DEV_TAPE_MAJOR, 87)), "\\Device\\Tape87"},
  {"/dev/st88", BRACK(FHDEV(DEV_TAPE_MAJOR, 88)), "\\Device\\Tape88"},
  {"/dev/st89", BRACK(FHDEV(DEV_TAPE_MAJOR, 89)), "\\Device\\Tape89"},
  {"/dev/st90", BRACK(FHDEV(DEV_TAPE_MAJOR, 90)), "\\Device\\Tape90"},
  {"/dev/st91", BRACK(FHDEV(DEV_TAPE_MAJOR, 91)), "\\Device\\Tape91"},
  {"/dev/st92", BRACK(FHDEV(DEV_TAPE_MAJOR, 92)), "\\Device\\Tape92"},
  {"/dev/st93", BRACK(FHDEV(DEV_TAPE_MAJOR, 93)), "\\Device\\Tape93"},
  {"/dev/st94", BRACK(FHDEV(DEV_TAPE_MAJOR, 94)), "\\Device\\Tape94"},
  {"/dev/st95", BRACK(FHDEV(DEV_TAPE_MAJOR, 95)), "\\Device\\Tape95"},
  {"/dev/st96", BRACK(FHDEV(DEV_TAPE_MAJOR, 96)), "\\Device\\Tape96"},
  {"/dev/st97", BRACK(FHDEV(DEV_TAPE_MAJOR, 97)), "\\Device\\Tape97"},
  {"/dev/st98", BRACK(FHDEV(DEV_TAPE_MAJOR, 98)), "\\Device\\Tape98"},
  {"/dev/st99", BRACK(FHDEV(DEV_TAPE_MAJOR, 99)), "\\Device\\Tape99"},
  {"/dev/st100", BRACK(FHDEV(DEV_TAPE_MAJOR, 100)), "\\Device\\Tape100"},
  {"/dev/st101", BRACK(FHDEV(DEV_TAPE_MAJOR, 101)), "\\Device\\Tape101"},
  {"/dev/st102", BRACK(FHDEV(DEV_TAPE_MAJOR, 102)), "\\Device\\Tape102"},
  {"/dev/st103", BRACK(FHDEV(DEV_TAPE_MAJOR, 103)), "\\Device\\Tape103"},
  {"/dev/st104", BRACK(FHDEV(DEV_TAPE_MAJOR, 104)), "\\Device\\Tape104"},
  {"/dev/st105", BRACK(FHDEV(DEV_TAPE_MAJOR, 105)), "\\Device\\Tape105"},
  {"/dev/st106", BRACK(FHDEV(DEV_TAPE_MAJOR, 106)), "\\Device\\Tape106"},
  {"/dev/st107", BRACK(FHDEV(DEV_TAPE_MAJOR, 107)), "\\Device\\Tape107"},
  {"/dev/st108", BRACK(FHDEV(DEV_TAPE_MAJOR, 108)), "\\Device\\Tape108"},
  {"/dev/st109", BRACK(FHDEV(DEV_TAPE_MAJOR, 109)), "\\Device\\Tape109"},
  {"/dev/st110", BRACK(FHDEV(DEV_TAPE_MAJOR, 110)), "\\Device\\Tape110"},
  {"/dev/st111", BRACK(FHDEV(DEV_TAPE_MAJOR, 111)), "\\Device\\Tape111"},
  {"/dev/st112", BRACK(FHDEV(DEV_TAPE_MAJOR, 112)), "\\Device\\Tape112"},
  {"/dev/st113", BRACK(FHDEV(DEV_TAPE_MAJOR, 113)), "\\Device\\Tape113"},
  {"/dev/st114", BRACK(FHDEV(DEV_TAPE_MAJOR, 114)), "\\Device\\Tape114"},
  {"/dev/st115", BRACK(FHDEV(DEV_TAPE_MAJOR, 115)), "\\Device\\Tape115"},
  {"/dev/st116", BRACK(FHDEV(DEV_TAPE_MAJOR, 116)), "\\Device\\Tape116"},
  {"/dev/st117", BRACK(FHDEV(DEV_TAPE_MAJOR, 117)), "\\Device\\Tape117"},
  {"/dev/st118", BRACK(FHDEV(DEV_TAPE_MAJOR, 118)), "\\Device\\Tape118"},
  {"/dev/st119", BRACK(FHDEV(DEV_TAPE_MAJOR, 119)), "\\Device\\Tape119"},
  {"/dev/st120", BRACK(FHDEV(DEV_TAPE_MAJOR, 120)), "\\Device\\Tape120"},
  {"/dev/st121", BRACK(FHDEV(DEV_TAPE_MAJOR, 121)), "\\Device\\Tape121"},
  {"/dev/st122", BRACK(FHDEV(DEV_TAPE_MAJOR, 122)), "\\Device\\Tape122"},
  {"/dev/st123", BRACK(FHDEV(DEV_TAPE_MAJOR, 123)), "\\Device\\Tape123"},
  {"/dev/st124", BRACK(FHDEV(DEV_TAPE_MAJOR, 124)), "\\Device\\Tape124"},
  {"/dev/st125", BRACK(FHDEV(DEV_TAPE_MAJOR, 125)), "\\Device\\Tape125"},
  {"/dev/st126", BRACK(FHDEV(DEV_TAPE_MAJOR, 126)), "\\Device\\Tape126"},
  {"/dev/st127", BRACK(FHDEV(DEV_TAPE_MAJOR, 127)), "\\Device\\Tape127"},
d2648 64
a2711 64
  {"/dev/ttyS0", BRACK(FHDEV(DEV_SERIAL_MAJOR, 0)), "\\??\\COM1"},
  {"/dev/ttyS1", BRACK(FHDEV(DEV_SERIAL_MAJOR, 1)), "\\??\\COM2"},
  {"/dev/ttyS2", BRACK(FHDEV(DEV_SERIAL_MAJOR, 2)), "\\??\\COM3"},
  {"/dev/ttyS3", BRACK(FHDEV(DEV_SERIAL_MAJOR, 3)), "\\??\\COM4"},
  {"/dev/ttyS4", BRACK(FHDEV(DEV_SERIAL_MAJOR, 4)), "\\??\\COM5"},
  {"/dev/ttyS5", BRACK(FHDEV(DEV_SERIAL_MAJOR, 5)), "\\??\\COM6"},
  {"/dev/ttyS6", BRACK(FHDEV(DEV_SERIAL_MAJOR, 6)), "\\??\\COM7"},
  {"/dev/ttyS7", BRACK(FHDEV(DEV_SERIAL_MAJOR, 7)), "\\??\\COM8"},
  {"/dev/ttyS8", BRACK(FHDEV(DEV_SERIAL_MAJOR, 8)), "\\??\\COM9"},
  {"/dev/ttyS9", BRACK(FHDEV(DEV_SERIAL_MAJOR, 9)), "\\??\\COM10"},
  {"/dev/ttyS10", BRACK(FHDEV(DEV_SERIAL_MAJOR, 10)), "\\??\\COM11"},
  {"/dev/ttyS11", BRACK(FHDEV(DEV_SERIAL_MAJOR, 11)), "\\??\\COM12"},
  {"/dev/ttyS12", BRACK(FHDEV(DEV_SERIAL_MAJOR, 12)), "\\??\\COM13"},
  {"/dev/ttyS13", BRACK(FHDEV(DEV_SERIAL_MAJOR, 13)), "\\??\\COM14"},
  {"/dev/ttyS14", BRACK(FHDEV(DEV_SERIAL_MAJOR, 14)), "\\??\\COM15"},
  {"/dev/ttyS15", BRACK(FHDEV(DEV_SERIAL_MAJOR, 15)), "\\??\\COM16"},
  {"/dev/ttyS16", BRACK(FHDEV(DEV_SERIAL_MAJOR, 16)), "\\??\\COM17"},
  {"/dev/ttyS17", BRACK(FHDEV(DEV_SERIAL_MAJOR, 17)), "\\??\\COM18"},
  {"/dev/ttyS18", BRACK(FHDEV(DEV_SERIAL_MAJOR, 18)), "\\??\\COM19"},
  {"/dev/ttyS19", BRACK(FHDEV(DEV_SERIAL_MAJOR, 19)), "\\??\\COM20"},
  {"/dev/ttyS20", BRACK(FHDEV(DEV_SERIAL_MAJOR, 20)), "\\??\\COM21"},
  {"/dev/ttyS21", BRACK(FHDEV(DEV_SERIAL_MAJOR, 21)), "\\??\\COM22"},
  {"/dev/ttyS22", BRACK(FHDEV(DEV_SERIAL_MAJOR, 22)), "\\??\\COM23"},
  {"/dev/ttyS23", BRACK(FHDEV(DEV_SERIAL_MAJOR, 23)), "\\??\\COM24"},
  {"/dev/ttyS24", BRACK(FHDEV(DEV_SERIAL_MAJOR, 24)), "\\??\\COM25"},
  {"/dev/ttyS25", BRACK(FHDEV(DEV_SERIAL_MAJOR, 25)), "\\??\\COM26"},
  {"/dev/ttyS26", BRACK(FHDEV(DEV_SERIAL_MAJOR, 26)), "\\??\\COM27"},
  {"/dev/ttyS27", BRACK(FHDEV(DEV_SERIAL_MAJOR, 27)), "\\??\\COM28"},
  {"/dev/ttyS28", BRACK(FHDEV(DEV_SERIAL_MAJOR, 28)), "\\??\\COM29"},
  {"/dev/ttyS29", BRACK(FHDEV(DEV_SERIAL_MAJOR, 29)), "\\??\\COM30"},
  {"/dev/ttyS30", BRACK(FHDEV(DEV_SERIAL_MAJOR, 30)), "\\??\\COM31"},
  {"/dev/ttyS31", BRACK(FHDEV(DEV_SERIAL_MAJOR, 31)), "\\??\\COM32"},
  {"/dev/ttyS32", BRACK(FHDEV(DEV_SERIAL_MAJOR, 32)), "\\??\\COM33"},
  {"/dev/ttyS33", BRACK(FHDEV(DEV_SERIAL_MAJOR, 33)), "\\??\\COM34"},
  {"/dev/ttyS34", BRACK(FHDEV(DEV_SERIAL_MAJOR, 34)), "\\??\\COM35"},
  {"/dev/ttyS35", BRACK(FHDEV(DEV_SERIAL_MAJOR, 35)), "\\??\\COM36"},
  {"/dev/ttyS36", BRACK(FHDEV(DEV_SERIAL_MAJOR, 36)), "\\??\\COM37"},
  {"/dev/ttyS37", BRACK(FHDEV(DEV_SERIAL_MAJOR, 37)), "\\??\\COM38"},
  {"/dev/ttyS38", BRACK(FHDEV(DEV_SERIAL_MAJOR, 38)), "\\??\\COM39"},
  {"/dev/ttyS39", BRACK(FHDEV(DEV_SERIAL_MAJOR, 39)), "\\??\\COM40"},
  {"/dev/ttyS40", BRACK(FHDEV(DEV_SERIAL_MAJOR, 40)), "\\??\\COM41"},
  {"/dev/ttyS41", BRACK(FHDEV(DEV_SERIAL_MAJOR, 41)), "\\??\\COM42"},
  {"/dev/ttyS42", BRACK(FHDEV(DEV_SERIAL_MAJOR, 42)), "\\??\\COM43"},
  {"/dev/ttyS43", BRACK(FHDEV(DEV_SERIAL_MAJOR, 43)), "\\??\\COM44"},
  {"/dev/ttyS44", BRACK(FHDEV(DEV_SERIAL_MAJOR, 44)), "\\??\\COM45"},
  {"/dev/ttyS45", BRACK(FHDEV(DEV_SERIAL_MAJOR, 45)), "\\??\\COM46"},
  {"/dev/ttyS46", BRACK(FHDEV(DEV_SERIAL_MAJOR, 46)), "\\??\\COM47"},
  {"/dev/ttyS47", BRACK(FHDEV(DEV_SERIAL_MAJOR, 47)), "\\??\\COM48"},
  {"/dev/ttyS48", BRACK(FHDEV(DEV_SERIAL_MAJOR, 48)), "\\??\\COM49"},
  {"/dev/ttyS49", BRACK(FHDEV(DEV_SERIAL_MAJOR, 49)), "\\??\\COM50"},
  {"/dev/ttyS50", BRACK(FHDEV(DEV_SERIAL_MAJOR, 50)), "\\??\\COM51"},
  {"/dev/ttyS51", BRACK(FHDEV(DEV_SERIAL_MAJOR, 51)), "\\??\\COM52"},
  {"/dev/ttyS52", BRACK(FHDEV(DEV_SERIAL_MAJOR, 52)), "\\??\\COM53"},
  {"/dev/ttyS53", BRACK(FHDEV(DEV_SERIAL_MAJOR, 53)), "\\??\\COM54"},
  {"/dev/ttyS54", BRACK(FHDEV(DEV_SERIAL_MAJOR, 54)), "\\??\\COM55"},
  {"/dev/ttyS55", BRACK(FHDEV(DEV_SERIAL_MAJOR, 55)), "\\??\\COM56"},
  {"/dev/ttyS56", BRACK(FHDEV(DEV_SERIAL_MAJOR, 56)), "\\??\\COM57"},
  {"/dev/ttyS57", BRACK(FHDEV(DEV_SERIAL_MAJOR, 57)), "\\??\\COM58"},
  {"/dev/ttyS58", BRACK(FHDEV(DEV_SERIAL_MAJOR, 58)), "\\??\\COM59"},
  {"/dev/ttyS59", BRACK(FHDEV(DEV_SERIAL_MAJOR, 59)), "\\??\\COM60"},
  {"/dev/ttyS60", BRACK(FHDEV(DEV_SERIAL_MAJOR, 60)), "\\??\\COM61"},
  {"/dev/ttyS61", BRACK(FHDEV(DEV_SERIAL_MAJOR, 61)), "\\??\\COM62"},
  {"/dev/ttyS62", BRACK(FHDEV(DEV_SERIAL_MAJOR, 62)), "\\??\\COM63"},
  {"/dev/ttyS63", BRACK(FHDEV(DEV_SERIAL_MAJOR, 63)), "\\??\\COM64"},
d46625 68
@


1.41
log
@	* Makefile.in (DLL_OFILES): Add fhandler_dev.o.
	* devices.h (DEV_DEV_MAJOR): Define.
	(FH_DEV): Redefine in terms of DEV_DEV_MAJOR.
	(ext_dev_storage): Declare.
	(dev_storage_size): Declare.
	(dev_dev_storage): Declare.
	(dev_dev): Define.
	(isdev_dev): Define.
	* devices.in (dev_dev_storage): Activate.
	(ext_dev_storage): Define as externally available pointer to
	dev_storage.
	(dev_storage_size): Define to contain number of dev_storage elements.
	* dir.cc (rmdir): Handle /dev as always not empty.
	* dtable.cc (fh_alloc): Handle DEV_DEV_MAJOR.
	* fhandler.h (fhandler_dev): New class, derived from fhandler_disk_file.
	(fhandler_union): Add fhandler_dev member.
	* fhandler_disk_file.cc (class __DIR_mounts): Handle /dev directory
	to make sure it always exists.
	* fhandler_dev.cc: New file implementing /dev.
	* globals.cc (ro_u_dev): New R/O unicode string.
	* path.cc (path_conv::check): Handle FH_DEV device.
@
text
@d67 1
a67 1
static const device dev_storage[] =
d71 16
a86 16
  {"/dev/com1", BRACK(FHDEV(DEV_SERIAL_MAJOR, 0)), "\\??\\COM1"},
  {"/dev/com2", BRACK(FHDEV(DEV_SERIAL_MAJOR, 1)), "\\??\\COM2"},
  {"/dev/com3", BRACK(FHDEV(DEV_SERIAL_MAJOR, 2)), "\\??\\COM3"},
  {"/dev/com4", BRACK(FHDEV(DEV_SERIAL_MAJOR, 3)), "\\??\\COM4"},
  {"/dev/com5", BRACK(FHDEV(DEV_SERIAL_MAJOR, 4)), "\\??\\COM5"},
  {"/dev/com6", BRACK(FHDEV(DEV_SERIAL_MAJOR, 5)), "\\??\\COM6"},
  {"/dev/com7", BRACK(FHDEV(DEV_SERIAL_MAJOR, 6)), "\\??\\COM7"},
  {"/dev/com8", BRACK(FHDEV(DEV_SERIAL_MAJOR, 7)), "\\??\\COM8"},
  {"/dev/com9", BRACK(FHDEV(DEV_SERIAL_MAJOR, 8)), "\\??\\COM9"},
  {"/dev/com10", BRACK(FHDEV(DEV_SERIAL_MAJOR, 9)), "\\??\\COM10"},
  {"/dev/com11", BRACK(FHDEV(DEV_SERIAL_MAJOR, 10)), "\\??\\COM11"},
  {"/dev/com12", BRACK(FHDEV(DEV_SERIAL_MAJOR, 11)), "\\??\\COM12"},
  {"/dev/com13", BRACK(FHDEV(DEV_SERIAL_MAJOR, 12)), "\\??\\COM13"},
  {"/dev/com14", BRACK(FHDEV(DEV_SERIAL_MAJOR, 13)), "\\??\\COM14"},
  {"/dev/com15", BRACK(FHDEV(DEV_SERIAL_MAJOR, 14)), "\\??\\COM15"},
  {"/dev/com16", BRACK(FHDEV(DEV_SERIAL_MAJOR, 15)), "\\??\\COM16"},
d171 1
a171 1
  {"/dev/fifo", BRACK(FH_FIFO), "/dev/fifo"},
d305 1
a305 1
  {"/dev/pipe", BRACK(FH_PIPE), "/dev/pipe"},
d372 64
a435 64
  {"/dev/ptym0", BRACK(FHDEV(DEV_PTYM_MAJOR, 0)), "/dev/ptym0"},
  {"/dev/ptym1", BRACK(FHDEV(DEV_PTYM_MAJOR, 1)), "/dev/ptym1"},
  {"/dev/ptym2", BRACK(FHDEV(DEV_PTYM_MAJOR, 2)), "/dev/ptym2"},
  {"/dev/ptym3", BRACK(FHDEV(DEV_PTYM_MAJOR, 3)), "/dev/ptym3"},
  {"/dev/ptym4", BRACK(FHDEV(DEV_PTYM_MAJOR, 4)), "/dev/ptym4"},
  {"/dev/ptym5", BRACK(FHDEV(DEV_PTYM_MAJOR, 5)), "/dev/ptym5"},
  {"/dev/ptym6", BRACK(FHDEV(DEV_PTYM_MAJOR, 6)), "/dev/ptym6"},
  {"/dev/ptym7", BRACK(FHDEV(DEV_PTYM_MAJOR, 7)), "/dev/ptym7"},
  {"/dev/ptym8", BRACK(FHDEV(DEV_PTYM_MAJOR, 8)), "/dev/ptym8"},
  {"/dev/ptym9", BRACK(FHDEV(DEV_PTYM_MAJOR, 9)), "/dev/ptym9"},
  {"/dev/ptym10", BRACK(FHDEV(DEV_PTYM_MAJOR, 10)), "/dev/ptym10"},
  {"/dev/ptym11", BRACK(FHDEV(DEV_PTYM_MAJOR, 11)), "/dev/ptym11"},
  {"/dev/ptym12", BRACK(FHDEV(DEV_PTYM_MAJOR, 12)), "/dev/ptym12"},
  {"/dev/ptym13", BRACK(FHDEV(DEV_PTYM_MAJOR, 13)), "/dev/ptym13"},
  {"/dev/ptym14", BRACK(FHDEV(DEV_PTYM_MAJOR, 14)), "/dev/ptym14"},
  {"/dev/ptym15", BRACK(FHDEV(DEV_PTYM_MAJOR, 15)), "/dev/ptym15"},
  {"/dev/ptym16", BRACK(FHDEV(DEV_PTYM_MAJOR, 16)), "/dev/ptym16"},
  {"/dev/ptym17", BRACK(FHDEV(DEV_PTYM_MAJOR, 17)), "/dev/ptym17"},
  {"/dev/ptym18", BRACK(FHDEV(DEV_PTYM_MAJOR, 18)), "/dev/ptym18"},
  {"/dev/ptym19", BRACK(FHDEV(DEV_PTYM_MAJOR, 19)), "/dev/ptym19"},
  {"/dev/ptym20", BRACK(FHDEV(DEV_PTYM_MAJOR, 20)), "/dev/ptym20"},
  {"/dev/ptym21", BRACK(FHDEV(DEV_PTYM_MAJOR, 21)), "/dev/ptym21"},
  {"/dev/ptym22", BRACK(FHDEV(DEV_PTYM_MAJOR, 22)), "/dev/ptym22"},
  {"/dev/ptym23", BRACK(FHDEV(DEV_PTYM_MAJOR, 23)), "/dev/ptym23"},
  {"/dev/ptym24", BRACK(FHDEV(DEV_PTYM_MAJOR, 24)), "/dev/ptym24"},
  {"/dev/ptym25", BRACK(FHDEV(DEV_PTYM_MAJOR, 25)), "/dev/ptym25"},
  {"/dev/ptym26", BRACK(FHDEV(DEV_PTYM_MAJOR, 26)), "/dev/ptym26"},
  {"/dev/ptym27", BRACK(FHDEV(DEV_PTYM_MAJOR, 27)), "/dev/ptym27"},
  {"/dev/ptym28", BRACK(FHDEV(DEV_PTYM_MAJOR, 28)), "/dev/ptym28"},
  {"/dev/ptym29", BRACK(FHDEV(DEV_PTYM_MAJOR, 29)), "/dev/ptym29"},
  {"/dev/ptym30", BRACK(FHDEV(DEV_PTYM_MAJOR, 30)), "/dev/ptym30"},
  {"/dev/ptym31", BRACK(FHDEV(DEV_PTYM_MAJOR, 31)), "/dev/ptym31"},
  {"/dev/ptym32", BRACK(FHDEV(DEV_PTYM_MAJOR, 32)), "/dev/ptym32"},
  {"/dev/ptym33", BRACK(FHDEV(DEV_PTYM_MAJOR, 33)), "/dev/ptym33"},
  {"/dev/ptym34", BRACK(FHDEV(DEV_PTYM_MAJOR, 34)), "/dev/ptym34"},
  {"/dev/ptym35", BRACK(FHDEV(DEV_PTYM_MAJOR, 35)), "/dev/ptym35"},
  {"/dev/ptym36", BRACK(FHDEV(DEV_PTYM_MAJOR, 36)), "/dev/ptym36"},
  {"/dev/ptym37", BRACK(FHDEV(DEV_PTYM_MAJOR, 37)), "/dev/ptym37"},
  {"/dev/ptym38", BRACK(FHDEV(DEV_PTYM_MAJOR, 38)), "/dev/ptym38"},
  {"/dev/ptym39", BRACK(FHDEV(DEV_PTYM_MAJOR, 39)), "/dev/ptym39"},
  {"/dev/ptym40", BRACK(FHDEV(DEV_PTYM_MAJOR, 40)), "/dev/ptym40"},
  {"/dev/ptym41", BRACK(FHDEV(DEV_PTYM_MAJOR, 41)), "/dev/ptym41"},
  {"/dev/ptym42", BRACK(FHDEV(DEV_PTYM_MAJOR, 42)), "/dev/ptym42"},
  {"/dev/ptym43", BRACK(FHDEV(DEV_PTYM_MAJOR, 43)), "/dev/ptym43"},
  {"/dev/ptym44", BRACK(FHDEV(DEV_PTYM_MAJOR, 44)), "/dev/ptym44"},
  {"/dev/ptym45", BRACK(FHDEV(DEV_PTYM_MAJOR, 45)), "/dev/ptym45"},
  {"/dev/ptym46", BRACK(FHDEV(DEV_PTYM_MAJOR, 46)), "/dev/ptym46"},
  {"/dev/ptym47", BRACK(FHDEV(DEV_PTYM_MAJOR, 47)), "/dev/ptym47"},
  {"/dev/ptym48", BRACK(FHDEV(DEV_PTYM_MAJOR, 48)), "/dev/ptym48"},
  {"/dev/ptym49", BRACK(FHDEV(DEV_PTYM_MAJOR, 49)), "/dev/ptym49"},
  {"/dev/ptym50", BRACK(FHDEV(DEV_PTYM_MAJOR, 50)), "/dev/ptym50"},
  {"/dev/ptym51", BRACK(FHDEV(DEV_PTYM_MAJOR, 51)), "/dev/ptym51"},
  {"/dev/ptym52", BRACK(FHDEV(DEV_PTYM_MAJOR, 52)), "/dev/ptym52"},
  {"/dev/ptym53", BRACK(FHDEV(DEV_PTYM_MAJOR, 53)), "/dev/ptym53"},
  {"/dev/ptym54", BRACK(FHDEV(DEV_PTYM_MAJOR, 54)), "/dev/ptym54"},
  {"/dev/ptym55", BRACK(FHDEV(DEV_PTYM_MAJOR, 55)), "/dev/ptym55"},
  {"/dev/ptym56", BRACK(FHDEV(DEV_PTYM_MAJOR, 56)), "/dev/ptym56"},
  {"/dev/ptym57", BRACK(FHDEV(DEV_PTYM_MAJOR, 57)), "/dev/ptym57"},
  {"/dev/ptym58", BRACK(FHDEV(DEV_PTYM_MAJOR, 58)), "/dev/ptym58"},
  {"/dev/ptym59", BRACK(FHDEV(DEV_PTYM_MAJOR, 59)), "/dev/ptym59"},
  {"/dev/ptym60", BRACK(FHDEV(DEV_PTYM_MAJOR, 60)), "/dev/ptym60"},
  {"/dev/ptym61", BRACK(FHDEV(DEV_PTYM_MAJOR, 61)), "/dev/ptym61"},
  {"/dev/ptym62", BRACK(FHDEV(DEV_PTYM_MAJOR, 62)), "/dev/ptym62"},
  {"/dev/ptym63", BRACK(FHDEV(DEV_PTYM_MAJOR, 63)), "/dev/ptym63"},
d46533 1
a46533 2
const device *ext_dev_storage = dev_storage;
const size_t dev_storage_size = sizeof dev_storage / sizeof dev_storage[0];
@


1.40
log
@Throughout change TTY_* to PTY_*, tty_* to pty_*, and ttym_* to ptmx_*.
* devices.cc: Regenerate.
* dtable.cc: (fh_alloc): Preserve /dev/tty name when that's what we opened.
(build_fh_pc): Preserve any existing name.
* fhandler.cc (fhandler_base::open_with_arch): Ditto.
* fhandler_tty.cc (fhandler_pty_master::fhandler_pty_master): Force the name to
/dev/ptmx while preserving other pty master device information.
* path.h (cfree_maybe): New macro.
(path_conv::operator =): Free any allocated strings in target.
(path_conv::free_strings): Delete unused function.
* sigproc.cc (proc_terminate): Remove previous accommodation for execed
processes since it didn't have the desired effect.  Change comment to a FIXME.
* spawn.cc (chExeced): Mark NO_COPY.
(exe_suffixes): Ditto.
@
text
@a35 1
#if 0
a37 1
#endif
d46532 4
@


1.39
log
@* cygerrno.h (__set_errno): Modify debugging output to make searching strace
logs easier.  Throughout, change /dev/tty* to /dev/pty*.  Throughout, add flags
argument to fhandler_*::dup methods.
* devices.in: Rename (temporarily?) /dev/ttyN to /dev/ptyN.  Add /dev/ptymN
devices for pty masters.
* devices.cc: Regenerate.
* devices.h (MAX_CONSOLES): Set to max number supported by devices.in.
(fh_devices::FH_PTMX): Rename from FH_PTYM.
(device::operator int): Return by reference.
* dtable.cc (fh_alloc): Take pc as an argument rather than just the device.
This makes debugging easier since more information is available.  Actually
implement handling for already-allocated pty master devices.  Make different
decisions when generating fhandler for not-opened devices.  Add kludge to deal
with opening /dev/tty.
(cnew_no_ctor): New macro.
(build_fh_pc): Make debugging output more verbose.  Use new clone() fhandler
interface to duplicate archetypes.  Reset last term opened.
(dtable::dup_worker): Use Use new clone() fhandler interface to duplicate
archetypes.  Pass flags to child dup handler.
(dtable::dup3): Set O_NOCTTY flag if newfd is not stdin/stdout/stderr.
* fhandler.cc (fhandler_base::reset): Rename from operator =() and reduce
functionality and sense of copy direction.
(fhandler_base::open_with_arch): Use published interface to query io_handle().
Use new copyto() fhandler method to copy from/to found archetype.
* fhandler.h: Throughout, delete size(), add copyout, clone, and fhandler_*
(void *) methods.
(fhandler_base::reset): Rename from operator =().
(fhandler_termios::is_dev_tty): Delete.
(fhandler_termios): change "protected" region to "private".
(fhandler_termios::is_dev_tty): Delete.
(fhandler_termios): Rearrange protected/public.
(fhandler_termios::fhandler_termios): Remember last fhandler_termios "opened".
(fhandler_termios::~fhandler_termios): Forget last fhandler_termios opened.
(ioctl): Rename from ioctl_termios.  Take a void * argument.  Reflect argument
change in pinfo::set_ctty.
(fhandler_console::dup): Declare new function.  Set ctty here if appropriate.
(fhandler_pty_master::from_master): Privatize.
(fhandler_pty_master::to_master): Ditto.
(fhandler_pty_master::dwProcessId): Ditto.
(fhandler_pty_master::fhandler_pty_master): Add an `int' argument.
(fhandler_pty_master::open_setup): Declare new function.
(fhandler_pty_master::~fhandler_pty_master): Declare new method.
(fhandler_nodevice): Remove commented out function declaration.
* fhandler_console.cc: Use get_ttyp() instead of tc() throughout.
(fhandler_console::dup): Define new function to set controlling ctty on dup, as
appropriate.
(fhandler_console::ioctl): Reflect ioctl_termios name change.
(fhandler_console::setup): Rename from get_tty_stuff.
(fhandler_console::open_setup): Reflect argument change in pinfo::set_ctty.
(fhandler_console::fhandler_console): Set _tc here.
* fhandler_termios.cc (handler_termios::ioctl): Rename.  Take a void * arg like
other ioctl functions.
* fhandler_tty.cc (fhandler_pty_slave::dup): Call myself->set_ctty to
potentially reset the controlling terminal.
(fhandler_pty_slave::ioctl): Reflect name/arg change for ioctl_termios.
(fhandler_pty_slave::fhandler_pty_slave): Take a "unit" argument.  Call setup()
here so that we will know the unit number of this fhandler as soon as possible.
Set the unit as appropriate.
(handler_pty_master::open): Move most stuff to constructor and open_setup.
(handler_pty_slave::open_setup): Reflect argument change in pinfo::set_ctty.
(handler_pty_master::open_setup): Define new function.
(fhandler_pty_master::cleanup): Clear handles as a flag that the destructor
does not have to do "close" operations.
(fhandler_pty_master::close): Ditto.
(fhandler_pty_master::~fhandler_pty_master): Define new method.
(fhandler_pty_master::ioctl): Reflect name/arg change for ioctl_termios.
(fhandler_pty_master::setup): Allocate tty here.  Rely on handles being
returned from allocated test rather than opening them here.  Avoid setting
_need_nl here since it is already zeroed in the constructor.  Set up device
information with DEV_TTYM_MAJOR.
* path.h (path_conv &operator =): Take a const argument.
(path_conv::dup): Ditto.
(pathconv_arg::PC_OPEN): New enum.
(pathconv_arg::PC_CTTY): Ditto.
(path_types::PATH_CTTY): Ditto.
(path_types::PATH_OPEN): Ditto.
(path_conv::isopen): New method.
(path_conv::isctty_capable): Ditto.
* path.cc (path_conv::check): Set PATH_OPEN and PATH_CTTY as appropriate.
* pipe.cc (fhandler_pipe::open): Use copyto to copy pipe handle.
* syscall.cc (open): Reinstate fd > 2 check to disallow resetting ctty on
non-std* handles.
* tty.cc (tty_list::allocate): Pass out handles for allocated tty.  use
`not_allocated' to find unallocated ttys.  Avoid keeping the lock since the
allocation of the tty should be sufficient to prevent multiple access.
(tty::not_allocated): Clarify comment.  Rename.  Return handles when an unused
tty is found.  Simply test for existing tty.
(tty::exists): Rewrite to use `not_allocated'.
* tty.h (NTTYS): Reset down to actual number supported by devices.in.
(tty::not_allocated): Declare new function.
(tty_list::allocate): Pass out read/write tty handles.  Zero them when not
found.
* fhandler_proc.cc: Reflect name change from FH_PTYM -> FH_PTMX.
* pinfo.h (pinfo::set_ctty): Reduce/reorder arguments passed in.
* pinfo.cc (pinfo::set_ctty): Ditto.  Just use tc() built into the passed-in
fhandler_termios pointer.  Return true if ctty is assigned.
* syscalls.cc (open): Call build_fh_pc with PC_OPEN flag.  Set PC_CTTY if
appropriate.
(stat_worker): Remove is_dev_tty () stuff.
@
text
@d310 128
a437 128
  {"/dev/pty0", BRACK(FHDEV(DEV_TTYS_MAJOR, 0)), "/dev/pty0"},
  {"/dev/pty1", BRACK(FHDEV(DEV_TTYS_MAJOR, 1)), "/dev/pty1"},
  {"/dev/pty2", BRACK(FHDEV(DEV_TTYS_MAJOR, 2)), "/dev/pty2"},
  {"/dev/pty3", BRACK(FHDEV(DEV_TTYS_MAJOR, 3)), "/dev/pty3"},
  {"/dev/pty4", BRACK(FHDEV(DEV_TTYS_MAJOR, 4)), "/dev/pty4"},
  {"/dev/pty5", BRACK(FHDEV(DEV_TTYS_MAJOR, 5)), "/dev/pty5"},
  {"/dev/pty6", BRACK(FHDEV(DEV_TTYS_MAJOR, 6)), "/dev/pty6"},
  {"/dev/pty7", BRACK(FHDEV(DEV_TTYS_MAJOR, 7)), "/dev/pty7"},
  {"/dev/pty8", BRACK(FHDEV(DEV_TTYS_MAJOR, 8)), "/dev/pty8"},
  {"/dev/pty9", BRACK(FHDEV(DEV_TTYS_MAJOR, 9)), "/dev/pty9"},
  {"/dev/pty10", BRACK(FHDEV(DEV_TTYS_MAJOR, 10)), "/dev/pty10"},
  {"/dev/pty11", BRACK(FHDEV(DEV_TTYS_MAJOR, 11)), "/dev/pty11"},
  {"/dev/pty12", BRACK(FHDEV(DEV_TTYS_MAJOR, 12)), "/dev/pty12"},
  {"/dev/pty13", BRACK(FHDEV(DEV_TTYS_MAJOR, 13)), "/dev/pty13"},
  {"/dev/pty14", BRACK(FHDEV(DEV_TTYS_MAJOR, 14)), "/dev/pty14"},
  {"/dev/pty15", BRACK(FHDEV(DEV_TTYS_MAJOR, 15)), "/dev/pty15"},
  {"/dev/pty16", BRACK(FHDEV(DEV_TTYS_MAJOR, 16)), "/dev/pty16"},
  {"/dev/pty17", BRACK(FHDEV(DEV_TTYS_MAJOR, 17)), "/dev/pty17"},
  {"/dev/pty18", BRACK(FHDEV(DEV_TTYS_MAJOR, 18)), "/dev/pty18"},
  {"/dev/pty19", BRACK(FHDEV(DEV_TTYS_MAJOR, 19)), "/dev/pty19"},
  {"/dev/pty20", BRACK(FHDEV(DEV_TTYS_MAJOR, 20)), "/dev/pty20"},
  {"/dev/pty21", BRACK(FHDEV(DEV_TTYS_MAJOR, 21)), "/dev/pty21"},
  {"/dev/pty22", BRACK(FHDEV(DEV_TTYS_MAJOR, 22)), "/dev/pty22"},
  {"/dev/pty23", BRACK(FHDEV(DEV_TTYS_MAJOR, 23)), "/dev/pty23"},
  {"/dev/pty24", BRACK(FHDEV(DEV_TTYS_MAJOR, 24)), "/dev/pty24"},
  {"/dev/pty25", BRACK(FHDEV(DEV_TTYS_MAJOR, 25)), "/dev/pty25"},
  {"/dev/pty26", BRACK(FHDEV(DEV_TTYS_MAJOR, 26)), "/dev/pty26"},
  {"/dev/pty27", BRACK(FHDEV(DEV_TTYS_MAJOR, 27)), "/dev/pty27"},
  {"/dev/pty28", BRACK(FHDEV(DEV_TTYS_MAJOR, 28)), "/dev/pty28"},
  {"/dev/pty29", BRACK(FHDEV(DEV_TTYS_MAJOR, 29)), "/dev/pty29"},
  {"/dev/pty30", BRACK(FHDEV(DEV_TTYS_MAJOR, 30)), "/dev/pty30"},
  {"/dev/pty31", BRACK(FHDEV(DEV_TTYS_MAJOR, 31)), "/dev/pty31"},
  {"/dev/pty32", BRACK(FHDEV(DEV_TTYS_MAJOR, 32)), "/dev/pty32"},
  {"/dev/pty33", BRACK(FHDEV(DEV_TTYS_MAJOR, 33)), "/dev/pty33"},
  {"/dev/pty34", BRACK(FHDEV(DEV_TTYS_MAJOR, 34)), "/dev/pty34"},
  {"/dev/pty35", BRACK(FHDEV(DEV_TTYS_MAJOR, 35)), "/dev/pty35"},
  {"/dev/pty36", BRACK(FHDEV(DEV_TTYS_MAJOR, 36)), "/dev/pty36"},
  {"/dev/pty37", BRACK(FHDEV(DEV_TTYS_MAJOR, 37)), "/dev/pty37"},
  {"/dev/pty38", BRACK(FHDEV(DEV_TTYS_MAJOR, 38)), "/dev/pty38"},
  {"/dev/pty39", BRACK(FHDEV(DEV_TTYS_MAJOR, 39)), "/dev/pty39"},
  {"/dev/pty40", BRACK(FHDEV(DEV_TTYS_MAJOR, 40)), "/dev/pty40"},
  {"/dev/pty41", BRACK(FHDEV(DEV_TTYS_MAJOR, 41)), "/dev/pty41"},
  {"/dev/pty42", BRACK(FHDEV(DEV_TTYS_MAJOR, 42)), "/dev/pty42"},
  {"/dev/pty43", BRACK(FHDEV(DEV_TTYS_MAJOR, 43)), "/dev/pty43"},
  {"/dev/pty44", BRACK(FHDEV(DEV_TTYS_MAJOR, 44)), "/dev/pty44"},
  {"/dev/pty45", BRACK(FHDEV(DEV_TTYS_MAJOR, 45)), "/dev/pty45"},
  {"/dev/pty46", BRACK(FHDEV(DEV_TTYS_MAJOR, 46)), "/dev/pty46"},
  {"/dev/pty47", BRACK(FHDEV(DEV_TTYS_MAJOR, 47)), "/dev/pty47"},
  {"/dev/pty48", BRACK(FHDEV(DEV_TTYS_MAJOR, 48)), "/dev/pty48"},
  {"/dev/pty49", BRACK(FHDEV(DEV_TTYS_MAJOR, 49)), "/dev/pty49"},
  {"/dev/pty50", BRACK(FHDEV(DEV_TTYS_MAJOR, 50)), "/dev/pty50"},
  {"/dev/pty51", BRACK(FHDEV(DEV_TTYS_MAJOR, 51)), "/dev/pty51"},
  {"/dev/pty52", BRACK(FHDEV(DEV_TTYS_MAJOR, 52)), "/dev/pty52"},
  {"/dev/pty53", BRACK(FHDEV(DEV_TTYS_MAJOR, 53)), "/dev/pty53"},
  {"/dev/pty54", BRACK(FHDEV(DEV_TTYS_MAJOR, 54)), "/dev/pty54"},
  {"/dev/pty55", BRACK(FHDEV(DEV_TTYS_MAJOR, 55)), "/dev/pty55"},
  {"/dev/pty56", BRACK(FHDEV(DEV_TTYS_MAJOR, 56)), "/dev/pty56"},
  {"/dev/pty57", BRACK(FHDEV(DEV_TTYS_MAJOR, 57)), "/dev/pty57"},
  {"/dev/pty58", BRACK(FHDEV(DEV_TTYS_MAJOR, 58)), "/dev/pty58"},
  {"/dev/pty59", BRACK(FHDEV(DEV_TTYS_MAJOR, 59)), "/dev/pty59"},
  {"/dev/pty60", BRACK(FHDEV(DEV_TTYS_MAJOR, 60)), "/dev/pty60"},
  {"/dev/pty61", BRACK(FHDEV(DEV_TTYS_MAJOR, 61)), "/dev/pty61"},
  {"/dev/pty62", BRACK(FHDEV(DEV_TTYS_MAJOR, 62)), "/dev/pty62"},
  {"/dev/pty63", BRACK(FHDEV(DEV_TTYS_MAJOR, 63)), "/dev/pty63"},
  {"/dev/ptym0", BRACK(FHDEV(DEV_TTYM_MAJOR, 0)), "/dev/ptym0"},
  {"/dev/ptym1", BRACK(FHDEV(DEV_TTYM_MAJOR, 1)), "/dev/ptym1"},
  {"/dev/ptym2", BRACK(FHDEV(DEV_TTYM_MAJOR, 2)), "/dev/ptym2"},
  {"/dev/ptym3", BRACK(FHDEV(DEV_TTYM_MAJOR, 3)), "/dev/ptym3"},
  {"/dev/ptym4", BRACK(FHDEV(DEV_TTYM_MAJOR, 4)), "/dev/ptym4"},
  {"/dev/ptym5", BRACK(FHDEV(DEV_TTYM_MAJOR, 5)), "/dev/ptym5"},
  {"/dev/ptym6", BRACK(FHDEV(DEV_TTYM_MAJOR, 6)), "/dev/ptym6"},
  {"/dev/ptym7", BRACK(FHDEV(DEV_TTYM_MAJOR, 7)), "/dev/ptym7"},
  {"/dev/ptym8", BRACK(FHDEV(DEV_TTYM_MAJOR, 8)), "/dev/ptym8"},
  {"/dev/ptym9", BRACK(FHDEV(DEV_TTYM_MAJOR, 9)), "/dev/ptym9"},
  {"/dev/ptym10", BRACK(FHDEV(DEV_TTYM_MAJOR, 10)), "/dev/ptym10"},
  {"/dev/ptym11", BRACK(FHDEV(DEV_TTYM_MAJOR, 11)), "/dev/ptym11"},
  {"/dev/ptym12", BRACK(FHDEV(DEV_TTYM_MAJOR, 12)), "/dev/ptym12"},
  {"/dev/ptym13", BRACK(FHDEV(DEV_TTYM_MAJOR, 13)), "/dev/ptym13"},
  {"/dev/ptym14", BRACK(FHDEV(DEV_TTYM_MAJOR, 14)), "/dev/ptym14"},
  {"/dev/ptym15", BRACK(FHDEV(DEV_TTYM_MAJOR, 15)), "/dev/ptym15"},
  {"/dev/ptym16", BRACK(FHDEV(DEV_TTYM_MAJOR, 16)), "/dev/ptym16"},
  {"/dev/ptym17", BRACK(FHDEV(DEV_TTYM_MAJOR, 17)), "/dev/ptym17"},
  {"/dev/ptym18", BRACK(FHDEV(DEV_TTYM_MAJOR, 18)), "/dev/ptym18"},
  {"/dev/ptym19", BRACK(FHDEV(DEV_TTYM_MAJOR, 19)), "/dev/ptym19"},
  {"/dev/ptym20", BRACK(FHDEV(DEV_TTYM_MAJOR, 20)), "/dev/ptym20"},
  {"/dev/ptym21", BRACK(FHDEV(DEV_TTYM_MAJOR, 21)), "/dev/ptym21"},
  {"/dev/ptym22", BRACK(FHDEV(DEV_TTYM_MAJOR, 22)), "/dev/ptym22"},
  {"/dev/ptym23", BRACK(FHDEV(DEV_TTYM_MAJOR, 23)), "/dev/ptym23"},
  {"/dev/ptym24", BRACK(FHDEV(DEV_TTYM_MAJOR, 24)), "/dev/ptym24"},
  {"/dev/ptym25", BRACK(FHDEV(DEV_TTYM_MAJOR, 25)), "/dev/ptym25"},
  {"/dev/ptym26", BRACK(FHDEV(DEV_TTYM_MAJOR, 26)), "/dev/ptym26"},
  {"/dev/ptym27", BRACK(FHDEV(DEV_TTYM_MAJOR, 27)), "/dev/ptym27"},
  {"/dev/ptym28", BRACK(FHDEV(DEV_TTYM_MAJOR, 28)), "/dev/ptym28"},
  {"/dev/ptym29", BRACK(FHDEV(DEV_TTYM_MAJOR, 29)), "/dev/ptym29"},
  {"/dev/ptym30", BRACK(FHDEV(DEV_TTYM_MAJOR, 30)), "/dev/ptym30"},
  {"/dev/ptym31", BRACK(FHDEV(DEV_TTYM_MAJOR, 31)), "/dev/ptym31"},
  {"/dev/ptym32", BRACK(FHDEV(DEV_TTYM_MAJOR, 32)), "/dev/ptym32"},
  {"/dev/ptym33", BRACK(FHDEV(DEV_TTYM_MAJOR, 33)), "/dev/ptym33"},
  {"/dev/ptym34", BRACK(FHDEV(DEV_TTYM_MAJOR, 34)), "/dev/ptym34"},
  {"/dev/ptym35", BRACK(FHDEV(DEV_TTYM_MAJOR, 35)), "/dev/ptym35"},
  {"/dev/ptym36", BRACK(FHDEV(DEV_TTYM_MAJOR, 36)), "/dev/ptym36"},
  {"/dev/ptym37", BRACK(FHDEV(DEV_TTYM_MAJOR, 37)), "/dev/ptym37"},
  {"/dev/ptym38", BRACK(FHDEV(DEV_TTYM_MAJOR, 38)), "/dev/ptym38"},
  {"/dev/ptym39", BRACK(FHDEV(DEV_TTYM_MAJOR, 39)), "/dev/ptym39"},
  {"/dev/ptym40", BRACK(FHDEV(DEV_TTYM_MAJOR, 40)), "/dev/ptym40"},
  {"/dev/ptym41", BRACK(FHDEV(DEV_TTYM_MAJOR, 41)), "/dev/ptym41"},
  {"/dev/ptym42", BRACK(FHDEV(DEV_TTYM_MAJOR, 42)), "/dev/ptym42"},
  {"/dev/ptym43", BRACK(FHDEV(DEV_TTYM_MAJOR, 43)), "/dev/ptym43"},
  {"/dev/ptym44", BRACK(FHDEV(DEV_TTYM_MAJOR, 44)), "/dev/ptym44"},
  {"/dev/ptym45", BRACK(FHDEV(DEV_TTYM_MAJOR, 45)), "/dev/ptym45"},
  {"/dev/ptym46", BRACK(FHDEV(DEV_TTYM_MAJOR, 46)), "/dev/ptym46"},
  {"/dev/ptym47", BRACK(FHDEV(DEV_TTYM_MAJOR, 47)), "/dev/ptym47"},
  {"/dev/ptym48", BRACK(FHDEV(DEV_TTYM_MAJOR, 48)), "/dev/ptym48"},
  {"/dev/ptym49", BRACK(FHDEV(DEV_TTYM_MAJOR, 49)), "/dev/ptym49"},
  {"/dev/ptym50", BRACK(FHDEV(DEV_TTYM_MAJOR, 50)), "/dev/ptym50"},
  {"/dev/ptym51", BRACK(FHDEV(DEV_TTYM_MAJOR, 51)), "/dev/ptym51"},
  {"/dev/ptym52", BRACK(FHDEV(DEV_TTYM_MAJOR, 52)), "/dev/ptym52"},
  {"/dev/ptym53", BRACK(FHDEV(DEV_TTYM_MAJOR, 53)), "/dev/ptym53"},
  {"/dev/ptym54", BRACK(FHDEV(DEV_TTYM_MAJOR, 54)), "/dev/ptym54"},
  {"/dev/ptym55", BRACK(FHDEV(DEV_TTYM_MAJOR, 55)), "/dev/ptym55"},
  {"/dev/ptym56", BRACK(FHDEV(DEV_TTYM_MAJOR, 56)), "/dev/ptym56"},
  {"/dev/ptym57", BRACK(FHDEV(DEV_TTYM_MAJOR, 57)), "/dev/ptym57"},
  {"/dev/ptym58", BRACK(FHDEV(DEV_TTYM_MAJOR, 58)), "/dev/ptym58"},
  {"/dev/ptym59", BRACK(FHDEV(DEV_TTYM_MAJOR, 59)), "/dev/ptym59"},
  {"/dev/ptym60", BRACK(FHDEV(DEV_TTYM_MAJOR, 60)), "/dev/ptym60"},
  {"/dev/ptym61", BRACK(FHDEV(DEV_TTYM_MAJOR, 61)), "/dev/ptym61"},
  {"/dev/ptym62", BRACK(FHDEV(DEV_TTYM_MAJOR, 62)), "/dev/ptym62"},
  {"/dev/ptym63", BRACK(FHDEV(DEV_TTYM_MAJOR, 63)), "/dev/ptym63"},
d2719 2
a2720 2
const device *ttym_dev = dev_storage + 303;
const device *ttys_dev = dev_storage + 239;
@


1.38
log
@* cygheap.h (init_cygheap::ctty_on_hold): Remove conditionalized variable.
* dcrt0.cc (do_exit): Remove code which handled CYGWIN=tty style ttys.
* devices.in: Remove "/dev/ttym".
* dtable.cc: Rename tty to pty where appropriate throughout.
(dtable::stdio_init): Use new t->is_console rather than using now-deleted hwnd
element in tty structure.
(dtable::init_std_file_from_handle): Remove code which handled CYGWIN=tty style
ttys.
(fh_alloc): Ditto.
* fhandler.h: Rename tty to pty where appropriate.
(fhandler_pty_common): Delete output_done_event, ioctl_request_event,
ioctl_done_event.
(fhandler_pty_master::setup): Delete argument.
(fhandler_tty_master): Delete.
(fhandler_union): Delete __tty_master.
* fhandler_console.cc (use_tty): Delete.
(fhandler_console::get_tty_stuff): Set is_console to true rather than calling
sethwnd.
(fhandler_console::send_winch_maybe): Remove CYGWIN=tty considerations.
(fhandler_console::input_tcsetattr): Ditto.
* fhandler_termios.cc (fhandler_termios::tcsetpgrp): Use new t->is_console
rather than using now-deleted hwnd element in tty structure.
* fhandler_tty.cc: Rename tty to pty where appropriate throughout.
(tty_master): Delete.
(process_input): Ditto.
(process_output): Ditto.
(process_ioctl): Ditto.
(fhandler_tty_master::*): Ditto.
(fhandler_pty_master::process_slave_output): Remove CYGWIN=tty considerations.
(fhandler_pty_slave::open): Ditto for *_done_event.
(fhandler_pty_slave::write): Ditto.
(fhandler_pty_slave::ioctl): Ditto.
(fhandler_pty_slave::fch_open_handles): Ditto.
(fhandler_pty_slave::fch_set_sd): Ditto.
(fhandler_pty_slave::fch_close_handles): Ditto.
(fhandler_pty_common::close): Ditto.
(fhandler_pty_master::setup): Ditto.  Remove now-unneeded ispty parameter.
(fhandler_pty_master::open): Reflect argument removal for tty::allocate.
* select.cc: Rename tty to pty where appropriate throughout.
* sigproc.cc (proc_subproc): Remove CYGWIN=tty considerations.
* tty.cc (ttyslot): Accommodate CYGWIN=tty removal.
(tty_list::init_session): Ditto.
(tty_list::attach): Ditto.
(tty::create_master): Delete.
(tty_list::terminate): Ditto.
(tty_list::allocate): Delete "with_console" parameter.  Remove CYGWIN=tty
considerations.
(tty::init): Set is_console = false.  Use 'false' for was_opened since it is a
boolean.
* tty.h (*_{DONE,REQUEST}_EVENT): Delete.
(tty_min::is_console): Declare new field which replaces hwnd.
(tty_min::gethwnd): Delete.
(tty_min::sethwnd): Ditto.
(tty_list::allocate): Delete parameter.
(tty_list::terminate): Delete declaration.
* include/sys/cygwin.h (PID_USETTY): Redefine to PID_UNUSED1 and change comment
to reflect its availability.
@
text
@d309 129
a437 1
  {"/dev/ptmx", BRACK(FH_PTYM), "/dev/ptmx"},
a2647 64
  {"/dev/tty0", BRACK(FHDEV(DEV_TTYS_MAJOR, 0)), "/dev/tty0"},
  {"/dev/tty1", BRACK(FHDEV(DEV_TTYS_MAJOR, 1)), "/dev/tty1"},
  {"/dev/tty2", BRACK(FHDEV(DEV_TTYS_MAJOR, 2)), "/dev/tty2"},
  {"/dev/tty3", BRACK(FHDEV(DEV_TTYS_MAJOR, 3)), "/dev/tty3"},
  {"/dev/tty4", BRACK(FHDEV(DEV_TTYS_MAJOR, 4)), "/dev/tty4"},
  {"/dev/tty5", BRACK(FHDEV(DEV_TTYS_MAJOR, 5)), "/dev/tty5"},
  {"/dev/tty6", BRACK(FHDEV(DEV_TTYS_MAJOR, 6)), "/dev/tty6"},
  {"/dev/tty7", BRACK(FHDEV(DEV_TTYS_MAJOR, 7)), "/dev/tty7"},
  {"/dev/tty8", BRACK(FHDEV(DEV_TTYS_MAJOR, 8)), "/dev/tty8"},
  {"/dev/tty9", BRACK(FHDEV(DEV_TTYS_MAJOR, 9)), "/dev/tty9"},
  {"/dev/tty10", BRACK(FHDEV(DEV_TTYS_MAJOR, 10)), "/dev/tty10"},
  {"/dev/tty11", BRACK(FHDEV(DEV_TTYS_MAJOR, 11)), "/dev/tty11"},
  {"/dev/tty12", BRACK(FHDEV(DEV_TTYS_MAJOR, 12)), "/dev/tty12"},
  {"/dev/tty13", BRACK(FHDEV(DEV_TTYS_MAJOR, 13)), "/dev/tty13"},
  {"/dev/tty14", BRACK(FHDEV(DEV_TTYS_MAJOR, 14)), "/dev/tty14"},
  {"/dev/tty15", BRACK(FHDEV(DEV_TTYS_MAJOR, 15)), "/dev/tty15"},
  {"/dev/tty16", BRACK(FHDEV(DEV_TTYS_MAJOR, 16)), "/dev/tty16"},
  {"/dev/tty17", BRACK(FHDEV(DEV_TTYS_MAJOR, 17)), "/dev/tty17"},
  {"/dev/tty18", BRACK(FHDEV(DEV_TTYS_MAJOR, 18)), "/dev/tty18"},
  {"/dev/tty19", BRACK(FHDEV(DEV_TTYS_MAJOR, 19)), "/dev/tty19"},
  {"/dev/tty20", BRACK(FHDEV(DEV_TTYS_MAJOR, 20)), "/dev/tty20"},
  {"/dev/tty21", BRACK(FHDEV(DEV_TTYS_MAJOR, 21)), "/dev/tty21"},
  {"/dev/tty22", BRACK(FHDEV(DEV_TTYS_MAJOR, 22)), "/dev/tty22"},
  {"/dev/tty23", BRACK(FHDEV(DEV_TTYS_MAJOR, 23)), "/dev/tty23"},
  {"/dev/tty24", BRACK(FHDEV(DEV_TTYS_MAJOR, 24)), "/dev/tty24"},
  {"/dev/tty25", BRACK(FHDEV(DEV_TTYS_MAJOR, 25)), "/dev/tty25"},
  {"/dev/tty26", BRACK(FHDEV(DEV_TTYS_MAJOR, 26)), "/dev/tty26"},
  {"/dev/tty27", BRACK(FHDEV(DEV_TTYS_MAJOR, 27)), "/dev/tty27"},
  {"/dev/tty28", BRACK(FHDEV(DEV_TTYS_MAJOR, 28)), "/dev/tty28"},
  {"/dev/tty29", BRACK(FHDEV(DEV_TTYS_MAJOR, 29)), "/dev/tty29"},
  {"/dev/tty30", BRACK(FHDEV(DEV_TTYS_MAJOR, 30)), "/dev/tty30"},
  {"/dev/tty31", BRACK(FHDEV(DEV_TTYS_MAJOR, 31)), "/dev/tty31"},
  {"/dev/tty32", BRACK(FHDEV(DEV_TTYS_MAJOR, 32)), "/dev/tty32"},
  {"/dev/tty33", BRACK(FHDEV(DEV_TTYS_MAJOR, 33)), "/dev/tty33"},
  {"/dev/tty34", BRACK(FHDEV(DEV_TTYS_MAJOR, 34)), "/dev/tty34"},
  {"/dev/tty35", BRACK(FHDEV(DEV_TTYS_MAJOR, 35)), "/dev/tty35"},
  {"/dev/tty36", BRACK(FHDEV(DEV_TTYS_MAJOR, 36)), "/dev/tty36"},
  {"/dev/tty37", BRACK(FHDEV(DEV_TTYS_MAJOR, 37)), "/dev/tty37"},
  {"/dev/tty38", BRACK(FHDEV(DEV_TTYS_MAJOR, 38)), "/dev/tty38"},
  {"/dev/tty39", BRACK(FHDEV(DEV_TTYS_MAJOR, 39)), "/dev/tty39"},
  {"/dev/tty40", BRACK(FHDEV(DEV_TTYS_MAJOR, 40)), "/dev/tty40"},
  {"/dev/tty41", BRACK(FHDEV(DEV_TTYS_MAJOR, 41)), "/dev/tty41"},
  {"/dev/tty42", BRACK(FHDEV(DEV_TTYS_MAJOR, 42)), "/dev/tty42"},
  {"/dev/tty43", BRACK(FHDEV(DEV_TTYS_MAJOR, 43)), "/dev/tty43"},
  {"/dev/tty44", BRACK(FHDEV(DEV_TTYS_MAJOR, 44)), "/dev/tty44"},
  {"/dev/tty45", BRACK(FHDEV(DEV_TTYS_MAJOR, 45)), "/dev/tty45"},
  {"/dev/tty46", BRACK(FHDEV(DEV_TTYS_MAJOR, 46)), "/dev/tty46"},
  {"/dev/tty47", BRACK(FHDEV(DEV_TTYS_MAJOR, 47)), "/dev/tty47"},
  {"/dev/tty48", BRACK(FHDEV(DEV_TTYS_MAJOR, 48)), "/dev/tty48"},
  {"/dev/tty49", BRACK(FHDEV(DEV_TTYS_MAJOR, 49)), "/dev/tty49"},
  {"/dev/tty50", BRACK(FHDEV(DEV_TTYS_MAJOR, 50)), "/dev/tty50"},
  {"/dev/tty51", BRACK(FHDEV(DEV_TTYS_MAJOR, 51)), "/dev/tty51"},
  {"/dev/tty52", BRACK(FHDEV(DEV_TTYS_MAJOR, 52)), "/dev/tty52"},
  {"/dev/tty53", BRACK(FHDEV(DEV_TTYS_MAJOR, 53)), "/dev/tty53"},
  {"/dev/tty54", BRACK(FHDEV(DEV_TTYS_MAJOR, 54)), "/dev/tty54"},
  {"/dev/tty55", BRACK(FHDEV(DEV_TTYS_MAJOR, 55)), "/dev/tty55"},
  {"/dev/tty56", BRACK(FHDEV(DEV_TTYS_MAJOR, 56)), "/dev/tty56"},
  {"/dev/tty57", BRACK(FHDEV(DEV_TTYS_MAJOR, 57)), "/dev/tty57"},
  {"/dev/tty58", BRACK(FHDEV(DEV_TTYS_MAJOR, 58)), "/dev/tty58"},
  {"/dev/tty59", BRACK(FHDEV(DEV_TTYS_MAJOR, 59)), "/dev/tty59"},
  {"/dev/tty60", BRACK(FHDEV(DEV_TTYS_MAJOR, 60)), "/dev/tty60"},
  {"/dev/tty61", BRACK(FHDEV(DEV_TTYS_MAJOR, 61)), "/dev/tty61"},
  {"/dev/tty62", BRACK(FHDEV(DEV_TTYS_MAJOR, 62)), "/dev/tty62"},
  {"/dev/tty63", BRACK(FHDEV(DEV_TTYS_MAJOR, 63)), "/dev/tty63"},
d2719 3
a2721 2
const device *ttys_dev = dev_storage + 2449;
const device *urandom_dev = dev_storage + 2577;
d2751 1
a2751 1
return dev_storage + 281;
d2769 1
a2769 1
return dev_storage + 2448;
d2784 1
a2784 1
return dev_storage + 280;
d2805 1
a2805 1
return dev_storage + 279;
d2820 1
a2820 1
return dev_storage + 278;
d2835 1
a2835 1
return dev_storage + 277;
d2850 1
a2850 1
return dev_storage + 276;
d2865 1
a2865 1
return dev_storage + 275;
d2880 1
a2880 1
return dev_storage + 274;
d2895 1
a2895 1
return dev_storage + 273;
d2910 1
a2910 1
return dev_storage + 272;
d2928 1
a2928 1
return dev_storage + 271;
d2964 1
a2964 1
return dev_storage + 270;
d2979 1
a2979 1
return dev_storage + 269;
d2997 1
a2997 1
return dev_storage + 268;
d3033 1
a3033 1
return dev_storage + 267;
d3048 1
a3048 1
return dev_storage + 266;
d3063 1
a3063 1
return dev_storage + 265;
d3078 1
a3078 1
return dev_storage + 264;
d3093 1
a3093 1
return dev_storage + 263;
d3108 1
a3108 1
return dev_storage + 262;
d3123 1
a3123 1
return dev_storage + 261;
d3138 1
a3138 1
return dev_storage + 260;
d3153 1
a3153 1
return dev_storage + 259;
d3168 1
a3168 1
return dev_storage + 258;
d3183 1
a3183 1
return dev_storage + 257;
d3198 1
a3198 1
return dev_storage + 256;
d3216 1
a3216 1
return dev_storage + 2329;
d3231 1
a3231 1
return dev_storage + 2313;
d3270 1
a3270 1
return dev_storage + 2328;
d3285 1
a3285 1
return dev_storage + 2312;
d3324 1
a3324 1
return dev_storage + 2327;
d3339 1
a3339 1
return dev_storage + 2311;
d3378 1
a3378 1
return dev_storage + 2326;
d3393 1
a3393 1
return dev_storage + 2310;
d3432 1
a3432 1
return dev_storage + 2325;
d3447 1
a3447 1
return dev_storage + 2309;
d3486 1
a3486 1
return dev_storage + 2324;
d3501 1
a3501 1
return dev_storage + 2308;
d3540 1
a3540 1
return dev_storage + 2323;
d3555 1
a3555 1
return dev_storage + 2307;
d3594 1
a3594 1
return dev_storage + 2322;
d3609 1
a3609 1
return dev_storage + 2306;
d3648 1
a3648 1
return dev_storage + 2321;
d3663 1
a3663 1
return dev_storage + 2305;
d3702 1
a3702 1
return dev_storage + 2320;
d3717 1
a3717 1
return dev_storage + 2304;
d3765 1
a3765 1
return dev_storage + 665;
d3780 1
a3780 1
return dev_storage + 664;
d3795 1
a3795 1
return dev_storage + 663;
d3810 1
a3810 1
return dev_storage + 662;
d3825 1
a3825 1
return dev_storage + 661;
d3840 1
a3840 1
return dev_storage + 660;
d3855 1
a3855 1
return dev_storage + 659;
d3870 1
a3870 1
return dev_storage + 658;
d3885 1
a3885 1
return dev_storage + 657;
d3908 2
a3909 2
                case 't':
                  if (strncmp (KR_keyword, "/dev/tty9", 9) == 0)
d3912 1
a3912 1
return dev_storage + 2458;
d3923 2
a3924 2
                case 's':
                  if (strncmp (KR_keyword, "/dev/sdy9", 9) == 0)
d3927 1
a3927 1
return dev_storage + 650;
d3947 2
a3948 2
                case 't':
                  if (strncmp (KR_keyword, "/dev/tty8", 9) == 0)
d3951 1
a3951 1
return dev_storage + 2457;
d3962 2
a3963 2
                case 's':
                  if (strncmp (KR_keyword, "/dev/sdy8", 9) == 0)
d3966 1
a3966 1
return dev_storage + 649;
d3986 2
a3987 2
                case 't':
                  if (strncmp (KR_keyword, "/dev/tty7", 9) == 0)
d3990 1
a3990 1
return dev_storage + 2456;
d4001 2
a4002 2
                case 's':
                  if (strncmp (KR_keyword, "/dev/sdy7", 9) == 0)
d4005 1
a4005 1
return dev_storage + 648;
d4025 2
a4026 2
                case 't':
                  if (strncmp (KR_keyword, "/dev/tty6", 9) == 0)
d4029 1
a4029 1
return dev_storage + 2455;
d4040 2
a4041 2
                case 's':
                  if (strncmp (KR_keyword, "/dev/sdy6", 9) == 0)
d4044 1
a4044 1
return dev_storage + 647;
d4064 2
a4065 2
                case 't':
                  if (strncmp (KR_keyword, "/dev/tty5", 9) == 0)
d4068 1
a4068 1
return dev_storage + 2454;
d4079 2
a4080 2
                case 's':
                  if (strncmp (KR_keyword, "/dev/sdy5", 9) == 0)
d4083 1
a4083 1
return dev_storage + 646;
d4103 2
a4104 2
                case 't':
                  if (strncmp (KR_keyword, "/dev/tty4", 9) == 0)
d4107 1
a4107 1
return dev_storage + 2453;
d4118 2
a4119 2
                case 's':
                  if (strncmp (KR_keyword, "/dev/sdy4", 9) == 0)
d4122 1
a4122 1
return dev_storage + 645;
d4142 2
a4143 2
                case 't':
                  if (strncmp (KR_keyword, "/dev/tty3", 9) == 0)
d4146 1
a4146 1
return dev_storage + 2452;
d4157 2
a4158 2
                case 's':
                  if (strncmp (KR_keyword, "/dev/sdy3", 9) == 0)
d4161 1
a4161 1
return dev_storage + 644;
d4181 2
a4182 2
                case 't':
                  if (strncmp (KR_keyword, "/dev/tty2", 9) == 0)
d4185 1
a4185 1
return dev_storage + 2451;
d4196 2
a4197 2
                case 's':
                  if (strncmp (KR_keyword, "/dev/sdy2", 9) == 0)
d4200 1
a4200 1
return dev_storage + 643;
d4220 2
a4221 2
                case 't':
                  if (strncmp (KR_keyword, "/dev/tty1", 9) == 0)
d4224 1
a4224 1
return dev_storage + 2450;
d4235 2
a4236 2
                case 's':
                  if (strncmp (KR_keyword, "/dev/sdy1", 9) == 0)
d4239 1
a4239 1
return dev_storage + 642;
d4257 1
a4257 1
              if (strncmp (KR_keyword, "/dev/tty0", 9) == 0)
d4260 1
a4260 1
return dev_storage + 2449;
d4284 1
a4284 1
return dev_storage + 635;
d4299 1
a4299 1
return dev_storage + 634;
d4314 1
a4314 1
return dev_storage + 633;
d4329 1
a4329 1
return dev_storage + 632;
d4344 1
a4344 1
return dev_storage + 631;
d4359 1
a4359 1
return dev_storage + 630;
d4374 1
a4374 1
return dev_storage + 629;
d4389 1
a4389 1
return dev_storage + 628;
d4404 1
a4404 1
return dev_storage + 627;
d4428 1
a4428 1
return dev_storage + 620;
d4443 1
a4443 1
return dev_storage + 619;
d4458 1
a4458 1
return dev_storage + 618;
d4473 1
a4473 1
return dev_storage + 617;
d4488 1
a4488 1
return dev_storage + 616;
d4503 1
a4503 1
return dev_storage + 615;
d4518 1
a4518 1
return dev_storage + 614;
d4533 1
a4533 1
return dev_storage + 613;
d4548 1
a4548 1
return dev_storage + 612;
d4572 1
a4572 1
return dev_storage + 605;
d4587 1
a4587 1
return dev_storage + 604;
d4602 1
a4602 1
return dev_storage + 603;
d4617 1
a4617 1
return dev_storage + 602;
d4632 1
a4632 1
return dev_storage + 601;
d4647 1
a4647 1
return dev_storage + 600;
d4662 1
a4662 1
return dev_storage + 599;
d4677 1
a4677 1
return dev_storage + 598;
d4692 1
a4692 1
return dev_storage + 597;
d4716 1
a4716 1
return dev_storage + 590;
d4731 1
a4731 1
return dev_storage + 589;
d4746 1
a4746 1
return dev_storage + 588;
d4761 1
a4761 1
return dev_storage + 587;
d4776 1
a4776 1
return dev_storage + 586;
d4791 1
a4791 1
return dev_storage + 585;
d4806 1
a4806 1
return dev_storage + 584;
d4821 1
a4821 1
return dev_storage + 583;
d4836 1
a4836 1
return dev_storage + 582;
d4863 1
a4863 1
return dev_storage + 575;
d4902 1
a4902 1
return dev_storage + 574;
d4941 1
a4941 1
return dev_storage + 573;
d4980 1
a4980 1
return dev_storage + 572;
d5019 1
a5019 1
return dev_storage + 571;
d5058 1
a5058 1
return dev_storage + 570;
d5097 1
a5097 1
return dev_storage + 569;
d5136 1
a5136 1
return dev_storage + 568;
d5175 1
a5175 1
return dev_storage + 567;
d5250 1
a5250 1
return dev_storage + 560;
d5265 1
a5265 1
return dev_storage + 559;
d5280 1
a5280 1
return dev_storage + 558;
d5295 1
a5295 1
return dev_storage + 557;
d5310 1
a5310 1
return dev_storage + 556;
d5325 1
a5325 1
return dev_storage + 555;
d5340 1
a5340 1
return dev_storage + 554;
d5355 1
a5355 1
return dev_storage + 553;
d5370 1
a5370 1
return dev_storage + 552;
d5409 1
a5409 1
return dev_storage + 2579;
d5424 1
a5424 1
return dev_storage + 545;
d5439 1
a5439 1
return dev_storage + 544;
d5454 1
a5454 1
return dev_storage + 543;
d5469 1
a5469 1
return dev_storage + 542;
d5484 1
a5484 1
return dev_storage + 541;
d5499 1
a5499 1
return dev_storage + 540;
d5514 1
a5514 1
return dev_storage + 539;
d5529 1
a5529 1
return dev_storage + 538;
d5544 1
a5544 1
return dev_storage + 537;
d5568 1
a5568 1
return dev_storage + 530;
d5583 1
a5583 1
return dev_storage + 529;
d5598 1
a5598 1
return dev_storage + 528;
d5613 1
a5613 1
return dev_storage + 527;
d5628 1
a5628 1
return dev_storage + 526;
d5643 1
a5643 1
return dev_storage + 525;
d5658 1
a5658 1
return dev_storage + 524;
d5673 1
a5673 1
return dev_storage + 523;
d5688 1
a5688 1
return dev_storage + 522;
d5727 1
a5727 1
return dev_storage + 515;
d5742 1
a5742 1
return dev_storage + 514;
d5757 1
a5757 1
return dev_storage + 513;
d5772 1
a5772 1
return dev_storage + 512;
d5787 1
a5787 1
return dev_storage + 511;
d5802 1
a5802 1
return dev_storage + 510;
d5817 1
a5817 1
return dev_storage + 509;
d5832 1
a5832 1
return dev_storage + 508;
d5847 1
a5847 1
return dev_storage + 507;
d5871 1
a5871 1
return dev_storage + 500;
d5886 1
a5886 1
return dev_storage + 499;
d5901 1
a5901 1
return dev_storage + 498;
d5916 1
a5916 1
return dev_storage + 497;
d5931 1
a5931 1
return dev_storage + 496;
d5946 1
a5946 1
return dev_storage + 495;
d5961 1
a5961 1
return dev_storage + 494;
d5976 1
a5976 1
return dev_storage + 493;
d5991 1
a5991 1
return dev_storage + 492;
d6015 1
a6015 1
return dev_storage + 485;
d6030 1
a6030 1
return dev_storage + 484;
d6045 1
a6045 1
return dev_storage + 483;
d6060 1
a6060 1
return dev_storage + 482;
d6075 1
a6075 1
return dev_storage + 481;
d6090 1
a6090 1
return dev_storage + 480;
d6105 1
a6105 1
return dev_storage + 479;
d6120 1
a6120 1
return dev_storage + 478;
d6135 1
a6135 1
return dev_storage + 477;
d6162 1
a6162 1
return dev_storage + 470;
d6177 1
a6177 1
return dev_storage + 469;
d6192 1
a6192 1
return dev_storage + 468;
d6207 1
a6207 1
return dev_storage + 467;
d6222 1
a6222 1
return dev_storage + 466;
d6237 1
a6237 1
return dev_storage + 465;
d6252 1
a6252 1
return dev_storage + 464;
d6267 1
a6267 1
return dev_storage + 463;
d6282 1
a6282 1
return dev_storage + 462;
d6510 1
a6510 1
return dev_storage + 455;
d6525 1
a6525 1
return dev_storage + 454;
d6540 1
a6540 1
return dev_storage + 453;
d6555 1
a6555 1
return dev_storage + 452;
d6570 1
a6570 1
return dev_storage + 451;
d6585 1
a6585 1
return dev_storage + 450;
d6600 1
a6600 1
return dev_storage + 449;
d6615 1
a6615 1
return dev_storage + 448;
d6630 1
a6630 1
return dev_storage + 447;
d6654 1
a6654 1
return dev_storage + 440;
d6669 1
a6669 1
return dev_storage + 439;
d6684 1
a6684 1
return dev_storage + 438;
d6699 1
a6699 1
return dev_storage + 437;
d6714 1
a6714 1
return dev_storage + 436;
d6729 1
a6729 1
return dev_storage + 435;
d6744 1
a6744 1
return dev_storage + 434;
d6759 1
a6759 1
return dev_storage + 433;
d6774 1
a6774 1
return dev_storage + 432;
d6798 1
a6798 1
return dev_storage + 425;
d6813 1
a6813 1
return dev_storage + 424;
d6828 1
a6828 1
return dev_storage + 423;
d6843 1
a6843 1
return dev_storage + 422;
d6858 1
a6858 1
return dev_storage + 421;
d6873 1
a6873 1
return dev_storage + 420;
d6888 1
a6888 1
return dev_storage + 419;
d6903 1
a6903 1
return dev_storage + 418;
d6918 1
a6918 1
return dev_storage + 417;
d6942 1
a6942 1
return dev_storage + 410;
d6957 1
a6957 1
return dev_storage + 409;
d6972 1
a6972 1
return dev_storage + 408;
d6987 1
a6987 1
return dev_storage + 407;
d7002 1
a7002 1
return dev_storage + 406;
d7017 1
a7017 1
return dev_storage + 405;
d7032 1
a7032 1
return dev_storage + 404;
d7047 1
a7047 1
return dev_storage + 403;
d7062 1
a7062 1
return dev_storage + 402;
d7086 1
a7086 1
return dev_storage + 395;
d7101 1
a7101 1
return dev_storage + 394;
d7116 1
a7116 1
return dev_storage + 393;
d7131 1
a7131 1
return dev_storage + 392;
d7146 1
a7146 1
return dev_storage + 391;
d7161 1
a7161 1
return dev_storage + 390;
d7176 1
a7176 1
return dev_storage + 389;
d7191 1
a7191 1
return dev_storage + 388;
d7206 1
a7206 1
return dev_storage + 387;
d7230 1
a7230 1
return dev_storage + 380;
d7245 1
a7245 1
return dev_storage + 379;
d7260 1
a7260 1
return dev_storage + 378;
d7275 1
a7275 1
return dev_storage + 377;
d7290 1
a7290 1
return dev_storage + 376;
d7305 1
a7305 1
return dev_storage + 375;
d7320 1
a7320 1
return dev_storage + 374;
d7335 1
a7335 1
return dev_storage + 373;
d7350 1
a7350 1
return dev_storage + 372;
d7389 1
a7389 1
return dev_storage + 365;
d7404 1
a7404 1
return dev_storage + 364;
d7419 1
a7419 1
return dev_storage + 363;
d7434 1
a7434 1
return dev_storage + 362;
d7449 1
a7449 1
return dev_storage + 361;
d7464 1
a7464 1
return dev_storage + 360;
d7479 1
a7479 1
return dev_storage + 359;
d7494 1
a7494 1
return dev_storage + 358;
d7509 1
a7509 1
return dev_storage + 357;
d7548 1
a7548 1
return dev_storage + 350;
d7563 1
a7563 1
return dev_storage + 349;
d7578 1
a7578 1
return dev_storage + 348;
d7593 1
a7593 1
return dev_storage + 347;
d7608 1
a7608 1
return dev_storage + 346;
d7623 1
a7623 1
return dev_storage + 345;
d7638 1
a7638 1
return dev_storage + 344;
d7653 1
a7653 1
return dev_storage + 343;
d7668 1
a7668 1
return dev_storage + 342;
d7692 1
a7692 1
return dev_storage + 1943;
d7707 1
a7707 1
return dev_storage + 1942;
d7722 1
a7722 1
return dev_storage + 1941;
d7737 1
a7737 1
return dev_storage + 1940;
d7752 1
a7752 1
return dev_storage + 1939;
d7767 1
a7767 1
return dev_storage + 1938;
d7782 1
a7782 1
return dev_storage + 1937;
d7797 1
a7797 1
return dev_storage + 1936;
d7812 1
a7812 1
return dev_storage + 1935;
d7827 1
a7827 1
return dev_storage + 1934;
d7842 1
a7842 1
return dev_storage + 1933;
d7857 1
a7857 1
return dev_storage + 1932;
d7872 1
a7872 1
return dev_storage + 1931;
d7887 1
a7887 1
return dev_storage + 1930;
d7902 1
a7902 1
return dev_storage + 1929;
d7917 1
a7917 1
return dev_storage + 1928;
d7932 1
a7932 1
return dev_storage + 1927;
d7947 1
a7947 1
return dev_storage + 1926;
d7962 1
a7962 1
return dev_storage + 1925;
d7977 1
a7977 1
return dev_storage + 1924;
d7992 1
a7992 1
return dev_storage + 1923;
d8007 1
a8007 1
return dev_storage + 1922;
d8022 1
a8022 1
return dev_storage + 1921;
d8037 1
a8037 1
return dev_storage + 1920;
d8055 1
a8055 1
return dev_storage + 335;
d8070 1
a8070 1
return dev_storage + 249;
d8094 1
a8094 1
return dev_storage + 334;
d8109 1
a8109 1
return dev_storage + 248;
d8133 1
a8133 1
return dev_storage + 333;
d8148 1
a8148 1
return dev_storage + 247;
d8172 1
a8172 1
return dev_storage + 332;
d8187 1
a8187 1
return dev_storage + 246;
d8211 1
a8211 1
return dev_storage + 331;
d8226 1
a8226 1
return dev_storage + 245;
d8250 1
a8250 1
return dev_storage + 330;
d8265 1
a8265 1
return dev_storage + 244;
d8289 1
a8289 1
return dev_storage + 329;
d8304 1
a8304 1
return dev_storage + 243;
d8328 1
a8328 1
return dev_storage + 328;
d8343 1
a8343 1
return dev_storage + 242;
d8367 1
a8367 1
return dev_storage + 327;
d8382 1
a8382 1
return dev_storage + 241;
d8403 1
a8403 1
return dev_storage + 240;
d8427 1
a8427 1
return dev_storage + 1529;
d8442 1
a8442 1
return dev_storage + 1528;
d8457 1
a8457 1
return dev_storage + 1527;
d8472 1
a8472 1
return dev_storage + 1526;
d8487 1
a8487 1
return dev_storage + 1525;
d8502 1
a8502 1
return dev_storage + 1524;
d8517 1
a8517 1
return dev_storage + 1523;
d8532 1
a8532 1
return dev_storage + 1522;
d8547 1
a8547 1
return dev_storage + 1521;
d8562 1
a8562 1
return dev_storage + 1520;
d8577 1
a8577 1
return dev_storage + 1519;
d8592 1
a8592 1
return dev_storage + 1518;
d8607 1
a8607 1
return dev_storage + 1517;
d8622 1
a8622 1
return dev_storage + 1516;
d8637 1
a8637 1
return dev_storage + 1515;
d8652 1
a8652 1
return dev_storage + 1514;
d8667 1
a8667 1
return dev_storage + 1513;
d8682 1
a8682 1
return dev_storage + 1512;
d8697 1
a8697 1
return dev_storage + 1511;
d8712 1
a8712 1
return dev_storage + 1510;
d8727 1
a8727 1
return dev_storage + 1509;
d8742 1
a8742 1
return dev_storage + 1508;
d8757 1
a8757 1
return dev_storage + 1507;
d8772 1
a8772 1
return dev_storage + 1506;
d8787 1
a8787 1
return dev_storage + 1505;
d8802 1
a8802 1
return dev_storage + 1504;
d8817 1
a8817 1
return dev_storage + 320;
d8832 1
a8832 1
return dev_storage + 319;
d8847 1
a8847 1
return dev_storage + 318;
d8862 1
a8862 1
return dev_storage + 317;
d8877 1
a8877 1
return dev_storage + 316;
d8892 1
a8892 1
return dev_storage + 315;
d8907 1
a8907 1
return dev_storage + 314;
d8922 1
a8922 1
return dev_storage + 313;
d8937 1
a8937 1
return dev_storage + 312;
d8961 1
a8961 1
return dev_storage + 1113;
d8976 1
a8976 1
return dev_storage + 1112;
d8991 1
a8991 1
return dev_storage + 1111;
d9006 1
a9006 1
return dev_storage + 1110;
d9021 1
a9021 1
return dev_storage + 1109;
d9036 1
a9036 1
return dev_storage + 1108;
d9051 1
a9051 1
return dev_storage + 1107;
d9066 1
a9066 1
return dev_storage + 1106;
d9081 1
a9081 1
return dev_storage + 1105;
d9096 1
a9096 1
return dev_storage + 1104;
d9111 1
a9111 1
return dev_storage + 1103;
d9126 1
a9126 1
return dev_storage + 1102;
d9141 1
a9141 1
return dev_storage + 1101;
d9156 1
a9156 1
return dev_storage + 1100;
d9171 1
a9171 1
return dev_storage + 1099;
d9186 1
a9186 1
return dev_storage + 1098;
d9201 1
a9201 1
return dev_storage + 1097;
d9216 1
a9216 1
return dev_storage + 1096;
d9231 1
a9231 1
return dev_storage + 1095;
d9246 1
a9246 1
return dev_storage + 1094;
d9261 1
a9261 1
return dev_storage + 1093;
d9276 1
a9276 1
return dev_storage + 1092;
d9291 1
a9291 1
return dev_storage + 1091;
d9306 1
a9306 1
return dev_storage + 1090;
d9321 1
a9321 1
return dev_storage + 1089;
d9336 1
a9336 1
return dev_storage + 1088;
d9351 1
a9351 1
return dev_storage + 305;
d9366 1
a9366 1
return dev_storage + 304;
d9381 1
a9381 1
return dev_storage + 303;
d9396 1
a9396 1
return dev_storage + 302;
d9411 1
a9411 1
return dev_storage + 301;
d9426 1
a9426 1
return dev_storage + 300;
d9441 1
a9441 1
return dev_storage + 299;
d9456 1
a9456 1
return dev_storage + 298;
d9471 1
a9471 1
return dev_storage + 297;
d9495 1
a9495 1
return dev_storage + 697;
d9510 1
a9510 1
return dev_storage + 696;
d9525 1
a9525 1
return dev_storage + 695;
d9540 1
a9540 1
return dev_storage + 694;
d9555 1
a9555 1
return dev_storage + 693;
d9570 1
a9570 1
return dev_storage + 692;
d9585 1
a9585 1
return dev_storage + 691;
d9600 1
a9600 1
return dev_storage + 690;
d9615 1
a9615 1
return dev_storage + 689;
d9630 1
a9630 1
return dev_storage + 688;
d9645 1
a9645 1
return dev_storage + 687;
d9660 1
a9660 1
return dev_storage + 686;
d9675 1
a9675 1
return dev_storage + 685;
d9690 1
a9690 1
return dev_storage + 684;
d9705 1
a9705 1
return dev_storage + 683;
d9720 1
a9720 1
return dev_storage + 682;
d9735 1
a9735 1
return dev_storage + 681;
d9750 1
a9750 1
return dev_storage + 680;
d9765 1
a9765 1
return dev_storage + 679;
d9780 1
a9780 1
return dev_storage + 678;
d9795 1
a9795 1
return dev_storage + 677;
d9810 1
a9810 1
return dev_storage + 676;
d9825 1
a9825 1
return dev_storage + 675;
d9840 1
a9840 1
return dev_storage + 674;
d9855 1
a9855 1
return dev_storage + 673;
d9870 1
a9870 1
return dev_storage + 672;
d9885 1
a9885 1
return dev_storage + 290;
d9900 1
a9900 1
return dev_storage + 289;
d9915 1
a9915 1
return dev_storage + 288;
d9930 1
a9930 1
return dev_storage + 287;
d9945 1
a9945 1
return dev_storage + 286;
d9960 1
a9960 1
return dev_storage + 285;
d9975 1
a9975 1
return dev_storage + 284;
d9990 1
a9990 1
return dev_storage + 283;
d10005 1
a10005 1
return dev_storage + 282;
d10029 1
a10029 1
return dev_storage + 2419;
d10044 1
a10044 1
return dev_storage + 2418;
d10059 1
a10059 1
return dev_storage + 2417;
d10074 1
a10074 1
return dev_storage + 2416;
d10089 1
a10089 1
return dev_storage + 2415;
d10104 1
a10104 1
return dev_storage + 2414;
d10119 1
a10119 1
return dev_storage + 2413;
d10134 1
a10134 1
return dev_storage + 2412;
d10149 1
a10149 1
return dev_storage + 2411;
d10164 1
a10164 1
return dev_storage + 2410;
d10188 1
a10188 1
return dev_storage + 2409;
d10203 1
a10203 1
return dev_storage + 2408;
d10218 1
a10218 1
return dev_storage + 2407;
d10233 1
a10233 1
return dev_storage + 2406;
d10248 1
a10248 1
return dev_storage + 2405;
d10263 1
a10263 1
return dev_storage + 2404;
d10278 1
a10278 1
return dev_storage + 2403;
d10293 1
a10293 1
return dev_storage + 2402;
d10308 1
a10308 1
return dev_storage + 2401;
d10323 1
a10323 1
return dev_storage + 2400;
d10347 1
a10347 1
return dev_storage + 2399;
d10362 1
a10362 1
return dev_storage + 2398;
d10377 1
a10377 1
return dev_storage + 2397;
d10392 1
a10392 1
return dev_storage + 2396;
d10407 1
a10407 1
return dev_storage + 2395;
d10422 1
a10422 1
return dev_storage + 2394;
d10437 1
a10437 1
return dev_storage + 2393;
d10452 1
a10452 1
return dev_storage + 2392;
d10467 1
a10467 1
return dev_storage + 2391;
d10482 1
a10482 1
return dev_storage + 2390;
d10506 1
a10506 1
return dev_storage + 2389;
d10521 1
a10521 1
return dev_storage + 2388;
d10536 1
a10536 1
return dev_storage + 2387;
d10551 1
a10551 1
return dev_storage + 2386;
d10566 1
a10566 1
return dev_storage + 2385;
d10581 1
a10581 1
return dev_storage + 2384;
d10596 1
a10596 1
return dev_storage + 2383;
d10611 1
a10611 1
return dev_storage + 2382;
d10626 1
a10626 1
return dev_storage + 2381;
d10641 1
a10641 1
return dev_storage + 2380;
d10665 1
a10665 1
return dev_storage + 2379;
d10680 1
a10680 1
return dev_storage + 2378;
d10695 1
a10695 1
return dev_storage + 2377;
d10710 1
a10710 1
return dev_storage + 2376;
d10725 1
a10725 1
return dev_storage + 2375;
d10740 1
a10740 1
return dev_storage + 2374;
d10755 1
a10755 1
return dev_storage + 2373;
d10770 1
a10770 1
return dev_storage + 2372;
d10785 1
a10785 1
return dev_storage + 2371;
d10800 1
a10800 1
return dev_storage + 2370;
d10824 1
a10824 1
return dev_storage + 2369;
d10839 1
a10839 1
return dev_storage + 2368;
d10854 1
a10854 1
return dev_storage + 2367;
d10869 1
a10869 1
return dev_storage + 2366;
d10884 1
a10884 1
return dev_storage + 2365;
d10899 1
a10899 1
return dev_storage + 2364;
d10914 1
a10914 1
return dev_storage + 2363;
d10929 1
a10929 1
return dev_storage + 2362;
d10944 1
a10944 1
return dev_storage + 2361;
d10959 1
a10959 1
return dev_storage + 2360;
d10983 1
a10983 1
return dev_storage + 2359;
d10998 1
a10998 1
return dev_storage + 2358;
d11013 1
a11013 1
return dev_storage + 2357;
d11028 1
a11028 1
return dev_storage + 2356;
d11043 1
a11043 1
return dev_storage + 2355;
d11058 1
a11058 1
return dev_storage + 2354;
d11073 1
a11073 1
return dev_storage + 2353;
d11088 1
a11088 1
return dev_storage + 2352;
d11103 1
a11103 1
return dev_storage + 2351;
d11118 1
a11118 1
return dev_storage + 2350;
d11142 1
a11142 1
return dev_storage + 2349;
d11157 1
a11157 1
return dev_storage + 2348;
d11172 1
a11172 1
return dev_storage + 2347;
d11187 1
a11187 1
return dev_storage + 2346;
d11202 1
a11202 1
return dev_storage + 2345;
d11217 1
a11217 1
return dev_storage + 2344;
d11232 1
a11232 1
return dev_storage + 2343;
d11247 1
a11247 1
return dev_storage + 2342;
d11262 1
a11262 1
return dev_storage + 2341;
d11277 1
a11277 1
return dev_storage + 2340;
d11301 1
a11301 1
return dev_storage + 2339;
d11316 1
a11316 1
return dev_storage + 2338;
d11331 1
a11331 1
return dev_storage + 2337;
d11346 1
a11346 1
return dev_storage + 2336;
d11364 1
a11364 1
return dev_storage + 2335;
d11379 1
a11379 1
return dev_storage + 2319;
d11418 1
a11418 1
return dev_storage + 2334;
d11433 1
a11433 1
return dev_storage + 2318;
d11472 1
a11472 1
return dev_storage + 2333;
d11487 1
a11487 1
return dev_storage + 2317;
d11526 1
a11526 1
return dev_storage + 2332;
d11541 1
a11541 1
return dev_storage + 2316;
d11580 1
a11580 1
return dev_storage + 2331;
d11595 1
a11595 1
return dev_storage + 2315;
d11634 1
a11634 1
return dev_storage + 2330;
d11649 1
a11649 1
return dev_storage + 2314;
d11721 1
a11721 1
return dev_storage + 1913;
d11736 1
a11736 1
return dev_storage + 1497;
d11751 1
a11751 1
return dev_storage + 1081;
d11775 1
a11775 1
return dev_storage + 1898;
d11790 1
a11790 1
return dev_storage + 1482;
d11805 1
a11805 1
return dev_storage + 1066;
d11829 1
a11829 1
return dev_storage + 2297;
d11844 1
a11844 1
return dev_storage + 1883;
d11859 1
a11859 1
return dev_storage + 1467;
d11874 1
a11874 1
return dev_storage + 1051;
d11898 1
a11898 1
return dev_storage + 2282;
d11913 1
a11913 1
return dev_storage + 1868;
d11928 1
a11928 1
return dev_storage + 1452;
d11943 1
a11943 1
return dev_storage + 1036;
d11967 1
a11967 1
return dev_storage + 2267;
d11982 1
a11982 1
return dev_storage + 1853;
d11997 1
a11997 1
return dev_storage + 1437;
d12012 1
a12012 1
return dev_storage + 1021;
d12036 1
a12036 1
return dev_storage + 2252;
d12051 1
a12051 1
return dev_storage + 1838;
d12066 1
a12066 1
return dev_storage + 1422;
d12081 1
a12081 1
return dev_storage + 1006;
d12105 1
a12105 1
return dev_storage + 2237;
d12120 1
a12120 1
return dev_storage + 1823;
d12135 1
a12135 1
return dev_storage + 1407;
d12150 1
a12150 1
return dev_storage + 991;
d12189 1
a12189 1
return dev_storage + 2222;
d12204 1
a12204 1
return dev_storage + 1808;
d12219 1
a12219 1
return dev_storage + 1392;
d12234 1
a12234 1
return dev_storage + 976;
d12258 1
a12258 1
return dev_storage + 2207;
d12273 1
a12273 1
return dev_storage + 1793;
d12288 1
a12288 1
return dev_storage + 1377;
d12303 1
a12303 1
return dev_storage + 961;
d12327 1
a12327 1
return dev_storage + 2192;
d12342 1
a12342 1
return dev_storage + 1778;
d12357 1
a12357 1
return dev_storage + 1362;
d12372 1
a12372 1
return dev_storage + 946;
d12396 1
a12396 1
return dev_storage + 2177;
d12411 1
a12411 1
return dev_storage + 1763;
d12426 1
a12426 1
return dev_storage + 1347;
d12441 1
a12441 1
return dev_storage + 931;
d12465 1
a12465 1
return dev_storage + 2162;
d12480 1
a12480 1
return dev_storage + 1748;
d12495 1
a12495 1
return dev_storage + 1332;
d12510 1
a12510 1
return dev_storage + 916;
d12534 1
a12534 1
return dev_storage + 2147;
d12549 1
a12549 1
return dev_storage + 1733;
d12564 1
a12564 1
return dev_storage + 1317;
d12579 1
a12579 1
return dev_storage + 901;
d12599 15
d12618 1
a12618 1
return dev_storage + 2132;
d12633 1
a12633 1
return dev_storage + 1718;
d12648 1
a12648 1
return dev_storage + 1302;
d12663 1
a12663 1
return dev_storage + 886;
d12687 1
a12687 1
return dev_storage + 2117;
d12702 1
a12702 1
return dev_storage + 1703;
d12717 1
a12717 1
return dev_storage + 1287;
d12732 1
a12732 1
return dev_storage + 871;
d12756 1
a12756 1
return dev_storage + 2102;
d12771 1
a12771 1
return dev_storage + 1688;
d12786 1
a12786 1
return dev_storage + 1272;
d12801 1
a12801 1
return dev_storage + 856;
d12825 1
a12825 1
return dev_storage + 2087;
d12840 1
a12840 1
return dev_storage + 1673;
d12855 1
a12855 1
return dev_storage + 1257;
d12870 1
a12870 1
return dev_storage + 841;
d12894 1
a12894 1
return dev_storage + 2072;
d12909 1
a12909 1
return dev_storage + 1658;
d12924 1
a12924 1
return dev_storage + 1242;
d12939 1
a12939 1
return dev_storage + 826;
d12963 1
a12963 1
return dev_storage + 2057;
d12978 1
a12978 1
return dev_storage + 1643;
d12993 1
a12993 1
return dev_storage + 1227;
d13008 1
a13008 1
return dev_storage + 811;
d13032 1
a13032 1
return dev_storage + 2042;
d13047 1
a13047 1
return dev_storage + 1628;
d13062 1
a13062 1
return dev_storage + 1212;
d13077 1
a13077 1
return dev_storage + 796;
d13101 1
a13101 1
return dev_storage + 2027;
d13116 1
a13116 1
return dev_storage + 1613;
d13131 1
a13131 1
return dev_storage + 1197;
d13146 1
a13146 1
return dev_storage + 781;
d13170 1
a13170 1
return dev_storage + 2012;
d13185 1
a13185 1
return dev_storage + 1598;
d13200 1
a13200 1
return dev_storage + 1182;
d13215 1
a13215 1
return dev_storage + 766;
d13239 1
a13239 1
return dev_storage + 1997;
d13254 1
a13254 1
return dev_storage + 1583;
d13269 1
a13269 1
return dev_storage + 1167;
d13284 1
a13284 1
return dev_storage + 751;
d13308 1
a13308 1
return dev_storage + 1982;
d13323 1
a13323 1
return dev_storage + 1568;
d13338 1
a13338 1
return dev_storage + 1152;
d13353 1
a13353 1
return dev_storage + 736;
d13377 1
a13377 1
return dev_storage + 1967;
d13392 1
a13392 1
return dev_storage + 1553;
d13407 1
a13407 1
return dev_storage + 1137;
d13422 1
a13422 1
return dev_storage + 721;
d13446 1
a13446 1
return dev_storage + 1952;
d13461 1
a13461 1
return dev_storage + 1538;
d13476 1
a13476 1
return dev_storage + 1122;
d13491 1
a13491 1
return dev_storage + 706;
d13512 1
a13512 1
return dev_storage + 2522;
d13586 2
a13587 2
                case 't':
                  if (strncmp (KR_keyword, "/dev/tty59", 10) == 0)
d13590 1
a13590 1
return dev_storage + 2508;
d13625 2
a13626 2
                case 't':
                  if (strncmp (KR_keyword, "/dev/tty49", 10) == 0)
d13629 1
a13629 1
return dev_storage + 2498;
d13664 2
a13665 2
                case 't':
                  if (strncmp (KR_keyword, "/dev/tty39", 10) == 0)
d13668 1
a13668 1
return dev_storage + 2488;
d13703 2
a13704 2
                case 't':
                  if (strncmp (KR_keyword, "/dev/tty29", 10) == 0)
d13707 1
a13707 1
return dev_storage + 2478;
d13742 2
a13743 2
                case 't':
                  if (strncmp (KR_keyword, "/dev/tty19", 10) == 0)
d13746 1
a13746 1
return dev_storage + 2468;
d13757 2
a13758 2
                case 's':
                  if (strncmp (KR_keyword, "/dev/st119", 10) == 0)
d13761 1
a13761 1
return dev_storage + 2439;
d13797 1
a13797 1
return dev_storage + 2429;
d13824 1
a13824 1
return dev_storage + 1912;
d13839 1
a13839 1
return dev_storage + 1496;
d13854 1
a13854 1
return dev_storage + 1080;
d13878 1
a13878 1
return dev_storage + 1897;
d13893 1
a13893 1
return dev_storage + 1481;
d13908 1
a13908 1
return dev_storage + 1065;
d13932 1
a13932 1
return dev_storage + 2296;
d13947 1
a13947 1
return dev_storage + 1882;
d13962 1
a13962 1
return dev_storage + 1466;
d13977 1
a13977 1
return dev_storage + 1050;
d14001 1
a14001 1
return dev_storage + 2281;
d14016 1
a14016 1
return dev_storage + 1867;
d14031 1
a14031 1
return dev_storage + 1451;
d14046 1
a14046 1
return dev_storage + 1035;
d14070 1
a14070 1
return dev_storage + 2266;
d14085 1
a14085 1
return dev_storage + 1852;
d14100 1
a14100 1
return dev_storage + 1436;
d14115 1
a14115 1
return dev_storage + 1020;
d14139 1
a14139 1
return dev_storage + 2251;
d14154 1
a14154 1
return dev_storage + 1837;
d14169 1
a14169 1
return dev_storage + 1421;
d14184 1
a14184 1
return dev_storage + 1005;
d14208 1
a14208 1
return dev_storage + 2236;
d14223 1
a14223 1
return dev_storage + 1822;
d14238 1
a14238 1
return dev_storage + 1406;
d14253 1
a14253 1
return dev_storage + 990;
d14292 1
a14292 1
return dev_storage + 2221;
d14307 1
a14307 1
return dev_storage + 1807;
d14322 1
a14322 1
return dev_storage + 1391;
d14337 1
a14337 1
return dev_storage + 975;
d14361 1
a14361 1
return dev_storage + 2206;
d14376 1
a14376 1
return dev_storage + 1792;
d14391 1
a14391 1
return dev_storage + 1376;
d14406 1
a14406 1
return dev_storage + 960;
d14430 1
a14430 1
return dev_storage + 2191;
d14445 1
a14445 1
return dev_storage + 1777;
d14460 1
a14460 1
return dev_storage + 1361;
d14475 1
a14475 1
return dev_storage + 945;
d14499 1
a14499 1
return dev_storage + 2176;
d14514 1
a14514 1
return dev_storage + 1762;
d14529 1
a14529 1
return dev_storage + 1346;
d14544 1
a14544 1
return dev_storage + 930;
d14568 1
a14568 1
return dev_storage + 2161;
d14583 1
a14583 1
return dev_storage + 1747;
d14598 1
a14598 1
return dev_storage + 1331;
d14613 1
a14613 1
return dev_storage + 915;
d14637 1
a14637 1
return dev_storage + 2146;
d14652 1
a14652 1
return dev_storage + 1732;
d14667 1
a14667 1
return dev_storage + 1316;
d14682 1
a14682 1
return dev_storage + 900;
d14702 15
d14721 1
a14721 1
return dev_storage + 2131;
d14736 1
a14736 1
return dev_storage + 1717;
d14751 1
a14751 1
return dev_storage + 1301;
d14766 1
a14766 1
return dev_storage + 885;
d14790 1
a14790 1
return dev_storage + 2116;
d14805 1
a14805 1
return dev_storage + 1702;
d14820 1
a14820 1
return dev_storage + 1286;
d14835 1
a14835 1
return dev_storage + 870;
d14859 1
a14859 1
return dev_storage + 2101;
d14874 1
a14874 1
return dev_storage + 1687;
d14889 1
a14889 1
return dev_storage + 1271;
d14904 1
a14904 1
return dev_storage + 855;
d14928 1
a14928 1
return dev_storage + 2086;
d14943 1
a14943 1
return dev_storage + 1672;
d14958 1
a14958 1
return dev_storage + 1256;
d14973 1
a14973 1
return dev_storage + 840;
d14997 1
a14997 1
return dev_storage + 2071;
d15012 1
a15012 1
return dev_storage + 1657;
d15027 1
a15027 1
return dev_storage + 1241;
d15042 1
a15042 1
return dev_storage + 825;
d15066 1
a15066 1
return dev_storage + 2056;
d15081 1
a15081 1
return dev_storage + 1642;
d15096 1
a15096 1
return dev_storage + 1226;
d15111 1
a15111 1
return dev_storage + 810;
d15135 1
a15135 1
return dev_storage + 2041;
d15150 1
a15150 1
return dev_storage + 1627;
d15165 1
a15165 1
return dev_storage + 1211;
d15180 1
a15180 1
return dev_storage + 795;
d15204 1
a15204 1
return dev_storage + 2026;
d15219 1
a15219 1
return dev_storage + 1612;
d15234 1
a15234 1
return dev_storage + 1196;
d15249 1
a15249 1
return dev_storage + 780;
d15273 1
a15273 1
return dev_storage + 2011;
d15288 1
a15288 1
return dev_storage + 1597;
d15303 1
a15303 1
return dev_storage + 1181;
d15318 1
a15318 1
return dev_storage + 765;
d15342 1
a15342 1
return dev_storage + 1996;
d15357 1
a15357 1
return dev_storage + 1582;
d15372 1
a15372 1
return dev_storage + 1166;
d15387 1
a15387 1
return dev_storage + 750;
d15411 1
a15411 1
return dev_storage + 1981;
d15426 1
a15426 1
return dev_storage + 1567;
d15441 1
a15441 1
return dev_storage + 1151;
d15456 1
a15456 1
return dev_storage + 735;
d15480 1
a15480 1
return dev_storage + 1966;
d15495 1
a15495 1
return dev_storage + 1552;
d15510 1
a15510 1
return dev_storage + 1136;
d15525 1
a15525 1
return dev_storage + 720;
d15549 1
a15549 1
return dev_storage + 1951;
d15564 1
a15564 1
return dev_storage + 1537;
d15579 1
a15579 1
return dev_storage + 1121;
d15594 1
a15594 1
return dev_storage + 705;
d15615 1
a15615 1
return dev_storage + 2521;
d15689 2
a15690 2
                case 't':
                  if (strncmp (KR_keyword, "/dev/tty58", 10) == 0)
d15693 1
a15693 1
return dev_storage + 2507;
d15728 2
a15729 2
                case 't':
                  if (strncmp (KR_keyword, "/dev/tty48", 10) == 0)
d15732 1
a15732 1
return dev_storage + 2497;
d15767 2
a15768 2
                case 't':
                  if (strncmp (KR_keyword, "/dev/tty38", 10) == 0)
d15771 1
a15771 1
return dev_storage + 2487;
d15806 2
a15807 2
                case 't':
                  if (strncmp (KR_keyword, "/dev/tty28", 10) == 0)
d15810 1
a15810 1
return dev_storage + 2477;
d15845 2
a15846 2
                case 't':
                  if (strncmp (KR_keyword, "/dev/tty18", 10) == 0)
d15849 1
a15849 1
return dev_storage + 2467;
d15860 2
a15861 2
                case 's':
                  if (strncmp (KR_keyword, "/dev/st118", 10) == 0)
d15864 1
a15864 1
return dev_storage + 2438;
d15900 1
a15900 1
return dev_storage + 2428;
d15927 1
a15927 1
return dev_storage + 1911;
d15942 1
a15942 1
return dev_storage + 1495;
d15957 1
a15957 1
return dev_storage + 1079;
d15981 1
a15981 1
return dev_storage + 1896;
d15996 1
a15996 1
return dev_storage + 1480;
d16011 1
a16011 1
return dev_storage + 1064;
d16035 1
a16035 1
return dev_storage + 2295;
d16050 1
a16050 1
return dev_storage + 1881;
d16065 1
a16065 1
return dev_storage + 1465;
d16080 1
a16080 1
return dev_storage + 1049;
d16104 1
a16104 1
return dev_storage + 2280;
d16119 1
a16119 1
return dev_storage + 1866;
d16134 1
a16134 1
return dev_storage + 1450;
d16149 1
a16149 1
return dev_storage + 1034;
d16173 1
a16173 1
return dev_storage + 2265;
d16188 1
a16188 1
return dev_storage + 1851;
d16203 1
a16203 1
return dev_storage + 1435;
d16218 1
a16218 1
return dev_storage + 1019;
d16242 1
a16242 1
return dev_storage + 2250;
d16257 1
a16257 1
return dev_storage + 1836;
d16272 1
a16272 1
return dev_storage + 1420;
d16287 1
a16287 1
return dev_storage + 1004;
d16311 1
a16311 1
return dev_storage + 2235;
d16326 1
a16326 1
return dev_storage + 1821;
d16341 1
a16341 1
return dev_storage + 1405;
d16356 1
a16356 1
return dev_storage + 989;
d16395 1
a16395 1
return dev_storage + 2220;
d16410 1
a16410 1
return dev_storage + 1806;
d16425 1
a16425 1
return dev_storage + 1390;
d16440 1
a16440 1
return dev_storage + 974;
d16464 1
a16464 1
return dev_storage + 2205;
d16479 1
a16479 1
return dev_storage + 1791;
d16494 1
a16494 1
return dev_storage + 1375;
d16509 1
a16509 1
return dev_storage + 959;
d16533 1
a16533 1
return dev_storage + 2190;
d16548 1
a16548 1
return dev_storage + 1776;
d16563 1
a16563 1
return dev_storage + 1360;
d16578 1
a16578 1
return dev_storage + 944;
d16602 1
a16602 1
return dev_storage + 2175;
d16617 1
a16617 1
return dev_storage + 1761;
d16632 1
a16632 1
return dev_storage + 1345;
d16647 1
a16647 1
return dev_storage + 929;
d16671 1
a16671 1
return dev_storage + 2160;
d16686 1
a16686 1
return dev_storage + 1746;
d16701 1
a16701 1
return dev_storage + 1330;
d16716 1
a16716 1
return dev_storage + 914;
d16740 1
a16740 1
return dev_storage + 2145;
d16755 1
a16755 1
return dev_storage + 1731;
d16770 1
a16770 1
return dev_storage + 1315;
d16785 1
a16785 1
return dev_storage + 899;
d16805 15
d16824 1
a16824 1
return dev_storage + 2130;
d16839 1
a16839 1
return dev_storage + 1716;
d16854 1
a16854 1
return dev_storage + 1300;
d16869 1
a16869 1
return dev_storage + 884;
d16893 1
a16893 1
return dev_storage + 2115;
d16908 1
a16908 1
return dev_storage + 1701;
d16923 1
a16923 1
return dev_storage + 1285;
d16938 1
a16938 1
return dev_storage + 869;
d16962 1
a16962 1
return dev_storage + 2100;
d16977 1
a16977 1
return dev_storage + 1686;
d16992 1
a16992 1
return dev_storage + 1270;
d17007 1
a17007 1
return dev_storage + 854;
d17031 1
a17031 1
return dev_storage + 2085;
d17046 1
a17046 1
return dev_storage + 1671;
d17061 1
a17061 1
return dev_storage + 1255;
d17076 1
a17076 1
return dev_storage + 839;
d17100 1
a17100 1
return dev_storage + 2070;
d17115 1
a17115 1
return dev_storage + 1656;
d17130 1
a17130 1
return dev_storage + 1240;
d17145 1
a17145 1
return dev_storage + 824;
d17169 1
a17169 1
return dev_storage + 2055;
d17184 1
a17184 1
return dev_storage + 1641;
d17199 1
a17199 1
return dev_storage + 1225;
d17214 1
a17214 1
return dev_storage + 809;
d17238 1
a17238 1
return dev_storage + 2040;
d17253 1
a17253 1
return dev_storage + 1626;
d17268 1
a17268 1
return dev_storage + 1210;
d17283 1
a17283 1
return dev_storage + 794;
d17307 1
a17307 1
return dev_storage + 2025;
d17322 1
a17322 1
return dev_storage + 1611;
d17337 1
a17337 1
return dev_storage + 1195;
d17352 1
a17352 1
return dev_storage + 779;
d17376 1
a17376 1
return dev_storage + 2010;
d17391 1
a17391 1
return dev_storage + 1596;
d17406 1
a17406 1
return dev_storage + 1180;
d17421 1
a17421 1
return dev_storage + 764;
d17445 1
a17445 1
return dev_storage + 1995;
d17460 1
a17460 1
return dev_storage + 1581;
d17475 1
a17475 1
return dev_storage + 1165;
d17490 1
a17490 1
return dev_storage + 749;
d17514 1
a17514 1
return dev_storage + 1980;
d17529 1
a17529 1
return dev_storage + 1566;
d17544 1
a17544 1
return dev_storage + 1150;
d17559 1
a17559 1
return dev_storage + 734;
d17583 1
a17583 1
return dev_storage + 1965;
d17598 1
a17598 1
return dev_storage + 1551;
d17613 1
a17613 1
return dev_storage + 1135;
d17628 1
a17628 1
return dev_storage + 719;
d17652 1
a17652 1
return dev_storage + 1950;
d17667 1
a17667 1
return dev_storage + 1536;
d17682 1
a17682 1
return dev_storage + 1120;
d17697 1
a17697 1
return dev_storage + 704;
d17718 1
a17718 1
return dev_storage + 2520;
d17792 2
a17793 2
                case 't':
                  if (strncmp (KR_keyword, "/dev/tty57", 10) == 0)
d17796 1
a17796 1
return dev_storage + 2506;
d17831 2
a17832 2
                case 't':
                  if (strncmp (KR_keyword, "/dev/tty47", 10) == 0)
d17835 1
a17835 1
return dev_storage + 2496;
d17870 2
a17871 2
                case 't':
                  if (strncmp (KR_keyword, "/dev/tty37", 10) == 0)
d17874 1
a17874 1
return dev_storage + 2486;
d17909 2
a17910 2
                case 't':
                  if (strncmp (KR_keyword, "/dev/tty27", 10) == 0)
d17913 1
a17913 1
return dev_storage + 2476;
d17924 2
a17925 2
                case 's':
                  if (strncmp (KR_keyword, "/dev/st127", 10) == 0)
d17928 1
a17928 1
return dev_storage + 2447;
d17963 2
a17964 2
                case 't':
                  if (strncmp (KR_keyword, "/dev/tty17", 10) == 0)
d17967 1
a17967 1
return dev_storage + 2466;
d17978 2
a17979 2
                case 's':
                  if (strncmp (KR_keyword, "/dev/st117", 10) == 0)
d17982 1
a17982 1
return dev_storage + 2437;
d18018 1
a18018 1
return dev_storage + 2427;
d18045 1
a18045 1
return dev_storage + 1910;
d18060 1
a18060 1
return dev_storage + 1494;
d18075 1
a18075 1
return dev_storage + 1078;
d18099 1
a18099 1
return dev_storage + 1895;
d18114 1
a18114 1
return dev_storage + 1479;
d18129 1
a18129 1
return dev_storage + 1063;
d18153 1
a18153 1
return dev_storage + 2294;
d18168 1
a18168 1
return dev_storage + 1880;
d18183 1
a18183 1
return dev_storage + 1464;
d18198 1
a18198 1
return dev_storage + 1048;
d18222 1
a18222 1
return dev_storage + 2279;
d18237 1
a18237 1
return dev_storage + 1865;
d18252 1
a18252 1
return dev_storage + 1449;
d18267 1
a18267 1
return dev_storage + 1033;
d18291 1
a18291 1
return dev_storage + 2264;
d18306 1
a18306 1
return dev_storage + 1850;
d18321 1
a18321 1
return dev_storage + 1434;
d18336 1
a18336 1
return dev_storage + 1018;
d18360 1
a18360 1
return dev_storage + 2249;
d18375 1
a18375 1
return dev_storage + 1835;
d18390 1
a18390 1
return dev_storage + 1419;
d18405 1
a18405 1
return dev_storage + 1003;
d18429 1
a18429 1
return dev_storage + 2234;
d18444 1
a18444 1
return dev_storage + 1820;
d18459 1
a18459 1
return dev_storage + 1404;
d18474 1
a18474 1
return dev_storage + 988;
d18513 1
a18513 1
return dev_storage + 2219;
d18528 1
a18528 1
return dev_storage + 1805;
d18543 1
a18543 1
return dev_storage + 1389;
d18558 1
a18558 1
return dev_storage + 973;
d18582 1
a18582 1
return dev_storage + 2204;
d18597 1
a18597 1
return dev_storage + 1790;
d18612 1
a18612 1
return dev_storage + 1374;
d18627 1
a18627 1
return dev_storage + 958;
d18651 1
a18651 1
return dev_storage + 2189;
d18666 1
a18666 1
return dev_storage + 1775;
d18681 1
a18681 1
return dev_storage + 1359;
d18696 1
a18696 1
return dev_storage + 943;
d18720 1
a18720 1
return dev_storage + 2174;
d18735 1
a18735 1
return dev_storage + 1760;
d18750 1
a18750 1
return dev_storage + 1344;
d18765 1
a18765 1
return dev_storage + 928;
d18789 1
a18789 1
return dev_storage + 2159;
d18804 1
a18804 1
return dev_storage + 1745;
d18819 1
a18819 1
return dev_storage + 1329;
d18834 1
a18834 1
return dev_storage + 913;
d18858 1
a18858 1
return dev_storage + 2144;
d18873 1
a18873 1
return dev_storage + 1730;
d18888 1
a18888 1
return dev_storage + 1314;
d18903 1
a18903 1
return dev_storage + 898;
d18923 15
d18942 1
a18942 1
return dev_storage + 2129;
d18957 1
a18957 1
return dev_storage + 1715;
d18972 1
a18972 1
return dev_storage + 1299;
d18987 1
a18987 1
return dev_storage + 883;
d19011 1
a19011 1
return dev_storage + 2114;
d19026 1
a19026 1
return dev_storage + 1700;
d19041 1
a19041 1
return dev_storage + 1284;
d19056 1
a19056 1
return dev_storage + 868;
d19080 1
a19080 1
return dev_storage + 2099;
d19095 1
a19095 1
return dev_storage + 1685;
d19110 1
a19110 1
return dev_storage + 1269;
d19125 1
a19125 1
return dev_storage + 853;
d19149 1
a19149 1
return dev_storage + 2084;
d19164 1
a19164 1
return dev_storage + 1670;
d19179 1
a19179 1
return dev_storage + 1254;
d19194 1
a19194 1
return dev_storage + 838;
d19218 1
a19218 1
return dev_storage + 2069;
d19233 1
a19233 1
return dev_storage + 1655;
d19248 1
a19248 1
return dev_storage + 1239;
d19263 1
a19263 1
return dev_storage + 823;
d19287 1
a19287 1
return dev_storage + 2054;
d19302 1
a19302 1
return dev_storage + 1640;
d19317 1
a19317 1
return dev_storage + 1224;
d19332 1
a19332 1
return dev_storage + 808;
d19356 1
a19356 1
return dev_storage + 2039;
d19371 1
a19371 1
return dev_storage + 1625;
d19386 1
a19386 1
return dev_storage + 1209;
d19401 1
a19401 1
return dev_storage + 793;
d19425 1
a19425 1
return dev_storage + 2024;
d19440 1
a19440 1
return dev_storage + 1610;
d19455 1
a19455 1
return dev_storage + 1194;
d19470 1
a19470 1
return dev_storage + 778;
d19494 1
a19494 1
return dev_storage + 2009;
d19509 1
a19509 1
return dev_storage + 1595;
d19524 1
a19524 1
return dev_storage + 1179;
d19539 1
a19539 1
return dev_storage + 763;
d19563 1
a19563 1
return dev_storage + 1994;
d19578 1
a19578 1
return dev_storage + 1580;
d19593 1
a19593 1
return dev_storage + 1164;
d19608 1
a19608 1
return dev_storage + 748;
d19632 1
a19632 1
return dev_storage + 1979;
d19647 1
a19647 1
return dev_storage + 1565;
d19662 1
a19662 1
return dev_storage + 1149;
d19677 1
a19677 1
return dev_storage + 733;
d19701 1
a19701 1
return dev_storage + 1964;
d19716 1
a19716 1
return dev_storage + 1550;
d19731 1
a19731 1
return dev_storage + 1134;
d19746 1
a19746 1
return dev_storage + 718;
d19770 1
a19770 1
return dev_storage + 1949;
d19785 1
a19785 1
return dev_storage + 1535;
d19800 1
a19800 1
return dev_storage + 1119;
d19815 1
a19815 1
return dev_storage + 703;
d19836 1
a19836 1
return dev_storage + 2519;
d19910 2
a19911 2
                case 't':
                  if (strncmp (KR_keyword, "/dev/tty56", 10) == 0)
d19914 1
a19914 1
return dev_storage + 2505;
d19949 2
a19950 2
                case 't':
                  if (strncmp (KR_keyword, "/dev/tty46", 10) == 0)
d19953 1
a19953 1
return dev_storage + 2495;
d19988 2
a19989 2
                case 't':
                  if (strncmp (KR_keyword, "/dev/tty36", 10) == 0)
d19992 1
a19992 1
return dev_storage + 2485;
d20027 2
a20028 2
                case 't':
                  if (strncmp (KR_keyword, "/dev/tty26", 10) == 0)
d20031 1
a20031 1
return dev_storage + 2475;
d20042 2
a20043 2
                case 's':
                  if (strncmp (KR_keyword, "/dev/st126", 10) == 0)
d20046 1
a20046 1
return dev_storage + 2446;
d20081 2
a20082 2
                case 't':
                  if (strncmp (KR_keyword, "/dev/tty16", 10) == 0)
d20085 1
a20085 1
return dev_storage + 2465;
d20096 3
a20098 3
                case 's':
                  if (strncmp (KR_keyword, "/dev/st116", 10) == 0)
                    {
d20100 1
a20100 1
return dev_storage + 2436;
d20151 1
a20151 1
return dev_storage + 2426;
d20175 1
a20175 1
return dev_storage + 671;
d20189 15
d20208 1
a20208 1
return dev_storage + 2518;
d20220 1
a20220 1
                  if (strncmp (KR_keyword, "/dev/tty55", 10) == 0)
d20223 1
a20223 1
return dev_storage + 2504;
d20235 1
a20235 1
                  if (strncmp (KR_keyword, "/dev/tty45", 10) == 0)
d20238 1
a20238 1
return dev_storage + 2494;
d20250 1
a20250 1
                  if (strncmp (KR_keyword, "/dev/tty35", 10) == 0)
d20253 1
a20253 1
return dev_storage + 2484;
d20265 1
a20265 1
                  if (strncmp (KR_keyword, "/dev/tty25", 10) == 0)
d20268 1
a20268 1
return dev_storage + 2474;
d20282 2
a20283 2
                    case 't':
                      if (strncmp (KR_keyword, "/dev/tty15", 10) == 0)
d20286 1
a20286 1
return dev_storage + 2464;
d20297 2
a20298 2
                    case 's':
                      if (strncmp (KR_keyword, "/dev/sdy15", 10) == 0)
d20301 1
a20301 1
return dev_storage + 656;
d20328 1
a20328 1
return dev_storage + 641;
d20343 1
a20343 1
return dev_storage + 626;
d20358 1
a20358 1
return dev_storage + 611;
d20373 1
a20373 1
return dev_storage + 596;
d20514 1
a20514 1
return dev_storage + 581;
d20556 1
a20556 1
return dev_storage + 566;
d20571 1
a20571 1
return dev_storage + 551;
d20586 1
a20586 1
return dev_storage + 536;
d20601 1
a20601 1
return dev_storage + 521;
d20616 1
a20616 1
return dev_storage + 506;
d20634 1
a20634 1
return dev_storage + 491;
d20673 1
a20673 1
return dev_storage + 476;
d20709 1
a20709 1
return dev_storage + 461;
d20724 1
a20724 1
return dev_storage + 446;
d20739 1
a20739 1
return dev_storage + 431;
d20754 1
a20754 1
return dev_storage + 416;
d20769 1
a20769 1
return dev_storage + 401;
d20784 1
a20784 1
return dev_storage + 386;
d20799 1
a20799 1
return dev_storage + 371;
d20814 1
a20814 1
return dev_storage + 356;
d20832 1
a20832 1
return dev_storage + 2293;
d20847 1
a20847 1
return dev_storage + 2278;
d20862 1
a20862 1
return dev_storage + 2263;
d20877 1
a20877 1
return dev_storage + 2248;
d20892 1
a20892 1
return dev_storage + 2233;
d20907 1
a20907 1
return dev_storage + 2218;
d20922 1
a20922 1
return dev_storage + 2203;
d20937 1
a20937 1
return dev_storage + 2188;
d20952 1
a20952 1
return dev_storage + 2173;
d20967 1
a20967 1
return dev_storage + 2158;
d20982 1
a20982 1
return dev_storage + 2143;
d20997 1
a20997 1
return dev_storage + 2128;
d21012 1
a21012 1
return dev_storage + 2113;
d21027 1
a21027 1
return dev_storage + 2098;
d21042 1
a21042 1
return dev_storage + 2083;
d21057 1
a21057 1
return dev_storage + 2068;
d21072 1
a21072 1
return dev_storage + 2053;
d21087 1
a21087 1
return dev_storage + 2038;
d21102 1
a21102 1
return dev_storage + 2023;
d21117 1
a21117 1
return dev_storage + 2008;
d21132 1
a21132 1
return dev_storage + 1993;
d21147 1
a21147 1
return dev_storage + 1978;
d21162 1
a21162 1
return dev_storage + 1963;
d21177 1
a21177 1
return dev_storage + 1948;
d21195 1
a21195 1
return dev_storage + 341;
d21210 1
a21210 1
return dev_storage + 255;
d21240 1
a21240 1
return dev_storage + 1909;
d21255 1
a21255 1
return dev_storage + 1894;
d21270 1
a21270 1
return dev_storage + 1879;
d21285 1
a21285 1
return dev_storage + 1864;
d21300 1
a21300 1
return dev_storage + 1849;
d21315 1
a21315 1
return dev_storage + 1834;
d21330 1
a21330 1
return dev_storage + 1819;
d21345 1
a21345 1
return dev_storage + 1804;
d21360 1
a21360 1
return dev_storage + 1789;
d21375 1
a21375 1
return dev_storage + 1774;
d21390 1
a21390 1
return dev_storage + 1759;
d21405 1
a21405 1
return dev_storage + 1744;
d21420 1
a21420 1
return dev_storage + 1729;
d21435 1
a21435 1
return dev_storage + 1714;
d21450 1
a21450 1
return dev_storage + 1699;
d21465 1
a21465 1
return dev_storage + 1684;
d21480 1
a21480 1
return dev_storage + 1669;
d21495 1
a21495 1
return dev_storage + 1654;
d21510 1
a21510 1
return dev_storage + 1639;
d21525 1
a21525 1
return dev_storage + 1624;
d21540 1
a21540 1
return dev_storage + 1609;
d21555 1
a21555 1
return dev_storage + 1594;
d21570 1
a21570 1
return dev_storage + 1579;
d21585 1
a21585 1
return dev_storage + 1564;
d21600 1
a21600 1
return dev_storage + 1549;
d21615 1
a21615 1
return dev_storage + 1534;
d21630 1
a21630 1
return dev_storage + 326;
d21654 1
a21654 1
return dev_storage + 1493;
d21669 1
a21669 1
return dev_storage + 1478;
d21684 1
a21684 1
return dev_storage + 1463;
d21699 1
a21699 1
return dev_storage + 1448;
d21714 1
a21714 1
return dev_storage + 1433;
d21729 1
a21729 1
return dev_storage + 1418;
d21744 1
a21744 1
return dev_storage + 1403;
d21759 1
a21759 1
return dev_storage + 1388;
d21774 1
a21774 1
return dev_storage + 1373;
d21789 1
a21789 1
return dev_storage + 1358;
d21804 1
a21804 1
return dev_storage + 1343;
d21819 1
a21819 1
return dev_storage + 1328;
d21834 1
a21834 1
return dev_storage + 1313;
d21849 1
a21849 1
return dev_storage + 1298;
d21864 1
a21864 1
return dev_storage + 1283;
d21879 1
a21879 1
return dev_storage + 1268;
d21894 1
a21894 1
return dev_storage + 1253;
d21909 1
a21909 1
return dev_storage + 1238;
d21924 1
a21924 1
return dev_storage + 1223;
d21939 1
a21939 1
return dev_storage + 1208;
d21954 1
a21954 1
return dev_storage + 1193;
d21969 1
a21969 1
return dev_storage + 1178;
d21984 1
a21984 1
return dev_storage + 1163;
d21999 1
a21999 1
return dev_storage + 1148;
d22014 1
a22014 1
return dev_storage + 1133;
d22029 1
a22029 1
return dev_storage + 1118;
d22044 1
a22044 1
return dev_storage + 311;
d22068 1
a22068 1
return dev_storage + 1077;
d22083 1
a22083 1
return dev_storage + 1062;
d22098 1
a22098 1
return dev_storage + 1047;
d22113 1
a22113 1
return dev_storage + 1032;
d22128 1
a22128 1
return dev_storage + 1017;
d22143 1
a22143 1
return dev_storage + 1002;
d22158 1
a22158 1
return dev_storage + 987;
d22173 1
a22173 1
return dev_storage + 972;
d22188 1
a22188 1
return dev_storage + 957;
d22203 1
a22203 1
return dev_storage + 942;
d22218 1
a22218 1
return dev_storage + 927;
d22233 1
a22233 1
return dev_storage + 912;
d22248 1
a22248 1
return dev_storage + 897;
d22263 1
a22263 1
return dev_storage + 882;
d22278 1
a22278 1
return dev_storage + 867;
d22293 1
a22293 1
return dev_storage + 852;
d22308 1
a22308 1
return dev_storage + 837;
d22323 1
a22323 1
return dev_storage + 822;
d22338 1
a22338 1
return dev_storage + 807;
d22353 1
a22353 1
return dev_storage + 792;
d22368 1
a22368 1
return dev_storage + 777;
d22383 1
a22383 1
return dev_storage + 762;
d22398 1
a22398 1
return dev_storage + 747;
d22413 1
a22413 1
return dev_storage + 732;
d22428 1
a22428 1
return dev_storage + 717;
d22443 1
a22443 1
return dev_storage + 702;
d22458 1
a22458 1
return dev_storage + 296;
d22482 1
a22482 1
return dev_storage + 2445;
d22497 1
a22497 1
return dev_storage + 2435;
d22512 1
a22512 1
return dev_storage + 2425;
d22542 1
a22542 1
return dev_storage + 670;
d22556 15
d22575 1
a22575 1
return dev_storage + 2517;
d22587 1
a22587 1
                  if (strncmp (KR_keyword, "/dev/tty54", 10) == 0)
d22590 1
a22590 1
return dev_storage + 2503;
d22602 1
a22602 1
                  if (strncmp (KR_keyword, "/dev/tty44", 10) == 0)
d22605 1
a22605 1
return dev_storage + 2493;
d22617 1
a22617 1
                  if (strncmp (KR_keyword, "/dev/tty34", 10) == 0)
d22620 1
a22620 1
return dev_storage + 2483;
d22632 1
a22632 1
                  if (strncmp (KR_keyword, "/dev/tty24", 10) == 0)
d22635 1
a22635 1
return dev_storage + 2473;
d22649 2
a22650 2
                    case 't':
                      if (strncmp (KR_keyword, "/dev/tty14", 10) == 0)
d22653 1
a22653 1
return dev_storage + 2463;
d22664 2
a22665 2
                    case 's':
                      if (strncmp (KR_keyword, "/dev/sdy14", 10) == 0)
d22668 1
a22668 1
return dev_storage + 655;
d22695 1
a22695 1
return dev_storage + 640;
d22710 1
a22710 1
return dev_storage + 625;
d22725 1
a22725 1
return dev_storage + 610;
d22740 1
a22740 1
return dev_storage + 595;
d22881 1
a22881 1
return dev_storage + 580;
d22923 1
a22923 1
return dev_storage + 565;
d22938 1
a22938 1
return dev_storage + 550;
d22953 1
a22953 1
return dev_storage + 535;
d22968 1
a22968 1
return dev_storage + 520;
d22983 1
a22983 1
return dev_storage + 505;
d23001 1
a23001 1
return dev_storage + 490;
d23040 1
a23040 1
return dev_storage + 475;
d23076 1
a23076 1
return dev_storage + 460;
d23091 1
a23091 1
return dev_storage + 445;
d23106 1
a23106 1
return dev_storage + 430;
d23121 1
a23121 1
return dev_storage + 415;
d23136 1
a23136 1
return dev_storage + 400;
d23151 1
a23151 1
return dev_storage + 385;
d23166 1
a23166 1
return dev_storage + 370;
d23181 1
a23181 1
return dev_storage + 355;
d23199 1
a23199 1
return dev_storage + 2292;
d23214 1
a23214 1
return dev_storage + 2277;
d23229 1
a23229 1
return dev_storage + 2262;
d23244 1
a23244 1
return dev_storage + 2247;
d23259 1
a23259 1
return dev_storage + 2232;
d23274 1
a23274 1
return dev_storage + 2217;
d23289 1
a23289 1
return dev_storage + 2202;
d23304 1
a23304 1
return dev_storage + 2187;
d23319 1
a23319 1
return dev_storage + 2172;
d23334 1
a23334 1
return dev_storage + 2157;
d23349 1
a23349 1
return dev_storage + 2142;
d23364 1
a23364 1
return dev_storage + 2127;
d23379 1
a23379 1
return dev_storage + 2112;
d23394 1
a23394 1
return dev_storage + 2097;
d23409 1
a23409 1
return dev_storage + 2082;
d23424 1
a23424 1
return dev_storage + 2067;
d23439 1
a23439 1
return dev_storage + 2052;
d23454 1
a23454 1
return dev_storage + 2037;
d23469 1
a23469 1
return dev_storage + 2022;
d23484 1
a23484 1
return dev_storage + 2007;
d23499 1
a23499 1
return dev_storage + 1992;
d23514 1
a23514 1
return dev_storage + 1977;
d23529 1
a23529 1
return dev_storage + 1962;
d23544 1
a23544 1
return dev_storage + 1947;
d23562 1
a23562 1
return dev_storage + 340;
d23577 1
a23577 1
return dev_storage + 254;
d23607 1
a23607 1
return dev_storage + 1908;
d23622 1
a23622 1
return dev_storage + 1893;
d23637 1
a23637 1
return dev_storage + 1878;
d23652 1
a23652 1
return dev_storage + 1863;
d23667 1
a23667 1
return dev_storage + 1848;
d23682 1
a23682 1
return dev_storage + 1833;
d23697 1
a23697 1
return dev_storage + 1818;
d23712 1
a23712 1
return dev_storage + 1803;
d23727 1
a23727 1
return dev_storage + 1788;
d23742 1
a23742 1
return dev_storage + 1773;
d23757 1
a23757 1
return dev_storage + 1758;
d23772 1
a23772 1
return dev_storage + 1743;
d23787 1
a23787 1
return dev_storage + 1728;
d23802 1
a23802 1
return dev_storage + 1713;
d23817 1
a23817 1
return dev_storage + 1698;
d23832 1
a23832 1
return dev_storage + 1683;
d23847 1
a23847 1
return dev_storage + 1668;
d23862 1
a23862 1
return dev_storage + 1653;
d23877 1
a23877 1
return dev_storage + 1638;
d23892 1
a23892 1
return dev_storage + 1623;
d23907 1
a23907 1
return dev_storage + 1608;
d23922 1
a23922 1
return dev_storage + 1593;
d23937 1
a23937 1
return dev_storage + 1578;
d23952 1
a23952 1
return dev_storage + 1563;
d23967 1
a23967 1
return dev_storage + 1548;
d23982 1
a23982 1
return dev_storage + 1533;
d23997 1
a23997 1
return dev_storage + 325;
d24021 1
a24021 1
return dev_storage + 1492;
d24036 1
a24036 1
return dev_storage + 1477;
d24051 1
a24051 1
return dev_storage + 1462;
d24066 1
a24066 1
return dev_storage + 1447;
d24081 1
a24081 1
return dev_storage + 1432;
d24096 1
a24096 1
return dev_storage + 1417;
d24111 1
a24111 1
return dev_storage + 1402;
d24126 1
a24126 1
return dev_storage + 1387;
d24141 1
a24141 1
return dev_storage + 1372;
d24156 1
a24156 1
return dev_storage + 1357;
d24171 1
a24171 1
return dev_storage + 1342;
d24186 1
a24186 1
return dev_storage + 1327;
d24201 1
a24201 1
return dev_storage + 1312;
d24216 1
a24216 1
return dev_storage + 1297;
d24231 1
a24231 1
return dev_storage + 1282;
d24246 1
a24246 1
return dev_storage + 1267;
d24261 1
a24261 1
return dev_storage + 1252;
d24276 1
a24276 1
return dev_storage + 1237;
d24291 1
a24291 1
return dev_storage + 1222;
d24306 1
a24306 1
return dev_storage + 1207;
d24321 1
a24321 1
return dev_storage + 1192;
d24336 1
a24336 1
return dev_storage + 1177;
d24351 1
a24351 1
return dev_storage + 1162;
d24366 1
a24366 1
return dev_storage + 1147;
d24381 1
a24381 1
return dev_storage + 1132;
d24396 1
a24396 1
return dev_storage + 1117;
d24411 1
a24411 1
return dev_storage + 310;
d24435 1
a24435 1
return dev_storage + 1076;
d24450 1
a24450 1
return dev_storage + 1061;
d24465 1
a24465 1
return dev_storage + 1046;
d24480 1
a24480 1
return dev_storage + 1031;
d24495 1
a24495 1
return dev_storage + 1016;
d24510 1
a24510 1
return dev_storage + 1001;
d24525 1
a24525 1
return dev_storage + 986;
d24540 1
a24540 1
return dev_storage + 971;
d24555 1
a24555 1
return dev_storage + 956;
d24570 1
a24570 1
return dev_storage + 941;
d24585 1
a24585 1
return dev_storage + 926;
d24600 1
a24600 1
return dev_storage + 911;
d24615 1
a24615 1
return dev_storage + 896;
d24630 1
a24630 1
return dev_storage + 881;
d24645 1
a24645 1
return dev_storage + 866;
d24660 1
a24660 1
return dev_storage + 851;
d24675 1
a24675 1
return dev_storage + 836;
d24690 1
a24690 1
return dev_storage + 821;
d24705 1
a24705 1
return dev_storage + 806;
d24720 1
a24720 1
return dev_storage + 791;
d24735 1
a24735 1
return dev_storage + 776;
d24750 1
a24750 1
return dev_storage + 761;
d24765 1
a24765 1
return dev_storage + 746;
d24780 1
a24780 1
return dev_storage + 731;
d24795 1
a24795 1
return dev_storage + 716;
d24810 1
a24810 1
return dev_storage + 701;
d24825 1
a24825 1
return dev_storage + 295;
d24849 1
a24849 1
return dev_storage + 2444;
d24864 1
a24864 1
return dev_storage + 2434;
d24879 1
a24879 1
return dev_storage + 2424;
d24909 1
a24909 1
return dev_storage + 669;
d24923 15
d24942 1
a24942 1
return dev_storage + 2516;
d24954 1
a24954 1
                  if (strncmp (KR_keyword, "/dev/tty63", 10) == 0)
d24957 1
a24957 1
return dev_storage + 2512;
d24969 1
a24969 1
                  if (strncmp (KR_keyword, "/dev/tty53", 10) == 0)
d24972 1
a24972 1
return dev_storage + 2502;
d24984 1
a24984 1
                  if (strncmp (KR_keyword, "/dev/tty43", 10) == 0)
d24987 1
a24987 1
return dev_storage + 2492;
d24999 1
a24999 1
                  if (strncmp (KR_keyword, "/dev/tty33", 10) == 0)
d25002 1
a25002 1
return dev_storage + 2482;
d25014 1
a25014 1
                  if (strncmp (KR_keyword, "/dev/tty23", 10) == 0)
d25017 1
a25017 1
return dev_storage + 2472;
d25031 2
a25032 2
                    case 't':
                      if (strncmp (KR_keyword, "/dev/tty13", 10) == 0)
d25035 1
a25035 1
return dev_storage + 2462;
d25046 2
a25047 2
                    case 's':
                      if (strncmp (KR_keyword, "/dev/sdy13", 10) == 0)
d25050 1
a25050 1
return dev_storage + 654;
d25077 1
a25077 1
return dev_storage + 639;
d25092 1
a25092 1
return dev_storage + 624;
d25107 1
a25107 1
return dev_storage + 609;
d25122 1
a25122 1
return dev_storage + 594;
d25263 1
a25263 1
return dev_storage + 579;
d25305 1
a25305 1
return dev_storage + 564;
d25320 1
a25320 1
return dev_storage + 549;
d25335 1
a25335 1
return dev_storage + 534;
d25350 1
a25350 1
return dev_storage + 519;
d25365 1
a25365 1
return dev_storage + 504;
d25383 1
a25383 1
return dev_storage + 489;
d25422 1
a25422 1
return dev_storage + 474;
d25458 1
a25458 1
return dev_storage + 459;
d25473 1
a25473 1
return dev_storage + 444;
d25488 1
a25488 1
return dev_storage + 429;
d25503 1
a25503 1
return dev_storage + 414;
d25518 1
a25518 1
return dev_storage + 399;
d25533 1
a25533 1
return dev_storage + 384;
d25548 1
a25548 1
return dev_storage + 369;
d25563 1
a25563 1
return dev_storage + 354;
d25581 1
a25581 1
return dev_storage + 2291;
d25596 1
a25596 1
return dev_storage + 2276;
d25611 1
a25611 1
return dev_storage + 2261;
d25626 1
a25626 1
return dev_storage + 2246;
d25641 1
a25641 1
return dev_storage + 2231;
d25656 1
a25656 1
return dev_storage + 2216;
d25671 1
a25671 1
return dev_storage + 2201;
d25686 1
a25686 1
return dev_storage + 2186;
d25701 1
a25701 1
return dev_storage + 2171;
d25716 1
a25716 1
return dev_storage + 2156;
d25731 1
a25731 1
return dev_storage + 2141;
d25746 1
a25746 1
return dev_storage + 2126;
d25761 1
a25761 1
return dev_storage + 2111;
d25776 1
a25776 1
return dev_storage + 2096;
d25791 1
a25791 1
return dev_storage + 2081;
d25806 1
a25806 1
return dev_storage + 2066;
d25821 1
a25821 1
return dev_storage + 2051;
d25836 1
a25836 1
return dev_storage + 2036;
d25851 1
a25851 1
return dev_storage + 2021;
d25866 1
a25866 1
return dev_storage + 2006;
d25881 1
a25881 1
return dev_storage + 1991;
d25896 1
a25896 1
return dev_storage + 1976;
d25911 1
a25911 1
return dev_storage + 1961;
d25926 1
a25926 1
return dev_storage + 1946;
d25944 1
a25944 1
return dev_storage + 339;
d25959 1
a25959 1
return dev_storage + 253;
d25989 1
a25989 1
return dev_storage + 1907;
d26004 1
a26004 1
return dev_storage + 1892;
d26019 1
a26019 1
return dev_storage + 1877;
d26034 1
a26034 1
return dev_storage + 1862;
d26049 1
a26049 1
return dev_storage + 1847;
d26064 1
a26064 1
return dev_storage + 1832;
d26079 1
a26079 1
return dev_storage + 1817;
d26094 1
a26094 1
return dev_storage + 1802;
d26109 1
a26109 1
return dev_storage + 1787;
d26124 1
a26124 1
return dev_storage + 1772;
d26139 1
a26139 1
return dev_storage + 1757;
d26154 1
a26154 1
return dev_storage + 1742;
d26169 1
a26169 1
return dev_storage + 1727;
d26184 1
a26184 1
return dev_storage + 1712;
d26199 1
a26199 1
return dev_storage + 1697;
d26214 1
a26214 1
return dev_storage + 1682;
d26229 1
a26229 1
return dev_storage + 1667;
d26244 1
a26244 1
return dev_storage + 1652;
d26259 1
a26259 1
return dev_storage + 1637;
d26274 1
a26274 1
return dev_storage + 1622;
d26289 1
a26289 1
return dev_storage + 1607;
d26304 1
a26304 1
return dev_storage + 1592;
d26319 1
a26319 1
return dev_storage + 1577;
d26334 1
a26334 1
return dev_storage + 1562;
d26349 1
a26349 1
return dev_storage + 1547;
d26364 1
a26364 1
return dev_storage + 1532;
d26379 1
a26379 1
return dev_storage + 324;
d26403 1
a26403 1
return dev_storage + 1491;
d26418 1
a26418 1
return dev_storage + 1476;
d26433 1
a26433 1
return dev_storage + 1461;
d26448 1
a26448 1
return dev_storage + 1446;
d26463 1
a26463 1
return dev_storage + 1431;
d26478 1
a26478 1
return dev_storage + 1416;
d26493 1
a26493 1
return dev_storage + 1401;
d26508 1
a26508 1
return dev_storage + 1386;
d26523 1
a26523 1
return dev_storage + 1371;
d26538 1
a26538 1
return dev_storage + 1356;
d26553 1
a26553 1
return dev_storage + 1341;
d26568 1
a26568 1
return dev_storage + 1326;
d26583 1
a26583 1
return dev_storage + 1311;
d26598 1
a26598 1
return dev_storage + 1296;
d26613 1
a26613 1
return dev_storage + 1281;
d26628 1
a26628 1
return dev_storage + 1266;
d26643 1
a26643 1
return dev_storage + 1251;
d26658 1
a26658 1
return dev_storage + 1236;
d26673 1
a26673 1
return dev_storage + 1221;
d26688 1
a26688 1
return dev_storage + 1206;
d26703 1
a26703 1
return dev_storage + 1191;
d26718 1
a26718 1
return dev_storage + 1176;
d26733 1
a26733 1
return dev_storage + 1161;
d26748 1
a26748 1
return dev_storage + 1146;
d26763 1
a26763 1
return dev_storage + 1131;
d26778 1
a26778 1
return dev_storage + 1116;
d26793 1
a26793 1
return dev_storage + 309;
d26817 1
a26817 1
return dev_storage + 1075;
d26832 1
a26832 1
return dev_storage + 1060;
d26847 1
a26847 1
return dev_storage + 1045;
d26862 1
a26862 1
return dev_storage + 1030;
d26877 1
a26877 1
return dev_storage + 1015;
d26892 1
a26892 1
return dev_storage + 1000;
d26907 1
a26907 1
return dev_storage + 985;
d26922 1
a26922 1
return dev_storage + 970;
d26937 1
a26937 1
return dev_storage + 955;
d26952 1
a26952 1
return dev_storage + 940;
d26967 1
a26967 1
return dev_storage + 925;
d26982 1
a26982 1
return dev_storage + 910;
d26997 1
a26997 1
return dev_storage + 895;
d27012 1
a27012 1
return dev_storage + 880;
d27027 1
a27027 1
return dev_storage + 865;
d27042 1
a27042 1
return dev_storage + 850;
d27057 1
a27057 1
return dev_storage + 835;
d27072 1
a27072 1
return dev_storage + 820;
d27087 1
a27087 1
return dev_storage + 805;
d27102 1
a27102 1
return dev_storage + 790;
d27117 1
a27117 1
return dev_storage + 775;
d27132 1
a27132 1
return dev_storage + 760;
d27147 1
a27147 1
return dev_storage + 745;
d27162 1
a27162 1
return dev_storage + 730;
d27177 1
a27177 1
return dev_storage + 715;
d27192 1
a27192 1
return dev_storage + 700;
d27207 1
a27207 1
return dev_storage + 294;
d27231 1
a27231 1
return dev_storage + 2443;
d27246 1
a27246 1
return dev_storage + 2433;
d27261 1
a27261 1
return dev_storage + 2423;
d27291 1
a27291 1
return dev_storage + 668;
d27305 15
d27324 1
a27324 1
return dev_storage + 2515;
d27336 1
a27336 1
                  if (strncmp (KR_keyword, "/dev/tty62", 10) == 0)
d27339 1
a27339 1
return dev_storage + 2511;
d27351 1
a27351 1
                  if (strncmp (KR_keyword, "/dev/tty52", 10) == 0)
d27354 1
a27354 1
return dev_storage + 2501;
d27366 1
a27366 1
                  if (strncmp (KR_keyword, "/dev/tty42", 10) == 0)
d27369 1
a27369 1
return dev_storage + 2491;
d27381 1
a27381 1
                  if (strncmp (KR_keyword, "/dev/tty32", 10) == 0)
d27384 1
a27384 1
return dev_storage + 2481;
d27396 1
a27396 1
                  if (strncmp (KR_keyword, "/dev/tty22", 10) == 0)
d27399 1
a27399 1
return dev_storage + 2471;
d27413 2
a27414 2
                    case 't':
                      if (strncmp (KR_keyword, "/dev/tty12", 10) == 0)
d27417 1
a27417 1
return dev_storage + 2461;
d27428 2
a27429 2
                    case 's':
                      if (strncmp (KR_keyword, "/dev/sdy12", 10) == 0)
d27432 1
a27432 1
return dev_storage + 653;
d27459 1
a27459 1
return dev_storage + 638;
d27474 1
a27474 1
return dev_storage + 623;
d27489 1
a27489 1
return dev_storage + 608;
d27504 1
a27504 1
return dev_storage + 593;
d27645 1
a27645 1
return dev_storage + 578;
d27687 1
a27687 1
return dev_storage + 563;
d27702 1
a27702 1
return dev_storage + 548;
d27717 1
a27717 1
return dev_storage + 533;
d27732 1
a27732 1
return dev_storage + 518;
d27747 1
a27747 1
return dev_storage + 503;
d27765 1
a27765 1
return dev_storage + 488;
d27804 1
a27804 1
return dev_storage + 473;
d27840 1
a27840 1
return dev_storage + 458;
d27855 1
a27855 1
return dev_storage + 443;
d27870 1
a27870 1
return dev_storage + 428;
d27885 1
a27885 1
return dev_storage + 413;
d27900 1
a27900 1
return dev_storage + 398;
d27915 1
a27915 1
return dev_storage + 383;
d27930 1
a27930 1
return dev_storage + 368;
d27945 1
a27945 1
return dev_storage + 353;
d27963 1
a27963 1
return dev_storage + 2290;
d27978 1
a27978 1
return dev_storage + 2275;
d27993 1
a27993 1
return dev_storage + 2260;
d28008 1
a28008 1
return dev_storage + 2245;
d28023 1
a28023 1
return dev_storage + 2230;
d28038 1
a28038 1
return dev_storage + 2215;
d28053 1
a28053 1
return dev_storage + 2200;
d28068 1
a28068 1
return dev_storage + 2185;
d28083 1
a28083 1
return dev_storage + 2170;
d28098 1
a28098 1
return dev_storage + 2155;
d28113 1
a28113 1
return dev_storage + 2140;
d28128 1
a28128 1
return dev_storage + 2125;
d28143 1
a28143 1
return dev_storage + 2110;
d28158 1
a28158 1
return dev_storage + 2095;
d28173 1
a28173 1
return dev_storage + 2080;
d28188 1
a28188 1
return dev_storage + 2065;
d28203 1
a28203 1
return dev_storage + 2050;
d28218 1
a28218 1
return dev_storage + 2035;
d28233 1
a28233 1
return dev_storage + 2020;
d28248 1
a28248 1
return dev_storage + 2005;
d28263 1
a28263 1
return dev_storage + 1990;
d28278 1
a28278 1
return dev_storage + 1975;
d28293 1
a28293 1
return dev_storage + 1960;
d28308 1
a28308 1
return dev_storage + 1945;
d28326 1
a28326 1
return dev_storage + 338;
d28341 1
a28341 1
return dev_storage + 252;
d28371 1
a28371 1
return dev_storage + 1906;
d28386 1
a28386 1
return dev_storage + 1891;
d28401 1
a28401 1
return dev_storage + 1876;
d28416 1
a28416 1
return dev_storage + 1861;
d28431 1
a28431 1
return dev_storage + 1846;
d28446 1
a28446 1
return dev_storage + 1831;
d28461 1
a28461 1
return dev_storage + 1816;
d28476 1
a28476 1
return dev_storage + 1801;
d28491 1
a28491 1
return dev_storage + 1786;
d28506 1
a28506 1
return dev_storage + 1771;
d28521 1
a28521 1
return dev_storage + 1756;
d28536 1
a28536 1
return dev_storage + 1741;
d28551 1
a28551 1
return dev_storage + 1726;
d28566 1
a28566 1
return dev_storage + 1711;
d28581 1
a28581 1
return dev_storage + 1696;
d28596 1
a28596 1
return dev_storage + 1681;
d28611 1
a28611 1
return dev_storage + 1666;
d28626 1
a28626 1
return dev_storage + 1651;
d28641 1
a28641 1
return dev_storage + 1636;
d28656 1
a28656 1
return dev_storage + 1621;
d28671 1
a28671 1
return dev_storage + 1606;
d28686 1
a28686 1
return dev_storage + 1591;
d28701 1
a28701 1
return dev_storage + 1576;
d28716 1
a28716 1
return dev_storage + 1561;
d28731 1
a28731 1
return dev_storage + 1546;
d28746 1
a28746 1
return dev_storage + 1531;
d28761 1
a28761 1
return dev_storage + 323;
d28785 1
a28785 1
return dev_storage + 1490;
d28800 1
a28800 1
return dev_storage + 1475;
d28815 1
a28815 1
return dev_storage + 1460;
d28830 1
a28830 1
return dev_storage + 1445;
d28845 1
a28845 1
return dev_storage + 1430;
d28860 1
a28860 1
return dev_storage + 1415;
d28875 1
a28875 1
return dev_storage + 1400;
d28890 1
a28890 1
return dev_storage + 1385;
d28905 1
a28905 1
return dev_storage + 1370;
d28920 1
a28920 1
return dev_storage + 1355;
d28935 1
a28935 1
return dev_storage + 1340;
d28950 1
a28950 1
return dev_storage + 1325;
d28965 1
a28965 1
return dev_storage + 1310;
d28980 1
a28980 1
return dev_storage + 1295;
d28995 1
a28995 1
return dev_storage + 1280;
d29010 1
a29010 1
return dev_storage + 1265;
d29025 1
a29025 1
return dev_storage + 1250;
d29040 1
a29040 1
return dev_storage + 1235;
d29055 1
a29055 1
return dev_storage + 1220;
d29070 1
a29070 1
return dev_storage + 1205;
d29085 1
a29085 1
return dev_storage + 1190;
d29100 1
a29100 1
return dev_storage + 1175;
d29115 1
a29115 1
return dev_storage + 1160;
d29130 1
a29130 1
return dev_storage + 1145;
d29145 1
a29145 1
return dev_storage + 1130;
d29160 1
a29160 1
return dev_storage + 1115;
d29175 1
a29175 1
return dev_storage + 308;
d29199 1
a29199 1
return dev_storage + 1074;
d29214 1
a29214 1
return dev_storage + 1059;
d29229 1
a29229 1
return dev_storage + 1044;
d29244 1
a29244 1
return dev_storage + 1029;
d29259 1
a29259 1
return dev_storage + 1014;
d29274 1
a29274 1
return dev_storage + 999;
d29289 1
a29289 1
return dev_storage + 984;
d29304 1
a29304 1
return dev_storage + 969;
d29319 1
a29319 1
return dev_storage + 954;
d29334 1
a29334 1
return dev_storage + 939;
d29349 1
a29349 1
return dev_storage + 924;
d29364 1
a29364 1
return dev_storage + 909;
d29379 1
a29379 1
return dev_storage + 894;
d29394 1
a29394 1
return dev_storage + 879;
d29409 1
a29409 1
return dev_storage + 864;
d29424 1
a29424 1
return dev_storage + 849;
d29439 1
a29439 1
return dev_storage + 834;
d29454 1
a29454 1
return dev_storage + 819;
d29469 1
a29469 1
return dev_storage + 804;
d29484 1
a29484 1
return dev_storage + 789;
d29499 1
a29499 1
return dev_storage + 774;
d29514 1
a29514 1
return dev_storage + 759;
d29529 1
a29529 1
return dev_storage + 744;
d29544 1
a29544 1
return dev_storage + 729;
d29559 1
a29559 1
return dev_storage + 714;
d29574 1
a29574 1
return dev_storage + 699;
d29589 1
a29589 1
return dev_storage + 293;
d29613 1
a29613 1
return dev_storage + 2442;
d29628 1
a29628 1
return dev_storage + 2432;
d29643 1
a29643 1
return dev_storage + 2422;
d29673 1
a29673 1
return dev_storage + 667;
d29687 15
d29706 1
a29706 1
return dev_storage + 2514;
d29718 1
a29718 1
                  if (strncmp (KR_keyword, "/dev/tty61", 10) == 0)
d29721 1
a29721 1
return dev_storage + 2510;
d29733 1
a29733 1
                  if (strncmp (KR_keyword, "/dev/tty51", 10) == 0)
d29736 1
a29736 1
return dev_storage + 2500;
d29748 1
a29748 1
                  if (strncmp (KR_keyword, "/dev/tty41", 10) == 0)
d29751 1
a29751 1
return dev_storage + 2490;
d29763 1
a29763 1
                  if (strncmp (KR_keyword, "/dev/tty31", 10) == 0)
d29766 1
a29766 1
return dev_storage + 2480;
d29778 1
a29778 1
                  if (strncmp (KR_keyword, "/dev/tty21", 10) == 0)
d29781 1
a29781 1
return dev_storage + 2470;
d29795 2
a29796 2
                    case 't':
                      if (strncmp (KR_keyword, "/dev/tty11", 10) == 0)
d29799 1
a29799 1
return dev_storage + 2460;
d29810 2
a29811 2
                    case 's':
                      if (strncmp (KR_keyword, "/dev/sdy11", 10) == 0)
d29814 1
a29814 1
return dev_storage + 652;
d29841 1
a29841 1
return dev_storage + 637;
d29856 1
a29856 1
return dev_storage + 622;
d29871 1
a29871 1
return dev_storage + 607;
d29886 1
a29886 1
return dev_storage + 592;
d30027 1
a30027 1
return dev_storage + 577;
d30069 1
a30069 1
return dev_storage + 562;
d30084 1
a30084 1
return dev_storage + 547;
d30099 1
a30099 1
return dev_storage + 532;
d30114 1
a30114 1
return dev_storage + 517;
d30129 1
a30129 1
return dev_storage + 502;
d30147 1
a30147 1
return dev_storage + 487;
d30186 1
a30186 1
return dev_storage + 472;
d30222 1
a30222 1
return dev_storage + 457;
d30237 1
a30237 1
return dev_storage + 442;
d30252 1
a30252 1
return dev_storage + 427;
d30267 1
a30267 1
return dev_storage + 412;
d30282 1
a30282 1
return dev_storage + 397;
d30297 1
a30297 1
return dev_storage + 382;
d30312 1
a30312 1
return dev_storage + 367;
d30327 1
a30327 1
return dev_storage + 352;
d30345 1
a30345 1
return dev_storage + 2289;
d30360 1
a30360 1
return dev_storage + 2274;
d30375 1
a30375 1
return dev_storage + 2259;
d30390 1
a30390 1
return dev_storage + 2244;
d30405 1
a30405 1
return dev_storage + 2229;
d30420 1
a30420 1
return dev_storage + 2214;
d30435 1
a30435 1
return dev_storage + 2199;
d30450 1
a30450 1
return dev_storage + 2184;
d30465 1
a30465 1
return dev_storage + 2169;
d30480 1
a30480 1
return dev_storage + 2154;
d30495 1
a30495 1
return dev_storage + 2139;
d30510 1
a30510 1
return dev_storage + 2124;
d30525 1
a30525 1
return dev_storage + 2109;
d30540 1
a30540 1
return dev_storage + 2094;
d30555 1
a30555 1
return dev_storage + 2079;
d30570 1
a30570 1
return dev_storage + 2064;
d30585 1
a30585 1
return dev_storage + 2049;
d30600 1
a30600 1
return dev_storage + 2034;
d30615 1
a30615 1
return dev_storage + 2019;
d30630 1
a30630 1
return dev_storage + 2004;
d30645 1
a30645 1
return dev_storage + 1989;
d30660 1
a30660 1
return dev_storage + 1974;
d30675 1
a30675 1
return dev_storage + 1959;
d30690 1
a30690 1
return dev_storage + 1944;
d30708 1
a30708 1
return dev_storage + 337;
d30723 1
a30723 1
return dev_storage + 251;
d30753 1
a30753 1
return dev_storage + 1905;
d30768 1
a30768 1
return dev_storage + 1890;
d30783 1
a30783 1
return dev_storage + 1875;
d30798 1
a30798 1
return dev_storage + 1860;
d30813 1
a30813 1
return dev_storage + 1845;
d30828 1
a30828 1
return dev_storage + 1830;
d30843 1
a30843 1
return dev_storage + 1815;
d30858 1
a30858 1
return dev_storage + 1800;
d30873 1
a30873 1
return dev_storage + 1785;
d30888 1
a30888 1
return dev_storage + 1770;
d30903 1
a30903 1
return dev_storage + 1755;
d30918 1
a30918 1
return dev_storage + 1740;
d30933 1
a30933 1
return dev_storage + 1725;
d30948 1
a30948 1
return dev_storage + 1710;
d30963 1
a30963 1
return dev_storage + 1695;
d30978 1
a30978 1
return dev_storage + 1680;
d30993 1
a30993 1
return dev_storage + 1665;
d31008 1
a31008 1
return dev_storage + 1650;
d31023 1
a31023 1
return dev_storage + 1635;
d31038 1
a31038 1
return dev_storage + 1620;
d31053 1
a31053 1
return dev_storage + 1605;
d31068 1
a31068 1
return dev_storage + 1590;
d31083 1
a31083 1
return dev_storage + 1575;
d31098 1
a31098 1
return dev_storage + 1560;
d31113 1
a31113 1
return dev_storage + 1545;
d31128 1
a31128 1
return dev_storage + 1530;
d31143 1
a31143 1
return dev_storage + 322;
d31167 1
a31167 1
return dev_storage + 1489;
d31182 1
a31182 1
return dev_storage + 1474;
d31197 1
a31197 1
return dev_storage + 1459;
d31212 1
a31212 1
return dev_storage + 1444;
d31227 1
a31227 1
return dev_storage + 1429;
d31242 1
a31242 1
return dev_storage + 1414;
d31257 1
a31257 1
return dev_storage + 1399;
d31272 1
a31272 1
return dev_storage + 1384;
d31287 1
a31287 1
return dev_storage + 1369;
d31302 1
a31302 1
return dev_storage + 1354;
d31317 1
a31317 1
return dev_storage + 1339;
d31332 1
a31332 1
return dev_storage + 1324;
d31347 1
a31347 1
return dev_storage + 1309;
d31362 1
a31362 1
return dev_storage + 1294;
d31377 1
a31377 1
return dev_storage + 1279;
d31392 1
a31392 1
return dev_storage + 1264;
d31407 1
a31407 1
return dev_storage + 1249;
d31422 1
a31422 1
return dev_storage + 1234;
d31437 1
a31437 1
return dev_storage + 1219;
d31452 1
a31452 1
return dev_storage + 1204;
d31467 1
a31467 1
return dev_storage + 1189;
d31482 1
a31482 1
return dev_storage + 1174;
d31497 1
a31497 1
return dev_storage + 1159;
d31512 1
a31512 1
return dev_storage + 1144;
d31527 1
a31527 1
return dev_storage + 1129;
d31542 1
a31542 1
return dev_storage + 1114;
d31557 1
a31557 1
return dev_storage + 307;
d31581 1
a31581 1
return dev_storage + 1073;
d31596 1
a31596 1
return dev_storage + 1058;
d31611 1
a31611 1
return dev_storage + 1043;
d31626 1
a31626 1
return dev_storage + 1028;
d31641 1
a31641 1
return dev_storage + 1013;
d31656 1
a31656 1
return dev_storage + 998;
d31671 1
a31671 1
return dev_storage + 983;
d31686 1
a31686 1
return dev_storage + 968;
d31701 1
a31701 1
return dev_storage + 953;
d31716 1
a31716 1
return dev_storage + 938;
d31731 1
a31731 1
return dev_storage + 923;
d31746 1
a31746 1
return dev_storage + 908;
d31761 1
a31761 1
return dev_storage + 893;
d31776 1
a31776 1
return dev_storage + 878;
d31791 1
a31791 1
return dev_storage + 863;
d31806 1
a31806 1
return dev_storage + 848;
d31821 1
a31821 1
return dev_storage + 833;
d31836 1
a31836 1
return dev_storage + 818;
d31851 1
a31851 1
return dev_storage + 803;
d31866 1
a31866 1
return dev_storage + 788;
d31881 1
a31881 1
return dev_storage + 773;
d31896 1
a31896 1
return dev_storage + 758;
d31911 1
a31911 1
return dev_storage + 743;
d31926 1
a31926 1
return dev_storage + 728;
d31941 1
a31941 1
return dev_storage + 713;
d31956 1
a31956 1
return dev_storage + 698;
d31971 1
a31971 1
return dev_storage + 292;
d31995 1
a31995 1
return dev_storage + 2441;
d32010 1
a32010 1
return dev_storage + 2431;
d32025 1
a32025 1
return dev_storage + 2421;
d32055 1
a32055 1
return dev_storage + 666;
d32069 15
d32088 1
a32088 1
return dev_storage + 2513;
d32100 1
a32100 1
                  if (strncmp (KR_keyword, "/dev/tty60", 10) == 0)
d32103 1
a32103 1
return dev_storage + 2509;
d32115 1
a32115 1
                  if (strncmp (KR_keyword, "/dev/tty50", 10) == 0)
d32118 1
a32118 1
return dev_storage + 2499;
d32130 1
a32130 1
                  if (strncmp (KR_keyword, "/dev/tty40", 10) == 0)
d32133 1
a32133 1
return dev_storage + 2489;
d32145 1
a32145 1
                  if (strncmp (KR_keyword, "/dev/tty30", 10) == 0)
d32148 1
a32148 1
return dev_storage + 2479;
d32160 1
a32160 1
                  if (strncmp (KR_keyword, "/dev/tty20", 10) == 0)
d32163 1
a32163 1
return dev_storage + 2469;
d32177 2
a32178 2
                    case 't':
                      if (strncmp (KR_keyword, "/dev/tty10", 10) == 0)
d32181 1
a32181 1
return dev_storage + 2459;
d32192 2
a32193 2
                    case 's':
                      if (strncmp (KR_keyword, "/dev/sdy10", 10) == 0)
d32196 1
a32196 1
return dev_storage + 651;
d32223 1
a32223 1
return dev_storage + 636;
d32238 1
a32238 1
return dev_storage + 621;
d32253 1
a32253 1
return dev_storage + 606;
d32268 1
a32268 1
return dev_storage + 591;
d32409 1
a32409 1
return dev_storage + 576;
d32451 1
a32451 1
return dev_storage + 561;
d32466 1
a32466 1
return dev_storage + 546;
d32481 1
a32481 1
return dev_storage + 531;
d32496 1
a32496 1
return dev_storage + 516;
d32511 1
a32511 1
return dev_storage + 501;
d32529 1
a32529 1
return dev_storage + 486;
d32568 1
a32568 1
return dev_storage + 471;
d32604 1
a32604 1
return dev_storage + 456;
d32619 1
a32619 1
return dev_storage + 441;
d32634 1
a32634 1
return dev_storage + 426;
d32649 1
a32649 1
return dev_storage + 411;
d32664 1
a32664 1
return dev_storage + 396;
d32679 1
a32679 1
return dev_storage + 381;
d32694 1
a32694 1
return dev_storage + 366;
d32709 1
a32709 1
return dev_storage + 351;
d32727 1
a32727 1
return dev_storage + 336;
d32742 1
a32742 1
return dev_storage + 250;
d32763 1
a32763 1
return dev_storage + 321;
d32778 1
a32778 1
return dev_storage + 306;
d32793 1
a32793 1
return dev_storage + 291;
d32811 1
a32811 1
return dev_storage + 2440;
d32826 1
a32826 1
return dev_storage + 2430;
d32841 1
a32841 1
return dev_storage + 2420;
d32892 1
a32892 1
return dev_storage + 239;
d32913 16
a32928 1
return dev_storage + 2572;
d32967 16
a32982 1
return dev_storage + 2562;
d33021 16
a33036 1
return dev_storage + 2552;
d33075 16
a33090 1
return dev_storage + 2542;
d33129 16
a33144 1
return dev_storage + 2532;
d33222 16
a33237 1
return dev_storage + 2571;
d33276 16
a33291 1
return dev_storage + 2561;
d33330 16
a33345 1
return dev_storage + 2551;
d33384 16
a33399 1
return dev_storage + 2541;
d33438 16
a33453 1
return dev_storage + 2531;
d33531 16
a33546 1
return dev_storage + 2570;
d33585 16
a33600 1
return dev_storage + 2560;
d33639 16
a33654 1
return dev_storage + 2550;
d33693 16
a33708 1
return dev_storage + 2540;
d33762 16
a33777 1
return dev_storage + 2530;
d33855 16
a33870 1
return dev_storage + 2569;
d33909 16
a33924 1
return dev_storage + 2559;
d33963 16
a33978 1
return dev_storage + 2549;
d34017 16
a34032 1
return dev_storage + 2539;
d34086 16
a34101 1
return dev_storage + 2529;
d34173 1
a34173 1
              switch (KR_keyword [9])
d34175 2
a34176 2
                case '5':
                  if (strncmp (KR_keyword, "/dev/ttyS55", 11) == 0)
d34178 76
d34255 1
a34255 1
return dev_storage + 2568;
d34259 2
a34260 1
                  else
d34262 10
d34276 4
a34279 4
                    }
                case '4':
                  if (strncmp (KR_keyword, "/dev/ttyS45", 11) == 0)
                    {
d34281 1
a34281 1
return dev_storage + 2558;
d34284 3
a34286 3
                    }
                  else
                    {
d34291 4
a34294 4
                    }
                case '3':
                  if (strncmp (KR_keyword, "/dev/ttyS35", 11) == 0)
                    {
d34296 1
a34296 1
return dev_storage + 2548;
d34299 3
a34301 3
                    }
                  else
                    {
d34306 4
a34309 4
                    }
                case '2':
                  if (strncmp (KR_keyword, "/dev/ttyS25", 11) == 0)
                    {
d34311 1
a34311 1
return dev_storage + 2538;
d34314 3
a34316 3
                    }
                  else
                    {
d34321 11
a34331 4
                    }
                case '1':
                  if (strncmp (KR_keyword, "/dev/ttyS15", 11) == 0)
                    {
d34333 1
a34333 1
return dev_storage + 2528;
d34336 2
a34337 3
                    }
                  else
                    {
d34494 1
a34494 1
return dev_storage + 2303;
d34509 1
a34509 1
return dev_storage + 2288;
d34524 1
a34524 1
return dev_storage + 2273;
d34539 1
a34539 1
return dev_storage + 2258;
d34554 1
a34554 1
return dev_storage + 2243;
d34569 1
a34569 1
return dev_storage + 2228;
d34584 1
a34584 1
return dev_storage + 2213;
d34599 1
a34599 1
return dev_storage + 2198;
d34614 1
a34614 1
return dev_storage + 2183;
d34629 1
a34629 1
return dev_storage + 2168;
d34644 1
a34644 1
return dev_storage + 2153;
d34659 1
a34659 1
return dev_storage + 2138;
d34674 1
a34674 1
return dev_storage + 2123;
d34689 1
a34689 1
return dev_storage + 2108;
d34704 1
a34704 1
return dev_storage + 2093;
d34719 1
a34719 1
return dev_storage + 2078;
d34734 1
a34734 1
return dev_storage + 2063;
d34749 1
a34749 1
return dev_storage + 2048;
d34764 1
a34764 1
return dev_storage + 2033;
d34779 1
a34779 1
return dev_storage + 2018;
d34794 1
a34794 1
return dev_storage + 2003;
d34809 1
a34809 1
return dev_storage + 1988;
d34824 1
a34824 1
return dev_storage + 1973;
d34839 1
a34839 1
return dev_storage + 1958;
d34863 1
a34863 1
return dev_storage + 1919;
d34878 1
a34878 1
return dev_storage + 1904;
d34893 1
a34893 1
return dev_storage + 1889;
d34908 1
a34908 1
return dev_storage + 1874;
d34923 1
a34923 1
return dev_storage + 1859;
d34938 1
a34938 1
return dev_storage + 1844;
d34953 1
a34953 1
return dev_storage + 1829;
d34968 1
a34968 1
return dev_storage + 1814;
d34983 1
a34983 1
return dev_storage + 1799;
d34998 1
a34998 1
return dev_storage + 1784;
d35013 1
a35013 1
return dev_storage + 1769;
d35028 1
a35028 1
return dev_storage + 1754;
d35043 1
a35043 1
return dev_storage + 1739;
d35058 1
a35058 1
return dev_storage + 1724;
d35073 1
a35073 1
return dev_storage + 1709;
d35088 1
a35088 1
return dev_storage + 1694;
d35103 1
a35103 1
return dev_storage + 1679;
d35118 1
a35118 1
return dev_storage + 1664;
d35133 1
a35133 1
return dev_storage + 1649;
d35148 1
a35148 1
return dev_storage + 1634;
d35163 1
a35163 1
return dev_storage + 1619;
d35178 1
a35178 1
return dev_storage + 1604;
d35193 1
a35193 1
return dev_storage + 1589;
d35208 1
a35208 1
return dev_storage + 1574;
d35223 1
a35223 1
return dev_storage + 1559;
d35238 1
a35238 1
return dev_storage + 1544;
d35262 1
a35262 1
return dev_storage + 1503;
d35277 1
a35277 1
return dev_storage + 1488;
d35292 1
a35292 1
return dev_storage + 1473;
d35307 1
a35307 1
return dev_storage + 1458;
d35322 1
a35322 1
return dev_storage + 1443;
d35337 1
a35337 1
return dev_storage + 1428;
d35352 1
a35352 1
return dev_storage + 1413;
d35367 1
a35367 1
return dev_storage + 1398;
d35382 1
a35382 1
return dev_storage + 1383;
d35397 1
a35397 1
return dev_storage + 1368;
d35412 1
a35412 1
return dev_storage + 1353;
d35427 1
a35427 1
return dev_storage + 1338;
d35442 1
a35442 1
return dev_storage + 1323;
d35457 1
a35457 1
return dev_storage + 1308;
d35472 1
a35472 1
return dev_storage + 1293;
d35487 1
a35487 1
return dev_storage + 1278;
d35502 1
a35502 1
return dev_storage + 1263;
d35517 1
a35517 1
return dev_storage + 1248;
d35532 1
a35532 1
return dev_storage + 1233;
d35547 1
a35547 1
return dev_storage + 1218;
d35562 1
a35562 1
return dev_storage + 1203;
d35577 1
a35577 1
return dev_storage + 1188;
d35592 1
a35592 1
return dev_storage + 1173;
d35607 1
a35607 1
return dev_storage + 1158;
d35622 1
a35622 1
return dev_storage + 1143;
d35637 1
a35637 1
return dev_storage + 1128;
d35661 1
a35661 1
return dev_storage + 1087;
d35676 1
a35676 1
return dev_storage + 1072;
d35691 1
a35691 1
return dev_storage + 1057;
d35706 1
a35706 1
return dev_storage + 1042;
d35721 1
a35721 1
return dev_storage + 1027;
d35736 1
a35736 1
return dev_storage + 1012;
d35751 1
a35751 1
return dev_storage + 997;
d35766 1
a35766 1
return dev_storage + 982;
d35781 1
a35781 1
return dev_storage + 967;
d35796 1
a35796 1
return dev_storage + 952;
d35811 1
a35811 1
return dev_storage + 937;
d35826 1
a35826 1
return dev_storage + 922;
d35841 1
a35841 1
return dev_storage + 907;
d35856 1
a35856 1
return dev_storage + 892;
d35871 1
a35871 1
return dev_storage + 877;
d35886 1
a35886 1
return dev_storage + 862;
d35901 1
a35901 1
return dev_storage + 847;
d35916 1
a35916 1
return dev_storage + 832;
d35931 1
a35931 1
return dev_storage + 817;
d35946 1
a35946 1
return dev_storage + 802;
d35961 1
a35961 1
return dev_storage + 787;
d35976 1
a35976 1
return dev_storage + 772;
d35991 1
a35991 1
return dev_storage + 757;
d36006 1
a36006 1
return dev_storage + 742;
d36021 1
a36021 1
return dev_storage + 727;
d36036 1
a36036 1
return dev_storage + 712;
d36063 1
a36063 1
              switch (KR_keyword [9])
d36065 2
a36066 2
                case '5':
                  if (strncmp (KR_keyword, "/dev/ttyS54", 11) == 0)
d36068 70
d36139 7
a36145 1
return dev_storage + 2567;
d36149 2
a36150 1
                  else
d36152 10
d36166 4
a36169 4
                    }
                case '4':
                  if (strncmp (KR_keyword, "/dev/ttyS44", 11) == 0)
                    {
d36171 1
a36171 1
return dev_storage + 2557;
d36174 3
a36176 3
                    }
                  else
                    {
d36181 4
a36184 4
                    }
                case '3':
                  if (strncmp (KR_keyword, "/dev/ttyS34", 11) == 0)
                    {
d36186 1
a36186 1
return dev_storage + 2547;
d36189 3
a36191 3
                    }
                  else
                    {
d36196 4
a36199 4
                    }
                case '2':
                  if (strncmp (KR_keyword, "/dev/ttyS24", 11) == 0)
                    {
d36201 1
a36201 1
return dev_storage + 2537;
d36204 3
a36206 3
                    }
                  else
                    {
d36211 11
a36221 4
                    }
                case '1':
                  if (strncmp (KR_keyword, "/dev/ttyS14", 11) == 0)
                    {
d36223 1
a36223 1
return dev_storage + 2527;
d36226 2
a36227 3
                    }
                  else
                    {
d36384 1
a36384 1
return dev_storage + 2302;
d36399 1
a36399 1
return dev_storage + 2287;
d36414 1
a36414 1
return dev_storage + 2272;
d36429 1
a36429 1
return dev_storage + 2257;
d36444 1
a36444 1
return dev_storage + 2242;
d36459 1
a36459 1
return dev_storage + 2227;
d36474 1
a36474 1
return dev_storage + 2212;
d36489 1
a36489 1
return dev_storage + 2197;
d36504 1
a36504 1
return dev_storage + 2182;
d36519 1
a36519 1
return dev_storage + 2167;
d36534 1
a36534 1
return dev_storage + 2152;
d36549 1
a36549 1
return dev_storage + 2137;
d36564 1
a36564 1
return dev_storage + 2122;
d36579 1
a36579 1
return dev_storage + 2107;
d36594 1
a36594 1
return dev_storage + 2092;
d36609 1
a36609 1
return dev_storage + 2077;
d36624 1
a36624 1
return dev_storage + 2062;
d36639 1
a36639 1
return dev_storage + 2047;
d36654 1
a36654 1
return dev_storage + 2032;
d36669 1
a36669 1
return dev_storage + 2017;
d36684 1
a36684 1
return dev_storage + 2002;
d36699 1
a36699 1
return dev_storage + 1987;
d36714 1
a36714 1
return dev_storage + 1972;
d36729 1
a36729 1
return dev_storage + 1957;
d36753 1
a36753 1
return dev_storage + 1918;
d36768 1
a36768 1
return dev_storage + 1903;
d36783 1
a36783 1
return dev_storage + 1888;
d36798 1
a36798 1
return dev_storage + 1873;
d36813 1
a36813 1
return dev_storage + 1858;
d36828 1
a36828 1
return dev_storage + 1843;
d36843 1
a36843 1
return dev_storage + 1828;
d36858 1
a36858 1
return dev_storage + 1813;
d36873 1
a36873 1
return dev_storage + 1798;
d36888 1
a36888 1
return dev_storage + 1783;
d36903 1
a36903 1
return dev_storage + 1768;
d36918 1
a36918 1
return dev_storage + 1753;
d36933 1
a36933 1
return dev_storage + 1738;
d36948 1
a36948 1
return dev_storage + 1723;
d36963 1
a36963 1
return dev_storage + 1708;
d36978 1
a36978 1
return dev_storage + 1693;
d36993 1
a36993 1
return dev_storage + 1678;
d37008 1
a37008 1
return dev_storage + 1663;
d37023 1
a37023 1
return dev_storage + 1648;
d37038 1
a37038 1
return dev_storage + 1633;
d37053 1
a37053 1
return dev_storage + 1618;
d37068 1
a37068 1
return dev_storage + 1603;
d37083 1
a37083 1
return dev_storage + 1588;
d37098 1
a37098 1
return dev_storage + 1573;
d37113 1
a37113 1
return dev_storage + 1558;
d37128 1
a37128 1
return dev_storage + 1543;
d37152 1
a37152 1
return dev_storage + 1502;
d37167 1
a37167 1
return dev_storage + 1487;
d37182 1
a37182 1
return dev_storage + 1472;
d37197 1
a37197 1
return dev_storage + 1457;
d37212 1
a37212 1
return dev_storage + 1442;
d37227 1
a37227 1
return dev_storage + 1427;
d37242 1
a37242 1
return dev_storage + 1412;
d37257 1
a37257 1
return dev_storage + 1397;
d37272 1
a37272 1
return dev_storage + 1382;
d37287 1
a37287 1
return dev_storage + 1367;
d37302 1
a37302 1
return dev_storage + 1352;
d37317 1
a37317 1
return dev_storage + 1337;
d37332 1
a37332 1
return dev_storage + 1322;
d37347 1
a37347 1
return dev_storage + 1307;
d37362 1
a37362 1
return dev_storage + 1292;
d37377 1
a37377 1
return dev_storage + 1277;
d37392 1
a37392 1
return dev_storage + 1262;
d37407 1
a37407 1
return dev_storage + 1247;
d37422 1
a37422 1
return dev_storage + 1232;
d37437 1
a37437 1
return dev_storage + 1217;
d37452 1
a37452 1
return dev_storage + 1202;
d37467 1
a37467 1
return dev_storage + 1187;
d37482 1
a37482 1
return dev_storage + 1172;
d37497 1
a37497 1
return dev_storage + 1157;
d37512 1
a37512 1
return dev_storage + 1142;
d37527 1
a37527 1
return dev_storage + 1127;
d37551 1
a37551 1
return dev_storage + 1086;
d37566 1
a37566 1
return dev_storage + 1071;
d37581 1
a37581 1
return dev_storage + 1056;
d37596 1
a37596 1
return dev_storage + 1041;
d37611 1
a37611 1
return dev_storage + 1026;
d37626 1
a37626 1
return dev_storage + 1011;
d37641 1
a37641 1
return dev_storage + 996;
d37656 1
a37656 1
return dev_storage + 981;
d37671 1
a37671 1
return dev_storage + 966;
d37686 1
a37686 1
return dev_storage + 951;
d37701 1
a37701 1
return dev_storage + 936;
d37716 1
a37716 1
return dev_storage + 921;
d37731 1
a37731 1
return dev_storage + 906;
d37746 1
a37746 1
return dev_storage + 891;
d37761 1
a37761 1
return dev_storage + 876;
d37776 1
a37776 1
return dev_storage + 861;
d37791 1
a37791 1
return dev_storage + 846;
d37806 1
a37806 1
return dev_storage + 831;
d37821 1
a37821 1
return dev_storage + 816;
d37836 1
a37836 1
return dev_storage + 801;
d37851 1
a37851 1
return dev_storage + 786;
d37866 1
a37866 1
return dev_storage + 771;
d37881 1
a37881 1
return dev_storage + 756;
d37896 1
a37896 1
return dev_storage + 741;
d37911 1
a37911 1
return dev_storage + 726;
d37926 1
a37926 1
return dev_storage + 711;
d37950 1
a37950 1
          switch (KR_keyword [7])
d37952 2
a37953 2
            case 'y':
              switch (KR_keyword [9])
d37955 2
a37956 2
                case '6':
                  if (strncmp (KR_keyword, "/dev/ttyS63", 11) == 0)
d37959 1
a37959 1
return dev_storage + 2576;
d37970 2
a37971 2
                case '5':
                  if (strncmp (KR_keyword, "/dev/ttyS53", 11) == 0)
d37974 1
a37974 1
return dev_storage + 2566;
d37985 2
a37986 2
                case '4':
                  if (strncmp (KR_keyword, "/dev/ttyS43", 11) == 0)
d37989 1
a37989 1
return dev_storage + 2556;
d38000 11
a38010 2
                case '3':
                  if (strncmp (KR_keyword, "/dev/ttyS33", 11) == 0)
d38013 1
a38013 1
return dev_storage + 2546;
d38024 2
a38025 2
                case '2':
                  if (strncmp (KR_keyword, "/dev/ttyS23", 11) == 0)
d38028 1
a38028 1
return dev_storage + 2536;
d38039 2
a38040 2
                case '1':
                  if (strncmp (KR_keyword, "/dev/ttyS13", 11) == 0)
d38043 1
a38043 1
return dev_storage + 2526;
d38060 2
a38061 2
            case 't':
              switch (KR_keyword [9])
d38063 2
a38064 2
                case '2':
                  if (strncmp (KR_keyword, "/dev/nst123", 11) == 0)
d38067 1
a38067 1
return dev_storage + 230;
d38078 2
a38079 2
                case '1':
                  if (strncmp (KR_keyword, "/dev/nst113", 11) == 0)
d38082 1
a38082 1
return dev_storage + 220;
d38093 2
a38094 2
                case '0':
                  if (strncmp (KR_keyword, "/dev/nst103", 11) == 0)
d38097 1
a38097 1
return dev_storage + 210;
d38108 2
a38109 11
                default:
{
return	NULL;

}
                }
            case 'n':
              switch (KR_keyword [9])
                {
                case '6':
                  if (strncmp (KR_keyword, "/dev/cons63", 11) == 0)
d38112 1
a38112 1
return dev_storage + 83;
d38123 1
a38123 10
                case '5':
                  if (strncmp (KR_keyword, "/dev/cons53", 11) == 0)
                    {
{
return dev_storage + 73;

}
                    }
                  else
                    {
d38128 6
a38133 3
                    }
                case '4':
                  if (strncmp (KR_keyword, "/dev/cons43", 11) == 0)
d38136 1
a38136 1
return dev_storage + 63;
d38147 2
a38148 2
                case '3':
                  if (strncmp (KR_keyword, "/dev/cons33", 11) == 0)
d38151 1
a38151 1
return dev_storage + 53;
d38162 2
a38163 2
                case '2':
                  if (strncmp (KR_keyword, "/dev/cons23", 11) == 0)
d38166 1
a38166 1
return dev_storage + 43;
d38177 2
a38178 2
                case '1':
                  if (strncmp (KR_keyword, "/dev/cons13", 11) == 0)
d38181 1
a38181 1
return dev_storage + 33;
d38198 2
a38199 2
            case 'd':
              switch (KR_keyword [8])
d38201 2
a38202 2
                case 'x':
                  if (strncmp (KR_keyword, "/dev/sddx13", 11) == 0)
d38205 1
a38205 1
return dev_storage + 2301;
d38216 2
a38217 2
                case 'w':
                  if (strncmp (KR_keyword, "/dev/sddw13", 11) == 0)
d38220 1
a38220 1
return dev_storage + 2286;
d38231 2
a38232 2
                case 'v':
                  if (strncmp (KR_keyword, "/dev/sddv13", 11) == 0)
d38235 1
a38235 1
return dev_storage + 2271;
d38246 2
a38247 2
                case 'u':
                  if (strncmp (KR_keyword, "/dev/sddu13", 11) == 0)
d38250 1
a38250 1
return dev_storage + 2256;
d38261 11
a38271 2
                case 't':
                  if (strncmp (KR_keyword, "/dev/sddt13", 11) == 0)
d38274 1
a38274 1
return dev_storage + 2241;
d38285 2
a38286 2
                case 's':
                  if (strncmp (KR_keyword, "/dev/sdds13", 11) == 0)
d38289 1
a38289 1
return dev_storage + 2226;
d38300 2
a38301 2
                case 'r':
                  if (strncmp (KR_keyword, "/dev/sddr13", 11) == 0)
d38304 1
a38304 1
return dev_storage + 2211;
d38315 2
a38316 2
                case 'q':
                  if (strncmp (KR_keyword, "/dev/sddq13", 11) == 0)
d38319 1
a38319 1
return dev_storage + 2196;
d38330 11
a38340 2
                case 'p':
                  if (strncmp (KR_keyword, "/dev/sddp13", 11) == 0)
d38343 1
a38343 1
return dev_storage + 2181;
d38354 2
a38355 2
                case 'o':
                  if (strncmp (KR_keyword, "/dev/sddo13", 11) == 0)
d38358 1
a38358 1
return dev_storage + 2166;
d38369 2
a38370 2
                case 'n':
                  if (strncmp (KR_keyword, "/dev/sddn13", 11) == 0)
d38373 1
a38373 1
return dev_storage + 2151;
d38384 2
a38385 2
                case 'm':
                  if (strncmp (KR_keyword, "/dev/sddm13", 11) == 0)
d38388 1
a38388 1
return dev_storage + 2136;
d38399 11
a38409 2
                case 'l':
                  if (strncmp (KR_keyword, "/dev/sddl13", 11) == 0)
d38412 1
a38412 1
return dev_storage + 2121;
d38423 2
a38424 2
                case 'k':
                  if (strncmp (KR_keyword, "/dev/sddk13", 11) == 0)
d38427 1
a38427 1
return dev_storage + 2106;
d38438 2
a38439 2
                case 'j':
                  if (strncmp (KR_keyword, "/dev/sddj13", 11) == 0)
d38442 1
a38442 1
return dev_storage + 2091;
d38453 2
a38454 2
                case 'i':
                  if (strncmp (KR_keyword, "/dev/sddi13", 11) == 0)
d38457 1
a38457 1
return dev_storage + 2076;
d38468 2
a38469 2
                case 'h':
                  if (strncmp (KR_keyword, "/dev/sddh13", 11) == 0)
d38472 1
a38472 1
return dev_storage + 2061;
d38483 2
a38484 2
                case 'g':
                  if (strncmp (KR_keyword, "/dev/sddg13", 11) == 0)
d38486 48
d38535 1
a38535 1
return dev_storage + 2046;
d38538 3
a38540 3
                    }
                  else
                    {
d38545 4
a38548 4
                    }
                case 'f':
                  if (strncmp (KR_keyword, "/dev/sddf13", 11) == 0)
                    {
d38550 1
a38550 1
return dev_storage + 2031;
d38553 3
a38555 3
                    }
                  else
                    {
d38560 2
a38561 4
                    }
                case 'e':
                  if (strncmp (KR_keyword, "/dev/sdde13", 11) == 0)
                    {
d38563 1
a38563 1
return dev_storage + 2016;
d38567 1
a38567 2
                  else
                    {
d38572 4
a38575 1
                    }
d38577 1
a38577 1
                  if (strncmp (KR_keyword, "/dev/sddd13", 11) == 0)
d38580 1
a38580 1
return dev_storage + 2001;
d38592 1
a38592 1
                  if (strncmp (KR_keyword, "/dev/sddc13", 11) == 0)
d38595 1
a38595 1
return dev_storage + 1986;
d38607 1
a38607 1
                  if (strncmp (KR_keyword, "/dev/sddb13", 11) == 0)
d38610 1
a38610 1
return dev_storage + 1971;
d38622 1
a38622 1
                  if (strncmp (KR_keyword, "/dev/sdda13", 11) == 0)
d38625 1
a38625 1
return dev_storage + 1956;
d38642 2
a38643 2
            case 'c':
              switch (KR_keyword [8])
d38645 2
a38646 2
                case 'z':
                  if (strncmp (KR_keyword, "/dev/sdcz13", 11) == 0)
d38649 1
a38649 1
return dev_storage + 1917;
d38660 2
a38661 2
                case 'y':
                  if (strncmp (KR_keyword, "/dev/sdcy13", 11) == 0)
d38664 1
a38664 1
return dev_storage + 1902;
d38675 2
a38676 2
                case 'x':
                  if (strncmp (KR_keyword, "/dev/sdcx13", 11) == 0)
d38679 1
a38679 1
return dev_storage + 1887;
d38690 2
a38691 2
                case 'w':
                  if (strncmp (KR_keyword, "/dev/sdcw13", 11) == 0)
d38694 1
a38694 1
return dev_storage + 1872;
d38705 11
a38715 2
                case 'v':
                  if (strncmp (KR_keyword, "/dev/sdcv13", 11) == 0)
d38718 1
a38718 1
return dev_storage + 1857;
d38729 2
a38730 2
                case 'u':
                  if (strncmp (KR_keyword, "/dev/sdcu13", 11) == 0)
d38733 1
a38733 1
return dev_storage + 1842;
d38744 2
a38745 2
                case 't':
                  if (strncmp (KR_keyword, "/dev/sdct13", 11) == 0)
d38748 1
a38748 1
return dev_storage + 1827;
d38759 2
a38760 2
                case 's':
                  if (strncmp (KR_keyword, "/dev/sdcs13", 11) == 0)
d38763 1
a38763 1
return dev_storage + 1812;
d38774 11
a38784 2
                case 'r':
                  if (strncmp (KR_keyword, "/dev/sdcr13", 11) == 0)
d38787 1
a38787 1
return dev_storage + 1797;
d38798 2
a38799 2
                case 'q':
                  if (strncmp (KR_keyword, "/dev/sdcq13", 11) == 0)
d38802 1
a38802 1
return dev_storage + 1782;
d38813 2
a38814 2
                case 'p':
                  if (strncmp (KR_keyword, "/dev/sdcp13", 11) == 0)
d38817 1
a38817 1
return dev_storage + 1767;
d38828 2
a38829 2
                case 'o':
                  if (strncmp (KR_keyword, "/dev/sdco13", 11) == 0)
d38832 1
a38832 1
return dev_storage + 1752;
d38843 11
a38853 2
                case 'n':
                  if (strncmp (KR_keyword, "/dev/sdcn13", 11) == 0)
d38856 1
a38856 1
return dev_storage + 1737;
d38867 2
a38868 2
                case 'm':
                  if (strncmp (KR_keyword, "/dev/sdcm13", 11) == 0)
d38871 1
a38871 1
return dev_storage + 1722;
d38882 2
a38883 2
                case 'l':
                  if (strncmp (KR_keyword, "/dev/sdcl13", 11) == 0)
d38886 1
a38886 1
return dev_storage + 1707;
d38897 2
a38898 2
                case 'k':
                  if (strncmp (KR_keyword, "/dev/sdck13", 11) == 0)
d38901 1
a38901 1
return dev_storage + 1692;
d38912 11
a38922 2
                case 'j':
                  if (strncmp (KR_keyword, "/dev/sdcj13", 11) == 0)
d38925 1
a38925 1
return dev_storage + 1677;
d38936 2
a38937 2
                case 'i':
                  if (strncmp (KR_keyword, "/dev/sdci13", 11) == 0)
d38940 1
a38940 1
return dev_storage + 1662;
d38951 2
a38952 2
                case 'h':
                  if (strncmp (KR_keyword, "/dev/sdch13", 11) == 0)
d38955 1
a38955 1
return dev_storage + 1647;
d38966 2
a38967 2
                case 'g':
                  if (strncmp (KR_keyword, "/dev/sdcg13", 11) == 0)
d38970 1
a38970 1
return dev_storage + 1632;
d38981 2
a38982 2
                case 'f':
                  if (strncmp (KR_keyword, "/dev/sdcf13", 11) == 0)
d38985 1
a38985 1
return dev_storage + 1617;
d38996 2
a38997 2
                case 'e':
                  if (strncmp (KR_keyword, "/dev/sdce13", 11) == 0)
d38999 3
d39003 1
a39003 1
return dev_storage + 1602;
d39006 3
a39008 3
                    }
                  else
                    {
d39013 4
a39016 4
                    }
                case 'd':
                  if (strncmp (KR_keyword, "/dev/sdcd13", 11) == 0)
                    {
d39018 1
a39018 1
return dev_storage + 1587;
d39021 3
a39023 3
                    }
                  else
                    {
d39028 4
a39031 4
                    }
                case 'c':
                  if (strncmp (KR_keyword, "/dev/sdcc13", 11) == 0)
                    {
d39033 1
a39033 1
return dev_storage + 1572;
d39036 3
a39038 3
                    }
                  else
                    {
d39043 4
a39046 4
                    }
                case 'b':
                  if (strncmp (KR_keyword, "/dev/sdcb13", 11) == 0)
                    {
d39048 1
a39048 1
return dev_storage + 1557;
d39051 3
a39053 3
                    }
                  else
                    {
d39058 11
a39068 4
                    }
                case 'a':
                  if (strncmp (KR_keyword, "/dev/sdca13", 11) == 0)
                    {
d39070 1
a39070 1
return dev_storage + 1542;
d39073 2
a39074 3
                    }
                  else
                    {
d39086 2
a39087 2
            case 'b':
              switch (KR_keyword [8])
d39089 2
a39090 2
                case 'z':
                  if (strncmp (KR_keyword, "/dev/sdbz13", 11) == 0)
d39093 1
a39093 1
return dev_storage + 1501;
d39104 2
a39105 2
                case 'y':
                  if (strncmp (KR_keyword, "/dev/sdby13", 11) == 0)
d39108 1
a39108 1
return dev_storage + 1486;
d39119 2
a39120 2
                case 'x':
                  if (strncmp (KR_keyword, "/dev/sdbx13", 11) == 0)
d39123 1
a39123 1
return dev_storage + 1471;
d39134 2
a39135 2
                case 'w':
                  if (strncmp (KR_keyword, "/dev/sdbw13", 11) == 0)
d39138 1
a39138 1
return dev_storage + 1456;
d39149 11
a39159 2
                case 'v':
                  if (strncmp (KR_keyword, "/dev/sdbv13", 11) == 0)
d39162 1
a39162 1
return dev_storage + 1441;
d39173 2
a39174 2
                case 'u':
                  if (strncmp (KR_keyword, "/dev/sdbu13", 11) == 0)
d39177 1
a39177 1
return dev_storage + 1426;
d39188 2
a39189 2
                case 't':
                  if (strncmp (KR_keyword, "/dev/sdbt13", 11) == 0)
d39192 1
a39192 1
return dev_storage + 1411;
d39203 2
a39204 2
                case 's':
                  if (strncmp (KR_keyword, "/dev/sdbs13", 11) == 0)
d39207 1
a39207 1
return dev_storage + 1396;
d39218 11
a39228 2
                case 'r':
                  if (strncmp (KR_keyword, "/dev/sdbr13", 11) == 0)
d39231 1
a39231 1
return dev_storage + 1381;
d39242 2
a39243 2
                case 'q':
                  if (strncmp (KR_keyword, "/dev/sdbq13", 11) == 0)
d39246 1
a39246 1
return dev_storage + 1366;
d39257 2
a39258 2
                case 'p':
                  if (strncmp (KR_keyword, "/dev/sdbp13", 11) == 0)
d39261 1
a39261 1
return dev_storage + 1351;
d39272 2
a39273 2
                case 'o':
                  if (strncmp (KR_keyword, "/dev/sdbo13", 11) == 0)
d39276 1
a39276 1
return dev_storage + 1336;
d39287 11
a39297 2
                case 'n':
                  if (strncmp (KR_keyword, "/dev/sdbn13", 11) == 0)
d39300 1
a39300 1
return dev_storage + 1321;
d39311 2
a39312 2
                case 'm':
                  if (strncmp (KR_keyword, "/dev/sdbm13", 11) == 0)
d39315 1
a39315 1
return dev_storage + 1306;
d39326 2
a39327 2
                case 'l':
                  if (strncmp (KR_keyword, "/dev/sdbl13", 11) == 0)
d39330 1
a39330 1
return dev_storage + 1291;
d39341 2
a39342 2
                case 'k':
                  if (strncmp (KR_keyword, "/dev/sdbk13", 11) == 0)
d39345 1
a39345 1
return dev_storage + 1276;
d39356 1
a39356 10
                case 'j':
                  if (strncmp (KR_keyword, "/dev/sdbj13", 11) == 0)
                    {
{
return dev_storage + 1261;

}
                    }
                  else
                    {
d39361 6
a39366 3
                    }
                case 'i':
                  if (strncmp (KR_keyword, "/dev/sdbi13", 11) == 0)
d39369 1
a39369 1
return dev_storage + 1246;
d39380 2
a39381 2
                case 'h':
                  if (strncmp (KR_keyword, "/dev/sdbh13", 11) == 0)
d39384 1
a39384 1
return dev_storage + 1231;
d39395 2
a39396 2
                case 'g':
                  if (strncmp (KR_keyword, "/dev/sdbg13", 11) == 0)
d39399 1
a39399 1
return dev_storage + 1216;
d39410 2
a39411 2
                case 'f':
                  if (strncmp (KR_keyword, "/dev/sdbf13", 11) == 0)
d39414 1
a39414 1
return dev_storage + 1201;
d39425 1
a39425 10
                case 'e':
                  if (strncmp (KR_keyword, "/dev/sdbe13", 11) == 0)
                    {
{
return dev_storage + 1186;

}
                    }
                  else
                    {
d39430 4
a39433 1
                    }
d39435 1
a39435 1
                  if (strncmp (KR_keyword, "/dev/sdbd13", 11) == 0)
d39438 1
a39438 1
return dev_storage + 1171;
d39450 1
a39450 1
                  if (strncmp (KR_keyword, "/dev/sdbc13", 11) == 0)
d39453 1
a39453 1
return dev_storage + 1156;
d39465 1
a39465 1
                  if (strncmp (KR_keyword, "/dev/sdbb13", 11) == 0)
d39468 1
a39468 1
return dev_storage + 1141;
d39480 1
a39480 1
                  if (strncmp (KR_keyword, "/dev/sdba13", 11) == 0)
d39483 1
a39483 1
return dev_storage + 1126;
d39500 2
a39501 2
            case 'a':
              switch (KR_keyword [8])
d39503 2
a39504 2
                case 'z':
                  if (strncmp (KR_keyword, "/dev/sdaz13", 11) == 0)
d39507 1
a39507 1
return dev_storage + 1085;
d39518 2
a39519 2
                case 'y':
                  if (strncmp (KR_keyword, "/dev/sday13", 11) == 0)
d39522 1
a39522 1
return dev_storage + 1070;
d39533 2
a39534 2
                case 'x':
                  if (strncmp (KR_keyword, "/dev/sdax13", 11) == 0)
d39537 1
a39537 1
return dev_storage + 1055;
d39548 2
a39549 2
                case 'w':
                  if (strncmp (KR_keyword, "/dev/sdaw13", 11) == 0)
d39552 1
a39552 1
return dev_storage + 1040;
d39563 11
a39573 2
                case 'v':
                  if (strncmp (KR_keyword, "/dev/sdav13", 11) == 0)
d39576 1
a39576 1
return dev_storage + 1025;
d39587 2
a39588 2
                case 'u':
                  if (strncmp (KR_keyword, "/dev/sdau13", 11) == 0)
d39591 1
a39591 1
return dev_storage + 1010;
d39602 2
a39603 2
                case 't':
                  if (strncmp (KR_keyword, "/dev/sdat13", 11) == 0)
d39606 1
a39606 1
return dev_storage + 995;
d39617 2
a39618 2
                case 's':
                  if (strncmp (KR_keyword, "/dev/sdas13", 11) == 0)
d39621 1
a39621 1
return dev_storage + 980;
d39632 11
a39642 2
                case 'r':
                  if (strncmp (KR_keyword, "/dev/sdar13", 11) == 0)
d39645 1
a39645 1
return dev_storage + 965;
d39656 2
a39657 2
                case 'q':
                  if (strncmp (KR_keyword, "/dev/sdaq13", 11) == 0)
d39660 1
a39660 1
return dev_storage + 950;
d39671 2
a39672 2
                case 'p':
                  if (strncmp (KR_keyword, "/dev/sdap13", 11) == 0)
d39675 1
a39675 1
return dev_storage + 935;
d39686 2
a39687 2
                case 'o':
                  if (strncmp (KR_keyword, "/dev/sdao13", 11) == 0)
d39690 1
a39690 1
return dev_storage + 920;
d39701 11
a39711 2
                case 'n':
                  if (strncmp (KR_keyword, "/dev/sdan13", 11) == 0)
d39714 1
a39714 1
return dev_storage + 905;
d39725 2
a39726 2
                case 'm':
                  if (strncmp (KR_keyword, "/dev/sdam13", 11) == 0)
d39729 1
a39729 1
return dev_storage + 890;
d39740 2
a39741 2
                case 'l':
                  if (strncmp (KR_keyword, "/dev/sdal13", 11) == 0)
d39744 1
a39744 1
return dev_storage + 875;
d39755 2
a39756 2
                case 'k':
                  if (strncmp (KR_keyword, "/dev/sdak13", 11) == 0)
d39759 1
a39759 1
return dev_storage + 860;
d39770 1
a39770 10
                case 'j':
                  if (strncmp (KR_keyword, "/dev/sdaj13", 11) == 0)
                    {
{
return dev_storage + 845;

}
                    }
                  else
                    {
d39775 6
a39780 3
                    }
                case 'i':
                  if (strncmp (KR_keyword, "/dev/sdai13", 11) == 0)
d39783 1
a39783 1
return dev_storage + 830;
d39794 2
a39795 2
                case 'h':
                  if (strncmp (KR_keyword, "/dev/sdah13", 11) == 0)
d39798 1
a39798 1
return dev_storage + 815;
d39809 2
a39810 2
                case 'g':
                  if (strncmp (KR_keyword, "/dev/sdag13", 11) == 0)
d39813 1
a39813 1
return dev_storage + 800;
d39824 2
a39825 2
                case 'f':
                  if (strncmp (KR_keyword, "/dev/sdaf13", 11) == 0)
d39828 1
a39828 1
return dev_storage + 785;
d39839 1
a39839 10
                case 'e':
                  if (strncmp (KR_keyword, "/dev/sdae13", 11) == 0)
                    {
{
return dev_storage + 770;

}
                    }
                  else
                    {
d39844 4
a39847 1
                    }
d39849 1
a39849 1
                  if (strncmp (KR_keyword, "/dev/sdad13", 11) == 0)
d39852 1
a39852 1
return dev_storage + 755;
d39864 1
a39864 1
                  if (strncmp (KR_keyword, "/dev/sdac13", 11) == 0)
d39867 1
a39867 1
return dev_storage + 740;
d39879 1
a39879 1
                  if (strncmp (KR_keyword, "/dev/sdab13", 11) == 0)
d39882 1
a39882 1
return dev_storage + 725;
d39897 1
a39897 1
return dev_storage + 710;
d39914 1
a39914 10
            default:
{
return	NULL;

}
            }
        case '2':
          switch (KR_keyword [7])
            {
            case 'y':
d39918 1
a39918 1
                  if (strncmp (KR_keyword, "/dev/ttyS62", 11) == 0)
d39921 1
a39921 1
return dev_storage + 2575;
d39933 1
a39933 1
                  if (strncmp (KR_keyword, "/dev/ttyS52", 11) == 0)
d39936 1
a39936 1
return dev_storage + 2565;
d39948 1
a39948 1
                  if (strncmp (KR_keyword, "/dev/ttyS42", 11) == 0)
d39951 1
a39951 1
return dev_storage + 2555;
d39963 1
a39963 1
                  if (strncmp (KR_keyword, "/dev/ttyS32", 11) == 0)
d39966 1
a39966 1
return dev_storage + 2545;
d39978 1
a39978 1
                  if (strncmp (KR_keyword, "/dev/ttyS22", 11) == 0)
d39981 1
a39981 1
return dev_storage + 2535;
d39993 1
a39993 1
                  if (strncmp (KR_keyword, "/dev/ttyS12", 11) == 0)
d39996 1
a39996 1
return dev_storage + 2525;
d40013 1
a40013 1
            case 't':
d40017 1
a40017 1
                  if (strncmp (KR_keyword, "/dev/nst122", 11) == 0)
d40020 1
a40020 1
return dev_storage + 229;
d40032 1
a40032 1
                  if (strncmp (KR_keyword, "/dev/nst112", 11) == 0)
d40035 1
a40035 1
return dev_storage + 219;
d40047 1
a40047 1
                  if (strncmp (KR_keyword, "/dev/nst102", 11) == 0)
d40050 1
a40050 1
return dev_storage + 209;
d40067 11
a40077 2
            case 'n':
              switch (KR_keyword [9])
d40079 2
a40080 2
                case '6':
                  if (strncmp (KR_keyword, "/dev/cons62", 11) == 0)
d40083 1
a40083 1
return dev_storage + 82;
d40094 2
a40095 2
                case '5':
                  if (strncmp (KR_keyword, "/dev/cons52", 11) == 0)
d40098 1
a40098 1
return dev_storage + 72;
d40109 2
a40110 2
                case '4':
                  if (strncmp (KR_keyword, "/dev/cons42", 11) == 0)
d40113 1
a40113 1
return dev_storage + 62;
d40124 11
a40134 2
                case '3':
                  if (strncmp (KR_keyword, "/dev/cons32", 11) == 0)
d40137 1
a40137 1
return dev_storage + 52;
d40148 2
a40149 2
                case '2':
                  if (strncmp (KR_keyword, "/dev/cons22", 11) == 0)
d40152 1
a40152 1
return dev_storage + 42;
d40163 2
a40164 2
                case '1':
                  if (strncmp (KR_keyword, "/dev/cons12", 11) == 0)
d40167 1
a40167 1
return dev_storage + 32;
d40184 2
a40185 2
            case 'd':
              switch (KR_keyword [8])
d40187 1
a40187 1
                case 'x':
d40191 1
a40191 1
return dev_storage + 2300;
d40202 2
a40203 2
                case 'w':
                  if (strncmp (KR_keyword, "/dev/sddw12", 11) == 0)
d40206 1
a40206 1
return dev_storage + 2285;
d40217 2
a40218 2
                case 'v':
                  if (strncmp (KR_keyword, "/dev/sddv12", 11) == 0)
d40221 1
a40221 1
return dev_storage + 2270;
d40232 2
a40233 2
                case 'u':
                  if (strncmp (KR_keyword, "/dev/sddu12", 11) == 0)
d40236 1
a40236 1
return dev_storage + 2255;
d40247 1
a40247 10
                case 't':
                  if (strncmp (KR_keyword, "/dev/sddt12", 11) == 0)
                    {
{
return dev_storage + 2240;

}
                    }
                  else
                    {
d40252 6
a40257 3
                    }
                case 's':
                  if (strncmp (KR_keyword, "/dev/sdds12", 11) == 0)
d40260 1
a40260 1
return dev_storage + 2225;
d40271 2
a40272 2
                case 'r':
                  if (strncmp (KR_keyword, "/dev/sddr12", 11) == 0)
d40275 1
a40275 1
return dev_storage + 2210;
d40286 2
a40287 2
                case 'q':
                  if (strncmp (KR_keyword, "/dev/sddq12", 11) == 0)
d40290 1
a40290 1
return dev_storage + 2195;
d40301 2
a40302 2
                case 'p':
                  if (strncmp (KR_keyword, "/dev/sddp12", 11) == 0)
d40305 1
a40305 1
return dev_storage + 2180;
d40316 1
a40316 10
                case 'o':
                  if (strncmp (KR_keyword, "/dev/sddo12", 11) == 0)
                    {
{
return dev_storage + 2165;

}
                    }
                  else
                    {
d40321 6
a40326 3
                    }
                case 'n':
                  if (strncmp (KR_keyword, "/dev/sddn12", 11) == 0)
d40329 1
a40329 1
return dev_storage + 2150;
d40340 2
a40341 2
                case 'm':
                  if (strncmp (KR_keyword, "/dev/sddm12", 11) == 0)
d40344 1
a40344 1
return dev_storage + 2135;
d40355 2
a40356 2
                case 'l':
                  if (strncmp (KR_keyword, "/dev/sddl12", 11) == 0)
d40359 1
a40359 1
return dev_storage + 2120;
d40370 2
a40371 2
                case 'k':
                  if (strncmp (KR_keyword, "/dev/sddk12", 11) == 0)
d40374 1
a40374 1
return dev_storage + 2105;
d40385 1
a40385 10
                case 'j':
                  if (strncmp (KR_keyword, "/dev/sddj12", 11) == 0)
                    {
{
return dev_storage + 2090;

}
                    }
                  else
                    {
d40390 6
a40395 3
                    }
                case 'i':
                  if (strncmp (KR_keyword, "/dev/sddi12", 11) == 0)
d40398 1
a40398 1
return dev_storage + 2075;
d40409 2
a40410 2
                case 'h':
                  if (strncmp (KR_keyword, "/dev/sddh12", 11) == 0)
d40413 1
a40413 1
return dev_storage + 2060;
d40424 2
a40425 2
                case 'g':
                  if (strncmp (KR_keyword, "/dev/sddg12", 11) == 0)
d40428 1
a40428 1
return dev_storage + 2045;
d40439 2
a40440 2
                case 'f':
                  if (strncmp (KR_keyword, "/dev/sddf12", 11) == 0)
d40443 1
a40443 1
return dev_storage + 2030;
d40454 1
a40454 10
                case 'e':
                  if (strncmp (KR_keyword, "/dev/sdde12", 11) == 0)
                    {
{
return dev_storage + 2015;

}
                    }
                  else
                    {
d40459 4
a40462 1
                    }
d40464 1
a40464 1
                  if (strncmp (KR_keyword, "/dev/sddd12", 11) == 0)
d40467 1
a40467 1
return dev_storage + 2000;
d40479 1
a40479 1
                  if (strncmp (KR_keyword, "/dev/sddc12", 11) == 0)
d40482 1
a40482 1
return dev_storage + 1985;
d40494 1
a40494 1
                  if (strncmp (KR_keyword, "/dev/sddb12", 11) == 0)
d40497 1
a40497 1
return dev_storage + 1970;
d40509 1
a40509 1
                  if (strncmp (KR_keyword, "/dev/sdda12", 11) == 0)
d40512 1
a40512 1
return dev_storage + 1955;
d40529 2
a40530 2
            case 'c':
              switch (KR_keyword [8])
d40532 2
a40533 2
                case 'z':
                  if (strncmp (KR_keyword, "/dev/sdcz12", 11) == 0)
d40536 1
a40536 1
return dev_storage + 1916;
d40547 2
a40548 2
                case 'y':
                  if (strncmp (KR_keyword, "/dev/sdcy12", 11) == 0)
d40551 1
a40551 1
return dev_storage + 1901;
d40562 2
a40563 2
                case 'x':
                  if (strncmp (KR_keyword, "/dev/sdcx12", 11) == 0)
d40566 1
a40566 1
return dev_storage + 1886;
d40577 2
a40578 2
                case 'w':
                  if (strncmp (KR_keyword, "/dev/sdcw12", 11) == 0)
d40581 1
a40581 1
return dev_storage + 1871;
d40592 2
a40593 2
                case 'v':
                  if (strncmp (KR_keyword, "/dev/sdcv12", 11) == 0)
d40596 1
a40596 1
return dev_storage + 1856;
d40607 2
a40608 2
                case 'u':
                  if (strncmp (KR_keyword, "/dev/sdcu12", 11) == 0)
d40610 18
d40629 1
a40629 1
return dev_storage + 1841;
d40632 3
a40634 3
                    }
                  else
                    {
d40639 4
a40642 4
                    }
                case 't':
                  if (strncmp (KR_keyword, "/dev/sdct12", 11) == 0)
                    {
d40644 1
a40644 1
return dev_storage + 1826;
d40647 3
a40649 3
                    }
                  else
                    {
d40654 4
a40657 4
                    }
                case 's':
                  if (strncmp (KR_keyword, "/dev/sdcs12", 11) == 0)
                    {
d40659 1
a40659 1
return dev_storage + 1811;
d40662 3
a40664 3
                    }
                  else
                    {
d40669 4
a40672 4
                    }
                case 'r':
                  if (strncmp (KR_keyword, "/dev/sdcr12", 11) == 0)
                    {
d40674 1
a40674 1
return dev_storage + 1796;
d40677 3
a40679 3
                    }
                  else
                    {
d40684 2
a40685 4
                    }
                case 'q':
                  if (strncmp (KR_keyword, "/dev/sdcq12", 11) == 0)
                    {
d40687 1
a40687 1
return dev_storage + 1781;
d40691 1
a40691 2
                  else
                    {
d40696 6
a40701 3
                    }
                case 'p':
                  if (strncmp (KR_keyword, "/dev/sdcp12", 11) == 0)
d40704 1
a40704 1
return dev_storage + 1766;
d40715 2
a40716 2
                case 'o':
                  if (strncmp (KR_keyword, "/dev/sdco12", 11) == 0)
d40719 1
a40719 1
return dev_storage + 1751;
d40730 2
a40731 2
                case 'n':
                  if (strncmp (KR_keyword, "/dev/sdcn12", 11) == 0)
d40734 1
a40734 1
return dev_storage + 1736;
d40745 2
a40746 2
                case 'm':
                  if (strncmp (KR_keyword, "/dev/sdcm12", 11) == 0)
d40749 1
a40749 1
return dev_storage + 1721;
d40760 11
a40770 2
                case 'l':
                  if (strncmp (KR_keyword, "/dev/sdcl12", 11) == 0)
d40773 1
a40773 1
return dev_storage + 1706;
d40784 2
a40785 2
                case 'k':
                  if (strncmp (KR_keyword, "/dev/sdck12", 11) == 0)
d40788 1
a40788 1
return dev_storage + 1691;
d40799 2
a40800 2
                case 'j':
                  if (strncmp (KR_keyword, "/dev/sdcj12", 11) == 0)
d40803 1
a40803 1
return dev_storage + 1676;
d40814 2
a40815 2
                case 'i':
                  if (strncmp (KR_keyword, "/dev/sdci12", 11) == 0)
d40818 1
a40818 1
return dev_storage + 1661;
d40829 11
a40839 2
                case 'h':
                  if (strncmp (KR_keyword, "/dev/sdch12", 11) == 0)
d40842 1
a40842 1
return dev_storage + 1646;
d40853 2
a40854 2
                case 'g':
                  if (strncmp (KR_keyword, "/dev/sdcg12", 11) == 0)
d40857 1
a40857 1
return dev_storage + 1631;
d40868 2
a40869 2
                case 'f':
                  if (strncmp (KR_keyword, "/dev/sdcf12", 11) == 0)
d40872 1
a40872 1
return dev_storage + 1616;
d40883 2
a40884 2
                case 'e':
                  if (strncmp (KR_keyword, "/dev/sdce12", 11) == 0)
d40887 1
a40887 1
return dev_storage + 1601;
d40898 9
d40908 1
a40908 1
                  if (strncmp (KR_keyword, "/dev/sdcd12", 11) == 0)
d40911 1
a40911 1
return dev_storage + 1586;
d40923 1
a40923 1
                  if (strncmp (KR_keyword, "/dev/sdcc12", 11) == 0)
d40926 1
a40926 1
return dev_storage + 1571;
d40938 1
a40938 1
                  if (strncmp (KR_keyword, "/dev/sdcb12", 11) == 0)
d40941 1
a40941 1
return dev_storage + 1556;
d40953 1
a40953 1
                  if (strncmp (KR_keyword, "/dev/sdca12", 11) == 0)
d40956 1
a40956 1
return dev_storage + 1541;
d40973 2
a40974 2
            case 'b':
              switch (KR_keyword [8])
d40976 2
a40977 2
                case 'z':
                  if (strncmp (KR_keyword, "/dev/sdbz12", 11) == 0)
d40980 1
a40980 1
return dev_storage + 1500;
d40991 2
a40992 2
                case 'y':
                  if (strncmp (KR_keyword, "/dev/sdby12", 11) == 0)
d40995 1
a40995 1
return dev_storage + 1485;
d41006 2
a41007 2
                case 'x':
                  if (strncmp (KR_keyword, "/dev/sdbx12", 11) == 0)
d41010 1
a41010 1
return dev_storage + 1470;
d41021 2
a41022 2
                case 'w':
                  if (strncmp (KR_keyword, "/dev/sdbw12", 11) == 0)
d41025 1
a41025 1
return dev_storage + 1455;
d41036 11
a41046 2
                case 'v':
                  if (strncmp (KR_keyword, "/dev/sdbv12", 11) == 0)
d41049 1
a41049 1
return dev_storage + 1440;
d41060 2
a41061 2
                case 'u':
                  if (strncmp (KR_keyword, "/dev/sdbu12", 11) == 0)
d41064 1
a41064 1
return dev_storage + 1425;
d41075 2
a41076 2
                case 't':
                  if (strncmp (KR_keyword, "/dev/sdbt12", 11) == 0)
d41079 1
a41079 1
return dev_storage + 1410;
d41090 2
a41091 2
                case 's':
                  if (strncmp (KR_keyword, "/dev/sdbs12", 11) == 0)
d41094 1
a41094 1
return dev_storage + 1395;
d41105 2
a41106 2
                case 'r':
                  if (strncmp (KR_keyword, "/dev/sdbr12", 11) == 0)
d41109 1
a41109 1
return dev_storage + 1380;
d41120 2
a41121 2
                case 'q':
                  if (strncmp (KR_keyword, "/dev/sdbq12", 11) == 0)
d41123 76
d41200 1
a41200 1
return dev_storage + 1365;
d41204 1
a41204 2
                  else
                    {
d41209 6
a41214 3
                    }
                case 'p':
                  if (strncmp (KR_keyword, "/dev/sdbp12", 11) == 0)
d41217 1
a41217 1
return dev_storage + 1350;
d41228 2
a41229 2
                case 'o':
                  if (strncmp (KR_keyword, "/dev/sdbo12", 11) == 0)
d41232 1
a41232 1
return dev_storage + 1335;
d41243 2
a41244 2
                case 'n':
                  if (strncmp (KR_keyword, "/dev/sdbn12", 11) == 0)
d41247 1
a41247 1
return dev_storage + 1320;
d41258 2
a41259 2
                case 'm':
                  if (strncmp (KR_keyword, "/dev/sdbm12", 11) == 0)
d41262 1
a41262 1
return dev_storage + 1305;
d41273 11
a41283 2
                case 'l':
                  if (strncmp (KR_keyword, "/dev/sdbl12", 11) == 0)
d41286 1
a41286 1
return dev_storage + 1290;
d41297 2
a41298 2
                case 'k':
                  if (strncmp (KR_keyword, "/dev/sdbk12", 11) == 0)
d41301 1
a41301 1
return dev_storage + 1275;
d41312 2
a41313 2
                case 'j':
                  if (strncmp (KR_keyword, "/dev/sdbj12", 11) == 0)
d41316 1
a41316 1
return dev_storage + 1260;
d41327 2
a41328 2
                case 'i':
                  if (strncmp (KR_keyword, "/dev/sdbi12", 11) == 0)
d41331 1
a41331 1
return dev_storage + 1245;
d41342 11
a41352 2
                case 'h':
                  if (strncmp (KR_keyword, "/dev/sdbh12", 11) == 0)
d41355 1
a41355 1
return dev_storage + 1230;
d41366 2
a41367 2
                case 'g':
                  if (strncmp (KR_keyword, "/dev/sdbg12", 11) == 0)
d41370 1
a41370 1
return dev_storage + 1215;
d41381 2
a41382 2
                case 'f':
                  if (strncmp (KR_keyword, "/dev/sdbf12", 11) == 0)
d41385 1
a41385 1
return dev_storage + 1200;
d41396 2
a41397 2
                case 'e':
                  if (strncmp (KR_keyword, "/dev/sdbe12", 11) == 0)
d41400 1
a41400 1
return dev_storage + 1185;
d41411 9
d41421 1
a41421 1
                  if (strncmp (KR_keyword, "/dev/sdbd12", 11) == 0)
d41424 1
a41424 1
return dev_storage + 1170;
d41436 1
a41436 1
                  if (strncmp (KR_keyword, "/dev/sdbc12", 11) == 0)
d41439 1
a41439 1
return dev_storage + 1155;
d41451 1
a41451 1
                  if (strncmp (KR_keyword, "/dev/sdbb12", 11) == 0)
d41454 1
a41454 1
return dev_storage + 1140;
d41466 1
a41466 1
                  if (strncmp (KR_keyword, "/dev/sdba12", 11) == 0)
d41469 1
a41469 1
return dev_storage + 1125;
d41486 2
a41487 2
            case 'a':
              switch (KR_keyword [8])
d41489 2
a41490 2
                case 'z':
                  if (strncmp (KR_keyword, "/dev/sdaz12", 11) == 0)
d41493 1
a41493 1
return dev_storage + 1084;
d41504 2
a41505 2
                case 'y':
                  if (strncmp (KR_keyword, "/dev/sday12", 11) == 0)
d41508 1
a41508 1
return dev_storage + 1069;
d41519 2
a41520 2
                case 'x':
                  if (strncmp (KR_keyword, "/dev/sdax12", 11) == 0)
d41523 1
a41523 1
return dev_storage + 1054;
d41534 2
a41535 2
                case 'w':
                  if (strncmp (KR_keyword, "/dev/sdaw12", 11) == 0)
d41538 1
a41538 1
return dev_storage + 1039;
d41549 11
a41559 2
                case 'v':
                  if (strncmp (KR_keyword, "/dev/sdav12", 11) == 0)
d41562 1
a41562 1
return dev_storage + 1024;
d41573 2
a41574 2
                case 'u':
                  if (strncmp (KR_keyword, "/dev/sdau12", 11) == 0)
d41577 1
a41577 1
return dev_storage + 1009;
d41588 2
a41589 2
                case 't':
                  if (strncmp (KR_keyword, "/dev/sdat12", 11) == 0)
d41592 1
a41592 1
return dev_storage + 994;
d41603 2
a41604 2
                case 's':
                  if (strncmp (KR_keyword, "/dev/sdas12", 11) == 0)
d41607 1
a41607 1
return dev_storage + 979;
d41618 11
a41628 2
                case 'r':
                  if (strncmp (KR_keyword, "/dev/sdar12", 11) == 0)
d41631 1
a41631 1
return dev_storage + 964;
d41642 2
a41643 2
                case 'q':
                  if (strncmp (KR_keyword, "/dev/sdaq12", 11) == 0)
d41646 1
a41646 1
return dev_storage + 949;
d41657 2
a41658 2
                case 'p':
                  if (strncmp (KR_keyword, "/dev/sdap12", 11) == 0)
d41661 1
a41661 1
return dev_storage + 934;
d41672 2
a41673 2
                case 'o':
                  if (strncmp (KR_keyword, "/dev/sdao12", 11) == 0)
d41676 1
a41676 1
return dev_storage + 919;
d41687 11
a41697 2
                case 'n':
                  if (strncmp (KR_keyword, "/dev/sdan12", 11) == 0)
d41700 1
a41700 1
return dev_storage + 904;
d41711 2
a41712 2
                case 'm':
                  if (strncmp (KR_keyword, "/dev/sdam12", 11) == 0)
d41715 1
a41715 1
return dev_storage + 889;
d41726 2
a41727 2
                case 'l':
                  if (strncmp (KR_keyword, "/dev/sdal12", 11) == 0)
d41730 1
a41730 1
return dev_storage + 874;
d41741 2
a41742 2
                case 'k':
                  if (strncmp (KR_keyword, "/dev/sdak12", 11) == 0)
d41745 1
a41745 1
return dev_storage + 859;
d41756 1
a41756 10
                case 'j':
                  if (strncmp (KR_keyword, "/dev/sdaj12", 11) == 0)
                    {
{
return dev_storage + 844;

}
                    }
                  else
                    {
d41761 6
a41766 3
                    }
                case 'i':
                  if (strncmp (KR_keyword, "/dev/sdai12", 11) == 0)
d41769 1
a41769 1
return dev_storage + 829;
d41780 2
a41781 2
                case 'h':
                  if (strncmp (KR_keyword, "/dev/sdah12", 11) == 0)
d41784 1
a41784 1
return dev_storage + 814;
d41795 2
a41796 2
                case 'g':
                  if (strncmp (KR_keyword, "/dev/sdag12", 11) == 0)
d41799 1
a41799 1
return dev_storage + 799;
d41810 2
a41811 2
                case 'f':
                  if (strncmp (KR_keyword, "/dev/sdaf12", 11) == 0)
d41814 1
a41814 1
return dev_storage + 784;
d41825 1
a41825 10
                case 'e':
                  if (strncmp (KR_keyword, "/dev/sdae12", 11) == 0)
                    {
{
return dev_storage + 769;

}
                    }
                  else
                    {
d41830 4
a41833 1
                    }
d41835 1
a41835 1
                  if (strncmp (KR_keyword, "/dev/sdad12", 11) == 0)
d41838 1
a41838 1
return dev_storage + 754;
d41850 1
a41850 1
                  if (strncmp (KR_keyword, "/dev/sdac12", 11) == 0)
d41853 1
a41853 1
return dev_storage + 739;
d41865 1
a41865 1
                  if (strncmp (KR_keyword, "/dev/sdab12", 11) == 0)
d41868 1
a41868 1
return dev_storage + 724;
d41880 1
a41880 1
                  if (strncmp (KR_keyword, "/dev/sdaa12", 11) == 0)
d41883 1
a41883 1
return dev_storage + 709;
d41900 2
a41901 11
            default:
{
return	NULL;

}
            }
        case '1':
          switch (KR_keyword [7])
            {
            case 'y':
              switch (KR_keyword [9])
d41903 2
a41904 2
                case '6':
                  if (strncmp (KR_keyword, "/dev/ttyS61", 11) == 0)
d41907 1
a41907 1
return dev_storage + 2574;
d41918 2
a41919 2
                case '5':
                  if (strncmp (KR_keyword, "/dev/ttyS51", 11) == 0)
d41922 1
a41922 1
return dev_storage + 2564;
d41933 2
a41934 2
                case '4':
                  if (strncmp (KR_keyword, "/dev/ttyS41", 11) == 0)
d41937 1
a41937 1
return dev_storage + 2554;
d41948 2
a41949 2
                case '3':
                  if (strncmp (KR_keyword, "/dev/ttyS31", 11) == 0)
d41952 1
a41952 1
return dev_storage + 2544;
d41963 1
a41963 10
                case '2':
                  if (strncmp (KR_keyword, "/dev/ttyS21", 11) == 0)
                    {
{
return dev_storage + 2534;

}
                    }
                  else
                    {
d41968 6
a41973 3
                    }
                case '1':
                  if (strncmp (KR_keyword, "/dev/ttyS11", 11) == 0)
d41976 1
a41976 1
return dev_storage + 2524;
d41987 2
a41988 11
                default:
{
return	NULL;

}
                }
            case 't':
              switch (KR_keyword [9])
                {
                case '2':
                  if (strncmp (KR_keyword, "/dev/nst121", 11) == 0)
d41991 1
a41991 1
return dev_storage + 228;
d42002 2
a42003 2
                case '1':
                  if (strncmp (KR_keyword, "/dev/nst111", 11) == 0)
d42006 1
a42006 1
return dev_storage + 218;
d42017 2
a42018 2
                case '0':
                  if (strncmp (KR_keyword, "/dev/nst101", 11) == 0)
d42021 1
a42021 1
return dev_storage + 208;
d42038 1
a42038 1
            case 'n':
d42042 1
a42042 1
                  if (strncmp (KR_keyword, "/dev/cons61", 11) == 0)
d42045 1
a42045 1
return dev_storage + 81;
d42057 1
a42057 1
                  if (strncmp (KR_keyword, "/dev/cons51", 11) == 0)
d42060 1
a42060 1
return dev_storage + 71;
d42072 1
a42072 1
                  if (strncmp (KR_keyword, "/dev/cons41", 11) == 0)
d42075 1
a42075 1
return dev_storage + 61;
d42087 1
a42087 1
                  if (strncmp (KR_keyword, "/dev/cons31", 11) == 0)
d42090 1
a42090 1
return dev_storage + 51;
d42102 1
a42102 1
                  if (strncmp (KR_keyword, "/dev/cons21", 11) == 0)
d42105 1
a42105 1
return dev_storage + 41;
d42117 1
a42117 1
                  if (strncmp (KR_keyword, "/dev/cons11", 11) == 0)
d42120 1
a42120 1
return dev_storage + 31;
d42137 2
a42138 2
            case 'd':
              switch (KR_keyword [8])
d42140 172
a42311 1
                case 'x':
d42315 46
a42360 1
return dev_storage + 2299;
d42371 10
a42380 1
                case 'w':
d42384 46
a42429 1
return dev_storage + 2284;
d42440 10
a42449 1
                case 'v':
d42453 46
a42498 1
return dev_storage + 2269;
d42509 10
a42518 1
                case 'u':
d42522 46
a42567 1
return dev_storage + 2254;
d42578 10
a42587 1
                case 't':
d42591 115
a42705 1
return dev_storage + 2239;
d42716 2
a42717 2
                case 's':
                  if (strncmp (KR_keyword, "/dev/sdds11", 11) == 0)
d42720 1
a42720 1
return dev_storage + 2224;
d42731 94
a42824 1
                case 'r':
d42828 31
a42858 1
return dev_storage + 2209;
d42869 2
a42870 2
                case 'q':
                  if (strncmp (KR_keyword, "/dev/sddq11", 11) == 0)
d42873 1
a42873 1
return dev_storage + 2194;
d42884 11
a42894 2
                case 'p':
                  if (strncmp (KR_keyword, "/dev/sddp11", 11) == 0)
d42897 1
a42897 1
return dev_storage + 2179;
d42908 2
a42909 2
                case 'o':
                  if (strncmp (KR_keyword, "/dev/sddo11", 11) == 0)
d42912 1
a42912 1
return dev_storage + 2164;
d42923 2
a42924 2
                case 'n':
                  if (strncmp (KR_keyword, "/dev/sddn11", 11) == 0)
d42927 1
a42927 1
return dev_storage + 2149;
d42938 2
a42939 2
                case 'm':
                  if (strncmp (KR_keyword, "/dev/sddm11", 11) == 0)
d42942 1
a42942 1
return dev_storage + 2134;
d42953 11
a42963 2
                case 'l':
                  if (strncmp (KR_keyword, "/dev/sddl11", 11) == 0)
d42966 1
a42966 1
return dev_storage + 2119;
d42977 2
a42978 2
                case 'k':
                  if (strncmp (KR_keyword, "/dev/sddk11", 11) == 0)
d42981 1
a42981 1
return dev_storage + 2104;
d42992 2
a42993 2
                case 'j':
                  if (strncmp (KR_keyword, "/dev/sddj11", 11) == 0)
d42996 1
a42996 1
return dev_storage + 2089;
d43007 2
a43008 2
                case 'i':
                  if (strncmp (KR_keyword, "/dev/sddi11", 11) == 0)
d43011 1
a43011 1
return dev_storage + 2074;
d43022 11
a43032 2
                case 'h':
                  if (strncmp (KR_keyword, "/dev/sddh11", 11) == 0)
d43035 1
a43035 1
return dev_storage + 2059;
d43046 2
a43047 2
                case 'g':
                  if (strncmp (KR_keyword, "/dev/sddg11", 11) == 0)
d43050 1
a43050 1
return dev_storage + 2044;
d43061 2
a43062 2
                case 'f':
                  if (strncmp (KR_keyword, "/dev/sddf11", 11) == 0)
d43065 1
a43065 1
return dev_storage + 2029;
d43076 2
a43077 2
                case 'e':
                  if (strncmp (KR_keyword, "/dev/sdde11", 11) == 0)
d43080 1
a43080 1
return dev_storage + 2014;
d43091 9
d43101 1
a43101 1
                  if (strncmp (KR_keyword, "/dev/sddd11", 11) == 0)
d43104 1
a43104 1
return dev_storage + 1999;
d43116 1
a43116 1
                  if (strncmp (KR_keyword, "/dev/sddc11", 11) == 0)
d43119 1
a43119 1
return dev_storage + 1984;
d43131 1
a43131 1
                  if (strncmp (KR_keyword, "/dev/sddb11", 11) == 0)
d43134 1
a43134 1
return dev_storage + 1969;
d43146 85
a43230 1
                  if (strncmp (KR_keyword, "/dev/sdda11", 11) == 0)
d43233 1
a43233 1
return dev_storage + 1954;
d43244 84
d43334 2
a43335 2
            case 'c':
              switch (KR_keyword [8])
d43337 2
a43338 2
                case 'z':
                  if (strncmp (KR_keyword, "/dev/sdcz11", 11) == 0)
d43341 1
a43341 1
return dev_storage + 1915;
d43352 2
a43353 2
                case 'y':
                  if (strncmp (KR_keyword, "/dev/sdcy11", 11) == 0)
d43356 1
a43356 1
return dev_storage + 1900;
d43367 2
a43368 2
                case 'x':
                  if (strncmp (KR_keyword, "/dev/sdcx11", 11) == 0)
d43371 1
a43371 1
return dev_storage + 1885;
d43382 2
a43383 2
                case 'w':
                  if (strncmp (KR_keyword, "/dev/sdcw11", 11) == 0)
d43386 1
a43386 1
return dev_storage + 1870;
d43397 11
a43407 2
                case 'v':
                  if (strncmp (KR_keyword, "/dev/sdcv11", 11) == 0)
d43410 1
a43410 1
return dev_storage + 1855;
d43421 2
a43422 2
                case 'u':
                  if (strncmp (KR_keyword, "/dev/sdcu11", 11) == 0)
d43425 1
a43425 1
return dev_storage + 1840;
d43436 2
a43437 2
                case 't':
                  if (strncmp (KR_keyword, "/dev/sdct11", 11) == 0)
d43440 1
a43440 1
return dev_storage + 1825;
d43451 2
a43452 2
                case 's':
                  if (strncmp (KR_keyword, "/dev/sdcs11", 11) == 0)
d43455 1
a43455 1
return dev_storage + 1810;
d43466 11
a43476 2
                case 'r':
                  if (strncmp (KR_keyword, "/dev/sdcr11", 11) == 0)
d43479 1
a43479 1
return dev_storage + 1795;
d43490 2
a43491 2
                case 'q':
                  if (strncmp (KR_keyword, "/dev/sdcq11", 11) == 0)
d43494 1
a43494 1
return dev_storage + 1780;
d43505 2
a43506 2
                case 'p':
                  if (strncmp (KR_keyword, "/dev/sdcp11", 11) == 0)
d43509 1
a43509 1
return dev_storage + 1765;
d43520 2
a43521 2
                case 'o':
                  if (strncmp (KR_keyword, "/dev/sdco11", 11) == 0)
d43524 1
a43524 1
return dev_storage + 1750;
d43535 11
a43545 2
                case 'n':
                  if (strncmp (KR_keyword, "/dev/sdcn11", 11) == 0)
d43548 1
a43548 1
return dev_storage + 1735;
d43559 2
a43560 2
                case 'm':
                  if (strncmp (KR_keyword, "/dev/sdcm11", 11) == 0)
d43563 1
a43563 1
return dev_storage + 1720;
d43574 2
a43575 2
                case 'l':
                  if (strncmp (KR_keyword, "/dev/sdcl11", 11) == 0)
d43578 1
a43578 1
return dev_storage + 1705;
d43589 2
a43590 2
                case 'k':
                  if (strncmp (KR_keyword, "/dev/sdck11", 11) == 0)
d43593 1
a43593 1
return dev_storage + 1690;
d43604 1
a43604 10
                case 'j':
                  if (strncmp (KR_keyword, "/dev/sdcj11", 11) == 0)
                    {
{
return dev_storage + 1675;

}
                    }
                  else
                    {
d43609 6
a43614 3
                    }
                case 'i':
                  if (strncmp (KR_keyword, "/dev/sdci11", 11) == 0)
d43617 1
a43617 1
return dev_storage + 1660;
d43628 1
a43628 1
                case 'h':
d43632 1
a43632 1
return dev_storage + 1645;
d43643 2
a43644 2
                case 'g':
                  if (strncmp (KR_keyword, "/dev/sdcg11", 11) == 0)
d43647 1
a43647 1
return dev_storage + 1630;
d43658 2
a43659 2
                case 'f':
                  if (strncmp (KR_keyword, "/dev/sdcf11", 11) == 0)
d43662 1
a43662 1
return dev_storage + 1615;
d43673 1
a43673 10
                case 'e':
                  if (strncmp (KR_keyword, "/dev/sdce11", 11) == 0)
                    {
{
return dev_storage + 1600;

}
                    }
                  else
                    {
d43678 4
a43681 1
                    }
d43683 1
a43683 1
                  if (strncmp (KR_keyword, "/dev/sdcd11", 11) == 0)
d43686 1
a43686 1
return dev_storage + 1585;
d43698 1
a43698 1
                  if (strncmp (KR_keyword, "/dev/sdcc11", 11) == 0)
d43701 1
a43701 1
return dev_storage + 1570;
d43713 1
a43713 1
                  if (strncmp (KR_keyword, "/dev/sdcb11", 11) == 0)
d43716 1
a43716 1
return dev_storage + 1555;
d43728 1
a43728 1
                  if (strncmp (KR_keyword, "/dev/sdca11", 11) == 0)
d43731 1
a43731 1
return dev_storage + 1540;
d43748 2
a43749 2
            case 'b':
              switch (KR_keyword [8])
d43751 2
a43752 2
                case 'z':
                  if (strncmp (KR_keyword, "/dev/sdbz11", 11) == 0)
d43755 1
a43755 1
return dev_storage + 1499;
d43766 2
a43767 2
                case 'y':
                  if (strncmp (KR_keyword, "/dev/sdby11", 11) == 0)
d43770 1
a43770 1
return dev_storage + 1484;
d43781 2
a43782 2
                case 'x':
                  if (strncmp (KR_keyword, "/dev/sdbx11", 11) == 0)
d43785 1
a43785 1
return dev_storage + 1469;
d43796 2
a43797 2
                case 'w':
                  if (strncmp (KR_keyword, "/dev/sdbw11", 11) == 0)
d43800 1
a43800 1
return dev_storage + 1454;
d43811 11
a43821 2
                case 'v':
                  if (strncmp (KR_keyword, "/dev/sdbv11", 11) == 0)
d43824 1
a43824 1
return dev_storage + 1439;
d43835 2
a43836 2
                case 'u':
                  if (strncmp (KR_keyword, "/dev/sdbu11", 11) == 0)
d43839 1
a43839 1
return dev_storage + 1424;
d43850 2
a43851 2
                case 't':
                  if (strncmp (KR_keyword, "/dev/sdbt11", 11) == 0)
d43854 1
a43854 1
return dev_storage + 1409;
d43865 2
a43866 2
                case 's':
                  if (strncmp (KR_keyword, "/dev/sdbs11", 11) == 0)
d43869 1
a43869 1
return dev_storage + 1394;
d43880 11
a43890 2
                case 'r':
                  if (strncmp (KR_keyword, "/dev/sdbr11", 11) == 0)
d43893 1
a43893 1
return dev_storage + 1379;
d43904 2
a43905 2
                case 'q':
                  if (strncmp (KR_keyword, "/dev/sdbq11", 11) == 0)
d43908 1
a43908 1
return dev_storage + 1364;
d43919 2
a43920 2
                case 'p':
                  if (strncmp (KR_keyword, "/dev/sdbp11", 11) == 0)
d43923 1
a43923 1
return dev_storage + 1349;
d43934 2
a43935 2
                case 'o':
                  if (strncmp (KR_keyword, "/dev/sdbo11", 11) == 0)
d43938 1
a43938 1
return dev_storage + 1334;
d43949 11
a43959 2
                case 'n':
                  if (strncmp (KR_keyword, "/dev/sdbn11", 11) == 0)
d43962 1
a43962 1
return dev_storage + 1319;
d43973 2
a43974 2
                case 'm':
                  if (strncmp (KR_keyword, "/dev/sdbm11", 11) == 0)
d43977 1
a43977 1
return dev_storage + 1304;
d43988 2
a43989 2
                case 'l':
                  if (strncmp (KR_keyword, "/dev/sdbl11", 11) == 0)
d43992 1
a43992 1
return dev_storage + 1289;
d44003 2
a44004 2
                case 'k':
                  if (strncmp (KR_keyword, "/dev/sdbk11", 11) == 0)
d44007 1
a44007 1
return dev_storage + 1274;
d44018 11
a44028 2
                case 'j':
                  if (strncmp (KR_keyword, "/dev/sdbj11", 11) == 0)
d44031 1
a44031 1
return dev_storage + 1259;
d44042 2
a44043 2
                case 'i':
                  if (strncmp (KR_keyword, "/dev/sdbi11", 11) == 0)
d44046 1
a44046 1
return dev_storage + 1244;
d44057 2
a44058 2
                case 'h':
                  if (strncmp (KR_keyword, "/dev/sdbh11", 11) == 0)
d44061 1
a44061 1
return dev_storage + 1229;
d44072 2
a44073 2
                case 'g':
                  if (strncmp (KR_keyword, "/dev/sdbg11", 11) == 0)
d44076 1
a44076 1
return dev_storage + 1214;
d44087 11
a44097 2
                case 'f':
                  if (strncmp (KR_keyword, "/dev/sdbf11", 11) == 0)
d44100 1
a44100 1
return dev_storage + 1199;
d44111 2
a44112 2
                case 'e':
                  if (strncmp (KR_keyword, "/dev/sdbe11", 11) == 0)
d44115 1
a44115 1
return dev_storage + 1184;
d44126 2
a44127 2
                case 'd':
                  if (strncmp (KR_keyword, "/dev/sdbd11", 11) == 0)
d44130 1
a44130 1
return dev_storage + 1169;
d44141 2
a44142 2
                case 'c':
                  if (strncmp (KR_keyword, "/dev/sdbc11", 11) == 0)
d44145 1
a44145 1
return dev_storage + 1154;
d44156 11
a44166 2
                case 'b':
                  if (strncmp (KR_keyword, "/dev/sdbb11", 11) == 0)
d44169 1
a44169 1
return dev_storage + 1139;
d44180 2
a44181 2
                case 'a':
                  if (strncmp (KR_keyword, "/dev/sdba11", 11) == 0)
d44184 1
a44184 1
return dev_storage + 1124;
d44195 2
a44196 11
                default:
{
return	NULL;

}
                }
            case 'a':
              switch (KR_keyword [8])
                {
                case 'z':
                  if (strncmp (KR_keyword, "/dev/sdaz11", 11) == 0)
d44199 1
a44199 1
return dev_storage + 1083;
d44210 2
a44211 2
                case 'y':
                  if (strncmp (KR_keyword, "/dev/sday11", 11) == 0)
d44214 1
a44214 1
return dev_storage + 1068;
d44225 2
a44226 2
                case 'x':
                  if (strncmp (KR_keyword, "/dev/sdax11", 11) == 0)
d44229 1
a44229 1
return dev_storage + 1053;
d44240 2
a44241 2
                case 'w':
                  if (strncmp (KR_keyword, "/dev/sdaw11", 11) == 0)
d44244 1
a44244 1
return dev_storage + 1038;
d44255 11
a44265 2
                case 'v':
                  if (strncmp (KR_keyword, "/dev/sdav11", 11) == 0)
d44268 1
a44268 1
return dev_storage + 1023;
d44279 2
a44280 2
                case 'u':
                  if (strncmp (KR_keyword, "/dev/sdau11", 11) == 0)
d44283 1
a44283 1
return dev_storage + 1008;
d44294 2
a44295 2
                case 't':
                  if (strncmp (KR_keyword, "/dev/sdat11", 11) == 0)
d44298 1
a44298 1
return dev_storage + 993;
d44309 1
a44309 3
                case 's':
                  if (strncmp (KR_keyword, "/dev/sdas11", 11) == 0)
                    {
d44311 1
a44311 1
return dev_storage + 978;
d44314 2
a44315 3
                    }
                  else
                    {
d44320 9
a44328 3
                    }
                case 'r':
                  if (strncmp (KR_keyword, "/dev/sdar11", 11) == 0)
d44331 1
a44331 1
return dev_storage + 963;
d44342 2
a44343 2
                case 'q':
                  if (strncmp (KR_keyword, "/dev/sdaq11", 11) == 0)
d44346 1
a44346 1
return dev_storage + 948;
d44357 2
a44358 2
                case 'p':
                  if (strncmp (KR_keyword, "/dev/sdap11", 11) == 0)
d44361 1
a44361 1
return dev_storage + 933;
d44372 11
a44382 2
                case 'o':
                  if (strncmp (KR_keyword, "/dev/sdao11", 11) == 0)
d44385 1
a44385 1
return dev_storage + 918;
d44396 2
a44397 2
                case 'n':
                  if (strncmp (KR_keyword, "/dev/sdan11", 11) == 0)
d44400 1
a44400 1
return dev_storage + 903;
d44411 2
a44412 2
                case 'm':
                  if (strncmp (KR_keyword, "/dev/sdam11", 11) == 0)
d44415 1
a44415 1
return dev_storage + 888;
d44426 11
a44436 2
                case 'l':
                  if (strncmp (KR_keyword, "/dev/sdal11", 11) == 0)
d44439 1
a44439 1
return dev_storage + 873;
d44450 2
a44451 2
                case 'k':
                  if (strncmp (KR_keyword, "/dev/sdak11", 11) == 0)
d44454 1
a44454 1
return dev_storage + 858;
d44465 2
a44466 2
                case 'j':
                  if (strncmp (KR_keyword, "/dev/sdaj11", 11) == 0)
d44469 1
a44469 1
return dev_storage + 843;
d44480 2
a44481 2
                case 'i':
                  if (strncmp (KR_keyword, "/dev/sdai11", 11) == 0)
d44484 1
a44484 1
return dev_storage + 828;
d44495 11
a44505 2
                case 'h':
                  if (strncmp (KR_keyword, "/dev/sdah11", 11) == 0)
d44508 1
a44508 1
return dev_storage + 813;
d44519 2
a44520 2
                case 'g':
                  if (strncmp (KR_keyword, "/dev/sdag11", 11) == 0)
d44523 1
a44523 1
return dev_storage + 798;
d44534 2
a44535 2
                case 'f':
                  if (strncmp (KR_keyword, "/dev/sdaf11", 11) == 0)
d44538 1
a44538 1
return dev_storage + 783;
d44549 2
a44550 2
                case 'e':
                  if (strncmp (KR_keyword, "/dev/sdae11", 11) == 0)
d44553 1
a44553 1
return dev_storage + 768;
d44564 9
d44574 1
a44574 1
                  if (strncmp (KR_keyword, "/dev/sdad11", 11) == 0)
d44577 1
a44577 1
return dev_storage + 753;
d44589 1
a44589 1
                  if (strncmp (KR_keyword, "/dev/sdac11", 11) == 0)
d44592 1
a44592 1
return dev_storage + 738;
d44604 1
a44604 1
                  if (strncmp (KR_keyword, "/dev/sdab11", 11) == 0)
d44607 1
a44607 1
return dev_storage + 723;
d44619 1
a44619 1
                  if (strncmp (KR_keyword, "/dev/sdaa11", 11) == 0)
d44622 1
a44622 1
return dev_storage + 708;
d44639 2
a44640 11
            default:
{
return	NULL;

}
            }
        case '0':
          switch (KR_keyword [7])
            {
            case 'y':
              switch (KR_keyword [9])
d44642 2
a44643 2
                case '6':
                  if (strncmp (KR_keyword, "/dev/ttyS60", 11) == 0)
d44646 1
a44646 1
return dev_storage + 2573;
d44657 2
a44658 2
                case '5':
                  if (strncmp (KR_keyword, "/dev/ttyS50", 11) == 0)
d44661 1
a44661 1
return dev_storage + 2563;
d44672 2
a44673 2
                case '4':
                  if (strncmp (KR_keyword, "/dev/ttyS40", 11) == 0)
d44676 1
a44676 1
return dev_storage + 2553;
d44687 2
a44688 2
                case '3':
                  if (strncmp (KR_keyword, "/dev/ttyS30", 11) == 0)
d44691 1
a44691 1
return dev_storage + 2543;
d44702 1
a44702 10
                case '2':
                  if (strncmp (KR_keyword, "/dev/ttyS20", 11) == 0)
                    {
{
return dev_storage + 2533;

}
                    }
                  else
                    {
d44707 6
a44712 3
                    }
                case '1':
                  if (strncmp (KR_keyword, "/dev/ttyS10", 11) == 0)
d44715 1
a44715 1
return dev_storage + 2523;
d44726 2
a44727 11
                default:
{
return	NULL;

}
                }
            case 't':
              switch (KR_keyword [9])
                {
                case '2':
                  if (strncmp (KR_keyword, "/dev/nst120", 11) == 0)
d44730 1
a44730 1
return dev_storage + 227;
d44741 2
a44742 2
                case '1':
                  if (strncmp (KR_keyword, "/dev/nst110", 11) == 0)
d44745 1
a44745 1
return dev_storage + 217;
d44756 2
a44757 2
                case '0':
                  if (strncmp (KR_keyword, "/dev/nst100", 11) == 0)
d44760 1
a44760 1
return dev_storage + 207;
d44777 1
a44777 1
            case 'n':
d44856 1
a44856 1
                  if (strncmp (KR_keyword, "/dev/cons10", 11) == 0)
d44858 3
d44865 3
a44867 3
                    }
                  else
                    {
d44872 4
a44875 2
                    }
                default:
d44877 1
a44877 1
return	NULL;
d44880 3
a44882 14
                }
            case 'd':
              switch (KR_keyword [8])
                {
                case 'x':
                  if (strncmp (KR_keyword, "/dev/sddx10", 11) == 0)
                    {
{
return dev_storage + 2298;

}
                    }
                  else
                    {
d44887 4
a44890 4
                    }
                case 'w':
                  if (strncmp (KR_keyword, "/dev/sddw10", 11) == 0)
                    {
d44892 1
a44892 1
return dev_storage + 2283;
d44895 3
a44897 3
                    }
                  else
                    {
d44902 4
a44905 4
                    }
                case 'v':
                  if (strncmp (KR_keyword, "/dev/sddv10", 11) == 0)
                    {
d44907 1
a44907 1
return dev_storage + 2268;
d44910 3
a44912 3
                    }
                  else
                    {
d44917 4
a44920 4
                    }
                case 'u':
                  if (strncmp (KR_keyword, "/dev/sddu10", 11) == 0)
                    {
d44922 1
a44922 1
return dev_storage + 2253;
d44925 3
a44927 3
                    }
                  else
                    {
d44932 2
a44933 4
                    }
                case 't':
                  if (strncmp (KR_keyword, "/dev/sddt10", 11) == 0)
                    {
d44935 1
a44935 1
return dev_storage + 2238;
d44939 1
a44939 2
                  else
                    {
d44944 6
a44949 3
                    }
                case 's':
                  if (strncmp (KR_keyword, "/dev/sdds10", 11) == 0)
d44952 1
a44952 1
return dev_storage + 2223;
d44963 2
a44964 2
                case 'r':
                  if (strncmp (KR_keyword, "/dev/sddr10", 11) == 0)
d44967 1
a44967 1
return dev_storage + 2208;
d44978 2
a44979 2
                case 'q':
                  if (strncmp (KR_keyword, "/dev/sddq10", 11) == 0)
d44982 1
a44982 1
return dev_storage + 2193;
d44993 2
a44994 2
                case 'p':
                  if (strncmp (KR_keyword, "/dev/sddp10", 11) == 0)
d44997 1
a44997 1
return dev_storage + 2178;
d45008 1
a45008 10
                case 'o':
                  if (strncmp (KR_keyword, "/dev/sddo10", 11) == 0)
                    {
{
return dev_storage + 2163;

}
                    }
                  else
                    {
d45013 6
a45018 3
                    }
                case 'n':
                  if (strncmp (KR_keyword, "/dev/sddn10", 11) == 0)
d45021 1
a45021 1
return dev_storage + 2148;
d45032 2
a45033 2
                case 'm':
                  if (strncmp (KR_keyword, "/dev/sddm10", 11) == 0)
d45036 1
a45036 1
return dev_storage + 2133;
d45047 2
a45048 2
                case 'l':
                  if (strncmp (KR_keyword, "/dev/sddl10", 11) == 0)
d45051 1
a45051 1
return dev_storage + 2118;
d45062 2
a45063 2
                case 'k':
                  if (strncmp (KR_keyword, "/dev/sddk10", 11) == 0)
d45066 1
a45066 1
return dev_storage + 2103;
d45077 1
a45077 10
                case 'j':
                  if (strncmp (KR_keyword, "/dev/sddj10", 11) == 0)
                    {
{
return dev_storage + 2088;

}
                    }
                  else
                    {
d45082 6
a45087 3
                    }
                case 'i':
                  if (strncmp (KR_keyword, "/dev/sddi10", 11) == 0)
d45090 1
a45090 1
return dev_storage + 2073;
d45101 2
a45102 2
                case 'h':
                  if (strncmp (KR_keyword, "/dev/sddh10", 11) == 0)
d45105 1
a45105 1
return dev_storage + 2058;
d45116 2
a45117 2
                case 'g':
                  if (strncmp (KR_keyword, "/dev/sddg10", 11) == 0)
d45120 1
a45120 1
return dev_storage + 2043;
d45131 2
a45132 2
                case 'f':
                  if (strncmp (KR_keyword, "/dev/sddf10", 11) == 0)
d45135 1
a45135 1
return dev_storage + 2028;
d45146 1
a45146 10
                case 'e':
                  if (strncmp (KR_keyword, "/dev/sdde10", 11) == 0)
                    {
{
return dev_storage + 2013;

}
                    }
                  else
                    {
d45151 4
a45154 1
                    }
d45156 1
a45156 1
                  if (strncmp (KR_keyword, "/dev/sddd10", 11) == 0)
d45159 1
a45159 1
return dev_storage + 1998;
d45171 1
a45171 1
                  if (strncmp (KR_keyword, "/dev/sddc10", 11) == 0)
d45174 1
a45174 1
return dev_storage + 1983;
d45186 1
a45186 1
                  if (strncmp (KR_keyword, "/dev/sddb10", 11) == 0)
d45189 1
a45189 1
return dev_storage + 1968;
d45201 1
a45201 1
                  if (strncmp (KR_keyword, "/dev/sdda10", 11) == 0)
d45204 1
a45204 1
return dev_storage + 1953;
d45221 2
a45222 2
            case 'c':
              switch (KR_keyword [8])
d45224 2
a45225 2
                case 'z':
                  if (strncmp (KR_keyword, "/dev/sdcz10", 11) == 0)
d45228 1
a45228 1
return dev_storage + 1914;
d45239 2
a45240 2
                case 'y':
                  if (strncmp (KR_keyword, "/dev/sdcy10", 11) == 0)
d45243 1
a45243 1
return dev_storage + 1899;
d45254 2
a45255 2
                case 'x':
                  if (strncmp (KR_keyword, "/dev/sdcx10", 11) == 0)
d45258 1
a45258 1
return dev_storage + 1884;
d45269 2
a45270 2
                case 'w':
                  if (strncmp (KR_keyword, "/dev/sdcw10", 11) == 0)
d45273 1
a45273 1
return dev_storage + 1869;
d45284 1
a45284 10
                case 'v':
                  if (strncmp (KR_keyword, "/dev/sdcv10", 11) == 0)
                    {
{
return dev_storage + 1854;

}
                    }
                  else
                    {
d45289 6
a45294 3
                    }
                case 'u':
                  if (strncmp (KR_keyword, "/dev/sdcu10", 11) == 0)
d45297 1
a45297 1
return dev_storage + 1839;
d45308 2
a45309 2
                case 't':
                  if (strncmp (KR_keyword, "/dev/sdct10", 11) == 0)
d45312 1
a45312 1
return dev_storage + 1824;
d45323 2
a45324 2
                case 's':
                  if (strncmp (KR_keyword, "/dev/sdcs10", 11) == 0)
d45327 1
a45327 1
return dev_storage + 1809;
d45338 2
a45339 2
                case 'r':
                  if (strncmp (KR_keyword, "/dev/sdcr10", 11) == 0)
d45342 1
a45342 1
return dev_storage + 1794;
d45353 2
a45354 2
                case 'q':
                  if (strncmp (KR_keyword, "/dev/sdcq10", 11) == 0)
d45357 1
a45357 1
return dev_storage + 1779;
d45368 2
a45369 2
                case 'p':
                  if (strncmp (KR_keyword, "/dev/sdcp10", 11) == 0)
d45371 3
d45375 1
a45375 1
return dev_storage + 1764;
d45378 3
a45380 3
                    }
                  else
                    {
d45385 4
a45388 4
                    }
                case 'o':
                  if (strncmp (KR_keyword, "/dev/sdco10", 11) == 0)
                    {
d45390 1
a45390 1
return dev_storage + 1749;
d45393 3
a45395 18
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'n':
                  if (strncmp (KR_keyword, "/dev/sdcn10", 11) == 0)
                    {
{
return dev_storage + 1734;

}
                    }
                  else
                    {
d45400 4
a45403 4
                    }
                case 'm':
                  if (strncmp (KR_keyword, "/dev/sdcm10", 11) == 0)
                    {
d45405 1
a45405 1
return dev_storage + 1719;
d45408 3
a45410 3
                    }
                  else
                    {
d45415 4
a45418 4
                    }
                case 'l':
                  if (strncmp (KR_keyword, "/dev/sdcl10", 11) == 0)
                    {
d45420 1
a45420 1
return dev_storage + 1704;
d45423 3
a45425 3
                    }
                  else
                    {
d45430 4
a45433 4
                    }
                case 'k':
                  if (strncmp (KR_keyword, "/dev/sdck10", 11) == 0)
                    {
d45435 1
a45435 1
return dev_storage + 1689;
d45438 3
a45440 3
                    }
                  else
                    {
d45445 2
a45446 4
                    }
                case 'j':
                  if (strncmp (KR_keyword, "/dev/sdcj10", 11) == 0)
                    {
d45448 1
a45448 1
return dev_storage + 1674;
d45452 1
a45452 2
                  else
                    {
d45457 6
a45462 3
                    }
                case 'i':
                  if (strncmp (KR_keyword, "/dev/sdci10", 11) == 0)
d45465 1
a45465 1
return dev_storage + 1659;
d45476 2
a45477 2
                case 'h':
                  if (strncmp (KR_keyword, "/dev/sdch10", 11) == 0)
d45480 1
a45480 1
return dev_storage + 1644;
d45491 2
a45492 2
                case 'g':
                  if (strncmp (KR_keyword, "/dev/sdcg10", 11) == 0)
d45495 1
a45495 1
return dev_storage + 1629;
d45506 2
a45507 2
                case 'f':
                  if (strncmp (KR_keyword, "/dev/sdcf10", 11) == 0)
d45510 1
a45510 1
return dev_storage + 1614;
d45521 1
a45521 10
                case 'e':
                  if (strncmp (KR_keyword, "/dev/sdce10", 11) == 0)
                    {
{
return dev_storage + 1599;

}
                    }
                  else
                    {
d45526 4
a45529 1
                    }
d45531 1
a45531 1
                  if (strncmp (KR_keyword, "/dev/sdcd10", 11) == 0)
d45534 1
a45534 1
return dev_storage + 1584;
d45546 1
a45546 1
                  if (strncmp (KR_keyword, "/dev/sdcc10", 11) == 0)
d45549 1
a45549 1
return dev_storage + 1569;
d45561 1
a45561 1
                  if (strncmp (KR_keyword, "/dev/sdcb10", 11) == 0)
d45564 1
a45564 1
return dev_storage + 1554;
d45576 1
a45576 1
                  if (strncmp (KR_keyword, "/dev/sdca10", 11) == 0)
d45579 1
a45579 1
return dev_storage + 1539;
d45596 2
a45597 2
            case 'b':
              switch (KR_keyword [8])
d45599 2
a45600 2
                case 'z':
                  if (strncmp (KR_keyword, "/dev/sdbz10", 11) == 0)
d45603 1
a45603 1
return dev_storage + 1498;
d45614 2
a45615 2
                case 'y':
                  if (strncmp (KR_keyword, "/dev/sdby10", 11) == 0)
d45618 1
a45618 1
return dev_storage + 1483;
d45629 2
a45630 2
                case 'x':
                  if (strncmp (KR_keyword, "/dev/sdbx10", 11) == 0)
d45633 1
a45633 1
return dev_storage + 1468;
d45644 2
a45645 2
                case 'w':
                  if (strncmp (KR_keyword, "/dev/sdbw10", 11) == 0)
d45648 1
a45648 1
return dev_storage + 1453;
d45659 11
a45669 2
                case 'v':
                  if (strncmp (KR_keyword, "/dev/sdbv10", 11) == 0)
d45672 1
a45672 1
return dev_storage + 1438;
d45683 2
a45684 2
                case 'u':
                  if (strncmp (KR_keyword, "/dev/sdbu10", 11) == 0)
d45687 1
a45687 1
return dev_storage + 1423;
d45698 2
a45699 2
                case 't':
                  if (strncmp (KR_keyword, "/dev/sdbt10", 11) == 0)
d45702 1
a45702 1
return dev_storage + 1408;
d45713 2
a45714 2
                case 's':
                  if (strncmp (KR_keyword, "/dev/sdbs10", 11) == 0)
d45717 1
a45717 1
return dev_storage + 1393;
d45728 11
a45738 2
                case 'r':
                  if (strncmp (KR_keyword, "/dev/sdbr10", 11) == 0)
d45741 1
a45741 1
return dev_storage + 1378;
d45752 2
a45753 2
                case 'q':
                  if (strncmp (KR_keyword, "/dev/sdbq10", 11) == 0)
d45756 1
a45756 1
return dev_storage + 1363;
d45767 2
a45768 2
                case 'p':
                  if (strncmp (KR_keyword, "/dev/sdbp10", 11) == 0)
d45771 1
a45771 1
return dev_storage + 1348;
d45782 2
a45783 2
                case 'o':
                  if (strncmp (KR_keyword, "/dev/sdbo10", 11) == 0)
d45786 1
a45786 1
return dev_storage + 1333;
d45797 1
a45797 10
                case 'n':
                  if (strncmp (KR_keyword, "/dev/sdbn10", 11) == 0)
                    {
{
return dev_storage + 1318;

}
                    }
                  else
                    {
d45802 6
a45807 3
                    }
                case 'm':
                  if (strncmp (KR_keyword, "/dev/sdbm10", 11) == 0)
d45810 1
a45810 1
return dev_storage + 1303;
d45821 2
a45822 2
                case 'l':
                  if (strncmp (KR_keyword, "/dev/sdbl10", 11) == 0)
d45825 1
a45825 1
return dev_storage + 1288;
d45836 2
a45837 2
                case 'k':
                  if (strncmp (KR_keyword, "/dev/sdbk10", 11) == 0)
d45840 1
a45840 1
return dev_storage + 1273;
d45851 2
a45852 2
                case 'j':
                  if (strncmp (KR_keyword, "/dev/sdbj10", 11) == 0)
d45855 1
a45855 1
return dev_storage + 1258;
d45866 1
a45866 10
                case 'i':
                  if (strncmp (KR_keyword, "/dev/sdbi10", 11) == 0)
                    {
{
return dev_storage + 1243;

}
                    }
                  else
                    {
d45871 6
a45876 3
                    }
                case 'h':
                  if (strncmp (KR_keyword, "/dev/sdbh10", 11) == 0)
d45879 1
a45879 1
return dev_storage + 1228;
d45890 2
a45891 2
                case 'g':
                  if (strncmp (KR_keyword, "/dev/sdbg10", 11) == 0)
d45894 1
a45894 1
return dev_storage + 1213;
d45905 1
a45905 1
                case 'f':
d45909 1
a45909 1
return dev_storage + 1198;
d45920 2
a45921 2
                case 'e':
                  if (strncmp (KR_keyword, "/dev/sdbe10", 11) == 0)
d45924 1
a45924 1
return dev_storage + 1183;
d45935 9
d45945 1
a45945 1
                  if (strncmp (KR_keyword, "/dev/sdbd10", 11) == 0)
d45948 1
a45948 1
return dev_storage + 1168;
d45960 1
a45960 1
                  if (strncmp (KR_keyword, "/dev/sdbc10", 11) == 0)
d45963 1
a45963 1
return dev_storage + 1153;
d45975 1
a45975 1
                  if (strncmp (KR_keyword, "/dev/sdbb10", 11) == 0)
d45978 1
a45978 1
return dev_storage + 1138;
d45990 1
a45990 1
                  if (strncmp (KR_keyword, "/dev/sdba10", 11) == 0)
d45993 1
a45993 1
return dev_storage + 1123;
d46010 2
a46011 2
            case 'a':
              switch (KR_keyword [8])
d46013 2
a46014 2
                case 'z':
                  if (strncmp (KR_keyword, "/dev/sdaz10", 11) == 0)
d46017 1
a46017 1
return dev_storage + 1082;
d46028 2
a46029 2
                case 'y':
                  if (strncmp (KR_keyword, "/dev/sday10", 11) == 0)
d46032 1
a46032 1
return dev_storage + 1067;
d46043 2
a46044 2
                case 'x':
                  if (strncmp (KR_keyword, "/dev/sdax10", 11) == 0)
d46047 1
a46047 1
return dev_storage + 1052;
d46058 2
a46059 2
                case 'w':
                  if (strncmp (KR_keyword, "/dev/sdaw10", 11) == 0)
d46062 1
a46062 1
return dev_storage + 1037;
d46073 11
a46083 2
                case 'v':
                  if (strncmp (KR_keyword, "/dev/sdav10", 11) == 0)
d46086 1
a46086 1
return dev_storage + 1022;
d46097 2
a46098 2
                case 'u':
                  if (strncmp (KR_keyword, "/dev/sdau10", 11) == 0)
d46101 1
a46101 1
return dev_storage + 1007;
d46112 2
a46113 2
                case 't':
                  if (strncmp (KR_keyword, "/dev/sdat10", 11) == 0)
d46116 1
a46116 1
return dev_storage + 992;
d46127 2
a46128 2
                case 's':
                  if (strncmp (KR_keyword, "/dev/sdas10", 11) == 0)
d46131 1
a46131 1
return dev_storage + 977;
d46142 11
a46152 2
                case 'r':
                  if (strncmp (KR_keyword, "/dev/sdar10", 11) == 0)
d46155 1
a46155 1
return dev_storage + 962;
d46166 2
a46167 2
                case 'q':
                  if (strncmp (KR_keyword, "/dev/sdaq10", 11) == 0)
d46170 1
a46170 1
return dev_storage + 947;
d46181 2
a46182 2
                case 'p':
                  if (strncmp (KR_keyword, "/dev/sdap10", 11) == 0)
d46185 1
a46185 1
return dev_storage + 932;
d46196 2
a46197 2
                case 'o':
                  if (strncmp (KR_keyword, "/dev/sdao10", 11) == 0)
d46200 1
a46200 1
return dev_storage + 917;
d46211 11
a46221 2
                case 'n':
                  if (strncmp (KR_keyword, "/dev/sdan10", 11) == 0)
d46224 1
a46224 1
return dev_storage + 902;
d46235 2
a46236 2
                case 'm':
                  if (strncmp (KR_keyword, "/dev/sdam10", 11) == 0)
d46239 1
a46239 1
return dev_storage + 887;
d46250 2
a46251 2
                case 'l':
                  if (strncmp (KR_keyword, "/dev/sdal10", 11) == 0)
d46254 1
a46254 1
return dev_storage + 872;
d46265 2
a46266 2
                case 'k':
                  if (strncmp (KR_keyword, "/dev/sdak10", 11) == 0)
d46269 1
a46269 1
return dev_storage + 857;
d46280 11
a46290 2
                case 'j':
                  if (strncmp (KR_keyword, "/dev/sdaj10", 11) == 0)
d46293 1
a46293 1
return dev_storage + 842;
d46304 2
a46305 2
                case 'i':
                  if (strncmp (KR_keyword, "/dev/sdai10", 11) == 0)
d46308 1
a46308 1
return dev_storage + 827;
d46319 2
a46320 2
                case 'h':
                  if (strncmp (KR_keyword, "/dev/sdah10", 11) == 0)
d46323 1
a46323 1
return dev_storage + 812;
d46334 2
a46335 2
                case 'g':
                  if (strncmp (KR_keyword, "/dev/sdag10", 11) == 0)
d46338 1
a46338 1
return dev_storage + 797;
d46349 2
a46350 2
                case 'f':
                  if (strncmp (KR_keyword, "/dev/sdaf10", 11) == 0)
d46353 1
a46353 1
return dev_storage + 782;
d46364 2
a46365 2
                case 'e':
                  if (strncmp (KR_keyword, "/dev/sdae10", 11) == 0)
d46368 1
a46368 1
return dev_storage + 767;
d46379 1
a46379 10
                case 'd':
                  if (strncmp (KR_keyword, "/dev/sdad10", 11) == 0)
                    {
{
return dev_storage + 752;

}
                    }
                  else
                    {
d46384 6
a46389 3
                    }
                case 'c':
                  if (strncmp (KR_keyword, "/dev/sdac10", 11) == 0)
d46392 1
a46392 1
return dev_storage + 737;
d46403 2
a46404 2
                case 'b':
                  if (strncmp (KR_keyword, "/dev/sdab10", 11) == 0)
d46407 1
a46407 1
return dev_storage + 722;
d46418 2
a46419 2
                case 'a':
                  if (strncmp (KR_keyword, "/dev/sdaa10", 11) == 0)
d46422 1
a46422 1
return dev_storage + 707;
d46458 1
a46458 1
return dev_storage + 2578;
d46473 1
a46473 1
return dev_storage + 2577;
@


1.37
log
@Rename FH_BAD to FH_NADA throughout.
* devices.h (FH_ERROR): New value.
(iscons_dev): Extend to detect all the console device types.
* devices.in: Set aside storage for FH_ERROR.
* dtable.cc (dtable::init_std_file_from_handle): Use iscons_dev to detect when
device is a console.
(fh_alloc): Pass device to console constructor.
(build_fh_pc): Short circuit when we detect that the constructor saw an error.
* fhandler.h (fhandler_console::fhandler_console): Accept fh_devices parameter.
(get_tty_stuff): Change to void.
* fhandler_console (fhandler_console::set_unit): Set device to FH_ERROR on
attempt to access anything other than the current console.
(fhandler_console::get_tty_stuff): Change to void return.
(fhandler_console::open): Return EPERM on FH_ERROR device type.
(fhandler_console::fhandler_console): Set the device type appropriately before
calling get_tty_stuff and rely on that function to reset it if necessary.
@
text
@a2647 1
  {"/dev/ttym", BRACK(FH_TTYM), "/dev/ttym"},
a2654 1
const device *ttym_dev = dev_storage + 2577;
d2656 1
a2656 1
const device *urandom_dev = dev_storage + 2578;
a3839 15
            case 'm':
              if (strncmp (KR_keyword, "/dev/ttym", 9) == 0)
                {
{
return dev_storage + 2577;

}
                }
              else
                {
{
return	NULL;

}
                }
d5344 1
a5344 1
return dev_storage + 2580;
d44569 1
a44569 1
return dev_storage + 2579;
d44584 1
a44584 1
return dev_storage + 2578;
@


1.36
log
@* autoload.cc: Call _api_fatal in asm.
* child_info.h: Redefine CURR_CHILD_INFO_MAGIC.
(child_info_fork::abort): Rename from handle_failure.  Change arguments.
* cygtls.h (_local_storage::ttybuf): New field.
* dcrt0.cc (vapi_fatal): Split api_fatal.  Add "in forked process" to message
when appropriate.
(api_fatal): Use vapi_fatal.
* devices.h: Make multiple inclusion safe.
(fh_devices): Add FH_CONS* stuff.  Reorder slightly.
(device): Eliminate anonymous union.  Add more ways to access minor/major.
(device::setunit): Accommodate no-longer-anonymous union.
(device::is_fs): Ditto.
(device::is_fs_special): Ditto.
(device::major): New function.
(device::minor): Ditto.
(device::is_device): New function.
(device::not_device): Ditto.
(device::operator int): New operator.
(device::operator fh_devices): Ditto.
(device::operator bool): Ditto.
(device::operator DWORD): Ditto.
(device::operator =): Ditto.
(isproc_dev): New function.
(isprocsys_dev): Ditto.
(iscons_dev): Ditto.
(istty_slave_dev): Ditto.
* devices.in: Add new "/dev/cons*" strings.  Accommodate no-longer-anonymous
union throughout.
(BRACK): Use more precise method for initialization.
* devices.cc: Regenerate.
* dtable.cc (dtable::stdio_init): Use get_cttyp instead of get_tty.
(dtable::find_archetype): Use new DWORD operator in device to test archetypes.
(dtable::init_std_file_from_handle): Use different method to initialize 'dev'.
Adapt to different ctty handling and accommodate /dev/cons*.
(fh_alloc): Accommodate no-longer-anonymous union.  Adapt to new /dev/cons*.
(build_fh_pc): Make debugging output more useful.
* exceptions.cc (ctrl_c_handler): Use get_cttyp instead of get_tty.
* external.cc (fillout_pinfo): Accommodate new cons* stuff.
* fhandler.cc (fhandler_base::read): Eliminate is_slow() test.
* fhandler.h (fhandler_base::*): Adapt to changes in device.h.
(fhandler_*::is_slow): Delete.
( fhandler_proc::get_proc_fhandler): Return fh_devices type.
* fhandler_console.cc (open_shared_console): New function.
(console_unit): New class.
(console_unit::console_unit): New constructor.
(enum_windows): New function.  Declare as friend to console_unit.
(fhandler_console::set_unit): New function.
(fhandler_console::get_tty_stuff): Call set_unit to set the unit number and
determine if initialization is needed.  Eliminate flags parameter.
(tty_list::get_cttyp): Rename (sorta) from get_tty.  Return pointer to correct
tty_min.
(fhandler_console::open): Adapt to elimination of argument to get_tty_stuff.
(fhandler_console::output_tcsetattr): Properly detect error condition.
(fhandler_console::fixup_after_fork_exec): Adapt to get_tty_stuff() setting tc
automatically.
* fhandler_proc.cc: Use FH_BAD rather than 0 throughout where using fh_devices
enum.
(fhandler_proc::get_proc_fhandler): Return fh_devices.  Adapt to devices.h
changes.
* fhandler_process.cc: Adapt to devices.h changes.  Use FH_BAD rather than 0
throughout where using fh_devices enum.
* fhandler_procnet.cc: Ditto.
* fhandler_procsys.cc: Ditto.
* fhandler_procsysvipc.cc: Ditto.
* fhandler_tape.cc (fhandler_dev_tape::fhandler_dev_tape): Ditto.
* fhandler_termios.cc (handler_termios::bg_check): Use tc->ttyname() rather
than assuming that we can construct a tty.
* fhandler_tty.cc (fhandler_tty_master::fhandler_tty_master): Just return
get_minor() of dev.
(fhandler_pty_master::process_slave_output): Add slightly more debugging info.
(fhandler_tty_slave::fhandler_tty_slave): Change name from ntty to unit.
(fhandler_pty_master::open): Ditto.
(fhandler_tty_slave::ioctl): Adapt to change which causes ctty to represent a
complete device.
(fhandler_tty_master::init_console): Add debugging for failure path.
(fhandler_pty_master::setup): Use get_unit() to retrieve unit number rather
than relying on raw ntty.
(fhandler_pty_master::setup): Ditto.
* fhandler_virtual.h (virt_tab_t): Redefine fhandler as fh_devices.
* fork.cc: Remove obsolete vfork stuff.
(frok::child): Don't assume that a ctty == 0 is valid.
* mount.cc (mount_info::conv_to_win32_path): Adapt to device struct changes.
(mount_info::conv_to_win32_path): Ditto.
* path.cc (path_conv::check): Retrive major/minor numbers via a method rather
than accessing them directly from device.  Rely on dev operators to
set/retrieve device information as required by device struct change.
* path.h (isproc_dev): Move to devices.h.
(isprocsys_dev): Ditto.
(isvirtual_dev): Ditto.
(path_conv:{isdevice,isfifo,isspecial,iscygdrive,issocket,get_devn,get_unitn}):
Use device methods to access/manipulate devices.
* pinfo.cc (pinfo::exit): Don't assume that ctty == 0 is valid.  Use iscons_dev
to determine if a device is a console.
(_pinfo::_ctty): Use device::parse to generate tty/cons name.
(_pinfo::set_ctty): Don't assume that ctty == 0 is valid.  Remove redundant
info from debugging.
* shared.cc (offsets): Remove console offset.
* shared_info.h (shared_locations): Ditto.
* syscalls.cc (umask): Use device methods to manipulate device information.
(ctermid): Use device::parse to generate term device name.
* tlsoffsets.h: Regenerate.
* tty.cc (ttyslot): Return minor number of ctty since ctty now represents a
full device.
(tty::create_master): Set ctty to a complete device.
(tty_list::attach): Rework to detect new /dev/cons* stuff.
(tty_list::terminate): Adapt to changes to ctty.
(tty_list::init): Adapt to change to setntty - pass in device major number.
(tty::exists): Use get_unit() to retrive tty unit number.
(tty::open_mutex): Ditto.
(tty::open_inuse): Ditto.
(tty::create_inuse): Ditto.
(tty::get_event): Ditto.
(tty_min::ttyname): Define new function.
* tty.h (tty_min::ntty): Redefine as fh_devices.
(tty::exists): Use get_unit() to retrive tty unit number.
(tty::open_mutex): Ditto.
(tty::open_inuse): Ditto.
(tty::create_inuse): Ditto.
(tty::get_event): Ditto.
(tty_min::ttyname): Declare new function.
(tty::getntty): Declare as const.
(tty_list::operator []): Assure that only minor part of argument is used.
* dll_init.cc (dll_list::alloc): Detect mismatch of data segments early issuing
an explicit error message if necessary.
* heap.cc (heap_init): Adapt to changes from fork->handle_failure to
fork->abort.
* pinfo.h (EXITCODE_FORK_FAILED): New enum.  (from Ryan Johnson)
* sigproc.cc (child_info_fork::abort): Rename from handle_failure.  Change
arguments to allow passing in a printf-like message.
* winsup.h (api_fatal): Delete macro definition.
(api_fatal): Redefine from __api_fatal.
(vapi_fatal): Declare new function.
* include/sys/strace.h (strace_vprintf): Define new macro.
* ntdll.h (_SYSTEM_INFORMATION_CLASS): Add SystemHandleInformation.
@
text
@d63 4
a66 1
  {"", {FH_BAD}, ""};
@


1.35
log
@* cygheap.cc (cygheap::close_ctty): Close ctty via close_with_arch().
* debug.cc (close_handle): Call debugger on failure.
* devices.in (device::tty_to_real_device): Delete.
* devices.h (device::tty_to_real_device): Ditto.
* devices.cc: Regenerate.
* dtable.cc: Delete old ifdef'ed vfork code.
(dtable::release): Don't handle archetype here.
(dtable::init_std_file_from_handle): Consolidate console tests.  Generate
major/minor for tty ASAP.  Fix incorrect setting of DEV_TTYS* for serial.
(fh_alloc): New function derived from build_fh_pc.  Pass current tty when
building tty.
(build_pc_pc): Use fh_alloc to create.  Set name from fh->dev if appropriate.
Generate an archetype or point to one here.
(dtable::dup_worker): Deal with archetypes.  Rely on = operator copying whole
class rather than just fhandler_base.
(dtable::fixup_after_exec): Call close_with_arch to handle closing of fhandlers
with archetypes.
* fhandler.cc (fhandler_base::operator =): Call memcpy with fhandler's size()
rather than sizeof fhandler_base.
(fhandler_base::open_with_arch): New function.  Handles opening of fhandler's
with archetypes, dealing with usecounts, etc.
(fhandler_base::close_with_arch): Ditto for close.
* fhandler.h: Many changes for archetypes.
(fhandler_base::set_name): Set both normalized path and regular path.
(fhandler_base::open_with_arch): New function.
(fhandler_base::open_setup): Ditto.
(fhandler_base::use_archetype): Ditto.
(fhandler_base::_archetype_usecount): Ditto.
(fhandler_*::size): Ditto.
(fhandler_dev_tape::open): Remove virtual decoration.
(fhandler_console::use_archetype): New function.  Return true.
(fhandler_console::open_setup): New function.
(fhandler_console::dup): Delete.
(fhandler_tty_slave::fhandler_tty_slave): Redeclare to take an argument.
(fhandler_tty_slave::use_archetype): New function.  Return true.
(fhandler_tty_slave::cleanup): New function.
(fhandler_pty_master::use_archetype): New function.  Return true.
(fhandler_pty_master::cleanup): New function.
(fhandler_pty_master::is_tty_master): New function.  Return false.
(fhandler_tty_master::is_tty_master): New function.  Return true.
(fhandler_dev_dsp::fhandler_dev_dsp): New function.  Return true.
(report_tty_counts): Only report on archetype's usecount if there is one.
* fhandler_console.cc (fhandler_console::get_tty_stuff): Remove handling of
setsid, set_ctty, set_flags, and manage_console_count.
(fhandler_console::open_setup): New function.  Implement functionality removed
from get_tty_stuff.
(fhandler_console::dup): Delete.
(fhandler_console::output_tcsetattr): Set errno on error.
(fhandler_console::fhandler_console): Set device early.
(fhandler_console::init): Use open_with_arch to open console handles.
(fhandler_console::fixup_after_fork_exec): Nuke most of the stuff for dealing
with console handles.
* fhandler_dsp.cc (fhandler_dev_dsp::open): Remove archetype handling.
(fhandler_dev_dsp::write): Ditto.
(fhandler_dev_dsp::read): Ditto.
(fhandler_dev_dsp::close): Ditto.
(fhandler_dev_dsp::dup): Ditto.
(fhandler_dev_dsp::ioctl): Ditto.
(fhandler_dev_dsp::fixup_after_fork): Ditto.
(fhandler_dev_dsp::fixup_after_exec): Ditto.
* fhandler_tty.cc (fhandler_tty_common::__acquire_output_mutex): Add a little
more debugging.
(fhandler_tty_common::__release_output_mutex): Ditto.
(fhandler_pty_master::process_slave_output): Ditto.  Don't do signal handling
or pthread_cancel handling in the tty master thread.
(process_output): Minor reorg.
(fhandler_tty_slave::fhandler_tty_slave): Set device based on new ntty
argument.
(fhandler_tty_slave::open): Remove archetype handling.  Move some processing
into open_setup().
(fhandler_tty_slave::open_setup): New function.
(fhandler_tty_slave::cleanup): New function.
(fhandler_tty_slave::close): Remove archetype handling.  Move some processing
into cleanup().
(fhandler_tty_slave::init): Rename argument from f to h.  Open device using
open_with_arch().  Remove archetype handling.
(fhandler_pty_master::dup): Ditto.
(fhandler_pty_master::open): Ditto.
(fhandler_pty_master::close): Ditto.  Move some handling to cleanup().
(fhandler_pty_master::cleanup): New function.
(fhandler_tty_master::init_console): Give unique name to captive console
fhandler.
* pinfo.cc (_pinfo::set_ctty): Rename argument from arch to fh.  Eliminate
archetype assumption.
* syscalls.cc (close_all_files): Use close_with_arch for closing.
(open): Use open_with_arch() rather than open().
(close): Use close_with_arch() rather than close().
@
text
@d64 1
a64 1
#define BRACK(x) {x}
d88 64
d2651 5
a2655 4
const device *console_dev = dev_storage + 20;
const device *ttym_dev = dev_storage + 2513;
const device *ttys_dev = dev_storage + 2385;
const device *urandom_dev = dev_storage + 2514;
d2685 1
a2685 1
return dev_storage + 217;
d2703 1
a2703 1
return dev_storage + 2384;
d2718 1
a2718 1
return dev_storage + 216;
d2739 1
a2739 1
return dev_storage + 215;
d2754 1
a2754 1
return dev_storage + 214;
d2769 1
a2769 1
return dev_storage + 213;
d2784 1
a2784 1
return dev_storage + 212;
d2799 1
a2799 1
return dev_storage + 211;
d2814 1
a2814 1
return dev_storage + 210;
d2829 1
a2829 1
return dev_storage + 209;
d2844 1
a2844 1
return dev_storage + 208;
d2862 1
a2862 1
return dev_storage + 207;
d2877 1
a2877 1
return dev_storage + 21;
d2898 1
a2898 1
return dev_storage + 206;
d2913 1
a2913 1
return dev_storage + 205;
d2931 1
a2931 1
return dev_storage + 204;
d2946 1
a2946 1
return dev_storage + 42;
d2967 1
a2967 1
return dev_storage + 203;
d2982 1
a2982 1
return dev_storage + 202;
d2997 1
a2997 1
return dev_storage + 201;
d3012 1
a3012 1
return dev_storage + 200;
d3027 1
a3027 1
return dev_storage + 199;
d3042 1
a3042 1
return dev_storage + 198;
d3057 1
a3057 1
return dev_storage + 197;
d3072 1
a3072 1
return dev_storage + 196;
d3087 1
a3087 1
return dev_storage + 195;
d3102 1
a3102 1
return dev_storage + 194;
d3117 1
a3117 1
return dev_storage + 193;
d3132 1
a3132 1
return dev_storage + 192;
d3150 1
a3150 1
return dev_storage + 2265;
d3165 1
a3165 1
return dev_storage + 2249;
d3180 1
a3180 1
return dev_storage + 31;
d3204 1
a3204 1
return dev_storage + 2264;
d3219 1
a3219 1
return dev_storage + 2248;
d3234 1
a3234 1
return dev_storage + 30;
d3258 1
a3258 1
return dev_storage + 2263;
d3273 1
a3273 1
return dev_storage + 2247;
d3288 1
a3288 1
return dev_storage + 29;
d3312 1
a3312 1
return dev_storage + 2262;
d3327 1
a3327 1
return dev_storage + 2246;
d3342 1
a3342 1
return dev_storage + 28;
d3366 1
a3366 1
return dev_storage + 2261;
d3381 1
a3381 1
return dev_storage + 2245;
d3396 1
a3396 1
return dev_storage + 27;
d3420 1
a3420 1
return dev_storage + 2260;
d3435 1
a3435 1
return dev_storage + 2244;
d3450 1
a3450 1
return dev_storage + 26;
d3474 1
a3474 1
return dev_storage + 2259;
d3489 1
a3489 1
return dev_storage + 2243;
d3504 1
a3504 1
return dev_storage + 25;
d3528 1
a3528 1
return dev_storage + 2258;
d3543 1
a3543 1
return dev_storage + 2242;
d3558 1
a3558 1
return dev_storage + 24;
d3582 1
a3582 1
return dev_storage + 2257;
d3597 1
a3597 1
return dev_storage + 2241;
d3612 1
a3612 1
return dev_storage + 23;
d3636 1
a3636 1
return dev_storage + 2256;
d3651 1
a3651 1
return dev_storage + 2240;
d3666 1
a3666 1
return dev_storage + 22;
d3699 1
a3699 1
return dev_storage + 601;
d3714 1
a3714 1
return dev_storage + 600;
d3729 1
a3729 1
return dev_storage + 599;
d3744 1
a3744 1
return dev_storage + 598;
d3759 1
a3759 1
return dev_storage + 597;
d3774 1
a3774 1
return dev_storage + 596;
d3789 1
a3789 1
return dev_storage + 595;
d3804 1
a3804 1
return dev_storage + 594;
d3819 1
a3819 1
return dev_storage + 593;
d3843 1
a3843 1
return dev_storage + 2513;
d3861 1
a3861 1
return dev_storage + 2394;
d3876 1
a3876 1
return dev_storage + 586;
d3900 1
a3900 1
return dev_storage + 2393;
d3915 1
a3915 1
return dev_storage + 585;
d3939 1
a3939 1
return dev_storage + 2392;
d3954 1
a3954 1
return dev_storage + 584;
d3978 1
a3978 1
return dev_storage + 2391;
d3993 1
a3993 1
return dev_storage + 583;
d4017 1
a4017 1
return dev_storage + 2390;
d4032 1
a4032 1
return dev_storage + 582;
d4056 1
a4056 1
return dev_storage + 2389;
d4071 1
a4071 1
return dev_storage + 581;
d4095 1
a4095 1
return dev_storage + 2388;
d4110 1
a4110 1
return dev_storage + 580;
d4134 1
a4134 1
return dev_storage + 2387;
d4149 1
a4149 1
return dev_storage + 579;
d4173 1
a4173 1
return dev_storage + 2386;
d4188 1
a4188 1
return dev_storage + 578;
d4209 1
a4209 1
return dev_storage + 2385;
d4233 1
a4233 1
return dev_storage + 571;
d4248 1
a4248 1
return dev_storage + 570;
d4263 1
a4263 1
return dev_storage + 569;
d4278 1
a4278 1
return dev_storage + 568;
d4293 1
a4293 1
return dev_storage + 567;
d4308 1
a4308 1
return dev_storage + 566;
d4323 1
a4323 1
return dev_storage + 565;
d4338 1
a4338 1
return dev_storage + 564;
d4353 1
a4353 1
return dev_storage + 563;
d4377 1
a4377 1
return dev_storage + 556;
d4392 1
a4392 1
return dev_storage + 555;
d4407 1
a4407 1
return dev_storage + 554;
d4422 1
a4422 1
return dev_storage + 553;
d4437 1
a4437 1
return dev_storage + 552;
d4452 1
a4452 1
return dev_storage + 551;
d4467 1
a4467 1
return dev_storage + 550;
d4482 1
a4482 1
return dev_storage + 549;
d4497 1
a4497 1
return dev_storage + 548;
d4521 1
a4521 1
return dev_storage + 541;
d4536 1
a4536 1
return dev_storage + 540;
d4551 1
a4551 1
return dev_storage + 539;
d4566 1
a4566 1
return dev_storage + 538;
d4581 1
a4581 1
return dev_storage + 537;
d4596 1
a4596 1
return dev_storage + 536;
d4611 1
a4611 1
return dev_storage + 535;
d4626 1
a4626 1
return dev_storage + 534;
d4641 1
a4641 1
return dev_storage + 533;
d4665 1
a4665 1
return dev_storage + 526;
d4680 1
a4680 1
return dev_storage + 525;
d4695 1
a4695 1
return dev_storage + 524;
d4710 1
a4710 1
return dev_storage + 523;
d4725 1
a4725 1
return dev_storage + 522;
d4740 1
a4740 1
return dev_storage + 521;
d4755 1
a4755 1
return dev_storage + 520;
d4770 1
a4770 1
return dev_storage + 519;
d4785 1
a4785 1
return dev_storage + 518;
d4812 1
a4812 1
return dev_storage + 511;
d4827 1
a4827 1
return dev_storage + 52;
d4851 1
a4851 1
return dev_storage + 510;
d4866 1
a4866 1
return dev_storage + 51;
d4890 1
a4890 1
return dev_storage + 509;
d4905 1
a4905 1
return dev_storage + 50;
d4929 1
a4929 1
return dev_storage + 508;
d4944 1
a4944 1
return dev_storage + 49;
d4968 1
a4968 1
return dev_storage + 507;
d4983 1
a4983 1
return dev_storage + 48;
d5007 1
a5007 1
return dev_storage + 506;
d5022 1
a5022 1
return dev_storage + 47;
d5046 1
a5046 1
return dev_storage + 505;
d5061 1
a5061 1
return dev_storage + 46;
d5085 1
a5085 1
return dev_storage + 504;
d5100 1
a5100 1
return dev_storage + 45;
d5124 1
a5124 1
return dev_storage + 503;
d5139 1
a5139 1
return dev_storage + 44;
d5160 1
a5160 1
return dev_storage + 43;
d5184 1
a5184 1
return dev_storage + 41;
d5199 1
a5199 1
return dev_storage + 496;
d5214 1
a5214 1
return dev_storage + 495;
d5229 1
a5229 1
return dev_storage + 494;
d5244 1
a5244 1
return dev_storage + 493;
d5259 1
a5259 1
return dev_storage + 492;
d5274 1
a5274 1
return dev_storage + 491;
d5289 1
a5289 1
return dev_storage + 490;
d5304 1
a5304 1
return dev_storage + 489;
d5319 1
a5319 1
return dev_storage + 488;
d5343 1
a5343 1
return dev_storage + 173;
d5358 1
a5358 1
return dev_storage + 2516;
d5373 1
a5373 1
return dev_storage + 481;
d5388 1
a5388 1
return dev_storage + 480;
d5403 1
a5403 1
return dev_storage + 479;
d5418 1
a5418 1
return dev_storage + 478;
d5433 1
a5433 1
return dev_storage + 477;
d5448 1
a5448 1
return dev_storage + 476;
d5463 1
a5463 1
return dev_storage + 475;
d5478 1
a5478 1
return dev_storage + 474;
d5493 1
a5493 1
return dev_storage + 473;
d5517 1
a5517 1
return dev_storage + 466;
d5532 1
a5532 1
return dev_storage + 465;
d5547 1
a5547 1
return dev_storage + 464;
d5562 1
a5562 1
return dev_storage + 463;
d5577 1
a5577 1
return dev_storage + 462;
d5592 1
a5592 1
return dev_storage + 461;
d5607 1
a5607 1
return dev_storage + 460;
d5622 1
a5622 1
return dev_storage + 459;
d5637 1
a5637 1
return dev_storage + 458;
d5661 1
a5661 1
return dev_storage + 172;
d5676 1
a5676 1
return dev_storage + 451;
d5691 1
a5691 1
return dev_storage + 450;
d5706 1
a5706 1
return dev_storage + 449;
d5721 1
a5721 1
return dev_storage + 448;
d5736 1
a5736 1
return dev_storage + 447;
d5751 1
a5751 1
return dev_storage + 446;
d5766 1
a5766 1
return dev_storage + 445;
d5781 1
a5781 1
return dev_storage + 444;
d5796 1
a5796 1
return dev_storage + 443;
d5820 1
a5820 1
return dev_storage + 436;
d5835 1
a5835 1
return dev_storage + 435;
d5850 1
a5850 1
return dev_storage + 434;
d5865 1
a5865 1
return dev_storage + 433;
d5880 1
a5880 1
return dev_storage + 432;
d5895 1
a5895 1
return dev_storage + 431;
d5910 1
a5910 1
return dev_storage + 430;
d5925 1
a5925 1
return dev_storage + 429;
d5940 1
a5940 1
return dev_storage + 428;
d5964 1
a5964 1
return dev_storage + 421;
d5979 1
a5979 1
return dev_storage + 420;
d5994 1
a5994 1
return dev_storage + 419;
d6009 1
a6009 1
return dev_storage + 418;
d6024 1
a6024 1
return dev_storage + 417;
d6039 1
a6039 1
return dev_storage + 416;
d6054 1
a6054 1
return dev_storage + 415;
d6069 1
a6069 1
return dev_storage + 414;
d6084 1
a6084 1
return dev_storage + 413;
d6111 1
a6111 1
return dev_storage + 406;
d6126 1
a6126 1
return dev_storage + 405;
d6141 1
a6141 1
return dev_storage + 404;
d6156 1
a6156 1
return dev_storage + 403;
d6171 1
a6171 1
return dev_storage + 402;
d6186 1
a6186 1
return dev_storage + 401;
d6201 1
a6201 1
return dev_storage + 400;
d6216 1
a6216 1
return dev_storage + 399;
d6231 1
a6231 1
return dev_storage + 398;
d6252 1
a6252 1
return dev_storage + 174;
d6423 1
a6423 1
return dev_storage + 171;
d6438 1
a6438 1
return dev_storage + 39;
d6459 1
a6459 1
return dev_storage + 391;
d6474 1
a6474 1
return dev_storage + 390;
d6489 1
a6489 1
return dev_storage + 389;
d6504 1
a6504 1
return dev_storage + 388;
d6519 1
a6519 1
return dev_storage + 387;
d6534 1
a6534 1
return dev_storage + 386;
d6549 1
a6549 1
return dev_storage + 385;
d6564 1
a6564 1
return dev_storage + 384;
d6579 1
a6579 1
return dev_storage + 383;
d6603 1
a6603 1
return dev_storage + 376;
d6618 1
a6618 1
return dev_storage + 375;
d6633 1
a6633 1
return dev_storage + 374;
d6648 1
a6648 1
return dev_storage + 373;
d6663 1
a6663 1
return dev_storage + 372;
d6678 1
a6678 1
return dev_storage + 371;
d6693 1
a6693 1
return dev_storage + 370;
d6708 1
a6708 1
return dev_storage + 369;
d6723 1
a6723 1
return dev_storage + 368;
d6747 1
a6747 1
return dev_storage + 361;
d6762 1
a6762 1
return dev_storage + 360;
d6777 1
a6777 1
return dev_storage + 359;
d6792 1
a6792 1
return dev_storage + 358;
d6807 1
a6807 1
return dev_storage + 357;
d6822 1
a6822 1
return dev_storage + 356;
d6837 1
a6837 1
return dev_storage + 355;
d6852 1
a6852 1
return dev_storage + 354;
d6867 1
a6867 1
return dev_storage + 353;
d6891 1
a6891 1
return dev_storage + 346;
d6906 1
a6906 1
return dev_storage + 345;
d6921 1
a6921 1
return dev_storage + 344;
d6936 1
a6936 1
return dev_storage + 343;
d6951 1
a6951 1
return dev_storage + 342;
d6966 1
a6966 1
return dev_storage + 341;
d6981 1
a6981 1
return dev_storage + 340;
d6996 1
a6996 1
return dev_storage + 339;
d7011 1
a7011 1
return dev_storage + 338;
d7035 1
a7035 1
return dev_storage + 331;
d7050 1
a7050 1
return dev_storage + 330;
d7065 1
a7065 1
return dev_storage + 329;
d7080 1
a7080 1
return dev_storage + 328;
d7095 1
a7095 1
return dev_storage + 327;
d7110 1
a7110 1
return dev_storage + 326;
d7125 1
a7125 1
return dev_storage + 325;
d7140 1
a7140 1
return dev_storage + 324;
d7155 1
a7155 1
return dev_storage + 323;
d7179 1
a7179 1
return dev_storage + 316;
d7194 1
a7194 1
return dev_storage + 315;
d7209 1
a7209 1
return dev_storage + 314;
d7224 1
a7224 1
return dev_storage + 313;
d7239 1
a7239 1
return dev_storage + 312;
d7254 1
a7254 1
return dev_storage + 311;
d7269 1
a7269 1
return dev_storage + 310;
d7284 1
a7284 1
return dev_storage + 309;
d7299 1
a7299 1
return dev_storage + 308;
d7323 1
a7323 1
return dev_storage + 38;
d7338 1
a7338 1
return dev_storage + 301;
d7353 1
a7353 1
return dev_storage + 300;
d7368 1
a7368 1
return dev_storage + 299;
d7383 1
a7383 1
return dev_storage + 298;
d7398 1
a7398 1
return dev_storage + 297;
d7413 1
a7413 1
return dev_storage + 296;
d7428 1
a7428 1
return dev_storage + 295;
d7443 1
a7443 1
return dev_storage + 294;
d7458 1
a7458 1
return dev_storage + 293;
d7482 1
a7482 1
return dev_storage + 40;
d7497 1
a7497 1
return dev_storage + 286;
d7512 1
a7512 1
return dev_storage + 285;
d7527 1
a7527 1
return dev_storage + 284;
d7542 1
a7542 1
return dev_storage + 283;
d7557 1
a7557 1
return dev_storage + 282;
d7572 1
a7572 1
return dev_storage + 281;
d7587 1
a7587 1
return dev_storage + 280;
d7602 1
a7602 1
return dev_storage + 279;
d7617 1
a7617 1
return dev_storage + 278;
d7641 1
a7641 1
return dev_storage + 1879;
d7656 1
a7656 1
return dev_storage + 1878;
d7671 1
a7671 1
return dev_storage + 1877;
d7686 1
a7686 1
return dev_storage + 1876;
d7701 1
a7701 1
return dev_storage + 1875;
d7716 1
a7716 1
return dev_storage + 1874;
d7731 1
a7731 1
return dev_storage + 1873;
d7746 1
a7746 1
return dev_storage + 1872;
d7761 1
a7761 1
return dev_storage + 1871;
d7776 1
a7776 1
return dev_storage + 1870;
d7791 1
a7791 1
return dev_storage + 1869;
d7806 1
a7806 1
return dev_storage + 1868;
d7821 1
a7821 1
return dev_storage + 1867;
d7836 1
a7836 1
return dev_storage + 1866;
d7851 1
a7851 1
return dev_storage + 1865;
d7866 1
a7866 1
return dev_storage + 1864;
d7881 1
a7881 1
return dev_storage + 1863;
d7896 1
a7896 1
return dev_storage + 1862;
d7911 1
a7911 1
return dev_storage + 1861;
d7926 1
a7926 1
return dev_storage + 1860;
d7941 1
a7941 1
return dev_storage + 1859;
d7956 1
a7956 1
return dev_storage + 1858;
d7971 1
a7971 1
return dev_storage + 1857;
d7986 1
a7986 1
return dev_storage + 1856;
d8004 1
a8004 1
return dev_storage + 271;
d8019 1
a8019 1
return dev_storage + 185;
d8043 1
a8043 1
return dev_storage + 270;
d8058 1
a8058 1
return dev_storage + 184;
d8082 1
a8082 1
return dev_storage + 269;
d8097 1
a8097 1
return dev_storage + 183;
d8121 1
a8121 1
return dev_storage + 268;
d8136 1
a8136 1
return dev_storage + 182;
d8160 1
a8160 1
return dev_storage + 267;
d8175 1
a8175 1
return dev_storage + 181;
d8199 1
a8199 1
return dev_storage + 266;
d8214 1
a8214 1
return dev_storage + 180;
d8238 1
a8238 1
return dev_storage + 265;
d8253 1
a8253 1
return dev_storage + 179;
d8277 1
a8277 1
return dev_storage + 264;
d8292 1
a8292 1
return dev_storage + 178;
d8316 1
a8316 1
return dev_storage + 263;
d8331 1
a8331 1
return dev_storage + 177;
d8352 1
a8352 1
return dev_storage + 176;
d8376 1
a8376 1
return dev_storage + 1465;
d8391 1
a8391 1
return dev_storage + 1464;
d8406 1
a8406 1
return dev_storage + 1463;
d8421 1
a8421 1
return dev_storage + 1462;
d8436 1
a8436 1
return dev_storage + 1461;
d8451 1
a8451 1
return dev_storage + 1460;
d8466 1
a8466 1
return dev_storage + 1459;
d8481 1
a8481 1
return dev_storage + 1458;
d8496 1
a8496 1
return dev_storage + 1457;
d8511 1
a8511 1
return dev_storage + 1456;
d8526 1
a8526 1
return dev_storage + 1455;
d8541 1
a8541 1
return dev_storage + 1454;
d8556 1
a8556 1
return dev_storage + 1453;
d8571 1
a8571 1
return dev_storage + 1452;
d8586 1
a8586 1
return dev_storage + 1451;
d8601 1
a8601 1
return dev_storage + 1450;
d8616 1
a8616 1
return dev_storage + 1449;
d8631 1
a8631 1
return dev_storage + 1448;
d8646 1
a8646 1
return dev_storage + 1447;
d8661 1
a8661 1
return dev_storage + 1446;
d8676 1
a8676 1
return dev_storage + 1445;
d8691 1
a8691 1
return dev_storage + 1444;
d8706 1
a8706 1
return dev_storage + 1443;
d8721 1
a8721 1
return dev_storage + 1442;
d8736 1
a8736 1
return dev_storage + 1441;
d8751 1
a8751 1
return dev_storage + 1440;
d8766 1
a8766 1
return dev_storage + 256;
d8781 1
a8781 1
return dev_storage + 255;
d8796 1
a8796 1
return dev_storage + 254;
d8811 1
a8811 1
return dev_storage + 253;
d8826 1
a8826 1
return dev_storage + 252;
d8841 1
a8841 1
return dev_storage + 251;
d8856 1
a8856 1
return dev_storage + 250;
d8871 1
a8871 1
return dev_storage + 249;
d8886 1
a8886 1
return dev_storage + 248;
d8910 1
a8910 1
return dev_storage + 1049;
d8925 1
a8925 1
return dev_storage + 1048;
d8940 1
a8940 1
return dev_storage + 1047;
d8955 1
a8955 1
return dev_storage + 1046;
d8970 1
a8970 1
return dev_storage + 1045;
d8985 1
a8985 1
return dev_storage + 1044;
d9000 1
a9000 1
return dev_storage + 1043;
d9015 1
a9015 1
return dev_storage + 1042;
d9030 1
a9030 1
return dev_storage + 1041;
d9045 1
a9045 1
return dev_storage + 1040;
d9060 1
a9060 1
return dev_storage + 1039;
d9075 1
a9075 1
return dev_storage + 1038;
d9090 1
a9090 1
return dev_storage + 1037;
d9105 1
a9105 1
return dev_storage + 1036;
d9120 1
a9120 1
return dev_storage + 1035;
d9135 1
a9135 1
return dev_storage + 1034;
d9150 1
a9150 1
return dev_storage + 1033;
d9165 1
a9165 1
return dev_storage + 1032;
d9180 1
a9180 1
return dev_storage + 1031;
d9195 1
a9195 1
return dev_storage + 1030;
d9210 1
a9210 1
return dev_storage + 1029;
d9225 1
a9225 1
return dev_storage + 1028;
d9240 1
a9240 1
return dev_storage + 1027;
d9255 1
a9255 1
return dev_storage + 1026;
d9270 1
a9270 1
return dev_storage + 1025;
d9285 1
a9285 1
return dev_storage + 1024;
d9300 1
a9300 1
return dev_storage + 241;
d9315 1
a9315 1
return dev_storage + 240;
d9330 1
a9330 1
return dev_storage + 239;
d9345 1
a9345 1
return dev_storage + 238;
d9360 1
a9360 1
return dev_storage + 237;
d9375 1
a9375 1
return dev_storage + 236;
d9390 1
a9390 1
return dev_storage + 235;
d9405 1
a9405 1
return dev_storage + 234;
d9420 1
a9420 1
return dev_storage + 233;
d9444 1
a9444 1
return dev_storage + 633;
d9459 1
a9459 1
return dev_storage + 632;
d9474 1
a9474 1
return dev_storage + 631;
d9489 1
a9489 1
return dev_storage + 630;
d9504 1
a9504 1
return dev_storage + 629;
d9519 1
a9519 1
return dev_storage + 628;
d9534 1
a9534 1
return dev_storage + 627;
d9549 1
a9549 1
return dev_storage + 626;
d9564 1
a9564 1
return dev_storage + 625;
d9579 1
a9579 1
return dev_storage + 624;
d9594 1
a9594 1
return dev_storage + 623;
d9609 1
a9609 1
return dev_storage + 622;
d9624 1
a9624 1
return dev_storage + 621;
d9639 1
a9639 1
return dev_storage + 620;
d9654 1
a9654 1
return dev_storage + 619;
d9669 1
a9669 1
return dev_storage + 618;
d9684 1
a9684 1
return dev_storage + 617;
d9699 1
a9699 1
return dev_storage + 616;
d9714 1
a9714 1
return dev_storage + 615;
d9729 1
a9729 1
return dev_storage + 614;
d9744 1
a9744 1
return dev_storage + 613;
d9759 1
a9759 1
return dev_storage + 612;
d9774 1
a9774 1
return dev_storage + 611;
d9789 1
a9789 1
return dev_storage + 610;
d9804 1
a9804 1
return dev_storage + 609;
d9819 1
a9819 1
return dev_storage + 608;
d9834 1
a9834 1
return dev_storage + 226;
d9849 1
a9849 1
return dev_storage + 225;
d9864 1
a9864 1
return dev_storage + 224;
d9879 1
a9879 1
return dev_storage + 223;
d9894 1
a9894 1
return dev_storage + 222;
d9909 1
a9909 1
return dev_storage + 221;
d9924 1
a9924 1
return dev_storage + 220;
d9939 1
a9939 1
return dev_storage + 219;
d9954 1
a9954 1
return dev_storage + 218;
d9978 1
a9978 1
return dev_storage + 2355;
d9993 1
a9993 1
return dev_storage + 2354;
d10008 1
a10008 1
return dev_storage + 2353;
d10023 1
a10023 1
return dev_storage + 2352;
d10038 1
a10038 1
return dev_storage + 2351;
d10053 1
a10053 1
return dev_storage + 2350;
d10068 1
a10068 1
return dev_storage + 2349;
d10083 1
a10083 1
return dev_storage + 2348;
d10098 1
a10098 1
return dev_storage + 2347;
d10113 1
a10113 1
return dev_storage + 2346;
d10137 1
a10137 1
return dev_storage + 2345;
d10152 1
a10152 1
return dev_storage + 2344;
d10167 1
a10167 1
return dev_storage + 2343;
d10182 1
a10182 1
return dev_storage + 2342;
d10197 1
a10197 1
return dev_storage + 2341;
d10212 1
a10212 1
return dev_storage + 2340;
d10227 1
a10227 1
return dev_storage + 2339;
d10242 1
a10242 1
return dev_storage + 2338;
d10257 1
a10257 1
return dev_storage + 2337;
d10272 1
a10272 1
return dev_storage + 2336;
d10296 1
a10296 1
return dev_storage + 2335;
d10311 1
a10311 1
return dev_storage + 2334;
d10326 1
a10326 1
return dev_storage + 2333;
d10341 1
a10341 1
return dev_storage + 2332;
d10356 1
a10356 1
return dev_storage + 2331;
d10371 1
a10371 1
return dev_storage + 2330;
d10386 1
a10386 1
return dev_storage + 2329;
d10401 1
a10401 1
return dev_storage + 2328;
d10416 1
a10416 1
return dev_storage + 2327;
d10431 1
a10431 1
return dev_storage + 2326;
d10455 1
a10455 1
return dev_storage + 2325;
d10470 1
a10470 1
return dev_storage + 2324;
d10485 1
a10485 1
return dev_storage + 2323;
d10500 1
a10500 1
return dev_storage + 2322;
d10515 1
a10515 1
return dev_storage + 2321;
d10530 1
a10530 1
return dev_storage + 2320;
d10545 1
a10545 1
return dev_storage + 2319;
d10560 1
a10560 1
return dev_storage + 2318;
d10575 1
a10575 1
return dev_storage + 2317;
d10590 1
a10590 1
return dev_storage + 2316;
d10614 1
a10614 1
return dev_storage + 2315;
d10629 1
a10629 1
return dev_storage + 2314;
d10644 1
a10644 1
return dev_storage + 2313;
d10659 1
a10659 1
return dev_storage + 2312;
d10674 1
a10674 1
return dev_storage + 2311;
d10689 1
a10689 1
return dev_storage + 2310;
d10704 1
a10704 1
return dev_storage + 2309;
d10719 1
a10719 1
return dev_storage + 2308;
d10734 1
a10734 1
return dev_storage + 2307;
d10749 1
a10749 1
return dev_storage + 2306;
d10773 1
a10773 1
return dev_storage + 2305;
d10788 1
a10788 1
return dev_storage + 2304;
d10803 1
a10803 1
return dev_storage + 2303;
d10818 1
a10818 1
return dev_storage + 2302;
d10833 1
a10833 1
return dev_storage + 2301;
d10848 1
a10848 1
return dev_storage + 2300;
d10863 1
a10863 1
return dev_storage + 2299;
d10878 1
a10878 1
return dev_storage + 2298;
d10893 1
a10893 1
return dev_storage + 2297;
d10908 1
a10908 1
return dev_storage + 2296;
d10932 1
a10932 1
return dev_storage + 2295;
d10947 1
a10947 1
return dev_storage + 2294;
d10962 1
a10962 1
return dev_storage + 2293;
d10977 1
a10977 1
return dev_storage + 2292;
d10992 1
a10992 1
return dev_storage + 2291;
d11007 1
a11007 1
return dev_storage + 2290;
d11022 1
a11022 1
return dev_storage + 2289;
d11037 1
a11037 1
return dev_storage + 2288;
d11052 1
a11052 1
return dev_storage + 2287;
d11067 1
a11067 1
return dev_storage + 2286;
d11091 1
a11091 1
return dev_storage + 2285;
d11106 1
a11106 1
return dev_storage + 2284;
d11121 1
a11121 1
return dev_storage + 2283;
d11136 1
a11136 1
return dev_storage + 2282;
d11151 1
a11151 1
return dev_storage + 2281;
d11166 1
a11166 1
return dev_storage + 2280;
d11181 1
a11181 1
return dev_storage + 2279;
d11196 1
a11196 1
return dev_storage + 2278;
d11211 1
a11211 1
return dev_storage + 2277;
d11226 1
a11226 1
return dev_storage + 2276;
d11250 1
a11250 1
return dev_storage + 2275;
d11265 1
a11265 1
return dev_storage + 2274;
d11280 1
a11280 1
return dev_storage + 2273;
d11295 1
a11295 1
return dev_storage + 2272;
d11313 1
a11313 1
return dev_storage + 2271;
d11328 1
a11328 1
return dev_storage + 2255;
d11343 1
a11343 1
return dev_storage + 37;
d11367 1
a11367 1
return dev_storage + 2270;
d11382 1
a11382 1
return dev_storage + 2254;
d11397 1
a11397 1
return dev_storage + 36;
d11421 1
a11421 1
return dev_storage + 2269;
d11436 1
a11436 1
return dev_storage + 2253;
d11451 1
a11451 1
return dev_storage + 35;
d11475 1
a11475 1
return dev_storage + 2268;
d11490 1
a11490 1
return dev_storage + 2252;
d11505 1
a11505 1
return dev_storage + 34;
d11529 1
a11529 1
return dev_storage + 2267;
d11544 1
a11544 1
return dev_storage + 2251;
d11559 1
a11559 1
return dev_storage + 33;
d11583 1
a11583 1
return dev_storage + 2266;
d11598 1
a11598 1
return dev_storage + 2250;
d11613 1
a11613 1
return dev_storage + 32;
d11670 1
a11670 1
return dev_storage + 1849;
d11685 1
a11685 1
return dev_storage + 1433;
d11700 1
a11700 1
return dev_storage + 1017;
d11724 1
a11724 1
return dev_storage + 1834;
d11739 1
a11739 1
return dev_storage + 1418;
d11754 1
a11754 1
return dev_storage + 1002;
d11778 1
a11778 1
return dev_storage + 2233;
d11793 1
a11793 1
return dev_storage + 1819;
d11808 1
a11808 1
return dev_storage + 1403;
d11823 1
a11823 1
return dev_storage + 987;
d11847 1
a11847 1
return dev_storage + 2218;
d11862 1
a11862 1
return dev_storage + 1804;
d11877 1
a11877 1
return dev_storage + 1388;
d11892 1
a11892 1
return dev_storage + 972;
d11916 1
a11916 1
return dev_storage + 2203;
d11931 1
a11931 1
return dev_storage + 1789;
d11946 1
a11946 1
return dev_storage + 1373;
d11961 1
a11961 1
return dev_storage + 957;
d11985 1
a11985 1
return dev_storage + 2188;
d12000 1
a12000 1
return dev_storage + 1774;
d12015 1
a12015 1
return dev_storage + 1358;
d12030 1
a12030 1
return dev_storage + 942;
d12054 1
a12054 1
return dev_storage + 2173;
d12069 1
a12069 1
return dev_storage + 1759;
d12084 1
a12084 1
return dev_storage + 1343;
d12099 1
a12099 1
return dev_storage + 927;
d12119 15
d12138 1
a12138 1
return dev_storage + 2158;
d12153 1
a12153 1
return dev_storage + 1744;
d12168 1
a12168 1
return dev_storage + 1328;
d12183 1
a12183 1
return dev_storage + 912;
d12207 1
a12207 1
return dev_storage + 2143;
d12222 1
a12222 1
return dev_storage + 1729;
d12237 1
a12237 1
return dev_storage + 1313;
d12252 1
a12252 1
return dev_storage + 897;
d12276 1
a12276 1
return dev_storage + 2128;
d12291 1
a12291 1
return dev_storage + 1714;
d12306 1
a12306 1
return dev_storage + 1298;
d12321 1
a12321 1
return dev_storage + 882;
d12345 1
a12345 1
return dev_storage + 2113;
d12360 1
a12360 1
return dev_storage + 1699;
d12375 1
a12375 1
return dev_storage + 1283;
d12390 1
a12390 1
return dev_storage + 867;
d12414 1
a12414 1
return dev_storage + 2098;
d12429 1
a12429 1
return dev_storage + 1684;
d12444 1
a12444 1
return dev_storage + 1268;
d12459 1
a12459 1
return dev_storage + 852;
d12483 1
a12483 1
return dev_storage + 2083;
d12498 1
a12498 1
return dev_storage + 1669;
d12513 1
a12513 1
return dev_storage + 1253;
d12528 1
a12528 1
return dev_storage + 837;
d12552 1
a12552 1
return dev_storage + 2068;
d12567 1
a12567 1
return dev_storage + 1654;
d12582 1
a12582 1
return dev_storage + 1238;
d12597 1
a12597 1
return dev_storage + 822;
d12621 1
a12621 1
return dev_storage + 2053;
d12636 1
a12636 1
return dev_storage + 1639;
d12651 1
a12651 1
return dev_storage + 1223;
d12666 1
a12666 1
return dev_storage + 807;
d12690 1
a12690 1
return dev_storage + 2038;
d12705 1
a12705 1
return dev_storage + 1624;
d12720 1
a12720 1
return dev_storage + 1208;
d12735 1
a12735 1
return dev_storage + 792;
d12759 1
a12759 1
return dev_storage + 2023;
d12774 1
a12774 1
return dev_storage + 1609;
d12789 1
a12789 1
return dev_storage + 1193;
d12804 1
a12804 1
return dev_storage + 777;
d12828 1
a12828 1
return dev_storage + 2008;
d12843 1
a12843 1
return dev_storage + 1594;
d12858 1
a12858 1
return dev_storage + 1178;
d12873 1
a12873 1
return dev_storage + 762;
d12897 1
a12897 1
return dev_storage + 1993;
d12912 1
a12912 1
return dev_storage + 1579;
d12927 1
a12927 1
return dev_storage + 1163;
d12942 1
a12942 1
return dev_storage + 747;
d12966 1
a12966 1
return dev_storage + 1978;
d12981 1
a12981 1
return dev_storage + 1564;
d12996 1
a12996 1
return dev_storage + 1148;
d13011 1
a13011 1
return dev_storage + 732;
d13035 1
a13035 1
return dev_storage + 1963;
d13050 1
a13050 1
return dev_storage + 1549;
d13065 1
a13065 1
return dev_storage + 1133;
d13080 1
a13080 1
return dev_storage + 717;
d13104 1
a13104 1
return dev_storage + 1948;
d13119 1
a13119 1
return dev_storage + 1534;
d13134 1
a13134 1
return dev_storage + 1118;
d13149 1
a13149 1
return dev_storage + 702;
d13173 1
a13173 1
return dev_storage + 1933;
d13188 1
a13188 1
return dev_storage + 1519;
d13203 1
a13203 1
return dev_storage + 1103;
d13218 1
a13218 1
return dev_storage + 687;
d13242 1
a13242 1
return dev_storage + 1918;
d13257 1
a13257 1
return dev_storage + 1504;
d13272 1
a13272 1
return dev_storage + 1088;
d13287 1
a13287 1
return dev_storage + 672;
d13311 1
a13311 1
return dev_storage + 1903;
d13326 1
a13326 1
return dev_storage + 1489;
d13341 1
a13341 1
return dev_storage + 1073;
d13356 1
a13356 1
return dev_storage + 657;
d13380 1
a13380 1
return dev_storage + 1888;
d13395 1
a13395 1
return dev_storage + 1474;
d13410 1
a13410 1
return dev_storage + 1058;
d13425 1
a13425 1
return dev_storage + 642;
d13446 1
a13446 1
return dev_storage + 2458;
d13461 1
a13461 1
return dev_storage + 142;
d13476 1
a13476 1
return dev_storage + 132;
d13491 1
a13491 1
return dev_storage + 122;
d13506 1
a13506 1
return dev_storage + 112;
d13524 1
a13524 1
return dev_storage + 2444;
d13539 1
a13539 1
return dev_storage + 102;
d13563 1
a13563 1
return dev_storage + 2434;
d13578 1
a13578 1
return dev_storage + 92;
d13602 1
a13602 1
return dev_storage + 2424;
d13617 1
a13617 1
return dev_storage + 82;
d13641 1
a13641 1
return dev_storage + 2414;
d13656 1
a13656 1
return dev_storage + 72;
d13680 1
a13680 1
return dev_storage + 2404;
d13695 1
a13695 1
return dev_storage + 2375;
d13710 1
a13710 1
return dev_storage + 62;
d13731 1
a13731 1
return dev_storage + 2365;
d13758 1
a13758 1
return dev_storage + 1848;
d13773 1
a13773 1
return dev_storage + 1432;
d13788 1
a13788 1
return dev_storage + 1016;
d13812 1
a13812 1
return dev_storage + 1833;
d13827 1
a13827 1
return dev_storage + 1417;
d13842 1
a13842 1
return dev_storage + 1001;
d13866 1
a13866 1
return dev_storage + 2232;
d13881 1
a13881 1
return dev_storage + 1818;
d13896 1
a13896 1
return dev_storage + 1402;
d13911 1
a13911 1
return dev_storage + 986;
d13935 1
a13935 1
return dev_storage + 2217;
d13950 1
a13950 1
return dev_storage + 1803;
d13965 1
a13965 1
return dev_storage + 1387;
d13980 1
a13980 1
return dev_storage + 971;
d14004 1
a14004 1
return dev_storage + 2202;
d14019 1
a14019 1
return dev_storage + 1788;
d14034 1
a14034 1
return dev_storage + 1372;
d14049 1
a14049 1
return dev_storage + 956;
d14073 1
a14073 1
return dev_storage + 2187;
d14088 1
a14088 1
return dev_storage + 1773;
d14103 1
a14103 1
return dev_storage + 1357;
d14118 1
a14118 1
return dev_storage + 941;
d14142 1
a14142 1
return dev_storage + 2172;
d14157 1
a14157 1
return dev_storage + 1758;
d14172 1
a14172 1
return dev_storage + 1342;
d14187 1
a14187 1
return dev_storage + 926;
d14207 15
d14226 1
a14226 1
return dev_storage + 2157;
d14241 1
a14241 1
return dev_storage + 1743;
d14256 1
a14256 1
return dev_storage + 1327;
d14271 1
a14271 1
return dev_storage + 911;
d14295 1
a14295 1
return dev_storage + 2142;
d14310 1
a14310 1
return dev_storage + 1728;
d14325 1
a14325 1
return dev_storage + 1312;
d14340 1
a14340 1
return dev_storage + 896;
d14364 1
a14364 1
return dev_storage + 2127;
d14379 1
a14379 1
return dev_storage + 1713;
d14394 1
a14394 1
return dev_storage + 1297;
d14409 1
a14409 1
return dev_storage + 881;
d14433 1
a14433 1
return dev_storage + 2112;
d14448 1
a14448 1
return dev_storage + 1698;
d14463 1
a14463 1
return dev_storage + 1282;
d14478 1
a14478 1
return dev_storage + 866;
d14502 1
a14502 1
return dev_storage + 2097;
d14517 1
a14517 1
return dev_storage + 1683;
d14532 1
a14532 1
return dev_storage + 1267;
d14547 1
a14547 1
return dev_storage + 851;
d14571 1
a14571 1
return dev_storage + 2082;
d14586 1
a14586 1
return dev_storage + 1668;
d14601 1
a14601 1
return dev_storage + 1252;
d14616 1
a14616 1
return dev_storage + 836;
d14640 1
a14640 1
return dev_storage + 2067;
d14655 1
a14655 1
return dev_storage + 1653;
d14670 1
a14670 1
return dev_storage + 1237;
d14685 1
a14685 1
return dev_storage + 821;
d14709 1
a14709 1
return dev_storage + 2052;
d14724 1
a14724 1
return dev_storage + 1638;
d14739 1
a14739 1
return dev_storage + 1222;
d14754 1
a14754 1
return dev_storage + 806;
d14778 1
a14778 1
return dev_storage + 2037;
d14793 1
a14793 1
return dev_storage + 1623;
d14808 1
a14808 1
return dev_storage + 1207;
d14823 1
a14823 1
return dev_storage + 791;
d14847 1
a14847 1
return dev_storage + 2022;
d14862 1
a14862 1
return dev_storage + 1608;
d14877 1
a14877 1
return dev_storage + 1192;
d14892 1
a14892 1
return dev_storage + 776;
d14916 1
a14916 1
return dev_storage + 2007;
d14931 1
a14931 1
return dev_storage + 1593;
d14946 1
a14946 1
return dev_storage + 1177;
d14961 1
a14961 1
return dev_storage + 761;
d14985 1
a14985 1
return dev_storage + 1992;
d15000 1
a15000 1
return dev_storage + 1578;
d15015 1
a15015 1
return dev_storage + 1162;
d15030 1
a15030 1
return dev_storage + 746;
d15054 1
a15054 1
return dev_storage + 1977;
d15069 1
a15069 1
return dev_storage + 1563;
d15084 1
a15084 1
return dev_storage + 1147;
d15099 1
a15099 1
return dev_storage + 731;
d15123 1
a15123 1
return dev_storage + 1962;
d15138 1
a15138 1
return dev_storage + 1548;
d15153 1
a15153 1
return dev_storage + 1132;
d15168 1
a15168 1
return dev_storage + 716;
d15192 1
a15192 1
return dev_storage + 1947;
d15207 1
a15207 1
return dev_storage + 1533;
d15222 1
a15222 1
return dev_storage + 1117;
d15237 1
a15237 1
return dev_storage + 701;
d15261 1
a15261 1
return dev_storage + 1932;
d15276 1
a15276 1
return dev_storage + 1518;
d15291 1
a15291 1
return dev_storage + 1102;
d15306 1
a15306 1
return dev_storage + 686;
d15330 1
a15330 1
return dev_storage + 1917;
d15345 1
a15345 1
return dev_storage + 1503;
d15360 1
a15360 1
return dev_storage + 1087;
d15375 1
a15375 1
return dev_storage + 671;
d15399 1
a15399 1
return dev_storage + 1902;
d15414 1
a15414 1
return dev_storage + 1488;
d15429 1
a15429 1
return dev_storage + 1072;
d15444 1
a15444 1
return dev_storage + 656;
d15468 1
a15468 1
return dev_storage + 1887;
d15483 1
a15483 1
return dev_storage + 1473;
d15498 1
a15498 1
return dev_storage + 1057;
d15513 1
a15513 1
return dev_storage + 641;
d15534 1
a15534 1
return dev_storage + 2457;
d15549 1
a15549 1
return dev_storage + 141;
d15564 1
a15564 1
return dev_storage + 131;
d15579 1
a15579 1
return dev_storage + 121;
d15594 1
a15594 1
return dev_storage + 111;
d15612 1
a15612 1
return dev_storage + 2443;
d15627 1
a15627 1
return dev_storage + 101;
d15651 1
a15651 1
return dev_storage + 2433;
d15666 1
a15666 1
return dev_storage + 91;
d15690 1
a15690 1
return dev_storage + 2423;
d15705 1
a15705 1
return dev_storage + 81;
d15729 1
a15729 1
return dev_storage + 2413;
d15744 1
a15744 1
return dev_storage + 71;
d15768 1
a15768 1
return dev_storage + 2403;
d15783 1
a15783 1
return dev_storage + 2374;
d15798 1
a15798 1
return dev_storage + 61;
d15819 1
a15819 1
return dev_storage + 2364;
d15846 1
a15846 1
return dev_storage + 1847;
d15861 1
a15861 1
return dev_storage + 1431;
d15876 1
a15876 1
return dev_storage + 1015;
d15900 1
a15900 1
return dev_storage + 1832;
d15915 1
a15915 1
return dev_storage + 1416;
d15930 1
a15930 1
return dev_storage + 1000;
d15954 1
a15954 1
return dev_storage + 2231;
d15969 1
a15969 1
return dev_storage + 1817;
d15984 1
a15984 1
return dev_storage + 1401;
d15999 1
a15999 1
return dev_storage + 985;
d16023 1
a16023 1
return dev_storage + 2216;
d16038 1
a16038 1
return dev_storage + 1802;
d16053 1
a16053 1
return dev_storage + 1386;
d16068 1
a16068 1
return dev_storage + 970;
d16092 1
a16092 1
return dev_storage + 2201;
d16107 1
a16107 1
return dev_storage + 1787;
d16122 1
a16122 1
return dev_storage + 1371;
d16137 1
a16137 1
return dev_storage + 955;
d16161 1
a16161 1
return dev_storage + 2186;
d16176 1
a16176 1
return dev_storage + 1772;
d16191 1
a16191 1
return dev_storage + 1356;
d16206 1
a16206 1
return dev_storage + 940;
d16230 1
a16230 1
return dev_storage + 2171;
d16245 1
a16245 1
return dev_storage + 1757;
d16260 1
a16260 1
return dev_storage + 1341;
d16275 1
a16275 1
return dev_storage + 925;
d16295 15
d16314 1
a16314 1
return dev_storage + 2156;
d16329 1
a16329 1
return dev_storage + 1742;
d16344 1
a16344 1
return dev_storage + 1326;
d16359 1
a16359 1
return dev_storage + 910;
d16383 1
a16383 1
return dev_storage + 2141;
d16398 1
a16398 1
return dev_storage + 1727;
d16413 1
a16413 1
return dev_storage + 1311;
d16428 1
a16428 1
return dev_storage + 895;
d16452 1
a16452 1
return dev_storage + 2126;
d16467 1
a16467 1
return dev_storage + 1712;
d16482 1
a16482 1
return dev_storage + 1296;
d16497 1
a16497 1
return dev_storage + 880;
d16521 1
a16521 1
return dev_storage + 2111;
d16536 1
a16536 1
return dev_storage + 1697;
d16551 1
a16551 1
return dev_storage + 1281;
d16566 1
a16566 1
return dev_storage + 865;
d16590 1
a16590 1
return dev_storage + 2096;
d16605 1
a16605 1
return dev_storage + 1682;
d16620 1
a16620 1
return dev_storage + 1266;
d16635 1
a16635 1
return dev_storage + 850;
d16659 1
a16659 1
return dev_storage + 2081;
d16674 1
a16674 1
return dev_storage + 1667;
d16689 1
a16689 1
return dev_storage + 1251;
d16704 1
a16704 1
return dev_storage + 835;
d16728 1
a16728 1
return dev_storage + 2066;
d16743 1
a16743 1
return dev_storage + 1652;
d16758 1
a16758 1
return dev_storage + 1236;
d16773 1
a16773 1
return dev_storage + 820;
d16797 1
a16797 1
return dev_storage + 2051;
d16812 1
a16812 1
return dev_storage + 1637;
d16827 1
a16827 1
return dev_storage + 1221;
d16842 1
a16842 1
return dev_storage + 805;
d16866 1
a16866 1
return dev_storage + 2036;
d16881 1
a16881 1
return dev_storage + 1622;
d16896 1
a16896 1
return dev_storage + 1206;
d16911 1
a16911 1
return dev_storage + 790;
d16935 1
a16935 1
return dev_storage + 2021;
d16950 1
a16950 1
return dev_storage + 1607;
d16965 1
a16965 1
return dev_storage + 1191;
d16980 1
a16980 1
return dev_storage + 775;
d17004 1
a17004 1
return dev_storage + 2006;
d17019 1
a17019 1
return dev_storage + 1592;
d17034 1
a17034 1
return dev_storage + 1176;
d17049 1
a17049 1
return dev_storage + 760;
d17073 1
a17073 1
return dev_storage + 1991;
d17088 1
a17088 1
return dev_storage + 1577;
d17103 1
a17103 1
return dev_storage + 1161;
d17118 1
a17118 1
return dev_storage + 745;
d17142 1
a17142 1
return dev_storage + 1976;
d17157 1
a17157 1
return dev_storage + 1562;
d17172 1
a17172 1
return dev_storage + 1146;
d17187 1
a17187 1
return dev_storage + 730;
d17211 1
a17211 1
return dev_storage + 1961;
d17226 1
a17226 1
return dev_storage + 1547;
d17241 1
a17241 1
return dev_storage + 1131;
d17256 1
a17256 1
return dev_storage + 715;
d17280 1
a17280 1
return dev_storage + 1946;
d17295 1
a17295 1
return dev_storage + 1532;
d17310 1
a17310 1
return dev_storage + 1116;
d17325 1
a17325 1
return dev_storage + 700;
d17349 1
a17349 1
return dev_storage + 1931;
d17364 1
a17364 1
return dev_storage + 1517;
d17379 1
a17379 1
return dev_storage + 1101;
d17394 1
a17394 1
return dev_storage + 685;
d17418 1
a17418 1
return dev_storage + 1916;
d17433 1
a17433 1
return dev_storage + 1502;
d17448 1
a17448 1
return dev_storage + 1086;
d17463 1
a17463 1
return dev_storage + 670;
d17487 1
a17487 1
return dev_storage + 1901;
d17502 1
a17502 1
return dev_storage + 1487;
d17517 1
a17517 1
return dev_storage + 1071;
d17532 1
a17532 1
return dev_storage + 655;
d17556 1
a17556 1
return dev_storage + 1886;
d17571 1
a17571 1
return dev_storage + 1472;
d17586 1
a17586 1
return dev_storage + 1056;
d17601 1
a17601 1
return dev_storage + 640;
d17622 1
a17622 1
return dev_storage + 2456;
d17637 1
a17637 1
return dev_storage + 140;
d17652 1
a17652 1
return dev_storage + 130;
d17667 1
a17667 1
return dev_storage + 120;
d17682 1
a17682 1
return dev_storage + 110;
d17700 1
a17700 1
return dev_storage + 2442;
d17715 1
a17715 1
return dev_storage + 100;
d17739 1
a17739 1
return dev_storage + 2432;
d17754 1
a17754 1
return dev_storage + 90;
d17778 1
a17778 1
return dev_storage + 2422;
d17793 1
a17793 1
return dev_storage + 80;
d17817 1
a17817 1
return dev_storage + 2412;
d17832 1
a17832 1
return dev_storage + 2383;
d17847 1
a17847 1
return dev_storage + 70;
d17871 1
a17871 1
return dev_storage + 2402;
d17886 1
a17886 1
return dev_storage + 2373;
d17901 1
a17901 1
return dev_storage + 60;
d17922 1
a17922 1
return dev_storage + 2363;
d17949 1
a17949 1
return dev_storage + 1846;
d17964 1
a17964 1
return dev_storage + 1430;
d17979 1
a17979 1
return dev_storage + 1014;
d18003 1
a18003 1
return dev_storage + 1831;
d18018 1
a18018 1
return dev_storage + 1415;
d18033 1
a18033 1
return dev_storage + 999;
d18057 1
a18057 1
return dev_storage + 2230;
d18072 1
a18072 1
return dev_storage + 1816;
d18087 1
a18087 1
return dev_storage + 1400;
d18102 1
a18102 1
return dev_storage + 984;
d18126 1
a18126 1
return dev_storage + 2215;
d18141 1
a18141 1
return dev_storage + 1801;
d18156 1
a18156 1
return dev_storage + 1385;
d18171 1
a18171 1
return dev_storage + 969;
d18195 1
a18195 1
return dev_storage + 2200;
d18210 1
a18210 1
return dev_storage + 1786;
d18225 1
a18225 1
return dev_storage + 1370;
d18240 1
a18240 1
return dev_storage + 954;
d18264 1
a18264 1
return dev_storage + 2185;
d18279 1
a18279 1
return dev_storage + 1771;
d18294 1
a18294 1
return dev_storage + 1355;
d18309 1
a18309 1
return dev_storage + 939;
d18333 1
a18333 1
return dev_storage + 2170;
d18348 1
a18348 1
return dev_storage + 1756;
d18363 1
a18363 1
return dev_storage + 1340;
d18378 1
a18378 1
return dev_storage + 924;
d18398 15
d18417 1
a18417 1
return dev_storage + 2155;
d18432 1
a18432 1
return dev_storage + 1741;
d18447 1
a18447 1
return dev_storage + 1325;
d18462 1
a18462 1
return dev_storage + 909;
d18486 1
a18486 1
return dev_storage + 2140;
d18501 1
a18501 1
return dev_storage + 1726;
d18516 1
a18516 1
return dev_storage + 1310;
d18531 1
a18531 1
return dev_storage + 894;
d18555 1
a18555 1
return dev_storage + 2125;
d18570 1
a18570 1
return dev_storage + 1711;
d18585 1
a18585 1
return dev_storage + 1295;
d18600 1
a18600 1
return dev_storage + 879;
d18624 1
a18624 1
return dev_storage + 2110;
d18639 1
a18639 1
return dev_storage + 1696;
d18654 1
a18654 1
return dev_storage + 1280;
d18669 1
a18669 1
return dev_storage + 864;
d18693 1
a18693 1
return dev_storage + 2095;
d18708 1
a18708 1
return dev_storage + 1681;
d18723 1
a18723 1
return dev_storage + 1265;
d18738 1
a18738 1
return dev_storage + 849;
d18762 1
a18762 1
return dev_storage + 2080;
d18777 1
a18777 1
return dev_storage + 1666;
d18792 1
a18792 1
return dev_storage + 1250;
d18807 1
a18807 1
return dev_storage + 834;
d18831 1
a18831 1
return dev_storage + 2065;
d18846 1
a18846 1
return dev_storage + 1651;
d18861 1
a18861 1
return dev_storage + 1235;
d18876 1
a18876 1
return dev_storage + 819;
d18900 1
a18900 1
return dev_storage + 2050;
d18915 1
a18915 1
return dev_storage + 1636;
d18930 1
a18930 1
return dev_storage + 1220;
d18945 1
a18945 1
return dev_storage + 804;
d18969 1
a18969 1
return dev_storage + 2035;
d18984 1
a18984 1
return dev_storage + 1621;
d18999 1
a18999 1
return dev_storage + 1205;
d19014 1
a19014 1
return dev_storage + 789;
d19038 1
a19038 1
return dev_storage + 2020;
d19053 1
a19053 1
return dev_storage + 1606;
d19068 1
a19068 1
return dev_storage + 1190;
d19083 1
a19083 1
return dev_storage + 774;
d19107 1
a19107 1
return dev_storage + 2005;
d19122 1
a19122 1
return dev_storage + 1591;
d19137 1
a19137 1
return dev_storage + 1175;
d19152 1
a19152 1
return dev_storage + 759;
d19176 1
a19176 1
return dev_storage + 1990;
d19191 1
a19191 1
return dev_storage + 1576;
d19206 1
a19206 1
return dev_storage + 1160;
d19221 1
a19221 1
return dev_storage + 744;
d19245 1
a19245 1
return dev_storage + 1975;
d19260 1
a19260 1
return dev_storage + 1561;
d19275 1
a19275 1
return dev_storage + 1145;
d19290 1
a19290 1
return dev_storage + 729;
d19314 1
a19314 1
return dev_storage + 1960;
d19329 1
a19329 1
return dev_storage + 1546;
d19344 1
a19344 1
return dev_storage + 1130;
d19359 1
a19359 1
return dev_storage + 714;
d19383 1
a19383 1
return dev_storage + 1945;
d19398 1
a19398 1
return dev_storage + 1531;
d19413 1
a19413 1
return dev_storage + 1115;
d19428 1
a19428 1
return dev_storage + 699;
d19452 1
a19452 1
return dev_storage + 1930;
d19467 1
a19467 1
return dev_storage + 1516;
d19482 1
a19482 1
return dev_storage + 1100;
d19497 1
a19497 1
return dev_storage + 684;
d19521 1
a19521 1
return dev_storage + 1915;
d19536 1
a19536 1
return dev_storage + 1501;
d19551 1
a19551 1
return dev_storage + 1085;
d19566 1
a19566 1
return dev_storage + 669;
d19590 1
a19590 1
return dev_storage + 1900;
d19605 1
a19605 1
return dev_storage + 1486;
d19620 1
a19620 1
return dev_storage + 1070;
d19635 1
a19635 1
return dev_storage + 654;
d19659 1
a19659 1
return dev_storage + 1885;
d19674 1
a19674 1
return dev_storage + 1471;
d19689 1
a19689 1
return dev_storage + 1055;
d19704 1
a19704 1
return dev_storage + 639;
d19725 1
a19725 1
return dev_storage + 2455;
d19740 1
a19740 1
return dev_storage + 139;
d19755 1
a19755 1
return dev_storage + 129;
d19770 1
a19770 1
return dev_storage + 119;
d19785 1
a19785 1
return dev_storage + 109;
d19803 1
a19803 1
return dev_storage + 2441;
d19818 1
a19818 1
return dev_storage + 99;
d19842 1
a19842 1
return dev_storage + 2431;
d19857 1
a19857 1
return dev_storage + 89;
d19881 1
a19881 1
return dev_storage + 2421;
d19896 1
a19896 1
return dev_storage + 79;
d19920 1
a19920 1
return dev_storage + 2411;
d19935 1
a19935 1
return dev_storage + 2382;
d19950 1
a19950 1
return dev_storage + 69;
d19974 1
a19974 1
return dev_storage + 2401;
d19989 1
a19989 1
return dev_storage + 2372;
d20004 1
a20004 1
return dev_storage + 59;
d20040 1
a20040 1
return dev_storage + 2362;
d20064 1
a20064 1
return dev_storage + 607;
d20082 1
a20082 1
return dev_storage + 2454;
d20097 1
a20097 1
return dev_storage + 2440;
d20112 1
a20112 1
return dev_storage + 2430;
d20127 1
a20127 1
return dev_storage + 2420;
d20142 1
a20142 1
return dev_storage + 2410;
d20160 1
a20160 1
return dev_storage + 2400;
d20175 1
a20175 1
return dev_storage + 592;
d20202 1
a20202 1
return dev_storage + 577;
d20217 1
a20217 1
return dev_storage + 562;
d20232 1
a20232 1
return dev_storage + 547;
d20247 1
a20247 1
return dev_storage + 532;
d20265 1
a20265 1
return dev_storage + 138;
d20280 1
a20280 1
return dev_storage + 128;
d20295 1
a20295 1
return dev_storage + 118;
d20310 1
a20310 1
return dev_storage + 108;
d20325 1
a20325 1
return dev_storage + 98;
d20340 1
a20340 1
return dev_storage + 88;
d20355 1
a20355 1
return dev_storage + 78;
d20370 1
a20370 1
return dev_storage + 68;
d20388 1
a20388 1
return dev_storage + 517;
d20403 1
a20403 1
return dev_storage + 58;
d20430 1
a20430 1
return dev_storage + 502;
d20445 1
a20445 1
return dev_storage + 487;
d20460 1
a20460 1
return dev_storage + 472;
d20475 1
a20475 1
return dev_storage + 457;
d20490 1
a20490 1
return dev_storage + 442;
d20502 1
a20502 1
              if (strncmp (KR_keyword, "/dev/sdn15", 10) == 0)
d20504 25
d20530 1
a20530 1
return dev_storage + 427;
d20533 2
a20534 3
                }
              else
                {
d20547 1
a20547 1
return dev_storage + 412;
d20583 1
a20583 1
return dev_storage + 397;
d20598 1
a20598 1
return dev_storage + 382;
d20613 1
a20613 1
return dev_storage + 367;
d20628 1
a20628 1
return dev_storage + 352;
d20643 1
a20643 1
return dev_storage + 337;
d20658 1
a20658 1
return dev_storage + 322;
d20673 1
a20673 1
return dev_storage + 307;
d20688 1
a20688 1
return dev_storage + 292;
d20706 1
a20706 1
return dev_storage + 2229;
d20721 1
a20721 1
return dev_storage + 2214;
d20736 1
a20736 1
return dev_storage + 2199;
d20751 1
a20751 1
return dev_storage + 2184;
d20766 1
a20766 1
return dev_storage + 2169;
d20781 1
a20781 1
return dev_storage + 2154;
d20796 1
a20796 1
return dev_storage + 2139;
d20811 1
a20811 1
return dev_storage + 2124;
d20826 1
a20826 1
return dev_storage + 2109;
d20841 1
a20841 1
return dev_storage + 2094;
d20856 1
a20856 1
return dev_storage + 2079;
d20871 1
a20871 1
return dev_storage + 2064;
d20886 1
a20886 1
return dev_storage + 2049;
d20901 1
a20901 1
return dev_storage + 2034;
d20916 1
a20916 1
return dev_storage + 2019;
d20931 1
a20931 1
return dev_storage + 2004;
d20946 1
a20946 1
return dev_storage + 1989;
d20961 1
a20961 1
return dev_storage + 1974;
d20976 1
a20976 1
return dev_storage + 1959;
d20991 1
a20991 1
return dev_storage + 1944;
d21006 1
a21006 1
return dev_storage + 1929;
d21021 1
a21021 1
return dev_storage + 1914;
d21036 1
a21036 1
return dev_storage + 1899;
d21051 1
a21051 1
return dev_storage + 1884;
d21069 1
a21069 1
return dev_storage + 277;
d21084 1
a21084 1
return dev_storage + 191;
d21114 1
a21114 1
return dev_storage + 1845;
d21129 1
a21129 1
return dev_storage + 1830;
d21144 1
a21144 1
return dev_storage + 1815;
d21159 1
a21159 1
return dev_storage + 1800;
d21174 1
a21174 1
return dev_storage + 1785;
d21189 1
a21189 1
return dev_storage + 1770;
d21204 1
a21204 1
return dev_storage + 1755;
d21219 1
a21219 1
return dev_storage + 1740;
d21234 1
a21234 1
return dev_storage + 1725;
d21249 1
a21249 1
return dev_storage + 1710;
d21264 1
a21264 1
return dev_storage + 1695;
d21279 1
a21279 1
return dev_storage + 1680;
d21294 1
a21294 1
return dev_storage + 1665;
d21309 1
a21309 1
return dev_storage + 1650;
d21324 1
a21324 1
return dev_storage + 1635;
d21339 1
a21339 1
return dev_storage + 1620;
d21354 1
a21354 1
return dev_storage + 1605;
d21369 1
a21369 1
return dev_storage + 1590;
d21384 1
a21384 1
return dev_storage + 1575;
d21399 1
a21399 1
return dev_storage + 1560;
d21414 1
a21414 1
return dev_storage + 1545;
d21429 1
a21429 1
return dev_storage + 1530;
d21444 1
a21444 1
return dev_storage + 1515;
d21459 1
a21459 1
return dev_storage + 1500;
d21474 1
a21474 1
return dev_storage + 1485;
d21489 1
a21489 1
return dev_storage + 1470;
d21504 1
a21504 1
return dev_storage + 262;
d21528 1
a21528 1
return dev_storage + 1429;
d21543 1
a21543 1
return dev_storage + 1414;
d21558 1
a21558 1
return dev_storage + 1399;
d21573 1
a21573 1
return dev_storage + 1384;
d21588 1
a21588 1
return dev_storage + 1369;
d21603 1
a21603 1
return dev_storage + 1354;
d21618 1
a21618 1
return dev_storage + 1339;
d21633 1
a21633 1
return dev_storage + 1324;
d21648 1
a21648 1
return dev_storage + 1309;
d21663 1
a21663 1
return dev_storage + 1294;
d21678 1
a21678 1
return dev_storage + 1279;
d21693 1
a21693 1
return dev_storage + 1264;
d21708 1
a21708 1
return dev_storage + 1249;
d21723 1
a21723 1
return dev_storage + 1234;
d21738 1
a21738 1
return dev_storage + 1219;
d21753 1
a21753 1
return dev_storage + 1204;
d21768 1
a21768 1
return dev_storage + 1189;
d21783 1
a21783 1
return dev_storage + 1174;
d21798 1
a21798 1
return dev_storage + 1159;
d21813 1
a21813 1
return dev_storage + 1144;
d21828 1
a21828 1
return dev_storage + 1129;
d21843 1
a21843 1
return dev_storage + 1114;
d21858 1
a21858 1
return dev_storage + 1099;
d21873 1
a21873 1
return dev_storage + 1084;
d21888 1
a21888 1
return dev_storage + 1069;
d21903 1
a21903 1
return dev_storage + 1054;
d21918 1
a21918 1
return dev_storage + 247;
d21942 1
a21942 1
return dev_storage + 1013;
d21957 1
a21957 1
return dev_storage + 998;
d21972 1
a21972 1
return dev_storage + 983;
d21987 1
a21987 1
return dev_storage + 968;
d22002 1
a22002 1
return dev_storage + 953;
d22017 1
a22017 1
return dev_storage + 938;
d22032 1
a22032 1
return dev_storage + 923;
d22047 1
a22047 1
return dev_storage + 908;
d22062 1
a22062 1
return dev_storage + 893;
d22077 1
a22077 1
return dev_storage + 878;
d22092 1
a22092 1
return dev_storage + 863;
d22107 1
a22107 1
return dev_storage + 848;
d22122 1
a22122 1
return dev_storage + 833;
d22137 1
a22137 1
return dev_storage + 818;
d22152 1
a22152 1
return dev_storage + 803;
d22167 1
a22167 1
return dev_storage + 788;
d22182 1
a22182 1
return dev_storage + 773;
d22197 1
a22197 1
return dev_storage + 758;
d22212 1
a22212 1
return dev_storage + 743;
d22227 1
a22227 1
return dev_storage + 728;
d22242 1
a22242 1
return dev_storage + 713;
d22257 1
a22257 1
return dev_storage + 698;
d22272 1
a22272 1
return dev_storage + 683;
d22287 1
a22287 1
return dev_storage + 668;
d22302 1
a22302 1
return dev_storage + 653;
d22317 1
a22317 1
return dev_storage + 638;
d22332 1
a22332 1
return dev_storage + 232;
d22356 1
a22356 1
return dev_storage + 2381;
d22371 1
a22371 1
return dev_storage + 2371;
d22386 1
a22386 1
return dev_storage + 2361;
d22416 1
a22416 1
return dev_storage + 606;
d22434 1
a22434 1
return dev_storage + 2453;
d22449 1
a22449 1
return dev_storage + 2439;
d22464 1
a22464 1
return dev_storage + 2429;
d22479 1
a22479 1
return dev_storage + 2419;
d22494 1
a22494 1
return dev_storage + 2409;
d22512 1
a22512 1
return dev_storage + 2399;
d22527 1
a22527 1
return dev_storage + 591;
d22554 1
a22554 1
return dev_storage + 576;
d22569 1
a22569 1
return dev_storage + 561;
d22584 1
a22584 1
return dev_storage + 546;
d22599 1
a22599 1
return dev_storage + 531;
d22617 1
a22617 1
return dev_storage + 137;
d22632 1
a22632 1
return dev_storage + 127;
d22647 1
a22647 1
return dev_storage + 117;
d22662 1
a22662 1
return dev_storage + 107;
d22677 1
a22677 1
return dev_storage + 97;
d22692 1
a22692 1
return dev_storage + 87;
d22707 1
a22707 1
return dev_storage + 77;
d22722 1
a22722 1
return dev_storage + 67;
d22740 1
a22740 1
return dev_storage + 516;
d22755 1
a22755 1
return dev_storage + 57;
d22782 1
a22782 1
return dev_storage + 501;
d22797 1
a22797 1
return dev_storage + 486;
d22812 1
a22812 1
return dev_storage + 471;
d22827 1
a22827 1
return dev_storage + 456;
d22842 1
a22842 1
return dev_storage + 441;
d22854 1
a22854 1
              if (strncmp (KR_keyword, "/dev/sdn14", 10) == 0)
d22856 18
d22875 8
a22882 1
return dev_storage + 426;
d22885 2
a22886 3
                }
              else
                {
d22899 1
a22899 1
return dev_storage + 411;
d22935 1
a22935 1
return dev_storage + 396;
d22950 1
a22950 1
return dev_storage + 381;
d22965 1
a22965 1
return dev_storage + 366;
d22980 1
a22980 1
return dev_storage + 351;
d22995 1
a22995 1
return dev_storage + 336;
d23010 1
a23010 1
return dev_storage + 321;
d23025 1
a23025 1
return dev_storage + 306;
d23040 1
a23040 1
return dev_storage + 291;
d23058 1
a23058 1
return dev_storage + 2228;
d23073 1
a23073 1
return dev_storage + 2213;
d23088 1
a23088 1
return dev_storage + 2198;
d23103 1
a23103 1
return dev_storage + 2183;
d23118 1
a23118 1
return dev_storage + 2168;
d23133 1
a23133 1
return dev_storage + 2153;
d23148 1
a23148 1
return dev_storage + 2138;
d23163 1
a23163 1
return dev_storage + 2123;
d23178 1
a23178 1
return dev_storage + 2108;
d23193 1
a23193 1
return dev_storage + 2093;
d23208 1
a23208 1
return dev_storage + 2078;
d23223 1
a23223 1
return dev_storage + 2063;
d23238 1
a23238 1
return dev_storage + 2048;
d23253 1
a23253 1
return dev_storage + 2033;
d23268 1
a23268 1
return dev_storage + 2018;
d23283 1
a23283 1
return dev_storage + 2003;
d23298 1
a23298 1
return dev_storage + 1988;
d23313 1
a23313 1
return dev_storage + 1973;
d23328 1
a23328 1
return dev_storage + 1958;
d23343 1
a23343 1
return dev_storage + 1943;
d23358 1
a23358 1
return dev_storage + 1928;
d23373 1
a23373 1
return dev_storage + 1913;
d23388 1
a23388 1
return dev_storage + 1898;
d23403 1
a23403 1
return dev_storage + 1883;
d23421 1
a23421 1
return dev_storage + 276;
d23436 1
a23436 1
return dev_storage + 190;
d23466 1
a23466 1
return dev_storage + 1844;
d23481 1
a23481 1
return dev_storage + 1829;
d23496 1
a23496 1
return dev_storage + 1814;
d23511 1
a23511 1
return dev_storage + 1799;
d23526 1
a23526 1
return dev_storage + 1784;
d23541 1
a23541 1
return dev_storage + 1769;
d23556 1
a23556 1
return dev_storage + 1754;
d23571 1
a23571 1
return dev_storage + 1739;
d23586 1
a23586 1
return dev_storage + 1724;
d23601 1
a23601 1
return dev_storage + 1709;
d23616 1
a23616 1
return dev_storage + 1694;
d23631 1
a23631 1
return dev_storage + 1679;
d23646 1
a23646 1
return dev_storage + 1664;
d23661 1
a23661 1
return dev_storage + 1649;
d23676 1
a23676 1
return dev_storage + 1634;
d23691 1
a23691 1
return dev_storage + 1619;
d23706 1
a23706 1
return dev_storage + 1604;
d23721 1
a23721 1
return dev_storage + 1589;
d23736 1
a23736 1
return dev_storage + 1574;
d23751 1
a23751 1
return dev_storage + 1559;
d23766 1
a23766 1
return dev_storage + 1544;
d23781 1
a23781 1
return dev_storage + 1529;
d23796 1
a23796 1
return dev_storage + 1514;
d23811 1
a23811 1
return dev_storage + 1499;
d23826 1
a23826 1
return dev_storage + 1484;
d23841 1
a23841 1
return dev_storage + 1469;
d23856 1
a23856 1
return dev_storage + 261;
d23880 1
a23880 1
return dev_storage + 1428;
d23895 1
a23895 1
return dev_storage + 1413;
d23910 1
a23910 1
return dev_storage + 1398;
d23925 1
a23925 1
return dev_storage + 1383;
d23940 1
a23940 1
return dev_storage + 1368;
d23955 1
a23955 1
return dev_storage + 1353;
d23970 1
a23970 1
return dev_storage + 1338;
d23985 1
a23985 1
return dev_storage + 1323;
d24000 1
a24000 1
return dev_storage + 1308;
d24015 1
a24015 1
return dev_storage + 1293;
d24030 1
a24030 1
return dev_storage + 1278;
d24045 1
a24045 1
return dev_storage + 1263;
d24060 1
a24060 1
return dev_storage + 1248;
d24075 1
a24075 1
return dev_storage + 1233;
d24090 1
a24090 1
return dev_storage + 1218;
d24105 1
a24105 1
return dev_storage + 1203;
d24120 1
a24120 1
return dev_storage + 1188;
d24135 1
a24135 1
return dev_storage + 1173;
d24150 1
a24150 1
return dev_storage + 1158;
d24165 1
a24165 1
return dev_storage + 1143;
d24180 1
a24180 1
return dev_storage + 1128;
d24195 1
a24195 1
return dev_storage + 1113;
d24210 1
a24210 1
return dev_storage + 1098;
d24225 1
a24225 1
return dev_storage + 1083;
d24240 1
a24240 1
return dev_storage + 1068;
d24255 1
a24255 1
return dev_storage + 1053;
d24270 1
a24270 1
return dev_storage + 246;
d24294 1
a24294 1
return dev_storage + 1012;
d24309 1
a24309 1
return dev_storage + 997;
d24324 1
a24324 1
return dev_storage + 982;
d24339 1
a24339 1
return dev_storage + 967;
d24354 1
a24354 1
return dev_storage + 952;
d24369 1
a24369 1
return dev_storage + 937;
d24384 1
a24384 1
return dev_storage + 922;
d24399 1
a24399 1
return dev_storage + 907;
d24414 1
a24414 1
return dev_storage + 892;
d24429 1
a24429 1
return dev_storage + 877;
d24444 1
a24444 1
return dev_storage + 862;
d24459 1
a24459 1
return dev_storage + 847;
d24474 1
a24474 1
return dev_storage + 832;
d24489 1
a24489 1
return dev_storage + 817;
d24504 1
a24504 1
return dev_storage + 802;
d24519 1
a24519 1
return dev_storage + 787;
d24534 1
a24534 1
return dev_storage + 772;
d24549 1
a24549 1
return dev_storage + 757;
d24564 1
a24564 1
return dev_storage + 742;
d24579 1
a24579 1
return dev_storage + 727;
d24594 1
a24594 1
return dev_storage + 712;
d24609 1
a24609 1
return dev_storage + 697;
d24624 1
a24624 1
return dev_storage + 682;
d24639 1
a24639 1
return dev_storage + 667;
d24654 1
a24654 1
return dev_storage + 652;
d24669 1
a24669 1
return dev_storage + 637;
d24684 1
a24684 1
return dev_storage + 231;
d24708 1
a24708 1
return dev_storage + 2380;
d24723 1
a24723 1
return dev_storage + 2370;
d24738 1
a24738 1
return dev_storage + 2360;
d24768 1
a24768 1
return dev_storage + 605;
d24786 1
a24786 1
return dev_storage + 2452;
d24801 1
a24801 1
return dev_storage + 2448;
d24816 1
a24816 1
return dev_storage + 2438;
d24831 1
a24831 1
return dev_storage + 2428;
d24846 1
a24846 1
return dev_storage + 2418;
d24861 1
a24861 1
return dev_storage + 2408;
d24879 1
a24879 1
return dev_storage + 2398;
d24894 1
a24894 1
return dev_storage + 590;
d24921 1
a24921 1
return dev_storage + 575;
d24936 1
a24936 1
return dev_storage + 560;
d24951 1
a24951 1
return dev_storage + 545;
d24966 1
a24966 1
return dev_storage + 530;
d24984 1
a24984 1
return dev_storage + 136;
d24999 1
a24999 1
return dev_storage + 126;
d25014 1
a25014 1
return dev_storage + 116;
d25029 1
a25029 1
return dev_storage + 106;
d25044 1
a25044 1
return dev_storage + 96;
d25059 1
a25059 1
return dev_storage + 86;
d25074 1
a25074 1
return dev_storage + 76;
d25089 1
a25089 1
return dev_storage + 66;
d25107 1
a25107 1
return dev_storage + 515;
d25122 1
a25122 1
return dev_storage + 56;
d25149 1
a25149 1
return dev_storage + 500;
d25164 1
a25164 1
return dev_storage + 485;
d25179 1
a25179 1
return dev_storage + 470;
d25194 1
a25194 1
return dev_storage + 455;
d25209 1
a25209 1
return dev_storage + 440;
d25221 1
a25221 1
              if (strncmp (KR_keyword, "/dev/sdn13", 10) == 0)
d25223 25
d25249 1
a25249 1
return dev_storage + 425;
d25252 2
a25253 3
                }
              else
                {
d25266 1
a25266 1
return dev_storage + 410;
d25302 1
a25302 1
return dev_storage + 395;
d25317 1
a25317 1
return dev_storage + 380;
d25332 1
a25332 1
return dev_storage + 365;
d25347 1
a25347 1
return dev_storage + 350;
d25362 1
a25362 1
return dev_storage + 335;
d25377 1
a25377 1
return dev_storage + 320;
d25392 1
a25392 1
return dev_storage + 305;
d25407 1
a25407 1
return dev_storage + 290;
d25425 1
a25425 1
return dev_storage + 2227;
d25440 1
a25440 1
return dev_storage + 2212;
d25455 1
a25455 1
return dev_storage + 2197;
d25470 1
a25470 1
return dev_storage + 2182;
d25485 1
a25485 1
return dev_storage + 2167;
d25500 1
a25500 1
return dev_storage + 2152;
d25515 1
a25515 1
return dev_storage + 2137;
d25530 1
a25530 1
return dev_storage + 2122;
d25545 1
a25545 1
return dev_storage + 2107;
d25560 1
a25560 1
return dev_storage + 2092;
d25575 1
a25575 1
return dev_storage + 2077;
d25590 1
a25590 1
return dev_storage + 2062;
d25605 1
a25605 1
return dev_storage + 2047;
d25620 1
a25620 1
return dev_storage + 2032;
d25635 1
a25635 1
return dev_storage + 2017;
d25650 1
a25650 1
return dev_storage + 2002;
d25665 1
a25665 1
return dev_storage + 1987;
d25680 1
a25680 1
return dev_storage + 1972;
d25695 1
a25695 1
return dev_storage + 1957;
d25710 1
a25710 1
return dev_storage + 1942;
d25725 1
a25725 1
return dev_storage + 1927;
d25740 1
a25740 1
return dev_storage + 1912;
d25755 1
a25755 1
return dev_storage + 1897;
d25770 1
a25770 1
return dev_storage + 1882;
d25788 1
a25788 1
return dev_storage + 275;
d25803 1
a25803 1
return dev_storage + 189;
d25833 1
a25833 1
return dev_storage + 1843;
d25848 1
a25848 1
return dev_storage + 1828;
d25863 1
a25863 1
return dev_storage + 1813;
d25878 1
a25878 1
return dev_storage + 1798;
d25893 1
a25893 1
return dev_storage + 1783;
d25908 1
a25908 1
return dev_storage + 1768;
d25923 1
a25923 1
return dev_storage + 1753;
d25938 1
a25938 1
return dev_storage + 1738;
d25953 1
a25953 1
return dev_storage + 1723;
d25968 1
a25968 1
return dev_storage + 1708;
d25983 1
a25983 1
return dev_storage + 1693;
d25998 1
a25998 1
return dev_storage + 1678;
d26013 1
a26013 1
return dev_storage + 1663;
d26028 1
a26028 1
return dev_storage + 1648;
d26043 1
a26043 1
return dev_storage + 1633;
d26058 1
a26058 1
return dev_storage + 1618;
d26073 1
a26073 1
return dev_storage + 1603;
d26088 1
a26088 1
return dev_storage + 1588;
d26103 1
a26103 1
return dev_storage + 1573;
d26118 1
a26118 1
return dev_storage + 1558;
d26133 1
a26133 1
return dev_storage + 1543;
d26148 1
a26148 1
return dev_storage + 1528;
d26163 1
a26163 1
return dev_storage + 1513;
d26178 1
a26178 1
return dev_storage + 1498;
d26193 1
a26193 1
return dev_storage + 1483;
d26208 1
a26208 1
return dev_storage + 1468;
d26223 1
a26223 1
return dev_storage + 260;
d26247 1
a26247 1
return dev_storage + 1427;
d26262 1
a26262 1
return dev_storage + 1412;
d26277 1
a26277 1
return dev_storage + 1397;
d26292 1
a26292 1
return dev_storage + 1382;
d26307 1
a26307 1
return dev_storage + 1367;
d26322 1
a26322 1
return dev_storage + 1352;
d26337 1
a26337 1
return dev_storage + 1337;
d26352 1
a26352 1
return dev_storage + 1322;
d26367 1
a26367 1
return dev_storage + 1307;
d26382 1
a26382 1
return dev_storage + 1292;
d26397 1
a26397 1
return dev_storage + 1277;
d26412 1
a26412 1
return dev_storage + 1262;
d26427 1
a26427 1
return dev_storage + 1247;
d26442 1
a26442 1
return dev_storage + 1232;
d26457 1
a26457 1
return dev_storage + 1217;
d26472 1
a26472 1
return dev_storage + 1202;
d26487 1
a26487 1
return dev_storage + 1187;
d26502 1
a26502 1
return dev_storage + 1172;
d26517 1
a26517 1
return dev_storage + 1157;
d26532 1
a26532 1
return dev_storage + 1142;
d26547 1
a26547 1
return dev_storage + 1127;
d26562 1
a26562 1
return dev_storage + 1112;
d26577 1
a26577 1
return dev_storage + 1097;
d26592 1
a26592 1
return dev_storage + 1082;
d26607 1
a26607 1
return dev_storage + 1067;
d26622 1
a26622 1
return dev_storage + 1052;
d26637 1
a26637 1
return dev_storage + 245;
d26661 1
a26661 1
return dev_storage + 1011;
d26676 1
a26676 1
return dev_storage + 996;
d26691 1
a26691 1
return dev_storage + 981;
d26706 1
a26706 1
return dev_storage + 966;
d26721 1
a26721 1
return dev_storage + 951;
d26736 1
a26736 1
return dev_storage + 936;
d26751 1
a26751 1
return dev_storage + 921;
d26766 1
a26766 1
return dev_storage + 906;
d26781 1
a26781 1
return dev_storage + 891;
d26796 1
a26796 1
return dev_storage + 876;
d26811 1
a26811 1
return dev_storage + 861;
d26826 1
a26826 1
return dev_storage + 846;
d26841 1
a26841 1
return dev_storage + 831;
d26856 1
a26856 1
return dev_storage + 816;
d26871 1
a26871 1
return dev_storage + 801;
d26886 1
a26886 1
return dev_storage + 786;
d26901 1
a26901 1
return dev_storage + 771;
d26916 1
a26916 1
return dev_storage + 756;
d26931 1
a26931 1
return dev_storage + 741;
d26946 1
a26946 1
return dev_storage + 726;
d26961 1
a26961 1
return dev_storage + 711;
d26976 1
a26976 1
return dev_storage + 696;
d26991 1
a26991 1
return dev_storage + 681;
d27006 1
a27006 1
return dev_storage + 666;
d27021 1
a27021 1
return dev_storage + 651;
d27036 1
a27036 1
return dev_storage + 636;
d27051 1
a27051 1
return dev_storage + 230;
d27075 1
a27075 1
return dev_storage + 2379;
d27090 1
a27090 1
return dev_storage + 2369;
d27105 1
a27105 1
return dev_storage + 2359;
d27135 1
a27135 1
return dev_storage + 604;
d27153 1
a27153 1
return dev_storage + 2451;
d27168 1
a27168 1
return dev_storage + 2447;
d27183 1
a27183 1
return dev_storage + 2437;
d27198 1
a27198 1
return dev_storage + 2427;
d27213 1
a27213 1
return dev_storage + 2417;
d27228 1
a27228 1
return dev_storage + 2407;
d27246 1
a27246 1
return dev_storage + 2397;
d27261 1
a27261 1
return dev_storage + 589;
d27288 1
a27288 1
return dev_storage + 574;
d27303 1
a27303 1
return dev_storage + 559;
d27318 1
a27318 1
return dev_storage + 544;
d27333 1
a27333 1
return dev_storage + 529;
d27351 1
a27351 1
return dev_storage + 135;
d27366 1
a27366 1
return dev_storage + 125;
d27381 1
a27381 1
return dev_storage + 115;
d27396 1
a27396 1
return dev_storage + 105;
d27411 1
a27411 1
return dev_storage + 95;
d27426 1
a27426 1
return dev_storage + 85;
d27441 1
a27441 1
return dev_storage + 75;
d27456 1
a27456 1
return dev_storage + 65;
d27474 1
a27474 1
return dev_storage + 514;
d27489 1
a27489 1
return dev_storage + 55;
d27516 1
a27516 1
return dev_storage + 499;
d27531 1
a27531 1
return dev_storage + 484;
d27546 1
a27546 1
return dev_storage + 469;
d27561 1
a27561 1
return dev_storage + 454;
d27576 1
a27576 1
return dev_storage + 439;
d27588 1
a27588 1
              if (strncmp (KR_keyword, "/dev/sdn12", 10) == 0)
d27590 25
d27616 1
a27616 1
return dev_storage + 424;
d27619 2
a27620 3
                }
              else
                {
d27633 1
a27633 1
return dev_storage + 409;
d27669 1
a27669 1
return dev_storage + 394;
d27684 1
a27684 1
return dev_storage + 379;
d27699 1
a27699 1
return dev_storage + 364;
d27714 1
a27714 1
return dev_storage + 349;
d27729 1
a27729 1
return dev_storage + 334;
d27744 1
a27744 1
return dev_storage + 319;
d27759 1
a27759 1
return dev_storage + 304;
d27774 1
a27774 1
return dev_storage + 289;
d27792 1
a27792 1
return dev_storage + 2226;
d27807 1
a27807 1
return dev_storage + 2211;
d27822 1
a27822 1
return dev_storage + 2196;
d27837 1
a27837 1
return dev_storage + 2181;
d27852 1
a27852 1
return dev_storage + 2166;
d27867 1
a27867 1
return dev_storage + 2151;
d27882 1
a27882 1
return dev_storage + 2136;
d27897 1
a27897 1
return dev_storage + 2121;
d27912 1
a27912 1
return dev_storage + 2106;
d27927 1
a27927 1
return dev_storage + 2091;
d27942 1
a27942 1
return dev_storage + 2076;
d27957 1
a27957 1
return dev_storage + 2061;
d27972 1
a27972 1
return dev_storage + 2046;
d27987 1
a27987 1
return dev_storage + 2031;
d28002 1
a28002 1
return dev_storage + 2016;
d28017 1
a28017 1
return dev_storage + 2001;
d28032 1
a28032 1
return dev_storage + 1986;
d28047 1
a28047 1
return dev_storage + 1971;
d28062 1
a28062 1
return dev_storage + 1956;
d28077 1
a28077 1
return dev_storage + 1941;
d28092 1
a28092 1
return dev_storage + 1926;
d28107 1
a28107 1
return dev_storage + 1911;
d28122 1
a28122 1
return dev_storage + 1896;
d28137 1
a28137 1
return dev_storage + 1881;
d28155 1
a28155 1
return dev_storage + 274;
d28170 1
a28170 1
return dev_storage + 188;
d28200 1
a28200 1
return dev_storage + 1842;
d28215 1
a28215 1
return dev_storage + 1827;
d28230 1
a28230 1
return dev_storage + 1812;
d28245 1
a28245 1
return dev_storage + 1797;
d28260 1
a28260 1
return dev_storage + 1782;
d28275 1
a28275 1
return dev_storage + 1767;
d28290 1
a28290 1
return dev_storage + 1752;
d28305 1
a28305 1
return dev_storage + 1737;
d28320 1
a28320 1
return dev_storage + 1722;
d28335 1
a28335 1
return dev_storage + 1707;
d28350 1
a28350 1
return dev_storage + 1692;
d28365 1
a28365 1
return dev_storage + 1677;
d28380 1
a28380 1
return dev_storage + 1662;
d28395 1
a28395 1
return dev_storage + 1647;
d28410 1
a28410 1
return dev_storage + 1632;
d28425 1
a28425 1
return dev_storage + 1617;
d28440 1
a28440 1
return dev_storage + 1602;
d28455 1
a28455 1
return dev_storage + 1587;
d28470 1
a28470 1
return dev_storage + 1572;
d28485 1
a28485 1
return dev_storage + 1557;
d28500 1
a28500 1
return dev_storage + 1542;
d28515 1
a28515 1
return dev_storage + 1527;
d28530 1
a28530 1
return dev_storage + 1512;
d28545 1
a28545 1
return dev_storage + 1497;
d28560 1
a28560 1
return dev_storage + 1482;
d28575 1
a28575 1
return dev_storage + 1467;
d28590 1
a28590 1
return dev_storage + 259;
d28614 1
a28614 1
return dev_storage + 1426;
d28629 1
a28629 1
return dev_storage + 1411;
d28644 1
a28644 1
return dev_storage + 1396;
d28659 1
a28659 1
return dev_storage + 1381;
d28674 1
a28674 1
return dev_storage + 1366;
d28689 1
a28689 1
return dev_storage + 1351;
d28704 1
a28704 1
return dev_storage + 1336;
d28719 1
a28719 1
return dev_storage + 1321;
d28734 1
a28734 1
return dev_storage + 1306;
d28749 1
a28749 1
return dev_storage + 1291;
d28764 1
a28764 1
return dev_storage + 1276;
d28779 1
a28779 1
return dev_storage + 1261;
d28794 1
a28794 1
return dev_storage + 1246;
d28809 1
a28809 1
return dev_storage + 1231;
d28824 1
a28824 1
return dev_storage + 1216;
d28839 1
a28839 1
return dev_storage + 1201;
d28854 1
a28854 1
return dev_storage + 1186;
d28869 1
a28869 1
return dev_storage + 1171;
d28884 1
a28884 1
return dev_storage + 1156;
d28899 1
a28899 1
return dev_storage + 1141;
d28914 1
a28914 1
return dev_storage + 1126;
d28929 1
a28929 1
return dev_storage + 1111;
d28944 1
a28944 1
return dev_storage + 1096;
d28959 1
a28959 1
return dev_storage + 1081;
d28974 1
a28974 1
return dev_storage + 1066;
d28989 1
a28989 1
return dev_storage + 1051;
d29004 1
a29004 1
return dev_storage + 244;
d29028 1
a29028 1
return dev_storage + 1010;
d29043 1
a29043 1
return dev_storage + 995;
d29058 1
a29058 1
return dev_storage + 980;
d29073 1
a29073 1
return dev_storage + 965;
d29088 1
a29088 1
return dev_storage + 950;
d29103 1
a29103 1
return dev_storage + 935;
d29118 1
a29118 1
return dev_storage + 920;
d29133 1
a29133 1
return dev_storage + 905;
d29148 1
a29148 1
return dev_storage + 890;
d29163 1
a29163 1
return dev_storage + 875;
d29178 1
a29178 1
return dev_storage + 860;
d29193 1
a29193 1
return dev_storage + 845;
d29208 1
a29208 1
return dev_storage + 830;
d29223 1
a29223 1
return dev_storage + 815;
d29238 1
a29238 1
return dev_storage + 800;
d29253 1
a29253 1
return dev_storage + 785;
d29268 1
a29268 1
return dev_storage + 770;
d29283 1
a29283 1
return dev_storage + 755;
d29298 1
a29298 1
return dev_storage + 740;
d29313 1
a29313 1
return dev_storage + 725;
d29328 1
a29328 1
return dev_storage + 710;
d29343 1
a29343 1
return dev_storage + 695;
d29358 1
a29358 1
return dev_storage + 680;
d29373 1
a29373 1
return dev_storage + 665;
d29388 1
a29388 1
return dev_storage + 650;
d29403 1
a29403 1
return dev_storage + 635;
d29418 1
a29418 1
return dev_storage + 229;
d29442 1
a29442 1
return dev_storage + 2378;
d29457 1
a29457 1
return dev_storage + 2368;
d29472 1
a29472 1
return dev_storage + 2358;
d29502 1
a29502 1
return dev_storage + 603;
d29520 1
a29520 1
return dev_storage + 2450;
d29535 1
a29535 1
return dev_storage + 2446;
d29550 1
a29550 1
return dev_storage + 2436;
d29565 1
a29565 1
return dev_storage + 2426;
d29580 1
a29580 1
return dev_storage + 2416;
d29595 1
a29595 1
return dev_storage + 2406;
d29613 1
a29613 1
return dev_storage + 2396;
d29628 1
a29628 1
return dev_storage + 588;
d29655 1
a29655 1
return dev_storage + 573;
d29670 1
a29670 1
return dev_storage + 558;
d29685 1
a29685 1
return dev_storage + 543;
d29700 1
a29700 1
return dev_storage + 528;
d29718 1
a29718 1
return dev_storage + 134;
d29733 1
a29733 1
return dev_storage + 124;
d29748 1
a29748 1
return dev_storage + 114;
d29763 1
a29763 1
return dev_storage + 104;
d29778 1
a29778 1
return dev_storage + 94;
d29793 1
a29793 1
return dev_storage + 84;
d29808 1
a29808 1
return dev_storage + 74;
d29823 1
a29823 1
return dev_storage + 64;
d29841 1
a29841 1
return dev_storage + 513;
d29856 1
a29856 1
return dev_storage + 54;
d29883 1
a29883 1
return dev_storage + 498;
d29898 1
a29898 1
return dev_storage + 483;
d29913 1
a29913 1
return dev_storage + 468;
d29928 1
a29928 1
return dev_storage + 453;
d29943 1
a29943 1
return dev_storage + 438;
d29955 1
a29955 1
              if (strncmp (KR_keyword, "/dev/sdn11", 10) == 0)
d29957 10
d29968 16
a29983 1
return dev_storage + 423;
d29986 2
a29987 3
                }
              else
                {
d30000 1
a30000 1
return dev_storage + 408;
d30036 1
a30036 1
return dev_storage + 393;
d30051 1
a30051 1
return dev_storage + 378;
d30066 1
a30066 1
return dev_storage + 363;
d30081 1
a30081 1
return dev_storage + 348;
d30096 1
a30096 1
return dev_storage + 333;
d30111 1
a30111 1
return dev_storage + 318;
d30126 1
a30126 1
return dev_storage + 303;
d30141 1
a30141 1
return dev_storage + 288;
d30159 1
a30159 1
return dev_storage + 2225;
d30174 1
a30174 1
return dev_storage + 2210;
d30189 1
a30189 1
return dev_storage + 2195;
d30204 1
a30204 1
return dev_storage + 2180;
d30219 1
a30219 1
return dev_storage + 2165;
d30234 1
a30234 1
return dev_storage + 2150;
d30249 1
a30249 1
return dev_storage + 2135;
d30264 1
a30264 1
return dev_storage + 2120;
d30279 1
a30279 1
return dev_storage + 2105;
d30294 1
a30294 1
return dev_storage + 2090;
d30309 1
a30309 1
return dev_storage + 2075;
d30324 1
a30324 1
return dev_storage + 2060;
d30339 1
a30339 1
return dev_storage + 2045;
d30354 1
a30354 1
return dev_storage + 2030;
d30369 1
a30369 1
return dev_storage + 2015;
d30384 1
a30384 1
return dev_storage + 2000;
d30399 1
a30399 1
return dev_storage + 1985;
d30414 1
a30414 1
return dev_storage + 1970;
d30429 1
a30429 1
return dev_storage + 1955;
d30444 1
a30444 1
return dev_storage + 1940;
d30459 1
a30459 1
return dev_storage + 1925;
d30474 1
a30474 1
return dev_storage + 1910;
d30489 1
a30489 1
return dev_storage + 1895;
d30504 1
a30504 1
return dev_storage + 1880;
d30522 1
a30522 1
return dev_storage + 273;
d30537 1
a30537 1
return dev_storage + 187;
d30567 1
a30567 1
return dev_storage + 1841;
d30582 1
a30582 1
return dev_storage + 1826;
d30597 1
a30597 1
return dev_storage + 1811;
d30612 1
a30612 1
return dev_storage + 1796;
d30627 1
a30627 1
return dev_storage + 1781;
d30642 1
a30642 1
return dev_storage + 1766;
d30657 1
a30657 1
return dev_storage + 1751;
d30672 1
a30672 1
return dev_storage + 1736;
d30687 1
a30687 1
return dev_storage + 1721;
d30702 1
a30702 1
return dev_storage + 1706;
d30717 1
a30717 1
return dev_storage + 1691;
d30732 1
a30732 1
return dev_storage + 1676;
d30747 1
a30747 1
return dev_storage + 1661;
d30762 1
a30762 1
return dev_storage + 1646;
d30777 1
a30777 1
return dev_storage + 1631;
d30792 1
a30792 1
return dev_storage + 1616;
d30807 1
a30807 1
return dev_storage + 1601;
d30822 1
a30822 1
return dev_storage + 1586;
d30837 1
a30837 1
return dev_storage + 1571;
d30852 1
a30852 1
return dev_storage + 1556;
d30867 1
a30867 1
return dev_storage + 1541;
d30882 1
a30882 1
return dev_storage + 1526;
d30897 1
a30897 1
return dev_storage + 1511;
d30912 1
a30912 1
return dev_storage + 1496;
d30927 1
a30927 1
return dev_storage + 1481;
d30942 1
a30942 1
return dev_storage + 1466;
d30957 1
a30957 1
return dev_storage + 258;
d30981 1
a30981 1
return dev_storage + 1425;
d30996 1
a30996 1
return dev_storage + 1410;
d31011 1
a31011 1
return dev_storage + 1395;
d31026 1
a31026 1
return dev_storage + 1380;
d31041 1
a31041 1
return dev_storage + 1365;
d31056 1
a31056 1
return dev_storage + 1350;
d31071 1
a31071 1
return dev_storage + 1335;
d31086 1
a31086 1
return dev_storage + 1320;
d31101 1
a31101 1
return dev_storage + 1305;
d31116 1
a31116 1
return dev_storage + 1290;
d31131 1
a31131 1
return dev_storage + 1275;
d31146 1
a31146 1
return dev_storage + 1260;
d31161 1
a31161 1
return dev_storage + 1245;
d31176 1
a31176 1
return dev_storage + 1230;
d31191 1
a31191 1
return dev_storage + 1215;
d31206 1
a31206 1
return dev_storage + 1200;
d31221 1
a31221 1
return dev_storage + 1185;
d31236 1
a31236 1
return dev_storage + 1170;
d31251 1
a31251 1
return dev_storage + 1155;
d31266 1
a31266 1
return dev_storage + 1140;
d31281 1
a31281 1
return dev_storage + 1125;
d31296 1
a31296 1
return dev_storage + 1110;
d31311 1
a31311 1
return dev_storage + 1095;
d31326 1
a31326 1
return dev_storage + 1080;
d31341 1
a31341 1
return dev_storage + 1065;
d31356 1
a31356 1
return dev_storage + 1050;
d31371 1
a31371 1
return dev_storage + 243;
d31395 1
a31395 1
return dev_storage + 1009;
d31410 1
a31410 1
return dev_storage + 994;
d31425 1
a31425 1
return dev_storage + 979;
d31440 1
a31440 1
return dev_storage + 964;
d31455 1
a31455 1
return dev_storage + 949;
d31470 1
a31470 1
return dev_storage + 934;
d31485 1
a31485 1
return dev_storage + 919;
d31500 1
a31500 1
return dev_storage + 904;
d31515 1
a31515 1
return dev_storage + 889;
d31530 1
a31530 1
return dev_storage + 874;
d31545 1
a31545 1
return dev_storage + 859;
d31560 1
a31560 1
return dev_storage + 844;
d31575 1
a31575 1
return dev_storage + 829;
d31590 1
a31590 1
return dev_storage + 814;
d31605 1
a31605 1
return dev_storage + 799;
d31620 1
a31620 1
return dev_storage + 784;
d31635 1
a31635 1
return dev_storage + 769;
d31650 1
a31650 1
return dev_storage + 754;
d31665 1
a31665 1
return dev_storage + 739;
d31680 1
a31680 1
return dev_storage + 724;
d31695 1
a31695 1
return dev_storage + 709;
d31710 1
a31710 1
return dev_storage + 694;
d31725 1
a31725 1
return dev_storage + 679;
d31740 1
a31740 1
return dev_storage + 664;
d31755 1
a31755 1
return dev_storage + 649;
d31770 1
a31770 1
return dev_storage + 634;
d31785 1
a31785 1
return dev_storage + 228;
d31809 1
a31809 1
return dev_storage + 2377;
d31824 1
a31824 1
return dev_storage + 2367;
d31839 1
a31839 1
return dev_storage + 2357;
d31869 1
a31869 1
return dev_storage + 602;
d31887 1
a31887 1
return dev_storage + 2449;
d31902 1
a31902 1
return dev_storage + 2445;
d31917 1
a31917 1
return dev_storage + 2435;
d31932 1
a31932 1
return dev_storage + 2425;
d31947 1
a31947 1
return dev_storage + 2415;
d31962 1
a31962 1
return dev_storage + 2405;
d31980 1
a31980 1
return dev_storage + 2395;
d31995 1
a31995 1
return dev_storage + 587;
d32022 1
a32022 1
return dev_storage + 572;
d32037 1
a32037 1
return dev_storage + 557;
d32052 1
a32052 1
return dev_storage + 542;
d32067 1
a32067 1
return dev_storage + 527;
d32085 1
a32085 1
return dev_storage + 133;
d32100 1
a32100 1
return dev_storage + 123;
d32115 1
a32115 1
return dev_storage + 113;
d32130 1
a32130 1
return dev_storage + 103;
d32145 1
a32145 1
return dev_storage + 93;
d32160 1
a32160 1
return dev_storage + 83;
d32175 1
a32175 1
return dev_storage + 73;
d32190 1
a32190 1
return dev_storage + 63;
d32208 1
a32208 1
return dev_storage + 512;
d32223 1
a32223 1
return dev_storage + 53;
d32250 1
a32250 1
return dev_storage + 497;
d32265 1
a32265 1
return dev_storage + 482;
d32280 1
a32280 1
return dev_storage + 467;
d32295 1
a32295 1
return dev_storage + 452;
d32310 1
a32310 1
return dev_storage + 437;
d32322 1
a32322 1
              if (strncmp (KR_keyword, "/dev/sdn10", 10) == 0)
d32324 25
d32350 1
a32350 1
return dev_storage + 422;
d32353 2
a32354 3
                }
              else
                {
d32367 1
a32367 1
return dev_storage + 407;
d32403 1
a32403 1
return dev_storage + 392;
d32418 1
a32418 1
return dev_storage + 377;
d32433 1
a32433 1
return dev_storage + 362;
d32448 1
a32448 1
return dev_storage + 347;
d32463 1
a32463 1
return dev_storage + 332;
d32478 1
a32478 1
return dev_storage + 317;
d32493 1
a32493 1
return dev_storage + 302;
d32508 1
a32508 1
return dev_storage + 287;
d32526 1
a32526 1
return dev_storage + 272;
d32541 1
a32541 1
return dev_storage + 186;
d32562 1
a32562 1
return dev_storage + 257;
d32577 1
a32577 1
return dev_storage + 242;
d32592 1
a32592 1
return dev_storage + 227;
d32610 1
a32610 1
return dev_storage + 2376;
d32625 1
a32625 1
return dev_storage + 2366;
d32640 1
a32640 1
return dev_storage + 2356;
d32691 1
a32691 1
return dev_storage + 175;
d32706 1
a32706 1
              if (strncmp (KR_keyword, "/dev/ttyS59", 11) == 0)
d32708 3
d32712 1
a32712 1
return dev_storage + 2508;
d32715 3
a32717 3
                }
              else
                {
d32722 4
a32725 4
                }
            case '4':
              if (strncmp (KR_keyword, "/dev/ttyS49", 11) == 0)
                {
d32727 1
a32727 1
return dev_storage + 2498;
d32730 3
a32732 3
                }
              else
                {
d32737 2
a32738 11
                }
            case '3':
              if (strncmp (KR_keyword, "/dev/ttyS39", 11) == 0)
                {
{
return dev_storage + 2488;

}
                }
              else
                {
d32744 1
a32744 16
            case '2':
              if (strncmp (KR_keyword, "/dev/ttyS29", 11) == 0)
                {
{
return dev_storage + 2478;

}
                }
              else
                {
{
return	NULL;

}
                }
            case '1':
d32748 1
a32748 1
                  if (strncmp (KR_keyword, "/dev/ttyS19", 11) == 0)
d32751 1
a32751 1
return dev_storage + 2468;
d32762 2
a32763 2
                case 'n':
                  if (strncmp (KR_keyword, "/dev/nst119", 11) == 0)
d32766 1
a32766 1
return dev_storage + 162;
d32783 2
a32784 2
            case '0':
              if (strncmp (KR_keyword, "/dev/nst109", 11) == 0)
d32786 3
d32790 1
a32790 1
return dev_storage + 152;
d32793 3
a32795 3
                }
              else
                {
d32800 4
a32803 2
                }
            default:
d32805 1
a32805 1
return	NULL;
d32808 3
a32810 7
            }
        case '8':
          switch (KR_keyword [9])
            {
            case '5':
              if (strncmp (KR_keyword, "/dev/ttyS58", 11) == 0)
                {
d32812 1
a32812 1
return dev_storage + 2507;
d32815 2
a32816 3
                }
              else
                {
d32822 2
a32823 2
            case '4':
              if (strncmp (KR_keyword, "/dev/ttyS48", 11) == 0)
d32825 3
d32829 1
a32829 1
return dev_storage + 2497;
d32832 3
a32834 3
                }
              else
                {
d32839 4
a32842 4
                }
            case '3':
              if (strncmp (KR_keyword, "/dev/ttyS38", 11) == 0)
                {
d32844 1
a32844 1
return dev_storage + 2487;
d32847 3
a32849 3
                }
              else
                {
d32854 2
a32855 11
                }
            case '2':
              if (strncmp (KR_keyword, "/dev/ttyS28", 11) == 0)
                {
{
return dev_storage + 2477;

}
                }
              else
                {
d32865 1
a32865 1
                  if (strncmp (KR_keyword, "/dev/ttyS18", 11) == 0)
d32868 1
a32868 1
return dev_storage + 2467;
d32880 16
a32895 1
                  if (strncmp (KR_keyword, "/dev/nst118", 11) == 0)
d32898 1
a32898 1
return dev_storage + 161;
d32916 1
a32916 1
              if (strncmp (KR_keyword, "/dev/nst108", 11) == 0)
d32919 1
a32919 1
return dev_storage + 151;
d32936 1
a32936 1
        case '7':
d32940 1
a32940 1
              if (strncmp (KR_keyword, "/dev/ttyS57", 11) == 0)
d32942 3
d32946 1
a32946 1
return dev_storage + 2506;
d32949 3
a32951 3
                }
              else
                {
d32956 4
a32959 4
                }
            case '4':
              if (strncmp (KR_keyword, "/dev/ttyS47", 11) == 0)
                {
d32961 1
a32961 1
return dev_storage + 2496;
d32964 3
a32966 3
                }
              else
                {
d32971 2
a32972 11
                }
            case '3':
              if (strncmp (KR_keyword, "/dev/ttyS37", 11) == 0)
                {
{
return dev_storage + 2486;

}
                }
              else
                {
d32978 1
a32978 1
            case '2':
d32982 1
a32982 1
                  if (strncmp (KR_keyword, "/dev/ttyS27", 11) == 0)
d32985 1
a32985 1
return dev_storage + 2476;
d32996 2
a32997 2
                case 'n':
                  if (strncmp (KR_keyword, "/dev/nst127", 11) == 0)
d33000 1
a33000 1
return dev_storage + 170;
d33017 1
a33017 1
            case '1':
d33021 1
a33021 1
                  if (strncmp (KR_keyword, "/dev/ttyS17", 11) == 0)
d33024 1
a33024 1
return dev_storage + 2466;
d33035 2
a33036 2
                case 'n':
                  if (strncmp (KR_keyword, "/dev/nst117", 11) == 0)
d33039 1
a33039 1
return dev_storage + 160;
d33056 2
a33057 2
            case '0':
              if (strncmp (KR_keyword, "/dev/nst107", 11) == 0)
d33059 3
d33063 1
a33063 1
return dev_storage + 150;
d33066 3
a33068 3
                }
              else
                {
d33073 4
a33076 2
                }
            default:
d33078 1
a33078 1
return	NULL;
d33081 3
a33083 7
            }
        case '6':
          switch (KR_keyword [9])
            {
            case '5':
              if (strncmp (KR_keyword, "/dev/ttyS56", 11) == 0)
                {
d33085 1
a33085 1
return dev_storage + 2505;
d33088 2
a33089 3
                }
              else
                {
d33095 2
a33096 2
            case '4':
              if (strncmp (KR_keyword, "/dev/ttyS46", 11) == 0)
d33098 3
d33102 1
a33102 1
return dev_storage + 2495;
d33105 3
a33107 3
                }
              else
                {
d33112 4
a33115 4
                }
            case '3':
              if (strncmp (KR_keyword, "/dev/ttyS36", 11) == 0)
                {
d33117 37
a33153 1
return dev_storage + 2485;
d33164 375
d33546 1
a33546 1
return dev_storage + 2475;
d33561 16
a33576 1
return dev_storage + 169;
d33600 1
a33600 1
return dev_storage + 2465;
d33615 16
a33630 1
return dev_storage + 159;
d33651 1
a33651 1
return dev_storage + 149;
d33678 1
a33678 1
return dev_storage + 2504;
d33693 1
a33693 1
return dev_storage + 2494;
d33708 1
a33708 1
return dev_storage + 2484;
d33723 1
a33723 1
return dev_storage + 2474;
d33738 1
a33738 1
return dev_storage + 2464;
d33762 1
a33762 1
return dev_storage + 168;
d33777 1
a33777 1
return dev_storage + 158;
d33792 85
a33876 1
return dev_storage + 148;
d33900 1
a33900 1
return dev_storage + 2239;
d33915 1
a33915 1
return dev_storage + 2224;
d33930 1
a33930 1
return dev_storage + 2209;
d33945 1
a33945 1
return dev_storage + 2194;
d33960 1
a33960 1
return dev_storage + 2179;
d33975 1
a33975 1
return dev_storage + 2164;
d33990 1
a33990 1
return dev_storage + 2149;
d34005 1
a34005 1
return dev_storage + 2134;
d34020 1
a34020 1
return dev_storage + 2119;
d34035 1
a34035 1
return dev_storage + 2104;
d34050 1
a34050 1
return dev_storage + 2089;
d34065 1
a34065 1
return dev_storage + 2074;
d34080 1
a34080 1
return dev_storage + 2059;
d34095 1
a34095 1
return dev_storage + 2044;
d34110 1
a34110 1
return dev_storage + 2029;
d34125 1
a34125 1
return dev_storage + 2014;
d34140 1
a34140 1
return dev_storage + 1999;
d34155 1
a34155 1
return dev_storage + 1984;
d34170 1
a34170 1
return dev_storage + 1969;
d34185 1
a34185 1
return dev_storage + 1954;
d34200 1
a34200 1
return dev_storage + 1939;
d34215 1
a34215 1
return dev_storage + 1924;
d34230 1
a34230 1
return dev_storage + 1909;
d34245 1
a34245 1
return dev_storage + 1894;
d34269 1
a34269 1
return dev_storage + 1855;
d34284 1
a34284 1
return dev_storage + 1840;
d34299 1
a34299 1
return dev_storage + 1825;
d34314 1
a34314 1
return dev_storage + 1810;
d34329 1
a34329 1
return dev_storage + 1795;
d34344 1
a34344 1
return dev_storage + 1780;
d34359 1
a34359 1
return dev_storage + 1765;
d34374 1
a34374 1
return dev_storage + 1750;
d34389 1
a34389 1
return dev_storage + 1735;
d34404 1
a34404 1
return dev_storage + 1720;
d34419 1
a34419 1
return dev_storage + 1705;
d34434 1
a34434 1
return dev_storage + 1690;
d34449 1
a34449 1
return dev_storage + 1675;
d34464 1
a34464 1
return dev_storage + 1660;
d34479 1
a34479 1
return dev_storage + 1645;
d34494 1
a34494 1
return dev_storage + 1630;
d34509 1
a34509 1
return dev_storage + 1615;
d34524 1
a34524 1
return dev_storage + 1600;
d34539 1
a34539 1
return dev_storage + 1585;
d34554 1
a34554 1
return dev_storage + 1570;
d34569 1
a34569 1
return dev_storage + 1555;
d34584 1
a34584 1
return dev_storage + 1540;
d34599 1
a34599 1
return dev_storage + 1525;
d34614 1
a34614 1
return dev_storage + 1510;
d34629 1
a34629 1
return dev_storage + 1495;
d34644 1
a34644 1
return dev_storage + 1480;
d34668 1
a34668 1
return dev_storage + 1439;
d34683 1
a34683 1
return dev_storage + 1424;
d34698 1
a34698 1
return dev_storage + 1409;
d34713 1
a34713 1
return dev_storage + 1394;
d34728 1
a34728 1
return dev_storage + 1379;
d34743 1
a34743 1
return dev_storage + 1364;
d34758 1
a34758 1
return dev_storage + 1349;
d34773 1
a34773 1
return dev_storage + 1334;
d34788 1
a34788 1
return dev_storage + 1319;
d34803 1
a34803 1
return dev_storage + 1304;
d34818 1
a34818 1
return dev_storage + 1289;
d34833 1
a34833 1
return dev_storage + 1274;
d34848 1
a34848 1
return dev_storage + 1259;
d34863 1
a34863 1
return dev_storage + 1244;
d34878 1
a34878 1
return dev_storage + 1229;
d34893 1
a34893 1
return dev_storage + 1214;
d34908 1
a34908 1
return dev_storage + 1199;
d34923 1
a34923 1
return dev_storage + 1184;
d34938 1
a34938 1
return dev_storage + 1169;
d34953 1
a34953 1
return dev_storage + 1154;
d34968 1
a34968 1
return dev_storage + 1139;
d34983 1
a34983 1
return dev_storage + 1124;
d34998 1
a34998 1
return dev_storage + 1109;
d35013 1
a35013 1
return dev_storage + 1094;
d35028 1
a35028 1
return dev_storage + 1079;
d35043 1
a35043 1
return dev_storage + 1064;
d35067 1
a35067 1
return dev_storage + 1023;
d35082 1
a35082 1
return dev_storage + 1008;
d35097 1
a35097 1
return dev_storage + 993;
d35112 1
a35112 1
return dev_storage + 978;
d35127 1
a35127 1
return dev_storage + 963;
d35142 1
a35142 1
return dev_storage + 948;
d35157 1
a35157 1
return dev_storage + 933;
d35172 1
a35172 1
return dev_storage + 918;
d35187 1
a35187 1
return dev_storage + 903;
d35202 1
a35202 1
return dev_storage + 888;
d35217 1
a35217 1
return dev_storage + 873;
d35232 1
a35232 1
return dev_storage + 858;
d35247 1
a35247 1
return dev_storage + 843;
d35262 1
a35262 1
return dev_storage + 828;
d35277 1
a35277 1
return dev_storage + 813;
d35292 1
a35292 1
return dev_storage + 798;
d35307 1
a35307 1
return dev_storage + 783;
d35322 1
a35322 1
return dev_storage + 768;
d35337 1
a35337 1
return dev_storage + 753;
d35352 1
a35352 1
return dev_storage + 738;
d35367 1
a35367 1
return dev_storage + 723;
d35382 1
a35382 1
return dev_storage + 708;
d35397 1
a35397 1
return dev_storage + 693;
d35412 1
a35412 1
return dev_storage + 678;
d35427 1
a35427 1
return dev_storage + 663;
d35442 1
a35442 1
return dev_storage + 648;
d35475 1
a35475 1
return dev_storage + 2503;
d35490 1
a35490 1
return dev_storage + 2493;
d35505 1
a35505 1
return dev_storage + 2483;
d35520 1
a35520 1
return dev_storage + 2473;
d35535 1
a35535 1
return dev_storage + 2463;
d35559 1
a35559 1
return dev_storage + 167;
d35574 1
a35574 1
return dev_storage + 157;
d35589 85
a35673 1
return dev_storage + 147;
d35697 1
a35697 1
return dev_storage + 2238;
d35712 1
a35712 1
return dev_storage + 2223;
d35727 1
a35727 1
return dev_storage + 2208;
d35742 1
a35742 1
return dev_storage + 2193;
d35757 1
a35757 1
return dev_storage + 2178;
d35772 1
a35772 1
return dev_storage + 2163;
d35787 1
a35787 1
return dev_storage + 2148;
d35802 1
a35802 1
return dev_storage + 2133;
d35817 1
a35817 1
return dev_storage + 2118;
d35832 1
a35832 1
return dev_storage + 2103;
d35847 1
a35847 1
return dev_storage + 2088;
d35862 1
a35862 1
return dev_storage + 2073;
d35877 1
a35877 1
return dev_storage + 2058;
d35892 1
a35892 1
return dev_storage + 2043;
d35907 1
a35907 1
return dev_storage + 2028;
d35922 1
a35922 1
return dev_storage + 2013;
d35937 1
a35937 1
return dev_storage + 1998;
d35952 1
a35952 1
return dev_storage + 1983;
d35967 1
a35967 1
return dev_storage + 1968;
d35982 1
a35982 1
return dev_storage + 1953;
d35997 1
a35997 1
return dev_storage + 1938;
d36012 1
a36012 1
return dev_storage + 1923;
d36027 1
a36027 1
return dev_storage + 1908;
d36042 1
a36042 1
return dev_storage + 1893;
d36066 1
a36066 1
return dev_storage + 1854;
d36081 1
a36081 1
return dev_storage + 1839;
d36096 1
a36096 1
return dev_storage + 1824;
d36111 1
a36111 1
return dev_storage + 1809;
d36126 1
a36126 1
return dev_storage + 1794;
d36141 1
a36141 1
return dev_storage + 1779;
d36156 1
a36156 1
return dev_storage + 1764;
d36171 1
a36171 1
return dev_storage + 1749;
d36186 1
a36186 1
return dev_storage + 1734;
d36201 1
a36201 1
return dev_storage + 1719;
d36216 1
a36216 1
return dev_storage + 1704;
d36231 1
a36231 1
return dev_storage + 1689;
d36246 1
a36246 1
return dev_storage + 1674;
d36261 1
a36261 1
return dev_storage + 1659;
d36276 1
a36276 1
return dev_storage + 1644;
d36291 1
a36291 1
return dev_storage + 1629;
d36306 1
a36306 1
return dev_storage + 1614;
d36321 1
a36321 1
return dev_storage + 1599;
d36336 1
a36336 1
return dev_storage + 1584;
d36351 1
a36351 1
return dev_storage + 1569;
d36366 1
a36366 1
return dev_storage + 1554;
d36381 1
a36381 1
return dev_storage + 1539;
d36396 1
a36396 1
return dev_storage + 1524;
d36411 1
a36411 1
return dev_storage + 1509;
d36426 1
a36426 1
return dev_storage + 1494;
d36441 1
a36441 1
return dev_storage + 1479;
d36465 1
a36465 1
return dev_storage + 1438;
d36480 1
a36480 1
return dev_storage + 1423;
d36495 1
a36495 1
return dev_storage + 1408;
d36510 1
a36510 1
return dev_storage + 1393;
d36525 1
a36525 1
return dev_storage + 1378;
d36540 1
a36540 1
return dev_storage + 1363;
d36555 1
a36555 1
return dev_storage + 1348;
d36570 1
a36570 1
return dev_storage + 1333;
d36585 1
a36585 1
return dev_storage + 1318;
d36600 1
a36600 1
return dev_storage + 1303;
d36615 1
a36615 1
return dev_storage + 1288;
d36630 1
a36630 1
return dev_storage + 1273;
d36645 1
a36645 1
return dev_storage + 1258;
d36660 1
a36660 1
return dev_storage + 1243;
d36675 1
a36675 1
return dev_storage + 1228;
d36690 1
a36690 1
return dev_storage + 1213;
d36705 1
a36705 1
return dev_storage + 1198;
d36720 1
a36720 1
return dev_storage + 1183;
d36735 1
a36735 1
return dev_storage + 1168;
d36750 1
a36750 1
return dev_storage + 1153;
d36765 1
a36765 1
return dev_storage + 1138;
d36780 1
a36780 1
return dev_storage + 1123;
d36795 1
a36795 1
return dev_storage + 1108;
d36810 1
a36810 1
return dev_storage + 1093;
d36825 1
a36825 1
return dev_storage + 1078;
d36840 1
a36840 1
return dev_storage + 1063;
d36864 1
a36864 1
return dev_storage + 1022;
d36879 1
a36879 1
return dev_storage + 1007;
d36894 1
a36894 1
return dev_storage + 992;
d36909 1
a36909 1
return dev_storage + 977;
d36924 1
a36924 1
return dev_storage + 962;
d36939 1
a36939 1
return dev_storage + 947;
d36954 1
a36954 1
return dev_storage + 932;
d36969 1
a36969 1
return dev_storage + 917;
d36984 1
a36984 1
return dev_storage + 902;
d36999 1
a36999 1
return dev_storage + 887;
d37014 1
a37014 1
return dev_storage + 872;
d37029 1
a37029 1
return dev_storage + 857;
d37044 1
a37044 1
return dev_storage + 842;
d37059 1
a37059 1
return dev_storage + 827;
d37074 1
a37074 1
return dev_storage + 812;
d37089 1
a37089 1
return dev_storage + 797;
d37104 1
a37104 1
return dev_storage + 782;
d37119 1
a37119 1
return dev_storage + 767;
d37134 1
a37134 1
return dev_storage + 752;
d37149 1
a37149 1
return dev_storage + 737;
d37164 1
a37164 1
return dev_storage + 722;
d37179 1
a37179 1
return dev_storage + 707;
d37194 1
a37194 1
return dev_storage + 692;
d37209 1
a37209 1
return dev_storage + 677;
d37224 1
a37224 1
return dev_storage + 662;
d37239 1
a37239 1
return dev_storage + 647;
d37272 1
a37272 1
return dev_storage + 2512;
d37287 1
a37287 1
return dev_storage + 2502;
d37302 1
a37302 1
return dev_storage + 2492;
d37317 1
a37317 1
return dev_storage + 2482;
d37332 1
a37332 1
return dev_storage + 2472;
d37347 1
a37347 1
return dev_storage + 2462;
d37371 1
a37371 1
return dev_storage + 166;
d37386 1
a37386 1
return dev_storage + 156;
d37401 100
a37500 1
return dev_storage + 146;
d37524 1
a37524 1
return dev_storage + 2237;
d37539 1
a37539 1
return dev_storage + 2222;
d37554 1
a37554 1
return dev_storage + 2207;
d37569 1
a37569 1
return dev_storage + 2192;
d37584 1
a37584 1
return dev_storage + 2177;
d37599 1
a37599 1
return dev_storage + 2162;
d37614 1
a37614 1
return dev_storage + 2147;
d37629 1
a37629 1
return dev_storage + 2132;
d37644 1
a37644 1
return dev_storage + 2117;
d37659 1
a37659 1
return dev_storage + 2102;
d37674 1
a37674 1
return dev_storage + 2087;
d37689 1
a37689 1
return dev_storage + 2072;
d37704 1
a37704 1
return dev_storage + 2057;
d37719 1
a37719 1
return dev_storage + 2042;
d37734 1
a37734 1
return dev_storage + 2027;
d37749 1
a37749 1
return dev_storage + 2012;
d37764 1
a37764 1
return dev_storage + 1997;
d37779 1
a37779 1
return dev_storage + 1982;
d37794 1
a37794 1
return dev_storage + 1967;
d37809 1
a37809 1
return dev_storage + 1952;
d37824 1
a37824 1
return dev_storage + 1937;
d37839 1
a37839 1
return dev_storage + 1922;
d37854 1
a37854 1
return dev_storage + 1907;
d37869 1
a37869 1
return dev_storage + 1892;
d37893 1
a37893 1
return dev_storage + 1853;
d37908 1
a37908 1
return dev_storage + 1838;
d37923 1
a37923 1
return dev_storage + 1823;
d37938 1
a37938 1
return dev_storage + 1808;
d37953 1
a37953 1
return dev_storage + 1793;
d37968 1
a37968 1
return dev_storage + 1778;
d37983 1
a37983 1
return dev_storage + 1763;
d37998 1
a37998 1
return dev_storage + 1748;
d38013 1
a38013 1
return dev_storage + 1733;
d38028 1
a38028 1
return dev_storage + 1718;
d38043 1
a38043 1
return dev_storage + 1703;
d38058 1
a38058 1
return dev_storage + 1688;
d38073 1
a38073 1
return dev_storage + 1673;
d38088 1
a38088 1
return dev_storage + 1658;
d38103 1
a38103 1
return dev_storage + 1643;
d38118 1
a38118 1
return dev_storage + 1628;
d38133 1
a38133 1
return dev_storage + 1613;
d38148 1
a38148 1
return dev_storage + 1598;
d38163 1
a38163 1
return dev_storage + 1583;
d38178 1
a38178 1
return dev_storage + 1568;
d38193 1
a38193 1
return dev_storage + 1553;
d38208 1
a38208 1
return dev_storage + 1538;
d38223 1
a38223 1
return dev_storage + 1523;
d38238 1
a38238 1
return dev_storage + 1508;
d38253 1
a38253 1
return dev_storage + 1493;
d38268 1
a38268 1
return dev_storage + 1478;
d38292 1
a38292 1
return dev_storage + 1437;
d38307 1
a38307 1
return dev_storage + 1422;
d38322 1
a38322 1
return dev_storage + 1407;
d38337 1
a38337 1
return dev_storage + 1392;
d38352 1
a38352 1
return dev_storage + 1377;
d38367 1
a38367 1
return dev_storage + 1362;
d38382 1
a38382 1
return dev_storage + 1347;
d38397 1
a38397 1
return dev_storage + 1332;
d38412 1
a38412 1
return dev_storage + 1317;
d38427 1
a38427 1
return dev_storage + 1302;
d38442 1
a38442 1
return dev_storage + 1287;
d38457 1
a38457 1
return dev_storage + 1272;
d38472 1
a38472 1
return dev_storage + 1257;
d38487 1
a38487 1
return dev_storage + 1242;
d38502 1
a38502 1
return dev_storage + 1227;
d38517 1
a38517 1
return dev_storage + 1212;
d38532 1
a38532 1
return dev_storage + 1197;
d38547 1
a38547 1
return dev_storage + 1182;
d38562 1
a38562 1
return dev_storage + 1167;
d38577 1
a38577 1
return dev_storage + 1152;
d38592 1
a38592 1
return dev_storage + 1137;
d38607 1
a38607 1
return dev_storage + 1122;
d38622 1
a38622 1
return dev_storage + 1107;
d38637 1
a38637 1
return dev_storage + 1092;
d38652 1
a38652 1
return dev_storage + 1077;
d38667 1
a38667 1
return dev_storage + 1062;
d38691 1
a38691 1
return dev_storage + 1021;
d38706 1
a38706 1
return dev_storage + 1006;
d38721 1
a38721 1
return dev_storage + 991;
d38736 1
a38736 1
return dev_storage + 976;
d38751 1
a38751 1
return dev_storage + 961;
d38766 1
a38766 1
return dev_storage + 946;
d38781 1
a38781 1
return dev_storage + 931;
d38796 1
a38796 1
return dev_storage + 916;
d38811 1
a38811 1
return dev_storage + 901;
d38826 1
a38826 1
return dev_storage + 886;
d38841 1
a38841 1
return dev_storage + 871;
d38856 1
a38856 1
return dev_storage + 856;
d38871 1
a38871 1
return dev_storage + 841;
d38886 1
a38886 1
return dev_storage + 826;
d38901 1
a38901 1
return dev_storage + 811;
d38916 1
a38916 1
return dev_storage + 796;
d38931 1
a38931 1
return dev_storage + 781;
d38946 1
a38946 1
return dev_storage + 766;
d38961 1
a38961 1
return dev_storage + 751;
d38976 1
a38976 1
return dev_storage + 736;
d38991 1
a38991 1
return dev_storage + 721;
d39006 1
a39006 1
return dev_storage + 706;
d39021 1
a39021 1
return dev_storage + 691;
d39036 1
a39036 1
return dev_storage + 676;
d39051 1
a39051 1
return dev_storage + 661;
d39066 1
a39066 1
return dev_storage + 646;
d39099 1
a39099 1
return dev_storage + 2511;
d39114 1
a39114 1
return dev_storage + 2501;
d39129 1
a39129 1
return dev_storage + 2491;
d39144 1
a39144 1
return dev_storage + 2481;
d39159 1
a39159 1
return dev_storage + 2471;
d39174 1
a39174 1
return dev_storage + 2461;
d39198 1
a39198 1
return dev_storage + 165;
d39213 1
a39213 1
return dev_storage + 155;
d39228 100
a39327 1
return dev_storage + 145;
d39351 1
a39351 1
return dev_storage + 2236;
d39366 1
a39366 1
return dev_storage + 2221;
d39381 1
a39381 1
return dev_storage + 2206;
d39396 1
a39396 1
return dev_storage + 2191;
d39411 1
a39411 1
return dev_storage + 2176;
d39426 1
a39426 1
return dev_storage + 2161;
d39441 1
a39441 1
return dev_storage + 2146;
d39456 1
a39456 1
return dev_storage + 2131;
d39471 1
a39471 1
return dev_storage + 2116;
d39486 1
a39486 1
return dev_storage + 2101;
d39501 1
a39501 1
return dev_storage + 2086;
d39516 1
a39516 1
return dev_storage + 2071;
d39531 1
a39531 1
return dev_storage + 2056;
d39546 1
a39546 1
return dev_storage + 2041;
d39561 1
a39561 1
return dev_storage + 2026;
d39576 1
a39576 1
return dev_storage + 2011;
d39591 1
a39591 1
return dev_storage + 1996;
d39606 1
a39606 1
return dev_storage + 1981;
d39621 1
a39621 1
return dev_storage + 1966;
d39636 1
a39636 1
return dev_storage + 1951;
d39651 1
a39651 1
return dev_storage + 1936;
d39666 1
a39666 1
return dev_storage + 1921;
d39681 1
a39681 1
return dev_storage + 1906;
d39696 1
a39696 1
return dev_storage + 1891;
d39720 1
a39720 1
return dev_storage + 1852;
d39735 1
a39735 1
return dev_storage + 1837;
d39750 1
a39750 1
return dev_storage + 1822;
d39765 1
a39765 1
return dev_storage + 1807;
d39780 1
a39780 1
return dev_storage + 1792;
d39795 1
a39795 1
return dev_storage + 1777;
d39810 1
a39810 1
return dev_storage + 1762;
d39825 1
a39825 1
return dev_storage + 1747;
d39840 1
a39840 1
return dev_storage + 1732;
d39855 1
a39855 1
return dev_storage + 1717;
d39870 1
a39870 1
return dev_storage + 1702;
d39885 1
a39885 1
return dev_storage + 1687;
d39900 1
a39900 1
return dev_storage + 1672;
d39915 1
a39915 1
return dev_storage + 1657;
d39930 1
a39930 1
return dev_storage + 1642;
d39945 1
a39945 1
return dev_storage + 1627;
d39960 1
a39960 1
return dev_storage + 1612;
d39975 1
a39975 1
return dev_storage + 1597;
d39990 1
a39990 1
return dev_storage + 1582;
d40005 1
a40005 1
return dev_storage + 1567;
d40020 1
a40020 1
return dev_storage + 1552;
d40035 1
a40035 1
return dev_storage + 1537;
d40050 1
a40050 1
return dev_storage + 1522;
d40065 1
a40065 1
return dev_storage + 1507;
d40080 1
a40080 1
return dev_storage + 1492;
d40095 1
a40095 1
return dev_storage + 1477;
d40119 1
a40119 1
return dev_storage + 1436;
d40134 1
a40134 1
return dev_storage + 1421;
d40149 1
a40149 1
return dev_storage + 1406;
d40164 1
a40164 1
return dev_storage + 1391;
d40179 1
a40179 1
return dev_storage + 1376;
d40194 1
a40194 1
return dev_storage + 1361;
d40209 1
a40209 1
return dev_storage + 1346;
d40224 1
a40224 1
return dev_storage + 1331;
d40239 1
a40239 1
return dev_storage + 1316;
d40254 1
a40254 1
return dev_storage + 1301;
d40269 1
a40269 1
return dev_storage + 1286;
d40284 1
a40284 1
return dev_storage + 1271;
d40299 1
a40299 1
return dev_storage + 1256;
d40314 1
a40314 1
return dev_storage + 1241;
d40329 1
a40329 1
return dev_storage + 1226;
d40344 1
a40344 1
return dev_storage + 1211;
d40359 1
a40359 1
return dev_storage + 1196;
d40374 1
a40374 1
return dev_storage + 1181;
d40389 1
a40389 1
return dev_storage + 1166;
d40404 1
a40404 1
return dev_storage + 1151;
d40419 1
a40419 1
return dev_storage + 1136;
d40434 1
a40434 1
return dev_storage + 1121;
d40449 1
a40449 1
return dev_storage + 1106;
d40464 1
a40464 1
return dev_storage + 1091;
d40479 1
a40479 1
return dev_storage + 1076;
d40494 1
a40494 1
return dev_storage + 1061;
d40518 1
a40518 1
return dev_storage + 1020;
d40533 1
a40533 1
return dev_storage + 1005;
d40548 1
a40548 1
return dev_storage + 990;
d40563 1
a40563 1
return dev_storage + 975;
d40578 1
a40578 1
return dev_storage + 960;
d40593 1
a40593 1
return dev_storage + 945;
d40608 1
a40608 1
return dev_storage + 930;
d40623 1
a40623 1
return dev_storage + 915;
d40638 1
a40638 1
return dev_storage + 900;
d40653 1
a40653 1
return dev_storage + 885;
d40668 1
a40668 1
return dev_storage + 870;
d40683 1
a40683 1
return dev_storage + 855;
d40698 1
a40698 1
return dev_storage + 840;
d40713 1
a40713 1
return dev_storage + 825;
d40728 1
a40728 1
return dev_storage + 810;
d40743 1
a40743 1
return dev_storage + 795;
d40758 1
a40758 1
return dev_storage + 780;
d40773 1
a40773 1
return dev_storage + 765;
d40788 1
a40788 1
return dev_storage + 750;
d40803 1
a40803 1
return dev_storage + 735;
d40818 1
a40818 1
return dev_storage + 720;
d40833 1
a40833 1
return dev_storage + 705;
d40848 1
a40848 1
return dev_storage + 690;
d40863 1
a40863 1
return dev_storage + 675;
d40878 1
a40878 1
return dev_storage + 660;
d40893 1
a40893 1
return dev_storage + 645;
d40926 1
a40926 1
return dev_storage + 2510;
d40941 1
a40941 1
return dev_storage + 2500;
d40956 1
a40956 1
return dev_storage + 2490;
d40971 1
a40971 1
return dev_storage + 2480;
d40986 1
a40986 1
return dev_storage + 2470;
d41001 1
a41001 1
return dev_storage + 2460;
d41025 1
a41025 1
return dev_storage + 164;
d41040 1
a41040 1
return dev_storage + 154;
d41055 100
a41154 1
return dev_storage + 144;
d41178 1
a41178 1
return dev_storage + 2235;
d41193 1
a41193 1
return dev_storage + 2220;
d41208 1
a41208 1
return dev_storage + 2205;
d41223 1
a41223 1
return dev_storage + 2190;
d41238 1
a41238 1
return dev_storage + 2175;
d41253 1
a41253 1
return dev_storage + 2160;
d41268 1
a41268 1
return dev_storage + 2145;
d41283 1
a41283 1
return dev_storage + 2130;
d41298 1
a41298 1
return dev_storage + 2115;
d41313 1
a41313 1
return dev_storage + 2100;
d41328 1
a41328 1
return dev_storage + 2085;
d41343 1
a41343 1
return dev_storage + 2070;
d41358 1
a41358 1
return dev_storage + 2055;
d41373 1
a41373 1
return dev_storage + 2040;
d41388 1
a41388 1
return dev_storage + 2025;
d41403 1
a41403 1
return dev_storage + 2010;
d41418 1
a41418 1
return dev_storage + 1995;
d41433 1
a41433 1
return dev_storage + 1980;
d41448 1
a41448 1
return dev_storage + 1965;
d41463 1
a41463 1
return dev_storage + 1950;
d41478 1
a41478 1
return dev_storage + 1935;
d41493 1
a41493 1
return dev_storage + 1920;
d41508 1
a41508 1
return dev_storage + 1905;
d41523 1
a41523 1
return dev_storage + 1890;
d41547 1
a41547 1
return dev_storage + 1851;
d41562 1
a41562 1
return dev_storage + 1836;
d41577 1
a41577 1
return dev_storage + 1821;
d41592 1
a41592 1
return dev_storage + 1806;
d41607 1
a41607 1
return dev_storage + 1791;
d41622 1
a41622 1
return dev_storage + 1776;
d41637 1
a41637 1
return dev_storage + 1761;
d41652 1
a41652 1
return dev_storage + 1746;
d41667 1
a41667 1
return dev_storage + 1731;
d41682 1
a41682 1
return dev_storage + 1716;
d41697 1
a41697 1
return dev_storage + 1701;
d41712 1
a41712 1
return dev_storage + 1686;
d41727 1
a41727 1
return dev_storage + 1671;
d41742 1
a41742 1
return dev_storage + 1656;
d41757 1
a41757 1
return dev_storage + 1641;
d41772 1
a41772 1
return dev_storage + 1626;
d41787 1
a41787 1
return dev_storage + 1611;
d41802 1
a41802 1
return dev_storage + 1596;
d41817 1
a41817 1
return dev_storage + 1581;
d41832 1
a41832 1
return dev_storage + 1566;
d41847 1
a41847 1
return dev_storage + 1551;
d41862 1
a41862 1
return dev_storage + 1536;
d41877 1
a41877 1
return dev_storage + 1521;
d41892 1
a41892 1
return dev_storage + 1506;
d41907 1
a41907 1
return dev_storage + 1491;
d41922 1
a41922 1
return dev_storage + 1476;
d41946 1
a41946 1
return dev_storage + 1435;
d41961 1
a41961 1
return dev_storage + 1420;
d41976 1
a41976 1
return dev_storage + 1405;
d41991 1
a41991 1
return dev_storage + 1390;
d42006 1
a42006 1
return dev_storage + 1375;
d42021 1
a42021 1
return dev_storage + 1360;
d42036 1
a42036 1
return dev_storage + 1345;
d42051 1
a42051 1
return dev_storage + 1330;
d42066 1
a42066 1
return dev_storage + 1315;
d42081 1
a42081 1
return dev_storage + 1300;
d42096 1
a42096 1
return dev_storage + 1285;
d42111 1
a42111 1
return dev_storage + 1270;
d42126 1
a42126 1
return dev_storage + 1255;
d42141 1
a42141 1
return dev_storage + 1240;
d42156 1
a42156 1
return dev_storage + 1225;
d42171 1
a42171 1
return dev_storage + 1210;
d42186 1
a42186 1
return dev_storage + 1195;
d42201 1
a42201 1
return dev_storage + 1180;
d42216 1
a42216 1
return dev_storage + 1165;
d42231 1
a42231 1
return dev_storage + 1150;
d42246 1
a42246 1
return dev_storage + 1135;
d42261 1
a42261 1
return dev_storage + 1120;
d42276 1
a42276 1
return dev_storage + 1105;
d42291 1
a42291 1
return dev_storage + 1090;
d42306 1
a42306 1
return dev_storage + 1075;
d42321 1
a42321 1
return dev_storage + 1060;
d42345 1
a42345 1
return dev_storage + 1019;
d42360 1
a42360 1
return dev_storage + 1004;
d42375 1
a42375 1
return dev_storage + 989;
d42390 1
a42390 1
return dev_storage + 974;
d42405 1
a42405 1
return dev_storage + 959;
d42420 1
a42420 1
return dev_storage + 944;
d42435 1
a42435 1
return dev_storage + 929;
d42450 1
a42450 1
return dev_storage + 914;
d42465 1
a42465 1
return dev_storage + 899;
d42480 1
a42480 1
return dev_storage + 884;
d42495 1
a42495 1
return dev_storage + 869;
d42510 1
a42510 1
return dev_storage + 854;
d42525 1
a42525 1
return dev_storage + 839;
d42540 1
a42540 1
return dev_storage + 824;
d42555 1
a42555 1
return dev_storage + 809;
d42570 1
a42570 1
return dev_storage + 794;
d42585 1
a42585 1
return dev_storage + 779;
d42600 1
a42600 1
return dev_storage + 764;
d42615 1
a42615 1
return dev_storage + 749;
d42630 1
a42630 1
return dev_storage + 734;
d42645 1
a42645 1
return dev_storage + 719;
d42660 1
a42660 1
return dev_storage + 704;
d42675 1
a42675 1
return dev_storage + 689;
d42690 1
a42690 1
return dev_storage + 674;
d42705 1
a42705 1
return dev_storage + 659;
d42720 1
a42720 1
return dev_storage + 644;
d42753 1
a42753 1
return dev_storage + 2509;
d42768 1
a42768 1
return dev_storage + 2499;
d42783 1
a42783 1
return dev_storage + 2489;
d42798 1
a42798 1
return dev_storage + 2479;
d42813 1
a42813 1
return dev_storage + 2469;
d42828 1
a42828 1
return dev_storage + 2459;
d42852 1
a42852 1
return dev_storage + 163;
d42867 1
a42867 1
return dev_storage + 153;
d42882 100
a42981 1
return dev_storage + 143;
d43005 1
a43005 1
return dev_storage + 2234;
d43020 1
a43020 1
return dev_storage + 2219;
d43035 1
a43035 1
return dev_storage + 2204;
d43050 1
a43050 1
return dev_storage + 2189;
d43065 1
a43065 1
return dev_storage + 2174;
d43080 1
a43080 1
return dev_storage + 2159;
d43095 1
a43095 1
return dev_storage + 2144;
d43110 1
a43110 1
return dev_storage + 2129;
d43125 1
a43125 1
return dev_storage + 2114;
d43140 1
a43140 1
return dev_storage + 2099;
d43155 1
a43155 1
return dev_storage + 2084;
d43170 1
a43170 1
return dev_storage + 2069;
d43185 1
a43185 1
return dev_storage + 2054;
d43200 1
a43200 1
return dev_storage + 2039;
d43215 1
a43215 1
return dev_storage + 2024;
d43230 1
a43230 1
return dev_storage + 2009;
d43245 1
a43245 1
return dev_storage + 1994;
d43260 1
a43260 1
return dev_storage + 1979;
d43275 1
a43275 1
return dev_storage + 1964;
d43290 1
a43290 1
return dev_storage + 1949;
d43305 1
a43305 1
return dev_storage + 1934;
d43320 1
a43320 1
return dev_storage + 1919;
d43335 1
a43335 1
return dev_storage + 1904;
d43350 1
a43350 1
return dev_storage + 1889;
d43374 1
a43374 1
return dev_storage + 1850;
d43389 1
a43389 1
return dev_storage + 1835;
d43404 1
a43404 1
return dev_storage + 1820;
d43419 1
a43419 1
return dev_storage + 1805;
d43434 1
a43434 1
return dev_storage + 1790;
d43449 1
a43449 1
return dev_storage + 1775;
d43464 1
a43464 1
return dev_storage + 1760;
d43479 1
a43479 1
return dev_storage + 1745;
d43494 1
a43494 1
return dev_storage + 1730;
d43509 1
a43509 1
return dev_storage + 1715;
d43524 1
a43524 1
return dev_storage + 1700;
d43539 1
a43539 1
return dev_storage + 1685;
d43554 1
a43554 1
return dev_storage + 1670;
d43569 1
a43569 1
return dev_storage + 1655;
d43584 1
a43584 1
return dev_storage + 1640;
d43599 1
a43599 1
return dev_storage + 1625;
d43614 1
a43614 1
return dev_storage + 1610;
d43629 1
a43629 1
return dev_storage + 1595;
d43644 1
a43644 1
return dev_storage + 1580;
d43659 1
a43659 1
return dev_storage + 1565;
d43674 1
a43674 1
return dev_storage + 1550;
d43689 1
a43689 1
return dev_storage + 1535;
d43704 1
a43704 1
return dev_storage + 1520;
d43719 1
a43719 1
return dev_storage + 1505;
d43734 1
a43734 1
return dev_storage + 1490;
d43749 1
a43749 1
return dev_storage + 1475;
d43773 1
a43773 1
return dev_storage + 1434;
d43788 1
a43788 1
return dev_storage + 1419;
d43803 1
a43803 1
return dev_storage + 1404;
d43818 1
a43818 1
return dev_storage + 1389;
d43833 1
a43833 1
return dev_storage + 1374;
d43848 1
a43848 1
return dev_storage + 1359;
d43863 1
a43863 1
return dev_storage + 1344;
d43878 1
a43878 1
return dev_storage + 1329;
d43893 1
a43893 1
return dev_storage + 1314;
d43908 1
a43908 1
return dev_storage + 1299;
d43923 1
a43923 1
return dev_storage + 1284;
d43938 1
a43938 1
return dev_storage + 1269;
d43953 1
a43953 1
return dev_storage + 1254;
d43968 1
a43968 1
return dev_storage + 1239;
d43983 1
a43983 1
return dev_storage + 1224;
d43998 1
a43998 1
return dev_storage + 1209;
d44013 1
a44013 1
return dev_storage + 1194;
d44028 1
a44028 1
return dev_storage + 1179;
d44043 1
a44043 1
return dev_storage + 1164;
d44058 1
a44058 1
return dev_storage + 1149;
d44073 1
a44073 1
return dev_storage + 1134;
d44088 1
a44088 1
return dev_storage + 1119;
d44103 1
a44103 1
return dev_storage + 1104;
d44118 1
a44118 1
return dev_storage + 1089;
d44133 1
a44133 1
return dev_storage + 1074;
d44148 1
a44148 1
return dev_storage + 1059;
d44172 1
a44172 1
return dev_storage + 1018;
d44187 1
a44187 1
return dev_storage + 1003;
d44202 1
a44202 1
return dev_storage + 988;
d44217 1
a44217 1
return dev_storage + 973;
d44232 1
a44232 1
return dev_storage + 958;
d44247 1
a44247 1
return dev_storage + 943;
d44262 1
a44262 1
return dev_storage + 928;
d44277 1
a44277 1
return dev_storage + 913;
d44292 1
a44292 1
return dev_storage + 898;
d44307 1
a44307 1
return dev_storage + 883;
d44322 1
a44322 1
return dev_storage + 868;
d44337 1
a44337 1
return dev_storage + 853;
d44352 1
a44352 1
return dev_storage + 838;
d44367 1
a44367 1
return dev_storage + 823;
d44382 1
a44382 1
return dev_storage + 808;
d44397 1
a44397 1
return dev_storage + 793;
d44412 1
a44412 1
return dev_storage + 778;
d44427 1
a44427 1
return dev_storage + 763;
d44442 1
a44442 1
return dev_storage + 748;
d44457 1
a44457 1
return dev_storage + 733;
d44472 1
a44472 1
return dev_storage + 718;
d44487 1
a44487 1
return dev_storage + 703;
d44502 1
a44502 1
return dev_storage + 688;
d44517 1
a44517 1
return dev_storage + 673;
d44532 1
a44532 1
return dev_storage + 658;
d44547 1
a44547 1
return dev_storage + 643;
d44583 1
a44583 1
return dev_storage + 2515;
d44598 1
a44598 1
return dev_storage + 2514;
d44613 1
a44613 1
return dev_storage + 20;
d44682 1
a44682 1
  devn = 0;
d44685 1
a44685 1
    if (dev_storage[i].devn == dev)
d44692 1
a44692 1
    devn = FHDEV (major, minor);
@


1.34
log
@Implement /proc/sysvipc/*
* devices.in (dev_procsysvipc_storage): Add.
* devices.cc: Regenerate.
* devices.h (fh_devices): Add FH_PROCSYSVIPC.
* dtable.cc (build_fh_pc): Add case FH_PROCSYSVIPC.
* fhandler.h (class fhandler_procsysvipc): Declare.
(fhandler_union): Add __procsysvipc.
* fhandler_proc.cc (proc_tab): Add sysvipc virt_directory.
* fhandler_procsysvipc.cc: New file.
* Makefile.in (DLL_OFILES): Add fhandler_procsysvipc.o.
* path.h (isproc_dev): Add FH_PROCSYSVIPC to conditional.
@
text
@a43442 9
device::tty_to_real_device ()
{
  if (!real_tty_attached (myself))
    *this = myself->ctty < 0 ? dev_bad_storage : *console_dev;
  else
    parse (DEV_TTYS_MAJOR, myself->ctty);
}

void
@


1.33
log
@	* devices.in: Throughout use slashes instead of backslashes in the
	native path of devices not backed by native NT devices.
	* devices.cc: Regenerate.
	* globals.cc (ro_u_pmem): Use correct case.
	(ro_u_globalroot): New R/O unicode string.
	* path.cc (path_conv::check): Fix incorrect handling of /proc/sys
	block devices if they are just visited due to a component check.
	(symlink_info::posixify): Fix typo in comment.
	(cygwin_conv_path): Use ro_u_globalroot instead of string constant.
	(fast_cwd_version): New shared variable to store FAST_CWD version
	used on the system.
	(find_fast_cwd_pointer): Rename from find_fast_cwd_pointers.  Don't
	set global fast_cwd_ptr pointer here.  Return pointer value instead.
	(find_fast_cwd): New function to set fast_cwd_ptr and fast_cwd_version.
	(cwdstuff::override_win32_cwd): Call find_fast_cwd from here.
	Check for fast_cwd_version to differ between old and new FAST_CWD
	structure.  Check old_cwd for NULL to avoid SEGV.  Don't set CWD if
	we have neitehr a valid fast_cwd_ptr, nor a valid CWD handle in the
	process parameter block.
	(cwdstuff::set): Create Win32 path taking /proc/sys paths into account.
	* spawn.cc (spawn_guts): Recode creating runpath.  Also take /proc/sys
	paths into account.  Drop special CWD handling when starting non-Cygwin
	processes.
@
text
@d30 3
@


1.32
log
@	* Makefile.in (DLL_OFILES): Add fhandler_procsys.o.
	* devices.h (enum fh_devices): Add FH_PROCSYS.
	* devices.in (dev_procsys_storage): New device.
	* devices.cc: Regenerate.
	* dtable.cc (build_fh_pc): Add code to allocate fhandler_procsys.
	* fhandler.h (proc_len): Convert to size_t.
	(procsys): Declare.
	(procsys_len): Declare.
	(enum virtual_ftype_t): Move here from fhandler_virtual.h.
	Add members supported by fhandler_procsys.
	(fhandler_virtual::exists): Return virtual_ftype_t.  Change
	in all derived classes.
	(class fhandler_procsys): New class.
	(fhandler_union): Add fhandler_procnet and fhandler_procsys members.
	* fhandler_disk_file.cc (__DIR_mounts::check_missing_mount): Use
	ro_u_proc.
	(fhandler_base::fstat_by_handle): Don't copy attributes if file is an
	NT device.
	(fhandler_base::fstat_by_name): Ditto.
	* fhandler_netdrive.cc (fhandler_netdrive::exists): Return
	virtual_ftype_t.
	* fhandler_proc.cc (proc_tab): Sort alphabetically.  Use _VN macro
	to store length.
	(proc_len): Change to size_t.
	(proc_tab_cmp): New static function.
	(virt_tab_search): New function to search entry in virt_tab_t
	arrays.  Use throughout in /proc and sibling classes instead of
	loop.
	(fhandler_proc::exists): Return virtual_ftype_t.
	* fhandler_process.cc (process_tab): Sort alphabetically.  Use _VN
	macro to store length.
	(fhandler_process::exists): Return virtual_ftype_t.
	(fhandler_process::open): Simplify code.
	* fhandler_procnet.cc (procnet_tab): Sort alphabetically.  Use _VN
	macro to store length.
	(fhandler_procnet::exists): Return virtual_ftype_t.
	(fhandler_procnet::open): Simplify.
	* fhandler_procsys.cc: New file.
	* fhandler_registry.cc (fhandler_registry::exists): Return
	virtual_ftype_t.
	* fhandler_virtual.cc (fhandler_virtual::exists): Ditto.
	* fhandler_virtual.h (enum virtual_ftype_t): Move to fhandler.h.
	(virt_tab_t): Add name_len member.
	(_VN): New macro.
	(virt_tab_search): Declare.
	* mount.cc (mount_info::conv_to_win32_path): Fix comment.  Backslashify
	isprocsys_dev paths.
	* ntdll.h (STATUS_OBJECT_TYPE_MISMATCH): Define
	(STATUS_INSTANCE_NOT_AVAILABLE): Define.
	(STATUS_PIPE_NOT_AVAILABLE): Define.
	(STATUS_INVALID_PIPE_STATE): Define.
	(STATUS_PIPE_BUSY): Define.
	(SYMBOLIC_LINK_QUERY): Define.
	(NtOpenSymbolicLinkObject): Declare.
	(NtQuerySymbolicLinkObject): Declare.
	* path.cc (path_conv::check): Accommodate fact that exists method
	returns virtual_ftype_t now.  Add cases for new virtual_ftype_t
	types.
	(cygwin_conv_path): Add GLOBALROOT prefix to native device paths.
	Make sure to strip \\?\ prefix only for actual filesystem-based
	paths, not for all paths.
	* path.h (isproc_dev): Add FH_PROCSYS.
	(isprocsys_dev): Define.
@
text
@d66 1
a66 1
  {"/dev/clipboard", BRACK(FH_CLIPBOARD), "\\dev\\clipboard"},
d83 4
a86 4
  {"/dev/conin", BRACK(FH_CONIN), "conin"},
  {"/dev/conout", BRACK(FH_CONOUT), "conout"},
  {"/dev/console", BRACK(FH_CONSOLE), "\\dev\\console"},
  {"/dev/dsp", BRACK(FH_OSS_DSP), "\\dev\\dsp"},
d103 3
a105 3
  {"/dev/fifo", BRACK(FH_FIFO), "\\dev\\fifo"},
  {"/dev/full", BRACK(FH_FULL), "\\dev\\full"},
  {"/dev/kmem", BRACK(FH_KMEM), "\\dev\\mem"},
d107 1
a107 1
  {"/dev/mem", BRACK(FH_MEM), "\\dev\\mem"},
d237 4
a240 4
  {"/dev/pipe", BRACK(FH_PIPE), "\\dev\\pipe"},
  {"/dev/port", BRACK(FH_PORT), "\\dev\\port"},
  {"/dev/ptmx", BRACK(FH_PTYM), "\\dev\\ptmx"},
  {"/dev/random", BRACK(FH_RANDOM), "\\dev\\random"},
d2449 65
a2513 65
  {"/dev/tty", BRACK(FH_TTY), "\\dev\\tty"},
  {"/dev/tty0", BRACK(FHDEV(DEV_TTYS_MAJOR, 0)), "\\dev\\tty0"},
  {"/dev/tty1", BRACK(FHDEV(DEV_TTYS_MAJOR, 1)), "\\dev\\tty1"},
  {"/dev/tty2", BRACK(FHDEV(DEV_TTYS_MAJOR, 2)), "\\dev\\tty2"},
  {"/dev/tty3", BRACK(FHDEV(DEV_TTYS_MAJOR, 3)), "\\dev\\tty3"},
  {"/dev/tty4", BRACK(FHDEV(DEV_TTYS_MAJOR, 4)), "\\dev\\tty4"},
  {"/dev/tty5", BRACK(FHDEV(DEV_TTYS_MAJOR, 5)), "\\dev\\tty5"},
  {"/dev/tty6", BRACK(FHDEV(DEV_TTYS_MAJOR, 6)), "\\dev\\tty6"},
  {"/dev/tty7", BRACK(FHDEV(DEV_TTYS_MAJOR, 7)), "\\dev\\tty7"},
  {"/dev/tty8", BRACK(FHDEV(DEV_TTYS_MAJOR, 8)), "\\dev\\tty8"},
  {"/dev/tty9", BRACK(FHDEV(DEV_TTYS_MAJOR, 9)), "\\dev\\tty9"},
  {"/dev/tty10", BRACK(FHDEV(DEV_TTYS_MAJOR, 10)), "\\dev\\tty10"},
  {"/dev/tty11", BRACK(FHDEV(DEV_TTYS_MAJOR, 11)), "\\dev\\tty11"},
  {"/dev/tty12", BRACK(FHDEV(DEV_TTYS_MAJOR, 12)), "\\dev\\tty12"},
  {"/dev/tty13", BRACK(FHDEV(DEV_TTYS_MAJOR, 13)), "\\dev\\tty13"},
  {"/dev/tty14", BRACK(FHDEV(DEV_TTYS_MAJOR, 14)), "\\dev\\tty14"},
  {"/dev/tty15", BRACK(FHDEV(DEV_TTYS_MAJOR, 15)), "\\dev\\tty15"},
  {"/dev/tty16", BRACK(FHDEV(DEV_TTYS_MAJOR, 16)), "\\dev\\tty16"},
  {"/dev/tty17", BRACK(FHDEV(DEV_TTYS_MAJOR, 17)), "\\dev\\tty17"},
  {"/dev/tty18", BRACK(FHDEV(DEV_TTYS_MAJOR, 18)), "\\dev\\tty18"},
  {"/dev/tty19", BRACK(FHDEV(DEV_TTYS_MAJOR, 19)), "\\dev\\tty19"},
  {"/dev/tty20", BRACK(FHDEV(DEV_TTYS_MAJOR, 20)), "\\dev\\tty20"},
  {"/dev/tty21", BRACK(FHDEV(DEV_TTYS_MAJOR, 21)), "\\dev\\tty21"},
  {"/dev/tty22", BRACK(FHDEV(DEV_TTYS_MAJOR, 22)), "\\dev\\tty22"},
  {"/dev/tty23", BRACK(FHDEV(DEV_TTYS_MAJOR, 23)), "\\dev\\tty23"},
  {"/dev/tty24", BRACK(FHDEV(DEV_TTYS_MAJOR, 24)), "\\dev\\tty24"},
  {"/dev/tty25", BRACK(FHDEV(DEV_TTYS_MAJOR, 25)), "\\dev\\tty25"},
  {"/dev/tty26", BRACK(FHDEV(DEV_TTYS_MAJOR, 26)), "\\dev\\tty26"},
  {"/dev/tty27", BRACK(FHDEV(DEV_TTYS_MAJOR, 27)), "\\dev\\tty27"},
  {"/dev/tty28", BRACK(FHDEV(DEV_TTYS_MAJOR, 28)), "\\dev\\tty28"},
  {"/dev/tty29", BRACK(FHDEV(DEV_TTYS_MAJOR, 29)), "\\dev\\tty29"},
  {"/dev/tty30", BRACK(FHDEV(DEV_TTYS_MAJOR, 30)), "\\dev\\tty30"},
  {"/dev/tty31", BRACK(FHDEV(DEV_TTYS_MAJOR, 31)), "\\dev\\tty31"},
  {"/dev/tty32", BRACK(FHDEV(DEV_TTYS_MAJOR, 32)), "\\dev\\tty32"},
  {"/dev/tty33", BRACK(FHDEV(DEV_TTYS_MAJOR, 33)), "\\dev\\tty33"},
  {"/dev/tty34", BRACK(FHDEV(DEV_TTYS_MAJOR, 34)), "\\dev\\tty34"},
  {"/dev/tty35", BRACK(FHDEV(DEV_TTYS_MAJOR, 35)), "\\dev\\tty35"},
  {"/dev/tty36", BRACK(FHDEV(DEV_TTYS_MAJOR, 36)), "\\dev\\tty36"},
  {"/dev/tty37", BRACK(FHDEV(DEV_TTYS_MAJOR, 37)), "\\dev\\tty37"},
  {"/dev/tty38", BRACK(FHDEV(DEV_TTYS_MAJOR, 38)), "\\dev\\tty38"},
  {"/dev/tty39", BRACK(FHDEV(DEV_TTYS_MAJOR, 39)), "\\dev\\tty39"},
  {"/dev/tty40", BRACK(FHDEV(DEV_TTYS_MAJOR, 40)), "\\dev\\tty40"},
  {"/dev/tty41", BRACK(FHDEV(DEV_TTYS_MAJOR, 41)), "\\dev\\tty41"},
  {"/dev/tty42", BRACK(FHDEV(DEV_TTYS_MAJOR, 42)), "\\dev\\tty42"},
  {"/dev/tty43", BRACK(FHDEV(DEV_TTYS_MAJOR, 43)), "\\dev\\tty43"},
  {"/dev/tty44", BRACK(FHDEV(DEV_TTYS_MAJOR, 44)), "\\dev\\tty44"},
  {"/dev/tty45", BRACK(FHDEV(DEV_TTYS_MAJOR, 45)), "\\dev\\tty45"},
  {"/dev/tty46", BRACK(FHDEV(DEV_TTYS_MAJOR, 46)), "\\dev\\tty46"},
  {"/dev/tty47", BRACK(FHDEV(DEV_TTYS_MAJOR, 47)), "\\dev\\tty47"},
  {"/dev/tty48", BRACK(FHDEV(DEV_TTYS_MAJOR, 48)), "\\dev\\tty48"},
  {"/dev/tty49", BRACK(FHDEV(DEV_TTYS_MAJOR, 49)), "\\dev\\tty49"},
  {"/dev/tty50", BRACK(FHDEV(DEV_TTYS_MAJOR, 50)), "\\dev\\tty50"},
  {"/dev/tty51", BRACK(FHDEV(DEV_TTYS_MAJOR, 51)), "\\dev\\tty51"},
  {"/dev/tty52", BRACK(FHDEV(DEV_TTYS_MAJOR, 52)), "\\dev\\tty52"},
  {"/dev/tty53", BRACK(FHDEV(DEV_TTYS_MAJOR, 53)), "\\dev\\tty53"},
  {"/dev/tty54", BRACK(FHDEV(DEV_TTYS_MAJOR, 54)), "\\dev\\tty54"},
  {"/dev/tty55", BRACK(FHDEV(DEV_TTYS_MAJOR, 55)), "\\dev\\tty55"},
  {"/dev/tty56", BRACK(FHDEV(DEV_TTYS_MAJOR, 56)), "\\dev\\tty56"},
  {"/dev/tty57", BRACK(FHDEV(DEV_TTYS_MAJOR, 57)), "\\dev\\tty57"},
  {"/dev/tty58", BRACK(FHDEV(DEV_TTYS_MAJOR, 58)), "\\dev\\tty58"},
  {"/dev/tty59", BRACK(FHDEV(DEV_TTYS_MAJOR, 59)), "\\dev\\tty59"},
  {"/dev/tty60", BRACK(FHDEV(DEV_TTYS_MAJOR, 60)), "\\dev\\tty60"},
  {"/dev/tty61", BRACK(FHDEV(DEV_TTYS_MAJOR, 61)), "\\dev\\tty61"},
  {"/dev/tty62", BRACK(FHDEV(DEV_TTYS_MAJOR, 62)), "\\dev\\tty62"},
  {"/dev/tty63", BRACK(FHDEV(DEV_TTYS_MAJOR, 63)), "\\dev\\tty63"},
d2578 4
a2581 4
  {"/dev/ttym", BRACK(FH_TTYM), "\\dev\\ttym"},
  {"/dev/urandom", BRACK(FH_URANDOM), "\\dev\\urandom"},
  {"/dev/windows", BRACK(FH_WINDOWS), "\\dev\\windows"},
  {"/dev/zero", BRACK(FH_ZERO), "\\dev\\zero"}
@


1.31
log
@Remove unneeded header files from source files throughout.  Update copyrights
where appropriate.
* globals.cc: New file for generic global variables.
* mkglobals_h: New file to generate globals.h.
* mkstatic: New Script used to build a (currently non-working) static
libcygwin_s.a.
* Makefile.in: Add unused rule to build a non-working libcygwin_s.a.
(DLL_OFILES): Add globals.o.  Make all objects rely on globals.h.
(globals.h): New target.  Generate globals.h.
* cygtls.h: Honor new CYGTLS_HANDLE define to control when the HANDLE operator
is allowed in _cygtls.
* dcrt0.cc: Move most globals to globals.cc.
* init.cc: Ditto.
* environ.cc (strip_title_path): Remove now-unneeded extern.
* fhandler_serial.cc (fhandler_serial::open): Ditto.
* pinfo.cc: Ditto.
(commune_process): Ditto.
* shared.cc: Ditto.
* glob.cc: Ditto.
* strace.cc: Ditto.
* exceptions.cc: Define CYGTLS_HANDLE before including winsup.h.
* path.cc (stat_suffixes): Move here.
* security.h: Add forward class path_conv declaration.
* smallprint.cc (__small_vsprintf): Make a true c++ function.
(__small_sprintf): Ditto.
(small_printf): Ditto.
(console_printf): Ditto.
(__small_vswprintf): Ditto.
(__small_swprintf): Ditto.
* spawn.cc (spawn_guts): Remove _stdcall decoration in favor of regparm.
(hExeced): Move to globals.cc
* strfuncs.cc (current_codepage): Ditto.
(active_codepage): Ditto.
* sync.cc (lock_process::locker): Move here from dcrt0.cc.
* syscalls.cc (stat_suffixes): Move to path.cc.
* tty.cc (tty::create_master): Uncapitalize fatal warning for consistency.
* winsup.h: Include globals.h to declare most of the grab bag list of globals
which were previously defined here.
* mount.h: Move USER_* defines back to shared_info.h.
* speclib: Force temporary directory cleanup.
@
text
@d27 3
@


1.30
log
@	* devices.cc: Regenerate.
@
text
@a3 4
#include <sys/types.h>
#include <stdlib.h>
#include <ctype.h>
#include <string.h>
@


1.29
log
@* devices.in: Change mapping for /dev/ttyS* and /dev/com*.
@
text
@d2515 64
a2578 64
  {"/dev/ttyS0", BRACK(FHDEV(DEV_SERIAL_MAJOR, 0)), "\\Global??\\COM1"},
  {"/dev/ttyS1", BRACK(FHDEV(DEV_SERIAL_MAJOR, 1)), "\\Global??\\COM2"},
  {"/dev/ttyS2", BRACK(FHDEV(DEV_SERIAL_MAJOR, 2)), "\\Global??\\COM3"},
  {"/dev/ttyS3", BRACK(FHDEV(DEV_SERIAL_MAJOR, 3)), "\\Global??\\COM4"},
  {"/dev/ttyS4", BRACK(FHDEV(DEV_SERIAL_MAJOR, 4)), "\\Global??\\COM5"},
  {"/dev/ttyS5", BRACK(FHDEV(DEV_SERIAL_MAJOR, 5)), "\\Global??\\COM6"},
  {"/dev/ttyS6", BRACK(FHDEV(DEV_SERIAL_MAJOR, 6)), "\\Global??\\COM7"},
  {"/dev/ttyS7", BRACK(FHDEV(DEV_SERIAL_MAJOR, 7)), "\\Global??\\COM8"},
  {"/dev/ttyS8", BRACK(FHDEV(DEV_SERIAL_MAJOR, 8)), "\\Global??\\COM9"},
  {"/dev/ttyS9", BRACK(FHDEV(DEV_SERIAL_MAJOR, 9)), "\\Global??\\COM10"},
  {"/dev/ttyS10", BRACK(FHDEV(DEV_SERIAL_MAJOR, 10)), "\\Global??\\COM11"},
  {"/dev/ttyS11", BRACK(FHDEV(DEV_SERIAL_MAJOR, 11)), "\\Global??\\COM12"},
  {"/dev/ttyS12", BRACK(FHDEV(DEV_SERIAL_MAJOR, 12)), "\\Global??\\COM13"},
  {"/dev/ttyS13", BRACK(FHDEV(DEV_SERIAL_MAJOR, 13)), "\\Global??\\COM14"},
  {"/dev/ttyS14", BRACK(FHDEV(DEV_SERIAL_MAJOR, 14)), "\\Global??\\COM15"},
  {"/dev/ttyS15", BRACK(FHDEV(DEV_SERIAL_MAJOR, 15)), "\\Global??\\COM16"},
  {"/dev/ttyS16", BRACK(FHDEV(DEV_SERIAL_MAJOR, 16)), "\\Global??\\COM17"},
  {"/dev/ttyS17", BRACK(FHDEV(DEV_SERIAL_MAJOR, 17)), "\\Global??\\COM18"},
  {"/dev/ttyS18", BRACK(FHDEV(DEV_SERIAL_MAJOR, 18)), "\\Global??\\COM19"},
  {"/dev/ttyS19", BRACK(FHDEV(DEV_SERIAL_MAJOR, 19)), "\\Global??\\COM20"},
  {"/dev/ttyS20", BRACK(FHDEV(DEV_SERIAL_MAJOR, 20)), "\\Global??\\COM21"},
  {"/dev/ttyS21", BRACK(FHDEV(DEV_SERIAL_MAJOR, 21)), "\\Global??\\COM22"},
  {"/dev/ttyS22", BRACK(FHDEV(DEV_SERIAL_MAJOR, 22)), "\\Global??\\COM23"},
  {"/dev/ttyS23", BRACK(FHDEV(DEV_SERIAL_MAJOR, 23)), "\\Global??\\COM24"},
  {"/dev/ttyS24", BRACK(FHDEV(DEV_SERIAL_MAJOR, 24)), "\\Global??\\COM25"},
  {"/dev/ttyS25", BRACK(FHDEV(DEV_SERIAL_MAJOR, 25)), "\\Global??\\COM26"},
  {"/dev/ttyS26", BRACK(FHDEV(DEV_SERIAL_MAJOR, 26)), "\\Global??\\COM27"},
  {"/dev/ttyS27", BRACK(FHDEV(DEV_SERIAL_MAJOR, 27)), "\\Global??\\COM28"},
  {"/dev/ttyS28", BRACK(FHDEV(DEV_SERIAL_MAJOR, 28)), "\\Global??\\COM29"},
  {"/dev/ttyS29", BRACK(FHDEV(DEV_SERIAL_MAJOR, 29)), "\\Global??\\COM30"},
  {"/dev/ttyS30", BRACK(FHDEV(DEV_SERIAL_MAJOR, 30)), "\\Global??\\COM31"},
  {"/dev/ttyS31", BRACK(FHDEV(DEV_SERIAL_MAJOR, 31)), "\\Global??\\COM32"},
  {"/dev/ttyS32", BRACK(FHDEV(DEV_SERIAL_MAJOR, 32)), "\\Global??\\COM33"},
  {"/dev/ttyS33", BRACK(FHDEV(DEV_SERIAL_MAJOR, 33)), "\\Global??\\COM34"},
  {"/dev/ttyS34", BRACK(FHDEV(DEV_SERIAL_MAJOR, 34)), "\\Global??\\COM35"},
  {"/dev/ttyS35", BRACK(FHDEV(DEV_SERIAL_MAJOR, 35)), "\\Global??\\COM36"},
  {"/dev/ttyS36", BRACK(FHDEV(DEV_SERIAL_MAJOR, 36)), "\\Global??\\COM37"},
  {"/dev/ttyS37", BRACK(FHDEV(DEV_SERIAL_MAJOR, 37)), "\\Global??\\COM38"},
  {"/dev/ttyS38", BRACK(FHDEV(DEV_SERIAL_MAJOR, 38)), "\\Global??\\COM39"},
  {"/dev/ttyS39", BRACK(FHDEV(DEV_SERIAL_MAJOR, 39)), "\\Global??\\COM40"},
  {"/dev/ttyS40", BRACK(FHDEV(DEV_SERIAL_MAJOR, 40)), "\\Global??\\COM41"},
  {"/dev/ttyS41", BRACK(FHDEV(DEV_SERIAL_MAJOR, 41)), "\\Global??\\COM42"},
  {"/dev/ttyS42", BRACK(FHDEV(DEV_SERIAL_MAJOR, 42)), "\\Global??\\COM43"},
  {"/dev/ttyS43", BRACK(FHDEV(DEV_SERIAL_MAJOR, 43)), "\\Global??\\COM44"},
  {"/dev/ttyS44", BRACK(FHDEV(DEV_SERIAL_MAJOR, 44)), "\\Global??\\COM45"},
  {"/dev/ttyS45", BRACK(FHDEV(DEV_SERIAL_MAJOR, 45)), "\\Global??\\COM46"},
  {"/dev/ttyS46", BRACK(FHDEV(DEV_SERIAL_MAJOR, 46)), "\\Global??\\COM47"},
  {"/dev/ttyS47", BRACK(FHDEV(DEV_SERIAL_MAJOR, 47)), "\\Global??\\COM48"},
  {"/dev/ttyS48", BRACK(FHDEV(DEV_SERIAL_MAJOR, 48)), "\\Global??\\COM49"},
  {"/dev/ttyS49", BRACK(FHDEV(DEV_SERIAL_MAJOR, 49)), "\\Global??\\COM50"},
  {"/dev/ttyS50", BRACK(FHDEV(DEV_SERIAL_MAJOR, 50)), "\\Global??\\COM51"},
  {"/dev/ttyS51", BRACK(FHDEV(DEV_SERIAL_MAJOR, 51)), "\\Global??\\COM52"},
  {"/dev/ttyS52", BRACK(FHDEV(DEV_SERIAL_MAJOR, 52)), "\\Global??\\COM53"},
  {"/dev/ttyS53", BRACK(FHDEV(DEV_SERIAL_MAJOR, 53)), "\\Global??\\COM54"},
  {"/dev/ttyS54", BRACK(FHDEV(DEV_SERIAL_MAJOR, 54)), "\\Global??\\COM55"},
  {"/dev/ttyS55", BRACK(FHDEV(DEV_SERIAL_MAJOR, 55)), "\\Global??\\COM56"},
  {"/dev/ttyS56", BRACK(FHDEV(DEV_SERIAL_MAJOR, 56)), "\\Global??\\COM57"},
  {"/dev/ttyS57", BRACK(FHDEV(DEV_SERIAL_MAJOR, 57)), "\\Global??\\COM58"},
  {"/dev/ttyS58", BRACK(FHDEV(DEV_SERIAL_MAJOR, 58)), "\\Global??\\COM59"},
  {"/dev/ttyS59", BRACK(FHDEV(DEV_SERIAL_MAJOR, 59)), "\\Global??\\COM60"},
  {"/dev/ttyS60", BRACK(FHDEV(DEV_SERIAL_MAJOR, 60)), "\\Global??\\COM61"},
  {"/dev/ttyS61", BRACK(FHDEV(DEV_SERIAL_MAJOR, 61)), "\\Global??\\COM62"},
  {"/dev/ttyS62", BRACK(FHDEV(DEV_SERIAL_MAJOR, 62)), "\\Global??\\COM63"},
  {"/dev/ttyS63", BRACK(FHDEV(DEV_SERIAL_MAJOR, 63)), "\\Global??\\COM64"},
@


1.28
log
@Perform whitespace cleanup throughout.
* dcrt0.cc (signal_shift_subtract): Eliminate ancient backwards compatibility.
(check_sanity_and_sync): Ditto.
* winsup.h (SIGTOMASK): Ditto.  Just use constant in signal calculation.
* include/cygwin/version: Remove backwards signal mask compatibility define.
* path.cc (symlink_info::check_sysfile): Cosmetic change.
* registry.cc (get_registry_hive_path): Remove unneeded variable.
* exceptions.cc (handle_sigsuspend): Eliminate thread signal mask and use
either main sigmask or current thread sigmask.
(set_process_mask): Ditto.
(sighold): Ditto.
(sigrelse): Ditto.
(sigset): Ditto.
(set_process_mask_delta): Ditto.
(_cygtls::call_signal_handler): Ditto.
* fhandler_process.cc (format_process_status): Ditto.
* fhandler_termios.cc (fhandler_termios::bg_check): Ditto.
* pinfo.h (class pinfo): Ditto.
* select.cc (pselect): Ditto.
* signal.cc (sigprocmask): Ditto.
(abort): Ditto.
(sigpause): Ditto.
(sigsend): Ditto.
(wait_sig): Ditto.
* thread.h (pthread::parent_tls): New member.
* thread.cc (pthread::pthread): Record parent_tls here.
(pthread::thread_init_wrapper): Initialize sigmask from parent thread.
@
text
@d68 16
a83 16
  {"/dev/com1", BRACK(FHDEV(DEV_SERIAL_MAJOR, 0)), "\\Device\\Serial0"},
  {"/dev/com2", BRACK(FHDEV(DEV_SERIAL_MAJOR, 1)), "\\Device\\Serial1"},
  {"/dev/com3", BRACK(FHDEV(DEV_SERIAL_MAJOR, 2)), "\\Device\\Serial2"},
  {"/dev/com4", BRACK(FHDEV(DEV_SERIAL_MAJOR, 3)), "\\Device\\Serial3"},
  {"/dev/com5", BRACK(FHDEV(DEV_SERIAL_MAJOR, 4)), "\\Device\\Serial4"},
  {"/dev/com6", BRACK(FHDEV(DEV_SERIAL_MAJOR, 5)), "\\Device\\Serial5"},
  {"/dev/com7", BRACK(FHDEV(DEV_SERIAL_MAJOR, 6)), "\\Device\\Serial6"},
  {"/dev/com8", BRACK(FHDEV(DEV_SERIAL_MAJOR, 7)), "\\Device\\Serial7"},
  {"/dev/com9", BRACK(FHDEV(DEV_SERIAL_MAJOR, 8)), "\\Device\\Serial8"},
  {"/dev/com10", BRACK(FHDEV(DEV_SERIAL_MAJOR, 9)), "\\Device\\Serial9"},
  {"/dev/com11", BRACK(FHDEV(DEV_SERIAL_MAJOR, 10)), "\\Device\\Serial10"},
  {"/dev/com12", BRACK(FHDEV(DEV_SERIAL_MAJOR, 11)), "\\Device\\Serial11"},
  {"/dev/com13", BRACK(FHDEV(DEV_SERIAL_MAJOR, 12)), "\\Device\\Serial12"},
  {"/dev/com14", BRACK(FHDEV(DEV_SERIAL_MAJOR, 13)), "\\Device\\Serial13"},
  {"/dev/com15", BRACK(FHDEV(DEV_SERIAL_MAJOR, 14)), "\\Device\\Serial14"},
  {"/dev/com16", BRACK(FHDEV(DEV_SERIAL_MAJOR, 15)), "\\Device\\Serial15"},
d2515 64
a2578 64
  {"/dev/ttyS0", BRACK(FHDEV(DEV_SERIAL_MAJOR, 0)), "\\Device\\Serial0"},
  {"/dev/ttyS1", BRACK(FHDEV(DEV_SERIAL_MAJOR, 1)), "\\Device\\Serial1"},
  {"/dev/ttyS2", BRACK(FHDEV(DEV_SERIAL_MAJOR, 2)), "\\Device\\Serial2"},
  {"/dev/ttyS3", BRACK(FHDEV(DEV_SERIAL_MAJOR, 3)), "\\Device\\Serial3"},
  {"/dev/ttyS4", BRACK(FHDEV(DEV_SERIAL_MAJOR, 4)), "\\Device\\Serial4"},
  {"/dev/ttyS5", BRACK(FHDEV(DEV_SERIAL_MAJOR, 5)), "\\Device\\Serial5"},
  {"/dev/ttyS6", BRACK(FHDEV(DEV_SERIAL_MAJOR, 6)), "\\Device\\Serial6"},
  {"/dev/ttyS7", BRACK(FHDEV(DEV_SERIAL_MAJOR, 7)), "\\Device\\Serial7"},
  {"/dev/ttyS8", BRACK(FHDEV(DEV_SERIAL_MAJOR, 8)), "\\Device\\Serial8"},
  {"/dev/ttyS9", BRACK(FHDEV(DEV_SERIAL_MAJOR, 9)), "\\Device\\Serial9"},
  {"/dev/ttyS10", BRACK(FHDEV(DEV_SERIAL_MAJOR, 10)), "\\Device\\Serial10"},
  {"/dev/ttyS11", BRACK(FHDEV(DEV_SERIAL_MAJOR, 11)), "\\Device\\Serial11"},
  {"/dev/ttyS12", BRACK(FHDEV(DEV_SERIAL_MAJOR, 12)), "\\Device\\Serial12"},
  {"/dev/ttyS13", BRACK(FHDEV(DEV_SERIAL_MAJOR, 13)), "\\Device\\Serial13"},
  {"/dev/ttyS14", BRACK(FHDEV(DEV_SERIAL_MAJOR, 14)), "\\Device\\Serial14"},
  {"/dev/ttyS15", BRACK(FHDEV(DEV_SERIAL_MAJOR, 15)), "\\Device\\Serial15"},
  {"/dev/ttyS16", BRACK(FHDEV(DEV_SERIAL_MAJOR, 16)), "\\Device\\Serial16"},
  {"/dev/ttyS17", BRACK(FHDEV(DEV_SERIAL_MAJOR, 17)), "\\Device\\Serial17"},
  {"/dev/ttyS18", BRACK(FHDEV(DEV_SERIAL_MAJOR, 18)), "\\Device\\Serial18"},
  {"/dev/ttyS19", BRACK(FHDEV(DEV_SERIAL_MAJOR, 19)), "\\Device\\Serial19"},
  {"/dev/ttyS20", BRACK(FHDEV(DEV_SERIAL_MAJOR, 20)), "\\Device\\Serial20"},
  {"/dev/ttyS21", BRACK(FHDEV(DEV_SERIAL_MAJOR, 21)), "\\Device\\Serial21"},
  {"/dev/ttyS22", BRACK(FHDEV(DEV_SERIAL_MAJOR, 22)), "\\Device\\Serial22"},
  {"/dev/ttyS23", BRACK(FHDEV(DEV_SERIAL_MAJOR, 23)), "\\Device\\Serial23"},
  {"/dev/ttyS24", BRACK(FHDEV(DEV_SERIAL_MAJOR, 24)), "\\Device\\Serial24"},
  {"/dev/ttyS25", BRACK(FHDEV(DEV_SERIAL_MAJOR, 25)), "\\Device\\Serial25"},
  {"/dev/ttyS26", BRACK(FHDEV(DEV_SERIAL_MAJOR, 26)), "\\Device\\Serial26"},
  {"/dev/ttyS27", BRACK(FHDEV(DEV_SERIAL_MAJOR, 27)), "\\Device\\Serial27"},
  {"/dev/ttyS28", BRACK(FHDEV(DEV_SERIAL_MAJOR, 28)), "\\Device\\Serial28"},
  {"/dev/ttyS29", BRACK(FHDEV(DEV_SERIAL_MAJOR, 29)), "\\Device\\Serial29"},
  {"/dev/ttyS30", BRACK(FHDEV(DEV_SERIAL_MAJOR, 30)), "\\Device\\Serial30"},
  {"/dev/ttyS31", BRACK(FHDEV(DEV_SERIAL_MAJOR, 31)), "\\Device\\Serial31"},
  {"/dev/ttyS32", BRACK(FHDEV(DEV_SERIAL_MAJOR, 32)), "\\Device\\Serial32"},
  {"/dev/ttyS33", BRACK(FHDEV(DEV_SERIAL_MAJOR, 33)), "\\Device\\Serial33"},
  {"/dev/ttyS34", BRACK(FHDEV(DEV_SERIAL_MAJOR, 34)), "\\Device\\Serial34"},
  {"/dev/ttyS35", BRACK(FHDEV(DEV_SERIAL_MAJOR, 35)), "\\Device\\Serial35"},
  {"/dev/ttyS36", BRACK(FHDEV(DEV_SERIAL_MAJOR, 36)), "\\Device\\Serial36"},
  {"/dev/ttyS37", BRACK(FHDEV(DEV_SERIAL_MAJOR, 37)), "\\Device\\Serial37"},
  {"/dev/ttyS38", BRACK(FHDEV(DEV_SERIAL_MAJOR, 38)), "\\Device\\Serial38"},
  {"/dev/ttyS39", BRACK(FHDEV(DEV_SERIAL_MAJOR, 39)), "\\Device\\Serial39"},
  {"/dev/ttyS40", BRACK(FHDEV(DEV_SERIAL_MAJOR, 40)), "\\Device\\Serial40"},
  {"/dev/ttyS41", BRACK(FHDEV(DEV_SERIAL_MAJOR, 41)), "\\Device\\Serial41"},
  {"/dev/ttyS42", BRACK(FHDEV(DEV_SERIAL_MAJOR, 42)), "\\Device\\Serial42"},
  {"/dev/ttyS43", BRACK(FHDEV(DEV_SERIAL_MAJOR, 43)), "\\Device\\Serial43"},
  {"/dev/ttyS44", BRACK(FHDEV(DEV_SERIAL_MAJOR, 44)), "\\Device\\Serial44"},
  {"/dev/ttyS45", BRACK(FHDEV(DEV_SERIAL_MAJOR, 45)), "\\Device\\Serial45"},
  {"/dev/ttyS46", BRACK(FHDEV(DEV_SERIAL_MAJOR, 46)), "\\Device\\Serial46"},
  {"/dev/ttyS47", BRACK(FHDEV(DEV_SERIAL_MAJOR, 47)), "\\Device\\Serial47"},
  {"/dev/ttyS48", BRACK(FHDEV(DEV_SERIAL_MAJOR, 48)), "\\Device\\Serial48"},
  {"/dev/ttyS49", BRACK(FHDEV(DEV_SERIAL_MAJOR, 49)), "\\Device\\Serial49"},
  {"/dev/ttyS50", BRACK(FHDEV(DEV_SERIAL_MAJOR, 50)), "\\Device\\Serial50"},
  {"/dev/ttyS51", BRACK(FHDEV(DEV_SERIAL_MAJOR, 51)), "\\Device\\Serial51"},
  {"/dev/ttyS52", BRACK(FHDEV(DEV_SERIAL_MAJOR, 52)), "\\Device\\Serial52"},
  {"/dev/ttyS53", BRACK(FHDEV(DEV_SERIAL_MAJOR, 53)), "\\Device\\Serial53"},
  {"/dev/ttyS54", BRACK(FHDEV(DEV_SERIAL_MAJOR, 54)), "\\Device\\Serial54"},
  {"/dev/ttyS55", BRACK(FHDEV(DEV_SERIAL_MAJOR, 55)), "\\Device\\Serial55"},
  {"/dev/ttyS56", BRACK(FHDEV(DEV_SERIAL_MAJOR, 56)), "\\Device\\Serial56"},
  {"/dev/ttyS57", BRACK(FHDEV(DEV_SERIAL_MAJOR, 57)), "\\Device\\Serial57"},
  {"/dev/ttyS58", BRACK(FHDEV(DEV_SERIAL_MAJOR, 58)), "\\Device\\Serial58"},
  {"/dev/ttyS59", BRACK(FHDEV(DEV_SERIAL_MAJOR, 59)), "\\Device\\Serial59"},
  {"/dev/ttyS60", BRACK(FHDEV(DEV_SERIAL_MAJOR, 60)), "\\Device\\Serial60"},
  {"/dev/ttyS61", BRACK(FHDEV(DEV_SERIAL_MAJOR, 61)), "\\Device\\Serial61"},
  {"/dev/ttyS62", BRACK(FHDEV(DEV_SERIAL_MAJOR, 62)), "\\Device\\Serial62"},
  {"/dev/ttyS63", BRACK(FHDEV(DEV_SERIAL_MAJOR, 63)), "\\Device\\Serial63"},
@


1.27
log
@	* devices.in (dev_storage): Use native NT device name for kmsg mailslot.
	* devices.cc: Regenerate.
	* fhandler.cc (fhandler_base::operator =): Use path_conv assignment
	operator.
	(fhandler_base::set_name): Ditto.
	(fhandler_base::open): Use NT native path in debug output.
	* fhandler_mailslot.cc: Convert to NT native function calls.
	* ntdll.h (struct _FILE_MAILSLOT_SET_INFORMATION): Define.
	(NtCreateMailslotFile): Declare.
	* path.cc (path_conv::set_normalized_path): Don't set wide_path to NULL.
	(path_conv::set_name): Remove unused function.
	* path.h (path_conv::set_name): Drop declaration.
	(path_conv::operator =): Define.
@
text
@d43455 1
a43455 1
  else if (drive < 32)          /* /dev/sdq -to- /dev/sdaf */
d43460 1
a43460 1
  else if (drive < 48)          /* /dev/sdag -to- /dev/sdav */
d43465 1
a43465 1
  else if (drive < 64)          /* /dev/sdaw -to- /dev/sdbl */
d43470 1
a43470 1
  else if (drive < 80)          /* /dev/sdbm -to- /dev/sdcb */
d43475 1
a43475 1
  else if (drive < 96)          /* /dev/sdcc -to- /dev/sdcr */
d43480 1
a43480 1
  else if (drive < 112)          /* /dev/sdcs -to- /dev/sddh */
d43486 2
a43487 2
           /proc/partitions if there are more than 128 devices */
  else                           /* /dev/sddi -to- /dev/sddx */
@


1.26
log
@	* devices.in: Change native device name to native NT device name for
	/dev/null, /dev/comX and /dev/ttySx.
	* devices.cc: Regenerate.
	* fhandler.cc (fhandler_base::open_9x): Remove.
	(fhandler_base::open): Don't test for DOS device name, don't call
	open_9x.
	(fhandler_dev_null::open): Remove.
	* fhandler.h (class fhandler_base): Drop open_9x declaration.
	(class fhandler_dev_null): Drop open declaration.
@
text
@d107 1
a107 1
  {"/dev/kmsg", BRACK(FH_KMSG), "\\\\.\\mailslot\\cygwin\\dev\\kmsg"},
@


1.25
log
@	* Makefile.in (DLL_OFILES): Add fhandler_procnet.o.
	* autoload.cc (GetAdaptersAddresses): Define.
	* devices.h (FH_PROCNET): Define new device.
	* devices.in (dev_procnet_storage): Add "/proc/net" entry.
	* devices.cc: Regenerate.
	* dir.cc (readdir_worker): Use isproc_dev macro.
	* dtable.cc (build_fh_pc): Add FH_PROCNET.
	* fhandler.h (class fhandler_procnet): New class.
	* fhandler_proc.cc: Add "net" subdirectory handling.
	* fhandler_procnet.cc: New file handling "/proc/net" directory.
	* path.cc (isvirtual_dev): Move to path.h.
	* path.h (isproc_dev): New macro to identify /proc files by device.
	(isvirtual_dev): Moved here.  Define using isproc_dev.
	* syscalls.cc (unlink): Use isproc_dev macro.
	* wincap.h (wincapc::has_gaa_prefixes): New element.
	(wincapc::has_gaa_on_link_prefix): New element.
	* wincap.cc: Implement above elements throughout.
	(wincapc::init): Check XP for service pack and set has_gaa_prefixes
	appropriately.
	* include/cygwin/in6.h: Include asm/byteorder.h.
@
text
@d68 16
a83 16
  {"/dev/com1", BRACK(FHDEV(DEV_SERIAL_MAJOR, 1)), "\\\\.\\com1"},
  {"/dev/com2", BRACK(FHDEV(DEV_SERIAL_MAJOR, 2)), "\\\\.\\com2"},
  {"/dev/com3", BRACK(FHDEV(DEV_SERIAL_MAJOR, 3)), "\\\\.\\com3"},
  {"/dev/com4", BRACK(FHDEV(DEV_SERIAL_MAJOR, 4)), "\\\\.\\com4"},
  {"/dev/com5", BRACK(FHDEV(DEV_SERIAL_MAJOR, 5)), "\\\\.\\com5"},
  {"/dev/com6", BRACK(FHDEV(DEV_SERIAL_MAJOR, 6)), "\\\\.\\com6"},
  {"/dev/com7", BRACK(FHDEV(DEV_SERIAL_MAJOR, 7)), "\\\\.\\com7"},
  {"/dev/com8", BRACK(FHDEV(DEV_SERIAL_MAJOR, 8)), "\\\\.\\com8"},
  {"/dev/com9", BRACK(FHDEV(DEV_SERIAL_MAJOR, 9)), "\\\\.\\com9"},
  {"/dev/com10", BRACK(FHDEV(DEV_SERIAL_MAJOR, 10)), "\\\\.\\com10"},
  {"/dev/com11", BRACK(FHDEV(DEV_SERIAL_MAJOR, 11)), "\\\\.\\com11"},
  {"/dev/com12", BRACK(FHDEV(DEV_SERIAL_MAJOR, 12)), "\\\\.\\com12"},
  {"/dev/com13", BRACK(FHDEV(DEV_SERIAL_MAJOR, 13)), "\\\\.\\com13"},
  {"/dev/com14", BRACK(FHDEV(DEV_SERIAL_MAJOR, 14)), "\\\\.\\com14"},
  {"/dev/com15", BRACK(FHDEV(DEV_SERIAL_MAJOR, 15)), "\\\\.\\com15"},
  {"/dev/com16", BRACK(FHDEV(DEV_SERIAL_MAJOR, 16)), "\\\\.\\com16"},
d237 1
a237 1
  {"/dev/null", BRACK(FH_NULL), "nul"},
d2515 64
a2578 64
  {"/dev/ttyS0", BRACK(FHDEV(DEV_SERIAL_MAJOR, 1)), "\\\\.\\com1"},
  {"/dev/ttyS1", BRACK(FHDEV(DEV_SERIAL_MAJOR, 2)), "\\\\.\\com2"},
  {"/dev/ttyS2", BRACK(FHDEV(DEV_SERIAL_MAJOR, 3)), "\\\\.\\com3"},
  {"/dev/ttyS3", BRACK(FHDEV(DEV_SERIAL_MAJOR, 4)), "\\\\.\\com4"},
  {"/dev/ttyS4", BRACK(FHDEV(DEV_SERIAL_MAJOR, 5)), "\\\\.\\com5"},
  {"/dev/ttyS5", BRACK(FHDEV(DEV_SERIAL_MAJOR, 6)), "\\\\.\\com6"},
  {"/dev/ttyS6", BRACK(FHDEV(DEV_SERIAL_MAJOR, 7)), "\\\\.\\com7"},
  {"/dev/ttyS7", BRACK(FHDEV(DEV_SERIAL_MAJOR, 8)), "\\\\.\\com8"},
  {"/dev/ttyS8", BRACK(FHDEV(DEV_SERIAL_MAJOR, 9)), "\\\\.\\com9"},
  {"/dev/ttyS9", BRACK(FHDEV(DEV_SERIAL_MAJOR, 10)), "\\\\.\\com10"},
  {"/dev/ttyS10", BRACK(FHDEV(DEV_SERIAL_MAJOR, 11)), "\\\\.\\com11"},
  {"/dev/ttyS11", BRACK(FHDEV(DEV_SERIAL_MAJOR, 12)), "\\\\.\\com12"},
  {"/dev/ttyS12", BRACK(FHDEV(DEV_SERIAL_MAJOR, 13)), "\\\\.\\com13"},
  {"/dev/ttyS13", BRACK(FHDEV(DEV_SERIAL_MAJOR, 14)), "\\\\.\\com14"},
  {"/dev/ttyS14", BRACK(FHDEV(DEV_SERIAL_MAJOR, 15)), "\\\\.\\com15"},
  {"/dev/ttyS15", BRACK(FHDEV(DEV_SERIAL_MAJOR, 16)), "\\\\.\\com16"},
  {"/dev/ttyS16", BRACK(FHDEV(DEV_SERIAL_MAJOR, 17)), "\\\\.\\com17"},
  {"/dev/ttyS17", BRACK(FHDEV(DEV_SERIAL_MAJOR, 18)), "\\\\.\\com18"},
  {"/dev/ttyS18", BRACK(FHDEV(DEV_SERIAL_MAJOR, 19)), "\\\\.\\com19"},
  {"/dev/ttyS19", BRACK(FHDEV(DEV_SERIAL_MAJOR, 20)), "\\\\.\\com20"},
  {"/dev/ttyS20", BRACK(FHDEV(DEV_SERIAL_MAJOR, 21)), "\\\\.\\com21"},
  {"/dev/ttyS21", BRACK(FHDEV(DEV_SERIAL_MAJOR, 22)), "\\\\.\\com22"},
  {"/dev/ttyS22", BRACK(FHDEV(DEV_SERIAL_MAJOR, 23)), "\\\\.\\com23"},
  {"/dev/ttyS23", BRACK(FHDEV(DEV_SERIAL_MAJOR, 24)), "\\\\.\\com24"},
  {"/dev/ttyS24", BRACK(FHDEV(DEV_SERIAL_MAJOR, 25)), "\\\\.\\com25"},
  {"/dev/ttyS25", BRACK(FHDEV(DEV_SERIAL_MAJOR, 26)), "\\\\.\\com26"},
  {"/dev/ttyS26", BRACK(FHDEV(DEV_SERIAL_MAJOR, 27)), "\\\\.\\com27"},
  {"/dev/ttyS27", BRACK(FHDEV(DEV_SERIAL_MAJOR, 28)), "\\\\.\\com28"},
  {"/dev/ttyS28", BRACK(FHDEV(DEV_SERIAL_MAJOR, 29)), "\\\\.\\com29"},
  {"/dev/ttyS29", BRACK(FHDEV(DEV_SERIAL_MAJOR, 30)), "\\\\.\\com30"},
  {"/dev/ttyS30", BRACK(FHDEV(DEV_SERIAL_MAJOR, 31)), "\\\\.\\com31"},
  {"/dev/ttyS31", BRACK(FHDEV(DEV_SERIAL_MAJOR, 32)), "\\\\.\\com32"},
  {"/dev/ttyS32", BRACK(FHDEV(DEV_SERIAL_MAJOR, 33)), "\\\\.\\com33"},
  {"/dev/ttyS33", BRACK(FHDEV(DEV_SERIAL_MAJOR, 34)), "\\\\.\\com34"},
  {"/dev/ttyS34", BRACK(FHDEV(DEV_SERIAL_MAJOR, 35)), "\\\\.\\com35"},
  {"/dev/ttyS35", BRACK(FHDEV(DEV_SERIAL_MAJOR, 36)), "\\\\.\\com36"},
  {"/dev/ttyS36", BRACK(FHDEV(DEV_SERIAL_MAJOR, 37)), "\\\\.\\com37"},
  {"/dev/ttyS37", BRACK(FHDEV(DEV_SERIAL_MAJOR, 38)), "\\\\.\\com38"},
  {"/dev/ttyS38", BRACK(FHDEV(DEV_SERIAL_MAJOR, 39)), "\\\\.\\com39"},
  {"/dev/ttyS39", BRACK(FHDEV(DEV_SERIAL_MAJOR, 40)), "\\\\.\\com40"},
  {"/dev/ttyS40", BRACK(FHDEV(DEV_SERIAL_MAJOR, 41)), "\\\\.\\com41"},
  {"/dev/ttyS41", BRACK(FHDEV(DEV_SERIAL_MAJOR, 42)), "\\\\.\\com42"},
  {"/dev/ttyS42", BRACK(FHDEV(DEV_SERIAL_MAJOR, 43)), "\\\\.\\com43"},
  {"/dev/ttyS43", BRACK(FHDEV(DEV_SERIAL_MAJOR, 44)), "\\\\.\\com44"},
  {"/dev/ttyS44", BRACK(FHDEV(DEV_SERIAL_MAJOR, 45)), "\\\\.\\com45"},
  {"/dev/ttyS45", BRACK(FHDEV(DEV_SERIAL_MAJOR, 46)), "\\\\.\\com46"},
  {"/dev/ttyS46", BRACK(FHDEV(DEV_SERIAL_MAJOR, 47)), "\\\\.\\com47"},
  {"/dev/ttyS47", BRACK(FHDEV(DEV_SERIAL_MAJOR, 48)), "\\\\.\\com48"},
  {"/dev/ttyS48", BRACK(FHDEV(DEV_SERIAL_MAJOR, 49)), "\\\\.\\com49"},
  {"/dev/ttyS49", BRACK(FHDEV(DEV_SERIAL_MAJOR, 50)), "\\\\.\\com50"},
  {"/dev/ttyS50", BRACK(FHDEV(DEV_SERIAL_MAJOR, 51)), "\\\\.\\com51"},
  {"/dev/ttyS51", BRACK(FHDEV(DEV_SERIAL_MAJOR, 52)), "\\\\.\\com52"},
  {"/dev/ttyS52", BRACK(FHDEV(DEV_SERIAL_MAJOR, 53)), "\\\\.\\com53"},
  {"/dev/ttyS53", BRACK(FHDEV(DEV_SERIAL_MAJOR, 54)), "\\\\.\\com54"},
  {"/dev/ttyS54", BRACK(FHDEV(DEV_SERIAL_MAJOR, 55)), "\\\\.\\com55"},
  {"/dev/ttyS55", BRACK(FHDEV(DEV_SERIAL_MAJOR, 56)), "\\\\.\\com56"},
  {"/dev/ttyS56", BRACK(FHDEV(DEV_SERIAL_MAJOR, 57)), "\\\\.\\com57"},
  {"/dev/ttyS57", BRACK(FHDEV(DEV_SERIAL_MAJOR, 58)), "\\\\.\\com58"},
  {"/dev/ttyS58", BRACK(FHDEV(DEV_SERIAL_MAJOR, 59)), "\\\\.\\com59"},
  {"/dev/ttyS59", BRACK(FHDEV(DEV_SERIAL_MAJOR, 60)), "\\\\.\\com60"},
  {"/dev/ttyS60", BRACK(FHDEV(DEV_SERIAL_MAJOR, 61)), "\\\\.\\com61"},
  {"/dev/ttyS61", BRACK(FHDEV(DEV_SERIAL_MAJOR, 62)), "\\\\.\\com62"},
  {"/dev/ttyS62", BRACK(FHDEV(DEV_SERIAL_MAJOR, 63)), "\\\\.\\com63"},
  {"/dev/ttyS63", BRACK(FHDEV(DEV_SERIAL_MAJOR, 64)), "\\\\.\\com64"},
@


1.24
log
@	* devices.h: Add additional SCSI disk block device numbers per
	http://www.kernel.org/pub/linux/docs/device-list/devices.txt
	up to 128 devices.
	* devices.in: Ditto.
	(device::parsedisk): Add additonal else-if cases for decoding base
	and drive indices.
	* devices.cc: Regenerate.
	* dtable.cc (build_fh_pc): Add additional DEV_SD{2..7}_MAJOR cases.
@
text
@d28 3
@


1.23
log
@	* devices.in: Raise number of handled serial ports to 64.
	* devices.cc: Regenerate.
@
text
@d671 1632
d2583 3
a2585 3
const device *ttym_dev = dev_storage + 881;
const device *ttys_dev = dev_storage + 753;
const device *urandom_dev = dev_storage + 882;
d2633 1
a2633 1
return dev_storage + 752;
d3080 1
a3080 1
return dev_storage + 633;
d3095 1
a3095 1
return dev_storage + 617;
d3134 1
a3134 1
return dev_storage + 632;
d3149 1
a3149 1
return dev_storage + 616;
d3188 1
a3188 1
return dev_storage + 631;
d3203 1
a3203 1
return dev_storage + 615;
d3242 1
a3242 1
return dev_storage + 630;
d3257 1
a3257 1
return dev_storage + 614;
d3296 1
a3296 1
return dev_storage + 629;
d3311 1
a3311 1
return dev_storage + 613;
d3350 1
a3350 1
return dev_storage + 628;
d3365 1
a3365 1
return dev_storage + 612;
d3404 1
a3404 1
return dev_storage + 627;
d3419 1
a3419 1
return dev_storage + 611;
d3458 1
a3458 1
return dev_storage + 626;
d3473 1
a3473 1
return dev_storage + 610;
d3512 1
a3512 1
return dev_storage + 625;
d3527 1
a3527 1
return dev_storage + 609;
d3566 1
a3566 1
return dev_storage + 624;
d3581 1
a3581 1
return dev_storage + 608;
d3620 1
a3620 1
      switch (KR_keyword [8])
d3622 2
a3623 2
        case 'x':
          if (strncmp (KR_keyword, "/dev/ptmx", 9) == 0)
d3625 3
d3629 1
a3629 1
return dev_storage + 174;
d3632 3
a3634 3
            }
          else
            {
d3639 4
a3642 4
            }
        case 't':
          if (strncmp (KR_keyword, "/dev/port", 9) == 0)
            {
d3644 1
a3644 1
return dev_storage + 173;
d3647 3
a3649 3
            }
          else
            {
d3654 3
a3656 6
            }
        case 'o':
          switch (KR_keyword [5])
            {
            case 'z':
              if (strncmp (KR_keyword, "/dev/zero", 9) == 0)
d3659 1
a3659 1
return dev_storage + 884;
d3670 2
a3671 2
            case 'f':
              if (strncmp (KR_keyword, "/dev/fifo", 9) == 0)
d3674 1
a3674 1
return dev_storage + 38;
d3685 2
a3686 11
            default:
{
return	NULL;

}
            }
        case 'm':
          switch (KR_keyword [5])
            {
            case 't':
              if (strncmp (KR_keyword, "/dev/ttym", 9) == 0)
d3689 1
a3689 1
return dev_storage + 881;
d3700 2
a3701 2
            case 'k':
              if (strncmp (KR_keyword, "/dev/kmem", 9) == 0)
d3704 1
a3704 1
return dev_storage + 40;
d3715 2
a3716 11
            default:
{
return	NULL;

}
            }
        case 'l':
          switch (KR_keyword [5])
            {
            case 'n':
              if (strncmp (KR_keyword, "/dev/null", 9) == 0)
d3719 1
a3719 1
return dev_storage + 171;
d3730 2
a3731 2
            case 'f':
              if (strncmp (KR_keyword, "/dev/full", 9) == 0)
d3734 1
a3734 1
return dev_storage + 39;
d3745 3
a3747 1
            default:
d3749 1
a3749 1
return	NULL;
d3752 3
a3754 11
            }
        case 'g':
          if (strncmp (KR_keyword, "/dev/kmsg", 9) == 0)
            {
{
return dev_storage + 41;

}
            }
          else
            {
d3759 2
a3760 11
            }
        case 'e':
          if (strncmp (KR_keyword, "/dev/pipe", 9) == 0)
            {
{
return dev_storage + 172;

}
            }
          else
            {
d3766 2
a3767 2
        case '9':
          switch (KR_keyword [7])
d3769 2
a3770 2
            case 'z':
              if (strncmp (KR_keyword, "/dev/sdz9", 9) == 0)
d3773 1
a3773 1
return dev_storage + 601;
d3784 1
a3784 1
            case 'y':
d3791 1
a3791 1
return dev_storage + 762;
d3823 2
a3824 2
            case 'x':
              if (strncmp (KR_keyword, "/dev/sdx9", 9) == 0)
d3826 3
d3830 1
a3830 1
return dev_storage + 571;
d3833 3
a3835 3
                }
              else
                {
d3840 11
a3850 4
                }
            case 'w':
              if (strncmp (KR_keyword, "/dev/sdw9", 9) == 0)
                {
d3852 1
a3852 1
return dev_storage + 556;
d3855 2
a3856 3
                }
              else
                {
d3862 2
a3863 2
            case 'v':
              if (strncmp (KR_keyword, "/dev/sdv9", 9) == 0)
d3865 3
d3869 1
a3869 1
return dev_storage + 541;
d3872 3
a3874 3
                }
              else
                {
d3879 11
a3889 4
                }
            case 'u':
              if (strncmp (KR_keyword, "/dev/sdu9", 9) == 0)
                {
d3891 1
a3891 1
return dev_storage + 526;
d3894 2
a3895 3
                }
              else
                {
d3901 1
a3901 1
            case 't':
d3904 2
a3905 2
                case 's':
                  if (strncmp (KR_keyword, "/dev/sdt9", 9) == 0)
d3908 1
a3908 1
return dev_storage + 511;
d3919 2
a3920 2
                case 'n':
                  if (strncmp (KR_keyword, "/dev/nst9", 9) == 0)
d3923 1
a3923 1
return dev_storage + 52;
d3940 2
a3941 2
            case 's':
              if (strncmp (KR_keyword, "/dev/sds9", 9) == 0)
d3943 3
d3947 1
a3947 1
return dev_storage + 496;
d3950 3
a3952 3
                }
              else
                {
d3957 11
a3967 4
                }
            case 'r':
              if (strncmp (KR_keyword, "/dev/sdr9", 9) == 0)
                {
d3969 1
a3969 1
return dev_storage + 481;
d3972 2
a3973 3
                }
              else
                {
d3979 2
a3980 2
            case 'q':
              if (strncmp (KR_keyword, "/dev/sdq9", 9) == 0)
d3982 3
d3986 1
a3986 1
return dev_storage + 466;
d3989 3
a3991 3
                }
              else
                {
d3996 11
a4006 4
                }
            case 'p':
              if (strncmp (KR_keyword, "/dev/sdp9", 9) == 0)
                {
d4008 1
a4008 1
return dev_storage + 451;
d4011 2
a4012 3
                }
              else
                {
d4018 2
a4019 2
            case 'o':
              if (strncmp (KR_keyword, "/dev/sdo9", 9) == 0)
d4021 3
d4025 1
a4025 1
return dev_storage + 436;
d4028 3
a4030 3
                }
              else
                {
d4035 11
a4045 4
                }
            case 'n':
              if (strncmp (KR_keyword, "/dev/sdn9", 9) == 0)
                {
d4047 1
a4047 1
return dev_storage + 421;
d4050 2
a4051 3
                }
              else
                {
d4057 1
a4057 1
            case 'm':
d4060 2
a4061 2
                case 's':
                  if (strncmp (KR_keyword, "/dev/sdm9", 9) == 0)
d4064 1
a4064 1
return dev_storage + 406;
d4075 2
a4076 2
                case 'c':
                  if (strncmp (KR_keyword, "/dev/com9", 9) == 0)
d4079 1
a4079 1
return dev_storage + 10;
d4096 2
a4097 2
            case 'l':
              if (strncmp (KR_keyword, "/dev/sdl9", 9) == 0)
d4099 3
d4103 1
a4103 1
return dev_storage + 391;
d4106 3
a4108 3
                }
              else
                {
d4113 11
a4123 4
                }
            case 'k':
              if (strncmp (KR_keyword, "/dev/sdk9", 9) == 0)
                {
d4125 1
a4125 1
return dev_storage + 376;
d4128 2
a4129 3
                }
              else
                {
d4135 2
a4136 2
            case 'j':
              if (strncmp (KR_keyword, "/dev/sdj9", 9) == 0)
d4139 1
a4139 1
return dev_storage + 361;
d4150 11
a4160 2
            case 'i':
              if (strncmp (KR_keyword, "/dev/sdi9", 9) == 0)
d4163 1
a4163 1
return dev_storage + 346;
d4174 2
a4175 2
            case 'h':
              if (strncmp (KR_keyword, "/dev/sdh9", 9) == 0)
d4178 1
a4178 1
return dev_storage + 331;
d4189 2
a4190 2
            case 'g':
              if (strncmp (KR_keyword, "/dev/sdg9", 9) == 0)
d4193 1
a4193 1
return dev_storage + 316;
d4204 2
a4205 2
            case 'f':
              if (strncmp (KR_keyword, "/dev/sdf9", 9) == 0)
d4208 1
a4208 1
return dev_storage + 301;
d4219 2
a4220 2
            case 'e':
              if (strncmp (KR_keyword, "/dev/sde9", 9) == 0)
d4223 1
a4223 1
return dev_storage + 286;
d4234 2
a4235 2
            case 'd':
              switch (KR_keyword [6])
a4236 3
                case 'd':
                  if (strncmp (KR_keyword, "/dev/sdd9", 9) == 0)
                    {
d4238 1
a4238 1
return dev_storage + 271;
d4241 3
a4243 24
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'c':
                  if (strncmp (KR_keyword, "/dev/scd9", 9) == 0)
                    {
{
return dev_storage + 185;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                default:
d4249 2
a4250 2
            case 'c':
              if (strncmp (KR_keyword, "/dev/sdc9", 9) == 0)
d4253 1
a4253 1
return dev_storage + 256;
d4264 2
a4265 2
            case 'b':
              if (strncmp (KR_keyword, "/dev/sdb9", 9) == 0)
d4268 1
a4268 1
return dev_storage + 241;
d4279 2
a4280 2
            case 'a':
              if (strncmp (KR_keyword, "/dev/sda9", 9) == 0)
d4283 1
a4283 1
return dev_storage + 226;
d4294 9
d4304 1
a4304 1
              if (strncmp (KR_keyword, "/dev/st99", 9) == 0)
d4307 1
a4307 1
return dev_storage + 723;
d4319 1
a4319 1
              if (strncmp (KR_keyword, "/dev/st89", 9) == 0)
d4322 1
a4322 1
return dev_storage + 713;
d4334 1
a4334 1
              if (strncmp (KR_keyword, "/dev/st79", 9) == 0)
d4337 1
a4337 1
return dev_storage + 703;
d4349 1
a4349 1
              if (strncmp (KR_keyword, "/dev/st69", 9) == 0)
d4352 1
a4352 1
return dev_storage + 693;
d4364 1
a4364 1
              if (strncmp (KR_keyword, "/dev/st59", 9) == 0)
d4367 1
a4367 1
return dev_storage + 683;
d4379 1
a4379 1
              if (strncmp (KR_keyword, "/dev/st49", 9) == 0)
d4382 1
a4382 1
return dev_storage + 673;
d4394 1
a4394 1
              if (strncmp (KR_keyword, "/dev/st39", 9) == 0)
d4397 1
a4397 1
return dev_storage + 663;
d4409 1
a4409 1
              if (strncmp (KR_keyword, "/dev/st29", 9) == 0)
d4412 1
a4412 1
return dev_storage + 653;
d4424 1
a4424 1
              if (strncmp (KR_keyword, "/dev/st19", 9) == 0)
d4427 1
a4427 1
return dev_storage + 643;
d4444 2
a4445 2
        case '8':
          switch (KR_keyword [7])
d4447 17
a4463 2
            case 'z':
              if (strncmp (KR_keyword, "/dev/sdz8", 9) == 0)
d4466 1
a4466 1
return dev_storage + 600;
d4477 2
a4478 2
            case 'y':
              switch (KR_keyword [5])
a4479 3
                case 't':
                  if (strncmp (KR_keyword, "/dev/tty8", 9) == 0)
                    {
d4481 1
a4481 1
return dev_storage + 761;
d4484 3
a4486 3
                    }
                  else
                    {
d4491 4
a4494 4
                    }
                case 's':
                  if (strncmp (KR_keyword, "/dev/sdy8", 9) == 0)
                    {
d4496 1
a4496 1
return dev_storage + 585;
d4499 3
a4501 3
                    }
                  else
                    {
d4506 11
a4516 2
                    }
                default:
d4522 2
a4523 2
            case 'x':
              if (strncmp (KR_keyword, "/dev/sdx8", 9) == 0)
d4526 1
a4526 1
return dev_storage + 570;
d4537 2
a4538 2
            case 'w':
              if (strncmp (KR_keyword, "/dev/sdw8", 9) == 0)
d4541 1
a4541 1
return dev_storage + 555;
d4552 2
a4553 2
            case 'v':
              if (strncmp (KR_keyword, "/dev/sdv8", 9) == 0)
d4556 1
a4556 1
return dev_storage + 540;
d4567 2
a4568 2
            case 'u':
              if (strncmp (KR_keyword, "/dev/sdu8", 9) == 0)
d4571 1
a4571 1
return dev_storage + 525;
d4582 11
a4592 2
            case 't':
              switch (KR_keyword [5])
a4593 3
                case 's':
                  if (strncmp (KR_keyword, "/dev/sdt8", 9) == 0)
                    {
d4595 1
a4595 1
return dev_storage + 510;
d4598 3
a4600 3
                    }
                  else
                    {
d4605 4
a4608 4
                    }
                case 'n':
                  if (strncmp (KR_keyword, "/dev/nst8", 9) == 0)
                    {
d4610 1
a4610 1
return dev_storage + 51;
d4613 3
a4615 3
                    }
                  else
                    {
d4620 11
a4630 2
                    }
                default:
d4636 2
a4637 2
            case 's':
              if (strncmp (KR_keyword, "/dev/sds8", 9) == 0)
d4640 1
a4640 1
return dev_storage + 495;
d4651 2
a4652 2
            case 'r':
              if (strncmp (KR_keyword, "/dev/sdr8", 9) == 0)
d4655 1
a4655 1
return dev_storage + 480;
d4666 2
a4667 2
            case 'q':
              if (strncmp (KR_keyword, "/dev/sdq8", 9) == 0)
d4670 1
a4670 1
return dev_storage + 465;
d4681 2
a4682 2
            case 'p':
              if (strncmp (KR_keyword, "/dev/sdp8", 9) == 0)
d4685 1
a4685 1
return dev_storage + 450;
d4696 2
a4697 2
            case 'o':
              if (strncmp (KR_keyword, "/dev/sdo8", 9) == 0)
d4700 1
a4700 1
return dev_storage + 435;
d4711 2
a4712 2
            case 'n':
              if (strncmp (KR_keyword, "/dev/sdn8", 9) == 0)
d4715 1
a4715 1
return dev_storage + 420;
d4726 10
a4735 1
            case 'm':
d4739 1
a4739 1
                  if (strncmp (KR_keyword, "/dev/sdm8", 9) == 0)
d4742 1
a4742 1
return dev_storage + 405;
d4753 2
a4754 2
                case 'c':
                  if (strncmp (KR_keyword, "/dev/com8", 9) == 0)
d4757 1
a4757 1
return dev_storage + 9;
d4774 2
a4775 2
            case 'l':
              if (strncmp (KR_keyword, "/dev/sdl8", 9) == 0)
d4777 3
d4781 1
a4781 1
return dev_storage + 390;
d4784 3
a4786 3
                }
              else
                {
d4791 4
a4794 4
                }
            case 'k':
              if (strncmp (KR_keyword, "/dev/sdk8", 9) == 0)
                {
d4796 1
a4796 1
return dev_storage + 375;
d4799 9
a4807 3
                }
              else
                {
d4813 2
a4814 2
            case 'j':
              if (strncmp (KR_keyword, "/dev/sdj8", 9) == 0)
d4816 3
d4820 1
a4820 1
return dev_storage + 360;
d4823 3
a4825 3
                }
              else
                {
d4830 11
a4840 4
                }
            case 'i':
              if (strncmp (KR_keyword, "/dev/sdi8", 9) == 0)
                {
d4842 1
a4842 1
return dev_storage + 345;
d4845 2
a4846 3
                }
              else
                {
d4852 2
a4853 2
            case 'h':
              if (strncmp (KR_keyword, "/dev/sdh8", 9) == 0)
d4855 3
d4859 1
a4859 1
return dev_storage + 330;
d4862 3
a4864 3
                }
              else
                {
d4869 11
a4879 4
                }
            case 'g':
              if (strncmp (KR_keyword, "/dev/sdg8", 9) == 0)
                {
d4881 1
a4881 1
return dev_storage + 315;
d4884 2
a4885 3
                }
              else
                {
d4891 2
a4892 2
            case 'f':
              if (strncmp (KR_keyword, "/dev/sdf8", 9) == 0)
d4894 3
d4898 1
a4898 1
return dev_storage + 300;
d4901 3
a4903 3
                }
              else
                {
d4908 11
a4918 4
                }
            case 'e':
              if (strncmp (KR_keyword, "/dev/sde8", 9) == 0)
                {
d4920 1
a4920 1
return dev_storage + 285;
d4923 2
a4924 3
                }
              else
                {
d4930 2
a4931 2
            case 'd':
              switch (KR_keyword [6])
d4933 2
a4934 2
                case 'd':
                  if (strncmp (KR_keyword, "/dev/sdd8", 9) == 0)
d4937 1
a4937 1
return dev_storage + 270;
d4948 2
a4949 2
                case 'c':
                  if (strncmp (KR_keyword, "/dev/scd8", 9) == 0)
d4952 1
a4952 1
return dev_storage + 184;
d4969 2
a4970 2
            case 'c':
              if (strncmp (KR_keyword, "/dev/sdc8", 9) == 0)
d4972 3
d4976 1
a4976 1
return dev_storage + 255;
d4979 3
a4981 3
                }
              else
                {
d4986 11
a4996 4
                }
            case 'b':
              if (strncmp (KR_keyword, "/dev/sdb8", 9) == 0)
                {
d4998 1
a4998 1
return dev_storage + 240;
d5001 2
a5002 3
                }
              else
                {
d5008 2
a5009 2
            case 'a':
              if (strncmp (KR_keyword, "/dev/sda8", 9) == 0)
d5011 3
d5015 1
a5015 1
return dev_storage + 225;
d5018 3
a5020 3
                }
              else
                {
d5025 11
a5035 4
                }
            case '9':
              if (strncmp (KR_keyword, "/dev/st98", 9) == 0)
                {
d5037 1
a5037 1
return dev_storage + 722;
d5040 2
a5041 3
                }
              else
                {
d5047 2
a5048 2
            case '8':
              if (strncmp (KR_keyword, "/dev/st88", 9) == 0)
d5050 3
d5054 1
a5054 1
return dev_storage + 712;
d5057 3
a5059 3
                }
              else
                {
d5064 11
a5074 4
                }
            case '7':
              if (strncmp (KR_keyword, "/dev/st78", 9) == 0)
                {
d5076 1
a5076 1
return dev_storage + 702;
d5079 2
a5080 3
                }
              else
                {
d5086 2
a5087 2
            case '6':
              if (strncmp (KR_keyword, "/dev/st68", 9) == 0)
d5090 1
a5090 1
return dev_storage + 692;
d5101 1
a5101 3
            case '5':
              if (strncmp (KR_keyword, "/dev/st58", 9) == 0)
                {
d5103 12
a5114 1
return dev_storage + 682;
d5125 2
a5126 2
            case '4':
              if (strncmp (KR_keyword, "/dev/st48", 9) == 0)
d5129 1
a5129 1
return dev_storage + 672;
d5140 2
a5141 2
            case '3':
              if (strncmp (KR_keyword, "/dev/st38", 9) == 0)
d5144 1
a5144 1
return dev_storage + 662;
d5155 2
a5156 2
            case '2':
              if (strncmp (KR_keyword, "/dev/st28", 9) == 0)
d5159 1
a5159 1
return dev_storage + 652;
d5170 2
a5171 2
            case '1':
              if (strncmp (KR_keyword, "/dev/st18", 9) == 0)
d5174 1
a5174 1
return dev_storage + 642;
d5185 2
a5186 11
            default:
{
return	NULL;

}
            }
        case '7':
          switch (KR_keyword [7])
            {
            case 'z':
              if (strncmp (KR_keyword, "/dev/sdz7", 9) == 0)
d5189 1
a5189 1
return dev_storage + 599;
d5200 2
a5201 2
            case 'y':
              switch (KR_keyword [5])
a5202 3
                case 't':
                  if (strncmp (KR_keyword, "/dev/tty7", 9) == 0)
                    {
d5204 1
a5204 1
return dev_storage + 760;
d5207 3
a5209 3
                    }
                  else
                    {
d5214 4
a5217 4
                    }
                case 's':
                  if (strncmp (KR_keyword, "/dev/sdy7", 9) == 0)
                    {
d5219 1
a5219 1
return dev_storage + 584;
d5222 3
a5224 9
                    }
                  else
                    {
{
return	NULL;

}
                    }
                default:
d5230 2
a5231 2
            case 'x':
              if (strncmp (KR_keyword, "/dev/sdx7", 9) == 0)
d5234 1
a5234 1
return dev_storage + 569;
d5245 2
a5246 2
            case 'w':
              if (strncmp (KR_keyword, "/dev/sdw7", 9) == 0)
d5249 1
a5249 1
return dev_storage + 554;
d5260 11
a5270 2
            case 'v':
              if (strncmp (KR_keyword, "/dev/sdv7", 9) == 0)
d5273 1
a5273 1
return dev_storage + 539;
d5284 2
a5285 2
            case 'u':
              if (strncmp (KR_keyword, "/dev/sdu7", 9) == 0)
d5288 1
a5288 1
return dev_storage + 524;
d5299 2
a5300 2
            case 't':
              switch (KR_keyword [5])
a5301 3
                case 's':
                  if (strncmp (KR_keyword, "/dev/sdt7", 9) == 0)
                    {
d5303 1
a5303 1
return dev_storage + 509;
d5306 3
a5308 3
                    }
                  else
                    {
d5313 4
a5316 4
                    }
                case 'n':
                  if (strncmp (KR_keyword, "/dev/nst7", 9) == 0)
                    {
d5318 1
a5318 1
return dev_storage + 50;
d5321 3
a5323 9
                    }
                  else
                    {
{
return	NULL;

}
                    }
                default:
d5329 2
a5330 2
            case 's':
              if (strncmp (KR_keyword, "/dev/sds7", 9) == 0)
d5333 1
a5333 1
return dev_storage + 494;
d5344 2
a5345 2
            case 'r':
              if (strncmp (KR_keyword, "/dev/sdr7", 9) == 0)
d5348 1
a5348 1
return dev_storage + 479;
d5359 2
a5360 2
            case 'q':
              if (strncmp (KR_keyword, "/dev/sdq7", 9) == 0)
d5363 1
a5363 1
return dev_storage + 464;
d5374 2
a5375 2
            case 'p':
              if (strncmp (KR_keyword, "/dev/sdp7", 9) == 0)
d5378 1
a5378 1
return dev_storage + 449;
d5389 2
a5390 2
            case 'o':
              if (strncmp (KR_keyword, "/dev/sdo7", 9) == 0)
d5393 1
a5393 1
return dev_storage + 434;
d5404 2
a5405 2
            case 'n':
              if (strncmp (KR_keyword, "/dev/sdn7", 9) == 0)
d5408 1
a5408 1
return dev_storage + 419;
d5419 2
a5420 2
            case 'm':
              switch (KR_keyword [5])
a5421 3
                case 's':
                  if (strncmp (KR_keyword, "/dev/sdm7", 9) == 0)
                    {
d5423 1
a5423 1
return dev_storage + 404;
d5426 3
a5428 3
                    }
                  else
                    {
d5433 2
a5434 4
                    }
                case 'c':
                  if (strncmp (KR_keyword, "/dev/com7", 9) == 0)
                    {
d5436 1
a5436 1
return dev_storage + 8;
d5439 7
a5445 3
                    }
                  else
                    {
d5447 1
a5447 1
return	NULL;
d5450 3
a5452 2
                    }
                default:
d5458 2
a5459 2
            case 'l':
              if (strncmp (KR_keyword, "/dev/sdl7", 9) == 0)
d5462 1
a5462 1
return dev_storage + 389;
d5473 2
a5474 2
            case 'k':
              if (strncmp (KR_keyword, "/dev/sdk7", 9) == 0)
d5477 1
a5477 1
return dev_storage + 374;
d5488 2
a5489 2
            case 'j':
              if (strncmp (KR_keyword, "/dev/sdj7", 9) == 0)
d5492 1
a5492 1
return dev_storage + 359;
d5503 2
a5504 2
            case 'i':
              if (strncmp (KR_keyword, "/dev/sdi7", 9) == 0)
d5507 1
a5507 1
return dev_storage + 344;
d5518 2
a5519 2
            case 'h':
              if (strncmp (KR_keyword, "/dev/sdh7", 9) == 0)
d5522 1
a5522 1
return dev_storage + 329;
d5533 2
a5534 2
            case 'g':
              if (strncmp (KR_keyword, "/dev/sdg7", 9) == 0)
d5537 1
a5537 1
return dev_storage + 314;
d5548 2
a5549 2
            case 'f':
              if (strncmp (KR_keyword, "/dev/sdf7", 9) == 0)
d5552 1
a5552 1
return dev_storage + 299;
d5563 2
a5564 2
            case 'e':
              if (strncmp (KR_keyword, "/dev/sde7", 9) == 0)
d5567 1
a5567 1
return dev_storage + 284;
d5578 11
a5588 2
            case 'd':
              switch (KR_keyword [6])
a5589 3
                case 'd':
                  if (strncmp (KR_keyword, "/dev/sdd7", 9) == 0)
                    {
d5591 1
a5591 1
return dev_storage + 269;
d5594 3
a5596 3
                    }
                  else
                    {
d5601 4
a5604 4
                    }
                case 'c':
                  if (strncmp (KR_keyword, "/dev/scd7", 9) == 0)
                    {
d5606 1
a5606 1
return dev_storage + 183;
d5609 3
a5611 3
                    }
                  else
                    {
d5616 11
a5626 2
                    }
                default:
d5632 2
a5633 2
            case 'c':
              if (strncmp (KR_keyword, "/dev/sdc7", 9) == 0)
d5636 1
a5636 1
return dev_storage + 254;
d5647 2
a5648 2
            case 'b':
              if (strncmp (KR_keyword, "/dev/sdb7", 9) == 0)
d5651 1
a5651 1
return dev_storage + 239;
d5662 2
a5663 2
            case 'a':
              if (strncmp (KR_keyword, "/dev/sda7", 9) == 0)
d5666 1
a5666 1
return dev_storage + 224;
d5677 2
a5678 2
            case '9':
              if (strncmp (KR_keyword, "/dev/st97", 9) == 0)
d5681 1
a5681 1
return dev_storage + 721;
d5692 2
a5693 2
            case '8':
              if (strncmp (KR_keyword, "/dev/st87", 9) == 0)
d5696 1
a5696 1
return dev_storage + 711;
d5707 2
a5708 2
            case '7':
              if (strncmp (KR_keyword, "/dev/st77", 9) == 0)
d5711 1
a5711 1
return dev_storage + 701;
d5722 2
a5723 2
            case '6':
              if (strncmp (KR_keyword, "/dev/st67", 9) == 0)
d5726 1
a5726 1
return dev_storage + 691;
d5737 11
a5747 2
            case '5':
              if (strncmp (KR_keyword, "/dev/st57", 9) == 0)
d5750 1
a5750 1
return dev_storage + 681;
d5761 2
a5762 2
            case '4':
              if (strncmp (KR_keyword, "/dev/st47", 9) == 0)
d5765 1
a5765 1
return dev_storage + 671;
d5776 2
a5777 2
            case '3':
              if (strncmp (KR_keyword, "/dev/st37", 9) == 0)
d5780 1
a5780 1
return dev_storage + 661;
d5791 2
a5792 2
            case '2':
              if (strncmp (KR_keyword, "/dev/st27", 9) == 0)
d5795 1
a5795 1
return dev_storage + 651;
d5806 2
a5807 2
            case '1':
              if (strncmp (KR_keyword, "/dev/st17", 9) == 0)
d5810 1
a5810 1
return dev_storage + 641;
d5821 10
a5830 1
            default:
d5835 3
a5837 6
            }
        case '6':
          switch (KR_keyword [7])
            {
            case 'z':
              if (strncmp (KR_keyword, "/dev/sdz6", 9) == 0)
d5840 1
a5840 1
return dev_storage + 598;
d5851 2
a5852 2
            case 'y':
              switch (KR_keyword [5])
a5853 3
                case 't':
                  if (strncmp (KR_keyword, "/dev/tty6", 9) == 0)
                    {
d5855 1
a5855 1
return dev_storage + 759;
d5858 3
a5860 3
                    }
                  else
                    {
d5865 4
a5868 4
                    }
                case 's':
                  if (strncmp (KR_keyword, "/dev/sdy6", 9) == 0)
                    {
d5870 1
a5870 1
return dev_storage + 583;
d5873 3
a5875 3
                    }
                  else
                    {
d5880 2
a5881 2
                    }
                default:
d5886 6
a5891 3
                }
            case 'x':
              if (strncmp (KR_keyword, "/dev/sdx6", 9) == 0)
d5894 1
a5894 1
return dev_storage + 568;
d5905 2
a5906 2
            case 'w':
              if (strncmp (KR_keyword, "/dev/sdw6", 9) == 0)
d5909 1
a5909 1
return dev_storage + 553;
d5920 2
a5921 2
            case 'v':
              if (strncmp (KR_keyword, "/dev/sdv6", 9) == 0)
d5924 1
a5924 1
return dev_storage + 538;
d5935 2
a5936 2
            case 'u':
              if (strncmp (KR_keyword, "/dev/sdu6", 9) == 0)
d5939 1
a5939 1
return dev_storage + 523;
d5950 2
a5951 2
            case 't':
              switch (KR_keyword [5])
a5952 3
                case 's':
                  if (strncmp (KR_keyword, "/dev/sdt6", 9) == 0)
                    {
d5954 1
a5954 1
return dev_storage + 508;
d5957 4
a5960 4
                    }
                  else
                    {
{
d5964 4
a5967 4
                    }
                case 'n':
                  if (strncmp (KR_keyword, "/dev/nst6", 9) == 0)
                    {
d5969 1
a5969 1
return dev_storage + 49;
d5972 3
a5974 9
                    }
                  else
                    {
{
return	NULL;

}
                    }
                default:
d5980 2
a5981 2
            case 's':
              if (strncmp (KR_keyword, "/dev/sds6", 9) == 0)
d5984 1
a5984 1
return dev_storage + 493;
d5995 2
a5996 2
            case 'r':
              if (strncmp (KR_keyword, "/dev/sdr6", 9) == 0)
d5999 1
a5999 1
return dev_storage + 478;
d6010 2
a6011 2
            case 'q':
              if (strncmp (KR_keyword, "/dev/sdq6", 9) == 0)
d6014 1
a6014 1
return dev_storage + 463;
d6025 11
a6035 2
            case 'p':
              if (strncmp (KR_keyword, "/dev/sdp6", 9) == 0)
d6037 3
d6041 1
a6041 1
return dev_storage + 448;
d6044 3
a6046 3
                }
              else
                {
d6051 4
a6054 4
                }
            case 'o':
              if (strncmp (KR_keyword, "/dev/sdo6", 9) == 0)
                {
d6056 1
a6056 1
return dev_storage + 433;
d6059 3
a6061 3
                }
              else
                {
d6066 4
a6069 4
                }
            case 'n':
              if (strncmp (KR_keyword, "/dev/sdn6", 9) == 0)
                {
d6071 1
a6071 1
return dev_storage + 418;
d6074 3
a6076 3
                }
              else
                {
d6081 2
a6082 5
                }
            case 'm':
              switch (KR_keyword [5])
                {
                case 's':
d6097 2
a6098 2
                case 'c':
                  if (strncmp (KR_keyword, "/dev/com6", 9) == 0)
d6101 1
a6101 1
return dev_storage + 7;
d6112 10
a6121 1
                default:
d6126 4
a6129 4
                }
            case 'l':
              if (strncmp (KR_keyword, "/dev/sdl6", 9) == 0)
                {
d6131 1
a6131 1
return dev_storage + 388;
d6134 3
a6136 3
                }
              else
                {
d6141 4
a6144 4
                }
            case 'k':
              if (strncmp (KR_keyword, "/dev/sdk6", 9) == 0)
                {
d6146 1
a6146 1
return dev_storage + 373;
d6149 3
a6151 3
                }
              else
                {
d6156 4
a6159 4
                }
            case 'j':
              if (strncmp (KR_keyword, "/dev/sdj6", 9) == 0)
                {
d6161 1
a6161 1
return dev_storage + 358;
d6164 3
a6166 3
                }
              else
                {
d6171 2
a6172 11
                }
            case 'i':
              if (strncmp (KR_keyword, "/dev/sdi6", 9) == 0)
                {
{
return dev_storage + 343;

}
                }
              else
                {
d6178 2
a6179 2
            case 'h':
              if (strncmp (KR_keyword, "/dev/sdh6", 9) == 0)
d6182 1
a6182 1
return dev_storage + 328;
d6193 2
a6194 2
            case 'g':
              if (strncmp (KR_keyword, "/dev/sdg6", 9) == 0)
d6196 3
d6200 1
a6200 1
return dev_storage + 313;
d6203 3
a6205 3
                }
              else
                {
d6210 4
a6213 4
                }
            case 'f':
              if (strncmp (KR_keyword, "/dev/sdf6", 9) == 0)
                {
d6215 1
a6215 1
return dev_storage + 298;
d6218 3
a6220 3
                }
              else
                {
d6225 4
a6228 4
                }
            case 'e':
              if (strncmp (KR_keyword, "/dev/sde6", 9) == 0)
                {
d6230 1
a6230 1
return dev_storage + 283;
d6233 3
a6235 3
                }
              else
                {
d6240 3
a6242 6
                }
            case 'd':
              switch (KR_keyword [6])
                {
                case 'd':
                  if (strncmp (KR_keyword, "/dev/sdd6", 9) == 0)
d6245 1
a6245 1
return dev_storage + 268;
d6256 2
a6257 2
                case 'c':
                  if (strncmp (KR_keyword, "/dev/scd6", 9) == 0)
d6260 1
a6260 1
return dev_storage + 182;
d6271 55
a6325 1
                default:
d6330 2
a6331 4
                }
            case 'c':
              if (strncmp (KR_keyword, "/dev/sdc6", 9) == 0)
                {
d6333 1
a6333 1
return dev_storage + 253;
d6337 1
a6337 2
              else
                {
d6342 6
a6347 3
                }
            case 'b':
              if (strncmp (KR_keyword, "/dev/sdb6", 9) == 0)
d6349 3
d6353 1
a6353 1
return dev_storage + 238;
d6356 3
a6358 3
                }
              else
                {
d6363 11
a6373 4
                }
            case 'a':
              if (strncmp (KR_keyword, "/dev/sda6", 9) == 0)
                {
d6375 1
a6375 1
return dev_storage + 223;
d6378 2
a6379 3
                }
              else
                {
d6386 1
a6386 1
              if (strncmp (KR_keyword, "/dev/st96", 9) == 0)
d6389 1
a6389 1
return dev_storage + 720;
d6401 1
a6401 1
              if (strncmp (KR_keyword, "/dev/st86", 9) == 0)
d6404 1
a6404 1
return dev_storage + 710;
d6416 1
a6416 1
              if (strncmp (KR_keyword, "/dev/st76", 9) == 0)
d6419 1
a6419 1
return dev_storage + 700;
d6431 1
a6431 1
              if (strncmp (KR_keyword, "/dev/st66", 9) == 0)
d6434 1
a6434 1
return dev_storage + 690;
d6446 1
a6446 1
              if (strncmp (KR_keyword, "/dev/st56", 9) == 0)
d6449 1
a6449 1
return dev_storage + 680;
d6461 1
a6461 1
              if (strncmp (KR_keyword, "/dev/st46", 9) == 0)
d6464 1
a6464 1
return dev_storage + 670;
d6476 1
a6476 1
              if (strncmp (KR_keyword, "/dev/st36", 9) == 0)
d6479 1
a6479 1
return dev_storage + 660;
d6491 1
a6491 1
              if (strncmp (KR_keyword, "/dev/st26", 9) == 0)
d6494 1
a6494 1
return dev_storage + 650;
d6506 1
a6506 1
              if (strncmp (KR_keyword, "/dev/st16", 9) == 0)
d6509 1
a6509 1
return dev_storage + 640;
d6526 2
a6527 2
        case '5':
          switch (KR_keyword [7])
d6529 2
a6530 2
            case 'z':
              if (strncmp (KR_keyword, "/dev/sdz5", 9) == 0)
d6533 1
a6533 1
return dev_storage + 597;
d6544 2
a6545 2
            case 'y':
              switch (KR_keyword [5])
a6546 3
                case 't':
                  if (strncmp (KR_keyword, "/dev/tty5", 9) == 0)
                    {
d6548 1
a6548 1
return dev_storage + 758;
d6551 3
a6553 3
                    }
                  else
                    {
d6558 4
a6561 4
                    }
                case 's':
                  if (strncmp (KR_keyword, "/dev/sdy5", 9) == 0)
                    {
d6563 1
a6563 1
return dev_storage + 582;
d6566 3
a6568 9
                    }
                  else
                    {
{
return	NULL;

}
                    }
                default:
d6574 2
a6575 2
            case 'x':
              if (strncmp (KR_keyword, "/dev/sdx5", 9) == 0)
d6578 1
a6578 1
return dev_storage + 567;
d6589 2
a6590 2
            case 'w':
              if (strncmp (KR_keyword, "/dev/sdw5", 9) == 0)
d6593 1
a6593 1
return dev_storage + 552;
d6604 2
a6605 2
            case 'v':
              if (strncmp (KR_keyword, "/dev/sdv5", 9) == 0)
d6608 1
a6608 1
return dev_storage + 537;
d6619 2
a6620 2
            case 'u':
              if (strncmp (KR_keyword, "/dev/sdu5", 9) == 0)
d6623 1
a6623 1
return dev_storage + 522;
d6634 2
a6635 2
            case 't':
              switch (KR_keyword [5])
a6636 3
                case 's':
                  if (strncmp (KR_keyword, "/dev/sdt5", 9) == 0)
                    {
d6638 1
a6638 1
return dev_storage + 507;
d6641 3
a6643 3
                    }
                  else
                    {
d6648 4
a6651 4
                    }
                case 'n':
                  if (strncmp (KR_keyword, "/dev/nst5", 9) == 0)
                    {
d6653 1
a6653 1
return dev_storage + 48;
d6656 3
a6658 3
                    }
                  else
                    {
d6663 2
a6664 2
                    }
                default:
d6669 6
a6674 3
                }
            case 's':
              if (strncmp (KR_keyword, "/dev/sds5", 9) == 0)
d6677 1
a6677 1
return dev_storage + 492;
d6688 2
a6689 2
            case 'r':
              if (strncmp (KR_keyword, "/dev/sdr5", 9) == 0)
d6692 1
a6692 1
return dev_storage + 477;
d6703 2
a6704 2
            case 'q':
              if (strncmp (KR_keyword, "/dev/sdq5", 9) == 0)
d6707 1
a6707 1
return dev_storage + 462;
d6718 2
a6719 2
            case 'p':
              if (strncmp (KR_keyword, "/dev/sdp5", 9) == 0)
d6722 1
a6722 1
return dev_storage + 447;
d6733 2
a6734 2
            case 'o':
              if (strncmp (KR_keyword, "/dev/sdo5", 9) == 0)
d6737 1
a6737 1
return dev_storage + 432;
d6748 2
a6749 2
            case 'n':
              if (strncmp (KR_keyword, "/dev/sdn5", 9) == 0)
d6752 1
a6752 1
return dev_storage + 417;
d6763 2
a6764 2
            case 'm':
              switch (KR_keyword [5])
a6765 3
                case 's':
                  if (strncmp (KR_keyword, "/dev/sdm5", 9) == 0)
                    {
d6767 1
a6767 1
return dev_storage + 402;
d6770 3
a6772 3
                    }
                  else
                    {
d6777 4
a6780 4
                    }
                case 'c':
                  if (strncmp (KR_keyword, "/dev/com5", 9) == 0)
                    {
d6782 1
a6782 1
return dev_storage + 6;
d6785 3
a6787 3
                    }
                  else
                    {
d6792 11
a6802 2
                    }
                default:
d6808 11
a6818 2
            case 'l':
              if (strncmp (KR_keyword, "/dev/sdl5", 9) == 0)
d6821 1
a6821 1
return dev_storage + 387;
d6832 2
a6833 2
            case 'k':
              if (strncmp (KR_keyword, "/dev/sdk5", 9) == 0)
d6836 1
a6836 1
return dev_storage + 372;
d6847 2
a6848 2
            case 'j':
              if (strncmp (KR_keyword, "/dev/sdj5", 9) == 0)
d6851 1
a6851 1
return dev_storage + 357;
d6862 2
a6863 2
            case 'i':
              if (strncmp (KR_keyword, "/dev/sdi5", 9) == 0)
d6866 1
a6866 1
return dev_storage + 342;
d6877 2
a6878 2
            case 'h':
              if (strncmp (KR_keyword, "/dev/sdh5", 9) == 0)
d6881 1
a6881 1
return dev_storage + 327;
d6892 2
a6893 2
            case 'g':
              if (strncmp (KR_keyword, "/dev/sdg5", 9) == 0)
d6896 1
a6896 1
return dev_storage + 312;
d6907 2
a6908 2
            case 'f':
              if (strncmp (KR_keyword, "/dev/sdf5", 9) == 0)
d6911 1
a6911 1
return dev_storage + 297;
d6922 2
a6923 2
            case 'e':
              if (strncmp (KR_keyword, "/dev/sde5", 9) == 0)
d6926 1
a6926 1
return dev_storage + 282;
d6937 2
a6938 2
            case 'd':
              switch (KR_keyword [6])
a6939 3
                case 'd':
                  if (strncmp (KR_keyword, "/dev/sdd5", 9) == 0)
                    {
d6941 1
a6941 1
return dev_storage + 267;
d6944 3
a6946 3
                    }
                  else
                    {
d6951 2
a6952 4
                    }
                case 'c':
                  if (strncmp (KR_keyword, "/dev/scd5", 9) == 0)
                    {
d6954 1
a6954 1
return dev_storage + 181;
d6957 7
a6963 3
                    }
                  else
                    {
d6965 1
a6965 1
return	NULL;
d6968 3
a6970 2
                    }
                default:
d6976 2
a6977 2
            case 'c':
              if (strncmp (KR_keyword, "/dev/sdc5", 9) == 0)
d6980 1
a6980 1
return dev_storage + 252;
d6991 2
a6992 2
            case 'b':
              if (strncmp (KR_keyword, "/dev/sdb5", 9) == 0)
d6995 1
a6995 1
return dev_storage + 237;
d7006 2
a7007 2
            case 'a':
              if (strncmp (KR_keyword, "/dev/sda5", 9) == 0)
d7010 1
a7010 1
return dev_storage + 222;
d7021 2
a7022 2
            case '9':
              if (strncmp (KR_keyword, "/dev/st95", 9) == 0)
d7025 1
a7025 1
return dev_storage + 719;
d7036 2
a7037 2
            case '8':
              if (strncmp (KR_keyword, "/dev/st85", 9) == 0)
d7040 1
a7040 1
return dev_storage + 709;
d7051 2
a7052 2
            case '7':
              if (strncmp (KR_keyword, "/dev/st75", 9) == 0)
d7055 1
a7055 1
return dev_storage + 699;
d7066 2
a7067 2
            case '6':
              if (strncmp (KR_keyword, "/dev/st65", 9) == 0)
d7070 1
a7070 1
return dev_storage + 689;
d7081 2
a7082 2
            case '5':
              if (strncmp (KR_keyword, "/dev/st55", 9) == 0)
d7085 1
a7085 1
return dev_storage + 679;
d7096 11
a7106 2
            case '4':
              if (strncmp (KR_keyword, "/dev/st45", 9) == 0)
d7109 1
a7109 1
return dev_storage + 669;
d7120 2
a7121 2
            case '3':
              if (strncmp (KR_keyword, "/dev/st35", 9) == 0)
d7124 1
a7124 1
return dev_storage + 659;
d7135 2
a7136 2
            case '2':
              if (strncmp (KR_keyword, "/dev/st25", 9) == 0)
d7139 1
a7139 1
return dev_storage + 649;
d7150 2
a7151 2
            case '1':
              switch (KR_keyword [6])
a7152 3
                case 't':
                  if (strncmp (KR_keyword, "/dev/st15", 9) == 0)
                    {
d7154 1
a7154 1
return dev_storage + 639;
d7157 3
a7159 3
                    }
                  else
                    {
d7164 4
a7167 4
                    }
                case 'r':
                  if (strncmp (KR_keyword, "/dev/sr15", 9) == 0)
                    {
d7169 1
a7169 1
return dev_storage + 623;
d7172 3
a7174 3
                    }
                  else
                    {
d7179 4
a7182 4
                    }
                case 'd':
                  if (strncmp (KR_keyword, "/dev/fd15", 9) == 0)
                    {
d7184 1
a7184 1
return dev_storage + 37;
d7187 3
a7189 3
                    }
                  else
                    {
d7194 4
a7197 2
                    }
                default:
d7199 1
a7199 1
return	NULL;
d7203 2
a7204 1
            default:
d7209 3
a7211 6
            }
        case '4':
          switch (KR_keyword [7])
            {
            case 'z':
              if (strncmp (KR_keyword, "/dev/sdz4", 9) == 0)
d7214 1
a7214 1
return dev_storage + 596;
d7225 2
a7226 2
            case 'y':
              switch (KR_keyword [5])
a7227 3
                case 't':
                  if (strncmp (KR_keyword, "/dev/tty4", 9) == 0)
                    {
d7229 1
a7229 1
return dev_storage + 757;
d7232 3
a7234 3
                    }
                  else
                    {
d7239 2
a7240 4
                    }
                case 's':
                  if (strncmp (KR_keyword, "/dev/sdy4", 9) == 0)
                    {
d7242 1
a7242 1
return dev_storage + 581;
d7245 7
a7251 3
                    }
                  else
                    {
d7253 1
a7253 1
return	NULL;
d7256 3
a7258 2
                    }
                default:
d7264 2
a7265 2
            case 'x':
              if (strncmp (KR_keyword, "/dev/sdx4", 9) == 0)
d7268 1
a7268 1
return dev_storage + 566;
d7279 2
a7280 2
            case 'w':
              if (strncmp (KR_keyword, "/dev/sdw4", 9) == 0)
d7283 1
a7283 1
return dev_storage + 551;
d7294 2
a7295 2
            case 'v':
              if (strncmp (KR_keyword, "/dev/sdv4", 9) == 0)
d7298 1
a7298 1
return dev_storage + 536;
d7309 2
a7310 2
            case 'u':
              if (strncmp (KR_keyword, "/dev/sdu4", 9) == 0)
d7313 1
a7313 1
return dev_storage + 521;
d7324 2
a7325 2
            case 't':
              switch (KR_keyword [5])
a7326 3
                case 's':
                  if (strncmp (KR_keyword, "/dev/sdt4", 9) == 0)
                    {
d7328 1
a7328 1
return dev_storage + 506;
d7331 3
a7333 3
                    }
                  else
                    {
d7338 4
a7341 4
                    }
                case 'n':
                  if (strncmp (KR_keyword, "/dev/nst4", 9) == 0)
                    {
d7343 1
a7343 1
return dev_storage + 47;
d7346 3
a7348 9
                    }
                  else
                    {
{
return	NULL;

}
                    }
                default:
d7354 2
a7355 2
            case 's':
              if (strncmp (KR_keyword, "/dev/sds4", 9) == 0)
d7358 1
a7358 1
return dev_storage + 491;
d7369 2
a7370 2
            case 'r':
              if (strncmp (KR_keyword, "/dev/sdr4", 9) == 0)
d7373 1
a7373 1
return dev_storage + 476;
d7384 2
a7385 2
            case 'q':
              if (strncmp (KR_keyword, "/dev/sdq4", 9) == 0)
d7388 1
a7388 1
return dev_storage + 461;
d7399 11
a7409 2
            case 'p':
              if (strncmp (KR_keyword, "/dev/sdp4", 9) == 0)
d7412 1
a7412 1
return dev_storage + 446;
d7423 2
a7424 2
            case 'o':
              if (strncmp (KR_keyword, "/dev/sdo4", 9) == 0)
d7427 1
a7427 1
return dev_storage + 431;
d7438 2
a7439 2
            case 'n':
              if (strncmp (KR_keyword, "/dev/sdn4", 9) == 0)
d7442 1
a7442 1
return dev_storage + 416;
d7453 2
a7454 2
            case 'm':
              switch (KR_keyword [5])
a7455 3
                case 's':
                  if (strncmp (KR_keyword, "/dev/sdm4", 9) == 0)
                    {
d7457 1
a7457 1
return dev_storage + 401;
d7460 3
a7462 3
                    }
                  else
                    {
d7467 4
a7470 4
                    }
                case 'c':
                  if (strncmp (KR_keyword, "/dev/com4", 9) == 0)
                    {
d7472 1
a7472 1
return dev_storage + 5;
d7475 3
a7477 9
                    }
                  else
                    {
{
return	NULL;

}
                    }
                default:
d7483 2
a7484 2
            case 'l':
              if (strncmp (KR_keyword, "/dev/sdl4", 9) == 0)
d7487 1
a7487 1
return dev_storage + 386;
d7498 2
a7499 2
            case 'k':
              if (strncmp (KR_keyword, "/dev/sdk4", 9) == 0)
d7502 1
a7502 1
return dev_storage + 371;
d7513 2
a7514 2
            case 'j':
              if (strncmp (KR_keyword, "/dev/sdj4", 9) == 0)
d7517 1
a7517 1
return dev_storage + 356;
d7528 2
a7529 2
            case 'i':
              if (strncmp (KR_keyword, "/dev/sdi4", 9) == 0)
d7532 1
a7532 1
return dev_storage + 341;
d7543 2
a7544 2
            case 'h':
              if (strncmp (KR_keyword, "/dev/sdh4", 9) == 0)
d7547 1
a7547 1
return dev_storage + 326;
d7558 11
a7568 2
            case 'g':
              if (strncmp (KR_keyword, "/dev/sdg4", 9) == 0)
d7571 1
a7571 1
return dev_storage + 311;
d7582 2
a7583 2
            case 'f':
              if (strncmp (KR_keyword, "/dev/sdf4", 9) == 0)
d7586 1
a7586 1
return dev_storage + 296;
d7597 2
a7598 2
            case 'e':
              if (strncmp (KR_keyword, "/dev/sde4", 9) == 0)
d7601 1
a7601 1
return dev_storage + 281;
d7612 2
a7613 2
            case 'd':
              switch (KR_keyword [6])
a7614 3
                case 'd':
                  if (strncmp (KR_keyword, "/dev/sdd4", 9) == 0)
                    {
d7616 1
a7616 1
return dev_storage + 266;
d7619 3
a7621 3
                    }
                  else
                    {
d7626 4
a7629 4
                    }
                case 'c':
                  if (strncmp (KR_keyword, "/dev/scd4", 9) == 0)
                    {
d7631 1
a7631 1
return dev_storage + 180;
d7634 3
a7636 9
                    }
                  else
                    {
{
return	NULL;

}
                    }
                default:
d7642 2
a7643 2
            case 'c':
              if (strncmp (KR_keyword, "/dev/sdc4", 9) == 0)
d7646 1
a7646 1
return dev_storage + 251;
d7657 2
a7658 2
            case 'b':
              if (strncmp (KR_keyword, "/dev/sdb4", 9) == 0)
d7661 1
a7661 1
return dev_storage + 236;
d7672 2
a7673 2
            case 'a':
              if (strncmp (KR_keyword, "/dev/sda4", 9) == 0)
d7676 1
a7676 1
return dev_storage + 221;
d7687 2
a7688 2
            case '9':
              if (strncmp (KR_keyword, "/dev/st94", 9) == 0)
d7691 1
a7691 1
return dev_storage + 718;
d7702 2
a7703 2
            case '8':
              if (strncmp (KR_keyword, "/dev/st84", 9) == 0)
d7706 1
a7706 1
return dev_storage + 708;
d7717 2
a7718 2
            case '7':
              if (strncmp (KR_keyword, "/dev/st74", 9) == 0)
d7721 1
a7721 1
return dev_storage + 698;
d7732 2
a7733 2
            case '6':
              if (strncmp (KR_keyword, "/dev/st64", 9) == 0)
d7736 1
a7736 1
return dev_storage + 688;
d7747 2
a7748 2
            case '5':
              if (strncmp (KR_keyword, "/dev/st54", 9) == 0)
d7751 1
a7751 1
return dev_storage + 678;
d7762 2
a7763 2
            case '4':
              if (strncmp (KR_keyword, "/dev/st44", 9) == 0)
d7766 1
a7766 1
return dev_storage + 668;
d7777 2
a7778 2
            case '3':
              if (strncmp (KR_keyword, "/dev/st34", 9) == 0)
d7781 1
a7781 1
return dev_storage + 658;
d7792 2
a7793 2
            case '2':
              if (strncmp (KR_keyword, "/dev/st24", 9) == 0)
d7796 1
a7796 1
return dev_storage + 648;
d7807 2
a7808 2
            case '1':
              switch (KR_keyword [6])
a7809 3
                case 't':
                  if (strncmp (KR_keyword, "/dev/st14", 9) == 0)
                    {
d7811 1
a7811 1
return dev_storage + 638;
d7814 3
a7816 3
                    }
                  else
                    {
d7821 4
a7824 4
                    }
                case 'r':
                  if (strncmp (KR_keyword, "/dev/sr14", 9) == 0)
                    {
d7826 1
a7826 1
return dev_storage + 622;
d7829 3
a7831 24
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'd':
                  if (strncmp (KR_keyword, "/dev/fd14", 9) == 0)
                    {
{
return dev_storage + 36;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                default:
d7837 2
a7838 11
            default:
{
return	NULL;

}
            }
        case '3':
          switch (KR_keyword [7])
            {
            case 'z':
              if (strncmp (KR_keyword, "/dev/sdz3", 9) == 0)
d7841 1
a7841 1
return dev_storage + 595;
d7852 2
a7853 2
            case 'y':
              switch (KR_keyword [5])
a7854 3
                case 't':
                  if (strncmp (KR_keyword, "/dev/tty3", 9) == 0)
                    {
d7856 1
a7856 1
return dev_storage + 756;
d7859 3
a7861 24
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 's':
                  if (strncmp (KR_keyword, "/dev/sdy3", 9) == 0)
                    {
{
return dev_storage + 580;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                default:
d7867 2
a7868 2
            case 'x':
              if (strncmp (KR_keyword, "/dev/sdx3", 9) == 0)
d7871 1
a7871 1
return dev_storage + 565;
d7882 2
a7883 2
            case 'w':
              if (strncmp (KR_keyword, "/dev/sdw3", 9) == 0)
d7886 1
a7886 1
return dev_storage + 550;
d7897 2
a7898 2
            case 'v':
              if (strncmp (KR_keyword, "/dev/sdv3", 9) == 0)
d7901 1
a7901 1
return dev_storage + 535;
d7912 2
a7913 2
            case 'u':
              if (strncmp (KR_keyword, "/dev/sdu3", 9) == 0)
d7916 1
a7916 1
return dev_storage + 520;
d7927 2
a7928 2
            case 't':
              switch (KR_keyword [5])
d7930 2
a7931 2
                case 's':
                  if (strncmp (KR_keyword, "/dev/sdt3", 9) == 0)
d7934 1
a7934 1
return dev_storage + 505;
d7945 2
a7946 2
                case 'n':
                  if (strncmp (KR_keyword, "/dev/nst3", 9) == 0)
d7949 1
a7949 1
return dev_storage + 46;
d7966 2
a7967 2
            case 's':
              if (strncmp (KR_keyword, "/dev/sds3", 9) == 0)
d7969 3
d7973 1
a7973 1
return dev_storage + 490;
d7976 11
a7986 3
                }
              else
                {
d7988 1
a7988 1
return	NULL;
d7991 3
a7993 4
                }
            case 'r':
              if (strncmp (KR_keyword, "/dev/sdr3", 9) == 0)
                {
d7995 1
a7995 1
return dev_storage + 475;
d7998 2
a7999 3
                }
              else
                {
d8005 2
a8006 2
            case 'q':
              if (strncmp (KR_keyword, "/dev/sdq3", 9) == 0)
d8008 3
d8012 1
a8012 1
return dev_storage + 460;
d8015 3
a8017 3
                }
              else
                {
d8022 11
a8032 4
                }
            case 'p':
              if (strncmp (KR_keyword, "/dev/sdp3", 9) == 0)
                {
d8034 1
a8034 1
return dev_storage + 445;
d8037 2
a8038 3
                }
              else
                {
d8044 2
a8045 2
            case 'o':
              if (strncmp (KR_keyword, "/dev/sdo3", 9) == 0)
d8047 3
d8051 1
a8051 1
return dev_storage + 430;
d8054 3
a8056 3
                }
              else
                {
d8061 11
a8071 4
                }
            case 'n':
              if (strncmp (KR_keyword, "/dev/sdn3", 9) == 0)
                {
d8073 1
a8073 1
return dev_storage + 415;
d8076 2
a8077 3
                }
              else
                {
d8083 2
a8084 2
            case 'm':
              switch (KR_keyword [5])
d8086 2
a8087 2
                case 's':
                  if (strncmp (KR_keyword, "/dev/sdm3", 9) == 0)
d8090 1
a8090 1
return dev_storage + 400;
d8102 1
a8102 1
                  if (strncmp (KR_keyword, "/dev/com3", 9) == 0)
d8105 1
a8105 1
return dev_storage + 4;
d8122 2
a8123 2
            case 'l':
              if (strncmp (KR_keyword, "/dev/sdl3", 9) == 0)
d8125 3
d8129 1
a8129 1
return dev_storage + 385;
d8132 3
a8134 3
                }
              else
                {
d8139 4
a8142 4
                }
            case 'k':
              if (strncmp (KR_keyword, "/dev/sdk3", 9) == 0)
                {
d8144 1
a8144 1
return dev_storage + 370;
d8147 3
a8149 3
                }
              else
                {
d8154 2
a8155 4
                }
            case 'j':
              if (strncmp (KR_keyword, "/dev/sdj3", 9) == 0)
                {
d8157 1
a8157 1
return dev_storage + 355;
d8161 2
a8162 1
              else
d8164 3
d8168 1
a8168 1
return	NULL;
d8171 3
a8173 4
                }
            case 'i':
              if (strncmp (KR_keyword, "/dev/sdi3", 9) == 0)
                {
d8175 1
a8175 1
return dev_storage + 340;
d8178 4
a8181 3
                }
              else
                {
d8183 1
a8183 1
return	NULL;
d8186 3
a8188 4
                }
            case 'h':
              if (strncmp (KR_keyword, "/dev/sdh3", 9) == 0)
                {
d8190 1
a8190 1
return dev_storage + 325;
d8193 2
a8194 3
                }
              else
                {
d8200 2
a8201 2
            case 'g':
              if (strncmp (KR_keyword, "/dev/sdg3", 9) == 0)
d8203 3
d8207 1
a8207 1
return dev_storage + 310;
d8210 3
a8212 3
                }
              else
                {
d8217 4
a8220 4
                }
            case 'f':
              if (strncmp (KR_keyword, "/dev/sdf3", 9) == 0)
                {
d8222 1
a8222 1
return dev_storage + 295;
d8225 3
a8227 3
                }
              else
                {
d8232 2
a8233 11
                }
            case 'e':
              if (strncmp (KR_keyword, "/dev/sde3", 9) == 0)
                {
{
return dev_storage + 280;

}
                }
              else
                {
d8239 1
a8239 1
            case 'd':
d8243 1
a8243 1
                  if (strncmp (KR_keyword, "/dev/sdd3", 9) == 0)
d8246 1
a8246 1
return dev_storage + 265;
d8258 1
a8258 1
                  if (strncmp (KR_keyword, "/dev/scd3", 9) == 0)
d8261 1
a8261 1
return dev_storage + 179;
d8278 2
a8279 2
            case 'c':
              if (strncmp (KR_keyword, "/dev/sdc3", 9) == 0)
d8282 1
a8282 1
return dev_storage + 250;
d8293 1
a8293 3
            case 'b':
              if (strncmp (KR_keyword, "/dev/sdb3", 9) == 0)
                {
d8295 12
a8306 1
return dev_storage + 235;
d8317 2
a8318 2
            case 'a':
              if (strncmp (KR_keyword, "/dev/sda3", 9) == 0)
d8321 1
a8321 1
return dev_storage + 220;
d8332 2
a8333 2
            case '9':
              if (strncmp (KR_keyword, "/dev/st93", 9) == 0)
d8336 1
a8336 1
return dev_storage + 717;
d8347 2
a8348 2
            case '8':
              if (strncmp (KR_keyword, "/dev/st83", 9) == 0)
d8351 1
a8351 1
return dev_storage + 707;
d8362 2
a8363 2
            case '7':
              if (strncmp (KR_keyword, "/dev/st73", 9) == 0)
d8366 1
a8366 1
return dev_storage + 697;
d8377 2
a8378 2
            case '6':
              if (strncmp (KR_keyword, "/dev/st63", 9) == 0)
d8381 1
a8381 1
return dev_storage + 687;
d8392 2
a8393 2
            case '5':
              if (strncmp (KR_keyword, "/dev/st53", 9) == 0)
d8396 1
a8396 1
return dev_storage + 677;
d8407 2
a8408 2
            case '4':
              if (strncmp (KR_keyword, "/dev/st43", 9) == 0)
d8411 1
a8411 1
return dev_storage + 667;
d8422 2
a8423 2
            case '3':
              if (strncmp (KR_keyword, "/dev/st33", 9) == 0)
d8426 1
a8426 1
return dev_storage + 657;
d8437 2
a8438 2
            case '2':
              if (strncmp (KR_keyword, "/dev/st23", 9) == 0)
d8441 1
a8441 1
return dev_storage + 647;
d8452 2
a8453 2
            case '1':
              switch (KR_keyword [6])
a8454 3
                case 't':
                  if (strncmp (KR_keyword, "/dev/st13", 9) == 0)
                    {
d8456 1
a8456 1
return dev_storage + 637;
d8459 3
a8461 3
                    }
                  else
                    {
d8466 4
a8469 4
                    }
                case 'r':
                  if (strncmp (KR_keyword, "/dev/sr13", 9) == 0)
                    {
d8471 1
a8471 1
return dev_storage + 621;
d8474 3
a8476 3
                    }
                  else
                    {
d8481 4
a8484 4
                    }
                case 'd':
                  if (strncmp (KR_keyword, "/dev/fd13", 9) == 0)
                    {
d8486 1
a8486 1
return dev_storage + 35;
d8489 3
a8491 3
                    }
                  else
                    {
d8496 4
a8499 2
                    }
                default:
d8501 1
a8501 1
return	NULL;
d8505 2
a8506 1
            default:
d8511 3
a8513 6
            }
        case '2':
          switch (KR_keyword [7])
            {
            case 'z':
              if (strncmp (KR_keyword, "/dev/sdz2", 9) == 0)
d8516 1
a8516 1
return dev_storage + 594;
d8527 2
a8528 2
            case 'y':
              switch (KR_keyword [5])
a8529 3
                case 't':
                  if (strncmp (KR_keyword, "/dev/tty2", 9) == 0)
                    {
d8531 1
a8531 1
return dev_storage + 755;
d8534 3
a8536 3
                    }
                  else
                    {
d8541 4
a8544 4
                    }
                case 's':
                  if (strncmp (KR_keyword, "/dev/sdy2", 9) == 0)
                    {
d8546 1
a8546 1
return dev_storage + 579;
d8549 3
a8551 3
                    }
                  else
                    {
d8556 11
a8566 2
                    }
                default:
d8572 2
a8573 2
            case 'x':
              if (strncmp (KR_keyword, "/dev/sdx2", 9) == 0)
d8576 1
a8576 1
return dev_storage + 564;
d8587 2
a8588 2
            case 'w':
              if (strncmp (KR_keyword, "/dev/sdw2", 9) == 0)
d8591 1
a8591 1
return dev_storage + 549;
d8602 2
a8603 2
            case 'v':
              if (strncmp (KR_keyword, "/dev/sdv2", 9) == 0)
d8606 1
a8606 1
return dev_storage + 534;
d8617 2
a8618 2
            case 'u':
              if (strncmp (KR_keyword, "/dev/sdu2", 9) == 0)
d8621 1
a8621 1
return dev_storage + 519;
d8632 2
a8633 2
            case 't':
              switch (KR_keyword [5])
a8634 3
                case 's':
                  if (strncmp (KR_keyword, "/dev/sdt2", 9) == 0)
                    {
d8636 1
a8636 1
return dev_storage + 504;
d8639 3
a8641 3
                    }
                  else
                    {
d8646 4
a8649 4
                    }
                case 'n':
                  if (strncmp (KR_keyword, "/dev/nst2", 9) == 0)
                    {
d8651 1
a8651 1
return dev_storage + 45;
d8654 3
a8656 9
                    }
                  else
                    {
{
return	NULL;

}
                    }
                default:
d8662 2
a8663 2
            case 's':
              if (strncmp (KR_keyword, "/dev/sds2", 9) == 0)
d8666 1
a8666 1
return dev_storage + 489;
d8677 2
a8678 2
            case 'r':
              if (strncmp (KR_keyword, "/dev/sdr2", 9) == 0)
d8681 1
a8681 1
return dev_storage + 474;
d8692 2
a8693 2
            case 'q':
              if (strncmp (KR_keyword, "/dev/sdq2", 9) == 0)
d8696 1
a8696 1
return dev_storage + 459;
d8707 2
a8708 2
            case 'p':
              if (strncmp (KR_keyword, "/dev/sdp2", 9) == 0)
d8711 1
a8711 1
return dev_storage + 444;
d8722 2
a8723 2
            case 'o':
              if (strncmp (KR_keyword, "/dev/sdo2", 9) == 0)
d8726 1
a8726 1
return dev_storage + 429;
d8737 2
a8738 2
            case 'n':
              if (strncmp (KR_keyword, "/dev/sdn2", 9) == 0)
d8741 1
a8741 1
return dev_storage + 414;
d8752 2
a8753 2
            case 'm':
              switch (KR_keyword [5])
a8754 3
                case 's':
                  if (strncmp (KR_keyword, "/dev/sdm2", 9) == 0)
                    {
d8756 1
a8756 1
return dev_storage + 399;
d8759 3
a8761 3
                    }
                  else
                    {
d8766 4
a8769 4
                    }
                case 'c':
                  if (strncmp (KR_keyword, "/dev/com2", 9) == 0)
                    {
d8771 1
a8771 1
return dev_storage + 3;
d8774 3
a8776 3
                    }
                  else
                    {
d8781 11
a8791 2
                    }
                default:
d8797 2
a8798 2
            case 'l':
              if (strncmp (KR_keyword, "/dev/sdl2", 9) == 0)
d8801 1
a8801 1
return dev_storage + 384;
d8812 2
a8813 2
            case 'k':
              if (strncmp (KR_keyword, "/dev/sdk2", 9) == 0)
d8816 1
a8816 1
return dev_storage + 369;
d8827 11
a8837 2
            case 'j':
              if (strncmp (KR_keyword, "/dev/sdj2", 9) == 0)
d8840 1
a8840 1
return dev_storage + 354;
d8851 2
a8852 2
            case 'i':
              if (strncmp (KR_keyword, "/dev/sdi2", 9) == 0)
d8855 1
a8855 1
return dev_storage + 339;
d8866 2
a8867 2
            case 'h':
              if (strncmp (KR_keyword, "/dev/sdh2", 9) == 0)
d8870 1
a8870 1
return dev_storage + 324;
d8881 2
a8882 2
            case 'g':
              if (strncmp (KR_keyword, "/dev/sdg2", 9) == 0)
d8885 1
a8885 1
return dev_storage + 309;
d8896 2
a8897 2
            case 'f':
              if (strncmp (KR_keyword, "/dev/sdf2", 9) == 0)
d8900 1
a8900 1
return dev_storage + 294;
d8911 2
a8912 2
            case 'e':
              if (strncmp (KR_keyword, "/dev/sde2", 9) == 0)
d8915 1
a8915 1
return dev_storage + 279;
d8926 2
a8927 2
            case 'd':
              switch (KR_keyword [6])
a8928 3
                case 'd':
                  if (strncmp (KR_keyword, "/dev/sdd2", 9) == 0)
                    {
d8930 1
a8930 1
return dev_storage + 264;
d8933 3
a8935 3
                    }
                  else
                    {
d8940 4
a8943 4
                    }
                case 'c':
                  if (strncmp (KR_keyword, "/dev/scd2", 9) == 0)
                    {
d8945 1
a8945 1
return dev_storage + 178;
d8948 3
a8950 9
                    }
                  else
                    {
{
return	NULL;

}
                    }
                default:
d8956 2
a8957 2
            case 'c':
              if (strncmp (KR_keyword, "/dev/sdc2", 9) == 0)
d8960 1
a8960 1
return dev_storage + 249;
d8971 2
a8972 2
            case 'b':
              if (strncmp (KR_keyword, "/dev/sdb2", 9) == 0)
d8975 1
a8975 1
return dev_storage + 234;
d8986 2
a8987 2
            case 'a':
              if (strncmp (KR_keyword, "/dev/sda2", 9) == 0)
d8990 1
a8990 1
return dev_storage + 219;
d9001 2
a9002 2
            case '9':
              if (strncmp (KR_keyword, "/dev/st92", 9) == 0)
d9005 1
a9005 1
return dev_storage + 716;
d9016 2
a9017 2
            case '8':
              if (strncmp (KR_keyword, "/dev/st82", 9) == 0)
d9020 1
a9020 1
return dev_storage + 706;
d9031 2
a9032 2
            case '7':
              if (strncmp (KR_keyword, "/dev/st72", 9) == 0)
d9035 1
a9035 1
return dev_storage + 696;
d9046 2
a9047 2
            case '6':
              if (strncmp (KR_keyword, "/dev/st62", 9) == 0)
d9050 1
a9050 1
return dev_storage + 686;
d9061 2
a9062 2
            case '5':
              if (strncmp (KR_keyword, "/dev/st52", 9) == 0)
d9065 1
a9065 1
return dev_storage + 676;
d9076 2
a9077 2
            case '4':
              if (strncmp (KR_keyword, "/dev/st42", 9) == 0)
d9080 1
a9080 1
return dev_storage + 666;
d9091 2
a9092 2
            case '3':
              if (strncmp (KR_keyword, "/dev/st32", 9) == 0)
d9095 1
a9095 1
return dev_storage + 656;
d9106 2
a9107 2
            case '2':
              if (strncmp (KR_keyword, "/dev/st22", 9) == 0)
d9110 1
a9110 1
return dev_storage + 646;
d9121 2
a9122 2
            case '1':
              switch (KR_keyword [6])
a9123 3
                case 't':
                  if (strncmp (KR_keyword, "/dev/st12", 9) == 0)
                    {
d9125 1
a9125 1
return dev_storage + 636;
d9128 3
a9130 3
                    }
                  else
                    {
d9135 4
a9138 4
                    }
                case 'r':
                  if (strncmp (KR_keyword, "/dev/sr12", 9) == 0)
                    {
d9140 1
a9140 1
return dev_storage + 620;
d9143 3
a9145 3
                    }
                  else
                    {
d9150 4
a9153 4
                    }
                case 'd':
                  if (strncmp (KR_keyword, "/dev/fd12", 9) == 0)
                    {
d9155 1
a9155 1
return dev_storage + 34;
d9158 3
a9160 3
                    }
                  else
                    {
d9165 4
a9168 2
                    }
                default:
d9170 1
a9170 1
return	NULL;
d9174 2
a9175 1
            default:
d9180 3
a9182 6
            }
        case '1':
          switch (KR_keyword [7])
            {
            case 'z':
              if (strncmp (KR_keyword, "/dev/sdz1", 9) == 0)
d9185 1
a9185 1
return dev_storage + 593;
d9196 2
a9197 2
            case 'y':
              switch (KR_keyword [5])
a9198 3
                case 't':
                  if (strncmp (KR_keyword, "/dev/tty1", 9) == 0)
                    {
d9200 1
a9200 1
return dev_storage + 754;
d9203 3
a9205 3
                    }
                  else
                    {
d9210 4
a9213 4
                    }
                case 's':
                  if (strncmp (KR_keyword, "/dev/sdy1", 9) == 0)
                    {
d9215 1
a9215 1
return dev_storage + 578;
d9218 3
a9220 9
                    }
                  else
                    {
{
return	NULL;

}
                    }
                default:
d9226 2
a9227 2
            case 'x':
              if (strncmp (KR_keyword, "/dev/sdx1", 9) == 0)
d9230 1
a9230 1
return dev_storage + 563;
d9241 2
a9242 2
            case 'w':
              if (strncmp (KR_keyword, "/dev/sdw1", 9) == 0)
d9245 1
a9245 1
return dev_storage + 548;
d9256 2
a9257 2
            case 'v':
              if (strncmp (KR_keyword, "/dev/sdv1", 9) == 0)
d9260 1
a9260 1
return dev_storage + 533;
d9271 2
a9272 2
            case 'u':
              if (strncmp (KR_keyword, "/dev/sdu1", 9) == 0)
d9275 1
a9275 1
return dev_storage + 518;
d9286 2
a9287 2
            case 't':
              switch (KR_keyword [5])
d9289 2
a9290 5
                case 's':
                  if (strncmp (KR_keyword, "/dev/sdt1", 9) == 0)
                    {
{
return dev_storage + 503;
d9293 3
a9295 3
                    }
                  else
                    {
d9300 4
a9303 4
                    }
                case 'n':
                  if (strncmp (KR_keyword, "/dev/nst1", 9) == 0)
                    {
d9305 1
a9305 1
return dev_storage + 44;
d9308 3
a9310 3
                    }
                  else
                    {
d9315 11
a9325 2
                    }
                default:
d9331 2
a9332 2
            case 's':
              if (strncmp (KR_keyword, "/dev/sds1", 9) == 0)
d9335 1
a9335 1
return dev_storage + 488;
d9346 2
a9347 2
            case 'r':
              if (strncmp (KR_keyword, "/dev/sdr1", 9) == 0)
d9350 1
a9350 1
return dev_storage + 473;
d9361 11
a9371 2
            case 'q':
              if (strncmp (KR_keyword, "/dev/sdq1", 9) == 0)
d9374 1
a9374 1
return dev_storage + 458;
d9385 2
a9386 2
            case 'p':
              if (strncmp (KR_keyword, "/dev/sdp1", 9) == 0)
d9389 1
a9389 1
return dev_storage + 443;
d9400 2
a9401 2
            case 'o':
              if (strncmp (KR_keyword, "/dev/sdo1", 9) == 0)
d9404 1
a9404 1
return dev_storage + 428;
d9415 2
a9416 2
            case 'n':
              if (strncmp (KR_keyword, "/dev/sdn1", 9) == 0)
d9419 1
a9419 1
return dev_storage + 413;
d9430 2
a9431 2
            case 'm':
              switch (KR_keyword [5])
a9432 3
                case 's':
                  if (strncmp (KR_keyword, "/dev/sdm1", 9) == 0)
                    {
d9434 1
a9434 1
return dev_storage + 398;
d9437 3
a9439 3
                    }
                  else
                    {
d9444 4
a9447 4
                    }
                case 'c':
                  if (strncmp (KR_keyword, "/dev/com1", 9) == 0)
                    {
d9449 1
a9449 1
return dev_storage + 2;
d9452 3
a9454 3
                    }
                  else
                    {
d9459 11
a9469 2
                    }
                default:
d9475 2
a9476 2
            case 'l':
              if (strncmp (KR_keyword, "/dev/sdl1", 9) == 0)
d9479 1
a9479 1
return dev_storage + 383;
d9490 2
a9491 2
            case 'k':
              if (strncmp (KR_keyword, "/dev/sdk1", 9) == 0)
d9494 1
a9494 1
return dev_storage + 368;
d9505 2
a9506 2
            case 'j':
              if (strncmp (KR_keyword, "/dev/sdj1", 9) == 0)
d9509 1
a9509 1
return dev_storage + 353;
d9520 2
a9521 2
            case 'i':
              if (strncmp (KR_keyword, "/dev/sdi1", 9) == 0)
d9524 1
a9524 1
return dev_storage + 338;
d9535 2
a9536 2
            case 'h':
              if (strncmp (KR_keyword, "/dev/sdh1", 9) == 0)
d9539 1
a9539 1
return dev_storage + 323;
d9550 2
a9551 2
            case 'g':
              if (strncmp (KR_keyword, "/dev/sdg1", 9) == 0)
d9554 1
a9554 1
return dev_storage + 308;
d9565 2
a9566 2
            case 'f':
              if (strncmp (KR_keyword, "/dev/sdf1", 9) == 0)
d9569 1
a9569 1
return dev_storage + 293;
d9580 2
a9581 2
            case 'e':
              if (strncmp (KR_keyword, "/dev/sde1", 9) == 0)
d9584 1
a9584 1
return dev_storage + 278;
d9595 2
a9596 2
            case 'd':
              switch (KR_keyword [6])
a9597 3
                case 'd':
                  if (strncmp (KR_keyword, "/dev/sdd1", 9) == 0)
                    {
d9599 1
a9599 1
return dev_storage + 263;
d9602 3
a9604 3
                    }
                  else
                    {
d9609 4
a9612 4
                    }
                case 'c':
                  if (strncmp (KR_keyword, "/dev/scd1", 9) == 0)
                    {
d9614 1
a9614 1
return dev_storage + 177;
d9617 3
a9619 9
                    }
                  else
                    {
{
return	NULL;

}
                    }
                default:
d9625 2
a9626 2
            case 'c':
              if (strncmp (KR_keyword, "/dev/sdc1", 9) == 0)
d9629 1
a9629 1
return dev_storage + 248;
d9640 2
a9641 2
            case 'b':
              if (strncmp (KR_keyword, "/dev/sdb1", 9) == 0)
d9644 1
a9644 1
return dev_storage + 233;
d9655 2
a9656 2
            case 'a':
              if (strncmp (KR_keyword, "/dev/sda1", 9) == 0)
d9659 1
a9659 1
return dev_storage + 218;
d9670 2
a9671 2
            case '9':
              if (strncmp (KR_keyword, "/dev/st91", 9) == 0)
d9674 1
a9674 1
return dev_storage + 715;
d9685 2
a9686 2
            case '8':
              if (strncmp (KR_keyword, "/dev/st81", 9) == 0)
d9689 1
a9689 1
return dev_storage + 705;
d9700 2
a9701 2
            case '7':
              if (strncmp (KR_keyword, "/dev/st71", 9) == 0)
d9704 1
a9704 1
return dev_storage + 695;
d9715 2
a9716 2
            case '6':
              if (strncmp (KR_keyword, "/dev/st61", 9) == 0)
d9719 1
a9719 1
return dev_storage + 685;
d9730 2
a9731 2
            case '5':
              if (strncmp (KR_keyword, "/dev/st51", 9) == 0)
d9734 1
a9734 1
return dev_storage + 675;
d9745 2
a9746 2
            case '4':
              if (strncmp (KR_keyword, "/dev/st41", 9) == 0)
d9749 1
a9749 1
return dev_storage + 665;
d9760 2
a9761 2
            case '3':
              if (strncmp (KR_keyword, "/dev/st31", 9) == 0)
d9764 1
a9764 1
return dev_storage + 655;
d9775 2
a9776 2
            case '2':
              if (strncmp (KR_keyword, "/dev/st21", 9) == 0)
d9779 1
a9779 1
return dev_storage + 645;
d9790 2
a9791 2
            case '1':
              switch (KR_keyword [6])
a9792 3
                case 't':
                  if (strncmp (KR_keyword, "/dev/st11", 9) == 0)
                    {
d9794 1
a9794 1
return dev_storage + 635;
d9797 3
a9799 3
                    }
                  else
                    {
d9804 4
a9807 4
                    }
                case 'r':
                  if (strncmp (KR_keyword, "/dev/sr11", 9) == 0)
                    {
d9809 1
a9809 1
return dev_storage + 619;
d9812 3
a9814 3
                    }
                  else
                    {
d9819 4
a9822 4
                    }
                case 'd':
                  if (strncmp (KR_keyword, "/dev/fd11", 9) == 0)
                    {
d9824 1
a9824 1
return dev_storage + 33;
d9827 3
a9829 3
                    }
                  else
                    {
d9834 4
a9837 2
                    }
                default:
d9839 1
a9839 1
return	NULL;
d9843 2
a9844 1
            default:
d9849 3
a9851 6
            }
        case '0':
          switch (KR_keyword [7])
            {
            case 'y':
              if (strncmp (KR_keyword, "/dev/tty0", 9) == 0)
d9854 1
a9854 1
return dev_storage + 753;
d9865 2
a9866 2
            case 't':
              if (strncmp (KR_keyword, "/dev/nst0", 9) == 0)
d9869 1
a9869 1
return dev_storage + 43;
d9880 2
a9881 2
            case 'd':
              if (strncmp (KR_keyword, "/dev/scd0", 9) == 0)
d9884 1
a9884 1
return dev_storage + 176;
d9895 9
d9905 1
a9905 1
              if (strncmp (KR_keyword, "/dev/st90", 9) == 0)
d9908 1
a9908 1
return dev_storage + 714;
d9920 1
a9920 1
              if (strncmp (KR_keyword, "/dev/st80", 9) == 0)
d9923 1
a9923 1
return dev_storage + 704;
d9935 1
a9935 1
              if (strncmp (KR_keyword, "/dev/st70", 9) == 0)
d9938 1
a9938 1
return dev_storage + 694;
d9950 1
a9950 1
              if (strncmp (KR_keyword, "/dev/st60", 9) == 0)
d9953 1
a9953 1
return dev_storage + 684;
d9965 1
a9965 1
              if (strncmp (KR_keyword, "/dev/st50", 9) == 0)
d9968 1
a9968 1
return dev_storage + 674;
d9980 1
a9980 1
              if (strncmp (KR_keyword, "/dev/st40", 9) == 0)
d9983 1
a9983 1
return dev_storage + 664;
d9995 1
a9995 1
              if (strncmp (KR_keyword, "/dev/st30", 9) == 0)
d9998 1
a9998 1
return dev_storage + 654;
d10010 1
a10010 1
              if (strncmp (KR_keyword, "/dev/st20", 9) == 0)
d10013 1
a10013 1
return dev_storage + 644;
d10025 1
a10025 1
              switch (KR_keyword [6])
a10026 3
                case 't':
                  if (strncmp (KR_keyword, "/dev/st10", 9) == 0)
                    {
d10028 1
a10028 1
return dev_storage + 634;
d10031 3
a10033 3
                    }
                  else
                    {
d10038 4
a10041 4
                    }
                case 'r':
                  if (strncmp (KR_keyword, "/dev/sr10", 9) == 0)
                    {
d10043 1
a10043 1
return dev_storage + 618;
d10046 3
a10048 3
                    }
                  else
                    {
d10053 2
a10054 4
                    }
                case 'd':
                  if (strncmp (KR_keyword, "/dev/fd10", 9) == 0)
                    {
d10056 1
a10056 1
return dev_storage + 32;
d10059 7
a10065 3
                    }
                  else
                    {
d10067 1
a10067 1
return	NULL;
d10070 3
a10072 2
                    }
                default:
d10078 3
a10080 1
            default:
d10082 1
a10082 1
return	NULL;
d10085 3
a10087 2
            }
        default:
d10092 4
a10095 7
        }
    case 10:
      switch (KR_keyword [9])
        {
        case 'n':
          if (strncmp (KR_keyword, "/dev/conin", 10) == 0)
            {
d10097 1
a10097 1
return dev_storage + 18;
d10100 3
a10102 3
            }
          else
            {
d10107 3
a10109 6
            }
        case '9':
          switch (KR_keyword [8])
            {
            case 'S':
              if (strncmp (KR_keyword, "/dev/ttyS9", 10) == 0)
d10112 1
a10112 1
return dev_storage + 826;
d10123 2
a10124 2
            case '9':
              if (strncmp (KR_keyword, "/dev/nst99", 10) == 0)
d10127 1
a10127 1
return dev_storage + 142;
d10138 2
a10139 2
            case '8':
              if (strncmp (KR_keyword, "/dev/nst89", 10) == 0)
d10142 1
a10142 1
return dev_storage + 132;
d10153 2
a10154 2
            case '7':
              if (strncmp (KR_keyword, "/dev/nst79", 10) == 0)
d10157 1
a10157 1
return dev_storage + 122;
d10168 2
a10169 2
            case '6':
              if (strncmp (KR_keyword, "/dev/nst69", 10) == 0)
d10172 1
a10172 1
return dev_storage + 112;
d10183 2
a10184 2
            case '5':
              switch (KR_keyword [5])
a10185 3
                case 't':
                  if (strncmp (KR_keyword, "/dev/tty59", 10) == 0)
                    {
d10187 1
a10187 1
return dev_storage + 812;
d10190 3
a10192 3
                    }
                  else
                    {
d10197 4
a10200 4
                    }
                case 'n':
                  if (strncmp (KR_keyword, "/dev/nst59", 10) == 0)
                    {
d10202 1
a10202 1
return dev_storage + 102;
d10205 3
a10207 3
                    }
                  else
                    {
d10212 2
a10213 2
                    }
                default:
d10218 6
a10223 3
                }
            case '4':
              switch (KR_keyword [5])
a10224 3
                case 't':
                  if (strncmp (KR_keyword, "/dev/tty49", 10) == 0)
                    {
d10226 1
a10226 1
return dev_storage + 802;
d10229 3
a10231 3
                    }
                  else
                    {
d10236 4
a10239 4
                    }
                case 'n':
                  if (strncmp (KR_keyword, "/dev/nst49", 10) == 0)
                    {
d10241 1
a10241 1
return dev_storage + 92;
d10244 3
a10246 3
                    }
                  else
                    {
d10251 4
a10254 2
                    }
                default:
d10256 1
a10256 1
return	NULL;
d10260 1
a10260 2
            case '3':
              switch (KR_keyword [5])
a10261 10
                case 't':
                  if (strncmp (KR_keyword, "/dev/tty39", 10) == 0)
                    {
{
return dev_storage + 792;

}
                    }
                  else
                    {
d10266 4
a10269 4
                    }
                case 'n':
                  if (strncmp (KR_keyword, "/dev/nst39", 10) == 0)
                    {
d10271 1
a10271 1
return dev_storage + 82;
d10274 3
a10276 3
                    }
                  else
                    {
d10281 4
a10284 2
                    }
                default:
d10286 1
a10286 1
return	NULL;
d10290 1
a10290 2
            case '2':
              switch (KR_keyword [5])
a10291 10
                case 't':
                  if (strncmp (KR_keyword, "/dev/tty29", 10) == 0)
                    {
{
return dev_storage + 782;

}
                    }
                  else
                    {
d10296 4
a10299 4
                    }
                case 'n':
                  if (strncmp (KR_keyword, "/dev/nst29", 10) == 0)
                    {
d10301 1
a10301 1
return dev_storage + 72;
d10304 3
a10306 3
                    }
                  else
                    {
d10311 4
a10314 2
                    }
                default:
d10316 1
a10316 1
return	NULL;
d10320 1
a10320 2
            case '1':
              switch (KR_keyword [5])
a10321 10
                case 't':
                  if (strncmp (KR_keyword, "/dev/tty19", 10) == 0)
                    {
{
return dev_storage + 772;

}
                    }
                  else
                    {
d10326 4
a10329 4
                    }
                case 's':
                  if (strncmp (KR_keyword, "/dev/st119", 10) == 0)
                    {
d10331 1
a10331 1
return dev_storage + 743;
d10334 3
a10336 3
                    }
                  else
                    {
d10341 4
a10344 4
                    }
                case 'n':
                  if (strncmp (KR_keyword, "/dev/nst19", 10) == 0)
                    {
d10346 1
a10346 1
return dev_storage + 62;
d10349 3
a10351 9
                    }
                  else
                    {
{
return	NULL;

}
                    }
                default:
d10358 1
a10358 1
              if (strncmp (KR_keyword, "/dev/st109", 10) == 0)
d10361 1
a10361 1
return dev_storage + 733;
d10378 1
a10378 1
        case '8':
d10381 2
a10382 2
            case 'S':
              if (strncmp (KR_keyword, "/dev/ttyS8", 10) == 0)
d10385 1
a10385 1
return dev_storage + 825;
d10396 2
a10397 2
            case '9':
              if (strncmp (KR_keyword, "/dev/nst98", 10) == 0)
d10400 1
a10400 1
return dev_storage + 141;
d10411 2
a10412 2
            case '8':
              if (strncmp (KR_keyword, "/dev/nst88", 10) == 0)
d10415 1
a10415 1
return dev_storage + 131;
d10426 2
a10427 2
            case '7':
              if (strncmp (KR_keyword, "/dev/nst78", 10) == 0)
d10430 1
a10430 1
return dev_storage + 121;
d10441 2
a10442 2
            case '6':
              if (strncmp (KR_keyword, "/dev/nst68", 10) == 0)
d10445 1
a10445 1
return dev_storage + 111;
d10456 2
a10457 2
            case '5':
              switch (KR_keyword [5])
a10458 3
                case 't':
                  if (strncmp (KR_keyword, "/dev/tty58", 10) == 0)
                    {
d10460 1
a10460 1
return dev_storage + 811;
d10463 3
a10465 3
                    }
                  else
                    {
d10470 4
a10473 4
                    }
                case 'n':
                  if (strncmp (KR_keyword, "/dev/nst58", 10) == 0)
                    {
d10475 1
a10475 1
return dev_storage + 101;
d10478 3
a10480 3
                    }
                  else
                    {
d10485 11
a10495 2
                    }
                default:
d10501 2
a10502 2
            case '4':
              switch (KR_keyword [5])
a10503 3
                case 't':
                  if (strncmp (KR_keyword, "/dev/tty48", 10) == 0)
                    {
d10505 1
a10505 1
return dev_storage + 801;
d10508 3
a10510 3
                    }
                  else
                    {
d10515 4
a10518 4
                    }
                case 'n':
                  if (strncmp (KR_keyword, "/dev/nst48", 10) == 0)
                    {
d10520 1
a10520 1
return dev_storage + 91;
d10523 3
a10525 3
                    }
                  else
                    {
d10530 2
a10531 2
                    }
                default:
d10536 6
a10541 3
                }
            case '3':
              switch (KR_keyword [5])
a10542 3
                case 't':
                  if (strncmp (KR_keyword, "/dev/tty38", 10) == 0)
                    {
d10544 1
a10544 1
return dev_storage + 791;
d10547 3
a10549 3
                    }
                  else
                    {
d10554 4
a10557 4
                    }
                case 'n':
                  if (strncmp (KR_keyword, "/dev/nst38", 10) == 0)
                    {
d10559 1
a10559 1
return dev_storage + 81;
d10562 3
a10564 3
                    }
                  else
                    {
d10569 4
a10572 2
                    }
                default:
d10574 1
a10574 1
return	NULL;
d10578 1
a10578 2
            case '2':
              switch (KR_keyword [5])
a10579 3
                case 't':
                  if (strncmp (KR_keyword, "/dev/tty28", 10) == 0)
                    {
d10581 1
a10581 1
return dev_storage + 781;
d10584 4
a10587 3
                    }
                  else
                    {
d10589 1
a10589 1
return	NULL;
d10592 3
a10594 4
                    }
                case 'n':
                  if (strncmp (KR_keyword, "/dev/nst28", 10) == 0)
                    {
d10596 1
a10596 1
return dev_storage + 71;
d10599 4
a10602 3
                    }
                  else
                    {
d10604 1
a10604 1
return	NULL;
d10607 3
a10609 2
                    }
                default:
d10615 2
a10616 2
            case '1':
              switch (KR_keyword [5])
a10617 3
                case 't':
                  if (strncmp (KR_keyword, "/dev/tty18", 10) == 0)
                    {
d10619 1
a10619 1
return dev_storage + 771;
d10622 3
a10624 3
                    }
                  else
                    {
d10629 4
a10632 4
                    }
                case 's':
                  if (strncmp (KR_keyword, "/dev/st118", 10) == 0)
                    {
d10634 1
a10634 1
return dev_storage + 742;
d10637 3
a10639 3
                    }
                  else
                    {
d10644 4
a10647 4
                    }
                case 'n':
                  if (strncmp (KR_keyword, "/dev/nst18", 10) == 0)
                    {
d10649 1
a10649 1
return dev_storage + 61;
d10652 3
a10654 3
                    }
                  else
                    {
d10659 11
a10669 2
                    }
                default:
d10676 1
a10676 1
              if (strncmp (KR_keyword, "/dev/st108", 10) == 0)
d10679 1
a10679 1
return dev_storage + 732;
d10696 1
a10696 1
        case '7':
d10699 2
a10700 2
            case 'S':
              if (strncmp (KR_keyword, "/dev/ttyS7", 10) == 0)
d10703 1
a10703 1
return dev_storage + 824;
d10714 2
a10715 2
            case '9':
              if (strncmp (KR_keyword, "/dev/nst97", 10) == 0)
d10718 1
a10718 1
return dev_storage + 140;
d10729 2
a10730 2
            case '8':
              if (strncmp (KR_keyword, "/dev/nst87", 10) == 0)
d10733 1
a10733 1
return dev_storage + 130;
d10744 2
a10745 2
            case '7':
              if (strncmp (KR_keyword, "/dev/nst77", 10) == 0)
d10748 1
a10748 1
return dev_storage + 120;
d10759 2
a10760 2
            case '6':
              if (strncmp (KR_keyword, "/dev/nst67", 10) == 0)
d10763 1
a10763 1
return dev_storage + 110;
d10774 2
a10775 2
            case '5':
              switch (KR_keyword [5])
a10776 3
                case 't':
                  if (strncmp (KR_keyword, "/dev/tty57", 10) == 0)
                    {
d10778 1
a10778 1
return dev_storage + 810;
d10781 3
a10783 3
                    }
                  else
                    {
d10788 4
a10791 4
                    }
                case 'n':
                  if (strncmp (KR_keyword, "/dev/nst57", 10) == 0)
                    {
d10793 1
a10793 1
return dev_storage + 100;
d10796 3
a10798 3
                    }
                  else
                    {
d10803 4
a10806 2
                    }
                default:
d10808 1
a10808 1
return	NULL;
d10812 1
a10812 2
            case '4':
              switch (KR_keyword [5])
a10813 10
                case 't':
                  if (strncmp (KR_keyword, "/dev/tty47", 10) == 0)
                    {
{
return dev_storage + 800;

}
                    }
                  else
                    {
d10818 4
a10821 4
                    }
                case 'n':
                  if (strncmp (KR_keyword, "/dev/nst47", 10) == 0)
                    {
d10823 1
a10823 1
return dev_storage + 90;
d10826 3
a10828 3
                    }
                  else
                    {
d10833 4
a10836 2
                    }
                default:
d10838 1
a10838 1
return	NULL;
d10842 1
a10842 2
            case '3':
              switch (KR_keyword [5])
a10843 3
                case 't':
                  if (strncmp (KR_keyword, "/dev/tty37", 10) == 0)
                    {
d10845 1
a10845 1
return dev_storage + 790;
d10848 2
a10849 3
                    }
                  else
                    {
d10854 7
a10860 4
                    }
                case 'n':
                  if (strncmp (KR_keyword, "/dev/nst37", 10) == 0)
                    {
d10862 1
a10862 1
return dev_storage + 80;
d10865 3
a10867 3
                    }
                  else
                    {
d10872 11
a10882 2
                    }
                default:
d10888 2
a10889 2
            case '2':
              switch (KR_keyword [5])
a10890 3
                case 't':
                  if (strncmp (KR_keyword, "/dev/tty27", 10) == 0)
                    {
d10892 1
a10892 1
return dev_storage + 780;
d10895 3
a10897 3
                    }
                  else
                    {
d10902 4
a10905 4
                    }
                case 's':
                  if (strncmp (KR_keyword, "/dev/st127", 10) == 0)
                    {
d10907 1
a10907 1
return dev_storage + 751;
d10910 3
a10912 3
                    }
                  else
                    {
d10917 4
a10920 4
                    }
                case 'n':
                  if (strncmp (KR_keyword, "/dev/nst27", 10) == 0)
                    {
d10922 1
a10922 1
return dev_storage + 70;
d10925 3
a10927 3
                    }
                  else
                    {
d10932 11
a10942 2
                    }
                default:
d10948 2
a10949 2
            case '1':
              switch (KR_keyword [5])
a10950 3
                case 't':
                  if (strncmp (KR_keyword, "/dev/tty17", 10) == 0)
                    {
d10952 1
a10952 1
return dev_storage + 770;
d10955 3
a10957 3
                    }
                  else
                    {
d10962 4
a10965 4
                    }
                case 's':
                  if (strncmp (KR_keyword, "/dev/st117", 10) == 0)
                    {
d10967 1
a10967 1
return dev_storage + 741;
d10970 3
a10972 3
                    }
                  else
                    {
d10977 4
a10980 4
                    }
                case 'n':
                  if (strncmp (KR_keyword, "/dev/nst17", 10) == 0)
                    {
d10982 1
a10982 1
return dev_storage + 60;
d10985 3
a10987 9
                    }
                  else
                    {
{
return	NULL;

}
                    }
                default:
d10994 1
a10994 1
              if (strncmp (KR_keyword, "/dev/st107", 10) == 0)
d10997 1
a10997 1
return dev_storage + 731;
d11014 1
a11014 1
        case '6':
d11017 2
a11018 2
            case 'S':
              if (strncmp (KR_keyword, "/dev/ttyS6", 10) == 0)
d11021 1
a11021 1
return dev_storage + 823;
d11032 2
a11033 2
            case '9':
              if (strncmp (KR_keyword, "/dev/nst96", 10) == 0)
d11036 1
a11036 1
return dev_storage + 139;
d11047 2
a11048 2
            case '8':
              if (strncmp (KR_keyword, "/dev/nst86", 10) == 0)
d11051 1
a11051 1
return dev_storage + 129;
d11062 2
a11063 2
            case '7':
              if (strncmp (KR_keyword, "/dev/nst76", 10) == 0)
d11066 1
a11066 1
return dev_storage + 119;
d11077 2
a11078 2
            case '6':
              if (strncmp (KR_keyword, "/dev/nst66", 10) == 0)
d11081 1
a11081 1
return dev_storage + 109;
d11092 2
a11093 2
            case '5':
              switch (KR_keyword [5])
a11094 3
                case 't':
                  if (strncmp (KR_keyword, "/dev/tty56", 10) == 0)
                    {
d11096 1
a11096 1
return dev_storage + 809;
d11099 3
a11101 3
                    }
                  else
                    {
d11106 4
a11109 4
                    }
                case 'n':
                  if (strncmp (KR_keyword, "/dev/nst56", 10) == 0)
                    {
d11111 1
a11111 1
return dev_storage + 99;
d11114 3
a11116 3
                    }
                  else
                    {
d11121 11
a11131 2
                    }
                default:
d11137 2
a11138 2
            case '4':
              switch (KR_keyword [5])
a11139 3
                case 't':
                  if (strncmp (KR_keyword, "/dev/tty46", 10) == 0)
                    {
d11141 1
a11141 1
return dev_storage + 799;
d11144 3
a11146 3
                    }
                  else
                    {
d11151 4
a11154 4
                    }
                case 'n':
                  if (strncmp (KR_keyword, "/dev/nst46", 10) == 0)
                    {
d11156 1
a11156 1
return dev_storage + 89;
d11159 3
a11161 3
                    }
                  else
                    {
d11166 2
a11167 2
                    }
                default:
d11172 6
a11177 3
                }
            case '3':
              switch (KR_keyword [5])
a11178 3
                case 't':
                  if (strncmp (KR_keyword, "/dev/tty36", 10) == 0)
                    {
d11180 1
a11180 1
return dev_storage + 789;
d11183 18
a11200 3
                    }
                  else
                    {
d11205 4
a11208 4
                    }
                case 'n':
                  if (strncmp (KR_keyword, "/dev/nst36", 10) == 0)
                    {
d11210 1
a11210 1
return dev_storage + 79;
d11213 3
a11215 3
                    }
                  else
                    {
d11220 11
a11230 2
                    }
                default:
d11236 2
a11237 2
            case '2':
              switch (KR_keyword [5])
d11240 1
a11240 1
                  if (strncmp (KR_keyword, "/dev/tty26", 10) == 0)
d11243 1
a11243 1
return dev_storage + 779;
d11254 2
a11255 2
                case 's':
                  if (strncmp (KR_keyword, "/dev/st126", 10) == 0)
d11258 1
a11258 1
return dev_storage + 750;
d11269 2
a11270 2
                case 'n':
                  if (strncmp (KR_keyword, "/dev/nst26", 10) == 0)
d11273 1
a11273 1
return dev_storage + 69;
d11290 2
a11291 2
            case '1':
              switch (KR_keyword [5])
d11294 1
a11294 1
                  if (strncmp (KR_keyword, "/dev/tty16", 10) == 0)
d11297 1
a11297 1
return dev_storage + 769;
d11308 2
a11309 2
                case 's':
                  if (strncmp (KR_keyword, "/dev/st116", 10) == 0)
d11312 1
a11312 1
return dev_storage + 740;
d11323 2
a11324 2
                case 'n':
                  if (strncmp (KR_keyword, "/dev/nst16", 10) == 0)
d11327 1
a11327 1
return dev_storage + 59;
d11338 11
a11348 2
                case 'c':
                  if (strncmp (KR_keyword, "/dev/com16", 10) == 0)
d11351 1
a11351 1
return dev_storage + 17;
d11362 10
a11371 1
                default:
d11376 4
a11379 4
                }
            case '0':
              if (strncmp (KR_keyword, "/dev/st106", 10) == 0)
                {
d11381 1
a11381 1
return dev_storage + 730;
d11384 3
a11386 3
                }
              else
                {
d11391 2
a11392 2
                }
            default:
d11397 3
a11399 6
            }
        case '5':
          switch (KR_keyword [7])
            {
            case 'z':
              if (strncmp (KR_keyword, "/dev/sdz15", 10) == 0)
d11401 3
d11405 1
a11405 1
return dev_storage + 607;
d11408 3
a11410 3
                }
              else
                {
d11415 3
a11417 6
                }
            case 'y':
              switch (KR_keyword [8])
                {
                case 'S':
                  if (strncmp (KR_keyword, "/dev/ttyS5", 10) == 0)
d11420 1
a11420 1
return dev_storage + 822;
d11431 2
a11432 2
                case '5':
                  if (strncmp (KR_keyword, "/dev/tty55", 10) == 0)
d11435 1
a11435 1
return dev_storage + 808;
d11446 11
a11456 2
                case '4':
                  if (strncmp (KR_keyword, "/dev/tty45", 10) == 0)
d11459 1
a11459 1
return dev_storage + 798;
d11470 2
a11471 2
                case '3':
                  if (strncmp (KR_keyword, "/dev/tty35", 10) == 0)
d11474 1
a11474 1
return dev_storage + 788;
d11485 2
a11486 2
                case '2':
                  if (strncmp (KR_keyword, "/dev/tty25", 10) == 0)
d11489 1
a11489 1
return dev_storage + 778;
d11500 11
a11510 2
                case '1':
                  switch (KR_keyword [5])
a11511 3
                    case 't':
                      if (strncmp (KR_keyword, "/dev/tty15", 10) == 0)
                        {
d11513 1
a11513 1
return dev_storage + 768;
d11516 3
a11518 3
                        }
                      else
                        {
d11523 4
a11526 4
                        }
                    case 's':
                      if (strncmp (KR_keyword, "/dev/sdy15", 10) == 0)
                        {
d11528 1
a11528 1
return dev_storage + 592;
d11531 3
a11533 3
                        }
                      else
                        {
d11538 4
a11541 2
                        }
                    default:
d11543 1
a11543 1
return	NULL;
d11547 2
a11548 1
                default:
d11553 2
a11554 4
                }
            case 'x':
              if (strncmp (KR_keyword, "/dev/sdx15", 10) == 0)
                {
d11556 1
a11556 1
return dev_storage + 577;
d11560 1
a11560 2
              else
                {
d11565 2
a11566 4
                }
            case 'w':
              if (strncmp (KR_keyword, "/dev/sdw15", 10) == 0)
                {
d11568 1
a11568 1
return dev_storage + 562;
d11571 24
a11594 2
                }
              else
d11596 10
d11610 4
a11613 4
                }
            case 'v':
              if (strncmp (KR_keyword, "/dev/sdv15", 10) == 0)
                {
d11615 1
a11615 1
return dev_storage + 547;
d11618 3
a11620 3
                }
              else
                {
d11625 11
a11635 4
                }
            case 'u':
              if (strncmp (KR_keyword, "/dev/sdu15", 10) == 0)
                {
d11637 1
a11637 1
return dev_storage + 532;
d11640 2
a11641 3
                }
              else
                {
d11647 2
a11648 2
            case 't':
              switch (KR_keyword [8])
d11650 2
a11651 2
                case '9':
                  if (strncmp (KR_keyword, "/dev/nst95", 10) == 0)
d11654 1
a11654 1
return dev_storage + 138;
d11665 2
a11666 2
                case '8':
                  if (strncmp (KR_keyword, "/dev/nst85", 10) == 0)
d11669 1
a11669 1
return dev_storage + 128;
d11680 2
a11681 2
                case '7':
                  if (strncmp (KR_keyword, "/dev/nst75", 10) == 0)
d11684 1
a11684 1
return dev_storage + 118;
d11695 11
a11705 2
                case '6':
                  if (strncmp (KR_keyword, "/dev/nst65", 10) == 0)
d11708 1
a11708 1
return dev_storage + 108;
d11719 2
a11720 2
                case '5':
                  if (strncmp (KR_keyword, "/dev/nst55", 10) == 0)
d11723 1
a11723 1
return dev_storage + 98;
d11734 2
a11735 2
                case '4':
                  if (strncmp (KR_keyword, "/dev/nst45", 10) == 0)
d11738 1
a11738 1
return dev_storage + 88;
d11749 2
a11750 2
                case '3':
                  if (strncmp (KR_keyword, "/dev/nst35", 10) == 0)
d11753 1
a11753 1
return dev_storage + 78;
d11764 11
a11774 2
                case '2':
                  if (strncmp (KR_keyword, "/dev/nst25", 10) == 0)
d11777 1
a11777 1
return dev_storage + 68;
d11788 2
a11789 2
                case '1':
                  switch (KR_keyword [5])
a11790 3
                    case 's':
                      if (strncmp (KR_keyword, "/dev/sdt15", 10) == 0)
                        {
d11792 1
a11792 1
return dev_storage + 517;
d11795 3
a11797 3
                        }
                      else
                        {
d11802 4
a11805 4
                        }
                    case 'n':
                      if (strncmp (KR_keyword, "/dev/nst15", 10) == 0)
                        {
d11807 1
a11807 1
return dev_storage + 58;
d11810 3
a11812 3
                        }
                      else
                        {
d11817 11
a11827 2
                        }
                    default:
d11839 2
a11840 2
            case 's':
              if (strncmp (KR_keyword, "/dev/sds15", 10) == 0)
d11842 3
d11846 1
a11846 1
return dev_storage + 502;
d11849 3
a11851 3
                }
              else
                {
d11856 4
a11859 4
                }
            case 'r':
              if (strncmp (KR_keyword, "/dev/sdr15", 10) == 0)
                {
d11861 1
a11861 1
return dev_storage + 487;
d11864 3
a11866 3
                }
              else
                {
d11871 4
a11874 4
                }
            case 'q':
              if (strncmp (KR_keyword, "/dev/sdq15", 10) == 0)
                {
d11876 1
a11876 1
return dev_storage + 472;
d11879 3
a11881 3
                }
              else
                {
d11886 11
a11896 4
                }
            case 'p':
              if (strncmp (KR_keyword, "/dev/sdp15", 10) == 0)
                {
d11898 1
a11898 1
return dev_storage + 457;
d11901 2
a11902 3
                }
              else
                {
d11908 2
a11909 2
            case 'o':
              if (strncmp (KR_keyword, "/dev/sdo15", 10) == 0)
d11911 3
d11915 1
a11915 1
return dev_storage + 442;
d11918 3
a11920 3
                }
              else
                {
d11925 4
a11928 4
                }
            case 'n':
              if (strncmp (KR_keyword, "/dev/sdn15", 10) == 0)
                {
d11930 1
a11930 1
return dev_storage + 427;
d11933 3
a11935 3
                }
              else
                {
d11940 3
a11942 6
                }
            case 'm':
              switch (KR_keyword [5])
                {
                case 's':
                  if (strncmp (KR_keyword, "/dev/sdm15", 10) == 0)
d11945 1
a11945 1
return dev_storage + 412;
d11956 2
a11957 2
                case 'c':
                  if (strncmp (KR_keyword, "/dev/com15", 10) == 0)
d11960 1
a11960 1
return dev_storage + 16;
d11977 2
a11978 2
            case 'l':
              if (strncmp (KR_keyword, "/dev/sdl15", 10) == 0)
d11980 3
d11984 1
a11984 1
return dev_storage + 397;
d11987 3
a11989 3
                }
              else
                {
d11994 11
a12004 4
                }
            case 'k':
              if (strncmp (KR_keyword, "/dev/sdk15", 10) == 0)
                {
d12006 1
a12006 1
return dev_storage + 382;
d12009 4
a12012 3
                }
              else
                {
d12014 1
a12014 1
return	NULL;
d12017 3
a12019 4
                }
            case 'j':
              if (strncmp (KR_keyword, "/dev/sdj15", 10) == 0)
                {
d12021 1
a12021 1
return dev_storage + 367;
d12024 4
a12027 3
                }
              else
                {
d12029 1
a12029 1
return	NULL;
d12032 3
a12034 4
                }
            case 'i':
              if (strncmp (KR_keyword, "/dev/sdi15", 10) == 0)
                {
d12036 1
a12036 1
return dev_storage + 352;
d12039 2
a12040 3
                }
              else
                {
d12046 2
a12047 2
            case 'h':
              if (strncmp (KR_keyword, "/dev/sdh15", 10) == 0)
d12049 3
d12053 1
a12053 1
return dev_storage + 337;
d12056 3
a12058 3
                }
              else
                {
d12063 4
a12066 4
                }
            case 'g':
              if (strncmp (KR_keyword, "/dev/sdg15", 10) == 0)
                {
d12068 1
a12068 1
return dev_storage + 322;
d12071 3
a12073 3
                }
              else
                {
d12078 4
a12081 4
                }
            case 'f':
              if (strncmp (KR_keyword, "/dev/sdf15", 10) == 0)
                {
d12083 1
a12083 1
return dev_storage + 307;
d12086 3
a12088 3
                }
              else
                {
d12093 11
a12103 4
                }
            case 'e':
              if (strncmp (KR_keyword, "/dev/sde15", 10) == 0)
                {
d12105 1
a12105 1
return dev_storage + 292;
d12108 2
a12109 3
                }
              else
                {
d12115 2
a12116 2
            case 'd':
              switch (KR_keyword [6])
d12119 1
a12119 1
                  if (strncmp (KR_keyword, "/dev/sdd15", 10) == 0)
d12122 1
a12122 1
return dev_storage + 277;
d12134 1
a12134 1
                  if (strncmp (KR_keyword, "/dev/scd15", 10) == 0)
d12137 1
a12137 1
return dev_storage + 191;
d12148 3
a12150 1
                default:
d12152 1
a12152 1
return	NULL;
d12155 3
a12157 4
                }
            case 'c':
              if (strncmp (KR_keyword, "/dev/sdc15", 10) == 0)
                {
d12159 1
a12159 1
return dev_storage + 262;
d12162 4
a12165 3
                }
              else
                {
d12167 1
a12167 1
return	NULL;
d12170 3
a12172 4
                }
            case 'b':
              if (strncmp (KR_keyword, "/dev/sdb15", 10) == 0)
                {
d12174 1
a12174 1
return dev_storage + 247;
d12177 2
a12178 3
                }
              else
                {
d12184 2
a12185 2
            case 'a':
              if (strncmp (KR_keyword, "/dev/sda15", 10) == 0)
d12187 3
d12191 1
a12191 1
return dev_storage + 232;
d12194 3
a12196 3
                }
              else
                {
d12201 3
a12203 6
                }
            case '1':
              switch (KR_keyword [8])
                {
                case '2':
                  if (strncmp (KR_keyword, "/dev/st125", 10) == 0)
d12206 1
a12206 1
return dev_storage + 749;
d12217 2
a12218 2
                case '1':
                  if (strncmp (KR_keyword, "/dev/st115", 10) == 0)
d12221 1
a12221 1
return dev_storage + 739;
d12232 2
a12233 2
                case '0':
                  if (strncmp (KR_keyword, "/dev/st105", 10) == 0)
d12236 1
a12236 1
return dev_storage + 729;
d12253 2
a12254 11
            default:
{
return	NULL;

}
            }
        case '4':
          switch (KR_keyword [7])
            {
            case 'z':
              if (strncmp (KR_keyword, "/dev/sdz14", 10) == 0)
d12256 3
d12260 1
a12260 1
return dev_storage + 606;
d12263 3
a12265 3
                }
              else
                {
d12270 3
a12272 6
                }
            case 'y':
              switch (KR_keyword [8])
                {
                case 'S':
                  if (strncmp (KR_keyword, "/dev/ttyS4", 10) == 0)
d12275 1
a12275 1
return dev_storage + 821;
d12286 2
a12287 2
                case '5':
                  if (strncmp (KR_keyword, "/dev/tty54", 10) == 0)
d12290 1
a12290 1
return dev_storage + 807;
d12301 2
a12302 2
                case '4':
                  if (strncmp (KR_keyword, "/dev/tty44", 10) == 0)
d12305 1
a12305 1
return dev_storage + 797;
d12316 11
a12326 2
                case '3':
                  if (strncmp (KR_keyword, "/dev/tty34", 10) == 0)
d12329 1
a12329 1
return dev_storage + 787;
d12340 2
a12341 2
                case '2':
                  if (strncmp (KR_keyword, "/dev/tty24", 10) == 0)
d12344 1
a12344 1
return dev_storage + 777;
d12355 2
a12356 2
                case '1':
                  switch (KR_keyword [5])
a12357 3
                    case 't':
                      if (strncmp (KR_keyword, "/dev/tty14", 10) == 0)
                        {
d12359 1
a12359 1
return dev_storage + 767;
d12362 3
a12364 3
                        }
                      else
                        {
d12369 4
a12372 4
                        }
                    case 's':
                      if (strncmp (KR_keyword, "/dev/sdy14", 10) == 0)
                        {
d12374 1
a12374 1
return dev_storage + 591;
d12377 3
a12379 9
                        }
                      else
                        {
{
return	NULL;

}
                        }
                    default:
d12391 2
a12392 2
            case 'x':
              if (strncmp (KR_keyword, "/dev/sdx14", 10) == 0)
d12394 3
d12398 1
a12398 1
return dev_storage + 576;
d12401 18
a12418 3
                }
              else
                {
d12423 4
a12426 4
                }
            case 'w':
              if (strncmp (KR_keyword, "/dev/sdw14", 10) == 0)
                {
d12428 1
a12428 1
return dev_storage + 561;
d12431 3
a12433 3
                }
              else
                {
d12438 11
a12448 4
                }
            case 'v':
              if (strncmp (KR_keyword, "/dev/sdv14", 10) == 0)
                {
d12450 1
a12450 1
return dev_storage + 546;
d12453 2
a12454 3
                }
              else
                {
d12460 2
a12461 2
            case 'u':
              if (strncmp (KR_keyword, "/dev/sdu14", 10) == 0)
d12463 3
d12467 1
a12467 1
return dev_storage + 531;
d12470 3
a12472 3
                }
              else
                {
d12477 3
a12479 6
                }
            case 't':
              switch (KR_keyword [8])
                {
                case '9':
                  if (strncmp (KR_keyword, "/dev/nst94", 10) == 0)
d12482 1
a12482 1
return dev_storage + 137;
d12493 2
a12494 2
                case '8':
                  if (strncmp (KR_keyword, "/dev/nst84", 10) == 0)
d12497 1
a12497 1
return dev_storage + 127;
d12508 2
a12509 2
                case '7':
                  if (strncmp (KR_keyword, "/dev/nst74", 10) == 0)
d12512 1
a12512 1
return dev_storage + 117;
d12523 11
a12533 2
                case '6':
                  if (strncmp (KR_keyword, "/dev/nst64", 10) == 0)
d12536 1
a12536 1
return dev_storage + 107;
d12547 2
a12548 2
                case '5':
                  if (strncmp (KR_keyword, "/dev/nst54", 10) == 0)
d12551 1
a12551 1
return dev_storage + 97;
d12562 2
a12563 2
                case '4':
                  if (strncmp (KR_keyword, "/dev/nst44", 10) == 0)
d12566 1
a12566 1
return dev_storage + 87;
d12577 2
a12578 2
                case '3':
                  if (strncmp (KR_keyword, "/dev/nst34", 10) == 0)
d12581 1
a12581 1
return dev_storage + 77;
d12592 11
a12602 2
                case '2':
                  if (strncmp (KR_keyword, "/dev/nst24", 10) == 0)
d12605 1
a12605 1
return dev_storage + 67;
d12616 2
a12617 2
                case '1':
                  switch (KR_keyword [5])
a12618 3
                    case 's':
                      if (strncmp (KR_keyword, "/dev/sdt14", 10) == 0)
                        {
d12620 1
a12620 1
return dev_storage + 516;
d12623 3
a12625 3
                        }
                      else
                        {
d12630 4
a12633 4
                        }
                    case 'n':
                      if (strncmp (KR_keyword, "/dev/nst14", 10) == 0)
                        {
d12635 1
a12635 1
return dev_storage + 57;
d12638 3
a12640 3
                        }
                      else
                        {
d12645 11
a12655 2
                        }
                    default:
d12667 2
a12668 2
            case 's':
              if (strncmp (KR_keyword, "/dev/sds14", 10) == 0)
d12670 3
d12674 1
a12674 1
return dev_storage + 501;
d12677 3
a12679 3
                }
              else
                {
d12684 4
a12687 4
                }
            case 'r':
              if (strncmp (KR_keyword, "/dev/sdr14", 10) == 0)
                {
d12689 1
a12689 1
return dev_storage + 486;
d12692 3
a12694 3
                }
              else
                {
d12699 4
a12702 4
                }
            case 'q':
              if (strncmp (KR_keyword, "/dev/sdq14", 10) == 0)
                {
d12704 1
a12704 1
return dev_storage + 471;
d12707 3
a12709 3
                }
              else
                {
d12714 11
a12724 4
                }
            case 'p':
              if (strncmp (KR_keyword, "/dev/sdp14", 10) == 0)
                {
d12726 1
a12726 1
return dev_storage + 456;
d12729 2
a12730 3
                }
              else
                {
d12736 2
a12737 2
            case 'o':
              if (strncmp (KR_keyword, "/dev/sdo14", 10) == 0)
d12739 3
d12743 1
a12743 1
return dev_storage + 441;
d12746 3
a12748 3
                }
              else
                {
d12753 4
a12756 4
                }
            case 'n':
              if (strncmp (KR_keyword, "/dev/sdn14", 10) == 0)
                {
d12758 1
a12758 1
return dev_storage + 426;
d12761 3
a12763 3
                }
              else
                {
d12768 3
a12770 6
                }
            case 'm':
              switch (KR_keyword [5])
                {
                case 's':
                  if (strncmp (KR_keyword, "/dev/sdm14", 10) == 0)
d12773 1
a12773 1
return dev_storage + 411;
d12784 2
a12785 2
                case 'c':
                  if (strncmp (KR_keyword, "/dev/com14", 10) == 0)
d12788 1
a12788 1
return dev_storage + 15;
d12805 2
a12806 2
            case 'l':
              if (strncmp (KR_keyword, "/dev/sdl14", 10) == 0)
d12808 3
d12812 1
a12812 1
return dev_storage + 396;
d12815 3
a12817 3
                }
              else
                {
d12822 4
a12825 4
                }
            case 'k':
              if (strncmp (KR_keyword, "/dev/sdk14", 10) == 0)
                {
d12827 1
a12827 1
return dev_storage + 381;
d12830 3
a12832 3
                }
              else
                {
d12837 4
a12840 4
                }
            case 'j':
              if (strncmp (KR_keyword, "/dev/sdj14", 10) == 0)
                {
d12842 1
a12842 1
return dev_storage + 366;
d12845 3
a12847 3
                }
              else
                {
d12852 11
a12862 4
                }
            case 'i':
              if (strncmp (KR_keyword, "/dev/sdi14", 10) == 0)
                {
d12864 1
a12864 1
return dev_storage + 351;
d12867 2
a12868 3
                }
              else
                {
d12874 2
a12875 2
            case 'h':
              if (strncmp (KR_keyword, "/dev/sdh14", 10) == 0)
d12877 3
d12881 1
a12881 1
return dev_storage + 336;
d12884 3
a12886 3
                }
              else
                {
d12891 4
a12894 4
                }
            case 'g':
              if (strncmp (KR_keyword, "/dev/sdg14", 10) == 0)
                {
d12896 1
a12896 1
return dev_storage + 321;
d12899 3
a12901 3
                }
              else
                {
d12906 4
a12909 4
                }
            case 'f':
              if (strncmp (KR_keyword, "/dev/sdf14", 10) == 0)
                {
d12911 1
a12911 1
return dev_storage + 306;
d12914 3
a12916 3
                }
              else
                {
d12921 11
a12931 4
                }
            case 'e':
              if (strncmp (KR_keyword, "/dev/sde14", 10) == 0)
                {
d12933 1
a12933 1
return dev_storage + 291;
d12936 2
a12937 3
                }
              else
                {
d12943 2
a12944 2
            case 'd':
              switch (KR_keyword [6])
d12947 1
a12947 1
                  if (strncmp (KR_keyword, "/dev/sdd14", 10) == 0)
d12950 1
a12950 1
return dev_storage + 276;
d12962 1
a12962 1
                  if (strncmp (KR_keyword, "/dev/scd14", 10) == 0)
d12965 1
a12965 1
return dev_storage + 190;
d12976 3
a12978 1
                default:
d12980 1
a12980 1
return	NULL;
d12983 3
a12985 4
                }
            case 'c':
              if (strncmp (KR_keyword, "/dev/sdc14", 10) == 0)
                {
d12987 1
a12987 1
return dev_storage + 261;
d12990 4
a12993 3
                }
              else
                {
d12995 1
a12995 1
return	NULL;
d12998 3
a13000 4
                }
            case 'b':
              if (strncmp (KR_keyword, "/dev/sdb14", 10) == 0)
                {
d13002 1
a13002 1
return dev_storage + 246;
d13005 2
a13006 3
                }
              else
                {
d13012 2
a13013 2
            case 'a':
              if (strncmp (KR_keyword, "/dev/sda14", 10) == 0)
d13015 3
d13019 1
a13019 1
return dev_storage + 231;
d13022 3
a13024 3
                }
              else
                {
d13029 3
a13031 6
                }
            case '1':
              switch (KR_keyword [8])
                {
                case '2':
                  if (strncmp (KR_keyword, "/dev/st124", 10) == 0)
d13034 1
a13034 1
return dev_storage + 748;
d13045 2
a13046 2
                case '1':
                  if (strncmp (KR_keyword, "/dev/st114", 10) == 0)
d13049 1
a13049 1
return dev_storage + 738;
d13060 2
a13061 2
                case '0':
                  if (strncmp (KR_keyword, "/dev/st104", 10) == 0)
d13064 1
a13064 1
return dev_storage + 728;
d13081 2
a13082 11
            default:
{
return	NULL;

}
            }
        case '3':
          switch (KR_keyword [7])
            {
            case 'z':
              if (strncmp (KR_keyword, "/dev/sdz13", 10) == 0)
d13084 3
d13088 1
a13088 1
return dev_storage + 605;
d13091 3
a13093 3
                }
              else
                {
d13098 3
a13100 6
                }
            case 'y':
              switch (KR_keyword [8])
                {
                case 'S':
                  if (strncmp (KR_keyword, "/dev/ttyS3", 10) == 0)
d13103 1
a13103 1
return dev_storage + 820;
d13114 2
a13115 2
                case '6':
                  if (strncmp (KR_keyword, "/dev/tty63", 10) == 0)
d13118 1
a13118 1
return dev_storage + 816;
d13129 2
a13130 2
                case '5':
                  if (strncmp (KR_keyword, "/dev/tty53", 10) == 0)
d13133 1
a13133 1
return dev_storage + 806;
d13144 11
a13154 2
                case '4':
                  if (strncmp (KR_keyword, "/dev/tty43", 10) == 0)
d13157 1
a13157 1
return dev_storage + 796;
d13168 2
a13169 2
                case '3':
                  if (strncmp (KR_keyword, "/dev/tty33", 10) == 0)
d13172 1
a13172 1
return dev_storage + 786;
d13183 2
a13184 2
                case '2':
                  if (strncmp (KR_keyword, "/dev/tty23", 10) == 0)
d13187 1
a13187 1
return dev_storage + 776;
d13198 2
a13199 2
                case '1':
                  switch (KR_keyword [5])
a13200 3
                    case 't':
                      if (strncmp (KR_keyword, "/dev/tty13", 10) == 0)
                        {
d13202 1
a13202 1
return dev_storage + 766;
d13205 3
a13207 3
                        }
                      else
                        {
d13212 2
a13213 23
                        }
                    case 's':
                      if (strncmp (KR_keyword, "/dev/sdy13", 10) == 0)
                        {
{
return dev_storage + 590;

}
                        }
                      else
                        {
{
return	NULL;

}
                        }
                    default:
{
return	NULL;

}
                    }
                default:
d13219 2
a13220 2
            case 'x':
              if (strncmp (KR_keyword, "/dev/sdx13", 10) == 0)
d13222 2
a13223 62
{
return dev_storage + 575;

}
                }
              else
                {
{
return	NULL;

}
                }
            case 'w':
              if (strncmp (KR_keyword, "/dev/sdw13", 10) == 0)
                {
{
return dev_storage + 560;

}
                }
              else
                {
{
return	NULL;

}
                }
            case 'v':
              if (strncmp (KR_keyword, "/dev/sdv13", 10) == 0)
                {
{
return dev_storage + 545;

}
                }
              else
                {
{
return	NULL;

}
                }
            case 'u':
              if (strncmp (KR_keyword, "/dev/sdu13", 10) == 0)
                {
{
return dev_storage + 530;

}
                }
              else
                {
{
return	NULL;

}
                }
            case 't':
              switch (KR_keyword [8])
                {
                case '9':
                  if (strncmp (KR_keyword, "/dev/nst93", 10) == 0)
d13226 1
a13226 1
return dev_storage + 136;
d13237 2
a13238 2
                case '8':
                  if (strncmp (KR_keyword, "/dev/nst83", 10) == 0)
d13241 1
a13241 1
return dev_storage + 126;
d13252 2
a13253 2
                case '7':
                  if (strncmp (KR_keyword, "/dev/nst73", 10) == 0)
d13256 1
a13256 1
return dev_storage + 116;
d13267 2
a13268 2
                case '6':
                  if (strncmp (KR_keyword, "/dev/nst63", 10) == 0)
d13271 1
a13271 1
return dev_storage + 106;
d13282 1
a13282 10
                case '5':
                  if (strncmp (KR_keyword, "/dev/nst53", 10) == 0)
                    {
{
return dev_storage + 96;

}
                    }
                  else
                    {
d13287 6
a13292 3
                    }
                case '4':
                  if (strncmp (KR_keyword, "/dev/nst43", 10) == 0)
d13295 1
a13295 1
return dev_storage + 86;
d13306 2
a13307 2
                case '3':
                  if (strncmp (KR_keyword, "/dev/nst33", 10) == 0)
d13310 1
a13310 1
return dev_storage + 76;
d13321 2
a13322 2
                case '2':
                  if (strncmp (KR_keyword, "/dev/nst23", 10) == 0)
d13325 1
a13325 1
return dev_storage + 66;
d13336 2
a13337 2
                case '1':
                  switch (KR_keyword [5])
a13338 3
                    case 's':
                      if (strncmp (KR_keyword, "/dev/sdt13", 10) == 0)
                        {
d13340 1
a13340 1
return dev_storage + 515;
d13343 3
a13345 24
                        }
                      else
                        {
{
return	NULL;

}
                        }
                    case 'n':
                      if (strncmp (KR_keyword, "/dev/nst13", 10) == 0)
                        {
{
return dev_storage + 56;

}
                        }
                      else
                        {
{
return	NULL;

}
                        }
                    default:
d13357 2
a13358 2
            case 's':
              if (strncmp (KR_keyword, "/dev/sds13", 10) == 0)
d13361 1
a13361 1
return dev_storage + 500;
d13372 2
a13373 2
            case 'r':
              if (strncmp (KR_keyword, "/dev/sdr13", 10) == 0)
d13376 1
a13376 1
return dev_storage + 485;
d13387 2
a13388 2
            case 'q':
              if (strncmp (KR_keyword, "/dev/sdq13", 10) == 0)
d13391 1
a13391 1
return dev_storage + 470;
d13402 2
a13403 2
            case 'p':
              if (strncmp (KR_keyword, "/dev/sdp13", 10) == 0)
d13406 1
a13406 1
return dev_storage + 455;
d13417 2
a13418 2
            case 'o':
              if (strncmp (KR_keyword, "/dev/sdo13", 10) == 0)
d13421 1
a13421 1
return dev_storage + 440;
d13432 1
a13432 16
            case 'n':
              if (strncmp (KR_keyword, "/dev/sdn13", 10) == 0)
                {
{
return dev_storage + 425;

}
                }
              else
                {
{
return	NULL;

}
                }
            case 'm':
d13435 2
a13436 2
                case 's':
                  if (strncmp (KR_keyword, "/dev/sdm13", 10) == 0)
d13439 1
a13439 1
return dev_storage + 410;
d13450 2
a13451 2
                case 'c':
                  if (strncmp (KR_keyword, "/dev/com13", 10) == 0)
d13454 1
a13454 1
return dev_storage + 14;
d13471 2
a13472 2
            case 'l':
              if (strncmp (KR_keyword, "/dev/sdl13", 10) == 0)
d13474 3
d13478 1
a13478 1
return dev_storage + 395;
d13481 3
a13483 3
                }
              else
                {
d13488 4
a13491 4
                }
            case 'k':
              if (strncmp (KR_keyword, "/dev/sdk13", 10) == 0)
                {
d13493 1
a13493 1
return dev_storage + 380;
d13496 3
a13498 3
                }
              else
                {
d13503 2
a13504 4
                }
            case 'j':
              if (strncmp (KR_keyword, "/dev/sdj13", 10) == 0)
                {
d13506 1
a13506 1
return dev_storage + 365;
d13510 2
a13511 1
              else
d13513 3
d13517 1
a13517 1
return	NULL;
d13520 11
a13530 4
                }
            case 'i':
              if (strncmp (KR_keyword, "/dev/sdi13", 10) == 0)
                {
d13532 1
a13532 1
return dev_storage + 350;
d13535 3
a13537 3
                }
              else
                {
d13542 2
a13543 4
                }
            case 'h':
              if (strncmp (KR_keyword, "/dev/sdh13", 10) == 0)
                {
d13545 1
a13545 1
return dev_storage + 335;
d13549 2
a13550 1
              else
d13552 3
d13556 1
a13556 1
return	NULL;
d13559 3
a13561 4
                }
            case 'g':
              if (strncmp (KR_keyword, "/dev/sdg13", 10) == 0)
                {
d13563 1
a13563 1
return dev_storage + 320;
d13566 4
a13569 3
                }
              else
                {
d13571 1
a13571 1
return	NULL;
d13574 3
a13576 4
                }
            case 'f':
              if (strncmp (KR_keyword, "/dev/sdf13", 10) == 0)
                {
d13578 1
a13578 1
return dev_storage + 305;
d13581 2
a13582 3
                }
              else
                {
d13588 2
a13589 2
            case 'e':
              if (strncmp (KR_keyword, "/dev/sde13", 10) == 0)
d13591 3
d13595 1
a13595 1
return dev_storage + 290;
d13598 3
a13600 3
                }
              else
                {
d13605 3
a13607 6
                }
            case 'd':
              switch (KR_keyword [6])
                {
                case 'd':
                  if (strncmp (KR_keyword, "/dev/sdd13", 10) == 0)
d13610 1
a13610 1
return dev_storage + 275;
d13621 2
a13622 2
                case 'c':
                  if (strncmp (KR_keyword, "/dev/scd13", 10) == 0)
d13625 1
a13625 1
return dev_storage + 189;
d13642 2
a13643 2
            case 'c':
              if (strncmp (KR_keyword, "/dev/sdc13", 10) == 0)
d13646 1
a13646 1
return dev_storage + 260;
d13657 11
a13667 2
            case 'b':
              if (strncmp (KR_keyword, "/dev/sdb13", 10) == 0)
d13669 3
d13673 1
a13673 1
return dev_storage + 245;
d13676 3
a13678 3
                }
              else
                {
d13683 4
a13686 4
                }
            case 'a':
              if (strncmp (KR_keyword, "/dev/sda13", 10) == 0)
                {
d13688 1
a13688 1
return dev_storage + 230;
d13691 3
a13693 3
                }
              else
                {
d13698 3
a13700 6
                }
            case '1':
              switch (KR_keyword [8])
                {
                case '2':
                  if (strncmp (KR_keyword, "/dev/st123", 10) == 0)
d13703 1
a13703 1
return dev_storage + 747;
d13714 11
a13724 2
                case '1':
                  if (strncmp (KR_keyword, "/dev/st113", 10) == 0)
d13727 1
a13727 1
return dev_storage + 737;
d13738 2
a13739 2
                case '0':
                  if (strncmp (KR_keyword, "/dev/st103", 10) == 0)
d13742 1
a13742 1
return dev_storage + 727;
d13753 3
a13755 1
                default:
d13757 1
a13757 1
return	NULL;
d13760 3
a13762 2
                }
            default:
d13767 2
a13768 14
            }
        case '2':
          switch (KR_keyword [7])
            {
            case 'z':
              if (strncmp (KR_keyword, "/dev/sdz12", 10) == 0)
                {
{
return dev_storage + 604;

}
                }
              else
                {
d13774 2
a13775 2
            case 'y':
              switch (KR_keyword [8])
d13777 2
a13778 2
                case 'S':
                  if (strncmp (KR_keyword, "/dev/ttyS2", 10) == 0)
d13781 1
a13781 1
return dev_storage + 819;
d13792 2
a13793 2
                case '6':
                  if (strncmp (KR_keyword, "/dev/tty62", 10) == 0)
d13796 1
a13796 1
return dev_storage + 815;
d13807 2
a13808 2
                case '5':
                  if (strncmp (KR_keyword, "/dev/tty52", 10) == 0)
d13811 1
a13811 1
return dev_storage + 805;
d13822 2
a13823 2
                case '4':
                  if (strncmp (KR_keyword, "/dev/tty42", 10) == 0)
d13826 1
a13826 1
return dev_storage + 795;
d13837 11
a13847 2
                case '3':
                  if (strncmp (KR_keyword, "/dev/tty32", 10) == 0)
d13850 1
a13850 1
return dev_storage + 785;
d13861 2
a13862 2
                case '2':
                  if (strncmp (KR_keyword, "/dev/tty22", 10) == 0)
d13865 1
a13865 1
return dev_storage + 775;
d13876 2
a13877 2
                case '1':
                  switch (KR_keyword [5])
a13878 3
                    case 't':
                      if (strncmp (KR_keyword, "/dev/tty12", 10) == 0)
                        {
d13880 1
a13880 1
return dev_storage + 765;
d13883 3
a13885 3
                        }
                      else
                        {
d13890 4
a13893 4
                        }
                    case 's':
                      if (strncmp (KR_keyword, "/dev/sdy12", 10) == 0)
                        {
d13895 1
a13895 1
return dev_storage + 589;
d13898 3
a13900 9
                        }
                      else
                        {
{
return	NULL;

}
                        }
                    default:
d13912 2
a13913 2
            case 'x':
              if (strncmp (KR_keyword, "/dev/sdx12", 10) == 0)
d13915 3
d13919 1
a13919 1
return dev_storage + 574;
d13922 3
a13924 3
                }
              else
                {
d13929 19
a13947 4
                }
            case 'w':
              if (strncmp (KR_keyword, "/dev/sdw12", 10) == 0)
                {
d13949 1
a13949 1
return dev_storage + 559;
d13952 3
a13954 3
                }
              else
                {
d13959 11
a13969 4
                }
            case 'v':
              if (strncmp (KR_keyword, "/dev/sdv12", 10) == 0)
                {
d13971 1
a13971 1
return dev_storage + 544;
d13974 2
a13975 3
                }
              else
                {
d13982 1
a13982 1
              if (strncmp (KR_keyword, "/dev/sdu12", 10) == 0)
d13984 3
d13988 1
a13988 1
return dev_storage + 529;
d13991 3
a13993 3
                }
              else
                {
d13998 3
a14000 6
                }
            case 't':
              switch (KR_keyword [8])
                {
                case '9':
                  if (strncmp (KR_keyword, "/dev/nst92", 10) == 0)
d14003 1
a14003 1
return dev_storage + 135;
d14014 2
a14015 2
                case '8':
                  if (strncmp (KR_keyword, "/dev/nst82", 10) == 0)
d14018 1
a14018 1
return dev_storage + 125;
d14029 2
a14030 2
                case '7':
                  if (strncmp (KR_keyword, "/dev/nst72", 10) == 0)
d14033 1
a14033 1
return dev_storage + 115;
d14044 11
a14054 2
                case '6':
                  if (strncmp (KR_keyword, "/dev/nst62", 10) == 0)
d14057 1
a14057 1
return dev_storage + 105;
d14068 2
a14069 2
                case '5':
                  if (strncmp (KR_keyword, "/dev/nst52", 10) == 0)
d14072 1
a14072 1
return dev_storage + 95;
d14083 2
a14084 2
                case '4':
                  if (strncmp (KR_keyword, "/dev/nst42", 10) == 0)
d14087 1
a14087 1
return dev_storage + 85;
d14098 2
a14099 2
                case '3':
                  if (strncmp (KR_keyword, "/dev/nst32", 10) == 0)
d14102 1
a14102 1
return dev_storage + 75;
d14113 11
a14123 2
                case '2':
                  if (strncmp (KR_keyword, "/dev/nst22", 10) == 0)
d14126 1
a14126 1
return dev_storage + 65;
d14137 2
a14138 2
                case '1':
                  switch (KR_keyword [5])
a14139 3
                    case 's':
                      if (strncmp (KR_keyword, "/dev/sdt12", 10) == 0)
                        {
d14141 1
a14141 1
return dev_storage + 514;
d14144 3
a14146 3
                        }
                      else
                        {
d14151 4
a14154 4
                        }
                    case 'n':
                      if (strncmp (KR_keyword, "/dev/nst12", 10) == 0)
                        {
d14156 1
a14156 1
return dev_storage + 55;
d14159 3
a14161 3
                        }
                      else
                        {
d14166 11
a14176 2
                        }
                    default:
d14188 2
a14189 2
            case 's':
              if (strncmp (KR_keyword, "/dev/sds12", 10) == 0)
d14191 3
d14195 1
a14195 1
return dev_storage + 499;
d14198 3
a14200 3
                }
              else
                {
d14205 4
a14208 4
                }
            case 'r':
              if (strncmp (KR_keyword, "/dev/sdr12", 10) == 0)
                {
d14210 1
a14210 1
return dev_storage + 484;
d14213 3
a14215 3
                }
              else
                {
d14220 4
a14223 4
                }
            case 'q':
              if (strncmp (KR_keyword, "/dev/sdq12", 10) == 0)
                {
d14225 1
a14225 1
return dev_storage + 469;
d14228 3
a14230 3
                }
              else
                {
d14235 11
a14245 4
                }
            case 'p':
              if (strncmp (KR_keyword, "/dev/sdp12", 10) == 0)
                {
d14247 1
a14247 1
return dev_storage + 454;
d14250 2
a14251 3
                }
              else
                {
d14257 2
a14258 2
            case 'o':
              if (strncmp (KR_keyword, "/dev/sdo12", 10) == 0)
d14260 3
d14264 1
a14264 1
return dev_storage + 439;
d14267 3
a14269 3
                }
              else
                {
d14274 4
a14277 4
                }
            case 'n':
              if (strncmp (KR_keyword, "/dev/sdn12", 10) == 0)
                {
d14279 1
a14279 1
return dev_storage + 424;
d14282 3
a14284 3
                }
              else
                {
d14289 3
a14291 6
                }
            case 'm':
              switch (KR_keyword [5])
                {
                case 's':
                  if (strncmp (KR_keyword, "/dev/sdm12", 10) == 0)
d14294 1
a14294 1
return dev_storage + 409;
d14305 2
a14306 2
                case 'c':
                  if (strncmp (KR_keyword, "/dev/com12", 10) == 0)
d14309 1
a14309 1
return dev_storage + 13;
d14326 2
a14327 2
            case 'l':
              if (strncmp (KR_keyword, "/dev/sdl12", 10) == 0)
d14329 3
d14333 1
a14333 1
return dev_storage + 394;
d14336 3
a14338 3
                }
              else
                {
d14343 4
a14346 4
                }
            case 'k':
              if (strncmp (KR_keyword, "/dev/sdk12", 10) == 0)
                {
d14348 1
a14348 1
return dev_storage + 379;
d14351 3
a14353 3
                }
              else
                {
d14358 4
a14361 4
                }
            case 'j':
              if (strncmp (KR_keyword, "/dev/sdj12", 10) == 0)
                {
d14363 1
a14363 1
return dev_storage + 364;
d14366 3
a14368 3
                }
              else
                {
d14373 11
a14383 4
                }
            case 'i':
              if (strncmp (KR_keyword, "/dev/sdi12", 10) == 0)
                {
d14385 1
a14385 1
return dev_storage + 349;
d14388 2
a14389 3
                }
              else
                {
d14395 2
a14396 2
            case 'h':
              if (strncmp (KR_keyword, "/dev/sdh12", 10) == 0)
d14398 3
d14402 1
a14402 1
return dev_storage + 334;
d14405 3
a14407 3
                }
              else
                {
d14412 4
a14415 4
                }
            case 'g':
              if (strncmp (KR_keyword, "/dev/sdg12", 10) == 0)
                {
d14417 1
a14417 1
return dev_storage + 319;
d14420 3
a14422 3
                }
              else
                {
d14427 4
a14430 4
                }
            case 'f':
              if (strncmp (KR_keyword, "/dev/sdf12", 10) == 0)
                {
d14432 1
a14432 1
return dev_storage + 304;
d14435 3
a14437 3
                }
              else
                {
d14442 11
a14452 4
                }
            case 'e':
              if (strncmp (KR_keyword, "/dev/sde12", 10) == 0)
                {
d14454 1
a14454 1
return dev_storage + 289;
d14457 2
a14458 3
                }
              else
                {
d14464 2
a14465 2
            case 'd':
              switch (KR_keyword [6])
d14468 1
a14468 1
                  if (strncmp (KR_keyword, "/dev/sdd12", 10) == 0)
d14471 1
a14471 1
return dev_storage + 274;
d14483 1
a14483 1
                  if (strncmp (KR_keyword, "/dev/scd12", 10) == 0)
d14486 1
a14486 1
return dev_storage + 188;
d14497 3
a14499 1
                default:
d14501 1
a14501 1
return	NULL;
d14504 3
a14506 4
                }
            case 'c':
              if (strncmp (KR_keyword, "/dev/sdc12", 10) == 0)
                {
d14508 1
a14508 1
return dev_storage + 259;
d14511 4
a14514 3
                }
              else
                {
d14516 1
a14516 1
return	NULL;
d14519 3
a14521 4
                }
            case 'b':
              if (strncmp (KR_keyword, "/dev/sdb12", 10) == 0)
                {
d14523 1
a14523 1
return dev_storage + 244;
d14526 2
a14527 3
                }
              else
                {
d14533 2
a14534 2
            case 'a':
              if (strncmp (KR_keyword, "/dev/sda12", 10) == 0)
d14536 3
d14540 1
a14540 1
return dev_storage + 229;
d14543 3
a14545 3
                }
              else
                {
d14550 3
a14552 6
                }
            case '1':
              switch (KR_keyword [8])
                {
                case '2':
                  if (strncmp (KR_keyword, "/dev/st122", 10) == 0)
d14555 1
a14555 1
return dev_storage + 746;
d14566 2
a14567 2
                case '1':
                  if (strncmp (KR_keyword, "/dev/st112", 10) == 0)
d14570 1
a14570 1
return dev_storage + 736;
d14581 2
a14582 2
                case '0':
                  if (strncmp (KR_keyword, "/dev/st102", 10) == 0)
d14585 1
a14585 1
return dev_storage + 726;
d14602 2
a14603 11
            default:
{
return	NULL;

}
            }
        case '1':
          switch (KR_keyword [7])
            {
            case 'z':
              if (strncmp (KR_keyword, "/dev/sdz11", 10) == 0)
d14605 3
d14609 1
a14609 1
return dev_storage + 603;
d14612 3
a14614 3
                }
              else
                {
d14619 3
a14621 6
                }
            case 'y':
              switch (KR_keyword [8])
                {
                case 'S':
                  if (strncmp (KR_keyword, "/dev/ttyS1", 10) == 0)
d14624 1
a14624 1
return dev_storage + 818;
d14635 2
a14636 2
                case '6':
                  if (strncmp (KR_keyword, "/dev/tty61", 10) == 0)
d14639 1
a14639 1
return dev_storage + 814;
d14650 2
a14651 2
                case '5':
                  if (strncmp (KR_keyword, "/dev/tty51", 10) == 0)
d14654 1
a14654 1
return dev_storage + 804;
d14665 11
a14675 2
                case '4':
                  if (strncmp (KR_keyword, "/dev/tty41", 10) == 0)
d14678 1
a14678 1
return dev_storage + 794;
d14689 2
a14690 2
                case '3':
                  if (strncmp (KR_keyword, "/dev/tty31", 10) == 0)
d14693 1
a14693 1
return dev_storage + 784;
d14704 2
a14705 2
                case '2':
                  if (strncmp (KR_keyword, "/dev/tty21", 10) == 0)
d14708 1
a14708 1
return dev_storage + 774;
d14719 2
a14720 2
                case '1':
                  switch (KR_keyword [5])
a14721 3
                    case 't':
                      if (strncmp (KR_keyword, "/dev/tty11", 10) == 0)
                        {
d14723 1
a14723 1
return dev_storage + 764;
d14726 3
a14728 3
                        }
                      else
                        {
d14733 2
a14734 4
                        }
                    case 's':
                      if (strncmp (KR_keyword, "/dev/sdy11", 10) == 0)
                        {
d14736 1
a14736 1
return dev_storage + 588;
d14739 7
a14745 3
                        }
                      else
                        {
d14747 1
a14747 1
return	NULL;
d14750 3
a14752 2
                        }
                    default:
d14758 3
a14760 1
                default:
d14762 1
a14762 1
return	NULL;
d14765 3
a14767 4
                }
            case 'x':
              if (strncmp (KR_keyword, "/dev/sdx11", 10) == 0)
                {
d14769 1
a14769 1
return dev_storage + 573;
d14772 4
a14775 3
                }
              else
                {
d14777 1
a14777 1
return	NULL;
d14780 3
a14782 4
                }
            case 'w':
              if (strncmp (KR_keyword, "/dev/sdw11", 10) == 0)
                {
d14784 1
a14784 1
return dev_storage + 558;
d14787 4
a14790 3
                }
              else
                {
d14792 1
a14792 1
return	NULL;
d14795 3
a14797 4
                }
            case 'v':
              if (strncmp (KR_keyword, "/dev/sdv11", 10) == 0)
                {
d14799 1
a14799 1
return dev_storage + 543;
d14802 2
a14803 3
                }
              else
                {
d14809 2
a14810 2
            case 'u':
              if (strncmp (KR_keyword, "/dev/sdu11", 10) == 0)
d14812 3
d14816 1
a14816 1
return dev_storage + 528;
d14819 3
a14821 3
                }
              else
                {
d14826 3
a14828 6
                }
            case 't':
              switch (KR_keyword [8])
                {
                case '9':
                  if (strncmp (KR_keyword, "/dev/nst91", 10) == 0)
d14831 1
a14831 1
return dev_storage + 134;
d14842 2
a14843 2
                case '8':
                  if (strncmp (KR_keyword, "/dev/nst81", 10) == 0)
d14846 1
a14846 1
return dev_storage + 124;
d14857 2
a14858 2
                case '7':
                  if (strncmp (KR_keyword, "/dev/nst71", 10) == 0)
d14861 1
a14861 1
return dev_storage + 114;
d14872 11
a14882 2
                case '6':
                  if (strncmp (KR_keyword, "/dev/nst61", 10) == 0)
d14885 1
a14885 1
return dev_storage + 104;
d14896 2
a14897 2
                case '5':
                  if (strncmp (KR_keyword, "/dev/nst51", 10) == 0)
d14900 1
a14900 1
return dev_storage + 94;
d14911 2
a14912 2
                case '4':
                  if (strncmp (KR_keyword, "/dev/nst41", 10) == 0)
d14915 1
a14915 1
return dev_storage + 84;
d14926 2
a14927 2
                case '3':
                  if (strncmp (KR_keyword, "/dev/nst31", 10) == 0)
d14930 1
a14930 1
return dev_storage + 74;
d14941 11
a14951 2
                case '2':
                  if (strncmp (KR_keyword, "/dev/nst21", 10) == 0)
d14954 1
a14954 1
return dev_storage + 64;
d14965 2
a14966 2
                case '1':
                  switch (KR_keyword [5])
a14967 3
                    case 's':
                      if (strncmp (KR_keyword, "/dev/sdt11", 10) == 0)
                        {
d14969 1
a14969 1
return dev_storage + 513;
d14972 3
a14974 3
                        }
                      else
                        {
d14979 4
a14982 4
                        }
                    case 'n':
                      if (strncmp (KR_keyword, "/dev/nst11", 10) == 0)
                        {
d14984 1
a14984 1
return dev_storage + 54;
d14987 3
a14989 3
                        }
                      else
                        {
d14994 11
a15004 2
                        }
                    default:
d15016 2
a15017 2
            case 's':
              if (strncmp (KR_keyword, "/dev/sds11", 10) == 0)
d15019 3
d15023 1
a15023 1
return dev_storage + 498;
d15026 3
a15028 3
                }
              else
                {
d15033 4
a15036 4
                }
            case 'r':
              if (strncmp (KR_keyword, "/dev/sdr11", 10) == 0)
                {
d15038 1
a15038 1
return dev_storage + 483;
d15041 3
a15043 3
                }
              else
                {
d15048 4
a15051 4
                }
            case 'q':
              if (strncmp (KR_keyword, "/dev/sdq11", 10) == 0)
                {
d15053 1
a15053 1
return dev_storage + 468;
d15056 3
a15058 3
                }
              else
                {
d15063 11
a15073 4
                }
            case 'p':
              if (strncmp (KR_keyword, "/dev/sdp11", 10) == 0)
                {
d15075 1
a15075 1
return dev_storage + 453;
d15078 2
a15079 3
                }
              else
                {
d15085 2
a15086 2
            case 'o':
              if (strncmp (KR_keyword, "/dev/sdo11", 10) == 0)
d15088 3
d15092 1
a15092 1
return dev_storage + 438;
d15095 3
a15097 3
                }
              else
                {
d15102 4
a15105 4
                }
            case 'n':
              if (strncmp (KR_keyword, "/dev/sdn11", 10) == 0)
                {
d15107 1
a15107 1
return dev_storage + 423;
d15110 3
a15112 3
                }
              else
                {
d15117 3
a15119 6
                }
            case 'm':
              switch (KR_keyword [5])
                {
                case 's':
                  if (strncmp (KR_keyword, "/dev/sdm11", 10) == 0)
d15122 1
a15122 1
return dev_storage + 408;
d15133 2
a15134 2
                case 'c':
                  if (strncmp (KR_keyword, "/dev/com11", 10) == 0)
d15137 1
a15137 1
return dev_storage + 12;
d15154 2
a15155 2
            case 'l':
              if (strncmp (KR_keyword, "/dev/sdl11", 10) == 0)
d15157 3
d15161 1
a15161 1
return dev_storage + 393;
d15164 3
a15166 3
                }
              else
                {
d15171 11
a15181 4
                }
            case 'k':
              if (strncmp (KR_keyword, "/dev/sdk11", 10) == 0)
                {
d15183 1
a15183 1
return dev_storage + 378;
d15186 4
a15189 3
                }
              else
                {
d15191 1
a15191 1
return	NULL;
d15194 3
a15196 4
                }
            case 'j':
              if (strncmp (KR_keyword, "/dev/sdj11", 10) == 0)
                {
d15198 1
a15198 1
return dev_storage + 363;
d15201 4
a15204 3
                }
              else
                {
d15206 1
a15206 1
return	NULL;
d15209 3
a15211 4
                }
            case 'i':
              if (strncmp (KR_keyword, "/dev/sdi11", 10) == 0)
                {
d15213 1
a15213 1
return dev_storage + 348;
d15216 2
a15217 3
                }
              else
                {
d15223 2
a15224 2
            case 'h':
              if (strncmp (KR_keyword, "/dev/sdh11", 10) == 0)
d15226 3
d15230 1
a15230 1
return dev_storage + 333;
d15233 3
a15235 3
                }
              else
                {
d15240 4
a15243 4
                }
            case 'g':
              if (strncmp (KR_keyword, "/dev/sdg11", 10) == 0)
                {
d15245 1
a15245 1
return dev_storage + 318;
d15248 3
a15250 3
                }
              else
                {
d15255 4
a15258 4
                }
            case 'f':
              if (strncmp (KR_keyword, "/dev/sdf11", 10) == 0)
                {
d15260 1
a15260 1
return dev_storage + 303;
d15263 3
a15265 3
                }
              else
                {
d15270 11
a15280 4
                }
            case 'e':
              if (strncmp (KR_keyword, "/dev/sde11", 10) == 0)
                {
d15282 1
a15282 1
return dev_storage + 288;
d15285 2
a15286 3
                }
              else
                {
d15292 2
a15293 2
            case 'd':
              switch (KR_keyword [6])
d15296 1
a15296 1
                  if (strncmp (KR_keyword, "/dev/sdd11", 10) == 0)
d15299 1
a15299 1
return dev_storage + 273;
d15311 1
a15311 1
                  if (strncmp (KR_keyword, "/dev/scd11", 10) == 0)
d15314 1
a15314 1
return dev_storage + 187;
d15325 3
a15327 1
                default:
d15329 1
a15329 1
return	NULL;
d15332 3
a15334 4
                }
            case 'c':
              if (strncmp (KR_keyword, "/dev/sdc11", 10) == 0)
                {
d15336 1
a15336 1
return dev_storage + 258;
d15339 4
a15342 3
                }
              else
                {
d15344 1
a15344 1
return	NULL;
d15347 3
a15349 4
                }
            case 'b':
              if (strncmp (KR_keyword, "/dev/sdb11", 10) == 0)
                {
d15351 1
a15351 1
return dev_storage + 243;
d15354 2
a15355 3
                }
              else
                {
d15362 1
a15362 1
              if (strncmp (KR_keyword, "/dev/sda11", 10) == 0)
d15364 3
d15368 1
a15368 1
return dev_storage + 228;
d15371 3
a15373 3
                }
              else
                {
d15378 3
a15380 6
                }
            case '1':
              switch (KR_keyword [8])
                {
                case '2':
                  if (strncmp (KR_keyword, "/dev/st121", 10) == 0)
d15383 1
a15383 1
return dev_storage + 745;
d15394 2
a15395 2
                case '1':
                  if (strncmp (KR_keyword, "/dev/st111", 10) == 0)
d15398 1
a15398 1
return dev_storage + 735;
d15409 2
a15410 2
                case '0':
                  if (strncmp (KR_keyword, "/dev/st101", 10) == 0)
d15413 1
a15413 1
return dev_storage + 725;
d15430 10
a15439 1
            default:
d15444 3
a15446 6
            }
        case '0':
          switch (KR_keyword [7])
            {
            case 'z':
              if (strncmp (KR_keyword, "/dev/sdz10", 10) == 0)
d15449 1
a15449 1
return dev_storage + 602;
d15460 2
a15461 2
            case 'y':
              switch (KR_keyword [8])
a15462 3
                case 'S':
                  if (strncmp (KR_keyword, "/dev/ttyS0", 10) == 0)
                    {
d15464 1
a15464 1
return dev_storage + 817;
d15467 3
a15469 3
                    }
                  else
                    {
d15474 4
a15477 4
                    }
                case '6':
                  if (strncmp (KR_keyword, "/dev/tty60", 10) == 0)
                    {
d15479 1
a15479 1
return dev_storage + 813;
d15482 3
a15484 3
                    }
                  else
                    {
d15489 4
a15492 4
                    }
                case '5':
                  if (strncmp (KR_keyword, "/dev/tty50", 10) == 0)
                    {
d15494 1
a15494 1
return dev_storage + 803;
d15497 3
a15499 3
                    }
                  else
                    {
d15504 6
a15509 3
                    }
                case '4':
                  if (strncmp (KR_keyword, "/dev/tty40", 10) == 0)
d15512 1
a15512 1
return dev_storage + 793;
d15523 2
a15524 2
                case '3':
                  if (strncmp (KR_keyword, "/dev/tty30", 10) == 0)
d15527 1
a15527 1
return dev_storage + 783;
d15538 1
a15538 3
                case '2':
                  if (strncmp (KR_keyword, "/dev/tty20", 10) == 0)
                    {
d15540 12
a15551 1
return dev_storage + 773;
d15562 9
a15570 2
                case '1':
                  switch (KR_keyword [5])
a15571 3
                    case 't':
                      if (strncmp (KR_keyword, "/dev/tty10", 10) == 0)
                        {
d15573 1
a15573 1
return dev_storage + 763;
d15576 2
a15577 3
                        }
                      else
                        {
d15582 7
a15588 4
                        }
                    case 's':
                      if (strncmp (KR_keyword, "/dev/sdy10", 10) == 0)
                        {
d15590 1
a15590 1
return dev_storage + 587;
d15593 3
a15595 3
                        }
                      else
                        {
d15600 11
a15610 2
                        }
                    default:
d15622 2
a15623 2
            case 'x':
              if (strncmp (KR_keyword, "/dev/sdx10", 10) == 0)
d15625 31
d15657 1
a15657 1
return dev_storage + 572;
d15661 2
a15662 1
              else
d15664 10
d15678 4
a15681 4
                }
            case 'w':
              if (strncmp (KR_keyword, "/dev/sdw10", 10) == 0)
                {
d15683 1
a15683 1
return dev_storage + 557;
d15686 3
a15688 3
                }
              else
                {
d15693 11
a15703 4
                }
            case 'v':
              if (strncmp (KR_keyword, "/dev/sdv10", 10) == 0)
                {
d15705 1
a15705 1
return dev_storage + 542;
d15708 2
a15709 3
                }
              else
                {
d15715 2
a15716 2
            case 'u':
              if (strncmp (KR_keyword, "/dev/sdu10", 10) == 0)
d15719 1
a15719 1
return dev_storage + 527;
d15730 11
a15740 2
            case 't':
              switch (KR_keyword [8])
d15742 2
a15743 2
                case '9':
                  if (strncmp (KR_keyword, "/dev/nst90", 10) == 0)
d15746 1
a15746 1
return dev_storage + 133;
d15757 2
a15758 2
                case '8':
                  if (strncmp (KR_keyword, "/dev/nst80", 10) == 0)
d15761 1
a15761 1
return dev_storage + 123;
d15772 2
a15773 2
                case '7':
                  if (strncmp (KR_keyword, "/dev/nst70", 10) == 0)
d15776 1
a15776 1
return dev_storage + 113;
d15787 11
a15797 2
                case '6':
                  if (strncmp (KR_keyword, "/dev/nst60", 10) == 0)
d15800 1
a15800 1
return dev_storage + 103;
d15811 2
a15812 2
                case '5':
                  if (strncmp (KR_keyword, "/dev/nst50", 10) == 0)
d15815 1
a15815 1
return dev_storage + 93;
d15826 2
a15827 2
                case '4':
                  if (strncmp (KR_keyword, "/dev/nst40", 10) == 0)
d15830 1
a15830 1
return dev_storage + 83;
d15841 11
a15851 2
                case '3':
                  if (strncmp (KR_keyword, "/dev/nst30", 10) == 0)
d15854 1
a15854 1
return dev_storage + 73;
d15865 2
a15866 2
                case '2':
                  if (strncmp (KR_keyword, "/dev/nst20", 10) == 0)
d15869 1
a15869 1
return dev_storage + 63;
d15880 2
a15881 2
                case '1':
                  switch (KR_keyword [5])
a15882 3
                    case 's':
                      if (strncmp (KR_keyword, "/dev/sdt10", 10) == 0)
                        {
d15884 1
a15884 1
return dev_storage + 512;
d15887 3
a15889 3
                        }
                      else
                        {
d15894 4
a15897 4
                        }
                    case 'n':
                      if (strncmp (KR_keyword, "/dev/nst10", 10) == 0)
                        {
d15899 1
a15899 1
return dev_storage + 53;
d15902 3
a15904 9
                        }
                      else
                        {
{
return	NULL;

}
                        }
                    default:
d15916 2
a15917 2
            case 's':
              if (strncmp (KR_keyword, "/dev/sds10", 10) == 0)
d15919 3
d15923 1
a15923 1
return dev_storage + 497;
d15926 3
a15928 3
                }
              else
                {
d15933 7
a15939 7
                }
            case 'r':
              if (strncmp (KR_keyword, "/dev/sdr10", 10) == 0)
                {
{
return dev_storage + 482;

d15941 3
a15943 3
                }
              else
                {
d15948 4
a15951 4
                }
            case 'q':
              if (strncmp (KR_keyword, "/dev/sdq10", 10) == 0)
                {
d15953 1
a15953 1
return dev_storage + 467;
d15956 3
a15958 3
                }
              else
                {
d15963 4
a15966 4
                }
            case 'p':
              if (strncmp (KR_keyword, "/dev/sdp10", 10) == 0)
                {
d15968 1
a15968 1
return dev_storage + 452;
d15971 3
a15973 3
                }
              else
                {
d15978 2
a15979 11
                }
            case 'o':
              if (strncmp (KR_keyword, "/dev/sdo10", 10) == 0)
                {
{
return dev_storage + 437;

}
                }
              else
                {
d15985 2
a15986 2
            case 'n':
              if (strncmp (KR_keyword, "/dev/sdn10", 10) == 0)
d15988 2
a15989 17
{
return dev_storage + 422;

}
                }
              else
                {
{
return	NULL;

}
                }
            case 'm':
              switch (KR_keyword [5])
                {
                case 's':
                  if (strncmp (KR_keyword, "/dev/sdm10", 10) == 0)
d15992 1
a15992 1
return dev_storage + 407;
d16004 1
a16004 1
                  if (strncmp (KR_keyword, "/dev/com10", 10) == 0)
d16007 1
a16007 1
return dev_storage + 11;
d16018 3
a16020 1
                default:
d16022 1
a16022 1
return	NULL;
d16025 3
a16027 11
                }
            case 'l':
              if (strncmp (KR_keyword, "/dev/sdl10", 10) == 0)
                {
{
return dev_storage + 392;

}
                }
              else
                {
d16032 4
a16035 4
                }
            case 'k':
              if (strncmp (KR_keyword, "/dev/sdk10", 10) == 0)
                {
d16037 1
a16037 1
return dev_storage + 377;
d16040 3
a16042 3
                }
              else
                {
d16047 2
a16048 11
                }
            case 'j':
              if (strncmp (KR_keyword, "/dev/sdj10", 10) == 0)
                {
{
return dev_storage + 362;

}
                }
              else
                {
d16054 2
a16055 2
            case 'i':
              if (strncmp (KR_keyword, "/dev/sdi10", 10) == 0)
d16057 3
d16061 1
a16061 1
return dev_storage + 347;
d16064 3
a16066 3
                }
              else
                {
d16071 4
a16074 4
                }
            case 'h':
              if (strncmp (KR_keyword, "/dev/sdh10", 10) == 0)
                {
d16076 1
a16076 1
return dev_storage + 332;
d16079 3
a16081 3
                }
              else
                {
d16086 4
a16089 4
                }
            case 'g':
              if (strncmp (KR_keyword, "/dev/sdg10", 10) == 0)
                {
d16091 1
a16091 1
return dev_storage + 317;
d16094 3
a16096 3
                }
              else
                {
d16101 4
a16104 4
                }
            case 'f':
              if (strncmp (KR_keyword, "/dev/sdf10", 10) == 0)
                {
d16106 1
a16106 1
return dev_storage + 302;
d16109 3
a16111 3
                }
              else
                {
d16116 2
a16117 11
                }
            case 'e':
              if (strncmp (KR_keyword, "/dev/sde10", 10) == 0)
                {
{
return dev_storage + 287;

}
                }
              else
                {
d16123 2
a16124 2
            case 'd':
              switch (KR_keyword [6])
d16127 1
a16127 1
                  if (strncmp (KR_keyword, "/dev/sdd10", 10) == 0)
d16130 1
a16130 1
return dev_storage + 272;
d16142 1
a16142 1
                  if (strncmp (KR_keyword, "/dev/scd10", 10) == 0)
d16145 1
a16145 1
return dev_storage + 186;
d16156 3
a16158 1
                default:
d16160 1
a16160 1
return	NULL;
d16163 3
a16165 4
                }
            case 'c':
              if (strncmp (KR_keyword, "/dev/sdc10", 10) == 0)
                {
d16167 1
a16167 1
return dev_storage + 257;
d16170 4
a16173 3
                }
              else
                {
d16175 1
a16175 1
return	NULL;
d16178 3
a16180 4
                }
            case 'b':
              if (strncmp (KR_keyword, "/dev/sdb10", 10) == 0)
                {
d16182 1
a16182 1
return dev_storage + 242;
d16185 2
a16186 3
                }
              else
                {
d16192 2
a16193 2
            case 'a':
              if (strncmp (KR_keyword, "/dev/sda10", 10) == 0)
d16195 3
d16199 1
a16199 1
return dev_storage + 227;
d16202 3
a16204 3
                }
              else
                {
d16209 3
a16211 6
                }
            case '1':
              switch (KR_keyword [8])
                {
                case '2':
                  if (strncmp (KR_keyword, "/dev/st120", 10) == 0)
d16214 1
a16214 1
return dev_storage + 744;
d16225 2
a16226 2
                case '1':
                  if (strncmp (KR_keyword, "/dev/st110", 10) == 0)
d16229 1
a16229 1
return dev_storage + 734;
d16240 2
a16241 2
                case '0':
                  if (strncmp (KR_keyword, "/dev/st100", 10) == 0)
d16244 1
a16244 1
return dev_storage + 724;
d16261 6
a16266 1
            default:
d16268 1
a16268 1
return	NULL;
d16271 3
a16273 2
            }
        default:
d16278 4
a16281 7
        }
    case 11:
      switch (KR_keyword [9])
        {
        case 'u':
          if (strncmp (KR_keyword, "/dev/conout", 11) == 0)
            {
d16283 1
a16283 1
return dev_storage + 19;
d16286 3
a16288 3
            }
          else
            {
d16293 4
a16296 4
            }
        case 'o':
          if (strncmp (KR_keyword, "/dev/random", 11) == 0)
            {
d16298 1
a16298 1
return dev_storage + 175;
d16301 3
a16303 3
            }
          else
            {
d16308 11
a16318 7
            }
        case '6':
          switch (KR_keyword [10])
            {
            case '3':
              if (strncmp (KR_keyword, "/dev/ttyS63", 11) == 0)
                {
d16320 1
a16320 1
return dev_storage + 880;
d16323 2
a16324 3
                }
              else
                {
d16330 2
a16331 2
            case '2':
              if (strncmp (KR_keyword, "/dev/ttyS62", 11) == 0)
d16333 3
d16337 1
a16337 1
return dev_storage + 879;
d16340 3
a16342 3
                }
              else
                {
d16347 4
a16350 4
                }
            case '1':
              if (strncmp (KR_keyword, "/dev/ttyS61", 11) == 0)
                {
d16352 1
a16352 1
return dev_storage + 878;
d16355 3
a16357 3
                }
              else
                {
d16362 4
a16365 4
                }
            case '0':
              if (strncmp (KR_keyword, "/dev/ttyS60", 11) == 0)
                {
d16367 1
a16367 1
return dev_storage + 877;
d16370 3
a16372 3
                }
              else
                {
d16377 4
a16380 2
                }
            default:
d16382 1
a16382 1
return	NULL;
d16385 3
a16387 7
            }
        case '5':
          switch (KR_keyword [10])
            {
            case '9':
              if (strncmp (KR_keyword, "/dev/ttyS59", 11) == 0)
                {
d16389 1
a16389 1
return dev_storage + 876;
d16392 2
a16393 3
                }
              else
                {
d16399 2
a16400 2
            case '8':
              if (strncmp (KR_keyword, "/dev/ttyS58", 11) == 0)
d16402 3
d16406 1
a16406 1
return dev_storage + 875;
d16409 3
a16411 3
                }
              else
                {
d16416 4
a16419 4
                }
            case '7':
              if (strncmp (KR_keyword, "/dev/ttyS57", 11) == 0)
                {
d16421 1
a16421 1
return dev_storage + 874;
d16424 3
a16426 3
                }
              else
                {
d16431 4
a16434 4
                }
            case '6':
              if (strncmp (KR_keyword, "/dev/ttyS56", 11) == 0)
                {
d16436 1
a16436 1
return dev_storage + 873;
d16439 3
a16441 3
                }
              else
                {
d16446 11
a16456 4
                }
            case '5':
              if (strncmp (KR_keyword, "/dev/ttyS55", 11) == 0)
                {
d16458 1
a16458 1
return dev_storage + 872;
d16461 2
a16462 3
                }
              else
                {
d16468 2
a16469 2
            case '4':
              if (strncmp (KR_keyword, "/dev/ttyS54", 11) == 0)
d16471 3
d16475 1
a16475 1
return dev_storage + 871;
d16478 3
a16480 3
                }
              else
                {
d16485 4
a16488 4
                }
            case '3':
              if (strncmp (KR_keyword, "/dev/ttyS53", 11) == 0)
                {
d16490 1
a16490 1
return dev_storage + 870;
d16493 3
a16495 3
                }
              else
                {
d16500 4
a16503 4
                }
            case '2':
              if (strncmp (KR_keyword, "/dev/ttyS52", 11) == 0)
                {
d16505 1
a16505 1
return dev_storage + 869;
d16508 3
a16510 3
                }
              else
                {
d16515 4
a16518 4
                }
            case '1':
              if (strncmp (KR_keyword, "/dev/ttyS51", 11) == 0)
                {
d16520 1
a16520 1
return dev_storage + 868;
d16523 3
a16525 3
                }
              else
                {
d16530 2
a16531 4
                }
            case '0':
              if (strncmp (KR_keyword, "/dev/ttyS50", 11) == 0)
                {
d16533 1
a16533 1
return dev_storage + 867;
d16537 2
a16538 1
              else
d16540 3
d16544 1
a16544 1
return	NULL;
d16547 3
a16549 2
                }
            default:
d16554 4
a16557 7
            }
        case '4':
          switch (KR_keyword [10])
            {
            case '9':
              if (strncmp (KR_keyword, "/dev/ttyS49", 11) == 0)
                {
d16559 1
a16559 1
return dev_storage + 866;
d16562 39
a16600 3
                }
              else
                {
d16606 2
a16607 2
            case '8':
              if (strncmp (KR_keyword, "/dev/ttyS48", 11) == 0)
d16609 33
d16643 1
a16643 1
return dev_storage + 865;
d16646 3
a16648 3
                }
              else
                {
d16653 11
a16663 4
                }
            case '7':
              if (strncmp (KR_keyword, "/dev/ttyS47", 11) == 0)
                {
d16665 1
a16665 1
return dev_storage + 864;
d16668 2
a16669 3
                }
              else
                {
d16675 2
a16676 2
            case '6':
              if (strncmp (KR_keyword, "/dev/ttyS46", 11) == 0)
d16678 3
d16682 1
a16682 1
return dev_storage + 863;
d16685 3
a16687 3
                }
              else
                {
d16692 4
a16695 4
                }
            case '5':
              if (strncmp (KR_keyword, "/dev/ttyS45", 11) == 0)
                {
d16697 1
a16697 1
return dev_storage + 862;
d16700 3
a16702 3
                }
              else
                {
d16707 4
a16710 4
                }
            case '4':
              if (strncmp (KR_keyword, "/dev/ttyS44", 11) == 0)
                {
d16712 1
a16712 1
return dev_storage + 861;
d16715 3
a16717 3
                }
              else
                {
d16722 11
a16732 4
                }
            case '3':
              if (strncmp (KR_keyword, "/dev/ttyS43", 11) == 0)
                {
d16734 1
a16734 1
return dev_storage + 860;
d16737 2
a16738 3
                }
              else
                {
d16744 2
a16745 2
            case '2':
              if (strncmp (KR_keyword, "/dev/ttyS42", 11) == 0)
d16747 3
d16751 1
a16751 1
return dev_storage + 859;
d16754 3
a16756 3
                }
              else
                {
d16761 4
a16764 4
                }
            case '1':
              if (strncmp (KR_keyword, "/dev/ttyS41", 11) == 0)
                {
d16766 1
a16766 1
return dev_storage + 858;
d16769 3
a16771 3
                }
              else
                {
d16776 4
a16779 4
                }
            case '0':
              if (strncmp (KR_keyword, "/dev/ttyS40", 11) == 0)
                {
d16781 1
a16781 1
return dev_storage + 857;
d16784 3
a16786 3
                }
              else
                {
d16791 11
a16801 2
                }
            default:
d16806 2
a16807 7
            }
        case '3':
          switch (KR_keyword [10])
            {
            case '9':
              if (strncmp (KR_keyword, "/dev/ttyS39", 11) == 0)
                {
d16809 1
a16809 1
return dev_storage + 856;
d16813 2
a16814 1
              else
d16816 10
d16830 4
a16833 4
                }
            case '8':
              if (strncmp (KR_keyword, "/dev/ttyS38", 11) == 0)
                {
d16835 1
a16835 1
return dev_storage + 855;
d16838 3
a16840 3
                }
              else
                {
d16845 4
a16848 4
                }
            case '7':
              if (strncmp (KR_keyword, "/dev/ttyS37", 11) == 0)
                {
d16850 1
a16850 1
return dev_storage + 854;
d16853 3
a16855 3
                }
              else
                {
d16860 11
a16870 4
                }
            case '6':
              if (strncmp (KR_keyword, "/dev/ttyS36", 11) == 0)
                {
d16872 1
a16872 1
return dev_storage + 853;
d16875 2
a16876 3
                }
              else
                {
d16882 25223
a42104 2
            case '5':
              if (strncmp (KR_keyword, "/dev/ttyS35", 11) == 0)
d42106 228
d42335 6
a42340 6
return dev_storage + 852;

}
                }
              else
                {
d42345 4
a42348 4
                }
            case '4':
              if (strncmp (KR_keyword, "/dev/ttyS34", 11) == 0)
                {
d42350 1
a42350 1
return dev_storage + 851;
d42353 3
a42355 3
                }
              else
                {
d42360 4
a42363 4
                }
            case '3':
              if (strncmp (KR_keyword, "/dev/ttyS33", 11) == 0)
                {
d42365 1
a42365 1
return dev_storage + 850;
d42368 3
a42370 3
                }
              else
                {
d42375 4
a42378 4
                }
            case '2':
              if (strncmp (KR_keyword, "/dev/ttyS32", 11) == 0)
                {
d42380 1
a42380 1
return dev_storage + 849;
d42383 3
a42385 3
                }
              else
                {
d42390 4
a42393 4
                }
            case '1':
              if (strncmp (KR_keyword, "/dev/ttyS31", 11) == 0)
                {
d42395 1
a42395 1
return dev_storage + 848;
d42398 3
a42400 3
                }
              else
                {
d42405 4
a42408 4
                }
            case '0':
              if (strncmp (KR_keyword, "/dev/ttyS30", 11) == 0)
                {
d42410 1
a42410 1
return dev_storage + 847;
d42413 3
a42415 3
                }
              else
                {
d42420 11
a42430 2
                }
            default:
d42435 4
a42438 7
            }
        case '2':
          switch (KR_keyword [10])
            {
            case '9':
              if (strncmp (KR_keyword, "/dev/ttyS29", 11) == 0)
                {
d42440 1
a42440 1
return dev_storage + 846;
d42443 3
a42445 3
                }
              else
                {
d42450 4
a42453 4
                }
            case '8':
              if (strncmp (KR_keyword, "/dev/ttyS28", 11) == 0)
                {
d42455 1
a42455 1
return dev_storage + 845;
d42458 3
a42460 3
                }
              else
                {
d42465 3
a42467 6
                }
            case '7':
              switch (KR_keyword [5])
                {
                case 't':
                  if (strncmp (KR_keyword, "/dev/ttyS27", 11) == 0)
d42470 1
a42470 1
return dev_storage + 844;
d42481 2
a42482 2
                case 'n':
                  if (strncmp (KR_keyword, "/dev/nst127", 11) == 0)
d42485 1
a42485 1
return dev_storage + 170;
d42502 2
a42503 2
            case '6':
              switch (KR_keyword [5])
d42505 2
a42506 2
                case 't':
                  if (strncmp (KR_keyword, "/dev/ttyS26", 11) == 0)
d42509 1
a42509 1
return dev_storage + 843;
d42520 2
a42521 2
                case 'n':
                  if (strncmp (KR_keyword, "/dev/nst126", 11) == 0)
d42524 1
a42524 1
return dev_storage + 169;
d42535 10
a42544 1
                default:
d42549 3
a42551 6
                }
            case '5':
              switch (KR_keyword [5])
                {
                case 't':
                  if (strncmp (KR_keyword, "/dev/ttyS25", 11) == 0)
d42554 1
a42554 1
return dev_storage + 842;
d42565 2
a42566 2
                case 'n':
                  if (strncmp (KR_keyword, "/dev/nst125", 11) == 0)
d42569 1
a42569 1
return dev_storage + 168;
d42580 10
a42589 1
                default:
d42594 1
a42594 4
                }
            case '4':
              switch (KR_keyword [5])
                {
d42596 1
a42596 1
                  if (strncmp (KR_keyword, "/dev/ttyS24", 11) == 0)
d42599 1
a42599 1
return dev_storage + 841;
d42610 2
a42611 2
                case 'n':
                  if (strncmp (KR_keyword, "/dev/nst124", 11) == 0)
d42614 1
a42614 1
return dev_storage + 167;
d42625 10
a42634 1
                default:
d42639 3
a42641 6
                }
            case '3':
              switch (KR_keyword [5])
                {
                case 't':
                  if (strncmp (KR_keyword, "/dev/ttyS23", 11) == 0)
d42644 1
a42644 1
return dev_storage + 840;
d42655 2
a42656 2
                case 'n':
                  if (strncmp (KR_keyword, "/dev/nst123", 11) == 0)
d42659 1
a42659 1
return dev_storage + 166;
d42670 10
a42679 1
                default:
d42684 3
a42686 6
                }
            case '2':
              switch (KR_keyword [5])
                {
                case 't':
                  if (strncmp (KR_keyword, "/dev/ttyS22", 11) == 0)
d42689 1
a42689 1
return dev_storage + 839;
d42700 2
a42701 2
                case 'n':
                  if (strncmp (KR_keyword, "/dev/nst122", 11) == 0)
d42704 1
a42704 1
return dev_storage + 165;
d42715 10
a42724 1
                default:
d42729 3
a42731 6
                }
            case '1':
              switch (KR_keyword [5])
                {
                case 't':
                  if (strncmp (KR_keyword, "/dev/ttyS21", 11) == 0)
d42734 1
a42734 1
return dev_storage + 838;
d42745 2
a42746 2
                case 'n':
                  if (strncmp (KR_keyword, "/dev/nst121", 11) == 0)
d42749 1
a42749 1
return dev_storage + 164;
d42760 10
a42769 1
                default:
d42774 3
a42776 6
                }
            case '0':
              switch (KR_keyword [5])
                {
                case 't':
                  if (strncmp (KR_keyword, "/dev/ttyS20", 11) == 0)
d42779 1
a42779 1
return dev_storage + 837;
d42790 2
a42791 2
                case 'n':
                  if (strncmp (KR_keyword, "/dev/nst120", 11) == 0)
d42794 1
a42794 1
return dev_storage + 163;
d42805 3
a42807 1
                default:
d42809 1
a42809 1
return	NULL;
d42812 3
a42814 2
                }
            default:
d42819 3
a42821 9
            }
        case '1':
          switch (KR_keyword [5])
            {
            case 't':
              switch (KR_keyword [10])
                {
                case '9':
                  if (strncmp (KR_keyword, "/dev/ttyS19", 11) == 0)
d42824 1
a42824 1
return dev_storage + 836;
d42835 2
a42836 2
                case '8':
                  if (strncmp (KR_keyword, "/dev/ttyS18", 11) == 0)
d42839 1
a42839 1
return dev_storage + 835;
d42850 2
a42851 2
                case '7':
                  if (strncmp (KR_keyword, "/dev/ttyS17", 11) == 0)
d42854 1
a42854 1
return dev_storage + 834;
d42865 2
a42866 2
                case '6':
                  if (strncmp (KR_keyword, "/dev/ttyS16", 11) == 0)
d42869 1
a42869 1
return dev_storage + 833;
d42880 2
a42881 2
                case '5':
                  if (strncmp (KR_keyword, "/dev/ttyS15", 11) == 0)
d42884 1
a42884 1
return dev_storage + 832;
d42895 11
a42905 2
                case '4':
                  if (strncmp (KR_keyword, "/dev/ttyS14", 11) == 0)
d42908 1
a42908 1
return dev_storage + 831;
d42919 2
a42920 2
                case '3':
                  if (strncmp (KR_keyword, "/dev/ttyS13", 11) == 0)
d42923 1
a42923 1
return dev_storage + 830;
d42934 2
a42935 2
                case '2':
                  if (strncmp (KR_keyword, "/dev/ttyS12", 11) == 0)
d42938 1
a42938 1
return dev_storage + 829;
d42949 2
a42950 2
                case '1':
                  if (strncmp (KR_keyword, "/dev/ttyS11", 11) == 0)
d42953 1
a42953 1
return dev_storage + 828;
d42964 2
a42965 2
                case '0':
                  if (strncmp (KR_keyword, "/dev/ttyS10", 11) == 0)
d42968 1
a42968 1
return dev_storage + 827;
d42979 10
a42988 1
                default:
d42993 3
a42995 6
                }
            case 'n':
              switch (KR_keyword [10])
                {
                case '9':
                  if (strncmp (KR_keyword, "/dev/nst119", 11) == 0)
d42998 1
a42998 1
return dev_storage + 162;
d43009 2
a43010 2
                case '8':
                  if (strncmp (KR_keyword, "/dev/nst118", 11) == 0)
d43013 1
a43013 1
return dev_storage + 161;
d43024 2
a43025 2
                case '7':
                  if (strncmp (KR_keyword, "/dev/nst117", 11) == 0)
d43028 1
a43028 1
return dev_storage + 160;
d43039 2
a43040 2
                case '6':
                  if (strncmp (KR_keyword, "/dev/nst116", 11) == 0)
d43043 1
a43043 1
return dev_storage + 159;
d43054 2
a43055 2
                case '5':
                  if (strncmp (KR_keyword, "/dev/nst115", 11) == 0)
d43058 1
a43058 1
return dev_storage + 158;
d43069 2
a43070 2
                case '4':
                  if (strncmp (KR_keyword, "/dev/nst114", 11) == 0)
d43073 1
a43073 1
return dev_storage + 157;
d43084 2
a43085 2
                case '3':
                  if (strncmp (KR_keyword, "/dev/nst113", 11) == 0)
d43088 1
a43088 1
return dev_storage + 156;
d43099 2
a43100 2
                case '2':
                  if (strncmp (KR_keyword, "/dev/nst112", 11) == 0)
d43103 1
a43103 1
return dev_storage + 155;
d43114 2
a43115 2
                case '1':
                  if (strncmp (KR_keyword, "/dev/nst111", 11) == 0)
d43118 1
a43118 1
return dev_storage + 154;
d43129 2
a43130 2
                case '0':
                  if (strncmp (KR_keyword, "/dev/nst110", 11) == 0)
d43133 1
a43133 1
return dev_storage + 153;
d43144 3
a43146 1
                default:
d43148 1
a43148 1
return	NULL;
d43151 3
a43153 2
                }
            default:
d43158 4
a43161 7
            }
        case '0':
          switch (KR_keyword [10])
            {
            case '9':
              if (strncmp (KR_keyword, "/dev/nst109", 11) == 0)
                {
d43163 1
a43163 1
return dev_storage + 152;
d43166 3
a43168 3
                }
              else
                {
d43173 4
a43176 4
                }
            case '8':
              if (strncmp (KR_keyword, "/dev/nst108", 11) == 0)
                {
d43178 1
a43178 1
return dev_storage + 151;
d43181 3
a43183 3
                }
              else
                {
d43188 4
a43191 4
                }
            case '7':
              if (strncmp (KR_keyword, "/dev/nst107", 11) == 0)
                {
d43193 1
a43193 1
return dev_storage + 150;
d43196 3
a43198 3
                }
              else
                {
d43203 4
a43206 4
                }
            case '6':
              if (strncmp (KR_keyword, "/dev/nst106", 11) == 0)
                {
d43208 1
a43208 1
return dev_storage + 149;
d43211 3
a43213 3
                }
              else
                {
d43218 4
a43221 4
                }
            case '5':
              if (strncmp (KR_keyword, "/dev/nst105", 11) == 0)
                {
d43223 1
a43223 1
return dev_storage + 148;
d43226 3
a43228 3
                }
              else
                {
d43233 4
a43236 4
                }
            case '4':
              if (strncmp (KR_keyword, "/dev/nst104", 11) == 0)
                {
d43238 1
a43238 1
return dev_storage + 147;
d43241 3
a43243 3
                }
              else
                {
d43248 4
a43251 4
                }
            case '3':
              if (strncmp (KR_keyword, "/dev/nst103", 11) == 0)
                {
d43253 1
a43253 1
return dev_storage + 146;
d43256 3
a43258 3
                }
              else
                {
d43263 4
a43266 4
                }
            case '2':
              if (strncmp (KR_keyword, "/dev/nst102", 11) == 0)
                {
d43268 1
a43268 1
return dev_storage + 145;
d43271 3
a43273 3
                }
              else
                {
d43278 4
a43281 4
                }
            case '1':
              if (strncmp (KR_keyword, "/dev/nst101", 11) == 0)
                {
d43283 1
a43283 1
return dev_storage + 144;
d43286 3
a43288 3
                }
              else
                {
d43293 2
a43294 11
                }
            case '0':
              if (strncmp (KR_keyword, "/dev/nst100", 11) == 0)
                {
{
return dev_storage + 143;

}
                }
              else
                {
d43319 1
a43319 1
return dev_storage + 883;
d43334 1
a43334 1
return dev_storage + 882;
d43450 1
a43450 1
  if (drive < ('q' - 'a'))
d43452 1
a43452 1
  else
d43457 32
@


1.22
log
@* dcrt0.cc (do_exit): Rely on sigproc_terminate to set exit_state
appropriately.
* pinfo.cc (pinfo::exit): Always call sigproc_terminate here.  Rely on
sigproc_terminate to signal signal thread to handle eventual process exit.
* sigproc.cc (no_signals_available): Change criteria for determining if this
process can handle signals to itself.
(my_sendsig): New variable.  Copy of my sendsig handle.
(proc_can_be_signalled): Don't send signals if exit code is set.
(sigproc_terminate): Use and set exit_state appropriately to determine when to
do anything.  Send __SIGEXIT to self to control process exit.
(sig_send): Use my_sendsig for sending signals.  Don't call
proc_can_be_signalled for myself since the criteria is now different for
sending signals to myself.
(wait_sig): Copy myself->sendsig to my_sendsig for future use.  Exit signal
loop when __SIGEXIT is received.  Wait for main thread to exit and use its exit
status to actually exit process.
* sigproc.h (__SIGEXIT): New enum.
* dcrt0.cc (alloc_stack): Eliminate superfluous "return;".
* debug.cc (add_handle): Ditto.
* devices.in (device::parse): Ditto.
* dtable.cc (dtable::vfork_parent_restore): Ditto.
(dtable::vfork_child_fixup): Ditto.
* environ.cc (parse_options): Ditto.
* errno.cc (seterrno_from_win_error): Ditto.
* exceptions.cc (sig_handle_tty_stop): Ditto.
(set_signal_mask): Ditto.
* fhandler.cc (fhandler_base::read): Ditto.
(fhandler_base::operator delete): Ditto.
(fhandler_base::seekdir): Ditto.
(fhandler_base::rewinddir): Ditto.
* fhandler_console.cc (fhandler_console::read): Ditto.
(fhandler_console::fixup_after_exec): Ditto.
* sigproc.cc (sigproc_init): Ditto.
(sigproc_terminate): Ditto.

* devices.cc: Regenerate.
@
text
@d896 48
d951 1
a951 1
const device *ttym_dev = dev_storage + 833;
d953 1
a953 1
const device *urandom_dev = dev_storage + 834;
d2027 1
a2027 1
return dev_storage + 836;
d2066 1
a2066 1
return dev_storage + 833;
d14236 1
a14236 1
        case '2':
d14239 2
a14240 2
            case '7':
              if (strncmp (KR_keyword, "/dev/nst127", 11) == 0)
d14243 1
a14243 1
return dev_storage + 170;
d14254 2
a14255 2
            case '6':
              if (strncmp (KR_keyword, "/dev/nst126", 11) == 0)
d14258 1
a14258 1
return dev_storage + 169;
d14269 2
a14270 2
            case '5':
              if (strncmp (KR_keyword, "/dev/nst125", 11) == 0)
d14273 1
a14273 1
return dev_storage + 168;
d14284 2
a14285 2
            case '4':
              if (strncmp (KR_keyword, "/dev/nst124", 11) == 0)
d14288 1
a14288 1
return dev_storage + 167;
d14299 11
a14309 2
            case '3':
              if (strncmp (KR_keyword, "/dev/nst123", 11) == 0)
d14312 1
a14312 1
return dev_storage + 166;
d14323 2
a14324 2
            case '2':
              if (strncmp (KR_keyword, "/dev/nst122", 11) == 0)
d14327 1
a14327 1
return dev_storage + 165;
d14338 2
a14339 2
            case '1':
              if (strncmp (KR_keyword, "/dev/nst121", 11) == 0)
d14342 1
a14342 1
return dev_storage + 164;
d14353 2
a14354 2
            case '0':
              if (strncmp (KR_keyword, "/dev/nst120", 11) == 0)
d14357 1
a14357 1
return dev_storage + 163;
d14368 10
a14377 1
            default:
d14382 3
a14384 6
            }
        case '1':
          switch (KR_keyword [10])
            {
            case '9':
              if (strncmp (KR_keyword, "/dev/nst119", 11) == 0)
d14387 1
a14387 1
return dev_storage + 162;
d14398 2
a14399 2
            case '8':
              if (strncmp (KR_keyword, "/dev/nst118", 11) == 0)
d14402 1
a14402 1
return dev_storage + 161;
d14413 2
a14414 2
            case '7':
              if (strncmp (KR_keyword, "/dev/nst117", 11) == 0)
d14417 1
a14417 1
return dev_storage + 160;
d14428 2
a14429 2
            case '6':
              if (strncmp (KR_keyword, "/dev/nst116", 11) == 0)
d14432 1
a14432 1
return dev_storage + 159;
d14443 2
a14444 2
            case '5':
              switch (KR_keyword [5])
a14445 3
                case 't':
                  if (strncmp (KR_keyword, "/dev/ttyS15", 11) == 0)
                    {
d14447 1
a14447 1
return dev_storage + 832;
d14450 3
a14452 3
                    }
                  else
                    {
d14457 2
a14458 4
                    }
                case 'n':
                  if (strncmp (KR_keyword, "/dev/nst115", 11) == 0)
                    {
d14460 1
a14460 1
return dev_storage + 158;
d14463 7
a14469 3
                    }
                  else
                    {
d14471 1
a14471 1
return	NULL;
d14474 3
a14476 2
                    }
                default:
d14482 2
a14483 2
            case '4':
              switch (KR_keyword [5])
a14484 3
                case 't':
                  if (strncmp (KR_keyword, "/dev/ttyS14", 11) == 0)
                    {
d14486 1
a14486 1
return dev_storage + 831;
d14489 3
a14491 3
                    }
                  else
                    {
d14496 4
a14499 4
                    }
                case 'n':
                  if (strncmp (KR_keyword, "/dev/nst114", 11) == 0)
                    {
d14501 1
a14501 1
return dev_storage + 157;
d14504 3
a14506 3
                    }
                  else
                    {
d14511 11
a14521 2
                    }
                default:
d14527 2
a14528 2
            case '3':
              switch (KR_keyword [5])
a14529 3
                case 't':
                  if (strncmp (KR_keyword, "/dev/ttyS13", 11) == 0)
                    {
d14531 1
a14531 1
return dev_storage + 830;
d14534 3
a14536 3
                    }
                  else
                    {
d14541 4
a14544 4
                    }
                case 'n':
                  if (strncmp (KR_keyword, "/dev/nst113", 11) == 0)
                    {
d14546 1
a14546 1
return dev_storage + 156;
d14549 3
a14551 3
                    }
                  else
                    {
d14556 11
a14566 2
                    }
                default:
d14573 1
a14573 1
              switch (KR_keyword [5])
a14574 3
                case 't':
                  if (strncmp (KR_keyword, "/dev/ttyS12", 11) == 0)
                    {
d14576 1
a14576 1
return dev_storage + 829;
d14579 3
a14581 3
                    }
                  else
                    {
d14586 4
a14589 4
                    }
                case 'n':
                  if (strncmp (KR_keyword, "/dev/nst112", 11) == 0)
                    {
d14591 1
a14591 1
return dev_storage + 155;
d14594 3
a14596 3
                    }
                  else
                    {
d14601 4
a14604 2
                    }
                default:
d14606 1
a14606 1
return	NULL;
d14610 1
a14610 2
            case '1':
              switch (KR_keyword [5])
a14611 3
                case 't':
                  if (strncmp (KR_keyword, "/dev/ttyS11", 11) == 0)
                    {
d14613 1
a14613 1
return dev_storage + 828;
d14616 2
a14617 3
                    }
                  else
                    {
d14622 7
a14628 4
                    }
                case 'n':
                  if (strncmp (KR_keyword, "/dev/nst111", 11) == 0)
                    {
d14630 1
a14630 1
return dev_storage + 154;
d14633 3
a14635 3
                    }
                  else
                    {
d14640 11
a14650 2
                    }
                default:
d14656 2
a14657 2
            case '0':
              switch (KR_keyword [5])
a14658 3
                case 't':
                  if (strncmp (KR_keyword, "/dev/ttyS10", 11) == 0)
                    {
d14660 703
a15362 1
return dev_storage + 827;
d15373 61
a15433 1
                case 'n':
d15632 1
a15632 1
return dev_storage + 835;
d15647 1
a15647 1
return dev_storage + 834;
@


1.21
log
@* cygheap.h (cygheap_types): Add HEAP_COMMUNE.
* fhandler_proc.cc: Use cygheap rather than user heap for allocation of filebuf
throughout.
* fhandler_registry.cc: Ditto.
* fhandler_virtual.cc: Ditto.
* fhandler_process.cc: Ditto.
(get_mem_values): Use malloc/realloc/free rather than new.
* pinfo.cc (_pinfo::commune_send): Allocate on cygwin heap rather than user
heap.  Avoid calling ReadFile when correct number of characters have been read
or suffer buffer corruption.
(_pinfo::fd): Allocate on cygwin heap rather than user heap.
(_pinfo::fds): Ditto.
(_pinfo::root): Ditto.
(_pinfo::cwd): Ditto.
(_pinfo::cmdline): Ditto.
* devices.h (FH_DEV): New define.
* devices.in: Detect lone /dev.
* devices.cc: Regenerate.
* path.cc (path_conv::check): Treat FH_DEV as a special case.
@
text
@a14901 1
  return;
@


1.20
log
@	* Makefile.in (DLL_OFILES): Add fhandler_mailslot.o.
	* devices.h (FH_KMSG): Define new device.
	* devices.in: Add "/dev/kmsg" entry.
	* devices.cc: Regenerate.
	* dtable.cc (build_fh_pc): Handle case FH_KMSG.
	* fhandler.h (class fhandler_mailslot): New class.
	(class select_stuff): Add device_specific_mailslot pointer.
	* fhandler_mailslot.cc: New file.
	* select.cc (peek_mailslot): New function.
	(verify_mailslot): Ditto.
	(struct mailslotinf): New stuct to handle select on mailslots.
	(thread_mailslot): New function.
	(start_thread_mailslot): Ditto.
	(mailslot_cleanup): Ditto.
	(fhandler_mailslot::select_read): New method.
	* syslog.cc (klog_guard): New muto.
	(dev_kmsg): Local mailslot for kernel message device.
	(vklog): New function.
	(klog): Ditto.
	* winsup.h (vklog): Declare.
	(klog): Ditto.
	* include/sys/syslog.h: Define _PATH_KLOG.
@
text
@d31 5
d63 1
d902 4
a905 4
const device *console_dev = dev_storage + 19;
const device *ttym_dev = dev_storage + 832;
const device *ttys_dev = dev_storage + 752;
const device *urandom_dev = dev_storage + 833;
d913 15
d935 1
a935 1
return dev_storage + 216;
d953 1
a953 1
return dev_storage + 751;
d968 1
a968 1
return dev_storage + 215;
d989 1
a989 1
return dev_storage + 214;
d1004 1
a1004 1
return dev_storage + 213;
d1019 1
a1019 1
return dev_storage + 212;
d1034 1
a1034 1
return dev_storage + 211;
d1049 1
a1049 1
return dev_storage + 210;
d1064 1
a1064 1
return dev_storage + 209;
d1079 1
a1079 1
return dev_storage + 208;
d1094 1
a1094 1
return dev_storage + 207;
d1112 1
a1112 1
return dev_storage + 206;
d1127 1
a1127 1
return dev_storage + 20;
d1148 1
a1148 1
return dev_storage + 205;
d1163 1
a1163 1
return dev_storage + 204;
d1181 1
a1181 1
return dev_storage + 203;
d1196 1
a1196 1
return dev_storage + 41;
d1217 1
a1217 1
return dev_storage + 202;
d1232 1
a1232 1
return dev_storage + 201;
d1247 1
a1247 1
return dev_storage + 200;
d1262 1
a1262 1
return dev_storage + 199;
d1277 1
a1277 1
return dev_storage + 198;
d1292 1
a1292 1
return dev_storage + 197;
d1307 1
a1307 1
return dev_storage + 196;
d1322 1
a1322 1
return dev_storage + 195;
d1337 1
a1337 1
return dev_storage + 194;
d1352 1
a1352 1
return dev_storage + 193;
d1367 1
a1367 1
return dev_storage + 192;
d1382 1
a1382 1
return dev_storage + 191;
d1400 1
a1400 1
return dev_storage + 632;
d1415 1
a1415 1
return dev_storage + 616;
d1430 1
a1430 1
return dev_storage + 30;
d1454 1
a1454 1
return dev_storage + 631;
d1469 1
a1469 1
return dev_storage + 615;
d1484 1
a1484 1
return dev_storage + 29;
d1508 1
a1508 1
return dev_storage + 630;
d1523 1
a1523 1
return dev_storage + 614;
d1538 1
a1538 1
return dev_storage + 28;
d1562 1
a1562 1
return dev_storage + 629;
d1577 1
a1577 1
return dev_storage + 613;
d1592 1
a1592 1
return dev_storage + 27;
d1616 1
a1616 1
return dev_storage + 628;
d1631 1
a1631 1
return dev_storage + 612;
d1646 1
a1646 1
return dev_storage + 26;
d1670 1
a1670 1
return dev_storage + 627;
d1685 1
a1685 1
return dev_storage + 611;
d1700 1
a1700 1
return dev_storage + 25;
d1724 1
a1724 1
return dev_storage + 626;
d1739 1
a1739 1
return dev_storage + 610;
d1754 1
a1754 1
return dev_storage + 24;
d1778 1
a1778 1
return dev_storage + 625;
d1793 1
a1793 1
return dev_storage + 609;
d1808 1
a1808 1
return dev_storage + 23;
d1832 1
a1832 1
return dev_storage + 624;
d1847 1
a1847 1
return dev_storage + 608;
d1862 1
a1862 1
return dev_storage + 22;
d1886 1
a1886 1
return dev_storage + 623;
d1901 1
a1901 1
return dev_storage + 607;
d1916 1
a1916 1
return dev_storage + 21;
d1946 1
a1946 1
return dev_storage + 173;
d1961 1
a1961 1
return dev_storage + 172;
d1979 1
a1979 1
return dev_storage + 835;
d1994 1
a1994 1
return dev_storage + 37;
d2018 1
a2018 1
return dev_storage + 832;
d2033 1
a2033 1
return dev_storage + 39;
d2057 1
a2057 1
return dev_storage + 170;
d2072 1
a2072 1
return dev_storage + 38;
d2093 1
a2093 1
return dev_storage + 40;
d2108 1
a2108 1
return dev_storage + 171;
d2126 1
a2126 1
return dev_storage + 600;
d2144 1
a2144 1
return dev_storage + 761;
d2159 1
a2159 1
return dev_storage + 585;
d2180 1
a2180 1
return dev_storage + 570;
d2195 1
a2195 1
return dev_storage + 555;
d2210 1
a2210 1
return dev_storage + 540;
d2225 1
a2225 1
return dev_storage + 525;
d2243 1
a2243 1
return dev_storage + 510;
d2258 1
a2258 1
return dev_storage + 51;
d2279 1
a2279 1
return dev_storage + 495;
d2294 1
a2294 1
return dev_storage + 480;
d2309 1
a2309 1
return dev_storage + 465;
d2324 1
a2324 1
return dev_storage + 450;
d2339 1
a2339 1
return dev_storage + 435;
d2354 1
a2354 1
return dev_storage + 420;
d2372 1
a2372 1
return dev_storage + 405;
d2387 1
a2387 1
return dev_storage + 9;
d2408 1
a2408 1
return dev_storage + 390;
d2423 1
a2423 1
return dev_storage + 375;
d2438 1
a2438 1
return dev_storage + 360;
d2453 1
a2453 1
return dev_storage + 345;
d2468 1
a2468 1
return dev_storage + 330;
d2483 1
a2483 1
return dev_storage + 315;
d2498 1
a2498 1
return dev_storage + 300;
d2513 1
a2513 1
return dev_storage + 285;
d2531 1
a2531 1
return dev_storage + 270;
d2546 1
a2546 1
return dev_storage + 184;
d2567 1
a2567 1
return dev_storage + 255;
d2582 1
a2582 1
return dev_storage + 240;
d2597 1
a2597 1
return dev_storage + 225;
d2612 1
a2612 1
return dev_storage + 722;
d2627 1
a2627 1
return dev_storage + 712;
d2642 1
a2642 1
return dev_storage + 702;
d2657 1
a2657 1
return dev_storage + 692;
d2672 1
a2672 1
return dev_storage + 682;
d2687 1
a2687 1
return dev_storage + 672;
d2702 1
a2702 1
return dev_storage + 662;
d2717 1
a2717 1
return dev_storage + 652;
d2732 1
a2732 1
return dev_storage + 642;
d2756 1
a2756 1
return dev_storage + 599;
d2774 1
a2774 1
return dev_storage + 760;
d2789 1
a2789 1
return dev_storage + 584;
d2810 1
a2810 1
return dev_storage + 569;
d2825 1
a2825 1
return dev_storage + 554;
d2840 1
a2840 1
return dev_storage + 539;
d2855 1
a2855 1
return dev_storage + 524;
d2873 1
a2873 1
return dev_storage + 509;
d2888 1
a2888 1
return dev_storage + 50;
d2909 1
a2909 1
return dev_storage + 494;
d2924 1
a2924 1
return dev_storage + 479;
d2939 1
a2939 1
return dev_storage + 464;
d2954 1
a2954 1
return dev_storage + 449;
d2969 1
a2969 1
return dev_storage + 434;
d2984 1
a2984 1
return dev_storage + 419;
d3002 1
a3002 1
return dev_storage + 404;
d3017 1
a3017 1
return dev_storage + 8;
d3038 1
a3038 1
return dev_storage + 389;
d3053 1
a3053 1
return dev_storage + 374;
d3068 1
a3068 1
return dev_storage + 359;
d3083 1
a3083 1
return dev_storage + 344;
d3098 1
a3098 1
return dev_storage + 329;
d3113 1
a3113 1
return dev_storage + 314;
d3128 1
a3128 1
return dev_storage + 299;
d3143 1
a3143 1
return dev_storage + 284;
d3161 1
a3161 1
return dev_storage + 269;
d3176 1
a3176 1
return dev_storage + 183;
d3197 1
a3197 1
return dev_storage + 254;
d3212 1
a3212 1
return dev_storage + 239;
d3227 1
a3227 1
return dev_storage + 224;
d3242 1
a3242 1
return dev_storage + 721;
d3257 1
a3257 1
return dev_storage + 711;
d3272 1
a3272 1
return dev_storage + 701;
d3287 1
a3287 1
return dev_storage + 691;
d3302 1
a3302 1
return dev_storage + 681;
d3317 1
a3317 1
return dev_storage + 671;
d3332 1
a3332 1
return dev_storage + 661;
d3347 1
a3347 1
return dev_storage + 651;
d3362 1
a3362 1
return dev_storage + 641;
d3386 1
a3386 1
return dev_storage + 598;
d3404 1
a3404 1
return dev_storage + 759;
d3419 1
a3419 1
return dev_storage + 583;
d3440 1
a3440 1
return dev_storage + 568;
d3455 1
a3455 1
return dev_storage + 553;
d3470 1
a3470 1
return dev_storage + 538;
d3485 1
a3485 1
return dev_storage + 523;
d3503 1
a3503 1
return dev_storage + 508;
d3518 1
a3518 1
return dev_storage + 49;
d3539 1
a3539 1
return dev_storage + 493;
d3554 1
a3554 1
return dev_storage + 478;
d3569 1
a3569 1
return dev_storage + 463;
d3584 1
a3584 1
return dev_storage + 448;
d3599 1
a3599 1
return dev_storage + 433;
d3614 1
a3614 1
return dev_storage + 418;
d3632 1
a3632 1
return dev_storage + 403;
d3647 1
a3647 1
return dev_storage + 7;
d3668 1
a3668 1
return dev_storage + 388;
d3683 1
a3683 1
return dev_storage + 373;
d3698 1
a3698 1
return dev_storage + 358;
d3713 1
a3713 1
return dev_storage + 343;
d3728 1
a3728 1
return dev_storage + 328;
d3743 1
a3743 1
return dev_storage + 313;
d3758 1
a3758 1
return dev_storage + 298;
d3773 1
a3773 1
return dev_storage + 283;
d3791 1
a3791 1
return dev_storage + 268;
d3806 1
a3806 1
return dev_storage + 182;
d3827 1
a3827 1
return dev_storage + 253;
d3842 1
a3842 1
return dev_storage + 238;
d3857 1
a3857 1
return dev_storage + 223;
d3872 1
a3872 1
return dev_storage + 720;
d3887 1
a3887 1
return dev_storage + 710;
d3902 1
a3902 1
return dev_storage + 700;
d3917 1
a3917 1
return dev_storage + 690;
d3932 1
a3932 1
return dev_storage + 680;
d3947 1
a3947 1
return dev_storage + 670;
d3962 1
a3962 1
return dev_storage + 660;
d3977 1
a3977 1
return dev_storage + 650;
d3992 1
a3992 1
return dev_storage + 640;
d4016 1
a4016 1
return dev_storage + 597;
d4034 1
a4034 1
return dev_storage + 758;
d4049 1
a4049 1
return dev_storage + 582;
d4070 1
a4070 1
return dev_storage + 567;
d4085 1
a4085 1
return dev_storage + 552;
d4100 1
a4100 1
return dev_storage + 537;
d4115 1
a4115 1
return dev_storage + 522;
d4133 1
a4133 1
return dev_storage + 507;
d4148 1
a4148 1
return dev_storage + 48;
d4169 1
a4169 1
return dev_storage + 492;
d4184 1
a4184 1
return dev_storage + 477;
d4199 1
a4199 1
return dev_storage + 462;
d4214 1
a4214 1
return dev_storage + 447;
d4229 1
a4229 1
return dev_storage + 432;
d4244 1
a4244 1
return dev_storage + 417;
d4262 1
a4262 1
return dev_storage + 402;
d4277 1
a4277 1
return dev_storage + 6;
d4298 1
a4298 1
return dev_storage + 387;
d4313 1
a4313 1
return dev_storage + 372;
d4328 1
a4328 1
return dev_storage + 357;
d4343 1
a4343 1
return dev_storage + 342;
d4358 1
a4358 1
return dev_storage + 327;
d4373 1
a4373 1
return dev_storage + 312;
d4388 1
a4388 1
return dev_storage + 297;
d4403 1
a4403 1
return dev_storage + 282;
d4421 1
a4421 1
return dev_storage + 267;
d4436 1
a4436 1
return dev_storage + 181;
d4457 1
a4457 1
return dev_storage + 252;
d4472 1
a4472 1
return dev_storage + 237;
d4487 1
a4487 1
return dev_storage + 222;
d4502 1
a4502 1
return dev_storage + 719;
d4517 1
a4517 1
return dev_storage + 709;
d4532 1
a4532 1
return dev_storage + 699;
d4547 1
a4547 1
return dev_storage + 689;
d4562 1
a4562 1
return dev_storage + 679;
d4577 1
a4577 1
return dev_storage + 669;
d4592 1
a4592 1
return dev_storage + 659;
d4607 1
a4607 1
return dev_storage + 649;
d4622 1
a4622 1
return dev_storage + 639;
d4646 1
a4646 1
return dev_storage + 596;
d4664 1
a4664 1
return dev_storage + 757;
d4679 1
a4679 1
return dev_storage + 581;
d4700 1
a4700 1
return dev_storage + 566;
d4715 1
a4715 1
return dev_storage + 551;
d4730 1
a4730 1
return dev_storage + 536;
d4745 1
a4745 1
return dev_storage + 521;
d4763 1
a4763 1
return dev_storage + 506;
d4778 1
a4778 1
return dev_storage + 47;
d4799 1
a4799 1
return dev_storage + 491;
d4814 1
a4814 1
return dev_storage + 476;
d4829 1
a4829 1
return dev_storage + 461;
d4844 1
a4844 1
return dev_storage + 446;
d4859 1
a4859 1
return dev_storage + 431;
d4874 1
a4874 1
return dev_storage + 416;
d4892 1
a4892 1
return dev_storage + 401;
d4907 1
a4907 1
return dev_storage + 5;
d4928 1
a4928 1
return dev_storage + 386;
d4943 1
a4943 1
return dev_storage + 371;
d4958 1
a4958 1
return dev_storage + 356;
d4973 1
a4973 1
return dev_storage + 341;
d4988 1
a4988 1
return dev_storage + 326;
d5003 1
a5003 1
return dev_storage + 311;
d5018 1
a5018 1
return dev_storage + 296;
d5033 1
a5033 1
return dev_storage + 281;
d5051 1
a5051 1
return dev_storage + 266;
d5066 1
a5066 1
return dev_storage + 180;
d5087 1
a5087 1
return dev_storage + 251;
d5102 1
a5102 1
return dev_storage + 236;
d5117 1
a5117 1
return dev_storage + 221;
d5132 1
a5132 1
return dev_storage + 718;
d5147 1
a5147 1
return dev_storage + 708;
d5162 1
a5162 1
return dev_storage + 698;
d5177 1
a5177 1
return dev_storage + 688;
d5192 1
a5192 1
return dev_storage + 678;
d5207 1
a5207 1
return dev_storage + 668;
d5222 1
a5222 1
return dev_storage + 658;
d5237 1
a5237 1
return dev_storage + 648;
d5255 1
a5255 1
return dev_storage + 638;
d5270 1
a5270 1
return dev_storage + 622;
d5285 1
a5285 1
return dev_storage + 36;
d5315 1
a5315 1
return dev_storage + 595;
d5333 1
a5333 1
return dev_storage + 756;
d5348 1
a5348 1
return dev_storage + 580;
d5369 1
a5369 1
return dev_storage + 565;
d5384 1
a5384 1
return dev_storage + 550;
d5399 1
a5399 1
return dev_storage + 535;
d5414 1
a5414 1
return dev_storage + 520;
d5432 1
a5432 1
return dev_storage + 505;
d5447 1
a5447 1
return dev_storage + 46;
d5468 1
a5468 1
return dev_storage + 490;
d5483 1
a5483 1
return dev_storage + 475;
d5498 1
a5498 1
return dev_storage + 460;
d5513 1
a5513 1
return dev_storage + 445;
d5528 1
a5528 1
return dev_storage + 430;
d5543 1
a5543 1
return dev_storage + 415;
d5561 1
a5561 1
return dev_storage + 400;
d5576 1
a5576 1
return dev_storage + 4;
d5597 1
a5597 1
return dev_storage + 385;
d5612 1
a5612 1
return dev_storage + 370;
d5627 1
a5627 1
return dev_storage + 355;
d5642 1
a5642 1
return dev_storage + 340;
d5657 1
a5657 1
return dev_storage + 325;
d5672 1
a5672 1
return dev_storage + 310;
d5687 1
a5687 1
return dev_storage + 295;
d5702 1
a5702 1
return dev_storage + 280;
d5720 1
a5720 1
return dev_storage + 265;
d5735 1
a5735 1
return dev_storage + 179;
d5756 1
a5756 1
return dev_storage + 250;
d5771 1
a5771 1
return dev_storage + 235;
d5786 1
a5786 1
return dev_storage + 220;
d5801 1
a5801 1
return dev_storage + 717;
d5816 1
a5816 1
return dev_storage + 707;
d5831 1
a5831 1
return dev_storage + 697;
d5846 1
a5846 1
return dev_storage + 687;
d5861 1
a5861 1
return dev_storage + 677;
d5876 1
a5876 1
return dev_storage + 667;
d5891 1
a5891 1
return dev_storage + 657;
d5906 1
a5906 1
return dev_storage + 647;
d5924 1
a5924 1
return dev_storage + 637;
d5939 1
a5939 1
return dev_storage + 621;
d5954 1
a5954 1
return dev_storage + 35;
d5984 1
a5984 1
return dev_storage + 594;
d6002 1
a6002 1
return dev_storage + 755;
d6017 1
a6017 1
return dev_storage + 579;
d6038 1
a6038 1
return dev_storage + 564;
d6053 1
a6053 1
return dev_storage + 549;
d6068 1
a6068 1
return dev_storage + 534;
d6083 1
a6083 1
return dev_storage + 519;
d6101 1
a6101 1
return dev_storage + 504;
d6116 1
a6116 1
return dev_storage + 45;
d6137 1
a6137 1
return dev_storage + 489;
d6152 1
a6152 1
return dev_storage + 474;
d6167 1
a6167 1
return dev_storage + 459;
d6182 1
a6182 1
return dev_storage + 444;
d6197 1
a6197 1
return dev_storage + 429;
d6212 1
a6212 1
return dev_storage + 414;
d6230 1
a6230 1
return dev_storage + 399;
d6245 1
a6245 1
return dev_storage + 3;
d6266 1
a6266 1
return dev_storage + 384;
d6281 1
a6281 1
return dev_storage + 369;
d6296 1
a6296 1
return dev_storage + 354;
d6311 1
a6311 1
return dev_storage + 339;
d6326 1
a6326 1
return dev_storage + 324;
d6341 1
a6341 1
return dev_storage + 309;
d6356 1
a6356 1
return dev_storage + 294;
d6371 1
a6371 1
return dev_storage + 279;
d6389 1
a6389 1
return dev_storage + 264;
d6404 1
a6404 1
return dev_storage + 178;
d6425 1
a6425 1
return dev_storage + 249;
d6440 1
a6440 1
return dev_storage + 234;
d6455 1
a6455 1
return dev_storage + 219;
d6470 1
a6470 1
return dev_storage + 716;
d6485 1
a6485 1
return dev_storage + 706;
d6500 1
a6500 1
return dev_storage + 696;
d6515 1
a6515 1
return dev_storage + 686;
d6530 1
a6530 1
return dev_storage + 676;
d6545 1
a6545 1
return dev_storage + 666;
d6560 1
a6560 1
return dev_storage + 656;
d6575 1
a6575 1
return dev_storage + 646;
d6593 1
a6593 1
return dev_storage + 636;
d6608 1
a6608 1
return dev_storage + 620;
d6623 1
a6623 1
return dev_storage + 34;
d6653 1
a6653 1
return dev_storage + 593;
d6671 1
a6671 1
return dev_storage + 754;
d6686 1
a6686 1
return dev_storage + 578;
d6707 1
a6707 1
return dev_storage + 563;
d6722 1
a6722 1
return dev_storage + 548;
d6737 1
a6737 1
return dev_storage + 533;
d6752 1
a6752 1
return dev_storage + 518;
d6770 1
a6770 1
return dev_storage + 503;
d6785 1
a6785 1
return dev_storage + 44;
d6806 1
a6806 1
return dev_storage + 488;
d6821 1
a6821 1
return dev_storage + 473;
d6836 1
a6836 1
return dev_storage + 458;
d6851 1
a6851 1
return dev_storage + 443;
d6866 1
a6866 1
return dev_storage + 428;
d6881 1
a6881 1
return dev_storage + 413;
d6899 1
a6899 1
return dev_storage + 398;
d6914 1
a6914 1
return dev_storage + 2;
d6935 1
a6935 1
return dev_storage + 383;
d6950 1
a6950 1
return dev_storage + 368;
d6965 1
a6965 1
return dev_storage + 353;
d6980 1
a6980 1
return dev_storage + 338;
d6995 1
a6995 1
return dev_storage + 323;
d7010 1
a7010 1
return dev_storage + 308;
d7025 1
a7025 1
return dev_storage + 293;
d7040 1
a7040 1
return dev_storage + 278;
d7058 1
a7058 1
return dev_storage + 263;
d7073 1
a7073 1
return dev_storage + 177;
d7094 1
a7094 1
return dev_storage + 248;
d7109 1
a7109 1
return dev_storage + 233;
d7124 1
a7124 1
return dev_storage + 218;
d7139 1
a7139 1
return dev_storage + 715;
d7154 1
a7154 1
return dev_storage + 705;
d7169 1
a7169 1
return dev_storage + 695;
d7184 1
a7184 1
return dev_storage + 685;
d7199 1
a7199 1
return dev_storage + 675;
d7214 1
a7214 1
return dev_storage + 665;
d7229 1
a7229 1
return dev_storage + 655;
d7244 1
a7244 1
return dev_storage + 645;
d7262 1
a7262 1
return dev_storage + 635;
d7277 1
a7277 1
return dev_storage + 619;
d7292 1
a7292 1
return dev_storage + 33;
d7322 1
a7322 1
return dev_storage + 592;
d7340 1
a7340 1
return dev_storage + 753;
d7355 1
a7355 1
return dev_storage + 577;
d7376 1
a7376 1
return dev_storage + 562;
d7391 1
a7391 1
return dev_storage + 547;
d7406 1
a7406 1
return dev_storage + 532;
d7421 1
a7421 1
return dev_storage + 517;
d7439 1
a7439 1
return dev_storage + 502;
d7454 1
a7454 1
return dev_storage + 43;
d7475 1
a7475 1
return dev_storage + 487;
d7490 1
a7490 1
return dev_storage + 472;
d7505 1
a7505 1
return dev_storage + 457;
d7520 1
a7520 1
return dev_storage + 442;
d7535 1
a7535 1
return dev_storage + 427;
d7550 1
a7550 1
return dev_storage + 412;
d7568 1
a7568 1
return dev_storage + 397;
d7583 1
a7583 1
return dev_storage + 1;
d7604 1
a7604 1
return dev_storage + 382;
d7619 1
a7619 1
return dev_storage + 367;
d7634 1
a7634 1
return dev_storage + 352;
d7649 1
a7649 1
return dev_storage + 337;
d7664 1
a7664 1
return dev_storage + 322;
d7679 1
a7679 1
return dev_storage + 307;
d7694 1
a7694 1
return dev_storage + 292;
d7709 1
a7709 1
return dev_storage + 277;
d7727 1
a7727 1
return dev_storage + 262;
d7742 1
a7742 1
return dev_storage + 176;
d7763 1
a7763 1
return dev_storage + 247;
d7778 1
a7778 1
return dev_storage + 232;
d7793 1
a7793 1
return dev_storage + 217;
d7808 1
a7808 1
return dev_storage + 714;
d7823 1
a7823 1
return dev_storage + 704;
d7838 1
a7838 1
return dev_storage + 694;
d7853 1
a7853 1
return dev_storage + 684;
d7868 1
a7868 1
return dev_storage + 674;
d7883 1
a7883 1
return dev_storage + 664;
d7898 1
a7898 1
return dev_storage + 654;
d7913 1
a7913 1
return dev_storage + 644;
d7931 1
a7931 1
return dev_storage + 634;
d7946 1
a7946 1
return dev_storage + 618;
d7961 1
a7961 1
return dev_storage + 32;
d7991 1
a7991 1
return dev_storage + 752;
d8006 1
a8006 1
return dev_storage + 42;
d8021 1
a8021 1
return dev_storage + 175;
d8036 1
a8036 1
return dev_storage + 713;
d8051 1
a8051 1
return dev_storage + 703;
d8066 1
a8066 1
return dev_storage + 693;
d8081 1
a8081 1
return dev_storage + 683;
d8096 1
a8096 1
return dev_storage + 673;
d8111 1
a8111 1
return dev_storage + 663;
d8126 1
a8126 1
return dev_storage + 653;
d8141 1
a8141 1
return dev_storage + 643;
d8159 1
a8159 1
return dev_storage + 633;
d8174 1
a8174 1
return dev_storage + 617;
d8189 1
a8189 1
return dev_storage + 31;
d8225 1
a8225 1
return dev_storage + 17;
d8243 1
a8243 1
return dev_storage + 825;
d8258 1
a8258 1
return dev_storage + 141;
d8273 1
a8273 1
return dev_storage + 131;
d8288 1
a8288 1
return dev_storage + 121;
d8303 1
a8303 1
return dev_storage + 111;
d8321 1
a8321 1
return dev_storage + 811;
d8336 1
a8336 1
return dev_storage + 101;
d8360 1
a8360 1
return dev_storage + 801;
d8375 1
a8375 1
return dev_storage + 91;
d8399 1
a8399 1
return dev_storage + 791;
d8414 1
a8414 1
return dev_storage + 81;
d8438 1
a8438 1
return dev_storage + 781;
d8453 1
a8453 1
return dev_storage + 71;
d8477 1
a8477 1
return dev_storage + 771;
d8492 1
a8492 1
return dev_storage + 742;
d8507 1
a8507 1
return dev_storage + 61;
d8528 1
a8528 1
return dev_storage + 732;
d8552 1
a8552 1
return dev_storage + 824;
d8567 1
a8567 1
return dev_storage + 140;
d8582 1
a8582 1
return dev_storage + 130;
d8597 1
a8597 1
return dev_storage + 120;
d8612 1
a8612 1
return dev_storage + 110;
d8630 1
a8630 1
return dev_storage + 810;
d8645 1
a8645 1
return dev_storage + 100;
d8669 1
a8669 1
return dev_storage + 800;
d8684 1
a8684 1
return dev_storage + 90;
d8708 1
a8708 1
return dev_storage + 790;
d8723 1
a8723 1
return dev_storage + 80;
d8747 1
a8747 1
return dev_storage + 780;
d8762 1
a8762 1
return dev_storage + 70;
d8786 1
a8786 1
return dev_storage + 770;
d8801 1
a8801 1
return dev_storage + 741;
d8816 1
a8816 1
return dev_storage + 60;
d8837 1
a8837 1
return dev_storage + 731;
d8861 1
a8861 1
return dev_storage + 823;
d8876 1
a8876 1
return dev_storage + 139;
d8891 1
a8891 1
return dev_storage + 129;
d8906 1
a8906 1
return dev_storage + 119;
d8921 1
a8921 1
return dev_storage + 109;
d8939 1
a8939 1
return dev_storage + 809;
d8954 1
a8954 1
return dev_storage + 99;
d8978 1
a8978 1
return dev_storage + 799;
d8993 1
a8993 1
return dev_storage + 89;
d9017 1
a9017 1
return dev_storage + 789;
d9032 1
a9032 1
return dev_storage + 79;
d9056 1
a9056 1
return dev_storage + 779;
d9071 1
a9071 1
return dev_storage + 750;
d9086 1
a9086 1
return dev_storage + 69;
d9110 1
a9110 1
return dev_storage + 769;
d9125 1
a9125 1
return dev_storage + 740;
d9140 1
a9140 1
return dev_storage + 59;
d9161 1
a9161 1
return dev_storage + 730;
d9185 1
a9185 1
return dev_storage + 822;
d9200 1
a9200 1
return dev_storage + 138;
d9215 1
a9215 1
return dev_storage + 128;
d9230 1
a9230 1
return dev_storage + 118;
d9245 1
a9245 1
return dev_storage + 108;
d9263 1
a9263 1
return dev_storage + 808;
d9278 1
a9278 1
return dev_storage + 98;
d9302 1
a9302 1
return dev_storage + 798;
d9317 1
a9317 1
return dev_storage + 88;
d9341 1
a9341 1
return dev_storage + 788;
d9356 1
a9356 1
return dev_storage + 78;
d9380 1
a9380 1
return dev_storage + 778;
d9395 1
a9395 1
return dev_storage + 749;
d9410 1
a9410 1
return dev_storage + 68;
d9434 1
a9434 1
return dev_storage + 768;
d9449 1
a9449 1
return dev_storage + 739;
d9464 1
a9464 1
return dev_storage + 58;
d9479 1
a9479 1
return dev_storage + 16;
d9500 1
a9500 1
return dev_storage + 729;
d9524 1
a9524 1
return dev_storage + 606;
d9542 1
a9542 1
return dev_storage + 821;
d9557 1
a9557 1
return dev_storage + 807;
d9572 1
a9572 1
return dev_storage + 797;
d9587 1
a9587 1
return dev_storage + 787;
d9602 1
a9602 1
return dev_storage + 777;
d9620 1
a9620 1
return dev_storage + 767;
d9635 1
a9635 1
return dev_storage + 591;
d9662 1
a9662 1
return dev_storage + 576;
d9677 1
a9677 1
return dev_storage + 561;
d9692 1
a9692 1
return dev_storage + 546;
d9707 1
a9707 1
return dev_storage + 531;
d9725 1
a9725 1
return dev_storage + 137;
d9740 1
a9740 1
return dev_storage + 127;
d9755 1
a9755 1
return dev_storage + 117;
d9770 1
a9770 1
return dev_storage + 107;
d9785 1
a9785 1
return dev_storage + 97;
d9800 1
a9800 1
return dev_storage + 87;
d9815 1
a9815 1
return dev_storage + 77;
d9830 1
a9830 1
return dev_storage + 67;
d9848 1
a9848 1
return dev_storage + 516;
d9863 1
a9863 1
return dev_storage + 57;
d9890 1
a9890 1
return dev_storage + 501;
d9905 1
a9905 1
return dev_storage + 486;
d9920 1
a9920 1
return dev_storage + 471;
d9935 1
a9935 1
return dev_storage + 456;
d9950 1
a9950 1
return dev_storage + 441;
d9965 1
a9965 1
return dev_storage + 426;
d9983 1
a9983 1
return dev_storage + 411;
d9998 1
a9998 1
return dev_storage + 15;
d10019 1
a10019 1
return dev_storage + 396;
d10034 1
a10034 1
return dev_storage + 381;
d10049 1
a10049 1
return dev_storage + 366;
d10064 1
a10064 1
return dev_storage + 351;
d10079 1
a10079 1
return dev_storage + 336;
d10094 1
a10094 1
return dev_storage + 321;
d10109 1
a10109 1
return dev_storage + 306;
d10124 1
a10124 1
return dev_storage + 291;
d10142 1
a10142 1
return dev_storage + 276;
d10157 1
a10157 1
return dev_storage + 190;
d10178 1
a10178 1
return dev_storage + 261;
d10193 1
a10193 1
return dev_storage + 246;
d10208 1
a10208 1
return dev_storage + 231;
d10226 1
a10226 1
return dev_storage + 748;
d10241 1
a10241 1
return dev_storage + 738;
d10256 1
a10256 1
return dev_storage + 728;
d10286 1
a10286 1
return dev_storage + 605;
d10304 1
a10304 1
return dev_storage + 820;
d10319 1
a10319 1
return dev_storage + 806;
d10334 1
a10334 1
return dev_storage + 796;
d10349 1
a10349 1
return dev_storage + 786;
d10364 1
a10364 1
return dev_storage + 776;
d10382 1
a10382 1
return dev_storage + 766;
d10397 1
a10397 1
return dev_storage + 590;
d10424 1
a10424 1
return dev_storage + 575;
d10439 1
a10439 1
return dev_storage + 560;
d10454 1
a10454 1
return dev_storage + 545;
d10469 1
a10469 1
return dev_storage + 530;
d10487 1
a10487 1
return dev_storage + 136;
d10502 1
a10502 1
return dev_storage + 126;
d10517 1
a10517 1
return dev_storage + 116;
d10532 1
a10532 1
return dev_storage + 106;
d10547 1
a10547 1
return dev_storage + 96;
d10562 1
a10562 1
return dev_storage + 86;
d10577 1
a10577 1
return dev_storage + 76;
d10592 1
a10592 1
return dev_storage + 66;
d10610 1
a10610 1
return dev_storage + 515;
d10625 1
a10625 1
return dev_storage + 56;
d10652 1
a10652 1
return dev_storage + 500;
d10667 1
a10667 1
return dev_storage + 485;
d10682 1
a10682 1
return dev_storage + 470;
d10697 1
a10697 1
return dev_storage + 455;
d10712 1
a10712 1
return dev_storage + 440;
d10727 1
a10727 1
return dev_storage + 425;
d10745 1
a10745 1
return dev_storage + 410;
d10760 1
a10760 1
return dev_storage + 14;
d10781 1
a10781 1
return dev_storage + 395;
d10796 1
a10796 1
return dev_storage + 380;
d10811 1
a10811 1
return dev_storage + 365;
d10826 1
a10826 1
return dev_storage + 350;
d10841 1
a10841 1
return dev_storage + 335;
d10856 1
a10856 1
return dev_storage + 320;
d10871 1
a10871 1
return dev_storage + 305;
d10886 1
a10886 1
return dev_storage + 290;
d10904 1
a10904 1
return dev_storage + 275;
d10919 1
a10919 1
return dev_storage + 189;
d10940 1
a10940 1
return dev_storage + 260;
d10955 1
a10955 1
return dev_storage + 245;
d10970 1
a10970 1
return dev_storage + 230;
d10988 1
a10988 1
return dev_storage + 747;
d11003 1
a11003 1
return dev_storage + 737;
d11018 1
a11018 1
return dev_storage + 727;
d11048 1
a11048 1
return dev_storage + 604;
d11066 1
a11066 1
return dev_storage + 819;
d11081 1
a11081 1
return dev_storage + 815;
d11096 1
a11096 1
return dev_storage + 805;
d11111 1
a11111 1
return dev_storage + 795;
d11126 1
a11126 1
return dev_storage + 785;
d11141 1
a11141 1
return dev_storage + 775;
d11159 1
a11159 1
return dev_storage + 765;
d11174 1
a11174 1
return dev_storage + 589;
d11201 1
a11201 1
return dev_storage + 574;
d11216 1
a11216 1
return dev_storage + 559;
d11231 1
a11231 1
return dev_storage + 544;
d11246 1
a11246 1
return dev_storage + 529;
d11264 1
a11264 1
return dev_storage + 135;
d11279 1
a11279 1
return dev_storage + 125;
d11294 1
a11294 1
return dev_storage + 115;
d11309 1
a11309 1
return dev_storage + 105;
d11324 1
a11324 1
return dev_storage + 95;
d11339 1
a11339 1
return dev_storage + 85;
d11354 1
a11354 1
return dev_storage + 75;
d11369 1
a11369 1
return dev_storage + 65;
d11387 1
a11387 1
return dev_storage + 514;
d11402 1
a11402 1
return dev_storage + 55;
d11429 1
a11429 1
return dev_storage + 499;
d11444 1
a11444 1
return dev_storage + 484;
d11459 1
a11459 1
return dev_storage + 469;
d11474 1
a11474 1
return dev_storage + 454;
d11489 1
a11489 1
return dev_storage + 439;
d11504 1
a11504 1
return dev_storage + 424;
d11522 1
a11522 1
return dev_storage + 409;
d11537 1
a11537 1
return dev_storage + 13;
d11558 1
a11558 1
return dev_storage + 394;
d11573 1
a11573 1
return dev_storage + 379;
d11588 1
a11588 1
return dev_storage + 364;
d11603 1
a11603 1
return dev_storage + 349;
d11618 1
a11618 1
return dev_storage + 334;
d11633 1
a11633 1
return dev_storage + 319;
d11648 1
a11648 1
return dev_storage + 304;
d11663 1
a11663 1
return dev_storage + 289;
d11681 1
a11681 1
return dev_storage + 274;
d11696 1
a11696 1
return dev_storage + 188;
d11717 1
a11717 1
return dev_storage + 259;
d11732 1
a11732 1
return dev_storage + 244;
d11747 1
a11747 1
return dev_storage + 229;
d11765 1
a11765 1
return dev_storage + 746;
d11780 1
a11780 1
return dev_storage + 736;
d11795 1
a11795 1
return dev_storage + 726;
d11825 1
a11825 1
return dev_storage + 603;
d11843 1
a11843 1
return dev_storage + 818;
d11858 1
a11858 1
return dev_storage + 814;
d11873 1
a11873 1
return dev_storage + 804;
d11888 1
a11888 1
return dev_storage + 794;
d11903 1
a11903 1
return dev_storage + 784;
d11918 1
a11918 1
return dev_storage + 774;
d11936 1
a11936 1
return dev_storage + 764;
d11951 1
a11951 1
return dev_storage + 588;
d11978 1
a11978 1
return dev_storage + 573;
d11993 1
a11993 1
return dev_storage + 558;
d12008 1
a12008 1
return dev_storage + 543;
d12023 1
a12023 1
return dev_storage + 528;
d12041 1
a12041 1
return dev_storage + 134;
d12056 1
a12056 1
return dev_storage + 124;
d12071 1
a12071 1
return dev_storage + 114;
d12086 1
a12086 1
return dev_storage + 104;
d12101 1
a12101 1
return dev_storage + 94;
d12116 1
a12116 1
return dev_storage + 84;
d12131 1
a12131 1
return dev_storage + 74;
d12146 1
a12146 1
return dev_storage + 64;
d12164 1
a12164 1
return dev_storage + 513;
d12179 1
a12179 1
return dev_storage + 54;
d12206 1
a12206 1
return dev_storage + 498;
d12221 1
a12221 1
return dev_storage + 483;
d12236 1
a12236 1
return dev_storage + 468;
d12251 1
a12251 1
return dev_storage + 453;
d12266 1
a12266 1
return dev_storage + 438;
d12281 1
a12281 1
return dev_storage + 423;
d12299 1
a12299 1
return dev_storage + 408;
d12314 1
a12314 1
return dev_storage + 12;
d12335 1
a12335 1
return dev_storage + 393;
d12350 1
a12350 1
return dev_storage + 378;
d12365 1
a12365 1
return dev_storage + 363;
d12380 1
a12380 1
return dev_storage + 348;
d12395 1
a12395 1
return dev_storage + 333;
d12410 1
a12410 1
return dev_storage + 318;
d12425 1
a12425 1
return dev_storage + 303;
d12440 1
a12440 1
return dev_storage + 288;
d12458 1
a12458 1
return dev_storage + 273;
d12473 1
a12473 1
return dev_storage + 187;
d12494 1
a12494 1
return dev_storage + 258;
d12509 1
a12509 1
return dev_storage + 243;
d12524 1
a12524 1
return dev_storage + 228;
d12542 1
a12542 1
return dev_storage + 745;
d12557 1
a12557 1
return dev_storage + 735;
d12572 1
a12572 1
return dev_storage + 725;
d12602 1
a12602 1
return dev_storage + 602;
d12620 1
a12620 1
return dev_storage + 817;
d12635 1
a12635 1
return dev_storage + 813;
d12650 1
a12650 1
return dev_storage + 803;
d12665 1
a12665 1
return dev_storage + 793;
d12680 1
a12680 1
return dev_storage + 783;
d12695 1
a12695 1
return dev_storage + 773;
d12713 1
a12713 1
return dev_storage + 763;
d12728 1
a12728 1
return dev_storage + 587;
d12755 1
a12755 1
return dev_storage + 572;
d12770 1
a12770 1
return dev_storage + 557;
d12785 1
a12785 1
return dev_storage + 542;
d12800 1
a12800 1
return dev_storage + 527;
d12818 1
a12818 1
return dev_storage + 133;
d12833 1
a12833 1
return dev_storage + 123;
d12848 1
a12848 1
return dev_storage + 113;
d12863 1
a12863 1
return dev_storage + 103;
d12878 1
a12878 1
return dev_storage + 93;
d12893 1
a12893 1
return dev_storage + 83;
d12908 1
a12908 1
return dev_storage + 73;
d12923 1
a12923 1
return dev_storage + 63;
d12941 1
a12941 1
return dev_storage + 512;
d12956 1
a12956 1
return dev_storage + 53;
d12983 1
a12983 1
return dev_storage + 497;
d12998 1
a12998 1
return dev_storage + 482;
d13013 1
a13013 1
return dev_storage + 467;
d13028 1
a13028 1
return dev_storage + 452;
d13043 1
a13043 1
return dev_storage + 437;
d13058 1
a13058 1
return dev_storage + 422;
d13076 1
a13076 1
return dev_storage + 407;
d13091 1
a13091 1
return dev_storage + 11;
d13112 1
a13112 1
return dev_storage + 392;
d13127 1
a13127 1
return dev_storage + 377;
d13142 1
a13142 1
return dev_storage + 362;
d13157 1
a13157 1
return dev_storage + 347;
d13172 1
a13172 1
return dev_storage + 332;
d13187 1
a13187 1
return dev_storage + 317;
d13202 1
a13202 1
return dev_storage + 302;
d13217 1
a13217 1
return dev_storage + 287;
d13235 1
a13235 1
return dev_storage + 272;
d13250 1
a13250 1
return dev_storage + 186;
d13271 1
a13271 1
return dev_storage + 257;
d13286 1
a13286 1
return dev_storage + 242;
d13301 1
a13301 1
return dev_storage + 227;
d13319 1
a13319 1
return dev_storage + 744;
d13334 1
a13334 1
return dev_storage + 734;
d13349 1
a13349 1
return dev_storage + 724;
d13379 1
a13379 1
return dev_storage + 601;
d13397 1
a13397 1
return dev_storage + 816;
d13412 1
a13412 1
return dev_storage + 812;
d13427 1
a13427 1
return dev_storage + 802;
d13442 1
a13442 1
return dev_storage + 792;
d13457 1
a13457 1
return dev_storage + 782;
d13472 1
a13472 1
return dev_storage + 772;
d13490 1
a13490 1
return dev_storage + 762;
d13505 1
a13505 1
return dev_storage + 586;
d13532 1
a13532 1
return dev_storage + 571;
d13547 1
a13547 1
return dev_storage + 556;
d13562 1
a13562 1
return dev_storage + 541;
d13577 1
a13577 1
return dev_storage + 526;
d13595 1
a13595 1
return dev_storage + 132;
d13610 1
a13610 1
return dev_storage + 122;
d13625 1
a13625 1
return dev_storage + 112;
d13640 1
a13640 1
return dev_storage + 102;
d13655 1
a13655 1
return dev_storage + 92;
d13670 1
a13670 1
return dev_storage + 82;
d13685 1
a13685 1
return dev_storage + 72;
d13700 1
a13700 1
return dev_storage + 62;
d13718 1
a13718 1
return dev_storage + 511;
d13733 1
a13733 1
return dev_storage + 52;
d13760 1
a13760 1
return dev_storage + 496;
d13775 1
a13775 1
return dev_storage + 481;
d13790 1
a13790 1
return dev_storage + 466;
d13805 1
a13805 1
return dev_storage + 451;
d13820 1
a13820 1
return dev_storage + 436;
d13835 1
a13835 1
return dev_storage + 421;
d13853 1
a13853 1
return dev_storage + 406;
d13868 1
a13868 1
return dev_storage + 10;
d13889 1
a13889 1
return dev_storage + 391;
d13904 1
a13904 1
return dev_storage + 376;
d13919 1
a13919 1
return dev_storage + 361;
d13934 1
a13934 1
return dev_storage + 346;
d13949 1
a13949 1
return dev_storage + 331;
d13964 1
a13964 1
return dev_storage + 316;
d13979 1
a13979 1
return dev_storage + 301;
d13994 1
a13994 1
return dev_storage + 286;
d14012 1
a14012 1
return dev_storage + 271;
d14027 1
a14027 1
return dev_storage + 185;
d14048 1
a14048 1
return dev_storage + 256;
d14063 1
a14063 1
return dev_storage + 241;
d14078 1
a14078 1
return dev_storage + 226;
d14096 1
a14096 1
return dev_storage + 743;
d14111 1
a14111 1
return dev_storage + 733;
d14126 1
a14126 1
return dev_storage + 723;
d14162 1
a14162 1
return dev_storage + 18;
d14177 1
a14177 1
return dev_storage + 174;
d14195 1
a14195 1
return dev_storage + 169;
d14210 1
a14210 1
return dev_storage + 168;
d14225 1
a14225 1
return dev_storage + 167;
d14240 1
a14240 1
return dev_storage + 166;
d14255 1
a14255 1
return dev_storage + 165;
d14270 1
a14270 1
return dev_storage + 164;
d14285 1
a14285 1
return dev_storage + 163;
d14300 1
a14300 1
return dev_storage + 162;
d14324 1
a14324 1
return dev_storage + 161;
d14339 1
a14339 1
return dev_storage + 160;
d14354 1
a14354 1
return dev_storage + 159;
d14369 1
a14369 1
return dev_storage + 158;
d14387 1
a14387 1
return dev_storage + 831;
d14402 1
a14402 1
return dev_storage + 157;
d14426 1
a14426 1
return dev_storage + 830;
d14441 1
a14441 1
return dev_storage + 156;
d14465 1
a14465 1
return dev_storage + 829;
d14480 1
a14480 1
return dev_storage + 155;
d14504 1
a14504 1
return dev_storage + 828;
d14519 1
a14519 1
return dev_storage + 154;
d14543 1
a14543 1
return dev_storage + 827;
d14558 1
a14558 1
return dev_storage + 153;
d14582 1
a14582 1
return dev_storage + 826;
d14597 1
a14597 1
return dev_storage + 152;
d14627 1
a14627 1
return dev_storage + 151;
d14642 1
a14642 1
return dev_storage + 150;
d14657 1
a14657 1
return dev_storage + 149;
d14672 1
a14672 1
return dev_storage + 148;
d14687 1
a14687 1
return dev_storage + 147;
d14702 1
a14702 1
return dev_storage + 146;
d14717 1
a14717 1
return dev_storage + 145;
d14732 1
a14732 1
return dev_storage + 144;
d14747 1
a14747 1
return dev_storage + 143;
d14762 1
a14762 1
return dev_storage + 142;
d14792 1
a14792 1
return dev_storage + 834;
d14807 1
a14807 1
return dev_storage + 833;
d14822 1
a14822 1
return dev_storage + 19;
d14843 1
a14843 1
return dev_storage + 0;
@


1.19
log
@* devices.cc: Regenerate with correct name for dev_netdrive_storage.
@
text
@d98 1
d897 3
a899 3
const device *ttym_dev = dev_storage + 831;
const device *ttys_dev = dev_storage + 751;
const device *urandom_dev = dev_storage + 832;
d914 1
a914 1
return dev_storage + 215;
d932 1
a932 1
return dev_storage + 750;
d947 1
a947 1
return dev_storage + 214;
d968 1
a968 1
return dev_storage + 213;
d983 1
a983 1
return dev_storage + 212;
d998 1
a998 1
return dev_storage + 211;
d1013 1
a1013 1
return dev_storage + 210;
d1028 1
a1028 1
return dev_storage + 209;
d1043 1
a1043 1
return dev_storage + 208;
d1058 1
a1058 1
return dev_storage + 207;
d1073 1
a1073 1
return dev_storage + 206;
d1091 1
a1091 1
return dev_storage + 205;
d1127 1
a1127 1
return dev_storage + 204;
d1142 1
a1142 1
return dev_storage + 203;
d1160 1
a1160 1
return dev_storage + 202;
d1175 1
a1175 1
return dev_storage + 40;
d1196 1
a1196 1
return dev_storage + 201;
d1211 1
a1211 1
return dev_storage + 200;
d1226 1
a1226 1
return dev_storage + 199;
d1241 1
a1241 1
return dev_storage + 198;
d1256 1
a1256 1
return dev_storage + 197;
d1271 1
a1271 1
return dev_storage + 196;
d1286 1
a1286 1
return dev_storage + 195;
d1301 1
a1301 1
return dev_storage + 194;
d1316 1
a1316 1
return dev_storage + 193;
d1331 1
a1331 1
return dev_storage + 192;
d1346 1
a1346 1
return dev_storage + 191;
d1361 1
a1361 1
return dev_storage + 190;
d1379 1
a1379 1
return dev_storage + 631;
d1394 1
a1394 1
return dev_storage + 615;
d1433 1
a1433 1
return dev_storage + 630;
d1448 1
a1448 1
return dev_storage + 614;
d1487 1
a1487 1
return dev_storage + 629;
d1502 1
a1502 1
return dev_storage + 613;
d1541 1
a1541 1
return dev_storage + 628;
d1556 1
a1556 1
return dev_storage + 612;
d1595 1
a1595 1
return dev_storage + 627;
d1610 1
a1610 1
return dev_storage + 611;
d1649 1
a1649 1
return dev_storage + 626;
d1664 1
a1664 1
return dev_storage + 610;
d1703 1
a1703 1
return dev_storage + 625;
d1718 1
a1718 1
return dev_storage + 609;
d1757 1
a1757 1
return dev_storage + 624;
d1772 1
a1772 1
return dev_storage + 608;
d1811 1
a1811 1
return dev_storage + 623;
d1826 1
a1826 1
return dev_storage + 607;
d1865 1
a1865 1
return dev_storage + 622;
d1880 1
a1880 1
return dev_storage + 606;
d1925 1
a1925 1
return dev_storage + 172;
d1940 1
a1940 1
return dev_storage + 171;
d1958 1
a1958 1
return dev_storage + 834;
d1997 1
a1997 1
return dev_storage + 831;
d2036 1
a2036 1
return dev_storage + 169;
d2068 15
d2087 1
a2087 1
return dev_storage + 170;
d2105 1
a2105 1
return dev_storage + 599;
d2123 1
a2123 1
return dev_storage + 760;
d2138 1
a2138 1
return dev_storage + 584;
d2159 1
a2159 1
return dev_storage + 569;
d2174 1
a2174 1
return dev_storage + 554;
d2189 1
a2189 1
return dev_storage + 539;
d2204 1
a2204 1
return dev_storage + 524;
d2222 1
a2222 1
return dev_storage + 509;
d2237 1
a2237 1
return dev_storage + 50;
d2258 1
a2258 1
return dev_storage + 494;
d2273 1
a2273 1
return dev_storage + 479;
d2288 1
a2288 1
return dev_storage + 464;
d2303 1
a2303 1
return dev_storage + 449;
d2318 1
a2318 1
return dev_storage + 434;
d2333 1
a2333 1
return dev_storage + 419;
d2351 1
a2351 1
return dev_storage + 404;
d2387 1
a2387 1
return dev_storage + 389;
d2402 1
a2402 1
return dev_storage + 374;
d2417 1
a2417 1
return dev_storage + 359;
d2432 1
a2432 1
return dev_storage + 344;
d2447 1
a2447 1
return dev_storage + 329;
d2462 1
a2462 1
return dev_storage + 314;
d2477 1
a2477 1
return dev_storage + 299;
d2492 1
a2492 1
return dev_storage + 284;
d2510 1
a2510 1
return dev_storage + 269;
d2525 1
a2525 1
return dev_storage + 183;
d2546 1
a2546 1
return dev_storage + 254;
d2561 1
a2561 1
return dev_storage + 239;
d2576 1
a2576 1
return dev_storage + 224;
d2591 1
a2591 1
return dev_storage + 721;
d2606 1
a2606 1
return dev_storage + 711;
d2621 1
a2621 1
return dev_storage + 701;
d2636 1
a2636 1
return dev_storage + 691;
d2651 1
a2651 1
return dev_storage + 681;
d2666 1
a2666 1
return dev_storage + 671;
d2681 1
a2681 1
return dev_storage + 661;
d2696 1
a2696 1
return dev_storage + 651;
d2711 1
a2711 1
return dev_storage + 641;
d2735 1
a2735 1
return dev_storage + 598;
d2753 1
a2753 1
return dev_storage + 759;
d2768 1
a2768 1
return dev_storage + 583;
d2789 1
a2789 1
return dev_storage + 568;
d2804 1
a2804 1
return dev_storage + 553;
d2819 1
a2819 1
return dev_storage + 538;
d2834 1
a2834 1
return dev_storage + 523;
d2852 1
a2852 1
return dev_storage + 508;
d2867 1
a2867 1
return dev_storage + 49;
d2888 1
a2888 1
return dev_storage + 493;
d2903 1
a2903 1
return dev_storage + 478;
d2918 1
a2918 1
return dev_storage + 463;
d2933 1
a2933 1
return dev_storage + 448;
d2948 1
a2948 1
return dev_storage + 433;
d2963 1
a2963 1
return dev_storage + 418;
d2981 1
a2981 1
return dev_storage + 403;
d3017 1
a3017 1
return dev_storage + 388;
d3032 1
a3032 1
return dev_storage + 373;
d3047 1
a3047 1
return dev_storage + 358;
d3062 1
a3062 1
return dev_storage + 343;
d3077 1
a3077 1
return dev_storage + 328;
d3092 1
a3092 1
return dev_storage + 313;
d3107 1
a3107 1
return dev_storage + 298;
d3122 1
a3122 1
return dev_storage + 283;
d3140 1
a3140 1
return dev_storage + 268;
d3155 1
a3155 1
return dev_storage + 182;
d3176 1
a3176 1
return dev_storage + 253;
d3191 1
a3191 1
return dev_storage + 238;
d3206 1
a3206 1
return dev_storage + 223;
d3221 1
a3221 1
return dev_storage + 720;
d3236 1
a3236 1
return dev_storage + 710;
d3251 1
a3251 1
return dev_storage + 700;
d3266 1
a3266 1
return dev_storage + 690;
d3281 1
a3281 1
return dev_storage + 680;
d3296 1
a3296 1
return dev_storage + 670;
d3311 1
a3311 1
return dev_storage + 660;
d3326 1
a3326 1
return dev_storage + 650;
d3341 1
a3341 1
return dev_storage + 640;
d3365 1
a3365 1
return dev_storage + 597;
d3383 1
a3383 1
return dev_storage + 758;
d3398 1
a3398 1
return dev_storage + 582;
d3419 1
a3419 1
return dev_storage + 567;
d3434 1
a3434 1
return dev_storage + 552;
d3449 1
a3449 1
return dev_storage + 537;
d3464 1
a3464 1
return dev_storage + 522;
d3482 1
a3482 1
return dev_storage + 507;
d3497 1
a3497 1
return dev_storage + 48;
d3518 1
a3518 1
return dev_storage + 492;
d3533 1
a3533 1
return dev_storage + 477;
d3548 1
a3548 1
return dev_storage + 462;
d3563 1
a3563 1
return dev_storage + 447;
d3578 1
a3578 1
return dev_storage + 432;
d3593 1
a3593 1
return dev_storage + 417;
d3611 1
a3611 1
return dev_storage + 402;
d3647 1
a3647 1
return dev_storage + 387;
d3662 1
a3662 1
return dev_storage + 372;
d3677 1
a3677 1
return dev_storage + 357;
d3692 1
a3692 1
return dev_storage + 342;
d3707 1
a3707 1
return dev_storage + 327;
d3722 1
a3722 1
return dev_storage + 312;
d3737 1
a3737 1
return dev_storage + 297;
d3752 1
a3752 1
return dev_storage + 282;
d3770 1
a3770 1
return dev_storage + 267;
d3785 1
a3785 1
return dev_storage + 181;
d3806 1
a3806 1
return dev_storage + 252;
d3821 1
a3821 1
return dev_storage + 237;
d3836 1
a3836 1
return dev_storage + 222;
d3851 1
a3851 1
return dev_storage + 719;
d3866 1
a3866 1
return dev_storage + 709;
d3881 1
a3881 1
return dev_storage + 699;
d3896 1
a3896 1
return dev_storage + 689;
d3911 1
a3911 1
return dev_storage + 679;
d3926 1
a3926 1
return dev_storage + 669;
d3941 1
a3941 1
return dev_storage + 659;
d3956 1
a3956 1
return dev_storage + 649;
d3971 1
a3971 1
return dev_storage + 639;
d3995 1
a3995 1
return dev_storage + 596;
d4013 1
a4013 1
return dev_storage + 757;
d4028 1
a4028 1
return dev_storage + 581;
d4049 1
a4049 1
return dev_storage + 566;
d4064 1
a4064 1
return dev_storage + 551;
d4079 1
a4079 1
return dev_storage + 536;
d4094 1
a4094 1
return dev_storage + 521;
d4112 1
a4112 1
return dev_storage + 506;
d4127 1
a4127 1
return dev_storage + 47;
d4148 1
a4148 1
return dev_storage + 491;
d4163 1
a4163 1
return dev_storage + 476;
d4178 1
a4178 1
return dev_storage + 461;
d4193 1
a4193 1
return dev_storage + 446;
d4208 1
a4208 1
return dev_storage + 431;
d4223 1
a4223 1
return dev_storage + 416;
d4241 1
a4241 1
return dev_storage + 401;
d4277 1
a4277 1
return dev_storage + 386;
d4292 1
a4292 1
return dev_storage + 371;
d4307 1
a4307 1
return dev_storage + 356;
d4322 1
a4322 1
return dev_storage + 341;
d4337 1
a4337 1
return dev_storage + 326;
d4352 1
a4352 1
return dev_storage + 311;
d4367 1
a4367 1
return dev_storage + 296;
d4382 1
a4382 1
return dev_storage + 281;
d4400 1
a4400 1
return dev_storage + 266;
d4415 1
a4415 1
return dev_storage + 180;
d4436 1
a4436 1
return dev_storage + 251;
d4451 1
a4451 1
return dev_storage + 236;
d4466 1
a4466 1
return dev_storage + 221;
d4481 1
a4481 1
return dev_storage + 718;
d4496 1
a4496 1
return dev_storage + 708;
d4511 1
a4511 1
return dev_storage + 698;
d4526 1
a4526 1
return dev_storage + 688;
d4541 1
a4541 1
return dev_storage + 678;
d4556 1
a4556 1
return dev_storage + 668;
d4571 1
a4571 1
return dev_storage + 658;
d4586 1
a4586 1
return dev_storage + 648;
d4601 1
a4601 1
return dev_storage + 638;
d4625 1
a4625 1
return dev_storage + 595;
d4643 1
a4643 1
return dev_storage + 756;
d4658 1
a4658 1
return dev_storage + 580;
d4679 1
a4679 1
return dev_storage + 565;
d4694 1
a4694 1
return dev_storage + 550;
d4709 1
a4709 1
return dev_storage + 535;
d4724 1
a4724 1
return dev_storage + 520;
d4742 1
a4742 1
return dev_storage + 505;
d4757 1
a4757 1
return dev_storage + 46;
d4778 1
a4778 1
return dev_storage + 490;
d4793 1
a4793 1
return dev_storage + 475;
d4808 1
a4808 1
return dev_storage + 460;
d4823 1
a4823 1
return dev_storage + 445;
d4838 1
a4838 1
return dev_storage + 430;
d4853 1
a4853 1
return dev_storage + 415;
d4871 1
a4871 1
return dev_storage + 400;
d4907 1
a4907 1
return dev_storage + 385;
d4922 1
a4922 1
return dev_storage + 370;
d4937 1
a4937 1
return dev_storage + 355;
d4952 1
a4952 1
return dev_storage + 340;
d4967 1
a4967 1
return dev_storage + 325;
d4982 1
a4982 1
return dev_storage + 310;
d4997 1
a4997 1
return dev_storage + 295;
d5012 1
a5012 1
return dev_storage + 280;
d5030 1
a5030 1
return dev_storage + 265;
d5045 1
a5045 1
return dev_storage + 179;
d5066 1
a5066 1
return dev_storage + 250;
d5081 1
a5081 1
return dev_storage + 235;
d5096 1
a5096 1
return dev_storage + 220;
d5111 1
a5111 1
return dev_storage + 717;
d5126 1
a5126 1
return dev_storage + 707;
d5141 1
a5141 1
return dev_storage + 697;
d5156 1
a5156 1
return dev_storage + 687;
d5171 1
a5171 1
return dev_storage + 677;
d5186 1
a5186 1
return dev_storage + 667;
d5201 1
a5201 1
return dev_storage + 657;
d5216 1
a5216 1
return dev_storage + 647;
d5234 1
a5234 1
return dev_storage + 637;
d5249 1
a5249 1
return dev_storage + 621;
d5294 1
a5294 1
return dev_storage + 594;
d5312 1
a5312 1
return dev_storage + 755;
d5327 1
a5327 1
return dev_storage + 579;
d5348 1
a5348 1
return dev_storage + 564;
d5363 1
a5363 1
return dev_storage + 549;
d5378 1
a5378 1
return dev_storage + 534;
d5393 1
a5393 1
return dev_storage + 519;
d5411 1
a5411 1
return dev_storage + 504;
d5426 1
a5426 1
return dev_storage + 45;
d5447 1
a5447 1
return dev_storage + 489;
d5462 1
a5462 1
return dev_storage + 474;
d5477 1
a5477 1
return dev_storage + 459;
d5492 1
a5492 1
return dev_storage + 444;
d5507 1
a5507 1
return dev_storage + 429;
d5522 1
a5522 1
return dev_storage + 414;
d5540 1
a5540 1
return dev_storage + 399;
d5576 1
a5576 1
return dev_storage + 384;
d5591 1
a5591 1
return dev_storage + 369;
d5606 1
a5606 1
return dev_storage + 354;
d5621 1
a5621 1
return dev_storage + 339;
d5636 1
a5636 1
return dev_storage + 324;
d5651 1
a5651 1
return dev_storage + 309;
d5666 1
a5666 1
return dev_storage + 294;
d5681 1
a5681 1
return dev_storage + 279;
d5699 1
a5699 1
return dev_storage + 264;
d5714 1
a5714 1
return dev_storage + 178;
d5735 1
a5735 1
return dev_storage + 249;
d5750 1
a5750 1
return dev_storage + 234;
d5765 1
a5765 1
return dev_storage + 219;
d5780 1
a5780 1
return dev_storage + 716;
d5795 1
a5795 1
return dev_storage + 706;
d5810 1
a5810 1
return dev_storage + 696;
d5825 1
a5825 1
return dev_storage + 686;
d5840 1
a5840 1
return dev_storage + 676;
d5855 1
a5855 1
return dev_storage + 666;
d5870 1
a5870 1
return dev_storage + 656;
d5885 1
a5885 1
return dev_storage + 646;
d5903 1
a5903 1
return dev_storage + 636;
d5918 1
a5918 1
return dev_storage + 620;
d5963 1
a5963 1
return dev_storage + 593;
d5981 1
a5981 1
return dev_storage + 754;
d5996 1
a5996 1
return dev_storage + 578;
d6017 1
a6017 1
return dev_storage + 563;
d6032 1
a6032 1
return dev_storage + 548;
d6047 1
a6047 1
return dev_storage + 533;
d6062 1
a6062 1
return dev_storage + 518;
d6080 1
a6080 1
return dev_storage + 503;
d6095 1
a6095 1
return dev_storage + 44;
d6116 1
a6116 1
return dev_storage + 488;
d6131 1
a6131 1
return dev_storage + 473;
d6146 1
a6146 1
return dev_storage + 458;
d6161 1
a6161 1
return dev_storage + 443;
d6176 1
a6176 1
return dev_storage + 428;
d6191 1
a6191 1
return dev_storage + 413;
d6209 1
a6209 1
return dev_storage + 398;
d6245 1
a6245 1
return dev_storage + 383;
d6260 1
a6260 1
return dev_storage + 368;
d6275 1
a6275 1
return dev_storage + 353;
d6290 1
a6290 1
return dev_storage + 338;
d6305 1
a6305 1
return dev_storage + 323;
d6320 1
a6320 1
return dev_storage + 308;
d6335 1
a6335 1
return dev_storage + 293;
d6350 1
a6350 1
return dev_storage + 278;
d6368 1
a6368 1
return dev_storage + 263;
d6383 1
a6383 1
return dev_storage + 177;
d6404 1
a6404 1
return dev_storage + 248;
d6419 1
a6419 1
return dev_storage + 233;
d6434 1
a6434 1
return dev_storage + 218;
d6449 1
a6449 1
return dev_storage + 715;
d6464 1
a6464 1
return dev_storage + 705;
d6479 1
a6479 1
return dev_storage + 695;
d6494 1
a6494 1
return dev_storage + 685;
d6509 1
a6509 1
return dev_storage + 675;
d6524 1
a6524 1
return dev_storage + 665;
d6539 1
a6539 1
return dev_storage + 655;
d6554 1
a6554 1
return dev_storage + 645;
d6572 1
a6572 1
return dev_storage + 635;
d6587 1
a6587 1
return dev_storage + 619;
d6632 1
a6632 1
return dev_storage + 592;
d6650 1
a6650 1
return dev_storage + 753;
d6665 1
a6665 1
return dev_storage + 577;
d6686 1
a6686 1
return dev_storage + 562;
d6701 1
a6701 1
return dev_storage + 547;
d6716 1
a6716 1
return dev_storage + 532;
d6731 1
a6731 1
return dev_storage + 517;
d6749 1
a6749 1
return dev_storage + 502;
d6764 1
a6764 1
return dev_storage + 43;
d6785 1
a6785 1
return dev_storage + 487;
d6800 1
a6800 1
return dev_storage + 472;
d6815 1
a6815 1
return dev_storage + 457;
d6830 1
a6830 1
return dev_storage + 442;
d6845 1
a6845 1
return dev_storage + 427;
d6860 1
a6860 1
return dev_storage + 412;
d6878 1
a6878 1
return dev_storage + 397;
d6914 1
a6914 1
return dev_storage + 382;
d6929 1
a6929 1
return dev_storage + 367;
d6944 1
a6944 1
return dev_storage + 352;
d6959 1
a6959 1
return dev_storage + 337;
d6974 1
a6974 1
return dev_storage + 322;
d6989 1
a6989 1
return dev_storage + 307;
d7004 1
a7004 1
return dev_storage + 292;
d7019 1
a7019 1
return dev_storage + 277;
d7037 1
a7037 1
return dev_storage + 262;
d7052 1
a7052 1
return dev_storage + 176;
d7073 1
a7073 1
return dev_storage + 247;
d7088 1
a7088 1
return dev_storage + 232;
d7103 1
a7103 1
return dev_storage + 217;
d7118 1
a7118 1
return dev_storage + 714;
d7133 1
a7133 1
return dev_storage + 704;
d7148 1
a7148 1
return dev_storage + 694;
d7163 1
a7163 1
return dev_storage + 684;
d7178 1
a7178 1
return dev_storage + 674;
d7193 1
a7193 1
return dev_storage + 664;
d7208 1
a7208 1
return dev_storage + 654;
d7223 1
a7223 1
return dev_storage + 644;
d7241 1
a7241 1
return dev_storage + 634;
d7256 1
a7256 1
return dev_storage + 618;
d7301 1
a7301 1
return dev_storage + 591;
d7319 1
a7319 1
return dev_storage + 752;
d7334 1
a7334 1
return dev_storage + 576;
d7355 1
a7355 1
return dev_storage + 561;
d7370 1
a7370 1
return dev_storage + 546;
d7385 1
a7385 1
return dev_storage + 531;
d7400 1
a7400 1
return dev_storage + 516;
d7418 1
a7418 1
return dev_storage + 501;
d7433 1
a7433 1
return dev_storage + 42;
d7454 1
a7454 1
return dev_storage + 486;
d7469 1
a7469 1
return dev_storage + 471;
d7484 1
a7484 1
return dev_storage + 456;
d7499 1
a7499 1
return dev_storage + 441;
d7514 1
a7514 1
return dev_storage + 426;
d7529 1
a7529 1
return dev_storage + 411;
d7547 1
a7547 1
return dev_storage + 396;
d7583 1
a7583 1
return dev_storage + 381;
d7598 1
a7598 1
return dev_storage + 366;
d7613 1
a7613 1
return dev_storage + 351;
d7628 1
a7628 1
return dev_storage + 336;
d7643 1
a7643 1
return dev_storage + 321;
d7658 1
a7658 1
return dev_storage + 306;
d7673 1
a7673 1
return dev_storage + 291;
d7688 1
a7688 1
return dev_storage + 276;
d7706 1
a7706 1
return dev_storage + 261;
d7721 1
a7721 1
return dev_storage + 175;
d7742 1
a7742 1
return dev_storage + 246;
d7757 1
a7757 1
return dev_storage + 231;
d7772 1
a7772 1
return dev_storage + 216;
d7787 1
a7787 1
return dev_storage + 713;
d7802 1
a7802 1
return dev_storage + 703;
d7817 1
a7817 1
return dev_storage + 693;
d7832 1
a7832 1
return dev_storage + 683;
d7847 1
a7847 1
return dev_storage + 673;
d7862 1
a7862 1
return dev_storage + 663;
d7877 1
a7877 1
return dev_storage + 653;
d7892 1
a7892 1
return dev_storage + 643;
d7910 1
a7910 1
return dev_storage + 633;
d7925 1
a7925 1
return dev_storage + 617;
d7970 1
a7970 1
return dev_storage + 751;
d7985 1
a7985 1
return dev_storage + 41;
d8000 1
a8000 1
return dev_storage + 174;
d8015 1
a8015 1
return dev_storage + 712;
d8030 1
a8030 1
return dev_storage + 702;
d8045 1
a8045 1
return dev_storage + 692;
d8060 1
a8060 1
return dev_storage + 682;
d8075 1
a8075 1
return dev_storage + 672;
d8090 1
a8090 1
return dev_storage + 662;
d8105 1
a8105 1
return dev_storage + 652;
d8120 1
a8120 1
return dev_storage + 642;
d8138 1
a8138 1
return dev_storage + 632;
d8153 1
a8153 1
return dev_storage + 616;
d8222 1
a8222 1
return dev_storage + 824;
d8237 1
a8237 1
return dev_storage + 140;
d8252 1
a8252 1
return dev_storage + 130;
d8267 1
a8267 1
return dev_storage + 120;
d8282 1
a8282 1
return dev_storage + 110;
d8300 1
a8300 1
return dev_storage + 810;
d8315 1
a8315 1
return dev_storage + 100;
d8339 1
a8339 1
return dev_storage + 800;
d8354 1
a8354 1
return dev_storage + 90;
d8378 1
a8378 1
return dev_storage + 790;
d8393 1
a8393 1
return dev_storage + 80;
d8417 1
a8417 1
return dev_storage + 780;
d8432 1
a8432 1
return dev_storage + 70;
d8456 1
a8456 1
return dev_storage + 770;
d8471 1
a8471 1
return dev_storage + 741;
d8486 1
a8486 1
return dev_storage + 60;
d8507 1
a8507 1
return dev_storage + 731;
d8531 1
a8531 1
return dev_storage + 823;
d8546 1
a8546 1
return dev_storage + 139;
d8561 1
a8561 1
return dev_storage + 129;
d8576 1
a8576 1
return dev_storage + 119;
d8591 1
a8591 1
return dev_storage + 109;
d8609 1
a8609 1
return dev_storage + 809;
d8624 1
a8624 1
return dev_storage + 99;
d8648 1
a8648 1
return dev_storage + 799;
d8663 1
a8663 1
return dev_storage + 89;
d8687 1
a8687 1
return dev_storage + 789;
d8702 1
a8702 1
return dev_storage + 79;
d8726 1
a8726 1
return dev_storage + 779;
d8741 1
a8741 1
return dev_storage + 69;
d8765 1
a8765 1
return dev_storage + 769;
d8780 1
a8780 1
return dev_storage + 740;
d8795 1
a8795 1
return dev_storage + 59;
d8816 1
a8816 1
return dev_storage + 730;
d8840 1
a8840 1
return dev_storage + 822;
d8855 1
a8855 1
return dev_storage + 138;
d8870 1
a8870 1
return dev_storage + 128;
d8885 1
a8885 1
return dev_storage + 118;
d8900 1
a8900 1
return dev_storage + 108;
d8918 1
a8918 1
return dev_storage + 808;
d8933 1
a8933 1
return dev_storage + 98;
d8957 1
a8957 1
return dev_storage + 798;
d8972 1
a8972 1
return dev_storage + 88;
d8996 1
a8996 1
return dev_storage + 788;
d9011 1
a9011 1
return dev_storage + 78;
d9035 1
a9035 1
return dev_storage + 778;
d9050 1
a9050 1
return dev_storage + 749;
d9065 1
a9065 1
return dev_storage + 68;
d9089 1
a9089 1
return dev_storage + 768;
d9104 1
a9104 1
return dev_storage + 739;
d9119 1
a9119 1
return dev_storage + 58;
d9140 1
a9140 1
return dev_storage + 729;
d9164 1
a9164 1
return dev_storage + 821;
d9179 1
a9179 1
return dev_storage + 137;
d9194 1
a9194 1
return dev_storage + 127;
d9209 1
a9209 1
return dev_storage + 117;
d9224 1
a9224 1
return dev_storage + 107;
d9242 1
a9242 1
return dev_storage + 807;
d9257 1
a9257 1
return dev_storage + 97;
d9281 1
a9281 1
return dev_storage + 797;
d9296 1
a9296 1
return dev_storage + 87;
d9320 1
a9320 1
return dev_storage + 787;
d9335 1
a9335 1
return dev_storage + 77;
d9359 1
a9359 1
return dev_storage + 777;
d9374 1
a9374 1
return dev_storage + 748;
d9389 1
a9389 1
return dev_storage + 67;
d9413 1
a9413 1
return dev_storage + 767;
d9428 1
a9428 1
return dev_storage + 738;
d9443 1
a9443 1
return dev_storage + 57;
d9479 1
a9479 1
return dev_storage + 728;
d9503 1
a9503 1
return dev_storage + 605;
d9521 1
a9521 1
return dev_storage + 820;
d9536 1
a9536 1
return dev_storage + 806;
d9551 1
a9551 1
return dev_storage + 796;
d9566 1
a9566 1
return dev_storage + 786;
d9581 1
a9581 1
return dev_storage + 776;
d9599 1
a9599 1
return dev_storage + 766;
d9614 1
a9614 1
return dev_storage + 590;
d9641 1
a9641 1
return dev_storage + 575;
d9656 1
a9656 1
return dev_storage + 560;
d9671 1
a9671 1
return dev_storage + 545;
d9686 1
a9686 1
return dev_storage + 530;
d9704 1
a9704 1
return dev_storage + 136;
d9719 1
a9719 1
return dev_storage + 126;
d9734 1
a9734 1
return dev_storage + 116;
d9749 1
a9749 1
return dev_storage + 106;
d9764 1
a9764 1
return dev_storage + 96;
d9779 1
a9779 1
return dev_storage + 86;
d9794 1
a9794 1
return dev_storage + 76;
d9809 1
a9809 1
return dev_storage + 66;
d9827 1
a9827 1
return dev_storage + 515;
d9842 1
a9842 1
return dev_storage + 56;
d9869 1
a9869 1
return dev_storage + 500;
d9884 1
a9884 1
return dev_storage + 485;
d9899 1
a9899 1
return dev_storage + 470;
d9914 1
a9914 1
return dev_storage + 455;
d9929 1
a9929 1
return dev_storage + 440;
d9944 1
a9944 1
return dev_storage + 425;
d9962 1
a9962 1
return dev_storage + 410;
d9998 1
a9998 1
return dev_storage + 395;
d10013 1
a10013 1
return dev_storage + 380;
d10028 1
a10028 1
return dev_storage + 365;
d10043 1
a10043 1
return dev_storage + 350;
d10058 1
a10058 1
return dev_storage + 335;
d10073 1
a10073 1
return dev_storage + 320;
d10088 1
a10088 1
return dev_storage + 305;
d10103 1
a10103 1
return dev_storage + 290;
d10121 1
a10121 1
return dev_storage + 275;
d10136 1
a10136 1
return dev_storage + 189;
d10157 1
a10157 1
return dev_storage + 260;
d10172 1
a10172 1
return dev_storage + 245;
d10187 1
a10187 1
return dev_storage + 230;
d10205 1
a10205 1
return dev_storage + 747;
d10220 1
a10220 1
return dev_storage + 737;
d10235 1
a10235 1
return dev_storage + 727;
d10265 1
a10265 1
return dev_storage + 604;
d10283 1
a10283 1
return dev_storage + 819;
d10298 1
a10298 1
return dev_storage + 805;
d10313 1
a10313 1
return dev_storage + 795;
d10328 1
a10328 1
return dev_storage + 785;
d10343 1
a10343 1
return dev_storage + 775;
d10361 1
a10361 1
return dev_storage + 765;
d10376 1
a10376 1
return dev_storage + 589;
d10403 1
a10403 1
return dev_storage + 574;
d10418 1
a10418 1
return dev_storage + 559;
d10433 1
a10433 1
return dev_storage + 544;
d10448 1
a10448 1
return dev_storage + 529;
d10466 1
a10466 1
return dev_storage + 135;
d10481 1
a10481 1
return dev_storage + 125;
d10496 1
a10496 1
return dev_storage + 115;
d10511 1
a10511 1
return dev_storage + 105;
d10526 1
a10526 1
return dev_storage + 95;
d10541 1
a10541 1
return dev_storage + 85;
d10556 1
a10556 1
return dev_storage + 75;
d10571 1
a10571 1
return dev_storage + 65;
d10589 1
a10589 1
return dev_storage + 514;
d10604 1
a10604 1
return dev_storage + 55;
d10631 1
a10631 1
return dev_storage + 499;
d10646 1
a10646 1
return dev_storage + 484;
d10661 1
a10661 1
return dev_storage + 469;
d10676 1
a10676 1
return dev_storage + 454;
d10691 1
a10691 1
return dev_storage + 439;
d10706 1
a10706 1
return dev_storage + 424;
d10724 1
a10724 1
return dev_storage + 409;
d10760 1
a10760 1
return dev_storage + 394;
d10775 1
a10775 1
return dev_storage + 379;
d10790 1
a10790 1
return dev_storage + 364;
d10805 1
a10805 1
return dev_storage + 349;
d10820 1
a10820 1
return dev_storage + 334;
d10835 1
a10835 1
return dev_storage + 319;
d10850 1
a10850 1
return dev_storage + 304;
d10865 1
a10865 1
return dev_storage + 289;
d10883 1
a10883 1
return dev_storage + 274;
d10898 1
a10898 1
return dev_storage + 188;
d10919 1
a10919 1
return dev_storage + 259;
d10934 1
a10934 1
return dev_storage + 244;
d10949 1
a10949 1
return dev_storage + 229;
d10967 1
a10967 1
return dev_storage + 746;
d10982 1
a10982 1
return dev_storage + 736;
d10997 1
a10997 1
return dev_storage + 726;
d11027 1
a11027 1
return dev_storage + 603;
d11045 1
a11045 1
return dev_storage + 818;
d11060 1
a11060 1
return dev_storage + 814;
d11075 1
a11075 1
return dev_storage + 804;
d11090 1
a11090 1
return dev_storage + 794;
d11105 1
a11105 1
return dev_storage + 784;
d11120 1
a11120 1
return dev_storage + 774;
d11138 1
a11138 1
return dev_storage + 764;
d11153 1
a11153 1
return dev_storage + 588;
d11180 1
a11180 1
return dev_storage + 573;
d11195 1
a11195 1
return dev_storage + 558;
d11210 1
a11210 1
return dev_storage + 543;
d11225 1
a11225 1
return dev_storage + 528;
d11243 1
a11243 1
return dev_storage + 134;
d11258 1
a11258 1
return dev_storage + 124;
d11273 1
a11273 1
return dev_storage + 114;
d11288 1
a11288 1
return dev_storage + 104;
d11303 1
a11303 1
return dev_storage + 94;
d11318 1
a11318 1
return dev_storage + 84;
d11333 1
a11333 1
return dev_storage + 74;
d11348 1
a11348 1
return dev_storage + 64;
d11366 1
a11366 1
return dev_storage + 513;
d11381 1
a11381 1
return dev_storage + 54;
d11408 1
a11408 1
return dev_storage + 498;
d11423 1
a11423 1
return dev_storage + 483;
d11438 1
a11438 1
return dev_storage + 468;
d11453 1
a11453 1
return dev_storage + 453;
d11468 1
a11468 1
return dev_storage + 438;
d11483 1
a11483 1
return dev_storage + 423;
d11501 1
a11501 1
return dev_storage + 408;
d11537 1
a11537 1
return dev_storage + 393;
d11552 1
a11552 1
return dev_storage + 378;
d11567 1
a11567 1
return dev_storage + 363;
d11582 1
a11582 1
return dev_storage + 348;
d11597 1
a11597 1
return dev_storage + 333;
d11612 1
a11612 1
return dev_storage + 318;
d11627 1
a11627 1
return dev_storage + 303;
d11642 1
a11642 1
return dev_storage + 288;
d11660 1
a11660 1
return dev_storage + 273;
d11675 1
a11675 1
return dev_storage + 187;
d11696 1
a11696 1
return dev_storage + 258;
d11711 1
a11711 1
return dev_storage + 243;
d11726 1
a11726 1
return dev_storage + 228;
d11744 1
a11744 1
return dev_storage + 745;
d11759 1
a11759 1
return dev_storage + 735;
d11774 1
a11774 1
return dev_storage + 725;
d11804 1
a11804 1
return dev_storage + 602;
d11822 1
a11822 1
return dev_storage + 817;
d11837 1
a11837 1
return dev_storage + 813;
d11852 1
a11852 1
return dev_storage + 803;
d11867 1
a11867 1
return dev_storage + 793;
d11882 1
a11882 1
return dev_storage + 783;
d11897 1
a11897 1
return dev_storage + 773;
d11915 1
a11915 1
return dev_storage + 763;
d11930 1
a11930 1
return dev_storage + 587;
d11957 1
a11957 1
return dev_storage + 572;
d11972 1
a11972 1
return dev_storage + 557;
d11987 1
a11987 1
return dev_storage + 542;
d12002 1
a12002 1
return dev_storage + 527;
d12020 1
a12020 1
return dev_storage + 133;
d12035 1
a12035 1
return dev_storage + 123;
d12050 1
a12050 1
return dev_storage + 113;
d12065 1
a12065 1
return dev_storage + 103;
d12080 1
a12080 1
return dev_storage + 93;
d12095 1
a12095 1
return dev_storage + 83;
d12110 1
a12110 1
return dev_storage + 73;
d12125 1
a12125 1
return dev_storage + 63;
d12143 1
a12143 1
return dev_storage + 512;
d12158 1
a12158 1
return dev_storage + 53;
d12185 1
a12185 1
return dev_storage + 497;
d12200 1
a12200 1
return dev_storage + 482;
d12215 1
a12215 1
return dev_storage + 467;
d12230 1
a12230 1
return dev_storage + 452;
d12245 1
a12245 1
return dev_storage + 437;
d12260 1
a12260 1
return dev_storage + 422;
d12278 1
a12278 1
return dev_storage + 407;
d12314 1
a12314 1
return dev_storage + 392;
d12329 1
a12329 1
return dev_storage + 377;
d12344 1
a12344 1
return dev_storage + 362;
d12359 1
a12359 1
return dev_storage + 347;
d12374 1
a12374 1
return dev_storage + 332;
d12389 1
a12389 1
return dev_storage + 317;
d12404 1
a12404 1
return dev_storage + 302;
d12419 1
a12419 1
return dev_storage + 287;
d12437 1
a12437 1
return dev_storage + 272;
d12452 1
a12452 1
return dev_storage + 186;
d12473 1
a12473 1
return dev_storage + 257;
d12488 1
a12488 1
return dev_storage + 242;
d12503 1
a12503 1
return dev_storage + 227;
d12521 1
a12521 1
return dev_storage + 744;
d12536 1
a12536 1
return dev_storage + 734;
d12551 1
a12551 1
return dev_storage + 724;
d12581 1
a12581 1
return dev_storage + 601;
d12599 1
a12599 1
return dev_storage + 816;
d12614 1
a12614 1
return dev_storage + 812;
d12629 1
a12629 1
return dev_storage + 802;
d12644 1
a12644 1
return dev_storage + 792;
d12659 1
a12659 1
return dev_storage + 782;
d12674 1
a12674 1
return dev_storage + 772;
d12692 1
a12692 1
return dev_storage + 762;
d12707 1
a12707 1
return dev_storage + 586;
d12734 1
a12734 1
return dev_storage + 571;
d12749 1
a12749 1
return dev_storage + 556;
d12764 1
a12764 1
return dev_storage + 541;
d12779 1
a12779 1
return dev_storage + 526;
d12797 1
a12797 1
return dev_storage + 132;
d12812 1
a12812 1
return dev_storage + 122;
d12827 1
a12827 1
return dev_storage + 112;
d12842 1
a12842 1
return dev_storage + 102;
d12857 1
a12857 1
return dev_storage + 92;
d12872 1
a12872 1
return dev_storage + 82;
d12887 1
a12887 1
return dev_storage + 72;
d12902 1
a12902 1
return dev_storage + 62;
d12920 1
a12920 1
return dev_storage + 511;
d12935 1
a12935 1
return dev_storage + 52;
d12962 1
a12962 1
return dev_storage + 496;
d12977 1
a12977 1
return dev_storage + 481;
d12992 1
a12992 1
return dev_storage + 466;
d13007 1
a13007 1
return dev_storage + 451;
d13022 1
a13022 1
return dev_storage + 436;
d13037 1
a13037 1
return dev_storage + 421;
d13055 1
a13055 1
return dev_storage + 406;
d13091 1
a13091 1
return dev_storage + 391;
d13106 1
a13106 1
return dev_storage + 376;
d13121 1
a13121 1
return dev_storage + 361;
d13136 1
a13136 1
return dev_storage + 346;
d13151 1
a13151 1
return dev_storage + 331;
d13166 1
a13166 1
return dev_storage + 316;
d13181 1
a13181 1
return dev_storage + 301;
d13196 1
a13196 1
return dev_storage + 286;
d13214 1
a13214 1
return dev_storage + 271;
d13229 1
a13229 1
return dev_storage + 185;
d13250 1
a13250 1
return dev_storage + 256;
d13265 1
a13265 1
return dev_storage + 241;
d13280 1
a13280 1
return dev_storage + 226;
d13298 1
a13298 1
return dev_storage + 743;
d13313 1
a13313 1
return dev_storage + 733;
d13328 1
a13328 1
return dev_storage + 723;
d13358 1
a13358 1
return dev_storage + 600;
d13376 1
a13376 1
return dev_storage + 815;
d13391 1
a13391 1
return dev_storage + 811;
d13406 1
a13406 1
return dev_storage + 801;
d13421 1
a13421 1
return dev_storage + 791;
d13436 1
a13436 1
return dev_storage + 781;
d13451 1
a13451 1
return dev_storage + 771;
d13469 1
a13469 1
return dev_storage + 761;
d13484 1
a13484 1
return dev_storage + 585;
d13511 1
a13511 1
return dev_storage + 570;
d13526 1
a13526 1
return dev_storage + 555;
d13541 1
a13541 1
return dev_storage + 540;
d13556 1
a13556 1
return dev_storage + 525;
d13574 1
a13574 1
return dev_storage + 131;
d13589 1
a13589 1
return dev_storage + 121;
d13604 1
a13604 1
return dev_storage + 111;
d13619 1
a13619 1
return dev_storage + 101;
d13634 1
a13634 1
return dev_storage + 91;
d13649 1
a13649 1
return dev_storage + 81;
d13664 1
a13664 1
return dev_storage + 71;
d13679 1
a13679 1
return dev_storage + 61;
d13697 1
a13697 1
return dev_storage + 510;
d13712 1
a13712 1
return dev_storage + 51;
d13739 1
a13739 1
return dev_storage + 495;
d13754 1
a13754 1
return dev_storage + 480;
d13769 1
a13769 1
return dev_storage + 465;
d13784 1
a13784 1
return dev_storage + 450;
d13799 1
a13799 1
return dev_storage + 435;
d13814 1
a13814 1
return dev_storage + 420;
d13832 1
a13832 1
return dev_storage + 405;
d13868 1
a13868 1
return dev_storage + 390;
d13883 1
a13883 1
return dev_storage + 375;
d13898 1
a13898 1
return dev_storage + 360;
d13913 1
a13913 1
return dev_storage + 345;
d13928 1
a13928 1
return dev_storage + 330;
d13943 1
a13943 1
return dev_storage + 315;
d13958 1
a13958 1
return dev_storage + 300;
d13973 1
a13973 1
return dev_storage + 285;
d13991 1
a13991 1
return dev_storage + 270;
d14006 1
a14006 1
return dev_storage + 184;
d14027 1
a14027 1
return dev_storage + 255;
d14042 1
a14042 1
return dev_storage + 240;
d14057 1
a14057 1
return dev_storage + 225;
d14075 1
a14075 1
return dev_storage + 742;
d14090 1
a14090 1
return dev_storage + 732;
d14105 1
a14105 1
return dev_storage + 722;
d14156 1
a14156 1
return dev_storage + 173;
d14174 1
a14174 1
return dev_storage + 168;
d14189 1
a14189 1
return dev_storage + 167;
d14204 1
a14204 1
return dev_storage + 166;
d14219 1
a14219 1
return dev_storage + 165;
d14234 1
a14234 1
return dev_storage + 164;
d14249 1
a14249 1
return dev_storage + 163;
d14264 1
a14264 1
return dev_storage + 162;
d14279 1
a14279 1
return dev_storage + 161;
d14303 1
a14303 1
return dev_storage + 160;
d14318 1
a14318 1
return dev_storage + 159;
d14333 1
a14333 1
return dev_storage + 158;
d14348 1
a14348 1
return dev_storage + 157;
d14366 1
a14366 1
return dev_storage + 830;
d14381 1
a14381 1
return dev_storage + 156;
d14405 1
a14405 1
return dev_storage + 829;
d14420 1
a14420 1
return dev_storage + 155;
d14444 1
a14444 1
return dev_storage + 828;
d14459 1
a14459 1
return dev_storage + 154;
d14483 1
a14483 1
return dev_storage + 827;
d14498 1
a14498 1
return dev_storage + 153;
d14522 1
a14522 1
return dev_storage + 826;
d14537 1
a14537 1
return dev_storage + 152;
d14561 1
a14561 1
return dev_storage + 825;
d14576 1
a14576 1
return dev_storage + 151;
d14606 1
a14606 1
return dev_storage + 150;
d14621 1
a14621 1
return dev_storage + 149;
d14636 1
a14636 1
return dev_storage + 148;
d14651 1
a14651 1
return dev_storage + 147;
d14666 1
a14666 1
return dev_storage + 146;
d14681 1
a14681 1
return dev_storage + 145;
d14696 1
a14696 1
return dev_storage + 144;
d14711 1
a14711 1
return dev_storage + 143;
d14726 1
a14726 1
return dev_storage + 142;
d14741 1
a14741 1
return dev_storage + 141;
d14771 1
a14771 1
return dev_storage + 833;
d14786 1
a14786 1
return dev_storage + 832;
@


1.18
log
@* Makefile.in (DLL_O_FILES): Add fhandler_netdrive.o.
* fhandler_netdrive.cc: Placeholder file for future development.
* devices.h (FH_NETDRIVE): Define new virtual device type.
(netdrive_dev): Define.
* devices.in (dev_netdrive_storage): Define.
* devices.cc: Regenerate.
@
text
@d28 1
a28 1
const device dev_netdev_storage =
@


1.17
log
@* child_info.h (fork_info): Use different method to alias variable.
(spawn_info): Ditto.
* cxx.cc (__cxa_guard_acquire): New function (needed for gcc 4.x).
(__cxa_guard_release): Ditto.
* devices.in: Make sure stuff is correctly bracketed (for gcc 4.x).
* devices.cc: Regenerate.
* fhandler.h (fhandler_disk_file::fchmod): Avoid left coercion (for gcc 4.x).
* smallprint.c (__rn): Declare as __fastcall since gcc 4.x complains about use
of regparm, for some reason.
* sync.h (sync::init_lock): Remove.
* sync.cc (sync::init_lock): Ditto.
@
text
@d28 3
@


1.16
log
@	* devices.cc: Regenerate.
@
text
@d20 1
a20 1
  {"/cygdrive", FH_CYGDRIVE, "/cygdrive"};
d23 1
a23 1
  {"", FH_FS, ""};
d26 1
a26 1
  {"", FH_PROC, ""};
d29 1
a29 1
  {"", FH_REGISTRY, ""};
d32 1
a32 1
  {"", FH_PIPER, ""};
d35 1
a35 1
  {"", FH_PIPEW, ""};
d38 1
a38 1
  {"", FH_TCP, ""};
d41 1
a41 1
  {"", FH_UDP, ""};
d44 1
a44 1
  {"", FH_STREAM, ""};
d47 1
a47 1
  {"", FH_DGRAM, ""};
d50 2
a51 1
  {"", FH_BAD, ""};
d55 835
a889 835
  {"/dev/clipboard", FH_CLIPBOARD, "\\dev\\clipboard"},
  {"/dev/com1", FHDEV(DEV_SERIAL_MAJOR, 1), "\\\\.\\com1"},
  {"/dev/com2", FHDEV(DEV_SERIAL_MAJOR, 2), "\\\\.\\com2"},
  {"/dev/com3", FHDEV(DEV_SERIAL_MAJOR, 3), "\\\\.\\com3"},
  {"/dev/com4", FHDEV(DEV_SERIAL_MAJOR, 4), "\\\\.\\com4"},
  {"/dev/com5", FHDEV(DEV_SERIAL_MAJOR, 5), "\\\\.\\com5"},
  {"/dev/com6", FHDEV(DEV_SERIAL_MAJOR, 6), "\\\\.\\com6"},
  {"/dev/com7", FHDEV(DEV_SERIAL_MAJOR, 7), "\\\\.\\com7"},
  {"/dev/com8", FHDEV(DEV_SERIAL_MAJOR, 8), "\\\\.\\com8"},
  {"/dev/com9", FHDEV(DEV_SERIAL_MAJOR, 9), "\\\\.\\com9"},
  {"/dev/com10", FHDEV(DEV_SERIAL_MAJOR, 10), "\\\\.\\com10"},
  {"/dev/com11", FHDEV(DEV_SERIAL_MAJOR, 11), "\\\\.\\com11"},
  {"/dev/com12", FHDEV(DEV_SERIAL_MAJOR, 12), "\\\\.\\com12"},
  {"/dev/com13", FHDEV(DEV_SERIAL_MAJOR, 13), "\\\\.\\com13"},
  {"/dev/com14", FHDEV(DEV_SERIAL_MAJOR, 14), "\\\\.\\com14"},
  {"/dev/com15", FHDEV(DEV_SERIAL_MAJOR, 15), "\\\\.\\com15"},
  {"/dev/com16", FHDEV(DEV_SERIAL_MAJOR, 16), "\\\\.\\com16"},
  {"/dev/conin", FH_CONIN, "conin"},
  {"/dev/conout", FH_CONOUT, "conout"},
  {"/dev/console", FH_CONSOLE, "\\dev\\console"},
  {"/dev/dsp", FH_OSS_DSP, "\\dev\\dsp"},
  {"/dev/fd0", FHDEV(DEV_FLOPPY_MAJOR, 0), "\\Device\\Floppy0"},
  {"/dev/fd1", FHDEV(DEV_FLOPPY_MAJOR, 1), "\\Device\\Floppy1"},
  {"/dev/fd2", FHDEV(DEV_FLOPPY_MAJOR, 2), "\\Device\\Floppy2"},
  {"/dev/fd3", FHDEV(DEV_FLOPPY_MAJOR, 3), "\\Device\\Floppy3"},
  {"/dev/fd4", FHDEV(DEV_FLOPPY_MAJOR, 4), "\\Device\\Floppy4"},
  {"/dev/fd5", FHDEV(DEV_FLOPPY_MAJOR, 5), "\\Device\\Floppy5"},
  {"/dev/fd6", FHDEV(DEV_FLOPPY_MAJOR, 6), "\\Device\\Floppy6"},
  {"/dev/fd7", FHDEV(DEV_FLOPPY_MAJOR, 7), "\\Device\\Floppy7"},
  {"/dev/fd8", FHDEV(DEV_FLOPPY_MAJOR, 8), "\\Device\\Floppy8"},
  {"/dev/fd9", FHDEV(DEV_FLOPPY_MAJOR, 9), "\\Device\\Floppy9"},
  {"/dev/fd10", FHDEV(DEV_FLOPPY_MAJOR, 10), "\\Device\\Floppy10"},
  {"/dev/fd11", FHDEV(DEV_FLOPPY_MAJOR, 11), "\\Device\\Floppy11"},
  {"/dev/fd12", FHDEV(DEV_FLOPPY_MAJOR, 12), "\\Device\\Floppy12"},
  {"/dev/fd13", FHDEV(DEV_FLOPPY_MAJOR, 13), "\\Device\\Floppy13"},
  {"/dev/fd14", FHDEV(DEV_FLOPPY_MAJOR, 14), "\\Device\\Floppy14"},
  {"/dev/fd15", FHDEV(DEV_FLOPPY_MAJOR, 15), "\\Device\\Floppy15"},
  {"/dev/fifo", FH_FIFO, "\\dev\\fifo"},
  {"/dev/full", FH_FULL, "\\dev\\full"},
  {"/dev/kmem", FH_KMEM, "\\dev\\mem"},
  {"/dev/mem", FH_MEM, "\\dev\\mem"},
  {"/dev/nst0", FHDEV(DEV_TAPE_MAJOR, 128), "\\Device\\Tape0"},
  {"/dev/nst1", FHDEV(DEV_TAPE_MAJOR, 129), "\\Device\\Tape1"},
  {"/dev/nst2", FHDEV(DEV_TAPE_MAJOR, 130), "\\Device\\Tape2"},
  {"/dev/nst3", FHDEV(DEV_TAPE_MAJOR, 131), "\\Device\\Tape3"},
  {"/dev/nst4", FHDEV(DEV_TAPE_MAJOR, 132), "\\Device\\Tape4"},
  {"/dev/nst5", FHDEV(DEV_TAPE_MAJOR, 133), "\\Device\\Tape5"},
  {"/dev/nst6", FHDEV(DEV_TAPE_MAJOR, 134), "\\Device\\Tape6"},
  {"/dev/nst7", FHDEV(DEV_TAPE_MAJOR, 135), "\\Device\\Tape7"},
  {"/dev/nst8", FHDEV(DEV_TAPE_MAJOR, 136), "\\Device\\Tape8"},
  {"/dev/nst9", FHDEV(DEV_TAPE_MAJOR, 137), "\\Device\\Tape9"},
  {"/dev/nst10", FHDEV(DEV_TAPE_MAJOR, 138), "\\Device\\Tape10"},
  {"/dev/nst11", FHDEV(DEV_TAPE_MAJOR, 139), "\\Device\\Tape11"},
  {"/dev/nst12", FHDEV(DEV_TAPE_MAJOR, 140), "\\Device\\Tape12"},
  {"/dev/nst13", FHDEV(DEV_TAPE_MAJOR, 141), "\\Device\\Tape13"},
  {"/dev/nst14", FHDEV(DEV_TAPE_MAJOR, 142), "\\Device\\Tape14"},
  {"/dev/nst15", FHDEV(DEV_TAPE_MAJOR, 143), "\\Device\\Tape15"},
  {"/dev/nst16", FHDEV(DEV_TAPE_MAJOR, 144), "\\Device\\Tape16"},
  {"/dev/nst17", FHDEV(DEV_TAPE_MAJOR, 145), "\\Device\\Tape17"},
  {"/dev/nst18", FHDEV(DEV_TAPE_MAJOR, 146), "\\Device\\Tape18"},
  {"/dev/nst19", FHDEV(DEV_TAPE_MAJOR, 147), "\\Device\\Tape19"},
  {"/dev/nst20", FHDEV(DEV_TAPE_MAJOR, 148), "\\Device\\Tape20"},
  {"/dev/nst21", FHDEV(DEV_TAPE_MAJOR, 149), "\\Device\\Tape21"},
  {"/dev/nst22", FHDEV(DEV_TAPE_MAJOR, 150), "\\Device\\Tape22"},
  {"/dev/nst23", FHDEV(DEV_TAPE_MAJOR, 151), "\\Device\\Tape23"},
  {"/dev/nst24", FHDEV(DEV_TAPE_MAJOR, 152), "\\Device\\Tape24"},
  {"/dev/nst25", FHDEV(DEV_TAPE_MAJOR, 153), "\\Device\\Tape25"},
  {"/dev/nst26", FHDEV(DEV_TAPE_MAJOR, 154), "\\Device\\Tape26"},
  {"/dev/nst27", FHDEV(DEV_TAPE_MAJOR, 155), "\\Device\\Tape27"},
  {"/dev/nst28", FHDEV(DEV_TAPE_MAJOR, 156), "\\Device\\Tape28"},
  {"/dev/nst29", FHDEV(DEV_TAPE_MAJOR, 157), "\\Device\\Tape29"},
  {"/dev/nst30", FHDEV(DEV_TAPE_MAJOR, 158), "\\Device\\Tape30"},
  {"/dev/nst31", FHDEV(DEV_TAPE_MAJOR, 159), "\\Device\\Tape31"},
  {"/dev/nst32", FHDEV(DEV_TAPE_MAJOR, 160), "\\Device\\Tape32"},
  {"/dev/nst33", FHDEV(DEV_TAPE_MAJOR, 161), "\\Device\\Tape33"},
  {"/dev/nst34", FHDEV(DEV_TAPE_MAJOR, 162), "\\Device\\Tape34"},
  {"/dev/nst35", FHDEV(DEV_TAPE_MAJOR, 163), "\\Device\\Tape35"},
  {"/dev/nst36", FHDEV(DEV_TAPE_MAJOR, 164), "\\Device\\Tape36"},
  {"/dev/nst37", FHDEV(DEV_TAPE_MAJOR, 165), "\\Device\\Tape37"},
  {"/dev/nst38", FHDEV(DEV_TAPE_MAJOR, 166), "\\Device\\Tape38"},
  {"/dev/nst39", FHDEV(DEV_TAPE_MAJOR, 167), "\\Device\\Tape39"},
  {"/dev/nst40", FHDEV(DEV_TAPE_MAJOR, 168), "\\Device\\Tape40"},
  {"/dev/nst41", FHDEV(DEV_TAPE_MAJOR, 169), "\\Device\\Tape41"},
  {"/dev/nst42", FHDEV(DEV_TAPE_MAJOR, 170), "\\Device\\Tape42"},
  {"/dev/nst43", FHDEV(DEV_TAPE_MAJOR, 171), "\\Device\\Tape43"},
  {"/dev/nst44", FHDEV(DEV_TAPE_MAJOR, 172), "\\Device\\Tape44"},
  {"/dev/nst45", FHDEV(DEV_TAPE_MAJOR, 173), "\\Device\\Tape45"},
  {"/dev/nst46", FHDEV(DEV_TAPE_MAJOR, 174), "\\Device\\Tape46"},
  {"/dev/nst47", FHDEV(DEV_TAPE_MAJOR, 175), "\\Device\\Tape47"},
  {"/dev/nst48", FHDEV(DEV_TAPE_MAJOR, 176), "\\Device\\Tape48"},
  {"/dev/nst49", FHDEV(DEV_TAPE_MAJOR, 177), "\\Device\\Tape49"},
  {"/dev/nst50", FHDEV(DEV_TAPE_MAJOR, 178), "\\Device\\Tape50"},
  {"/dev/nst51", FHDEV(DEV_TAPE_MAJOR, 179), "\\Device\\Tape51"},
  {"/dev/nst52", FHDEV(DEV_TAPE_MAJOR, 180), "\\Device\\Tape52"},
  {"/dev/nst53", FHDEV(DEV_TAPE_MAJOR, 181), "\\Device\\Tape53"},
  {"/dev/nst54", FHDEV(DEV_TAPE_MAJOR, 182), "\\Device\\Tape54"},
  {"/dev/nst55", FHDEV(DEV_TAPE_MAJOR, 183), "\\Device\\Tape55"},
  {"/dev/nst56", FHDEV(DEV_TAPE_MAJOR, 184), "\\Device\\Tape56"},
  {"/dev/nst57", FHDEV(DEV_TAPE_MAJOR, 185), "\\Device\\Tape57"},
  {"/dev/nst58", FHDEV(DEV_TAPE_MAJOR, 186), "\\Device\\Tape58"},
  {"/dev/nst59", FHDEV(DEV_TAPE_MAJOR, 187), "\\Device\\Tape59"},
  {"/dev/nst60", FHDEV(DEV_TAPE_MAJOR, 188), "\\Device\\Tape60"},
  {"/dev/nst61", FHDEV(DEV_TAPE_MAJOR, 189), "\\Device\\Tape61"},
  {"/dev/nst62", FHDEV(DEV_TAPE_MAJOR, 190), "\\Device\\Tape62"},
  {"/dev/nst63", FHDEV(DEV_TAPE_MAJOR, 191), "\\Device\\Tape63"},
  {"/dev/nst64", FHDEV(DEV_TAPE_MAJOR, 192), "\\Device\\Tape64"},
  {"/dev/nst65", FHDEV(DEV_TAPE_MAJOR, 193), "\\Device\\Tape65"},
  {"/dev/nst66", FHDEV(DEV_TAPE_MAJOR, 194), "\\Device\\Tape66"},
  {"/dev/nst67", FHDEV(DEV_TAPE_MAJOR, 195), "\\Device\\Tape67"},
  {"/dev/nst68", FHDEV(DEV_TAPE_MAJOR, 196), "\\Device\\Tape68"},
  {"/dev/nst69", FHDEV(DEV_TAPE_MAJOR, 197), "\\Device\\Tape69"},
  {"/dev/nst70", FHDEV(DEV_TAPE_MAJOR, 198), "\\Device\\Tape70"},
  {"/dev/nst71", FHDEV(DEV_TAPE_MAJOR, 199), "\\Device\\Tape71"},
  {"/dev/nst72", FHDEV(DEV_TAPE_MAJOR, 200), "\\Device\\Tape72"},
  {"/dev/nst73", FHDEV(DEV_TAPE_MAJOR, 201), "\\Device\\Tape73"},
  {"/dev/nst74", FHDEV(DEV_TAPE_MAJOR, 202), "\\Device\\Tape74"},
  {"/dev/nst75", FHDEV(DEV_TAPE_MAJOR, 203), "\\Device\\Tape75"},
  {"/dev/nst76", FHDEV(DEV_TAPE_MAJOR, 204), "\\Device\\Tape76"},
  {"/dev/nst77", FHDEV(DEV_TAPE_MAJOR, 205), "\\Device\\Tape77"},
  {"/dev/nst78", FHDEV(DEV_TAPE_MAJOR, 206), "\\Device\\Tape78"},
  {"/dev/nst79", FHDEV(DEV_TAPE_MAJOR, 207), "\\Device\\Tape79"},
  {"/dev/nst80", FHDEV(DEV_TAPE_MAJOR, 208), "\\Device\\Tape80"},
  {"/dev/nst81", FHDEV(DEV_TAPE_MAJOR, 209), "\\Device\\Tape81"},
  {"/dev/nst82", FHDEV(DEV_TAPE_MAJOR, 210), "\\Device\\Tape82"},
  {"/dev/nst83", FHDEV(DEV_TAPE_MAJOR, 211), "\\Device\\Tape83"},
  {"/dev/nst84", FHDEV(DEV_TAPE_MAJOR, 212), "\\Device\\Tape84"},
  {"/dev/nst85", FHDEV(DEV_TAPE_MAJOR, 213), "\\Device\\Tape85"},
  {"/dev/nst86", FHDEV(DEV_TAPE_MAJOR, 214), "\\Device\\Tape86"},
  {"/dev/nst87", FHDEV(DEV_TAPE_MAJOR, 215), "\\Device\\Tape87"},
  {"/dev/nst88", FHDEV(DEV_TAPE_MAJOR, 216), "\\Device\\Tape88"},
  {"/dev/nst89", FHDEV(DEV_TAPE_MAJOR, 217), "\\Device\\Tape89"},
  {"/dev/nst90", FHDEV(DEV_TAPE_MAJOR, 218), "\\Device\\Tape90"},
  {"/dev/nst91", FHDEV(DEV_TAPE_MAJOR, 219), "\\Device\\Tape91"},
  {"/dev/nst92", FHDEV(DEV_TAPE_MAJOR, 220), "\\Device\\Tape92"},
  {"/dev/nst93", FHDEV(DEV_TAPE_MAJOR, 221), "\\Device\\Tape93"},
  {"/dev/nst94", FHDEV(DEV_TAPE_MAJOR, 222), "\\Device\\Tape94"},
  {"/dev/nst95", FHDEV(DEV_TAPE_MAJOR, 223), "\\Device\\Tape95"},
  {"/dev/nst96", FHDEV(DEV_TAPE_MAJOR, 224), "\\Device\\Tape96"},
  {"/dev/nst97", FHDEV(DEV_TAPE_MAJOR, 225), "\\Device\\Tape97"},
  {"/dev/nst98", FHDEV(DEV_TAPE_MAJOR, 226), "\\Device\\Tape98"},
  {"/dev/nst99", FHDEV(DEV_TAPE_MAJOR, 227), "\\Device\\Tape99"},
  {"/dev/nst100", FHDEV(DEV_TAPE_MAJOR, 228), "\\Device\\Tape100"},
  {"/dev/nst101", FHDEV(DEV_TAPE_MAJOR, 229), "\\Device\\Tape101"},
  {"/dev/nst102", FHDEV(DEV_TAPE_MAJOR, 230), "\\Device\\Tape102"},
  {"/dev/nst103", FHDEV(DEV_TAPE_MAJOR, 231), "\\Device\\Tape103"},
  {"/dev/nst104", FHDEV(DEV_TAPE_MAJOR, 232), "\\Device\\Tape104"},
  {"/dev/nst105", FHDEV(DEV_TAPE_MAJOR, 233), "\\Device\\Tape105"},
  {"/dev/nst106", FHDEV(DEV_TAPE_MAJOR, 234), "\\Device\\Tape106"},
  {"/dev/nst107", FHDEV(DEV_TAPE_MAJOR, 235), "\\Device\\Tape107"},
  {"/dev/nst108", FHDEV(DEV_TAPE_MAJOR, 236), "\\Device\\Tape108"},
  {"/dev/nst109", FHDEV(DEV_TAPE_MAJOR, 237), "\\Device\\Tape109"},
  {"/dev/nst110", FHDEV(DEV_TAPE_MAJOR, 238), "\\Device\\Tape110"},
  {"/dev/nst111", FHDEV(DEV_TAPE_MAJOR, 239), "\\Device\\Tape111"},
  {"/dev/nst112", FHDEV(DEV_TAPE_MAJOR, 240), "\\Device\\Tape112"},
  {"/dev/nst113", FHDEV(DEV_TAPE_MAJOR, 241), "\\Device\\Tape113"},
  {"/dev/nst114", FHDEV(DEV_TAPE_MAJOR, 242), "\\Device\\Tape114"},
  {"/dev/nst115", FHDEV(DEV_TAPE_MAJOR, 243), "\\Device\\Tape115"},
  {"/dev/nst116", FHDEV(DEV_TAPE_MAJOR, 244), "\\Device\\Tape116"},
  {"/dev/nst117", FHDEV(DEV_TAPE_MAJOR, 245), "\\Device\\Tape117"},
  {"/dev/nst118", FHDEV(DEV_TAPE_MAJOR, 246), "\\Device\\Tape118"},
  {"/dev/nst119", FHDEV(DEV_TAPE_MAJOR, 247), "\\Device\\Tape119"},
  {"/dev/nst120", FHDEV(DEV_TAPE_MAJOR, 248), "\\Device\\Tape120"},
  {"/dev/nst121", FHDEV(DEV_TAPE_MAJOR, 249), "\\Device\\Tape121"},
  {"/dev/nst122", FHDEV(DEV_TAPE_MAJOR, 250), "\\Device\\Tape122"},
  {"/dev/nst123", FHDEV(DEV_TAPE_MAJOR, 251), "\\Device\\Tape123"},
  {"/dev/nst124", FHDEV(DEV_TAPE_MAJOR, 252), "\\Device\\Tape124"},
  {"/dev/nst125", FHDEV(DEV_TAPE_MAJOR, 253), "\\Device\\Tape125"},
  {"/dev/nst126", FHDEV(DEV_TAPE_MAJOR, 254), "\\Device\\Tape126"},
  {"/dev/nst127", FHDEV(DEV_TAPE_MAJOR, 255), "\\Device\\Tape127"},
  {"/dev/null", FH_NULL, "nul"},
  {"/dev/pipe", FH_PIPE, "\\dev\\pipe"},
  {"/dev/port", FH_PORT, "\\dev\\port"},
  {"/dev/ptmx", FH_PTYM, "\\dev\\ptmx"},
  {"/dev/random", FH_RANDOM, "\\dev\\random"},
  {"/dev/scd0", FHDEV(DEV_CDROM_MAJOR, 0), "\\Device\\CdRom0"},
  {"/dev/scd1", FHDEV(DEV_CDROM_MAJOR, 1), "\\Device\\CdRom1"},
  {"/dev/scd2", FHDEV(DEV_CDROM_MAJOR, 2), "\\Device\\CdRom2"},
  {"/dev/scd3", FHDEV(DEV_CDROM_MAJOR, 3), "\\Device\\CdRom3"},
  {"/dev/scd4", FHDEV(DEV_CDROM_MAJOR, 4), "\\Device\\CdRom4"},
  {"/dev/scd5", FHDEV(DEV_CDROM_MAJOR, 5), "\\Device\\CdRom5"},
  {"/dev/scd6", FHDEV(DEV_CDROM_MAJOR, 6), "\\Device\\CdRom6"},
  {"/dev/scd7", FHDEV(DEV_CDROM_MAJOR, 7), "\\Device\\CdRom7"},
  {"/dev/scd8", FHDEV(DEV_CDROM_MAJOR, 8), "\\Device\\CdRom8"},
  {"/dev/scd9", FHDEV(DEV_CDROM_MAJOR, 9), "\\Device\\CdRom9"},
  {"/dev/scd10", FHDEV(DEV_CDROM_MAJOR, 10), "\\Device\\CdRom10"},
  {"/dev/scd11", FHDEV(DEV_CDROM_MAJOR, 11), "\\Device\\CdRom11"},
  {"/dev/scd12", FHDEV(DEV_CDROM_MAJOR, 12), "\\Device\\CdRom12"},
  {"/dev/scd13", FHDEV(DEV_CDROM_MAJOR, 13), "\\Device\\CdRom13"},
  {"/dev/scd14", FHDEV(DEV_CDROM_MAJOR, 14), "\\Device\\CdRom14"},
  {"/dev/scd15", FHDEV(DEV_CDROM_MAJOR, 15), "\\Device\\CdRom15"},
  {"/dev/sda", FH_SDA, "\\Device\\Harddisk0\\Partition0"},
  {"/dev/sdb", FH_SDB, "\\Device\\Harddisk1\\Partition0"},
  {"/dev/sdc", FH_SDC, "\\Device\\Harddisk2\\Partition0"},
  {"/dev/sdd", FH_SDD, "\\Device\\Harddisk3\\Partition0"},
  {"/dev/sde", FH_SDE, "\\Device\\Harddisk4\\Partition0"},
  {"/dev/sdf", FH_SDF, "\\Device\\Harddisk5\\Partition0"},
  {"/dev/sdg", FH_SDG, "\\Device\\Harddisk6\\Partition0"},
  {"/dev/sdh", FH_SDH, "\\Device\\Harddisk7\\Partition0"},
  {"/dev/sdi", FH_SDI, "\\Device\\Harddisk8\\Partition0"},
  {"/dev/sdj", FH_SDJ, "\\Device\\Harddisk9\\Partition0"},
  {"/dev/sdk", FH_SDK, "\\Device\\Harddisk10\\Partition0"},
  {"/dev/sdl", FH_SDL, "\\Device\\Harddisk11\\Partition0"},
  {"/dev/sdm", FH_SDM, "\\Device\\Harddisk12\\Partition0"},
  {"/dev/sdn", FH_SDN, "\\Device\\Harddisk13\\Partition0"},
  {"/dev/sdo", FH_SDO, "\\Device\\Harddisk14\\Partition0"},
  {"/dev/sdp", FH_SDP, "\\Device\\Harddisk15\\Partition0"},
  {"/dev/sdq", FH_SDQ, "\\Device\\Harddisk16\\Partition0"},
  {"/dev/sdr", FH_SDR, "\\Device\\Harddisk17\\Partition0"},
  {"/dev/sds", FH_SDS, "\\Device\\Harddisk18\\Partition0"},
  {"/dev/sdt", FH_SDT, "\\Device\\Harddisk19\\Partition0"},
  {"/dev/sdu", FH_SDU, "\\Device\\Harddisk20\\Partition0"},
  {"/dev/sdv", FH_SDV, "\\Device\\Harddisk21\\Partition0"},
  {"/dev/sdw", FH_SDW, "\\Device\\Harddisk22\\Partition0"},
  {"/dev/sdx", FH_SDX, "\\Device\\Harddisk23\\Partition0"},
  {"/dev/sdy", FH_SDY, "\\Device\\Harddisk24\\Partition0"},
  {"/dev/sdz", FH_SDZ, "\\Device\\Harddisk25\\Partition0"},
  {"/dev/sda1", FH_SDA | 1, "\\Device\\Harddisk0\\Partition1"},
  {"/dev/sda2", FH_SDA | 2, "\\Device\\Harddisk0\\Partition2"},
  {"/dev/sda3", FH_SDA | 3, "\\Device\\Harddisk0\\Partition3"},
  {"/dev/sda4", FH_SDA | 4, "\\Device\\Harddisk0\\Partition4"},
  {"/dev/sda5", FH_SDA | 5, "\\Device\\Harddisk0\\Partition5"},
  {"/dev/sda6", FH_SDA | 6, "\\Device\\Harddisk0\\Partition6"},
  {"/dev/sda7", FH_SDA | 7, "\\Device\\Harddisk0\\Partition7"},
  {"/dev/sda8", FH_SDA | 8, "\\Device\\Harddisk0\\Partition8"},
  {"/dev/sda9", FH_SDA | 9, "\\Device\\Harddisk0\\Partition9"},
  {"/dev/sda10", FH_SDA | 10, "\\Device\\Harddisk0\\Partition10"},
  {"/dev/sda11", FH_SDA | 11, "\\Device\\Harddisk0\\Partition11"},
  {"/dev/sda12", FH_SDA | 12, "\\Device\\Harddisk0\\Partition12"},
  {"/dev/sda13", FH_SDA | 13, "\\Device\\Harddisk0\\Partition13"},
  {"/dev/sda14", FH_SDA | 14, "\\Device\\Harddisk0\\Partition14"},
  {"/dev/sda15", FH_SDA | 15, "\\Device\\Harddisk0\\Partition15"},
  {"/dev/sdb1", FH_SDB | 1, "\\Device\\Harddisk1\\Partition1"},
  {"/dev/sdb2", FH_SDB | 2, "\\Device\\Harddisk1\\Partition2"},
  {"/dev/sdb3", FH_SDB | 3, "\\Device\\Harddisk1\\Partition3"},
  {"/dev/sdb4", FH_SDB | 4, "\\Device\\Harddisk1\\Partition4"},
  {"/dev/sdb5", FH_SDB | 5, "\\Device\\Harddisk1\\Partition5"},
  {"/dev/sdb6", FH_SDB | 6, "\\Device\\Harddisk1\\Partition6"},
  {"/dev/sdb7", FH_SDB | 7, "\\Device\\Harddisk1\\Partition7"},
  {"/dev/sdb8", FH_SDB | 8, "\\Device\\Harddisk1\\Partition8"},
  {"/dev/sdb9", FH_SDB | 9, "\\Device\\Harddisk1\\Partition9"},
  {"/dev/sdb10", FH_SDB | 10, "\\Device\\Harddisk1\\Partition10"},
  {"/dev/sdb11", FH_SDB | 11, "\\Device\\Harddisk1\\Partition11"},
  {"/dev/sdb12", FH_SDB | 12, "\\Device\\Harddisk1\\Partition12"},
  {"/dev/sdb13", FH_SDB | 13, "\\Device\\Harddisk1\\Partition13"},
  {"/dev/sdb14", FH_SDB | 14, "\\Device\\Harddisk1\\Partition14"},
  {"/dev/sdb15", FH_SDB | 15, "\\Device\\Harddisk1\\Partition15"},
  {"/dev/sdc1", FH_SDC | 1, "\\Device\\Harddisk2\\Partition1"},
  {"/dev/sdc2", FH_SDC | 2, "\\Device\\Harddisk2\\Partition2"},
  {"/dev/sdc3", FH_SDC | 3, "\\Device\\Harddisk2\\Partition3"},
  {"/dev/sdc4", FH_SDC | 4, "\\Device\\Harddisk2\\Partition4"},
  {"/dev/sdc5", FH_SDC | 5, "\\Device\\Harddisk2\\Partition5"},
  {"/dev/sdc6", FH_SDC | 6, "\\Device\\Harddisk2\\Partition6"},
  {"/dev/sdc7", FH_SDC | 7, "\\Device\\Harddisk2\\Partition7"},
  {"/dev/sdc8", FH_SDC | 8, "\\Device\\Harddisk2\\Partition8"},
  {"/dev/sdc9", FH_SDC | 9, "\\Device\\Harddisk2\\Partition9"},
  {"/dev/sdc10", FH_SDC | 10, "\\Device\\Harddisk2\\Partition10"},
  {"/dev/sdc11", FH_SDC | 11, "\\Device\\Harddisk2\\Partition11"},
  {"/dev/sdc12", FH_SDC | 12, "\\Device\\Harddisk2\\Partition12"},
  {"/dev/sdc13", FH_SDC | 13, "\\Device\\Harddisk2\\Partition13"},
  {"/dev/sdc14", FH_SDC | 14, "\\Device\\Harddisk2\\Partition14"},
  {"/dev/sdc15", FH_SDC | 15, "\\Device\\Harddisk2\\Partition15"},
  {"/dev/sdd1", FH_SDD | 1, "\\Device\\Harddisk3\\Partition1"},
  {"/dev/sdd2", FH_SDD | 2, "\\Device\\Harddisk3\\Partition2"},
  {"/dev/sdd3", FH_SDD | 3, "\\Device\\Harddisk3\\Partition3"},
  {"/dev/sdd4", FH_SDD | 4, "\\Device\\Harddisk3\\Partition4"},
  {"/dev/sdd5", FH_SDD | 5, "\\Device\\Harddisk3\\Partition5"},
  {"/dev/sdd6", FH_SDD | 6, "\\Device\\Harddisk3\\Partition6"},
  {"/dev/sdd7", FH_SDD | 7, "\\Device\\Harddisk3\\Partition7"},
  {"/dev/sdd8", FH_SDD | 8, "\\Device\\Harddisk3\\Partition8"},
  {"/dev/sdd9", FH_SDD | 9, "\\Device\\Harddisk3\\Partition9"},
  {"/dev/sdd10", FH_SDD | 10, "\\Device\\Harddisk3\\Partition10"},
  {"/dev/sdd11", FH_SDD | 11, "\\Device\\Harddisk3\\Partition11"},
  {"/dev/sdd12", FH_SDD | 12, "\\Device\\Harddisk3\\Partition12"},
  {"/dev/sdd13", FH_SDD | 13, "\\Device\\Harddisk3\\Partition13"},
  {"/dev/sdd14", FH_SDD | 14, "\\Device\\Harddisk3\\Partition14"},
  {"/dev/sdd15", FH_SDD | 15, "\\Device\\Harddisk3\\Partition15"},
  {"/dev/sde1", FH_SDE | 1, "\\Device\\Harddisk4\\Partition1"},
  {"/dev/sde2", FH_SDE | 2, "\\Device\\Harddisk4\\Partition2"},
  {"/dev/sde3", FH_SDE | 3, "\\Device\\Harddisk4\\Partition3"},
  {"/dev/sde4", FH_SDE | 4, "\\Device\\Harddisk4\\Partition4"},
  {"/dev/sde5", FH_SDE | 5, "\\Device\\Harddisk4\\Partition5"},
  {"/dev/sde6", FH_SDE | 6, "\\Device\\Harddisk4\\Partition6"},
  {"/dev/sde7", FH_SDE | 7, "\\Device\\Harddisk4\\Partition7"},
  {"/dev/sde8", FH_SDE | 8, "\\Device\\Harddisk4\\Partition8"},
  {"/dev/sde9", FH_SDE | 9, "\\Device\\Harddisk4\\Partition9"},
  {"/dev/sde10", FH_SDE | 10, "\\Device\\Harddisk4\\Partition10"},
  {"/dev/sde11", FH_SDE | 11, "\\Device\\Harddisk4\\Partition11"},
  {"/dev/sde12", FH_SDE | 12, "\\Device\\Harddisk4\\Partition12"},
  {"/dev/sde13", FH_SDE | 13, "\\Device\\Harddisk4\\Partition13"},
  {"/dev/sde14", FH_SDE | 14, "\\Device\\Harddisk4\\Partition14"},
  {"/dev/sde15", FH_SDE | 15, "\\Device\\Harddisk4\\Partition15"},
  {"/dev/sdf1", FH_SDF | 1, "\\Device\\Harddisk5\\Partition1"},
  {"/dev/sdf2", FH_SDF | 2, "\\Device\\Harddisk5\\Partition2"},
  {"/dev/sdf3", FH_SDF | 3, "\\Device\\Harddisk5\\Partition3"},
  {"/dev/sdf4", FH_SDF | 4, "\\Device\\Harddisk5\\Partition4"},
  {"/dev/sdf5", FH_SDF | 5, "\\Device\\Harddisk5\\Partition5"},
  {"/dev/sdf6", FH_SDF | 6, "\\Device\\Harddisk5\\Partition6"},
  {"/dev/sdf7", FH_SDF | 7, "\\Device\\Harddisk5\\Partition7"},
  {"/dev/sdf8", FH_SDF | 8, "\\Device\\Harddisk5\\Partition8"},
  {"/dev/sdf9", FH_SDF | 9, "\\Device\\Harddisk5\\Partition9"},
  {"/dev/sdf10", FH_SDF | 10, "\\Device\\Harddisk5\\Partition10"},
  {"/dev/sdf11", FH_SDF | 11, "\\Device\\Harddisk5\\Partition11"},
  {"/dev/sdf12", FH_SDF | 12, "\\Device\\Harddisk5\\Partition12"},
  {"/dev/sdf13", FH_SDF | 13, "\\Device\\Harddisk5\\Partition13"},
  {"/dev/sdf14", FH_SDF | 14, "\\Device\\Harddisk5\\Partition14"},
  {"/dev/sdf15", FH_SDF | 15, "\\Device\\Harddisk5\\Partition15"},
  {"/dev/sdg1", FH_SDG | 1, "\\Device\\Harddisk6\\Partition1"},
  {"/dev/sdg2", FH_SDG | 2, "\\Device\\Harddisk6\\Partition2"},
  {"/dev/sdg3", FH_SDG | 3, "\\Device\\Harddisk6\\Partition3"},
  {"/dev/sdg4", FH_SDG | 4, "\\Device\\Harddisk6\\Partition4"},
  {"/dev/sdg5", FH_SDG | 5, "\\Device\\Harddisk6\\Partition5"},
  {"/dev/sdg6", FH_SDG | 6, "\\Device\\Harddisk6\\Partition6"},
  {"/dev/sdg7", FH_SDG | 7, "\\Device\\Harddisk6\\Partition7"},
  {"/dev/sdg8", FH_SDG | 8, "\\Device\\Harddisk6\\Partition8"},
  {"/dev/sdg9", FH_SDG | 9, "\\Device\\Harddisk6\\Partition9"},
  {"/dev/sdg10", FH_SDG | 10, "\\Device\\Harddisk6\\Partition10"},
  {"/dev/sdg11", FH_SDG | 11, "\\Device\\Harddisk6\\Partition11"},
  {"/dev/sdg12", FH_SDG | 12, "\\Device\\Harddisk6\\Partition12"},
  {"/dev/sdg13", FH_SDG | 13, "\\Device\\Harddisk6\\Partition13"},
  {"/dev/sdg14", FH_SDG | 14, "\\Device\\Harddisk6\\Partition14"},
  {"/dev/sdg15", FH_SDG | 15, "\\Device\\Harddisk6\\Partition15"},
  {"/dev/sdh1", FH_SDH | 1, "\\Device\\Harddisk7\\Partition1"},
  {"/dev/sdh2", FH_SDH | 2, "\\Device\\Harddisk7\\Partition2"},
  {"/dev/sdh3", FH_SDH | 3, "\\Device\\Harddisk7\\Partition3"},
  {"/dev/sdh4", FH_SDH | 4, "\\Device\\Harddisk7\\Partition4"},
  {"/dev/sdh5", FH_SDH | 5, "\\Device\\Harddisk7\\Partition5"},
  {"/dev/sdh6", FH_SDH | 6, "\\Device\\Harddisk7\\Partition6"},
  {"/dev/sdh7", FH_SDH | 7, "\\Device\\Harddisk7\\Partition7"},
  {"/dev/sdh8", FH_SDH | 8, "\\Device\\Harddisk7\\Partition8"},
  {"/dev/sdh9", FH_SDH | 9, "\\Device\\Harddisk7\\Partition9"},
  {"/dev/sdh10", FH_SDH | 10, "\\Device\\Harddisk7\\Partition10"},
  {"/dev/sdh11", FH_SDH | 11, "\\Device\\Harddisk7\\Partition11"},
  {"/dev/sdh12", FH_SDH | 12, "\\Device\\Harddisk7\\Partition12"},
  {"/dev/sdh13", FH_SDH | 13, "\\Device\\Harddisk7\\Partition13"},
  {"/dev/sdh14", FH_SDH | 14, "\\Device\\Harddisk7\\Partition14"},
  {"/dev/sdh15", FH_SDH | 15, "\\Device\\Harddisk7\\Partition15"},
  {"/dev/sdi1", FH_SDI | 1, "\\Device\\Harddisk8\\Partition1"},
  {"/dev/sdi2", FH_SDI | 2, "\\Device\\Harddisk8\\Partition2"},
  {"/dev/sdi3", FH_SDI | 3, "\\Device\\Harddisk8\\Partition3"},
  {"/dev/sdi4", FH_SDI | 4, "\\Device\\Harddisk8\\Partition4"},
  {"/dev/sdi5", FH_SDI | 5, "\\Device\\Harddisk8\\Partition5"},
  {"/dev/sdi6", FH_SDI | 6, "\\Device\\Harddisk8\\Partition6"},
  {"/dev/sdi7", FH_SDI | 7, "\\Device\\Harddisk8\\Partition7"},
  {"/dev/sdi8", FH_SDI | 8, "\\Device\\Harddisk8\\Partition8"},
  {"/dev/sdi9", FH_SDI | 9, "\\Device\\Harddisk8\\Partition9"},
  {"/dev/sdi10", FH_SDI | 10, "\\Device\\Harddisk8\\Partition10"},
  {"/dev/sdi11", FH_SDI | 11, "\\Device\\Harddisk8\\Partition11"},
  {"/dev/sdi12", FH_SDI | 12, "\\Device\\Harddisk8\\Partition12"},
  {"/dev/sdi13", FH_SDI | 13, "\\Device\\Harddisk8\\Partition13"},
  {"/dev/sdi14", FH_SDI | 14, "\\Device\\Harddisk8\\Partition14"},
  {"/dev/sdi15", FH_SDI | 15, "\\Device\\Harddisk8\\Partition15"},
  {"/dev/sdj1", FH_SDJ | 1, "\\Device\\Harddisk9\\Partition1"},
  {"/dev/sdj2", FH_SDJ | 2, "\\Device\\Harddisk9\\Partition2"},
  {"/dev/sdj3", FH_SDJ | 3, "\\Device\\Harddisk9\\Partition3"},
  {"/dev/sdj4", FH_SDJ | 4, "\\Device\\Harddisk9\\Partition4"},
  {"/dev/sdj5", FH_SDJ | 5, "\\Device\\Harddisk9\\Partition5"},
  {"/dev/sdj6", FH_SDJ | 6, "\\Device\\Harddisk9\\Partition6"},
  {"/dev/sdj7", FH_SDJ | 7, "\\Device\\Harddisk9\\Partition7"},
  {"/dev/sdj8", FH_SDJ | 8, "\\Device\\Harddisk9\\Partition8"},
  {"/dev/sdj9", FH_SDJ | 9, "\\Device\\Harddisk9\\Partition9"},
  {"/dev/sdj10", FH_SDJ | 10, "\\Device\\Harddisk9\\Partition10"},
  {"/dev/sdj11", FH_SDJ | 11, "\\Device\\Harddisk9\\Partition11"},
  {"/dev/sdj12", FH_SDJ | 12, "\\Device\\Harddisk9\\Partition12"},
  {"/dev/sdj13", FH_SDJ | 13, "\\Device\\Harddisk9\\Partition13"},
  {"/dev/sdj14", FH_SDJ | 14, "\\Device\\Harddisk9\\Partition14"},
  {"/dev/sdj15", FH_SDJ | 15, "\\Device\\Harddisk9\\Partition15"},
  {"/dev/sdk1", FH_SDK | 1, "\\Device\\Harddisk10\\Partition1"},
  {"/dev/sdk2", FH_SDK | 2, "\\Device\\Harddisk10\\Partition2"},
  {"/dev/sdk3", FH_SDK | 3, "\\Device\\Harddisk10\\Partition3"},
  {"/dev/sdk4", FH_SDK | 4, "\\Device\\Harddisk10\\Partition4"},
  {"/dev/sdk5", FH_SDK | 5, "\\Device\\Harddisk10\\Partition5"},
  {"/dev/sdk6", FH_SDK | 6, "\\Device\\Harddisk10\\Partition6"},
  {"/dev/sdk7", FH_SDK | 7, "\\Device\\Harddisk10\\Partition7"},
  {"/dev/sdk8", FH_SDK | 8, "\\Device\\Harddisk10\\Partition8"},
  {"/dev/sdk9", FH_SDK | 9, "\\Device\\Harddisk10\\Partition9"},
  {"/dev/sdk10", FH_SDK | 10, "\\Device\\Harddisk10\\Partition10"},
  {"/dev/sdk11", FH_SDK | 11, "\\Device\\Harddisk10\\Partition11"},
  {"/dev/sdk12", FH_SDK | 12, "\\Device\\Harddisk10\\Partition12"},
  {"/dev/sdk13", FH_SDK | 13, "\\Device\\Harddisk10\\Partition13"},
  {"/dev/sdk14", FH_SDK | 14, "\\Device\\Harddisk10\\Partition14"},
  {"/dev/sdk15", FH_SDK | 15, "\\Device\\Harddisk10\\Partition15"},
  {"/dev/sdl1", FH_SDL | 1, "\\Device\\Harddisk11\\Partition1"},
  {"/dev/sdl2", FH_SDL | 2, "\\Device\\Harddisk11\\Partition2"},
  {"/dev/sdl3", FH_SDL | 3, "\\Device\\Harddisk11\\Partition3"},
  {"/dev/sdl4", FH_SDL | 4, "\\Device\\Harddisk11\\Partition4"},
  {"/dev/sdl5", FH_SDL | 5, "\\Device\\Harddisk11\\Partition5"},
  {"/dev/sdl6", FH_SDL | 6, "\\Device\\Harddisk11\\Partition6"},
  {"/dev/sdl7", FH_SDL | 7, "\\Device\\Harddisk11\\Partition7"},
  {"/dev/sdl8", FH_SDL | 8, "\\Device\\Harddisk11\\Partition8"},
  {"/dev/sdl9", FH_SDL | 9, "\\Device\\Harddisk11\\Partition9"},
  {"/dev/sdl10", FH_SDL | 10, "\\Device\\Harddisk11\\Partition10"},
  {"/dev/sdl11", FH_SDL | 11, "\\Device\\Harddisk11\\Partition11"},
  {"/dev/sdl12", FH_SDL | 12, "\\Device\\Harddisk11\\Partition12"},
  {"/dev/sdl13", FH_SDL | 13, "\\Device\\Harddisk11\\Partition13"},
  {"/dev/sdl14", FH_SDL | 14, "\\Device\\Harddisk11\\Partition14"},
  {"/dev/sdl15", FH_SDL | 15, "\\Device\\Harddisk11\\Partition15"},
  {"/dev/sdm1", FH_SDM | 1, "\\Device\\Harddisk12\\Partition1"},
  {"/dev/sdm2", FH_SDM | 2, "\\Device\\Harddisk12\\Partition2"},
  {"/dev/sdm3", FH_SDM | 3, "\\Device\\Harddisk12\\Partition3"},
  {"/dev/sdm4", FH_SDM | 4, "\\Device\\Harddisk12\\Partition4"},
  {"/dev/sdm5", FH_SDM | 5, "\\Device\\Harddisk12\\Partition5"},
  {"/dev/sdm6", FH_SDM | 6, "\\Device\\Harddisk12\\Partition6"},
  {"/dev/sdm7", FH_SDM | 7, "\\Device\\Harddisk12\\Partition7"},
  {"/dev/sdm8", FH_SDM | 8, "\\Device\\Harddisk12\\Partition8"},
  {"/dev/sdm9", FH_SDM | 9, "\\Device\\Harddisk12\\Partition9"},
  {"/dev/sdm10", FH_SDM | 10, "\\Device\\Harddisk12\\Partition10"},
  {"/dev/sdm11", FH_SDM | 11, "\\Device\\Harddisk12\\Partition11"},
  {"/dev/sdm12", FH_SDM | 12, "\\Device\\Harddisk12\\Partition12"},
  {"/dev/sdm13", FH_SDM | 13, "\\Device\\Harddisk12\\Partition13"},
  {"/dev/sdm14", FH_SDM | 14, "\\Device\\Harddisk12\\Partition14"},
  {"/dev/sdm15", FH_SDM | 15, "\\Device\\Harddisk12\\Partition15"},
  {"/dev/sdn1", FH_SDN | 1, "\\Device\\Harddisk13\\Partition1"},
  {"/dev/sdn2", FH_SDN | 2, "\\Device\\Harddisk13\\Partition2"},
  {"/dev/sdn3", FH_SDN | 3, "\\Device\\Harddisk13\\Partition3"},
  {"/dev/sdn4", FH_SDN | 4, "\\Device\\Harddisk13\\Partition4"},
  {"/dev/sdn5", FH_SDN | 5, "\\Device\\Harddisk13\\Partition5"},
  {"/dev/sdn6", FH_SDN | 6, "\\Device\\Harddisk13\\Partition6"},
  {"/dev/sdn7", FH_SDN | 7, "\\Device\\Harddisk13\\Partition7"},
  {"/dev/sdn8", FH_SDN | 8, "\\Device\\Harddisk13\\Partition8"},
  {"/dev/sdn9", FH_SDN | 9, "\\Device\\Harddisk13\\Partition9"},
  {"/dev/sdn10", FH_SDN | 10, "\\Device\\Harddisk13\\Partition10"},
  {"/dev/sdn11", FH_SDN | 11, "\\Device\\Harddisk13\\Partition11"},
  {"/dev/sdn12", FH_SDN | 12, "\\Device\\Harddisk13\\Partition12"},
  {"/dev/sdn13", FH_SDN | 13, "\\Device\\Harddisk13\\Partition13"},
  {"/dev/sdn14", FH_SDN | 14, "\\Device\\Harddisk13\\Partition14"},
  {"/dev/sdn15", FH_SDN | 15, "\\Device\\Harddisk13\\Partition15"},
  {"/dev/sdo1", FH_SDO | 1, "\\Device\\Harddisk14\\Partition1"},
  {"/dev/sdo2", FH_SDO | 2, "\\Device\\Harddisk14\\Partition2"},
  {"/dev/sdo3", FH_SDO | 3, "\\Device\\Harddisk14\\Partition3"},
  {"/dev/sdo4", FH_SDO | 4, "\\Device\\Harddisk14\\Partition4"},
  {"/dev/sdo5", FH_SDO | 5, "\\Device\\Harddisk14\\Partition5"},
  {"/dev/sdo6", FH_SDO | 6, "\\Device\\Harddisk14\\Partition6"},
  {"/dev/sdo7", FH_SDO | 7, "\\Device\\Harddisk14\\Partition7"},
  {"/dev/sdo8", FH_SDO | 8, "\\Device\\Harddisk14\\Partition8"},
  {"/dev/sdo9", FH_SDO | 9, "\\Device\\Harddisk14\\Partition9"},
  {"/dev/sdo10", FH_SDO | 10, "\\Device\\Harddisk14\\Partition10"},
  {"/dev/sdo11", FH_SDO | 11, "\\Device\\Harddisk14\\Partition11"},
  {"/dev/sdo12", FH_SDO | 12, "\\Device\\Harddisk14\\Partition12"},
  {"/dev/sdo13", FH_SDO | 13, "\\Device\\Harddisk14\\Partition13"},
  {"/dev/sdo14", FH_SDO | 14, "\\Device\\Harddisk14\\Partition14"},
  {"/dev/sdo15", FH_SDO | 15, "\\Device\\Harddisk14\\Partition15"},
  {"/dev/sdp1", FH_SDP | 1, "\\Device\\Harddisk15\\Partition1"},
  {"/dev/sdp2", FH_SDP | 2, "\\Device\\Harddisk15\\Partition2"},
  {"/dev/sdp3", FH_SDP | 3, "\\Device\\Harddisk15\\Partition3"},
  {"/dev/sdp4", FH_SDP | 4, "\\Device\\Harddisk15\\Partition4"},
  {"/dev/sdp5", FH_SDP | 5, "\\Device\\Harddisk15\\Partition5"},
  {"/dev/sdp6", FH_SDP | 6, "\\Device\\Harddisk15\\Partition6"},
  {"/dev/sdp7", FH_SDP | 7, "\\Device\\Harddisk15\\Partition7"},
  {"/dev/sdp8", FH_SDP | 8, "\\Device\\Harddisk15\\Partition8"},
  {"/dev/sdp9", FH_SDP | 9, "\\Device\\Harddisk15\\Partition9"},
  {"/dev/sdp10", FH_SDP | 10, "\\Device\\Harddisk15\\Partition10"},
  {"/dev/sdp11", FH_SDP | 11, "\\Device\\Harddisk15\\Partition11"},
  {"/dev/sdp12", FH_SDP | 12, "\\Device\\Harddisk15\\Partition12"},
  {"/dev/sdp13", FH_SDP | 13, "\\Device\\Harddisk15\\Partition13"},
  {"/dev/sdp14", FH_SDP | 14, "\\Device\\Harddisk15\\Partition14"},
  {"/dev/sdp15", FH_SDP | 15, "\\Device\\Harddisk15\\Partition15"},
  {"/dev/sdq1", FH_SDQ | 1, "\\Device\\Harddisk16\\Partition1"},
  {"/dev/sdq2", FH_SDQ | 2, "\\Device\\Harddisk16\\Partition2"},
  {"/dev/sdq3", FH_SDQ | 3, "\\Device\\Harddisk16\\Partition3"},
  {"/dev/sdq4", FH_SDQ | 4, "\\Device\\Harddisk16\\Partition4"},
  {"/dev/sdq5", FH_SDQ | 5, "\\Device\\Harddisk16\\Partition5"},
  {"/dev/sdq6", FH_SDQ | 6, "\\Device\\Harddisk16\\Partition6"},
  {"/dev/sdq7", FH_SDQ | 7, "\\Device\\Harddisk16\\Partition7"},
  {"/dev/sdq8", FH_SDQ | 8, "\\Device\\Harddisk16\\Partition8"},
  {"/dev/sdq9", FH_SDQ | 9, "\\Device\\Harddisk16\\Partition9"},
  {"/dev/sdq10", FH_SDQ | 10, "\\Device\\Harddisk16\\Partition10"},
  {"/dev/sdq11", FH_SDQ | 11, "\\Device\\Harddisk16\\Partition11"},
  {"/dev/sdq12", FH_SDQ | 12, "\\Device\\Harddisk16\\Partition12"},
  {"/dev/sdq13", FH_SDQ | 13, "\\Device\\Harddisk16\\Partition13"},
  {"/dev/sdq14", FH_SDQ | 14, "\\Device\\Harddisk16\\Partition14"},
  {"/dev/sdq15", FH_SDQ | 15, "\\Device\\Harddisk16\\Partition15"},
  {"/dev/sdr1", FH_SDR | 1, "\\Device\\Harddisk17\\Partition1"},
  {"/dev/sdr2", FH_SDR | 2, "\\Device\\Harddisk17\\Partition2"},
  {"/dev/sdr3", FH_SDR | 3, "\\Device\\Harddisk17\\Partition3"},
  {"/dev/sdr4", FH_SDR | 4, "\\Device\\Harddisk17\\Partition4"},
  {"/dev/sdr5", FH_SDR | 5, "\\Device\\Harddisk17\\Partition5"},
  {"/dev/sdr6", FH_SDR | 6, "\\Device\\Harddisk17\\Partition6"},
  {"/dev/sdr7", FH_SDR | 7, "\\Device\\Harddisk17\\Partition7"},
  {"/dev/sdr8", FH_SDR | 8, "\\Device\\Harddisk17\\Partition8"},
  {"/dev/sdr9", FH_SDR | 9, "\\Device\\Harddisk17\\Partition9"},
  {"/dev/sdr10", FH_SDR | 10, "\\Device\\Harddisk17\\Partition10"},
  {"/dev/sdr11", FH_SDR | 11, "\\Device\\Harddisk17\\Partition11"},
  {"/dev/sdr12", FH_SDR | 12, "\\Device\\Harddisk17\\Partition12"},
  {"/dev/sdr13", FH_SDR | 13, "\\Device\\Harddisk17\\Partition13"},
  {"/dev/sdr14", FH_SDR | 14, "\\Device\\Harddisk17\\Partition14"},
  {"/dev/sdr15", FH_SDR | 15, "\\Device\\Harddisk17\\Partition15"},
  {"/dev/sds1", FH_SDS | 1, "\\Device\\Harddisk18\\Partition1"},
  {"/dev/sds2", FH_SDS | 2, "\\Device\\Harddisk18\\Partition2"},
  {"/dev/sds3", FH_SDS | 3, "\\Device\\Harddisk18\\Partition3"},
  {"/dev/sds4", FH_SDS | 4, "\\Device\\Harddisk18\\Partition4"},
  {"/dev/sds5", FH_SDS | 5, "\\Device\\Harddisk18\\Partition5"},
  {"/dev/sds6", FH_SDS | 6, "\\Device\\Harddisk18\\Partition6"},
  {"/dev/sds7", FH_SDS | 7, "\\Device\\Harddisk18\\Partition7"},
  {"/dev/sds8", FH_SDS | 8, "\\Device\\Harddisk18\\Partition8"},
  {"/dev/sds9", FH_SDS | 9, "\\Device\\Harddisk18\\Partition9"},
  {"/dev/sds10", FH_SDS | 10, "\\Device\\Harddisk18\\Partition10"},
  {"/dev/sds11", FH_SDS | 11, "\\Device\\Harddisk18\\Partition11"},
  {"/dev/sds12", FH_SDS | 12, "\\Device\\Harddisk18\\Partition12"},
  {"/dev/sds13", FH_SDS | 13, "\\Device\\Harddisk18\\Partition13"},
  {"/dev/sds14", FH_SDS | 14, "\\Device\\Harddisk18\\Partition14"},
  {"/dev/sds15", FH_SDS | 15, "\\Device\\Harddisk18\\Partition15"},
  {"/dev/sdt1", FH_SDT | 1, "\\Device\\Harddisk19\\Partition1"},
  {"/dev/sdt2", FH_SDT | 2, "\\Device\\Harddisk19\\Partition2"},
  {"/dev/sdt3", FH_SDT | 3, "\\Device\\Harddisk19\\Partition3"},
  {"/dev/sdt4", FH_SDT | 4, "\\Device\\Harddisk19\\Partition4"},
  {"/dev/sdt5", FH_SDT | 5, "\\Device\\Harddisk19\\Partition5"},
  {"/dev/sdt6", FH_SDT | 6, "\\Device\\Harddisk19\\Partition6"},
  {"/dev/sdt7", FH_SDT | 7, "\\Device\\Harddisk19\\Partition7"},
  {"/dev/sdt8", FH_SDT | 8, "\\Device\\Harddisk19\\Partition8"},
  {"/dev/sdt9", FH_SDT | 9, "\\Device\\Harddisk19\\Partition9"},
  {"/dev/sdt10", FH_SDT | 10, "\\Device\\Harddisk19\\Partition10"},
  {"/dev/sdt11", FH_SDT | 11, "\\Device\\Harddisk19\\Partition11"},
  {"/dev/sdt12", FH_SDT | 12, "\\Device\\Harddisk19\\Partition12"},
  {"/dev/sdt13", FH_SDT | 13, "\\Device\\Harddisk19\\Partition13"},
  {"/dev/sdt14", FH_SDT | 14, "\\Device\\Harddisk19\\Partition14"},
  {"/dev/sdt15", FH_SDT | 15, "\\Device\\Harddisk19\\Partition15"},
  {"/dev/sdu1", FH_SDU | 1, "\\Device\\Harddisk20\\Partition1"},
  {"/dev/sdu2", FH_SDU | 2, "\\Device\\Harddisk20\\Partition2"},
  {"/dev/sdu3", FH_SDU | 3, "\\Device\\Harddisk20\\Partition3"},
  {"/dev/sdu4", FH_SDU | 4, "\\Device\\Harddisk20\\Partition4"},
  {"/dev/sdu5", FH_SDU | 5, "\\Device\\Harddisk20\\Partition5"},
  {"/dev/sdu6", FH_SDU | 6, "\\Device\\Harddisk20\\Partition6"},
  {"/dev/sdu7", FH_SDU | 7, "\\Device\\Harddisk20\\Partition7"},
  {"/dev/sdu8", FH_SDU | 8, "\\Device\\Harddisk20\\Partition8"},
  {"/dev/sdu9", FH_SDU | 9, "\\Device\\Harddisk20\\Partition9"},
  {"/dev/sdu10", FH_SDU | 10, "\\Device\\Harddisk20\\Partition10"},
  {"/dev/sdu11", FH_SDU | 11, "\\Device\\Harddisk20\\Partition11"},
  {"/dev/sdu12", FH_SDU | 12, "\\Device\\Harddisk20\\Partition12"},
  {"/dev/sdu13", FH_SDU | 13, "\\Device\\Harddisk20\\Partition13"},
  {"/dev/sdu14", FH_SDU | 14, "\\Device\\Harddisk20\\Partition14"},
  {"/dev/sdu15", FH_SDU | 15, "\\Device\\Harddisk20\\Partition15"},
  {"/dev/sdv1", FH_SDV | 1, "\\Device\\Harddisk21\\Partition1"},
  {"/dev/sdv2", FH_SDV | 2, "\\Device\\Harddisk21\\Partition2"},
  {"/dev/sdv3", FH_SDV | 3, "\\Device\\Harddisk21\\Partition3"},
  {"/dev/sdv4", FH_SDV | 4, "\\Device\\Harddisk21\\Partition4"},
  {"/dev/sdv5", FH_SDV | 5, "\\Device\\Harddisk21\\Partition5"},
  {"/dev/sdv6", FH_SDV | 6, "\\Device\\Harddisk21\\Partition6"},
  {"/dev/sdv7", FH_SDV | 7, "\\Device\\Harddisk21\\Partition7"},
  {"/dev/sdv8", FH_SDV | 8, "\\Device\\Harddisk21\\Partition8"},
  {"/dev/sdv9", FH_SDV | 9, "\\Device\\Harddisk21\\Partition9"},
  {"/dev/sdv10", FH_SDV | 10, "\\Device\\Harddisk21\\Partition10"},
  {"/dev/sdv11", FH_SDV | 11, "\\Device\\Harddisk21\\Partition11"},
  {"/dev/sdv12", FH_SDV | 12, "\\Device\\Harddisk21\\Partition12"},
  {"/dev/sdv13", FH_SDV | 13, "\\Device\\Harddisk21\\Partition13"},
  {"/dev/sdv14", FH_SDV | 14, "\\Device\\Harddisk21\\Partition14"},
  {"/dev/sdv15", FH_SDV | 15, "\\Device\\Harddisk21\\Partition15"},
  {"/dev/sdw1", FH_SDW | 1, "\\Device\\Harddisk22\\Partition1"},
  {"/dev/sdw2", FH_SDW | 2, "\\Device\\Harddisk22\\Partition2"},
  {"/dev/sdw3", FH_SDW | 3, "\\Device\\Harddisk22\\Partition3"},
  {"/dev/sdw4", FH_SDW | 4, "\\Device\\Harddisk22\\Partition4"},
  {"/dev/sdw5", FH_SDW | 5, "\\Device\\Harddisk22\\Partition5"},
  {"/dev/sdw6", FH_SDW | 6, "\\Device\\Harddisk22\\Partition6"},
  {"/dev/sdw7", FH_SDW | 7, "\\Device\\Harddisk22\\Partition7"},
  {"/dev/sdw8", FH_SDW | 8, "\\Device\\Harddisk22\\Partition8"},
  {"/dev/sdw9", FH_SDW | 9, "\\Device\\Harddisk22\\Partition9"},
  {"/dev/sdw10", FH_SDW | 10, "\\Device\\Harddisk22\\Partition10"},
  {"/dev/sdw11", FH_SDW | 11, "\\Device\\Harddisk22\\Partition11"},
  {"/dev/sdw12", FH_SDW | 12, "\\Device\\Harddisk22\\Partition12"},
  {"/dev/sdw13", FH_SDW | 13, "\\Device\\Harddisk22\\Partition13"},
  {"/dev/sdw14", FH_SDW | 14, "\\Device\\Harddisk22\\Partition14"},
  {"/dev/sdw15", FH_SDW | 15, "\\Device\\Harddisk22\\Partition15"},
  {"/dev/sdx1", FH_SDX | 1, "\\Device\\Harddisk23\\Partition1"},
  {"/dev/sdx2", FH_SDX | 2, "\\Device\\Harddisk23\\Partition2"},
  {"/dev/sdx3", FH_SDX | 3, "\\Device\\Harddisk23\\Partition3"},
  {"/dev/sdx4", FH_SDX | 4, "\\Device\\Harddisk23\\Partition4"},
  {"/dev/sdx5", FH_SDX | 5, "\\Device\\Harddisk23\\Partition5"},
  {"/dev/sdx6", FH_SDX | 6, "\\Device\\Harddisk23\\Partition6"},
  {"/dev/sdx7", FH_SDX | 7, "\\Device\\Harddisk23\\Partition7"},
  {"/dev/sdx8", FH_SDX | 8, "\\Device\\Harddisk23\\Partition8"},
  {"/dev/sdx9", FH_SDX | 9, "\\Device\\Harddisk23\\Partition9"},
  {"/dev/sdx10", FH_SDX | 10, "\\Device\\Harddisk23\\Partition10"},
  {"/dev/sdx11", FH_SDX | 11, "\\Device\\Harddisk23\\Partition11"},
  {"/dev/sdx12", FH_SDX | 12, "\\Device\\Harddisk23\\Partition12"},
  {"/dev/sdx13", FH_SDX | 13, "\\Device\\Harddisk23\\Partition13"},
  {"/dev/sdx14", FH_SDX | 14, "\\Device\\Harddisk23\\Partition14"},
  {"/dev/sdx15", FH_SDX | 15, "\\Device\\Harddisk23\\Partition15"},
  {"/dev/sdy1", FH_SDY | 1, "\\Device\\Harddisk24\\Partition1"},
  {"/dev/sdy2", FH_SDY | 2, "\\Device\\Harddisk24\\Partition2"},
  {"/dev/sdy3", FH_SDY | 3, "\\Device\\Harddisk24\\Partition3"},
  {"/dev/sdy4", FH_SDY | 4, "\\Device\\Harddisk24\\Partition4"},
  {"/dev/sdy5", FH_SDY | 5, "\\Device\\Harddisk24\\Partition5"},
  {"/dev/sdy6", FH_SDY | 6, "\\Device\\Harddisk24\\Partition6"},
  {"/dev/sdy7", FH_SDY | 7, "\\Device\\Harddisk24\\Partition7"},
  {"/dev/sdy8", FH_SDY | 8, "\\Device\\Harddisk24\\Partition8"},
  {"/dev/sdy9", FH_SDY | 9, "\\Device\\Harddisk24\\Partition9"},
  {"/dev/sdy10", FH_SDY | 10, "\\Device\\Harddisk24\\Partition10"},
  {"/dev/sdy11", FH_SDY | 11, "\\Device\\Harddisk24\\Partition11"},
  {"/dev/sdy12", FH_SDY | 12, "\\Device\\Harddisk24\\Partition12"},
  {"/dev/sdy13", FH_SDY | 13, "\\Device\\Harddisk24\\Partition13"},
  {"/dev/sdy14", FH_SDY | 14, "\\Device\\Harddisk24\\Partition14"},
  {"/dev/sdy15", FH_SDY | 15, "\\Device\\Harddisk24\\Partition15"},
  {"/dev/sdz1", FH_SDZ | 1, "\\Device\\Harddisk25\\Partition1"},
  {"/dev/sdz2", FH_SDZ | 2, "\\Device\\Harddisk25\\Partition2"},
  {"/dev/sdz3", FH_SDZ | 3, "\\Device\\Harddisk25\\Partition3"},
  {"/dev/sdz4", FH_SDZ | 4, "\\Device\\Harddisk25\\Partition4"},
  {"/dev/sdz5", FH_SDZ | 5, "\\Device\\Harddisk25\\Partition5"},
  {"/dev/sdz6", FH_SDZ | 6, "\\Device\\Harddisk25\\Partition6"},
  {"/dev/sdz7", FH_SDZ | 7, "\\Device\\Harddisk25\\Partition7"},
  {"/dev/sdz8", FH_SDZ | 8, "\\Device\\Harddisk25\\Partition8"},
  {"/dev/sdz9", FH_SDZ | 9, "\\Device\\Harddisk25\\Partition9"},
  {"/dev/sdz10", FH_SDZ | 10, "\\Device\\Harddisk25\\Partition10"},
  {"/dev/sdz11", FH_SDZ | 11, "\\Device\\Harddisk25\\Partition11"},
  {"/dev/sdz12", FH_SDZ | 12, "\\Device\\Harddisk25\\Partition12"},
  {"/dev/sdz13", FH_SDZ | 13, "\\Device\\Harddisk25\\Partition13"},
  {"/dev/sdz14", FH_SDZ | 14, "\\Device\\Harddisk25\\Partition14"},
  {"/dev/sdz15", FH_SDZ | 15, "\\Device\\Harddisk25\\Partition15"},
  {"/dev/sr0", FHDEV(DEV_CDROM_MAJOR, 0), "\\Device\\CdRom0"},
  {"/dev/sr1", FHDEV(DEV_CDROM_MAJOR, 1), "\\Device\\CdRom1"},
  {"/dev/sr2", FHDEV(DEV_CDROM_MAJOR, 2), "\\Device\\CdRom2"},
  {"/dev/sr3", FHDEV(DEV_CDROM_MAJOR, 3), "\\Device\\CdRom3"},
  {"/dev/sr4", FHDEV(DEV_CDROM_MAJOR, 4), "\\Device\\CdRom4"},
  {"/dev/sr5", FHDEV(DEV_CDROM_MAJOR, 5), "\\Device\\CdRom5"},
  {"/dev/sr6", FHDEV(DEV_CDROM_MAJOR, 6), "\\Device\\CdRom6"},
  {"/dev/sr7", FHDEV(DEV_CDROM_MAJOR, 7), "\\Device\\CdRom7"},
  {"/dev/sr8", FHDEV(DEV_CDROM_MAJOR, 8), "\\Device\\CdRom8"},
  {"/dev/sr9", FHDEV(DEV_CDROM_MAJOR, 9), "\\Device\\CdRom9"},
  {"/dev/sr10", FHDEV(DEV_CDROM_MAJOR, 10), "\\Device\\CdRom10"},
  {"/dev/sr11", FHDEV(DEV_CDROM_MAJOR, 11), "\\Device\\CdRom11"},
  {"/dev/sr12", FHDEV(DEV_CDROM_MAJOR, 12), "\\Device\\CdRom12"},
  {"/dev/sr13", FHDEV(DEV_CDROM_MAJOR, 13), "\\Device\\CdRom13"},
  {"/dev/sr14", FHDEV(DEV_CDROM_MAJOR, 14), "\\Device\\CdRom14"},
  {"/dev/sr15", FHDEV(DEV_CDROM_MAJOR, 15), "\\Device\\CdRom15"},
  {"/dev/st0", FHDEV(DEV_TAPE_MAJOR, 0), "\\Device\\Tape0"},
  {"/dev/st1", FHDEV(DEV_TAPE_MAJOR, 1), "\\Device\\Tape1"},
  {"/dev/st2", FHDEV(DEV_TAPE_MAJOR, 2), "\\Device\\Tape2"},
  {"/dev/st3", FHDEV(DEV_TAPE_MAJOR, 3), "\\Device\\Tape3"},
  {"/dev/st4", FHDEV(DEV_TAPE_MAJOR, 4), "\\Device\\Tape4"},
  {"/dev/st5", FHDEV(DEV_TAPE_MAJOR, 5), "\\Device\\Tape5"},
  {"/dev/st6", FHDEV(DEV_TAPE_MAJOR, 6), "\\Device\\Tape6"},
  {"/dev/st7", FHDEV(DEV_TAPE_MAJOR, 7), "\\Device\\Tape7"},
  {"/dev/st8", FHDEV(DEV_TAPE_MAJOR, 8), "\\Device\\Tape8"},
  {"/dev/st9", FHDEV(DEV_TAPE_MAJOR, 9), "\\Device\\Tape9"},
  {"/dev/st10", FHDEV(DEV_TAPE_MAJOR, 10), "\\Device\\Tape10"},
  {"/dev/st11", FHDEV(DEV_TAPE_MAJOR, 11), "\\Device\\Tape11"},
  {"/dev/st12", FHDEV(DEV_TAPE_MAJOR, 12), "\\Device\\Tape12"},
  {"/dev/st13", FHDEV(DEV_TAPE_MAJOR, 13), "\\Device\\Tape13"},
  {"/dev/st14", FHDEV(DEV_TAPE_MAJOR, 14), "\\Device\\Tape14"},
  {"/dev/st15", FHDEV(DEV_TAPE_MAJOR, 15), "\\Device\\Tape15"},
  {"/dev/st16", FHDEV(DEV_TAPE_MAJOR, 16), "\\Device\\Tape16"},
  {"/dev/st17", FHDEV(DEV_TAPE_MAJOR, 17), "\\Device\\Tape17"},
  {"/dev/st18", FHDEV(DEV_TAPE_MAJOR, 18), "\\Device\\Tape18"},
  {"/dev/st19", FHDEV(DEV_TAPE_MAJOR, 19), "\\Device\\Tape19"},
  {"/dev/st20", FHDEV(DEV_TAPE_MAJOR, 20), "\\Device\\Tape20"},
  {"/dev/st21", FHDEV(DEV_TAPE_MAJOR, 21), "\\Device\\Tape21"},
  {"/dev/st22", FHDEV(DEV_TAPE_MAJOR, 22), "\\Device\\Tape22"},
  {"/dev/st23", FHDEV(DEV_TAPE_MAJOR, 23), "\\Device\\Tape23"},
  {"/dev/st24", FHDEV(DEV_TAPE_MAJOR, 24), "\\Device\\Tape24"},
  {"/dev/st25", FHDEV(DEV_TAPE_MAJOR, 25), "\\Device\\Tape25"},
  {"/dev/st26", FHDEV(DEV_TAPE_MAJOR, 26), "\\Device\\Tape26"},
  {"/dev/st27", FHDEV(DEV_TAPE_MAJOR, 27), "\\Device\\Tape27"},
  {"/dev/st28", FHDEV(DEV_TAPE_MAJOR, 28), "\\Device\\Tape28"},
  {"/dev/st29", FHDEV(DEV_TAPE_MAJOR, 29), "\\Device\\Tape29"},
  {"/dev/st30", FHDEV(DEV_TAPE_MAJOR, 30), "\\Device\\Tape30"},
  {"/dev/st31", FHDEV(DEV_TAPE_MAJOR, 31), "\\Device\\Tape31"},
  {"/dev/st32", FHDEV(DEV_TAPE_MAJOR, 32), "\\Device\\Tape32"},
  {"/dev/st33", FHDEV(DEV_TAPE_MAJOR, 33), "\\Device\\Tape33"},
  {"/dev/st34", FHDEV(DEV_TAPE_MAJOR, 34), "\\Device\\Tape34"},
  {"/dev/st35", FHDEV(DEV_TAPE_MAJOR, 35), "\\Device\\Tape35"},
  {"/dev/st36", FHDEV(DEV_TAPE_MAJOR, 36), "\\Device\\Tape36"},
  {"/dev/st37", FHDEV(DEV_TAPE_MAJOR, 37), "\\Device\\Tape37"},
  {"/dev/st38", FHDEV(DEV_TAPE_MAJOR, 38), "\\Device\\Tape38"},
  {"/dev/st39", FHDEV(DEV_TAPE_MAJOR, 39), "\\Device\\Tape39"},
  {"/dev/st40", FHDEV(DEV_TAPE_MAJOR, 40), "\\Device\\Tape40"},
  {"/dev/st41", FHDEV(DEV_TAPE_MAJOR, 41), "\\Device\\Tape41"},
  {"/dev/st42", FHDEV(DEV_TAPE_MAJOR, 42), "\\Device\\Tape42"},
  {"/dev/st43", FHDEV(DEV_TAPE_MAJOR, 43), "\\Device\\Tape43"},
  {"/dev/st44", FHDEV(DEV_TAPE_MAJOR, 44), "\\Device\\Tape44"},
  {"/dev/st45", FHDEV(DEV_TAPE_MAJOR, 45), "\\Device\\Tape45"},
  {"/dev/st46", FHDEV(DEV_TAPE_MAJOR, 46), "\\Device\\Tape46"},
  {"/dev/st47", FHDEV(DEV_TAPE_MAJOR, 47), "\\Device\\Tape47"},
  {"/dev/st48", FHDEV(DEV_TAPE_MAJOR, 48), "\\Device\\Tape48"},
  {"/dev/st49", FHDEV(DEV_TAPE_MAJOR, 49), "\\Device\\Tape49"},
  {"/dev/st50", FHDEV(DEV_TAPE_MAJOR, 50), "\\Device\\Tape50"},
  {"/dev/st51", FHDEV(DEV_TAPE_MAJOR, 51), "\\Device\\Tape51"},
  {"/dev/st52", FHDEV(DEV_TAPE_MAJOR, 52), "\\Device\\Tape52"},
  {"/dev/st53", FHDEV(DEV_TAPE_MAJOR, 53), "\\Device\\Tape53"},
  {"/dev/st54", FHDEV(DEV_TAPE_MAJOR, 54), "\\Device\\Tape54"},
  {"/dev/st55", FHDEV(DEV_TAPE_MAJOR, 55), "\\Device\\Tape55"},
  {"/dev/st56", FHDEV(DEV_TAPE_MAJOR, 56), "\\Device\\Tape56"},
  {"/dev/st57", FHDEV(DEV_TAPE_MAJOR, 57), "\\Device\\Tape57"},
  {"/dev/st58", FHDEV(DEV_TAPE_MAJOR, 58), "\\Device\\Tape58"},
  {"/dev/st59", FHDEV(DEV_TAPE_MAJOR, 59), "\\Device\\Tape59"},
  {"/dev/st60", FHDEV(DEV_TAPE_MAJOR, 60), "\\Device\\Tape60"},
  {"/dev/st61", FHDEV(DEV_TAPE_MAJOR, 61), "\\Device\\Tape61"},
  {"/dev/st62", FHDEV(DEV_TAPE_MAJOR, 62), "\\Device\\Tape62"},
  {"/dev/st63", FHDEV(DEV_TAPE_MAJOR, 63), "\\Device\\Tape63"},
  {"/dev/st64", FHDEV(DEV_TAPE_MAJOR, 64), "\\Device\\Tape64"},
  {"/dev/st65", FHDEV(DEV_TAPE_MAJOR, 65), "\\Device\\Tape65"},
  {"/dev/st66", FHDEV(DEV_TAPE_MAJOR, 66), "\\Device\\Tape66"},
  {"/dev/st67", FHDEV(DEV_TAPE_MAJOR, 67), "\\Device\\Tape67"},
  {"/dev/st68", FHDEV(DEV_TAPE_MAJOR, 68), "\\Device\\Tape68"},
  {"/dev/st69", FHDEV(DEV_TAPE_MAJOR, 69), "\\Device\\Tape69"},
  {"/dev/st70", FHDEV(DEV_TAPE_MAJOR, 70), "\\Device\\Tape70"},
  {"/dev/st71", FHDEV(DEV_TAPE_MAJOR, 71), "\\Device\\Tape71"},
  {"/dev/st72", FHDEV(DEV_TAPE_MAJOR, 72), "\\Device\\Tape72"},
  {"/dev/st73", FHDEV(DEV_TAPE_MAJOR, 73), "\\Device\\Tape73"},
  {"/dev/st74", FHDEV(DEV_TAPE_MAJOR, 74), "\\Device\\Tape74"},
  {"/dev/st75", FHDEV(DEV_TAPE_MAJOR, 75), "\\Device\\Tape75"},
  {"/dev/st76", FHDEV(DEV_TAPE_MAJOR, 76), "\\Device\\Tape76"},
  {"/dev/st77", FHDEV(DEV_TAPE_MAJOR, 77), "\\Device\\Tape77"},
  {"/dev/st78", FHDEV(DEV_TAPE_MAJOR, 78), "\\Device\\Tape78"},
  {"/dev/st79", FHDEV(DEV_TAPE_MAJOR, 79), "\\Device\\Tape79"},
  {"/dev/st80", FHDEV(DEV_TAPE_MAJOR, 80), "\\Device\\Tape80"},
  {"/dev/st81", FHDEV(DEV_TAPE_MAJOR, 81), "\\Device\\Tape81"},
  {"/dev/st82", FHDEV(DEV_TAPE_MAJOR, 82), "\\Device\\Tape82"},
  {"/dev/st83", FHDEV(DEV_TAPE_MAJOR, 83), "\\Device\\Tape83"},
  {"/dev/st84", FHDEV(DEV_TAPE_MAJOR, 84), "\\Device\\Tape84"},
  {"/dev/st85", FHDEV(DEV_TAPE_MAJOR, 85), "\\Device\\Tape85"},
  {"/dev/st86", FHDEV(DEV_TAPE_MAJOR, 86), "\\Device\\Tape86"},
  {"/dev/st87", FHDEV(DEV_TAPE_MAJOR, 87), "\\Device\\Tape87"},
  {"/dev/st88", FHDEV(DEV_TAPE_MAJOR, 88), "\\Device\\Tape88"},
  {"/dev/st89", FHDEV(DEV_TAPE_MAJOR, 89), "\\Device\\Tape89"},
  {"/dev/st90", FHDEV(DEV_TAPE_MAJOR, 90), "\\Device\\Tape90"},
  {"/dev/st91", FHDEV(DEV_TAPE_MAJOR, 91), "\\Device\\Tape91"},
  {"/dev/st92", FHDEV(DEV_TAPE_MAJOR, 92), "\\Device\\Tape92"},
  {"/dev/st93", FHDEV(DEV_TAPE_MAJOR, 93), "\\Device\\Tape93"},
  {"/dev/st94", FHDEV(DEV_TAPE_MAJOR, 94), "\\Device\\Tape94"},
  {"/dev/st95", FHDEV(DEV_TAPE_MAJOR, 95), "\\Device\\Tape95"},
  {"/dev/st96", FHDEV(DEV_TAPE_MAJOR, 96), "\\Device\\Tape96"},
  {"/dev/st97", FHDEV(DEV_TAPE_MAJOR, 97), "\\Device\\Tape97"},
  {"/dev/st98", FHDEV(DEV_TAPE_MAJOR, 98), "\\Device\\Tape98"},
  {"/dev/st99", FHDEV(DEV_TAPE_MAJOR, 99), "\\Device\\Tape99"},
  {"/dev/st100", FHDEV(DEV_TAPE_MAJOR, 100), "\\Device\\Tape100"},
  {"/dev/st101", FHDEV(DEV_TAPE_MAJOR, 101), "\\Device\\Tape101"},
  {"/dev/st102", FHDEV(DEV_TAPE_MAJOR, 102), "\\Device\\Tape102"},
  {"/dev/st103", FHDEV(DEV_TAPE_MAJOR, 103), "\\Device\\Tape103"},
  {"/dev/st104", FHDEV(DEV_TAPE_MAJOR, 104), "\\Device\\Tape104"},
  {"/dev/st105", FHDEV(DEV_TAPE_MAJOR, 105), "\\Device\\Tape105"},
  {"/dev/st106", FHDEV(DEV_TAPE_MAJOR, 106), "\\Device\\Tape106"},
  {"/dev/st107", FHDEV(DEV_TAPE_MAJOR, 107), "\\Device\\Tape107"},
  {"/dev/st108", FHDEV(DEV_TAPE_MAJOR, 108), "\\Device\\Tape108"},
  {"/dev/st109", FHDEV(DEV_TAPE_MAJOR, 109), "\\Device\\Tape109"},
  {"/dev/st110", FHDEV(DEV_TAPE_MAJOR, 110), "\\Device\\Tape110"},
  {"/dev/st111", FHDEV(DEV_TAPE_MAJOR, 111), "\\Device\\Tape111"},
  {"/dev/st112", FHDEV(DEV_TAPE_MAJOR, 112), "\\Device\\Tape112"},
  {"/dev/st113", FHDEV(DEV_TAPE_MAJOR, 113), "\\Device\\Tape113"},
  {"/dev/st114", FHDEV(DEV_TAPE_MAJOR, 114), "\\Device\\Tape114"},
  {"/dev/st115", FHDEV(DEV_TAPE_MAJOR, 115), "\\Device\\Tape115"},
  {"/dev/st116", FHDEV(DEV_TAPE_MAJOR, 116), "\\Device\\Tape116"},
  {"/dev/st117", FHDEV(DEV_TAPE_MAJOR, 117), "\\Device\\Tape117"},
  {"/dev/st118", FHDEV(DEV_TAPE_MAJOR, 118), "\\Device\\Tape118"},
  {"/dev/st119", FHDEV(DEV_TAPE_MAJOR, 119), "\\Device\\Tape119"},
  {"/dev/st120", FHDEV(DEV_TAPE_MAJOR, 120), "\\Device\\Tape120"},
  {"/dev/st121", FHDEV(DEV_TAPE_MAJOR, 121), "\\Device\\Tape121"},
  {"/dev/st122", FHDEV(DEV_TAPE_MAJOR, 122), "\\Device\\Tape122"},
  {"/dev/st123", FHDEV(DEV_TAPE_MAJOR, 123), "\\Device\\Tape123"},
  {"/dev/st124", FHDEV(DEV_TAPE_MAJOR, 124), "\\Device\\Tape124"},
  {"/dev/st125", FHDEV(DEV_TAPE_MAJOR, 125), "\\Device\\Tape125"},
  {"/dev/st126", FHDEV(DEV_TAPE_MAJOR, 126), "\\Device\\Tape126"},
  {"/dev/st127", FHDEV(DEV_TAPE_MAJOR, 127), "\\Device\\Tape127"},
  {"/dev/tty", FH_TTY, "\\dev\\tty"},
  {"/dev/tty0", FHDEV(DEV_TTYS_MAJOR, 0), "\\dev\\tty0"},
  {"/dev/tty1", FHDEV(DEV_TTYS_MAJOR, 1), "\\dev\\tty1"},
  {"/dev/tty2", FHDEV(DEV_TTYS_MAJOR, 2), "\\dev\\tty2"},
  {"/dev/tty3", FHDEV(DEV_TTYS_MAJOR, 3), "\\dev\\tty3"},
  {"/dev/tty4", FHDEV(DEV_TTYS_MAJOR, 4), "\\dev\\tty4"},
  {"/dev/tty5", FHDEV(DEV_TTYS_MAJOR, 5), "\\dev\\tty5"},
  {"/dev/tty6", FHDEV(DEV_TTYS_MAJOR, 6), "\\dev\\tty6"},
  {"/dev/tty7", FHDEV(DEV_TTYS_MAJOR, 7), "\\dev\\tty7"},
  {"/dev/tty8", FHDEV(DEV_TTYS_MAJOR, 8), "\\dev\\tty8"},
  {"/dev/tty9", FHDEV(DEV_TTYS_MAJOR, 9), "\\dev\\tty9"},
  {"/dev/tty10", FHDEV(DEV_TTYS_MAJOR, 10), "\\dev\\tty10"},
  {"/dev/tty11", FHDEV(DEV_TTYS_MAJOR, 11), "\\dev\\tty11"},
  {"/dev/tty12", FHDEV(DEV_TTYS_MAJOR, 12), "\\dev\\tty12"},
  {"/dev/tty13", FHDEV(DEV_TTYS_MAJOR, 13), "\\dev\\tty13"},
  {"/dev/tty14", FHDEV(DEV_TTYS_MAJOR, 14), "\\dev\\tty14"},
  {"/dev/tty15", FHDEV(DEV_TTYS_MAJOR, 15), "\\dev\\tty15"},
  {"/dev/tty16", FHDEV(DEV_TTYS_MAJOR, 16), "\\dev\\tty16"},
  {"/dev/tty17", FHDEV(DEV_TTYS_MAJOR, 17), "\\dev\\tty17"},
  {"/dev/tty18", FHDEV(DEV_TTYS_MAJOR, 18), "\\dev\\tty18"},
  {"/dev/tty19", FHDEV(DEV_TTYS_MAJOR, 19), "\\dev\\tty19"},
  {"/dev/tty20", FHDEV(DEV_TTYS_MAJOR, 20), "\\dev\\tty20"},
  {"/dev/tty21", FHDEV(DEV_TTYS_MAJOR, 21), "\\dev\\tty21"},
  {"/dev/tty22", FHDEV(DEV_TTYS_MAJOR, 22), "\\dev\\tty22"},
  {"/dev/tty23", FHDEV(DEV_TTYS_MAJOR, 23), "\\dev\\tty23"},
  {"/dev/tty24", FHDEV(DEV_TTYS_MAJOR, 24), "\\dev\\tty24"},
  {"/dev/tty25", FHDEV(DEV_TTYS_MAJOR, 25), "\\dev\\tty25"},
  {"/dev/tty26", FHDEV(DEV_TTYS_MAJOR, 26), "\\dev\\tty26"},
  {"/dev/tty27", FHDEV(DEV_TTYS_MAJOR, 27), "\\dev\\tty27"},
  {"/dev/tty28", FHDEV(DEV_TTYS_MAJOR, 28), "\\dev\\tty28"},
  {"/dev/tty29", FHDEV(DEV_TTYS_MAJOR, 29), "\\dev\\tty29"},
  {"/dev/tty30", FHDEV(DEV_TTYS_MAJOR, 30), "\\dev\\tty30"},
  {"/dev/tty31", FHDEV(DEV_TTYS_MAJOR, 31), "\\dev\\tty31"},
  {"/dev/tty32", FHDEV(DEV_TTYS_MAJOR, 32), "\\dev\\tty32"},
  {"/dev/tty33", FHDEV(DEV_TTYS_MAJOR, 33), "\\dev\\tty33"},
  {"/dev/tty34", FHDEV(DEV_TTYS_MAJOR, 34), "\\dev\\tty34"},
  {"/dev/tty35", FHDEV(DEV_TTYS_MAJOR, 35), "\\dev\\tty35"},
  {"/dev/tty36", FHDEV(DEV_TTYS_MAJOR, 36), "\\dev\\tty36"},
  {"/dev/tty37", FHDEV(DEV_TTYS_MAJOR, 37), "\\dev\\tty37"},
  {"/dev/tty38", FHDEV(DEV_TTYS_MAJOR, 38), "\\dev\\tty38"},
  {"/dev/tty39", FHDEV(DEV_TTYS_MAJOR, 39), "\\dev\\tty39"},
  {"/dev/tty40", FHDEV(DEV_TTYS_MAJOR, 40), "\\dev\\tty40"},
  {"/dev/tty41", FHDEV(DEV_TTYS_MAJOR, 41), "\\dev\\tty41"},
  {"/dev/tty42", FHDEV(DEV_TTYS_MAJOR, 42), "\\dev\\tty42"},
  {"/dev/tty43", FHDEV(DEV_TTYS_MAJOR, 43), "\\dev\\tty43"},
  {"/dev/tty44", FHDEV(DEV_TTYS_MAJOR, 44), "\\dev\\tty44"},
  {"/dev/tty45", FHDEV(DEV_TTYS_MAJOR, 45), "\\dev\\tty45"},
  {"/dev/tty46", FHDEV(DEV_TTYS_MAJOR, 46), "\\dev\\tty46"},
  {"/dev/tty47", FHDEV(DEV_TTYS_MAJOR, 47), "\\dev\\tty47"},
  {"/dev/tty48", FHDEV(DEV_TTYS_MAJOR, 48), "\\dev\\tty48"},
  {"/dev/tty49", FHDEV(DEV_TTYS_MAJOR, 49), "\\dev\\tty49"},
  {"/dev/tty50", FHDEV(DEV_TTYS_MAJOR, 50), "\\dev\\tty50"},
  {"/dev/tty51", FHDEV(DEV_TTYS_MAJOR, 51), "\\dev\\tty51"},
  {"/dev/tty52", FHDEV(DEV_TTYS_MAJOR, 52), "\\dev\\tty52"},
  {"/dev/tty53", FHDEV(DEV_TTYS_MAJOR, 53), "\\dev\\tty53"},
  {"/dev/tty54", FHDEV(DEV_TTYS_MAJOR, 54), "\\dev\\tty54"},
  {"/dev/tty55", FHDEV(DEV_TTYS_MAJOR, 55), "\\dev\\tty55"},
  {"/dev/tty56", FHDEV(DEV_TTYS_MAJOR, 56), "\\dev\\tty56"},
  {"/dev/tty57", FHDEV(DEV_TTYS_MAJOR, 57), "\\dev\\tty57"},
  {"/dev/tty58", FHDEV(DEV_TTYS_MAJOR, 58), "\\dev\\tty58"},
  {"/dev/tty59", FHDEV(DEV_TTYS_MAJOR, 59), "\\dev\\tty59"},
  {"/dev/tty60", FHDEV(DEV_TTYS_MAJOR, 60), "\\dev\\tty60"},
  {"/dev/tty61", FHDEV(DEV_TTYS_MAJOR, 61), "\\dev\\tty61"},
  {"/dev/tty62", FHDEV(DEV_TTYS_MAJOR, 62), "\\dev\\tty62"},
  {"/dev/tty63", FHDEV(DEV_TTYS_MAJOR, 63), "\\dev\\tty63"},
  {"/dev/ttyS0", FHDEV(DEV_SERIAL_MAJOR, 1), "\\\\.\\com1"},
  {"/dev/ttyS1", FHDEV(DEV_SERIAL_MAJOR, 2), "\\\\.\\com2"},
  {"/dev/ttyS2", FHDEV(DEV_SERIAL_MAJOR, 3), "\\\\.\\com3"},
  {"/dev/ttyS3", FHDEV(DEV_SERIAL_MAJOR, 4), "\\\\.\\com4"},
  {"/dev/ttyS4", FHDEV(DEV_SERIAL_MAJOR, 5), "\\\\.\\com5"},
  {"/dev/ttyS5", FHDEV(DEV_SERIAL_MAJOR, 6), "\\\\.\\com6"},
  {"/dev/ttyS6", FHDEV(DEV_SERIAL_MAJOR, 7), "\\\\.\\com7"},
  {"/dev/ttyS7", FHDEV(DEV_SERIAL_MAJOR, 8), "\\\\.\\com8"},
  {"/dev/ttyS8", FHDEV(DEV_SERIAL_MAJOR, 9), "\\\\.\\com9"},
  {"/dev/ttyS9", FHDEV(DEV_SERIAL_MAJOR, 10), "\\\\.\\com10"},
  {"/dev/ttyS10", FHDEV(DEV_SERIAL_MAJOR, 11), "\\\\.\\com11"},
  {"/dev/ttyS11", FHDEV(DEV_SERIAL_MAJOR, 12), "\\\\.\\com12"},
  {"/dev/ttyS12", FHDEV(DEV_SERIAL_MAJOR, 13), "\\\\.\\com13"},
  {"/dev/ttyS13", FHDEV(DEV_SERIAL_MAJOR, 14), "\\\\.\\com14"},
  {"/dev/ttyS14", FHDEV(DEV_SERIAL_MAJOR, 15), "\\\\.\\com15"},
  {"/dev/ttyS15", FHDEV(DEV_SERIAL_MAJOR, 16), "\\\\.\\com16"},
  {"/dev/ttym", FH_TTYM, "\\dev\\ttym"},
  {"/dev/urandom", FH_URANDOM, "\\dev\\urandom"},
  {"/dev/windows", FH_WINDOWS, "\\dev\\windows"},
  {"/dev/zero", FH_ZERO, "\\dev\\zero"}
d14827 1
@


1.15
log
@	* devices.h: Switch FH_ZERO and FH_PORT as on Linux.  Add FH_FULL.
	* devices.in: Add /dev/full.
	* devices.cc: Regenerate.
	* dtable.cc (build_fh_pc): Add FH_FULL.
	* fhandler.cc (fhandler_base::fstat): Set FH_FULL permission bits
	correctly.
	* fhandler_zero.cc (fhandler_dev_zero::write): Set errno to ENOSPC
	and return -1 if device is FH_FULL.
@
text
@d14887 1
a14887 1
      drive -= 'q' - 'q';
@


1.14
log
@* cygthread.cc (cygthread::terminate_thread): Wait briefly for notification
event in the event that the thread was actually in the process of exiting.
* pipe.cc (fhandler_pipe::dup): read_state is not supposed to be inheritable.
Fix that.
* path.cc (path_conv::check): Set symlen = 0 to avoid a compiler warning.
* devices.h (devices::parsedisk): Declare new function.
* devices.in (devices::parsedisk): Define new function.
* dtable.cc (dtable::init_std_file_from_handle): Use device numbers rather than
name.
* fhandler_proc.cc (format_proc_partitions): Use parsedisk to generate disk
names from numeric codes.  (This was broken on two of my systems previously and
is still broken now)
@
text
@d92 1
d892 3
a894 3
const device *ttym_dev = dev_storage + 830;
const device *ttys_dev = dev_storage + 750;
const device *urandom_dev = dev_storage + 831;
d909 1
a909 1
return dev_storage + 214;
d927 1
a927 1
return dev_storage + 749;
d942 1
a942 1
return dev_storage + 213;
d963 1
a963 1
return dev_storage + 212;
d978 1
a978 1
return dev_storage + 211;
d993 1
a993 1
return dev_storage + 210;
d1008 1
a1008 1
return dev_storage + 209;
d1023 1
a1023 1
return dev_storage + 208;
d1038 1
a1038 1
return dev_storage + 207;
d1053 1
a1053 1
return dev_storage + 206;
d1068 1
a1068 1
return dev_storage + 205;
d1086 1
a1086 1
return dev_storage + 204;
d1122 1
a1122 1
return dev_storage + 203;
d1137 1
a1137 1
return dev_storage + 202;
d1155 1
a1155 1
return dev_storage + 201;
d1170 1
a1170 1
return dev_storage + 39;
d1191 1
a1191 1
return dev_storage + 200;
d1206 1
a1206 1
return dev_storage + 199;
d1221 1
a1221 1
return dev_storage + 198;
d1236 1
a1236 1
return dev_storage + 197;
d1251 1
a1251 1
return dev_storage + 196;
d1266 1
a1266 1
return dev_storage + 195;
d1281 1
a1281 1
return dev_storage + 194;
d1296 1
a1296 1
return dev_storage + 193;
d1311 1
a1311 1
return dev_storage + 192;
d1326 1
a1326 1
return dev_storage + 191;
d1341 1
a1341 1
return dev_storage + 190;
d1356 1
a1356 1
return dev_storage + 189;
d1374 1
a1374 1
return dev_storage + 630;
d1389 1
a1389 1
return dev_storage + 614;
d1428 1
a1428 1
return dev_storage + 629;
d1443 1
a1443 1
return dev_storage + 613;
d1482 1
a1482 1
return dev_storage + 628;
d1497 1
a1497 1
return dev_storage + 612;
d1536 1
a1536 1
return dev_storage + 627;
d1551 1
a1551 1
return dev_storage + 611;
d1590 1
a1590 1
return dev_storage + 626;
d1605 1
a1605 1
return dev_storage + 610;
d1644 1
a1644 1
return dev_storage + 625;
d1659 1
a1659 1
return dev_storage + 609;
d1698 1
a1698 1
return dev_storage + 624;
d1713 1
a1713 1
return dev_storage + 608;
d1752 1
a1752 1
return dev_storage + 623;
d1767 1
a1767 1
return dev_storage + 607;
d1806 1
a1806 1
return dev_storage + 622;
d1821 1
a1821 1
return dev_storage + 606;
d1860 1
a1860 1
return dev_storage + 621;
d1875 1
a1875 1
return dev_storage + 605;
d1920 1
a1920 1
return dev_storage + 171;
d1935 1
a1935 1
return dev_storage + 170;
d1953 1
a1953 1
return dev_storage + 833;
d1992 1
a1992 1
return dev_storage + 830;
d2007 1
a2007 1
return dev_storage + 38;
d2025 1
a2025 1
          if (strncmp (KR_keyword, "/dev/null", 9) == 0)
d2027 25
d2053 1
a2053 1
return dev_storage + 168;
d2056 2
a2057 3
            }
          else
            {
d2067 1
a2067 1
return dev_storage + 169;
d2085 1
a2085 1
return dev_storage + 598;
d2103 1
a2103 1
return dev_storage + 759;
d2118 1
a2118 1
return dev_storage + 583;
d2139 1
a2139 1
return dev_storage + 568;
d2154 1
a2154 1
return dev_storage + 553;
d2169 1
a2169 1
return dev_storage + 538;
d2184 1
a2184 1
return dev_storage + 523;
d2202 1
a2202 1
return dev_storage + 508;
d2217 1
a2217 1
return dev_storage + 49;
d2238 1
a2238 1
return dev_storage + 493;
d2253 1
a2253 1
return dev_storage + 478;
d2268 1
a2268 1
return dev_storage + 463;
d2283 1
a2283 1
return dev_storage + 448;
d2298 1
a2298 1
return dev_storage + 433;
d2313 1
a2313 1
return dev_storage + 418;
d2331 1
a2331 1
return dev_storage + 403;
d2367 1
a2367 1
return dev_storage + 388;
d2382 1
a2382 1
return dev_storage + 373;
d2397 1
a2397 1
return dev_storage + 358;
d2412 1
a2412 1
return dev_storage + 343;
d2427 1
a2427 1
return dev_storage + 328;
d2442 1
a2442 1
return dev_storage + 313;
d2457 1
a2457 1
return dev_storage + 298;
d2472 1
a2472 1
return dev_storage + 283;
d2490 1
a2490 1
return dev_storage + 268;
d2505 1
a2505 1
return dev_storage + 182;
d2526 1
a2526 1
return dev_storage + 253;
d2541 1
a2541 1
return dev_storage + 238;
d2556 1
a2556 1
return dev_storage + 223;
d2571 1
a2571 1
return dev_storage + 720;
d2586 1
a2586 1
return dev_storage + 710;
d2601 1
a2601 1
return dev_storage + 700;
d2616 1
a2616 1
return dev_storage + 690;
d2631 1
a2631 1
return dev_storage + 680;
d2646 1
a2646 1
return dev_storage + 670;
d2661 1
a2661 1
return dev_storage + 660;
d2676 1
a2676 1
return dev_storage + 650;
d2691 1
a2691 1
return dev_storage + 640;
d2715 1
a2715 1
return dev_storage + 597;
d2733 1
a2733 1
return dev_storage + 758;
d2748 1
a2748 1
return dev_storage + 582;
d2769 1
a2769 1
return dev_storage + 567;
d2784 1
a2784 1
return dev_storage + 552;
d2799 1
a2799 1
return dev_storage + 537;
d2814 1
a2814 1
return dev_storage + 522;
d2832 1
a2832 1
return dev_storage + 507;
d2847 1
a2847 1
return dev_storage + 48;
d2868 1
a2868 1
return dev_storage + 492;
d2883 1
a2883 1
return dev_storage + 477;
d2898 1
a2898 1
return dev_storage + 462;
d2913 1
a2913 1
return dev_storage + 447;
d2928 1
a2928 1
return dev_storage + 432;
d2943 1
a2943 1
return dev_storage + 417;
d2961 1
a2961 1
return dev_storage + 402;
d2997 1
a2997 1
return dev_storage + 387;
d3012 1
a3012 1
return dev_storage + 372;
d3027 1
a3027 1
return dev_storage + 357;
d3042 1
a3042 1
return dev_storage + 342;
d3057 1
a3057 1
return dev_storage + 327;
d3072 1
a3072 1
return dev_storage + 312;
d3087 1
a3087 1
return dev_storage + 297;
d3102 1
a3102 1
return dev_storage + 282;
d3120 1
a3120 1
return dev_storage + 267;
d3135 1
a3135 1
return dev_storage + 181;
d3156 1
a3156 1
return dev_storage + 252;
d3171 1
a3171 1
return dev_storage + 237;
d3186 1
a3186 1
return dev_storage + 222;
d3201 1
a3201 1
return dev_storage + 719;
d3216 1
a3216 1
return dev_storage + 709;
d3231 1
a3231 1
return dev_storage + 699;
d3246 1
a3246 1
return dev_storage + 689;
d3261 1
a3261 1
return dev_storage + 679;
d3276 1
a3276 1
return dev_storage + 669;
d3291 1
a3291 1
return dev_storage + 659;
d3306 1
a3306 1
return dev_storage + 649;
d3321 1
a3321 1
return dev_storage + 639;
d3345 1
a3345 1
return dev_storage + 596;
d3363 1
a3363 1
return dev_storage + 757;
d3378 1
a3378 1
return dev_storage + 581;
d3399 1
a3399 1
return dev_storage + 566;
d3414 1
a3414 1
return dev_storage + 551;
d3429 1
a3429 1
return dev_storage + 536;
d3444 1
a3444 1
return dev_storage + 521;
d3462 1
a3462 1
return dev_storage + 506;
d3477 1
a3477 1
return dev_storage + 47;
d3498 1
a3498 1
return dev_storage + 491;
d3513 1
a3513 1
return dev_storage + 476;
d3528 1
a3528 1
return dev_storage + 461;
d3543 1
a3543 1
return dev_storage + 446;
d3558 1
a3558 1
return dev_storage + 431;
d3573 1
a3573 1
return dev_storage + 416;
d3591 1
a3591 1
return dev_storage + 401;
d3627 1
a3627 1
return dev_storage + 386;
d3642 1
a3642 1
return dev_storage + 371;
d3657 1
a3657 1
return dev_storage + 356;
d3672 1
a3672 1
return dev_storage + 341;
d3687 1
a3687 1
return dev_storage + 326;
d3702 1
a3702 1
return dev_storage + 311;
d3717 1
a3717 1
return dev_storage + 296;
d3732 1
a3732 1
return dev_storage + 281;
d3750 1
a3750 1
return dev_storage + 266;
d3765 1
a3765 1
return dev_storage + 180;
d3786 1
a3786 1
return dev_storage + 251;
d3801 1
a3801 1
return dev_storage + 236;
d3816 1
a3816 1
return dev_storage + 221;
d3831 1
a3831 1
return dev_storage + 718;
d3846 1
a3846 1
return dev_storage + 708;
d3861 1
a3861 1
return dev_storage + 698;
d3876 1
a3876 1
return dev_storage + 688;
d3891 1
a3891 1
return dev_storage + 678;
d3906 1
a3906 1
return dev_storage + 668;
d3921 1
a3921 1
return dev_storage + 658;
d3936 1
a3936 1
return dev_storage + 648;
d3951 1
a3951 1
return dev_storage + 638;
d3975 1
a3975 1
return dev_storage + 595;
d3993 1
a3993 1
return dev_storage + 756;
d4008 1
a4008 1
return dev_storage + 580;
d4029 1
a4029 1
return dev_storage + 565;
d4044 1
a4044 1
return dev_storage + 550;
d4059 1
a4059 1
return dev_storage + 535;
d4074 1
a4074 1
return dev_storage + 520;
d4092 1
a4092 1
return dev_storage + 505;
d4107 1
a4107 1
return dev_storage + 46;
d4128 1
a4128 1
return dev_storage + 490;
d4143 1
a4143 1
return dev_storage + 475;
d4158 1
a4158 1
return dev_storage + 460;
d4173 1
a4173 1
return dev_storage + 445;
d4188 1
a4188 1
return dev_storage + 430;
d4203 1
a4203 1
return dev_storage + 415;
d4221 1
a4221 1
return dev_storage + 400;
d4257 1
a4257 1
return dev_storage + 385;
d4272 1
a4272 1
return dev_storage + 370;
d4287 1
a4287 1
return dev_storage + 355;
d4302 1
a4302 1
return dev_storage + 340;
d4317 1
a4317 1
return dev_storage + 325;
d4332 1
a4332 1
return dev_storage + 310;
d4347 1
a4347 1
return dev_storage + 295;
d4362 1
a4362 1
return dev_storage + 280;
d4380 1
a4380 1
return dev_storage + 265;
d4395 1
a4395 1
return dev_storage + 179;
d4416 1
a4416 1
return dev_storage + 250;
d4431 1
a4431 1
return dev_storage + 235;
d4446 1
a4446 1
return dev_storage + 220;
d4461 1
a4461 1
return dev_storage + 717;
d4476 1
a4476 1
return dev_storage + 707;
d4491 1
a4491 1
return dev_storage + 697;
d4506 1
a4506 1
return dev_storage + 687;
d4521 1
a4521 1
return dev_storage + 677;
d4536 1
a4536 1
return dev_storage + 667;
d4551 1
a4551 1
return dev_storage + 657;
d4566 1
a4566 1
return dev_storage + 647;
d4581 1
a4581 1
return dev_storage + 637;
d4605 1
a4605 1
return dev_storage + 594;
d4623 1
a4623 1
return dev_storage + 755;
d4638 1
a4638 1
return dev_storage + 579;
d4659 1
a4659 1
return dev_storage + 564;
d4674 1
a4674 1
return dev_storage + 549;
d4689 1
a4689 1
return dev_storage + 534;
d4704 1
a4704 1
return dev_storage + 519;
d4722 1
a4722 1
return dev_storage + 504;
d4737 1
a4737 1
return dev_storage + 45;
d4758 1
a4758 1
return dev_storage + 489;
d4773 1
a4773 1
return dev_storage + 474;
d4788 1
a4788 1
return dev_storage + 459;
d4803 1
a4803 1
return dev_storage + 444;
d4818 1
a4818 1
return dev_storage + 429;
d4833 1
a4833 1
return dev_storage + 414;
d4851 1
a4851 1
return dev_storage + 399;
d4887 1
a4887 1
return dev_storage + 384;
d4902 1
a4902 1
return dev_storage + 369;
d4917 1
a4917 1
return dev_storage + 354;
d4932 1
a4932 1
return dev_storage + 339;
d4947 1
a4947 1
return dev_storage + 324;
d4962 1
a4962 1
return dev_storage + 309;
d4977 1
a4977 1
return dev_storage + 294;
d4992 1
a4992 1
return dev_storage + 279;
d5010 1
a5010 1
return dev_storage + 264;
d5025 1
a5025 1
return dev_storage + 178;
d5046 1
a5046 1
return dev_storage + 249;
d5061 1
a5061 1
return dev_storage + 234;
d5076 1
a5076 1
return dev_storage + 219;
d5091 1
a5091 1
return dev_storage + 716;
d5106 1
a5106 1
return dev_storage + 706;
d5121 1
a5121 1
return dev_storage + 696;
d5136 1
a5136 1
return dev_storage + 686;
d5151 1
a5151 1
return dev_storage + 676;
d5166 1
a5166 1
return dev_storage + 666;
d5181 1
a5181 1
return dev_storage + 656;
d5196 1
a5196 1
return dev_storage + 646;
d5214 1
a5214 1
return dev_storage + 636;
d5229 1
a5229 1
return dev_storage + 620;
d5274 1
a5274 1
return dev_storage + 593;
d5292 1
a5292 1
return dev_storage + 754;
d5307 1
a5307 1
return dev_storage + 578;
d5328 1
a5328 1
return dev_storage + 563;
d5343 1
a5343 1
return dev_storage + 548;
d5358 1
a5358 1
return dev_storage + 533;
d5373 1
a5373 1
return dev_storage + 518;
d5391 1
a5391 1
return dev_storage + 503;
d5406 1
a5406 1
return dev_storage + 44;
d5427 1
a5427 1
return dev_storage + 488;
d5442 1
a5442 1
return dev_storage + 473;
d5457 1
a5457 1
return dev_storage + 458;
d5472 1
a5472 1
return dev_storage + 443;
d5487 1
a5487 1
return dev_storage + 428;
d5502 1
a5502 1
return dev_storage + 413;
d5520 1
a5520 1
return dev_storage + 398;
d5556 1
a5556 1
return dev_storage + 383;
d5571 1
a5571 1
return dev_storage + 368;
d5586 1
a5586 1
return dev_storage + 353;
d5601 1
a5601 1
return dev_storage + 338;
d5616 1
a5616 1
return dev_storage + 323;
d5631 1
a5631 1
return dev_storage + 308;
d5646 1
a5646 1
return dev_storage + 293;
d5661 1
a5661 1
return dev_storage + 278;
d5679 1
a5679 1
return dev_storage + 263;
d5694 1
a5694 1
return dev_storage + 177;
d5715 1
a5715 1
return dev_storage + 248;
d5730 1
a5730 1
return dev_storage + 233;
d5745 1
a5745 1
return dev_storage + 218;
d5760 1
a5760 1
return dev_storage + 715;
d5775 1
a5775 1
return dev_storage + 705;
d5790 1
a5790 1
return dev_storage + 695;
d5805 1
a5805 1
return dev_storage + 685;
d5820 1
a5820 1
return dev_storage + 675;
d5835 1
a5835 1
return dev_storage + 665;
d5850 1
a5850 1
return dev_storage + 655;
d5865 1
a5865 1
return dev_storage + 645;
d5883 1
a5883 1
return dev_storage + 635;
d5898 1
a5898 1
return dev_storage + 619;
d5943 1
a5943 1
return dev_storage + 592;
d5961 1
a5961 1
return dev_storage + 753;
d5976 1
a5976 1
return dev_storage + 577;
d5997 1
a5997 1
return dev_storage + 562;
d6012 1
a6012 1
return dev_storage + 547;
d6027 1
a6027 1
return dev_storage + 532;
d6042 1
a6042 1
return dev_storage + 517;
d6060 1
a6060 1
return dev_storage + 502;
d6075 1
a6075 1
return dev_storage + 43;
d6096 1
a6096 1
return dev_storage + 487;
d6111 1
a6111 1
return dev_storage + 472;
d6126 1
a6126 1
return dev_storage + 457;
d6141 1
a6141 1
return dev_storage + 442;
d6156 1
a6156 1
return dev_storage + 427;
d6171 1
a6171 1
return dev_storage + 412;
d6189 1
a6189 1
return dev_storage + 397;
d6225 1
a6225 1
return dev_storage + 382;
d6240 1
a6240 1
return dev_storage + 367;
d6255 1
a6255 1
return dev_storage + 352;
d6270 1
a6270 1
return dev_storage + 337;
d6285 1
a6285 1
return dev_storage + 322;
d6300 1
a6300 1
return dev_storage + 307;
d6315 1
a6315 1
return dev_storage + 292;
d6330 1
a6330 1
return dev_storage + 277;
d6348 1
a6348 1
return dev_storage + 262;
d6363 1
a6363 1
return dev_storage + 176;
d6384 1
a6384 1
return dev_storage + 247;
d6399 1
a6399 1
return dev_storage + 232;
d6414 1
a6414 1
return dev_storage + 217;
d6429 1
a6429 1
return dev_storage + 714;
d6444 1
a6444 1
return dev_storage + 704;
d6459 1
a6459 1
return dev_storage + 694;
d6474 1
a6474 1
return dev_storage + 684;
d6489 1
a6489 1
return dev_storage + 674;
d6504 1
a6504 1
return dev_storage + 664;
d6519 1
a6519 1
return dev_storage + 654;
d6534 1
a6534 1
return dev_storage + 644;
d6552 1
a6552 1
return dev_storage + 634;
d6567 1
a6567 1
return dev_storage + 618;
d6612 1
a6612 1
return dev_storage + 591;
d6630 1
a6630 1
return dev_storage + 752;
d6645 1
a6645 1
return dev_storage + 576;
d6666 1
a6666 1
return dev_storage + 561;
d6681 1
a6681 1
return dev_storage + 546;
d6696 1
a6696 1
return dev_storage + 531;
d6711 1
a6711 1
return dev_storage + 516;
d6729 1
a6729 1
return dev_storage + 501;
d6744 1
a6744 1
return dev_storage + 42;
d6765 1
a6765 1
return dev_storage + 486;
d6780 1
a6780 1
return dev_storage + 471;
d6795 1
a6795 1
return dev_storage + 456;
d6810 1
a6810 1
return dev_storage + 441;
d6825 1
a6825 1
return dev_storage + 426;
d6840 1
a6840 1
return dev_storage + 411;
d6858 1
a6858 1
return dev_storage + 396;
d6894 1
a6894 1
return dev_storage + 381;
d6909 1
a6909 1
return dev_storage + 366;
d6924 1
a6924 1
return dev_storage + 351;
d6939 1
a6939 1
return dev_storage + 336;
d6954 1
a6954 1
return dev_storage + 321;
d6969 1
a6969 1
return dev_storage + 306;
d6984 1
a6984 1
return dev_storage + 291;
d6999 1
a6999 1
return dev_storage + 276;
d7017 1
a7017 1
return dev_storage + 261;
d7032 1
a7032 1
return dev_storage + 175;
d7053 1
a7053 1
return dev_storage + 246;
d7068 1
a7068 1
return dev_storage + 231;
d7083 1
a7083 1
return dev_storage + 216;
d7098 1
a7098 1
return dev_storage + 713;
d7113 1
a7113 1
return dev_storage + 703;
d7128 1
a7128 1
return dev_storage + 693;
d7143 1
a7143 1
return dev_storage + 683;
d7158 1
a7158 1
return dev_storage + 673;
d7173 1
a7173 1
return dev_storage + 663;
d7188 1
a7188 1
return dev_storage + 653;
d7203 1
a7203 1
return dev_storage + 643;
d7221 1
a7221 1
return dev_storage + 633;
d7236 1
a7236 1
return dev_storage + 617;
d7281 1
a7281 1
return dev_storage + 590;
d7299 1
a7299 1
return dev_storage + 751;
d7314 1
a7314 1
return dev_storage + 575;
d7335 1
a7335 1
return dev_storage + 560;
d7350 1
a7350 1
return dev_storage + 545;
d7365 1
a7365 1
return dev_storage + 530;
d7380 1
a7380 1
return dev_storage + 515;
d7398 1
a7398 1
return dev_storage + 500;
d7413 1
a7413 1
return dev_storage + 41;
d7434 1
a7434 1
return dev_storage + 485;
d7449 1
a7449 1
return dev_storage + 470;
d7464 1
a7464 1
return dev_storage + 455;
d7479 1
a7479 1
return dev_storage + 440;
d7494 1
a7494 1
return dev_storage + 425;
d7509 1
a7509 1
return dev_storage + 410;
d7527 1
a7527 1
return dev_storage + 395;
d7563 1
a7563 1
return dev_storage + 380;
d7578 1
a7578 1
return dev_storage + 365;
d7593 1
a7593 1
return dev_storage + 350;
d7608 1
a7608 1
return dev_storage + 335;
d7623 1
a7623 1
return dev_storage + 320;
d7638 1
a7638 1
return dev_storage + 305;
d7653 1
a7653 1
return dev_storage + 290;
d7668 1
a7668 1
return dev_storage + 275;
d7686 1
a7686 1
return dev_storage + 260;
d7701 1
a7701 1
return dev_storage + 174;
d7722 1
a7722 1
return dev_storage + 245;
d7737 1
a7737 1
return dev_storage + 230;
d7752 1
a7752 1
return dev_storage + 215;
d7767 1
a7767 1
return dev_storage + 712;
d7782 1
a7782 1
return dev_storage + 702;
d7797 1
a7797 1
return dev_storage + 692;
d7812 1
a7812 1
return dev_storage + 682;
d7827 1
a7827 1
return dev_storage + 672;
d7842 1
a7842 1
return dev_storage + 662;
d7857 1
a7857 1
return dev_storage + 652;
d7872 1
a7872 1
return dev_storage + 642;
d7890 1
a7890 1
return dev_storage + 632;
d7905 1
a7905 1
return dev_storage + 616;
d7950 1
a7950 1
return dev_storage + 750;
d7965 1
a7965 1
return dev_storage + 40;
d7980 1
a7980 1
return dev_storage + 173;
d7995 1
a7995 1
return dev_storage + 711;
d8010 1
a8010 1
return dev_storage + 701;
d8025 1
a8025 1
return dev_storage + 691;
d8040 1
a8040 1
return dev_storage + 681;
d8055 1
a8055 1
return dev_storage + 671;
d8070 1
a8070 1
return dev_storage + 661;
d8085 1
a8085 1
return dev_storage + 651;
d8100 1
a8100 1
return dev_storage + 641;
d8118 1
a8118 1
return dev_storage + 631;
d8133 1
a8133 1
return dev_storage + 615;
d8202 1
a8202 1
return dev_storage + 823;
d8217 1
a8217 1
return dev_storage + 139;
d8232 1
a8232 1
return dev_storage + 129;
d8247 1
a8247 1
return dev_storage + 119;
d8262 1
a8262 1
return dev_storage + 109;
d8280 1
a8280 1
return dev_storage + 809;
d8295 1
a8295 1
return dev_storage + 99;
d8319 1
a8319 1
return dev_storage + 799;
d8334 1
a8334 1
return dev_storage + 89;
d8358 1
a8358 1
return dev_storage + 789;
d8373 1
a8373 1
return dev_storage + 79;
d8397 1
a8397 1
return dev_storage + 779;
d8412 1
a8412 1
return dev_storage + 69;
d8436 1
a8436 1
return dev_storage + 769;
d8451 1
a8451 1
return dev_storage + 740;
d8466 1
a8466 1
return dev_storage + 59;
d8487 1
a8487 1
return dev_storage + 730;
d8511 1
a8511 1
return dev_storage + 822;
d8526 1
a8526 1
return dev_storage + 138;
d8541 1
a8541 1
return dev_storage + 128;
d8556 1
a8556 1
return dev_storage + 118;
d8571 1
a8571 1
return dev_storage + 108;
d8589 1
a8589 1
return dev_storage + 808;
d8604 1
a8604 1
return dev_storage + 98;
d8628 1
a8628 1
return dev_storage + 798;
d8643 1
a8643 1
return dev_storage + 88;
d8667 1
a8667 1
return dev_storage + 788;
d8682 1
a8682 1
return dev_storage + 78;
d8706 1
a8706 1
return dev_storage + 778;
d8721 1
a8721 1
return dev_storage + 68;
d8745 1
a8745 1
return dev_storage + 768;
d8760 1
a8760 1
return dev_storage + 739;
d8775 1
a8775 1
return dev_storage + 58;
d8796 1
a8796 1
return dev_storage + 729;
d8820 1
a8820 1
return dev_storage + 821;
d8835 1
a8835 1
return dev_storage + 137;
d8850 1
a8850 1
return dev_storage + 127;
d8865 1
a8865 1
return dev_storage + 117;
d8880 1
a8880 1
return dev_storage + 107;
d8898 1
a8898 1
return dev_storage + 807;
d8913 1
a8913 1
return dev_storage + 97;
d8937 1
a8937 1
return dev_storage + 797;
d8952 1
a8952 1
return dev_storage + 87;
d8976 1
a8976 1
return dev_storage + 787;
d8991 1
a8991 1
return dev_storage + 77;
d9015 1
a9015 1
return dev_storage + 777;
d9030 1
a9030 1
return dev_storage + 748;
d9045 1
a9045 1
return dev_storage + 67;
d9069 1
a9069 1
return dev_storage + 767;
d9084 1
a9084 1
return dev_storage + 738;
d9099 1
a9099 1
return dev_storage + 57;
d9120 1
a9120 1
return dev_storage + 728;
d9144 1
a9144 1
return dev_storage + 820;
d9159 1
a9159 1
return dev_storage + 136;
d9174 1
a9174 1
return dev_storage + 126;
d9189 1
a9189 1
return dev_storage + 116;
d9204 1
a9204 1
return dev_storage + 106;
d9222 1
a9222 1
return dev_storage + 806;
d9237 1
a9237 1
return dev_storage + 96;
d9261 1
a9261 1
return dev_storage + 796;
d9276 1
a9276 1
return dev_storage + 86;
d9300 1
a9300 1
return dev_storage + 786;
d9315 1
a9315 1
return dev_storage + 76;
d9339 1
a9339 1
return dev_storage + 776;
d9354 1
a9354 1
return dev_storage + 747;
d9369 1
a9369 1
return dev_storage + 66;
d9393 1
a9393 1
return dev_storage + 766;
d9408 1
a9408 1
return dev_storage + 737;
d9423 1
a9423 1
return dev_storage + 56;
d9459 1
a9459 1
return dev_storage + 727;
d9483 1
a9483 1
return dev_storage + 604;
d9501 1
a9501 1
return dev_storage + 819;
d9516 1
a9516 1
return dev_storage + 805;
d9531 1
a9531 1
return dev_storage + 795;
d9546 1
a9546 1
return dev_storage + 785;
d9561 1
a9561 1
return dev_storage + 775;
d9579 1
a9579 1
return dev_storage + 765;
d9594 1
a9594 1
return dev_storage + 589;
d9621 1
a9621 1
return dev_storage + 574;
d9636 1
a9636 1
return dev_storage + 559;
d9651 1
a9651 1
return dev_storage + 544;
d9666 1
a9666 1
return dev_storage + 529;
d9684 1
a9684 1
return dev_storage + 135;
d9699 1
a9699 1
return dev_storage + 125;
d9714 1
a9714 1
return dev_storage + 115;
d9729 1
a9729 1
return dev_storage + 105;
d9744 1
a9744 1
return dev_storage + 95;
d9759 1
a9759 1
return dev_storage + 85;
d9774 1
a9774 1
return dev_storage + 75;
d9789 1
a9789 1
return dev_storage + 65;
d9807 1
a9807 1
return dev_storage + 514;
d9822 1
a9822 1
return dev_storage + 55;
d9849 1
a9849 1
return dev_storage + 499;
d9864 1
a9864 1
return dev_storage + 484;
d9879 1
a9879 1
return dev_storage + 469;
d9894 1
a9894 1
return dev_storage + 454;
d9909 1
a9909 1
return dev_storage + 439;
d9924 1
a9924 1
return dev_storage + 424;
d9942 1
a9942 1
return dev_storage + 409;
d9978 1
a9978 1
return dev_storage + 394;
d9993 1
a9993 1
return dev_storage + 379;
d10008 1
a10008 1
return dev_storage + 364;
d10023 1
a10023 1
return dev_storage + 349;
d10038 1
a10038 1
return dev_storage + 334;
d10053 1
a10053 1
return dev_storage + 319;
d10068 1
a10068 1
return dev_storage + 304;
d10083 1
a10083 1
return dev_storage + 289;
d10101 1
a10101 1
return dev_storage + 274;
d10116 1
a10116 1
return dev_storage + 188;
d10137 1
a10137 1
return dev_storage + 259;
d10152 1
a10152 1
return dev_storage + 244;
d10167 1
a10167 1
return dev_storage + 229;
d10185 1
a10185 1
return dev_storage + 746;
d10200 1
a10200 1
return dev_storage + 736;
d10215 1
a10215 1
return dev_storage + 726;
d10245 1
a10245 1
return dev_storage + 603;
d10263 1
a10263 1
return dev_storage + 818;
d10278 1
a10278 1
return dev_storage + 804;
d10293 1
a10293 1
return dev_storage + 794;
d10308 1
a10308 1
return dev_storage + 784;
d10323 1
a10323 1
return dev_storage + 774;
d10341 1
a10341 1
return dev_storage + 764;
d10356 1
a10356 1
return dev_storage + 588;
d10383 1
a10383 1
return dev_storage + 573;
d10398 1
a10398 1
return dev_storage + 558;
d10413 1
a10413 1
return dev_storage + 543;
d10428 1
a10428 1
return dev_storage + 528;
d10446 1
a10446 1
return dev_storage + 134;
d10461 1
a10461 1
return dev_storage + 124;
d10476 1
a10476 1
return dev_storage + 114;
d10491 1
a10491 1
return dev_storage + 104;
d10506 1
a10506 1
return dev_storage + 94;
d10521 1
a10521 1
return dev_storage + 84;
d10536 1
a10536 1
return dev_storage + 74;
d10551 1
a10551 1
return dev_storage + 64;
d10569 1
a10569 1
return dev_storage + 513;
d10584 1
a10584 1
return dev_storage + 54;
d10611 1
a10611 1
return dev_storage + 498;
d10626 1
a10626 1
return dev_storage + 483;
d10641 1
a10641 1
return dev_storage + 468;
d10656 1
a10656 1
return dev_storage + 453;
d10671 1
a10671 1
return dev_storage + 438;
d10686 1
a10686 1
return dev_storage + 423;
d10704 1
a10704 1
return dev_storage + 408;
d10740 1
a10740 1
return dev_storage + 393;
d10755 1
a10755 1
return dev_storage + 378;
d10770 1
a10770 1
return dev_storage + 363;
d10785 1
a10785 1
return dev_storage + 348;
d10800 1
a10800 1
return dev_storage + 333;
d10815 1
a10815 1
return dev_storage + 318;
d10830 1
a10830 1
return dev_storage + 303;
d10845 1
a10845 1
return dev_storage + 288;
d10863 1
a10863 1
return dev_storage + 273;
d10878 1
a10878 1
return dev_storage + 187;
d10899 1
a10899 1
return dev_storage + 258;
d10914 1
a10914 1
return dev_storage + 243;
d10929 1
a10929 1
return dev_storage + 228;
d10947 1
a10947 1
return dev_storage + 745;
d10962 1
a10962 1
return dev_storage + 735;
d10977 1
a10977 1
return dev_storage + 725;
d11007 1
a11007 1
return dev_storage + 602;
d11025 1
a11025 1
return dev_storage + 817;
d11040 1
a11040 1
return dev_storage + 813;
d11055 1
a11055 1
return dev_storage + 803;
d11070 1
a11070 1
return dev_storage + 793;
d11085 1
a11085 1
return dev_storage + 783;
d11100 1
a11100 1
return dev_storage + 773;
d11118 1
a11118 1
return dev_storage + 763;
d11133 1
a11133 1
return dev_storage + 587;
d11160 1
a11160 1
return dev_storage + 572;
d11175 1
a11175 1
return dev_storage + 557;
d11190 1
a11190 1
return dev_storage + 542;
d11205 1
a11205 1
return dev_storage + 527;
d11223 1
a11223 1
return dev_storage + 133;
d11238 1
a11238 1
return dev_storage + 123;
d11253 1
a11253 1
return dev_storage + 113;
d11268 1
a11268 1
return dev_storage + 103;
d11283 1
a11283 1
return dev_storage + 93;
d11298 1
a11298 1
return dev_storage + 83;
d11313 1
a11313 1
return dev_storage + 73;
d11328 1
a11328 1
return dev_storage + 63;
d11346 1
a11346 1
return dev_storage + 512;
d11361 1
a11361 1
return dev_storage + 53;
d11388 1
a11388 1
return dev_storage + 497;
d11403 1
a11403 1
return dev_storage + 482;
d11418 1
a11418 1
return dev_storage + 467;
d11433 1
a11433 1
return dev_storage + 452;
d11448 1
a11448 1
return dev_storage + 437;
d11463 1
a11463 1
return dev_storage + 422;
d11481 1
a11481 1
return dev_storage + 407;
d11517 1
a11517 1
return dev_storage + 392;
d11532 1
a11532 1
return dev_storage + 377;
d11547 1
a11547 1
return dev_storage + 362;
d11562 1
a11562 1
return dev_storage + 347;
d11577 1
a11577 1
return dev_storage + 332;
d11592 1
a11592 1
return dev_storage + 317;
d11607 1
a11607 1
return dev_storage + 302;
d11622 1
a11622 1
return dev_storage + 287;
d11640 1
a11640 1
return dev_storage + 272;
d11655 1
a11655 1
return dev_storage + 186;
d11676 1
a11676 1
return dev_storage + 257;
d11691 1
a11691 1
return dev_storage + 242;
d11706 1
a11706 1
return dev_storage + 227;
d11724 1
a11724 1
return dev_storage + 744;
d11739 1
a11739 1
return dev_storage + 734;
d11754 1
a11754 1
return dev_storage + 724;
d11784 1
a11784 1
return dev_storage + 601;
d11802 1
a11802 1
return dev_storage + 816;
d11817 1
a11817 1
return dev_storage + 812;
d11832 1
a11832 1
return dev_storage + 802;
d11847 1
a11847 1
return dev_storage + 792;
d11862 1
a11862 1
return dev_storage + 782;
d11877 1
a11877 1
return dev_storage + 772;
d11895 1
a11895 1
return dev_storage + 762;
d11910 1
a11910 1
return dev_storage + 586;
d11937 1
a11937 1
return dev_storage + 571;
d11952 1
a11952 1
return dev_storage + 556;
d11967 1
a11967 1
return dev_storage + 541;
d11982 1
a11982 1
return dev_storage + 526;
d12000 1
a12000 1
return dev_storage + 132;
d12015 1
a12015 1
return dev_storage + 122;
d12030 1
a12030 1
return dev_storage + 112;
d12045 1
a12045 1
return dev_storage + 102;
d12060 1
a12060 1
return dev_storage + 92;
d12075 1
a12075 1
return dev_storage + 82;
d12090 1
a12090 1
return dev_storage + 72;
d12105 1
a12105 1
return dev_storage + 62;
d12123 1
a12123 1
return dev_storage + 511;
d12138 1
a12138 1
return dev_storage + 52;
d12165 1
a12165 1
return dev_storage + 496;
d12180 1
a12180 1
return dev_storage + 481;
d12195 1
a12195 1
return dev_storage + 466;
d12210 1
a12210 1
return dev_storage + 451;
d12225 1
a12225 1
return dev_storage + 436;
d12240 1
a12240 1
return dev_storage + 421;
d12258 1
a12258 1
return dev_storage + 406;
d12294 1
a12294 1
return dev_storage + 391;
d12309 1
a12309 1
return dev_storage + 376;
d12324 1
a12324 1
return dev_storage + 361;
d12339 1
a12339 1
return dev_storage + 346;
d12354 1
a12354 1
return dev_storage + 331;
d12369 1
a12369 1
return dev_storage + 316;
d12384 1
a12384 1
return dev_storage + 301;
d12399 1
a12399 1
return dev_storage + 286;
d12417 1
a12417 1
return dev_storage + 271;
d12432 1
a12432 1
return dev_storage + 185;
d12453 1
a12453 1
return dev_storage + 256;
d12468 1
a12468 1
return dev_storage + 241;
d12483 1
a12483 1
return dev_storage + 226;
d12501 1
a12501 1
return dev_storage + 743;
d12516 1
a12516 1
return dev_storage + 733;
d12531 1
a12531 1
return dev_storage + 723;
d12561 1
a12561 1
return dev_storage + 600;
d12579 1
a12579 1
return dev_storage + 815;
d12594 1
a12594 1
return dev_storage + 811;
d12609 1
a12609 1
return dev_storage + 801;
d12624 1
a12624 1
return dev_storage + 791;
d12639 1
a12639 1
return dev_storage + 781;
d12654 1
a12654 1
return dev_storage + 771;
d12672 1
a12672 1
return dev_storage + 761;
d12687 1
a12687 1
return dev_storage + 585;
d12714 1
a12714 1
return dev_storage + 570;
d12729 1
a12729 1
return dev_storage + 555;
d12744 1
a12744 1
return dev_storage + 540;
d12759 1
a12759 1
return dev_storage + 525;
d12777 1
a12777 1
return dev_storage + 131;
d12792 1
a12792 1
return dev_storage + 121;
d12807 1
a12807 1
return dev_storage + 111;
d12822 1
a12822 1
return dev_storage + 101;
d12837 1
a12837 1
return dev_storage + 91;
d12852 1
a12852 1
return dev_storage + 81;
d12867 1
a12867 1
return dev_storage + 71;
d12882 1
a12882 1
return dev_storage + 61;
d12900 1
a12900 1
return dev_storage + 510;
d12915 1
a12915 1
return dev_storage + 51;
d12942 1
a12942 1
return dev_storage + 495;
d12957 1
a12957 1
return dev_storage + 480;
d12972 1
a12972 1
return dev_storage + 465;
d12987 1
a12987 1
return dev_storage + 450;
d13002 1
a13002 1
return dev_storage + 435;
d13017 1
a13017 1
return dev_storage + 420;
d13035 1
a13035 1
return dev_storage + 405;
d13071 1
a13071 1
return dev_storage + 390;
d13086 1
a13086 1
return dev_storage + 375;
d13101 1
a13101 1
return dev_storage + 360;
d13116 1
a13116 1
return dev_storage + 345;
d13131 1
a13131 1
return dev_storage + 330;
d13146 1
a13146 1
return dev_storage + 315;
d13161 1
a13161 1
return dev_storage + 300;
d13176 1
a13176 1
return dev_storage + 285;
d13194 1
a13194 1
return dev_storage + 270;
d13209 1
a13209 1
return dev_storage + 184;
d13230 1
a13230 1
return dev_storage + 255;
d13245 1
a13245 1
return dev_storage + 240;
d13260 1
a13260 1
return dev_storage + 225;
d13278 1
a13278 1
return dev_storage + 742;
d13293 1
a13293 1
return dev_storage + 732;
d13308 1
a13308 1
return dev_storage + 722;
d13338 1
a13338 1
return dev_storage + 599;
d13356 1
a13356 1
return dev_storage + 814;
d13371 1
a13371 1
return dev_storage + 810;
d13386 1
a13386 1
return dev_storage + 800;
d13401 1
a13401 1
return dev_storage + 790;
d13416 1
a13416 1
return dev_storage + 780;
d13431 1
a13431 1
return dev_storage + 770;
d13449 1
a13449 1
return dev_storage + 760;
d13464 1
a13464 1
return dev_storage + 584;
d13491 1
a13491 1
return dev_storage + 569;
d13506 1
a13506 1
return dev_storage + 554;
d13521 1
a13521 1
return dev_storage + 539;
d13536 1
a13536 1
return dev_storage + 524;
d13554 1
a13554 1
return dev_storage + 130;
d13569 1
a13569 1
return dev_storage + 120;
d13584 1
a13584 1
return dev_storage + 110;
d13599 1
a13599 1
return dev_storage + 100;
d13614 1
a13614 1
return dev_storage + 90;
d13629 1
a13629 1
return dev_storage + 80;
d13644 1
a13644 1
return dev_storage + 70;
d13659 1
a13659 1
return dev_storage + 60;
d13677 1
a13677 1
return dev_storage + 509;
d13692 1
a13692 1
return dev_storage + 50;
d13719 1
a13719 1
return dev_storage + 494;
d13734 1
a13734 1
return dev_storage + 479;
d13749 1
a13749 1
return dev_storage + 464;
d13764 1
a13764 1
return dev_storage + 449;
d13779 1
a13779 1
return dev_storage + 434;
d13794 1
a13794 1
return dev_storage + 419;
d13812 1
a13812 1
return dev_storage + 404;
d13848 1
a13848 1
return dev_storage + 389;
d13863 1
a13863 1
return dev_storage + 374;
d13878 1
a13878 1
return dev_storage + 359;
d13893 1
a13893 1
return dev_storage + 344;
d13908 1
a13908 1
return dev_storage + 329;
d13923 1
a13923 1
return dev_storage + 314;
d13938 1
a13938 1
return dev_storage + 299;
d13953 1
a13953 1
return dev_storage + 284;
d13971 1
a13971 1
return dev_storage + 269;
d13986 1
a13986 1
return dev_storage + 183;
d14007 1
a14007 1
return dev_storage + 254;
d14022 1
a14022 1
return dev_storage + 239;
d14037 1
a14037 1
return dev_storage + 224;
d14055 1
a14055 1
return dev_storage + 741;
d14070 1
a14070 1
return dev_storage + 731;
d14085 1
a14085 1
return dev_storage + 721;
d14136 1
a14136 1
return dev_storage + 172;
d14154 1
a14154 1
return dev_storage + 167;
d14169 1
a14169 1
return dev_storage + 166;
d14184 1
a14184 1
return dev_storage + 165;
d14199 1
a14199 1
return dev_storage + 164;
d14214 1
a14214 1
return dev_storage + 163;
d14229 1
a14229 1
return dev_storage + 162;
d14244 1
a14244 1
return dev_storage + 161;
d14259 1
a14259 1
return dev_storage + 160;
d14283 1
a14283 1
return dev_storage + 159;
d14298 1
a14298 1
return dev_storage + 158;
d14313 1
a14313 1
return dev_storage + 157;
d14328 1
a14328 1
return dev_storage + 156;
d14346 1
a14346 1
return dev_storage + 829;
d14361 1
a14361 1
return dev_storage + 155;
d14385 1
a14385 1
return dev_storage + 828;
d14400 1
a14400 1
return dev_storage + 154;
d14424 1
a14424 1
return dev_storage + 827;
d14439 1
a14439 1
return dev_storage + 153;
d14463 1
a14463 1
return dev_storage + 826;
d14478 1
a14478 1
return dev_storage + 152;
d14502 1
a14502 1
return dev_storage + 825;
d14517 1
a14517 1
return dev_storage + 151;
d14541 1
a14541 1
return dev_storage + 824;
d14556 1
a14556 1
return dev_storage + 150;
d14586 1
a14586 1
return dev_storage + 149;
d14601 1
a14601 1
return dev_storage + 148;
d14616 1
a14616 1
return dev_storage + 147;
d14631 1
a14631 1
return dev_storage + 146;
d14646 1
a14646 1
return dev_storage + 145;
d14661 1
a14661 1
return dev_storage + 144;
d14676 1
a14676 1
return dev_storage + 143;
d14691 1
a14691 1
return dev_storage + 142;
d14706 1
a14706 1
return dev_storage + 141;
d14721 1
a14721 1
return dev_storage + 140;
d14751 1
a14751 1
return dev_storage + 832;
d14766 1
a14766 1
return dev_storage + 831;
@


1.13
log
@* syscalls.cc (truncate64): Don't second-guess errno if open fails.
@
text
@d14853 13
@


1.12
log
@* devices.in: Change raw com device to more correct form.
@
text
@a54 1
  {"/dev/com0", FHDEV(DEV_SERIAL_MAJOR, 0), "\\\\.\\com0"},
d890 4
a893 4
const device *console_dev = dev_storage + 20;
const device *ttym_dev = dev_storage + 831;
const device *ttys_dev = dev_storage + 751;
const device *urandom_dev = dev_storage + 832;
d908 1
a908 1
return dev_storage + 215;
d926 1
a926 1
return dev_storage + 750;
d941 1
a941 1
return dev_storage + 214;
d962 1
a962 1
return dev_storage + 213;
d977 1
a977 1
return dev_storage + 212;
d992 1
a992 1
return dev_storage + 211;
d1007 1
a1007 1
return dev_storage + 210;
d1022 1
a1022 1
return dev_storage + 209;
d1037 1
a1037 1
return dev_storage + 208;
d1052 1
a1052 1
return dev_storage + 207;
d1067 1
a1067 1
return dev_storage + 206;
d1085 1
a1085 1
return dev_storage + 205;
d1100 1
a1100 1
return dev_storage + 21;
d1121 1
a1121 1
return dev_storage + 204;
d1136 1
a1136 1
return dev_storage + 203;
d1154 1
a1154 1
return dev_storage + 202;
d1169 1
a1169 1
return dev_storage + 40;
d1190 1
a1190 1
return dev_storage + 201;
d1205 1
a1205 1
return dev_storage + 200;
d1220 1
a1220 1
return dev_storage + 199;
d1235 1
a1235 1
return dev_storage + 198;
d1250 1
a1250 1
return dev_storage + 197;
d1265 1
a1265 1
return dev_storage + 196;
d1280 1
a1280 1
return dev_storage + 195;
d1295 1
a1295 1
return dev_storage + 194;
d1310 1
a1310 1
return dev_storage + 193;
d1325 1
a1325 1
return dev_storage + 192;
d1340 1
a1340 1
return dev_storage + 191;
d1355 1
a1355 1
return dev_storage + 190;
d1373 1
a1373 1
return dev_storage + 631;
d1388 1
a1388 1
return dev_storage + 615;
d1403 1
a1403 1
return dev_storage + 31;
d1427 1
a1427 1
return dev_storage + 630;
d1442 1
a1442 1
return dev_storage + 614;
d1457 1
a1457 1
return dev_storage + 30;
d1481 1
a1481 1
return dev_storage + 629;
d1496 1
a1496 1
return dev_storage + 613;
d1511 1
a1511 1
return dev_storage + 29;
d1535 1
a1535 1
return dev_storage + 628;
d1550 1
a1550 1
return dev_storage + 612;
d1565 1
a1565 1
return dev_storage + 28;
d1589 1
a1589 1
return dev_storage + 627;
d1604 1
a1604 1
return dev_storage + 611;
d1619 1
a1619 1
return dev_storage + 27;
d1643 1
a1643 1
return dev_storage + 626;
d1658 1
a1658 1
return dev_storage + 610;
d1673 1
a1673 1
return dev_storage + 26;
d1697 1
a1697 1
return dev_storage + 625;
d1712 1
a1712 1
return dev_storage + 609;
d1727 1
a1727 1
return dev_storage + 25;
d1751 1
a1751 1
return dev_storage + 624;
d1766 1
a1766 1
return dev_storage + 608;
d1781 1
a1781 1
return dev_storage + 24;
d1805 1
a1805 1
return dev_storage + 623;
d1820 1
a1820 1
return dev_storage + 607;
d1835 1
a1835 1
return dev_storage + 23;
d1859 1
a1859 1
return dev_storage + 622;
d1874 1
a1874 1
return dev_storage + 606;
d1889 1
a1889 1
return dev_storage + 22;
d1919 1
a1919 1
return dev_storage + 172;
d1934 1
a1934 1
return dev_storage + 171;
d1952 1
a1952 1
return dev_storage + 834;
d1967 1
a1967 1
return dev_storage + 38;
d1991 1
a1991 1
return dev_storage + 831;
d2006 1
a2006 1
return dev_storage + 39;
d2027 1
a2027 1
return dev_storage + 169;
d2042 1
a2042 1
return dev_storage + 170;
d2060 1
a2060 1
return dev_storage + 599;
d2078 1
a2078 1
return dev_storage + 760;
d2093 1
a2093 1
return dev_storage + 584;
d2114 1
a2114 1
return dev_storage + 569;
d2129 1
a2129 1
return dev_storage + 554;
d2144 1
a2144 1
return dev_storage + 539;
d2159 1
a2159 1
return dev_storage + 524;
d2177 1
a2177 1
return dev_storage + 509;
d2192 1
a2192 1
return dev_storage + 50;
d2213 1
a2213 1
return dev_storage + 494;
d2228 1
a2228 1
return dev_storage + 479;
d2243 1
a2243 1
return dev_storage + 464;
d2258 1
a2258 1
return dev_storage + 449;
d2273 1
a2273 1
return dev_storage + 434;
d2288 1
a2288 1
return dev_storage + 419;
d2306 1
a2306 1
return dev_storage + 404;
d2321 1
a2321 1
return dev_storage + 10;
d2342 1
a2342 1
return dev_storage + 389;
d2357 1
a2357 1
return dev_storage + 374;
d2372 1
a2372 1
return dev_storage + 359;
d2387 1
a2387 1
return dev_storage + 344;
d2402 1
a2402 1
return dev_storage + 329;
d2417 1
a2417 1
return dev_storage + 314;
d2432 1
a2432 1
return dev_storage + 299;
d2447 1
a2447 1
return dev_storage + 284;
d2465 1
a2465 1
return dev_storage + 269;
d2480 1
a2480 1
return dev_storage + 183;
d2501 1
a2501 1
return dev_storage + 254;
d2516 1
a2516 1
return dev_storage + 239;
d2531 1
a2531 1
return dev_storage + 224;
d2546 1
a2546 1
return dev_storage + 721;
d2561 1
a2561 1
return dev_storage + 711;
d2576 1
a2576 1
return dev_storage + 701;
d2591 1
a2591 1
return dev_storage + 691;
d2606 1
a2606 1
return dev_storage + 681;
d2621 1
a2621 1
return dev_storage + 671;
d2636 1
a2636 1
return dev_storage + 661;
d2651 1
a2651 1
return dev_storage + 651;
d2666 1
a2666 1
return dev_storage + 641;
d2690 1
a2690 1
return dev_storage + 598;
d2708 1
a2708 1
return dev_storage + 759;
d2723 1
a2723 1
return dev_storage + 583;
d2744 1
a2744 1
return dev_storage + 568;
d2759 1
a2759 1
return dev_storage + 553;
d2774 1
a2774 1
return dev_storage + 538;
d2789 1
a2789 1
return dev_storage + 523;
d2807 1
a2807 1
return dev_storage + 508;
d2822 1
a2822 1
return dev_storage + 49;
d2843 1
a2843 1
return dev_storage + 493;
d2858 1
a2858 1
return dev_storage + 478;
d2873 1
a2873 1
return dev_storage + 463;
d2888 1
a2888 1
return dev_storage + 448;
d2903 1
a2903 1
return dev_storage + 433;
d2918 1
a2918 1
return dev_storage + 418;
d2936 1
a2936 1
return dev_storage + 403;
d2951 1
a2951 1
return dev_storage + 9;
d2972 1
a2972 1
return dev_storage + 388;
d2987 1
a2987 1
return dev_storage + 373;
d3002 1
a3002 1
return dev_storage + 358;
d3017 1
a3017 1
return dev_storage + 343;
d3032 1
a3032 1
return dev_storage + 328;
d3047 1
a3047 1
return dev_storage + 313;
d3062 1
a3062 1
return dev_storage + 298;
d3077 1
a3077 1
return dev_storage + 283;
d3095 1
a3095 1
return dev_storage + 268;
d3110 1
a3110 1
return dev_storage + 182;
d3131 1
a3131 1
return dev_storage + 253;
d3146 1
a3146 1
return dev_storage + 238;
d3161 1
a3161 1
return dev_storage + 223;
d3176 1
a3176 1
return dev_storage + 720;
d3191 1
a3191 1
return dev_storage + 710;
d3206 1
a3206 1
return dev_storage + 700;
d3221 1
a3221 1
return dev_storage + 690;
d3236 1
a3236 1
return dev_storage + 680;
d3251 1
a3251 1
return dev_storage + 670;
d3266 1
a3266 1
return dev_storage + 660;
d3281 1
a3281 1
return dev_storage + 650;
d3296 1
a3296 1
return dev_storage + 640;
d3320 1
a3320 1
return dev_storage + 597;
d3338 1
a3338 1
return dev_storage + 758;
d3353 1
a3353 1
return dev_storage + 582;
d3374 1
a3374 1
return dev_storage + 567;
d3389 1
a3389 1
return dev_storage + 552;
d3404 1
a3404 1
return dev_storage + 537;
d3419 1
a3419 1
return dev_storage + 522;
d3437 1
a3437 1
return dev_storage + 507;
d3452 1
a3452 1
return dev_storage + 48;
d3473 1
a3473 1
return dev_storage + 492;
d3488 1
a3488 1
return dev_storage + 477;
d3503 1
a3503 1
return dev_storage + 462;
d3518 1
a3518 1
return dev_storage + 447;
d3533 1
a3533 1
return dev_storage + 432;
d3548 1
a3548 1
return dev_storage + 417;
d3566 1
a3566 1
return dev_storage + 402;
d3581 1
a3581 1
return dev_storage + 8;
d3602 1
a3602 1
return dev_storage + 387;
d3617 1
a3617 1
return dev_storage + 372;
d3632 1
a3632 1
return dev_storage + 357;
d3647 1
a3647 1
return dev_storage + 342;
d3662 1
a3662 1
return dev_storage + 327;
d3677 1
a3677 1
return dev_storage + 312;
d3692 1
a3692 1
return dev_storage + 297;
d3707 1
a3707 1
return dev_storage + 282;
d3725 1
a3725 1
return dev_storage + 267;
d3740 1
a3740 1
return dev_storage + 181;
d3761 1
a3761 1
return dev_storage + 252;
d3776 1
a3776 1
return dev_storage + 237;
d3791 1
a3791 1
return dev_storage + 222;
d3806 1
a3806 1
return dev_storage + 719;
d3821 1
a3821 1
return dev_storage + 709;
d3836 1
a3836 1
return dev_storage + 699;
d3851 1
a3851 1
return dev_storage + 689;
d3866 1
a3866 1
return dev_storage + 679;
d3881 1
a3881 1
return dev_storage + 669;
d3896 1
a3896 1
return dev_storage + 659;
d3911 1
a3911 1
return dev_storage + 649;
d3926 1
a3926 1
return dev_storage + 639;
d3950 1
a3950 1
return dev_storage + 596;
d3968 1
a3968 1
return dev_storage + 757;
d3983 1
a3983 1
return dev_storage + 581;
d4004 1
a4004 1
return dev_storage + 566;
d4019 1
a4019 1
return dev_storage + 551;
d4034 1
a4034 1
return dev_storage + 536;
d4049 1
a4049 1
return dev_storage + 521;
d4067 1
a4067 1
return dev_storage + 506;
d4082 1
a4082 1
return dev_storage + 47;
d4103 1
a4103 1
return dev_storage + 491;
d4118 1
a4118 1
return dev_storage + 476;
d4133 1
a4133 1
return dev_storage + 461;
d4148 1
a4148 1
return dev_storage + 446;
d4163 1
a4163 1
return dev_storage + 431;
d4178 1
a4178 1
return dev_storage + 416;
d4196 1
a4196 1
return dev_storage + 401;
d4211 1
a4211 1
return dev_storage + 7;
d4232 1
a4232 1
return dev_storage + 386;
d4247 1
a4247 1
return dev_storage + 371;
d4262 1
a4262 1
return dev_storage + 356;
d4277 1
a4277 1
return dev_storage + 341;
d4292 1
a4292 1
return dev_storage + 326;
d4307 1
a4307 1
return dev_storage + 311;
d4322 1
a4322 1
return dev_storage + 296;
d4337 1
a4337 1
return dev_storage + 281;
d4355 1
a4355 1
return dev_storage + 266;
d4370 1
a4370 1
return dev_storage + 180;
d4391 1
a4391 1
return dev_storage + 251;
d4406 1
a4406 1
return dev_storage + 236;
d4421 1
a4421 1
return dev_storage + 221;
d4436 1
a4436 1
return dev_storage + 718;
d4451 1
a4451 1
return dev_storage + 708;
d4466 1
a4466 1
return dev_storage + 698;
d4481 1
a4481 1
return dev_storage + 688;
d4496 1
a4496 1
return dev_storage + 678;
d4511 1
a4511 1
return dev_storage + 668;
d4526 1
a4526 1
return dev_storage + 658;
d4541 1
a4541 1
return dev_storage + 648;
d4556 1
a4556 1
return dev_storage + 638;
d4580 1
a4580 1
return dev_storage + 595;
d4598 1
a4598 1
return dev_storage + 756;
d4613 1
a4613 1
return dev_storage + 580;
d4634 1
a4634 1
return dev_storage + 565;
d4649 1
a4649 1
return dev_storage + 550;
d4664 1
a4664 1
return dev_storage + 535;
d4679 1
a4679 1
return dev_storage + 520;
d4697 1
a4697 1
return dev_storage + 505;
d4712 1
a4712 1
return dev_storage + 46;
d4733 1
a4733 1
return dev_storage + 490;
d4748 1
a4748 1
return dev_storage + 475;
d4763 1
a4763 1
return dev_storage + 460;
d4778 1
a4778 1
return dev_storage + 445;
d4793 1
a4793 1
return dev_storage + 430;
d4808 1
a4808 1
return dev_storage + 415;
d4826 1
a4826 1
return dev_storage + 400;
d4841 1
a4841 1
return dev_storage + 6;
d4862 1
a4862 1
return dev_storage + 385;
d4877 1
a4877 1
return dev_storage + 370;
d4892 1
a4892 1
return dev_storage + 355;
d4907 1
a4907 1
return dev_storage + 340;
d4922 1
a4922 1
return dev_storage + 325;
d4937 1
a4937 1
return dev_storage + 310;
d4952 1
a4952 1
return dev_storage + 295;
d4967 1
a4967 1
return dev_storage + 280;
d4985 1
a4985 1
return dev_storage + 265;
d5000 1
a5000 1
return dev_storage + 179;
d5021 1
a5021 1
return dev_storage + 250;
d5036 1
a5036 1
return dev_storage + 235;
d5051 1
a5051 1
return dev_storage + 220;
d5066 1
a5066 1
return dev_storage + 717;
d5081 1
a5081 1
return dev_storage + 707;
d5096 1
a5096 1
return dev_storage + 697;
d5111 1
a5111 1
return dev_storage + 687;
d5126 1
a5126 1
return dev_storage + 677;
d5141 1
a5141 1
return dev_storage + 667;
d5156 1
a5156 1
return dev_storage + 657;
d5171 1
a5171 1
return dev_storage + 647;
d5189 1
a5189 1
return dev_storage + 637;
d5204 1
a5204 1
return dev_storage + 621;
d5219 1
a5219 1
return dev_storage + 37;
d5249 1
a5249 1
return dev_storage + 594;
d5267 1
a5267 1
return dev_storage + 755;
d5282 1
a5282 1
return dev_storage + 579;
d5303 1
a5303 1
return dev_storage + 564;
d5318 1
a5318 1
return dev_storage + 549;
d5333 1
a5333 1
return dev_storage + 534;
d5348 1
a5348 1
return dev_storage + 519;
d5366 1
a5366 1
return dev_storage + 504;
d5381 1
a5381 1
return dev_storage + 45;
d5402 1
a5402 1
return dev_storage + 489;
d5417 1
a5417 1
return dev_storage + 474;
d5432 1
a5432 1
return dev_storage + 459;
d5447 1
a5447 1
return dev_storage + 444;
d5462 1
a5462 1
return dev_storage + 429;
d5477 1
a5477 1
return dev_storage + 414;
d5495 1
a5495 1
return dev_storage + 399;
d5510 1
a5510 1
return dev_storage + 5;
d5531 1
a5531 1
return dev_storage + 384;
d5546 1
a5546 1
return dev_storage + 369;
d5561 1
a5561 1
return dev_storage + 354;
d5576 1
a5576 1
return dev_storage + 339;
d5591 1
a5591 1
return dev_storage + 324;
d5606 1
a5606 1
return dev_storage + 309;
d5621 1
a5621 1
return dev_storage + 294;
d5636 1
a5636 1
return dev_storage + 279;
d5654 1
a5654 1
return dev_storage + 264;
d5669 1
a5669 1
return dev_storage + 178;
d5690 1
a5690 1
return dev_storage + 249;
d5705 1
a5705 1
return dev_storage + 234;
d5720 1
a5720 1
return dev_storage + 219;
d5735 1
a5735 1
return dev_storage + 716;
d5750 1
a5750 1
return dev_storage + 706;
d5765 1
a5765 1
return dev_storage + 696;
d5780 1
a5780 1
return dev_storage + 686;
d5795 1
a5795 1
return dev_storage + 676;
d5810 1
a5810 1
return dev_storage + 666;
d5825 1
a5825 1
return dev_storage + 656;
d5840 1
a5840 1
return dev_storage + 646;
d5858 1
a5858 1
return dev_storage + 636;
d5873 1
a5873 1
return dev_storage + 620;
d5888 1
a5888 1
return dev_storage + 36;
d5918 1
a5918 1
return dev_storage + 593;
d5936 1
a5936 1
return dev_storage + 754;
d5951 1
a5951 1
return dev_storage + 578;
d5972 1
a5972 1
return dev_storage + 563;
d5987 1
a5987 1
return dev_storage + 548;
d6002 1
a6002 1
return dev_storage + 533;
d6017 1
a6017 1
return dev_storage + 518;
d6035 1
a6035 1
return dev_storage + 503;
d6050 1
a6050 1
return dev_storage + 44;
d6071 1
a6071 1
return dev_storage + 488;
d6086 1
a6086 1
return dev_storage + 473;
d6101 1
a6101 1
return dev_storage + 458;
d6116 1
a6116 1
return dev_storage + 443;
d6131 1
a6131 1
return dev_storage + 428;
d6146 1
a6146 1
return dev_storage + 413;
d6164 1
a6164 1
return dev_storage + 398;
d6179 1
a6179 1
return dev_storage + 4;
d6200 1
a6200 1
return dev_storage + 383;
d6215 1
a6215 1
return dev_storage + 368;
d6230 1
a6230 1
return dev_storage + 353;
d6245 1
a6245 1
return dev_storage + 338;
d6260 1
a6260 1
return dev_storage + 323;
d6275 1
a6275 1
return dev_storage + 308;
d6290 1
a6290 1
return dev_storage + 293;
d6305 1
a6305 1
return dev_storage + 278;
d6323 1
a6323 1
return dev_storage + 263;
d6338 1
a6338 1
return dev_storage + 177;
d6359 1
a6359 1
return dev_storage + 248;
d6374 1
a6374 1
return dev_storage + 233;
d6389 1
a6389 1
return dev_storage + 218;
d6404 1
a6404 1
return dev_storage + 715;
d6419 1
a6419 1
return dev_storage + 705;
d6434 1
a6434 1
return dev_storage + 695;
d6449 1
a6449 1
return dev_storage + 685;
d6464 1
a6464 1
return dev_storage + 675;
d6479 1
a6479 1
return dev_storage + 665;
d6494 1
a6494 1
return dev_storage + 655;
d6509 1
a6509 1
return dev_storage + 645;
d6527 1
a6527 1
return dev_storage + 635;
d6542 1
a6542 1
return dev_storage + 619;
d6557 1
a6557 1
return dev_storage + 35;
d6587 1
a6587 1
return dev_storage + 592;
d6605 1
a6605 1
return dev_storage + 753;
d6620 1
a6620 1
return dev_storage + 577;
d6641 1
a6641 1
return dev_storage + 562;
d6656 1
a6656 1
return dev_storage + 547;
d6671 1
a6671 1
return dev_storage + 532;
d6686 1
a6686 1
return dev_storage + 517;
d6704 1
a6704 1
return dev_storage + 502;
d6719 1
a6719 1
return dev_storage + 43;
d6740 1
a6740 1
return dev_storage + 487;
d6755 1
a6755 1
return dev_storage + 472;
d6770 1
a6770 1
return dev_storage + 457;
d6785 1
a6785 1
return dev_storage + 442;
d6800 1
a6800 1
return dev_storage + 427;
d6815 1
a6815 1
return dev_storage + 412;
d6833 1
a6833 1
return dev_storage + 397;
d6848 1
a6848 1
return dev_storage + 3;
d6869 1
a6869 1
return dev_storage + 382;
d6884 1
a6884 1
return dev_storage + 367;
d6899 1
a6899 1
return dev_storage + 352;
d6914 1
a6914 1
return dev_storage + 337;
d6929 1
a6929 1
return dev_storage + 322;
d6944 1
a6944 1
return dev_storage + 307;
d6959 1
a6959 1
return dev_storage + 292;
d6974 1
a6974 1
return dev_storage + 277;
d6992 1
a6992 1
return dev_storage + 262;
d7007 1
a7007 1
return dev_storage + 176;
d7028 1
a7028 1
return dev_storage + 247;
d7043 1
a7043 1
return dev_storage + 232;
d7058 1
a7058 1
return dev_storage + 217;
d7073 1
a7073 1
return dev_storage + 714;
d7088 1
a7088 1
return dev_storage + 704;
d7103 1
a7103 1
return dev_storage + 694;
d7118 1
a7118 1
return dev_storage + 684;
d7133 1
a7133 1
return dev_storage + 674;
d7148 1
a7148 1
return dev_storage + 664;
d7163 1
a7163 1
return dev_storage + 654;
d7178 1
a7178 1
return dev_storage + 644;
d7196 1
a7196 1
return dev_storage + 634;
d7211 1
a7211 1
return dev_storage + 618;
d7226 1
a7226 1
return dev_storage + 34;
d7256 1
a7256 1
return dev_storage + 591;
d7274 1
a7274 1
return dev_storage + 752;
d7289 1
a7289 1
return dev_storage + 576;
d7310 1
a7310 1
return dev_storage + 561;
d7325 1
a7325 1
return dev_storage + 546;
d7340 1
a7340 1
return dev_storage + 531;
d7355 1
a7355 1
return dev_storage + 516;
d7373 1
a7373 1
return dev_storage + 501;
d7388 1
a7388 1
return dev_storage + 42;
d7409 1
a7409 1
return dev_storage + 486;
d7424 1
a7424 1
return dev_storage + 471;
d7439 1
a7439 1
return dev_storage + 456;
d7454 1
a7454 1
return dev_storage + 441;
d7469 1
a7469 1
return dev_storage + 426;
d7484 1
a7484 1
return dev_storage + 411;
d7502 1
a7502 1
return dev_storage + 396;
d7517 1
a7517 1
return dev_storage + 2;
d7538 1
a7538 1
return dev_storage + 381;
d7553 1
a7553 1
return dev_storage + 366;
d7568 1
a7568 1
return dev_storage + 351;
d7583 1
a7583 1
return dev_storage + 336;
d7598 1
a7598 1
return dev_storage + 321;
d7613 1
a7613 1
return dev_storage + 306;
d7628 1
a7628 1
return dev_storage + 291;
d7643 1
a7643 1
return dev_storage + 276;
d7661 1
a7661 1
return dev_storage + 261;
d7676 1
a7676 1
return dev_storage + 175;
d7697 1
a7697 1
return dev_storage + 246;
d7712 1
a7712 1
return dev_storage + 231;
d7727 1
a7727 1
return dev_storage + 216;
d7742 1
a7742 1
return dev_storage + 713;
d7757 1
a7757 1
return dev_storage + 703;
d7772 1
a7772 1
return dev_storage + 693;
d7787 1
a7787 1
return dev_storage + 683;
d7802 1
a7802 1
return dev_storage + 673;
d7817 1
a7817 1
return dev_storage + 663;
d7832 1
a7832 1
return dev_storage + 653;
d7847 1
a7847 1
return dev_storage + 643;
d7865 1
a7865 1
return dev_storage + 633;
d7880 1
a7880 1
return dev_storage + 617;
d7895 1
a7895 1
return dev_storage + 33;
d7925 1
a7925 1
return dev_storage + 751;
d7940 1
a7940 16
return dev_storage + 41;

}
                }
              else
                {
{
return	NULL;

}
                }
            case 'm':
              if (strncmp (KR_keyword, "/dev/com0", 9) == 0)
                {
{
return dev_storage + 1;
d7955 1
a7955 1
return dev_storage + 174;
d7970 1
a7970 1
return dev_storage + 712;
d7985 1
a7985 1
return dev_storage + 702;
d8000 1
a8000 1
return dev_storage + 692;
d8015 1
a8015 1
return dev_storage + 682;
d8030 1
a8030 1
return dev_storage + 672;
d8045 1
a8045 1
return dev_storage + 662;
d8060 1
a8060 1
return dev_storage + 652;
d8075 1
a8075 1
return dev_storage + 642;
d8093 1
a8093 1
return dev_storage + 632;
d8108 1
a8108 1
return dev_storage + 616;
d8123 1
a8123 1
return dev_storage + 32;
d8159 1
a8159 1
return dev_storage + 18;
d8177 1
a8177 1
return dev_storage + 824;
d8192 1
a8192 1
return dev_storage + 140;
d8207 1
a8207 1
return dev_storage + 130;
d8222 1
a8222 1
return dev_storage + 120;
d8237 1
a8237 1
return dev_storage + 110;
d8255 1
a8255 1
return dev_storage + 810;
d8270 1
a8270 1
return dev_storage + 100;
d8294 1
a8294 1
return dev_storage + 800;
d8309 1
a8309 1
return dev_storage + 90;
d8333 1
a8333 1
return dev_storage + 790;
d8348 1
a8348 1
return dev_storage + 80;
d8372 1
a8372 1
return dev_storage + 780;
d8387 1
a8387 1
return dev_storage + 70;
d8411 1
a8411 1
return dev_storage + 770;
d8426 1
a8426 1
return dev_storage + 741;
d8441 1
a8441 1
return dev_storage + 60;
d8462 1
a8462 1
return dev_storage + 731;
d8486 1
a8486 1
return dev_storage + 823;
d8501 1
a8501 1
return dev_storage + 139;
d8516 1
a8516 1
return dev_storage + 129;
d8531 1
a8531 1
return dev_storage + 119;
d8546 1
a8546 1
return dev_storage + 109;
d8564 1
a8564 1
return dev_storage + 809;
d8579 1
a8579 1
return dev_storage + 99;
d8603 1
a8603 1
return dev_storage + 799;
d8618 1
a8618 1
return dev_storage + 89;
d8642 1
a8642 1
return dev_storage + 789;
d8657 1
a8657 1
return dev_storage + 79;
d8681 1
a8681 1
return dev_storage + 779;
d8696 1
a8696 1
return dev_storage + 69;
d8720 1
a8720 1
return dev_storage + 769;
d8735 1
a8735 1
return dev_storage + 740;
d8750 1
a8750 1
return dev_storage + 59;
d8771 1
a8771 1
return dev_storage + 730;
d8795 1
a8795 1
return dev_storage + 822;
d8810 1
a8810 1
return dev_storage + 138;
d8825 1
a8825 1
return dev_storage + 128;
d8840 1
a8840 1
return dev_storage + 118;
d8855 1
a8855 1
return dev_storage + 108;
d8873 1
a8873 1
return dev_storage + 808;
d8888 1
a8888 1
return dev_storage + 98;
d8912 1
a8912 1
return dev_storage + 798;
d8927 1
a8927 1
return dev_storage + 88;
d8951 1
a8951 1
return dev_storage + 788;
d8966 1
a8966 1
return dev_storage + 78;
d8990 1
a8990 1
return dev_storage + 778;
d9005 1
a9005 1
return dev_storage + 749;
d9020 1
a9020 1
return dev_storage + 68;
d9044 1
a9044 1
return dev_storage + 768;
d9059 1
a9059 1
return dev_storage + 739;
d9074 1
a9074 1
return dev_storage + 58;
d9095 1
a9095 1
return dev_storage + 729;
d9119 1
a9119 1
return dev_storage + 821;
d9134 1
a9134 1
return dev_storage + 137;
d9149 1
a9149 1
return dev_storage + 127;
d9164 1
a9164 1
return dev_storage + 117;
d9179 1
a9179 1
return dev_storage + 107;
d9197 1
a9197 1
return dev_storage + 807;
d9212 1
a9212 1
return dev_storage + 97;
d9236 1
a9236 1
return dev_storage + 797;
d9251 1
a9251 1
return dev_storage + 87;
d9275 1
a9275 1
return dev_storage + 787;
d9290 1
a9290 1
return dev_storage + 77;
d9314 1
a9314 1
return dev_storage + 777;
d9329 1
a9329 1
return dev_storage + 748;
d9344 1
a9344 1
return dev_storage + 67;
d9368 1
a9368 1
return dev_storage + 767;
d9383 1
a9383 1
return dev_storage + 738;
d9398 1
a9398 1
return dev_storage + 57;
d9413 1
a9413 1
return dev_storage + 17;
d9434 1
a9434 1
return dev_storage + 728;
d9458 1
a9458 1
return dev_storage + 605;
d9476 1
a9476 1
return dev_storage + 820;
d9491 1
a9491 1
return dev_storage + 806;
d9506 1
a9506 1
return dev_storage + 796;
d9521 1
a9521 1
return dev_storage + 786;
d9536 1
a9536 1
return dev_storage + 776;
d9554 1
a9554 1
return dev_storage + 766;
d9569 1
a9569 1
return dev_storage + 590;
d9596 1
a9596 1
return dev_storage + 575;
d9611 1
a9611 1
return dev_storage + 560;
d9626 1
a9626 1
return dev_storage + 545;
d9641 1
a9641 1
return dev_storage + 530;
d9659 1
a9659 1
return dev_storage + 136;
d9674 1
a9674 1
return dev_storage + 126;
d9689 1
a9689 1
return dev_storage + 116;
d9704 1
a9704 1
return dev_storage + 106;
d9719 1
a9719 1
return dev_storage + 96;
d9734 1
a9734 1
return dev_storage + 86;
d9749 1
a9749 1
return dev_storage + 76;
d9764 1
a9764 1
return dev_storage + 66;
d9782 1
a9782 1
return dev_storage + 515;
d9797 1
a9797 1
return dev_storage + 56;
d9824 1
a9824 1
return dev_storage + 500;
d9839 1
a9839 1
return dev_storage + 485;
d9854 1
a9854 1
return dev_storage + 470;
d9869 1
a9869 1
return dev_storage + 455;
d9884 1
a9884 1
return dev_storage + 440;
d9899 1
a9899 1
return dev_storage + 425;
d9917 1
a9917 1
return dev_storage + 410;
d9932 1
a9932 1
return dev_storage + 16;
d9953 1
a9953 1
return dev_storage + 395;
d9968 1
a9968 1
return dev_storage + 380;
d9983 1
a9983 1
return dev_storage + 365;
d9998 1
a9998 1
return dev_storage + 350;
d10013 1
a10013 1
return dev_storage + 335;
d10028 1
a10028 1
return dev_storage + 320;
d10043 1
a10043 1
return dev_storage + 305;
d10058 1
a10058 1
return dev_storage + 290;
d10076 1
a10076 1
return dev_storage + 275;
d10091 1
a10091 1
return dev_storage + 189;
d10112 1
a10112 1
return dev_storage + 260;
d10127 1
a10127 1
return dev_storage + 245;
d10142 1
a10142 1
return dev_storage + 230;
d10160 1
a10160 1
return dev_storage + 747;
d10175 1
a10175 1
return dev_storage + 737;
d10190 1
a10190 1
return dev_storage + 727;
d10220 1
a10220 1
return dev_storage + 604;
d10238 1
a10238 1
return dev_storage + 819;
d10253 1
a10253 1
return dev_storage + 805;
d10268 1
a10268 1
return dev_storage + 795;
d10283 1
a10283 1
return dev_storage + 785;
d10298 1
a10298 1
return dev_storage + 775;
d10316 1
a10316 1
return dev_storage + 765;
d10331 1
a10331 1
return dev_storage + 589;
d10358 1
a10358 1
return dev_storage + 574;
d10373 1
a10373 1
return dev_storage + 559;
d10388 1
a10388 1
return dev_storage + 544;
d10403 1
a10403 1
return dev_storage + 529;
d10421 1
a10421 1
return dev_storage + 135;
d10436 1
a10436 1
return dev_storage + 125;
d10451 1
a10451 1
return dev_storage + 115;
d10466 1
a10466 1
return dev_storage + 105;
d10481 1
a10481 1
return dev_storage + 95;
d10496 1
a10496 1
return dev_storage + 85;
d10511 1
a10511 1
return dev_storage + 75;
d10526 1
a10526 1
return dev_storage + 65;
d10544 1
a10544 1
return dev_storage + 514;
d10559 1
a10559 1
return dev_storage + 55;
d10586 1
a10586 1
return dev_storage + 499;
d10601 1
a10601 1
return dev_storage + 484;
d10616 1
a10616 1
return dev_storage + 469;
d10631 1
a10631 1
return dev_storage + 454;
d10646 1
a10646 1
return dev_storage + 439;
d10661 1
a10661 1
return dev_storage + 424;
d10679 1
a10679 1
return dev_storage + 409;
d10694 1
a10694 1
return dev_storage + 15;
d10715 1
a10715 1
return dev_storage + 394;
d10730 1
a10730 1
return dev_storage + 379;
d10745 1
a10745 1
return dev_storage + 364;
d10760 1
a10760 1
return dev_storage + 349;
d10775 1
a10775 1
return dev_storage + 334;
d10790 1
a10790 1
return dev_storage + 319;
d10805 1
a10805 1
return dev_storage + 304;
d10820 1
a10820 1
return dev_storage + 289;
d10838 1
a10838 1
return dev_storage + 274;
d10853 1
a10853 1
return dev_storage + 188;
d10874 1
a10874 1
return dev_storage + 259;
d10889 1
a10889 1
return dev_storage + 244;
d10904 1
a10904 1
return dev_storage + 229;
d10922 1
a10922 1
return dev_storage + 746;
d10937 1
a10937 1
return dev_storage + 736;
d10952 1
a10952 1
return dev_storage + 726;
d10982 1
a10982 1
return dev_storage + 603;
d11000 1
a11000 1
return dev_storage + 818;
d11015 1
a11015 1
return dev_storage + 814;
d11030 1
a11030 1
return dev_storage + 804;
d11045 1
a11045 1
return dev_storage + 794;
d11060 1
a11060 1
return dev_storage + 784;
d11075 1
a11075 1
return dev_storage + 774;
d11093 1
a11093 1
return dev_storage + 764;
d11108 1
a11108 1
return dev_storage + 588;
d11135 1
a11135 1
return dev_storage + 573;
d11150 1
a11150 1
return dev_storage + 558;
d11165 1
a11165 1
return dev_storage + 543;
d11180 1
a11180 1
return dev_storage + 528;
d11198 1
a11198 1
return dev_storage + 134;
d11213 1
a11213 1
return dev_storage + 124;
d11228 1
a11228 1
return dev_storage + 114;
d11243 1
a11243 1
return dev_storage + 104;
d11258 1
a11258 1
return dev_storage + 94;
d11273 1
a11273 1
return dev_storage + 84;
d11288 1
a11288 1
return dev_storage + 74;
d11303 1
a11303 1
return dev_storage + 64;
d11321 1
a11321 1
return dev_storage + 513;
d11336 1
a11336 1
return dev_storage + 54;
d11363 1
a11363 1
return dev_storage + 498;
d11378 1
a11378 1
return dev_storage + 483;
d11393 1
a11393 1
return dev_storage + 468;
d11408 1
a11408 1
return dev_storage + 453;
d11423 1
a11423 1
return dev_storage + 438;
d11438 1
a11438 1
return dev_storage + 423;
d11456 1
a11456 1
return dev_storage + 408;
d11471 1
a11471 1
return dev_storage + 14;
d11492 1
a11492 1
return dev_storage + 393;
d11507 1
a11507 1
return dev_storage + 378;
d11522 1
a11522 1
return dev_storage + 363;
d11537 1
a11537 1
return dev_storage + 348;
d11552 1
a11552 1
return dev_storage + 333;
d11567 1
a11567 1
return dev_storage + 318;
d11582 1
a11582 1
return dev_storage + 303;
d11597 1
a11597 1
return dev_storage + 288;
d11615 1
a11615 1
return dev_storage + 273;
d11630 1
a11630 1
return dev_storage + 187;
d11651 1
a11651 1
return dev_storage + 258;
d11666 1
a11666 1
return dev_storage + 243;
d11681 1
a11681 1
return dev_storage + 228;
d11699 1
a11699 1
return dev_storage + 745;
d11714 1
a11714 1
return dev_storage + 735;
d11729 1
a11729 1
return dev_storage + 725;
d11759 1
a11759 1
return dev_storage + 602;
d11777 1
a11777 1
return dev_storage + 817;
d11792 1
a11792 1
return dev_storage + 813;
d11807 1
a11807 1
return dev_storage + 803;
d11822 1
a11822 1
return dev_storage + 793;
d11837 1
a11837 1
return dev_storage + 783;
d11852 1
a11852 1
return dev_storage + 773;
d11870 1
a11870 1
return dev_storage + 763;
d11885 1
a11885 1
return dev_storage + 587;
d11912 1
a11912 1
return dev_storage + 572;
d11927 1
a11927 1
return dev_storage + 557;
d11942 1
a11942 1
return dev_storage + 542;
d11957 1
a11957 1
return dev_storage + 527;
d11975 1
a11975 1
return dev_storage + 133;
d11990 1
a11990 1
return dev_storage + 123;
d12005 1
a12005 1
return dev_storage + 113;
d12020 1
a12020 1
return dev_storage + 103;
d12035 1
a12035 1
return dev_storage + 93;
d12050 1
a12050 1
return dev_storage + 83;
d12065 1
a12065 1
return dev_storage + 73;
d12080 1
a12080 1
return dev_storage + 63;
d12098 1
a12098 1
return dev_storage + 512;
d12113 1
a12113 1
return dev_storage + 53;
d12140 1
a12140 1
return dev_storage + 497;
d12155 1
a12155 1
return dev_storage + 482;
d12170 1
a12170 1
return dev_storage + 467;
d12185 1
a12185 1
return dev_storage + 452;
d12200 1
a12200 1
return dev_storage + 437;
d12215 1
a12215 1
return dev_storage + 422;
d12233 1
a12233 1
return dev_storage + 407;
d12248 1
a12248 1
return dev_storage + 13;
d12269 1
a12269 1
return dev_storage + 392;
d12284 1
a12284 1
return dev_storage + 377;
d12299 1
a12299 1
return dev_storage + 362;
d12314 1
a12314 1
return dev_storage + 347;
d12329 1
a12329 1
return dev_storage + 332;
d12344 1
a12344 1
return dev_storage + 317;
d12359 1
a12359 1
return dev_storage + 302;
d12374 1
a12374 1
return dev_storage + 287;
d12392 1
a12392 1
return dev_storage + 272;
d12407 1
a12407 1
return dev_storage + 186;
d12428 1
a12428 1
return dev_storage + 257;
d12443 1
a12443 1
return dev_storage + 242;
d12458 1
a12458 1
return dev_storage + 227;
d12476 1
a12476 1
return dev_storage + 744;
d12491 1
a12491 1
return dev_storage + 734;
d12506 1
a12506 1
return dev_storage + 724;
d12536 1
a12536 1
return dev_storage + 601;
d12554 1
a12554 1
return dev_storage + 816;
d12569 1
a12569 1
return dev_storage + 812;
d12584 1
a12584 1
return dev_storage + 802;
d12599 1
a12599 1
return dev_storage + 792;
d12614 1
a12614 1
return dev_storage + 782;
d12629 1
a12629 1
return dev_storage + 772;
d12647 1
a12647 1
return dev_storage + 762;
d12662 1
a12662 1
return dev_storage + 586;
d12689 1
a12689 1
return dev_storage + 571;
d12704 1
a12704 1
return dev_storage + 556;
d12719 1
a12719 1
return dev_storage + 541;
d12734 1
a12734 1
return dev_storage + 526;
d12752 1
a12752 1
return dev_storage + 132;
d12767 1
a12767 1
return dev_storage + 122;
d12782 1
a12782 1
return dev_storage + 112;
d12797 1
a12797 1
return dev_storage + 102;
d12812 1
a12812 1
return dev_storage + 92;
d12827 1
a12827 1
return dev_storage + 82;
d12842 1
a12842 1
return dev_storage + 72;
d12857 1
a12857 1
return dev_storage + 62;
d12875 1
a12875 1
return dev_storage + 511;
d12890 1
a12890 1
return dev_storage + 52;
d12917 1
a12917 1
return dev_storage + 496;
d12932 1
a12932 1
return dev_storage + 481;
d12947 1
a12947 1
return dev_storage + 466;
d12962 1
a12962 1
return dev_storage + 451;
d12977 1
a12977 1
return dev_storage + 436;
d12992 1
a12992 1
return dev_storage + 421;
d13010 1
a13010 1
return dev_storage + 406;
d13025 1
a13025 1
return dev_storage + 12;
d13046 1
a13046 1
return dev_storage + 391;
d13061 1
a13061 1
return dev_storage + 376;
d13076 1
a13076 1
return dev_storage + 361;
d13091 1
a13091 1
return dev_storage + 346;
d13106 1
a13106 1
return dev_storage + 331;
d13121 1
a13121 1
return dev_storage + 316;
d13136 1
a13136 1
return dev_storage + 301;
d13151 1
a13151 1
return dev_storage + 286;
d13169 1
a13169 1
return dev_storage + 271;
d13184 1
a13184 1
return dev_storage + 185;
d13205 1
a13205 1
return dev_storage + 256;
d13220 1
a13220 1
return dev_storage + 241;
d13235 1
a13235 1
return dev_storage + 226;
d13253 1
a13253 1
return dev_storage + 743;
d13268 1
a13268 1
return dev_storage + 733;
d13283 1
a13283 1
return dev_storage + 723;
d13313 1
a13313 1
return dev_storage + 600;
d13331 1
a13331 1
return dev_storage + 815;
d13346 1
a13346 1
return dev_storage + 811;
d13361 1
a13361 1
return dev_storage + 801;
d13376 1
a13376 1
return dev_storage + 791;
d13391 1
a13391 1
return dev_storage + 781;
d13406 1
a13406 1
return dev_storage + 771;
d13424 1
a13424 1
return dev_storage + 761;
d13439 1
a13439 1
return dev_storage + 585;
d13466 1
a13466 1
return dev_storage + 570;
d13481 1
a13481 1
return dev_storage + 555;
d13496 1
a13496 1
return dev_storage + 540;
d13511 1
a13511 1
return dev_storage + 525;
d13529 1
a13529 1
return dev_storage + 131;
d13544 1
a13544 1
return dev_storage + 121;
d13559 1
a13559 1
return dev_storage + 111;
d13574 1
a13574 1
return dev_storage + 101;
d13589 1
a13589 1
return dev_storage + 91;
d13604 1
a13604 1
return dev_storage + 81;
d13619 1
a13619 1
return dev_storage + 71;
d13634 1
a13634 1
return dev_storage + 61;
d13652 1
a13652 1
return dev_storage + 510;
d13667 1
a13667 1
return dev_storage + 51;
d13694 1
a13694 1
return dev_storage + 495;
d13709 1
a13709 1
return dev_storage + 480;
d13724 1
a13724 1
return dev_storage + 465;
d13739 1
a13739 1
return dev_storage + 450;
d13754 1
a13754 1
return dev_storage + 435;
d13769 1
a13769 1
return dev_storage + 420;
d13787 1
a13787 1
return dev_storage + 405;
d13802 1
a13802 1
return dev_storage + 11;
d13823 1
a13823 1
return dev_storage + 390;
d13838 1
a13838 1
return dev_storage + 375;
d13853 1
a13853 1
return dev_storage + 360;
d13868 1
a13868 1
return dev_storage + 345;
d13883 1
a13883 1
return dev_storage + 330;
d13898 1
a13898 1
return dev_storage + 315;
d13913 1
a13913 1
return dev_storage + 300;
d13928 1
a13928 1
return dev_storage + 285;
d13946 1
a13946 1
return dev_storage + 270;
d13961 1
a13961 1
return dev_storage + 184;
d13982 1
a13982 1
return dev_storage + 255;
d13997 1
a13997 1
return dev_storage + 240;
d14012 1
a14012 1
return dev_storage + 225;
d14030 1
a14030 1
return dev_storage + 742;
d14045 1
a14045 1
return dev_storage + 732;
d14060 1
a14060 1
return dev_storage + 722;
d14096 1
a14096 1
return dev_storage + 19;
d14111 1
a14111 1
return dev_storage + 173;
d14129 1
a14129 1
return dev_storage + 168;
d14144 1
a14144 1
return dev_storage + 167;
d14159 1
a14159 1
return dev_storage + 166;
d14174 1
a14174 1
return dev_storage + 165;
d14189 1
a14189 1
return dev_storage + 164;
d14204 1
a14204 1
return dev_storage + 163;
d14219 1
a14219 1
return dev_storage + 162;
d14234 1
a14234 1
return dev_storage + 161;
d14258 1
a14258 1
return dev_storage + 160;
d14273 1
a14273 1
return dev_storage + 159;
d14288 1
a14288 1
return dev_storage + 158;
d14303 1
a14303 1
return dev_storage + 157;
d14321 1
a14321 1
return dev_storage + 830;
d14336 1
a14336 1
return dev_storage + 156;
d14360 1
a14360 1
return dev_storage + 829;
d14375 1
a14375 1
return dev_storage + 155;
d14399 1
a14399 1
return dev_storage + 828;
d14414 1
a14414 1
return dev_storage + 154;
d14438 1
a14438 1
return dev_storage + 827;
d14453 1
a14453 1
return dev_storage + 153;
d14477 1
a14477 1
return dev_storage + 826;
d14492 1
a14492 1
return dev_storage + 152;
d14516 1
a14516 1
return dev_storage + 825;
d14531 1
a14531 1
return dev_storage + 151;
d14561 1
a14561 1
return dev_storage + 150;
d14576 1
a14576 1
return dev_storage + 149;
d14591 1
a14591 1
return dev_storage + 148;
d14606 1
a14606 1
return dev_storage + 147;
d14621 1
a14621 1
return dev_storage + 146;
d14636 1
a14636 1
return dev_storage + 145;
d14651 1
a14651 1
return dev_storage + 144;
d14666 1
a14666 1
return dev_storage + 143;
d14681 1
a14681 1
return dev_storage + 142;
d14696 1
a14696 1
return dev_storage + 141;
d14726 1
a14726 1
return dev_storage + 833;
d14741 1
a14741 1
return dev_storage + 832;
d14756 1
a14756 1
return dev_storage + 20;
@


1.11
log
@Change use of BOOL, TRUE, FALSE to bool, true, false, as appropriate,
throughout.
* tty.cc (tty::common_init): Remove call to SetKernelObjectSecurity and edit
some comments.
* cygheap.h (init_cygheap::ctty): Add new element.
* devices.in (device::parse): Remove special handling for /dev/tty.
* devices.cc: Regenerate.
* dtable.cc (build_fh_pc): Don't reset /dev/tty device.  Let the device opener
do that.
* fhandler_termios.cc (tty_min::set_ctty): Redefine to _pinfo class.
* fhandler_tty.cc (fhandler_tty_common::set_close_on_exec): Avoid setting
noninherit flag for ctty.
* tty.h: Move BOOLs to bools.
(tty_min::set_ctty): Redeclare to _pinfo class.
* pinfo.cc (_pinfo::set_ctty): Define new function based on tty_min::set_ctty.
Change first argument from tty number to tty_min class.
* pinfo.h (_pinfo::set_ctty): Declare.
* fhandler_console.cc (fhandler_console::get_tty_stuff): Reflect move of
set_ctty to _pinfo class.
* fhandler_tty.cc (fhandler_tty_slave::open): Treat FH_TTY specially.  Use
saved cygheap value if it exists.  Otherwise convert to real device and save on
first time open.
(fhandler_tty_common::dup): Potentially set controlling tty if duping a slave
tty.
* syscalls.cc (setsid): Close controlling tty in cygheap.
* tty.cc: Change some BOOLs to bools.
@
text
@d55 17
a71 17
  {"/dev/com0", FHDEV(DEV_SERIAL_MAJOR, 0), "\\.\\com0"},
  {"/dev/com1", FHDEV(DEV_SERIAL_MAJOR, 1), "\\.\\com1"},
  {"/dev/com2", FHDEV(DEV_SERIAL_MAJOR, 2), "\\.\\com2"},
  {"/dev/com3", FHDEV(DEV_SERIAL_MAJOR, 3), "\\.\\com3"},
  {"/dev/com4", FHDEV(DEV_SERIAL_MAJOR, 4), "\\.\\com4"},
  {"/dev/com5", FHDEV(DEV_SERIAL_MAJOR, 5), "\\.\\com5"},
  {"/dev/com6", FHDEV(DEV_SERIAL_MAJOR, 6), "\\.\\com6"},
  {"/dev/com7", FHDEV(DEV_SERIAL_MAJOR, 7), "\\.\\com7"},
  {"/dev/com8", FHDEV(DEV_SERIAL_MAJOR, 8), "\\.\\com8"},
  {"/dev/com9", FHDEV(DEV_SERIAL_MAJOR, 9), "\\.\\com9"},
  {"/dev/com10", FHDEV(DEV_SERIAL_MAJOR, 10), "\\.\\com10"},
  {"/dev/com11", FHDEV(DEV_SERIAL_MAJOR, 11), "\\.\\com11"},
  {"/dev/com12", FHDEV(DEV_SERIAL_MAJOR, 12), "\\.\\com12"},
  {"/dev/com13", FHDEV(DEV_SERIAL_MAJOR, 13), "\\.\\com13"},
  {"/dev/com14", FHDEV(DEV_SERIAL_MAJOR, 14), "\\.\\com14"},
  {"/dev/com15", FHDEV(DEV_SERIAL_MAJOR, 15), "\\.\\com15"},
  {"/dev/com16", FHDEV(DEV_SERIAL_MAJOR, 16), "\\.\\com16"},
d869 16
a884 16
  {"/dev/ttyS0", FHDEV(DEV_SERIAL_MAJOR, 1), "\\.\\com1"},
  {"/dev/ttyS1", FHDEV(DEV_SERIAL_MAJOR, 2), "\\.\\com2"},
  {"/dev/ttyS2", FHDEV(DEV_SERIAL_MAJOR, 3), "\\.\\com3"},
  {"/dev/ttyS3", FHDEV(DEV_SERIAL_MAJOR, 4), "\\.\\com4"},
  {"/dev/ttyS4", FHDEV(DEV_SERIAL_MAJOR, 5), "\\.\\com5"},
  {"/dev/ttyS5", FHDEV(DEV_SERIAL_MAJOR, 6), "\\.\\com6"},
  {"/dev/ttyS6", FHDEV(DEV_SERIAL_MAJOR, 7), "\\.\\com7"},
  {"/dev/ttyS7", FHDEV(DEV_SERIAL_MAJOR, 8), "\\.\\com8"},
  {"/dev/ttyS8", FHDEV(DEV_SERIAL_MAJOR, 9), "\\.\\com9"},
  {"/dev/ttyS9", FHDEV(DEV_SERIAL_MAJOR, 10), "\\.\\com10"},
  {"/dev/ttyS10", FHDEV(DEV_SERIAL_MAJOR, 11), "\\.\\com11"},
  {"/dev/ttyS11", FHDEV(DEV_SERIAL_MAJOR, 12), "\\.\\com12"},
  {"/dev/ttyS12", FHDEV(DEV_SERIAL_MAJOR, 13), "\\.\\com13"},
  {"/dev/ttyS13", FHDEV(DEV_SERIAL_MAJOR, 14), "\\.\\com14"},
  {"/dev/ttyS14", FHDEV(DEV_SERIAL_MAJOR, 15), "\\.\\com15"},
  {"/dev/ttyS15", FHDEV(DEV_SERIAL_MAJOR, 16), "\\.\\com16"},
@


1.11.6.1
log
@* devices.in: Change raw com device to more correct form.
* fhandler.cc (fhandler_base::open): Use major numbers rather than device
numbers to control special behavior for devices which take units.
* fhandler_raw.cc (fhandler_dev_raw::writebuf): Ditto.
(fhandler_dev_raw::fstat): Ditto.
(fhandler_dev_raw::open): Ditto.
(fhandler_dev_raw::ioctl): Ditto.
@
text
@d55 17
a71 17
  {"/dev/com0", FHDEV(DEV_SERIAL_MAJOR, 0), "\\\\.\\com0"},
  {"/dev/com1", FHDEV(DEV_SERIAL_MAJOR, 1), "\\\\.\\com1"},
  {"/dev/com2", FHDEV(DEV_SERIAL_MAJOR, 2), "\\\\.\\com2"},
  {"/dev/com3", FHDEV(DEV_SERIAL_MAJOR, 3), "\\\\.\\com3"},
  {"/dev/com4", FHDEV(DEV_SERIAL_MAJOR, 4), "\\\\.\\com4"},
  {"/dev/com5", FHDEV(DEV_SERIAL_MAJOR, 5), "\\\\.\\com5"},
  {"/dev/com6", FHDEV(DEV_SERIAL_MAJOR, 6), "\\\\.\\com6"},
  {"/dev/com7", FHDEV(DEV_SERIAL_MAJOR, 7), "\\\\.\\com7"},
  {"/dev/com8", FHDEV(DEV_SERIAL_MAJOR, 8), "\\\\.\\com8"},
  {"/dev/com9", FHDEV(DEV_SERIAL_MAJOR, 9), "\\\\.\\com9"},
  {"/dev/com10", FHDEV(DEV_SERIAL_MAJOR, 10), "\\\\.\\com10"},
  {"/dev/com11", FHDEV(DEV_SERIAL_MAJOR, 11), "\\\\.\\com11"},
  {"/dev/com12", FHDEV(DEV_SERIAL_MAJOR, 12), "\\\\.\\com12"},
  {"/dev/com13", FHDEV(DEV_SERIAL_MAJOR, 13), "\\\\.\\com13"},
  {"/dev/com14", FHDEV(DEV_SERIAL_MAJOR, 14), "\\\\.\\com14"},
  {"/dev/com15", FHDEV(DEV_SERIAL_MAJOR, 15), "\\\\.\\com15"},
  {"/dev/com16", FHDEV(DEV_SERIAL_MAJOR, 16), "\\\\.\\com16"},
d869 16
a884 16
  {"/dev/ttyS0", FHDEV(DEV_SERIAL_MAJOR, 1), "\\\\.\\com1"},
  {"/dev/ttyS1", FHDEV(DEV_SERIAL_MAJOR, 2), "\\\\.\\com2"},
  {"/dev/ttyS2", FHDEV(DEV_SERIAL_MAJOR, 3), "\\\\.\\com3"},
  {"/dev/ttyS3", FHDEV(DEV_SERIAL_MAJOR, 4), "\\\\.\\com4"},
  {"/dev/ttyS4", FHDEV(DEV_SERIAL_MAJOR, 5), "\\\\.\\com5"},
  {"/dev/ttyS5", FHDEV(DEV_SERIAL_MAJOR, 6), "\\\\.\\com6"},
  {"/dev/ttyS6", FHDEV(DEV_SERIAL_MAJOR, 7), "\\\\.\\com7"},
  {"/dev/ttyS7", FHDEV(DEV_SERIAL_MAJOR, 8), "\\\\.\\com8"},
  {"/dev/ttyS8", FHDEV(DEV_SERIAL_MAJOR, 9), "\\\\.\\com9"},
  {"/dev/ttyS9", FHDEV(DEV_SERIAL_MAJOR, 10), "\\\\.\\com10"},
  {"/dev/ttyS10", FHDEV(DEV_SERIAL_MAJOR, 11), "\\\\.\\com11"},
  {"/dev/ttyS11", FHDEV(DEV_SERIAL_MAJOR, 12), "\\\\.\\com12"},
  {"/dev/ttyS12", FHDEV(DEV_SERIAL_MAJOR, 13), "\\\\.\\com13"},
  {"/dev/ttyS13", FHDEV(DEV_SERIAL_MAJOR, 14), "\\\\.\\com14"},
  {"/dev/ttyS14", FHDEV(DEV_SERIAL_MAJOR, 15), "\\\\.\\com15"},
  {"/dev/ttyS15", FHDEV(DEV_SERIAL_MAJOR, 16), "\\\\.\\com16"},
@


1.10
log
@Eliminate use of sigframe and sigthread throughout.
* Makefile.in (DLL_OFILES): Add sigfe.o.  Remove reliance on cygwin.def from
cygwin0.dll dependency since dependence on sigfe.o implies that.  Generate def
file on the fly using 'gendef'.
* configure.in: Don't auto-generate cygwin.def.
* configure: Regenerate.
* cygwin.din: Add SIGFE stuff where appropriate.
* dcrt0.cc (dll_crt0_1): Initialize cygwin tls early in process startup.  Set
_main_tls to address of the main thread's cygwin tls.
* debug.h: Remove now unneeded WFSO and WFMO declarations.
* exceptions.cc (_last_thread): Define.
(set_thread_state_for_signals): New function.
(reset_thread_exception_for_signals): Ditto.
(init_thread_for_signals): Ditto.
(delete_thread_for_signals): Ditto.
(capture_thread_for_signals): Ditto.
(handle_exceptions): Set return address explicitly for exceptions prior to
calling sig_send.
(interrupt_on_return): Eliminate.
(setup_handler): Add preliminary implementation for dealing with
thread-specific signals by querying _main_tls.
(signal_exit): Use cygthread::main_thread_id instead of mainthread.id.
(call_signal_handler_now): For now, just handle the main thread.
* fork.cc (vfork): Save and restore main _my_tls.
* gendef: New file.  Generates def file and sigfe.s file.
* gentls_offsets: New file.  Generates offsets for perl to use in sigfe.s.
* how-signals-work.txt: Mention that info is obsolete.
* init.cc (dll_entry): Initialize cygwin tls storage here.
* miscfuncs.cc (low_priority_sleep): Make a C function for easier calling from
asm.
* perthread.h (vfork_save::tls): New element.
* signal.cc (nanosleep): Replace previous use of
sigframe.call_signal_handler_now with straight call to call_signal_handler_now.
(abort): Ditto.
* syscalls.cc (readv): Ditto.
* termios.cc (tcsetattr): Ditto.
* wait.cc (wait4): Ditto.
* sigproc.cc (sig_dispatch_pending): Ditto.
(sig_send): Ditto.
* sigproc.h: Declare call_signal_handler_now.
* thread.cc (pthread::thread_init_wrapper): Initialize cygwin tls.  Remove
obsolete and unworking signal stuff.
* thread.h (verifyable_object::sigs): Eliminate.
(verifyable_object::sigmask): Eliminate.
(verifyable_object::sigtodo): Eliminate.
(verifyable_object::exit): Make attribute noreturn.
(verifyable_object::thread_init_wrapper): Ditto.
(pthread_null::exit): Ditto.
* winbase.h (__stackbase): Always define.
* winsup.h (low_priority_sleep): Declare as a "C" function.
* include/cygwin/version.h: Bump API version to reflect sigwait export.
* include/sys/queue.h: Protect SLIST_ENTRY from previous declaration.
* signal.cc (sigwait): Implement.
* select.cc (fhandler_base::ready_for_read): Add debugging output.
* devices.h: Define more device pointers via their storage.
* devices.in: Don't parse things like /dev/inet/tcp, as they really have no
meaning.
* devices.cc: Regenerate.
* gendevices: Set proper protection for output file.
* cygtls.h: New file.
* gendef: New file.
* gentls_offsets: New file.
* tlsoffsets.h: New file.  Autogenerated.
* config/i386/longjmp.c: Remove.  File subsumed by gendef output.
* config/i386/makefrag: Remove obsolete file.
* fhandler.cc: Remove spurious access_worker declaration.
* spawn.cc (spawnve): Make debugging output more accurate.
* cygwin-gperf: Remove.
* devices.cc: Remove.
@
text
@a14824 2
  else if (dev->devn == FH_TTY)
    tty_to_real_device ();
@


1.9
log
@* path.cc (win32_device_name): Only fill out destination buffer when it's
really a device.
@
text
@d37 12
d50 1
a50 1
  {":bad:", FH_BAD, ""};
a92 6
  {"/dev/inet/dgram", FH_DGRAM, ""},
  {"/dev/inet/icmp", FH_ICMP, ""},
  {"/dev/inet/stream", FH_STREAM, ""},
  {"/dev/inet/tcp", FH_TCP, ""},
  {"/dev/inet/udp", FH_UDP, ""},
  {"/dev/inet/unix", FH_UNIX, ""},
d892 3
a894 9
const device *dgram_dev = dev_storage + 39;
const device *icmp_dev = dev_storage + 40;
const device *stream_dev = dev_storage + 41;
const device *tcp_dev = dev_storage + 42;
const device *ttym_dev = dev_storage + 837;
const device *ttys_dev = dev_storage + 757;
const device *udp_dev = dev_storage + 43;
const device *unix_dev = dev_storage + 44;
const device *urandom_dev = dev_storage + 838;
d909 1
a909 1
return dev_storage + 221;
d927 1
a927 1
return dev_storage + 756;
d942 1
a942 1
return dev_storage + 220;
d963 1
a963 1
return dev_storage + 219;
d978 1
a978 1
return dev_storage + 218;
d993 1
a993 1
return dev_storage + 217;
d1008 1
a1008 1
return dev_storage + 216;
d1023 1
a1023 1
return dev_storage + 215;
d1038 1
a1038 1
return dev_storage + 214;
d1053 1
a1053 1
return dev_storage + 213;
d1068 1
a1068 1
return dev_storage + 212;
d1086 1
a1086 1
return dev_storage + 211;
d1122 1
a1122 1
return dev_storage + 210;
d1137 1
a1137 1
return dev_storage + 209;
d1155 1
a1155 1
return dev_storage + 208;
d1170 1
a1170 1
return dev_storage + 46;
d1191 1
a1191 1
return dev_storage + 207;
d1206 1
a1206 1
return dev_storage + 206;
d1221 1
a1221 1
return dev_storage + 205;
d1236 1
a1236 1
return dev_storage + 204;
d1251 1
a1251 1
return dev_storage + 203;
d1266 1
a1266 1
return dev_storage + 202;
d1281 1
a1281 1
return dev_storage + 201;
d1296 1
a1296 1
return dev_storage + 200;
d1311 1
a1311 1
return dev_storage + 199;
d1326 1
a1326 1
return dev_storage + 198;
d1341 1
a1341 1
return dev_storage + 197;
d1356 1
a1356 1
return dev_storage + 196;
d1374 1
a1374 1
return dev_storage + 637;
d1389 1
a1389 1
return dev_storage + 621;
d1428 1
a1428 1
return dev_storage + 636;
d1443 1
a1443 1
return dev_storage + 620;
d1482 1
a1482 1
return dev_storage + 635;
d1497 1
a1497 1
return dev_storage + 619;
d1536 1
a1536 1
return dev_storage + 634;
d1551 1
a1551 1
return dev_storage + 618;
d1590 1
a1590 1
return dev_storage + 633;
d1605 1
a1605 1
return dev_storage + 617;
d1644 1
a1644 1
return dev_storage + 632;
d1659 1
a1659 1
return dev_storage + 616;
d1698 1
a1698 1
return dev_storage + 631;
d1713 1
a1713 1
return dev_storage + 615;
d1752 1
a1752 1
return dev_storage + 630;
d1767 1
a1767 1
return dev_storage + 614;
d1806 1
a1806 1
return dev_storage + 629;
d1821 1
a1821 1
return dev_storage + 613;
d1860 1
a1860 1
return dev_storage + 628;
d1875 1
a1875 1
return dev_storage + 612;
d1920 1
a1920 1
return dev_storage + 178;
d1935 1
a1935 1
return dev_storage + 177;
d1953 1
a1953 1
return dev_storage + 840;
d1992 1
a1992 1
return dev_storage + 837;
d2007 1
a2007 1
return dev_storage + 45;
d2028 1
a2028 1
return dev_storage + 175;
d2043 1
a2043 1
return dev_storage + 176;
d2061 1
a2061 1
return dev_storage + 605;
d2079 1
a2079 1
return dev_storage + 766;
d2094 1
a2094 1
return dev_storage + 590;
d2115 1
a2115 1
return dev_storage + 575;
d2130 1
a2130 1
return dev_storage + 560;
d2145 1
a2145 1
return dev_storage + 545;
d2160 1
a2160 1
return dev_storage + 530;
d2178 1
a2178 1
return dev_storage + 515;
d2193 1
a2193 1
return dev_storage + 56;
d2214 1
a2214 1
return dev_storage + 500;
d2229 1
a2229 1
return dev_storage + 485;
d2244 1
a2244 1
return dev_storage + 470;
d2259 1
a2259 1
return dev_storage + 455;
d2274 1
a2274 1
return dev_storage + 440;
d2289 1
a2289 1
return dev_storage + 425;
d2307 1
a2307 1
return dev_storage + 410;
d2343 1
a2343 1
return dev_storage + 395;
d2358 1
a2358 1
return dev_storage + 380;
d2373 1
a2373 1
return dev_storage + 365;
d2388 1
a2388 1
return dev_storage + 350;
d2403 1
a2403 1
return dev_storage + 335;
d2418 1
a2418 1
return dev_storage + 320;
d2433 1
a2433 1
return dev_storage + 305;
d2448 1
a2448 1
return dev_storage + 290;
d2466 1
a2466 1
return dev_storage + 275;
d2481 1
a2481 1
return dev_storage + 189;
d2502 1
a2502 1
return dev_storage + 260;
d2517 1
a2517 1
return dev_storage + 245;
d2532 1
a2532 1
return dev_storage + 230;
d2547 1
a2547 1
return dev_storage + 727;
d2562 1
a2562 1
return dev_storage + 717;
d2577 1
a2577 1
return dev_storage + 707;
d2592 1
a2592 1
return dev_storage + 697;
d2607 1
a2607 1
return dev_storage + 687;
d2622 1
a2622 1
return dev_storage + 677;
d2637 1
a2637 1
return dev_storage + 667;
d2652 1
a2652 1
return dev_storage + 657;
d2667 1
a2667 1
return dev_storage + 647;
d2691 1
a2691 1
return dev_storage + 604;
d2709 1
a2709 1
return dev_storage + 765;
d2724 1
a2724 1
return dev_storage + 589;
d2745 1
a2745 1
return dev_storage + 574;
d2760 1
a2760 1
return dev_storage + 559;
d2775 1
a2775 1
return dev_storage + 544;
d2790 1
a2790 1
return dev_storage + 529;
d2808 1
a2808 1
return dev_storage + 514;
d2823 1
a2823 1
return dev_storage + 55;
d2844 1
a2844 1
return dev_storage + 499;
d2859 1
a2859 1
return dev_storage + 484;
d2874 1
a2874 1
return dev_storage + 469;
d2889 1
a2889 1
return dev_storage + 454;
d2904 1
a2904 1
return dev_storage + 439;
d2919 1
a2919 1
return dev_storage + 424;
d2937 1
a2937 1
return dev_storage + 409;
d2973 1
a2973 1
return dev_storage + 394;
d2988 1
a2988 1
return dev_storage + 379;
d3003 1
a3003 1
return dev_storage + 364;
d3018 1
a3018 1
return dev_storage + 349;
d3033 1
a3033 1
return dev_storage + 334;
d3048 1
a3048 1
return dev_storage + 319;
d3063 1
a3063 1
return dev_storage + 304;
d3078 1
a3078 1
return dev_storage + 289;
d3096 1
a3096 1
return dev_storage + 274;
d3111 1
a3111 1
return dev_storage + 188;
d3132 1
a3132 1
return dev_storage + 259;
d3147 1
a3147 1
return dev_storage + 244;
d3162 1
a3162 1
return dev_storage + 229;
d3177 1
a3177 1
return dev_storage + 726;
d3192 1
a3192 1
return dev_storage + 716;
d3207 1
a3207 1
return dev_storage + 706;
d3222 1
a3222 1
return dev_storage + 696;
d3237 1
a3237 1
return dev_storage + 686;
d3252 1
a3252 1
return dev_storage + 676;
d3267 1
a3267 1
return dev_storage + 666;
d3282 1
a3282 1
return dev_storage + 656;
d3297 1
a3297 1
return dev_storage + 646;
d3321 1
a3321 1
return dev_storage + 603;
d3339 1
a3339 1
return dev_storage + 764;
d3354 1
a3354 1
return dev_storage + 588;
d3375 1
a3375 1
return dev_storage + 573;
d3390 1
a3390 1
return dev_storage + 558;
d3405 1
a3405 1
return dev_storage + 543;
d3420 1
a3420 1
return dev_storage + 528;
d3438 1
a3438 1
return dev_storage + 513;
d3453 1
a3453 1
return dev_storage + 54;
d3474 1
a3474 1
return dev_storage + 498;
d3489 1
a3489 1
return dev_storage + 483;
d3504 1
a3504 1
return dev_storage + 468;
d3519 1
a3519 1
return dev_storage + 453;
d3534 1
a3534 1
return dev_storage + 438;
d3549 1
a3549 1
return dev_storage + 423;
d3567 1
a3567 1
return dev_storage + 408;
d3603 1
a3603 1
return dev_storage + 393;
d3618 1
a3618 1
return dev_storage + 378;
d3633 1
a3633 1
return dev_storage + 363;
d3648 1
a3648 1
return dev_storage + 348;
d3663 1
a3663 1
return dev_storage + 333;
d3678 1
a3678 1
return dev_storage + 318;
d3693 1
a3693 1
return dev_storage + 303;
d3708 1
a3708 1
return dev_storage + 288;
d3726 1
a3726 1
return dev_storage + 273;
d3741 1
a3741 1
return dev_storage + 187;
d3762 1
a3762 1
return dev_storage + 258;
d3777 1
a3777 1
return dev_storage + 243;
d3792 1
a3792 1
return dev_storage + 228;
d3807 1
a3807 1
return dev_storage + 725;
d3822 1
a3822 1
return dev_storage + 715;
d3837 1
a3837 1
return dev_storage + 705;
d3852 1
a3852 1
return dev_storage + 695;
d3867 1
a3867 1
return dev_storage + 685;
d3882 1
a3882 1
return dev_storage + 675;
d3897 1
a3897 1
return dev_storage + 665;
d3912 1
a3912 1
return dev_storage + 655;
d3927 1
a3927 1
return dev_storage + 645;
d3951 1
a3951 1
return dev_storage + 602;
d3969 1
a3969 1
return dev_storage + 763;
d3984 1
a3984 1
return dev_storage + 587;
d4005 1
a4005 1
return dev_storage + 572;
d4020 1
a4020 1
return dev_storage + 557;
d4035 1
a4035 1
return dev_storage + 542;
d4050 1
a4050 1
return dev_storage + 527;
d4068 1
a4068 1
return dev_storage + 512;
d4083 1
a4083 1
return dev_storage + 53;
d4104 1
a4104 1
return dev_storage + 497;
d4119 1
a4119 1
return dev_storage + 482;
d4134 1
a4134 1
return dev_storage + 467;
d4149 1
a4149 1
return dev_storage + 452;
d4164 1
a4164 1
return dev_storage + 437;
d4179 1
a4179 1
return dev_storage + 422;
d4197 1
a4197 1
return dev_storage + 407;
d4233 1
a4233 1
return dev_storage + 392;
d4248 1
a4248 1
return dev_storage + 377;
d4263 1
a4263 1
return dev_storage + 362;
d4278 1
a4278 1
return dev_storage + 347;
d4293 1
a4293 1
return dev_storage + 332;
d4308 1
a4308 1
return dev_storage + 317;
d4323 1
a4323 1
return dev_storage + 302;
d4338 1
a4338 1
return dev_storage + 287;
d4356 1
a4356 1
return dev_storage + 272;
d4371 1
a4371 1
return dev_storage + 186;
d4392 1
a4392 1
return dev_storage + 257;
d4407 1
a4407 1
return dev_storage + 242;
d4422 1
a4422 1
return dev_storage + 227;
d4437 1
a4437 1
return dev_storage + 724;
d4452 1
a4452 1
return dev_storage + 714;
d4467 1
a4467 1
return dev_storage + 704;
d4482 1
a4482 1
return dev_storage + 694;
d4497 1
a4497 1
return dev_storage + 684;
d4512 1
a4512 1
return dev_storage + 674;
d4527 1
a4527 1
return dev_storage + 664;
d4542 1
a4542 1
return dev_storage + 654;
d4557 1
a4557 1
return dev_storage + 644;
d4581 1
a4581 1
return dev_storage + 601;
d4599 1
a4599 1
return dev_storage + 762;
d4614 1
a4614 1
return dev_storage + 586;
d4635 1
a4635 1
return dev_storage + 571;
d4650 1
a4650 1
return dev_storage + 556;
d4665 1
a4665 1
return dev_storage + 541;
d4680 1
a4680 1
return dev_storage + 526;
d4698 1
a4698 1
return dev_storage + 511;
d4713 1
a4713 1
return dev_storage + 52;
d4734 1
a4734 1
return dev_storage + 496;
d4749 1
a4749 1
return dev_storage + 481;
d4764 1
a4764 1
return dev_storage + 466;
d4779 1
a4779 1
return dev_storage + 451;
d4794 1
a4794 1
return dev_storage + 436;
d4809 1
a4809 1
return dev_storage + 421;
d4827 1
a4827 1
return dev_storage + 406;
d4863 1
a4863 1
return dev_storage + 391;
d4878 1
a4878 1
return dev_storage + 376;
d4893 1
a4893 1
return dev_storage + 361;
d4908 1
a4908 1
return dev_storage + 346;
d4923 1
a4923 1
return dev_storage + 331;
d4938 1
a4938 1
return dev_storage + 316;
d4953 1
a4953 1
return dev_storage + 301;
d4968 1
a4968 1
return dev_storage + 286;
d4986 1
a4986 1
return dev_storage + 271;
d5001 1
a5001 1
return dev_storage + 185;
d5022 1
a5022 1
return dev_storage + 256;
d5037 1
a5037 1
return dev_storage + 241;
d5052 1
a5052 1
return dev_storage + 226;
d5067 1
a5067 1
return dev_storage + 723;
d5082 1
a5082 1
return dev_storage + 713;
d5097 1
a5097 1
return dev_storage + 703;
d5112 1
a5112 1
return dev_storage + 693;
d5127 1
a5127 1
return dev_storage + 683;
d5142 1
a5142 1
return dev_storage + 673;
d5157 1
a5157 1
return dev_storage + 663;
d5172 1
a5172 1
return dev_storage + 653;
d5190 1
a5190 1
return dev_storage + 643;
d5205 1
a5205 1
return dev_storage + 627;
d5250 1
a5250 1
return dev_storage + 600;
d5268 1
a5268 1
return dev_storage + 761;
d5283 1
a5283 1
return dev_storage + 585;
d5304 1
a5304 1
return dev_storage + 570;
d5319 1
a5319 1
return dev_storage + 555;
d5334 1
a5334 1
return dev_storage + 540;
d5349 1
a5349 1
return dev_storage + 525;
d5367 1
a5367 1
return dev_storage + 510;
d5382 1
a5382 1
return dev_storage + 51;
d5403 1
a5403 1
return dev_storage + 495;
d5418 1
a5418 1
return dev_storage + 480;
d5433 1
a5433 1
return dev_storage + 465;
d5448 1
a5448 1
return dev_storage + 450;
d5463 1
a5463 1
return dev_storage + 435;
d5478 1
a5478 1
return dev_storage + 420;
d5496 1
a5496 1
return dev_storage + 405;
d5532 1
a5532 1
return dev_storage + 390;
d5547 1
a5547 1
return dev_storage + 375;
d5562 1
a5562 1
return dev_storage + 360;
d5577 1
a5577 1
return dev_storage + 345;
d5592 1
a5592 1
return dev_storage + 330;
d5607 1
a5607 1
return dev_storage + 315;
d5622 1
a5622 1
return dev_storage + 300;
d5637 1
a5637 1
return dev_storage + 285;
d5655 1
a5655 1
return dev_storage + 270;
d5670 1
a5670 1
return dev_storage + 184;
d5691 1
a5691 1
return dev_storage + 255;
d5706 1
a5706 1
return dev_storage + 240;
d5721 1
a5721 1
return dev_storage + 225;
d5736 1
a5736 1
return dev_storage + 722;
d5751 1
a5751 1
return dev_storage + 712;
d5766 1
a5766 1
return dev_storage + 702;
d5781 1
a5781 1
return dev_storage + 692;
d5796 1
a5796 1
return dev_storage + 682;
d5811 1
a5811 1
return dev_storage + 672;
d5826 1
a5826 1
return dev_storage + 662;
d5841 1
a5841 1
return dev_storage + 652;
d5859 1
a5859 1
return dev_storage + 642;
d5874 1
a5874 1
return dev_storage + 626;
d5919 1
a5919 1
return dev_storage + 599;
d5937 1
a5937 1
return dev_storage + 760;
d5952 1
a5952 1
return dev_storage + 584;
d5973 1
a5973 1
return dev_storage + 569;
d5988 1
a5988 1
return dev_storage + 554;
d6003 1
a6003 1
return dev_storage + 539;
d6018 1
a6018 1
return dev_storage + 524;
d6036 1
a6036 1
return dev_storage + 509;
d6051 1
a6051 1
return dev_storage + 50;
d6072 1
a6072 1
return dev_storage + 494;
d6087 1
a6087 1
return dev_storage + 479;
d6102 1
a6102 1
return dev_storage + 464;
d6117 1
a6117 1
return dev_storage + 449;
d6132 1
a6132 1
return dev_storage + 434;
d6147 1
a6147 1
return dev_storage + 419;
d6165 1
a6165 1
return dev_storage + 404;
d6201 1
a6201 1
return dev_storage + 389;
d6216 1
a6216 1
return dev_storage + 374;
d6231 1
a6231 1
return dev_storage + 359;
d6246 1
a6246 1
return dev_storage + 344;
d6261 1
a6261 1
return dev_storage + 329;
d6276 1
a6276 1
return dev_storage + 314;
d6291 1
a6291 1
return dev_storage + 299;
d6306 1
a6306 1
return dev_storage + 284;
d6324 1
a6324 1
return dev_storage + 269;
d6339 1
a6339 1
return dev_storage + 183;
d6360 1
a6360 1
return dev_storage + 254;
d6375 1
a6375 1
return dev_storage + 239;
d6390 1
a6390 1
return dev_storage + 224;
d6405 1
a6405 1
return dev_storage + 721;
d6420 1
a6420 1
return dev_storage + 711;
d6435 1
a6435 1
return dev_storage + 701;
d6450 1
a6450 1
return dev_storage + 691;
d6465 1
a6465 1
return dev_storage + 681;
d6480 1
a6480 1
return dev_storage + 671;
d6495 1
a6495 1
return dev_storage + 661;
d6510 1
a6510 1
return dev_storage + 651;
d6528 1
a6528 1
return dev_storage + 641;
d6543 1
a6543 1
return dev_storage + 625;
d6588 1
a6588 1
return dev_storage + 598;
d6606 1
a6606 1
return dev_storage + 759;
d6621 1
a6621 1
return dev_storage + 583;
d6642 1
a6642 1
return dev_storage + 568;
d6657 1
a6657 1
return dev_storage + 553;
d6672 1
a6672 1
return dev_storage + 538;
d6687 1
a6687 1
return dev_storage + 523;
d6705 1
a6705 1
return dev_storage + 508;
d6720 1
a6720 1
return dev_storage + 49;
d6741 1
a6741 1
return dev_storage + 493;
d6756 1
a6756 1
return dev_storage + 478;
d6771 1
a6771 1
return dev_storage + 463;
d6786 1
a6786 1
return dev_storage + 448;
d6801 1
a6801 1
return dev_storage + 433;
d6816 1
a6816 1
return dev_storage + 418;
d6834 1
a6834 1
return dev_storage + 403;
d6870 1
a6870 1
return dev_storage + 388;
d6885 1
a6885 1
return dev_storage + 373;
d6900 1
a6900 1
return dev_storage + 358;
d6915 1
a6915 1
return dev_storage + 343;
d6930 1
a6930 1
return dev_storage + 328;
d6945 1
a6945 1
return dev_storage + 313;
d6960 1
a6960 1
return dev_storage + 298;
d6975 1
a6975 1
return dev_storage + 283;
d6993 1
a6993 1
return dev_storage + 268;
d7008 1
a7008 1
return dev_storage + 182;
d7029 1
a7029 1
return dev_storage + 253;
d7044 1
a7044 1
return dev_storage + 238;
d7059 1
a7059 1
return dev_storage + 223;
d7074 1
a7074 1
return dev_storage + 720;
d7089 1
a7089 1
return dev_storage + 710;
d7104 1
a7104 1
return dev_storage + 700;
d7119 1
a7119 1
return dev_storage + 690;
d7134 1
a7134 1
return dev_storage + 680;
d7149 1
a7149 1
return dev_storage + 670;
d7164 1
a7164 1
return dev_storage + 660;
d7179 1
a7179 1
return dev_storage + 650;
d7197 1
a7197 1
return dev_storage + 640;
d7212 1
a7212 1
return dev_storage + 624;
d7257 1
a7257 1
return dev_storage + 597;
d7275 1
a7275 1
return dev_storage + 758;
d7290 1
a7290 1
return dev_storage + 582;
d7311 1
a7311 1
return dev_storage + 567;
d7326 1
a7326 1
return dev_storage + 552;
d7341 1
a7341 1
return dev_storage + 537;
d7356 1
a7356 1
return dev_storage + 522;
d7374 1
a7374 1
return dev_storage + 507;
d7389 1
a7389 1
return dev_storage + 48;
d7410 1
a7410 1
return dev_storage + 492;
d7425 1
a7425 1
return dev_storage + 477;
d7440 1
a7440 1
return dev_storage + 462;
d7455 1
a7455 1
return dev_storage + 447;
d7470 1
a7470 1
return dev_storage + 432;
d7485 1
a7485 1
return dev_storage + 417;
d7503 1
a7503 1
return dev_storage + 402;
d7539 1
a7539 1
return dev_storage + 387;
d7554 1
a7554 1
return dev_storage + 372;
d7569 1
a7569 1
return dev_storage + 357;
d7584 1
a7584 1
return dev_storage + 342;
d7599 1
a7599 1
return dev_storage + 327;
d7614 1
a7614 1
return dev_storage + 312;
d7629 1
a7629 1
return dev_storage + 297;
d7644 1
a7644 1
return dev_storage + 282;
d7662 1
a7662 1
return dev_storage + 267;
d7677 1
a7677 1
return dev_storage + 181;
d7698 1
a7698 1
return dev_storage + 252;
d7713 1
a7713 1
return dev_storage + 237;
d7728 1
a7728 1
return dev_storage + 222;
d7743 1
a7743 1
return dev_storage + 719;
d7758 1
a7758 1
return dev_storage + 709;
d7773 1
a7773 1
return dev_storage + 699;
d7788 1
a7788 1
return dev_storage + 689;
d7803 1
a7803 1
return dev_storage + 679;
d7818 1
a7818 1
return dev_storage + 669;
d7833 1
a7833 1
return dev_storage + 659;
d7848 1
a7848 1
return dev_storage + 649;
d7866 1
a7866 1
return dev_storage + 639;
d7881 1
a7881 1
return dev_storage + 623;
d7926 1
a7926 1
return dev_storage + 757;
d7941 1
a7941 1
return dev_storage + 47;
d7971 1
a7971 1
return dev_storage + 180;
d7986 1
a7986 1
return dev_storage + 718;
d8001 1
a8001 1
return dev_storage + 708;
d8016 1
a8016 1
return dev_storage + 698;
d8031 1
a8031 1
return dev_storage + 688;
d8046 1
a8046 1
return dev_storage + 678;
d8061 1
a8061 1
return dev_storage + 668;
d8076 1
a8076 1
return dev_storage + 658;
d8091 1
a8091 1
return dev_storage + 648;
d8109 1
a8109 1
return dev_storage + 638;
d8124 1
a8124 1
return dev_storage + 622;
d8193 1
a8193 1
return dev_storage + 830;
d8208 1
a8208 1
return dev_storage + 146;
d8223 1
a8223 1
return dev_storage + 136;
d8238 1
a8238 1
return dev_storage + 126;
d8253 1
a8253 1
return dev_storage + 116;
d8271 1
a8271 1
return dev_storage + 816;
d8286 1
a8286 1
return dev_storage + 106;
d8310 1
a8310 1
return dev_storage + 806;
d8325 1
a8325 1
return dev_storage + 96;
d8349 1
a8349 1
return dev_storage + 796;
d8364 1
a8364 1
return dev_storage + 86;
d8388 1
a8388 1
return dev_storage + 786;
d8403 1
a8403 1
return dev_storage + 76;
d8427 1
a8427 1
return dev_storage + 776;
d8442 1
a8442 1
return dev_storage + 747;
d8457 1
a8457 1
return dev_storage + 66;
d8478 1
a8478 1
return dev_storage + 737;
d8502 1
a8502 1
return dev_storage + 829;
d8517 1
a8517 1
return dev_storage + 145;
d8532 1
a8532 1
return dev_storage + 135;
d8547 1
a8547 1
return dev_storage + 125;
d8562 1
a8562 1
return dev_storage + 115;
d8580 1
a8580 1
return dev_storage + 815;
d8595 1
a8595 1
return dev_storage + 105;
d8619 1
a8619 1
return dev_storage + 805;
d8634 1
a8634 1
return dev_storage + 95;
d8658 1
a8658 1
return dev_storage + 795;
d8673 1
a8673 1
return dev_storage + 85;
d8697 1
a8697 1
return dev_storage + 785;
d8712 1
a8712 1
return dev_storage + 75;
d8736 1
a8736 1
return dev_storage + 775;
d8751 1
a8751 1
return dev_storage + 746;
d8766 1
a8766 1
return dev_storage + 65;
d8787 1
a8787 1
return dev_storage + 736;
d8811 1
a8811 1
return dev_storage + 828;
d8826 1
a8826 1
return dev_storage + 144;
d8841 1
a8841 1
return dev_storage + 134;
d8856 1
a8856 1
return dev_storage + 124;
d8871 1
a8871 1
return dev_storage + 114;
d8889 1
a8889 1
return dev_storage + 814;
d8904 1
a8904 1
return dev_storage + 104;
d8928 1
a8928 1
return dev_storage + 804;
d8943 1
a8943 1
return dev_storage + 94;
d8967 1
a8967 1
return dev_storage + 794;
d8982 1
a8982 1
return dev_storage + 84;
d9006 1
a9006 1
return dev_storage + 784;
d9021 1
a9021 1
return dev_storage + 755;
d9036 1
a9036 1
return dev_storage + 74;
d9060 1
a9060 1
return dev_storage + 774;
d9075 1
a9075 1
return dev_storage + 745;
d9090 1
a9090 1
return dev_storage + 64;
d9111 1
a9111 1
return dev_storage + 735;
d9135 1
a9135 1
return dev_storage + 827;
d9150 1
a9150 1
return dev_storage + 143;
d9165 1
a9165 1
return dev_storage + 133;
d9180 1
a9180 1
return dev_storage + 123;
d9195 1
a9195 1
return dev_storage + 113;
d9213 1
a9213 1
return dev_storage + 813;
d9228 1
a9228 1
return dev_storage + 103;
d9252 1
a9252 1
return dev_storage + 803;
d9267 1
a9267 1
return dev_storage + 93;
d9291 1
a9291 1
return dev_storage + 793;
d9306 1
a9306 1
return dev_storage + 83;
d9330 1
a9330 1
return dev_storage + 783;
d9345 1
a9345 1
return dev_storage + 754;
d9360 1
a9360 1
return dev_storage + 73;
d9384 1
a9384 1
return dev_storage + 773;
d9399 1
a9399 1
return dev_storage + 744;
d9414 1
a9414 1
return dev_storage + 63;
d9450 1
a9450 1
return dev_storage + 734;
d9474 1
a9474 1
return dev_storage + 611;
d9492 1
a9492 1
return dev_storage + 826;
d9507 1
a9507 1
return dev_storage + 812;
d9522 1
a9522 1
return dev_storage + 802;
d9537 1
a9537 1
return dev_storage + 792;
d9552 1
a9552 1
return dev_storage + 782;
d9570 1
a9570 1
return dev_storage + 772;
d9585 1
a9585 1
return dev_storage + 596;
d9612 1
a9612 1
return dev_storage + 581;
d9627 1
a9627 1
return dev_storage + 566;
d9642 1
a9642 1
return dev_storage + 551;
d9657 1
a9657 1
return dev_storage + 536;
d9675 1
a9675 1
return dev_storage + 142;
d9690 1
a9690 1
return dev_storage + 132;
d9705 1
a9705 1
return dev_storage + 122;
d9720 1
a9720 1
return dev_storage + 112;
d9735 1
a9735 1
return dev_storage + 102;
d9750 1
a9750 1
return dev_storage + 92;
d9765 1
a9765 1
return dev_storage + 82;
d9780 1
a9780 1
return dev_storage + 72;
d9798 1
a9798 1
return dev_storage + 521;
d9813 1
a9813 1
return dev_storage + 62;
d9840 1
a9840 1
return dev_storage + 506;
d9855 1
a9855 1
return dev_storage + 491;
d9870 1
a9870 1
return dev_storage + 476;
d9885 1
a9885 1
return dev_storage + 461;
d9900 1
a9900 1
return dev_storage + 446;
d9915 1
a9915 1
return dev_storage + 431;
d9933 1
a9933 1
return dev_storage + 416;
d9969 1
a9969 1
return dev_storage + 401;
d9984 1
a9984 1
return dev_storage + 386;
d9999 1
a9999 1
return dev_storage + 371;
d10014 1
a10014 1
return dev_storage + 356;
d10029 1
a10029 1
return dev_storage + 341;
d10044 1
a10044 1
return dev_storage + 326;
d10059 1
a10059 1
return dev_storage + 311;
d10074 1
a10074 1
return dev_storage + 296;
d10092 1
a10092 1
return dev_storage + 281;
d10107 1
a10107 1
return dev_storage + 195;
d10128 1
a10128 1
return dev_storage + 266;
d10143 1
a10143 1
return dev_storage + 251;
d10158 1
a10158 1
return dev_storage + 236;
d10176 1
a10176 1
return dev_storage + 753;
d10191 1
a10191 1
return dev_storage + 743;
d10206 1
a10206 1
return dev_storage + 733;
d10236 1
a10236 1
return dev_storage + 610;
d10254 1
a10254 1
return dev_storage + 825;
d10269 1
a10269 1
return dev_storage + 811;
d10284 1
a10284 1
return dev_storage + 801;
d10299 1
a10299 1
return dev_storage + 791;
d10314 1
a10314 1
return dev_storage + 781;
d10332 1
a10332 1
return dev_storage + 771;
d10347 1
a10347 1
return dev_storage + 595;
d10374 1
a10374 1
return dev_storage + 580;
d10389 1
a10389 1
return dev_storage + 565;
d10404 1
a10404 1
return dev_storage + 550;
d10419 1
a10419 1
return dev_storage + 535;
d10437 1
a10437 1
return dev_storage + 141;
d10452 1
a10452 1
return dev_storage + 131;
d10467 1
a10467 1
return dev_storage + 121;
d10482 1
a10482 1
return dev_storage + 111;
d10497 1
a10497 1
return dev_storage + 101;
d10512 1
a10512 1
return dev_storage + 91;
d10527 1
a10527 1
return dev_storage + 81;
d10542 1
a10542 1
return dev_storage + 71;
d10560 1
a10560 1
return dev_storage + 520;
d10575 1
a10575 1
return dev_storage + 61;
d10602 1
a10602 1
return dev_storage + 505;
d10617 1
a10617 1
return dev_storage + 490;
d10632 1
a10632 1
return dev_storage + 475;
d10647 1
a10647 1
return dev_storage + 460;
d10662 1
a10662 1
return dev_storage + 445;
d10677 1
a10677 1
return dev_storage + 430;
d10695 1
a10695 1
return dev_storage + 415;
d10731 1
a10731 1
return dev_storage + 400;
d10746 1
a10746 1
return dev_storage + 385;
d10761 1
a10761 1
return dev_storage + 370;
d10776 1
a10776 1
return dev_storage + 355;
d10791 1
a10791 1
return dev_storage + 340;
d10806 1
a10806 1
return dev_storage + 325;
d10821 1
a10821 1
return dev_storage + 310;
d10836 1
a10836 1
return dev_storage + 295;
d10854 1
a10854 1
return dev_storage + 280;
d10869 1
a10869 1
return dev_storage + 194;
d10890 1
a10890 1
return dev_storage + 265;
d10905 1
a10905 1
return dev_storage + 250;
d10920 1
a10920 1
return dev_storage + 235;
d10938 1
a10938 1
return dev_storage + 752;
d10953 1
a10953 1
return dev_storage + 742;
d10968 1
a10968 1
return dev_storage + 732;
d10998 1
a10998 1
return dev_storage + 609;
d11016 1
a11016 1
return dev_storage + 824;
d11031 1
a11031 1
return dev_storage + 820;
d11046 1
a11046 1
return dev_storage + 810;
d11061 1
a11061 1
return dev_storage + 800;
d11076 1
a11076 1
return dev_storage + 790;
d11091 1
a11091 1
return dev_storage + 780;
d11109 1
a11109 1
return dev_storage + 770;
d11124 1
a11124 1
return dev_storage + 594;
d11151 1
a11151 1
return dev_storage + 579;
d11166 1
a11166 1
return dev_storage + 564;
d11181 1
a11181 1
return dev_storage + 549;
d11196 1
a11196 1
return dev_storage + 534;
d11214 1
a11214 1
return dev_storage + 140;
d11229 1
a11229 1
return dev_storage + 130;
d11244 1
a11244 1
return dev_storage + 120;
d11259 1
a11259 1
return dev_storage + 110;
d11274 1
a11274 1
return dev_storage + 100;
d11289 1
a11289 1
return dev_storage + 90;
d11304 1
a11304 1
return dev_storage + 80;
d11319 1
a11319 1
return dev_storage + 70;
d11337 1
a11337 1
return dev_storage + 519;
d11352 1
a11352 1
return dev_storage + 60;
d11379 1
a11379 1
return dev_storage + 504;
d11394 1
a11394 1
return dev_storage + 489;
d11409 1
a11409 1
return dev_storage + 474;
d11424 1
a11424 1
return dev_storage + 459;
d11439 1
a11439 1
return dev_storage + 444;
d11454 1
a11454 1
return dev_storage + 429;
d11472 1
a11472 1
return dev_storage + 414;
d11508 1
a11508 1
return dev_storage + 399;
d11523 1
a11523 1
return dev_storage + 384;
d11538 1
a11538 1
return dev_storage + 369;
d11553 1
a11553 1
return dev_storage + 354;
d11568 1
a11568 1
return dev_storage + 339;
d11583 1
a11583 1
return dev_storage + 324;
d11598 1
a11598 1
return dev_storage + 309;
d11613 1
a11613 1
return dev_storage + 294;
d11631 1
a11631 1
return dev_storage + 279;
d11646 1
a11646 1
return dev_storage + 193;
d11667 1
a11667 1
return dev_storage + 264;
d11682 1
a11682 1
return dev_storage + 249;
d11697 1
a11697 1
return dev_storage + 234;
d11715 1
a11715 1
return dev_storage + 751;
d11730 1
a11730 1
return dev_storage + 741;
d11745 1
a11745 1
return dev_storage + 731;
d11775 1
a11775 1
return dev_storage + 608;
d11793 1
a11793 1
return dev_storage + 823;
d11808 1
a11808 1
return dev_storage + 819;
d11823 1
a11823 1
return dev_storage + 809;
d11838 1
a11838 1
return dev_storage + 799;
d11853 1
a11853 1
return dev_storage + 789;
d11868 1
a11868 1
return dev_storage + 779;
d11886 1
a11886 1
return dev_storage + 769;
d11901 1
a11901 1
return dev_storage + 593;
d11928 1
a11928 1
return dev_storage + 578;
d11943 1
a11943 1
return dev_storage + 563;
d11958 1
a11958 1
return dev_storage + 548;
d11973 1
a11973 1
return dev_storage + 533;
d11991 1
a11991 1
return dev_storage + 139;
d12006 1
a12006 1
return dev_storage + 129;
d12021 1
a12021 1
return dev_storage + 119;
d12036 1
a12036 1
return dev_storage + 109;
d12051 1
a12051 1
return dev_storage + 99;
d12066 1
a12066 1
return dev_storage + 89;
d12081 1
a12081 1
return dev_storage + 79;
d12096 1
a12096 1
return dev_storage + 69;
d12114 1
a12114 1
return dev_storage + 518;
d12129 1
a12129 1
return dev_storage + 59;
d12156 1
a12156 1
return dev_storage + 503;
d12171 1
a12171 1
return dev_storage + 488;
d12186 1
a12186 1
return dev_storage + 473;
d12201 1
a12201 1
return dev_storage + 458;
d12216 1
a12216 1
return dev_storage + 443;
d12231 1
a12231 1
return dev_storage + 428;
d12249 1
a12249 1
return dev_storage + 413;
d12285 1
a12285 1
return dev_storage + 398;
d12300 1
a12300 1
return dev_storage + 383;
d12315 1
a12315 1
return dev_storage + 368;
d12330 1
a12330 1
return dev_storage + 353;
d12345 1
a12345 1
return dev_storage + 338;
d12360 1
a12360 1
return dev_storage + 323;
d12375 1
a12375 1
return dev_storage + 308;
d12390 1
a12390 1
return dev_storage + 293;
d12408 1
a12408 1
return dev_storage + 278;
d12423 1
a12423 1
return dev_storage + 192;
d12444 1
a12444 1
return dev_storage + 263;
d12459 1
a12459 1
return dev_storage + 248;
d12474 1
a12474 1
return dev_storage + 233;
d12492 1
a12492 1
return dev_storage + 750;
d12507 1
a12507 1
return dev_storage + 740;
d12522 1
a12522 1
return dev_storage + 730;
d12552 1
a12552 1
return dev_storage + 607;
d12570 1
a12570 1
return dev_storage + 822;
d12585 1
a12585 1
return dev_storage + 818;
d12600 1
a12600 1
return dev_storage + 808;
d12615 1
a12615 1
return dev_storage + 798;
d12630 1
a12630 1
return dev_storage + 788;
d12645 1
a12645 1
return dev_storage + 778;
d12663 1
a12663 1
return dev_storage + 768;
d12678 1
a12678 1
return dev_storage + 592;
d12705 1
a12705 1
return dev_storage + 577;
d12720 1
a12720 1
return dev_storage + 562;
d12735 1
a12735 1
return dev_storage + 547;
d12750 1
a12750 1
return dev_storage + 532;
d12768 1
a12768 1
return dev_storage + 138;
d12783 1
a12783 1
return dev_storage + 128;
d12798 1
a12798 1
return dev_storage + 118;
d12813 1
a12813 1
return dev_storage + 108;
d12828 1
a12828 1
return dev_storage + 98;
d12843 1
a12843 1
return dev_storage + 88;
d12858 1
a12858 1
return dev_storage + 78;
d12873 1
a12873 1
return dev_storage + 68;
d12891 1
a12891 1
return dev_storage + 517;
d12906 1
a12906 1
return dev_storage + 58;
d12933 1
a12933 1
return dev_storage + 502;
d12948 1
a12948 1
return dev_storage + 487;
d12963 1
a12963 1
return dev_storage + 472;
d12978 1
a12978 1
return dev_storage + 457;
d12993 1
a12993 1
return dev_storage + 442;
d13008 1
a13008 1
return dev_storage + 427;
d13026 1
a13026 1
return dev_storage + 412;
d13062 1
a13062 1
return dev_storage + 397;
d13077 1
a13077 1
return dev_storage + 382;
d13092 1
a13092 1
return dev_storage + 367;
d13107 1
a13107 1
return dev_storage + 352;
d13122 1
a13122 1
return dev_storage + 337;
d13137 1
a13137 1
return dev_storage + 322;
d13152 1
a13152 1
return dev_storage + 307;
d13167 1
a13167 1
return dev_storage + 292;
d13185 1
a13185 1
return dev_storage + 277;
d13200 1
a13200 1
return dev_storage + 191;
d13221 1
a13221 1
return dev_storage + 262;
d13236 1
a13236 1
return dev_storage + 247;
d13251 1
a13251 1
return dev_storage + 232;
d13269 1
a13269 1
return dev_storage + 749;
d13284 1
a13284 1
return dev_storage + 739;
d13299 1
a13299 1
return dev_storage + 729;
d13329 1
a13329 1
return dev_storage + 606;
d13347 1
a13347 1
return dev_storage + 821;
d13362 1
a13362 1
return dev_storage + 817;
d13377 1
a13377 1
return dev_storage + 807;
d13392 1
a13392 1
return dev_storage + 797;
d13407 1
a13407 1
return dev_storage + 787;
d13422 1
a13422 1
return dev_storage + 777;
d13440 1
a13440 1
return dev_storage + 767;
d13455 1
a13455 1
return dev_storage + 591;
d13482 1
a13482 1
return dev_storage + 576;
d13497 1
a13497 1
return dev_storage + 561;
d13512 1
a13512 1
return dev_storage + 546;
d13527 1
a13527 1
return dev_storage + 531;
d13545 1
a13545 1
return dev_storage + 137;
d13560 1
a13560 1
return dev_storage + 127;
d13575 1
a13575 1
return dev_storage + 117;
d13590 1
a13590 1
return dev_storage + 107;
d13605 1
a13605 1
return dev_storage + 97;
d13620 1
a13620 1
return dev_storage + 87;
d13635 1
a13635 1
return dev_storage + 77;
d13650 1
a13650 1
return dev_storage + 67;
d13668 1
a13668 1
return dev_storage + 516;
d13683 1
a13683 1
return dev_storage + 57;
d13710 1
a13710 1
return dev_storage + 501;
d13725 1
a13725 1
return dev_storage + 486;
d13740 1
a13740 1
return dev_storage + 471;
d13755 1
a13755 1
return dev_storage + 456;
d13770 1
a13770 1
return dev_storage + 441;
d13785 1
a13785 1
return dev_storage + 426;
d13803 1
a13803 1
return dev_storage + 411;
d13839 1
a13839 1
return dev_storage + 396;
d13854 1
a13854 1
return dev_storage + 381;
d13869 1
a13869 1
return dev_storage + 366;
d13884 1
a13884 1
return dev_storage + 351;
d13899 1
a13899 1
return dev_storage + 336;
d13914 1
a13914 1
return dev_storage + 321;
d13929 1
a13929 1
return dev_storage + 306;
d13944 1
a13944 1
return dev_storage + 291;
d13962 1
a13962 1
return dev_storage + 276;
d13977 1
a13977 1
return dev_storage + 190;
d13998 1
a13998 1
return dev_storage + 261;
d14013 1
a14013 1
return dev_storage + 246;
d14028 1
a14028 1
return dev_storage + 231;
d14046 1
a14046 1
return dev_storage + 748;
d14061 1
a14061 1
return dev_storage + 738;
d14076 1
a14076 1
return dev_storage + 728;
d14127 1
a14127 1
return dev_storage + 179;
d14145 1
a14145 1
return dev_storage + 174;
d14160 1
a14160 1
return dev_storage + 173;
d14175 1
a14175 1
return dev_storage + 172;
d14190 1
a14190 1
return dev_storage + 171;
d14205 1
a14205 1
return dev_storage + 170;
d14220 1
a14220 1
return dev_storage + 169;
d14235 1
a14235 1
return dev_storage + 168;
d14250 1
a14250 1
return dev_storage + 167;
d14274 1
a14274 1
return dev_storage + 166;
d14289 1
a14289 1
return dev_storage + 165;
d14304 1
a14304 1
return dev_storage + 164;
d14319 1
a14319 1
return dev_storage + 163;
d14337 1
a14337 1
return dev_storage + 836;
d14352 1
a14352 1
return dev_storage + 162;
d14376 1
a14376 1
return dev_storage + 835;
d14391 1
a14391 1
return dev_storage + 161;
d14415 1
a14415 1
return dev_storage + 834;
d14430 1
a14430 1
return dev_storage + 160;
d14454 1
a14454 1
return dev_storage + 833;
d14469 1
a14469 1
return dev_storage + 159;
d14493 1
a14493 1
return dev_storage + 832;
d14508 1
a14508 1
return dev_storage + 158;
d14532 1
a14532 1
return dev_storage + 831;
d14547 1
a14547 1
return dev_storage + 157;
d14577 1
a14577 1
return dev_storage + 156;
d14592 1
a14592 1
return dev_storage + 155;
d14607 1
a14607 1
return dev_storage + 154;
d14622 1
a14622 1
return dev_storage + 153;
d14637 1
a14637 1
return dev_storage + 152;
d14652 1
a14652 1
return dev_storage + 151;
d14667 1
a14667 1
return dev_storage + 150;
d14682 1
a14682 1
return dev_storage + 149;
d14697 1
a14697 1
return dev_storage + 148;
d14712 1
a14712 1
return dev_storage + 147;
d14742 1
a14742 1
return dev_storage + 839;
d14757 1
a14757 1
return dev_storage + 838;
a14788 39
    case 13:
      switch (KR_keyword [10])
        {
        case 'u':
          if (strncmp (KR_keyword, "/dev/inet/udp", 13) == 0)
            {
{
return dev_storage + 43;

}
            }
          else
            {
{
return	NULL;

}
            }
        case 't':
          if (strncmp (KR_keyword, "/dev/inet/tcp", 13) == 0)
            {
{
return dev_storage + 42;

}
            }
          else
            {
{
return	NULL;

}
            }
        default:
{
return	NULL;

}
        }
a14789 18
      switch (KR_keyword [10])
        {
        case 'u':
          if (strncmp (KR_keyword, "/dev/inet/unix", 14) == 0)
            {
{
return dev_storage + 44;

}
            }
          else
            {
{
return	NULL;

}
            }
        case 'o':
a14793 51

}
            }
          else
            {
{
return	NULL;

}
            }
        case 'i':
          if (strncmp (KR_keyword, "/dev/inet/icmp", 14) == 0)
            {
{
return dev_storage + 40;

}
            }
          else
            {
{
return	NULL;

}
            }
        default:
{
return	NULL;

}
        }
    case 15:
          if (strncmp (KR_keyword, "/dev/inet/dgram", 15) == 0)
            {
{
return dev_storage + 39;

}
            }
          else
            {
{
return	NULL;

}
            }
    case 16:
          if (strncmp (KR_keyword, "/dev/inet/stream", 16) == 0)
            {
{
return dev_storage + 41;
@


1.8
log
@* Makefile.in: Add YA method for generating devices.cc.
* child_info.h: YA update of another magic number.
* gendevices: New file.
* devices.in: New file.
* devices.cc: Regenerate.
* devices.shilka: Remove.
* devices.h: Correctly define device pointers.
(device): Remove now obsolete fields.
(device::native): Renamed from device::fmt.
* dtable.cc (build_fh_dev): Simplify in light of new unit parsing scheme.
(build_fh_pc): Ditto.
* path.cc (win32_device_name): Ditto.
* fhandler.h (fhandler_base::get_native_name): Reflect renaming of fmt to
native.
* fhandler_tty.cc (fhandler_tty_mster::init): Initialize slave device prior to
reporting unit.
@
text
@a263 1
  {"/dev/sda0", FH_SDA | 0, "\\Device\\Harddisk0\\Partition0"},
a278 1
  {"/dev/sdb0", FH_SDB | 0, "\\Device\\Harddisk1\\Partition0"},
a293 1
  {"/dev/sdc0", FH_SDC | 0, "\\Device\\Harddisk2\\Partition0"},
a308 1
  {"/dev/sdd0", FH_SDD | 0, "\\Device\\Harddisk3\\Partition0"},
a323 1
  {"/dev/sde0", FH_SDE | 0, "\\Device\\Harddisk4\\Partition0"},
a338 1
  {"/dev/sdf0", FH_SDF | 0, "\\Device\\Harddisk5\\Partition0"},
a353 1
  {"/dev/sdg0", FH_SDG | 0, "\\Device\\Harddisk6\\Partition0"},
a368 1
  {"/dev/sdh0", FH_SDH | 0, "\\Device\\Harddisk7\\Partition0"},
a383 1
  {"/dev/sdi0", FH_SDI | 0, "\\Device\\Harddisk8\\Partition0"},
a398 1
  {"/dev/sdj0", FH_SDJ | 0, "\\Device\\Harddisk9\\Partition0"},
a413 1
  {"/dev/sdk0", FH_SDK | 0, "\\Device\\Harddisk10\\Partition0"},
a428 1
  {"/dev/sdl0", FH_SDL | 0, "\\Device\\Harddisk11\\Partition0"},
a443 1
  {"/dev/sdm0", FH_SDM | 0, "\\Device\\Harddisk12\\Partition0"},
a458 1
  {"/dev/sdn0", FH_SDN | 0, "\\Device\\Harddisk13\\Partition0"},
a473 1
  {"/dev/sdo0", FH_SDO | 0, "\\Device\\Harddisk14\\Partition0"},
a488 1
  {"/dev/sdp0", FH_SDP | 0, "\\Device\\Harddisk15\\Partition0"},
a503 1
  {"/dev/sdq0", FH_SDQ | 0, "\\Device\\Harddisk16\\Partition0"},
a518 1
  {"/dev/sdr0", FH_SDR | 0, "\\Device\\Harddisk17\\Partition0"},
a533 1
  {"/dev/sds0", FH_SDS | 0, "\\Device\\Harddisk18\\Partition0"},
a548 1
  {"/dev/sdt0", FH_SDT | 0, "\\Device\\Harddisk19\\Partition0"},
a563 1
  {"/dev/sdu0", FH_SDU | 0, "\\Device\\Harddisk20\\Partition0"},
a578 1
  {"/dev/sdv0", FH_SDV | 0, "\\Device\\Harddisk21\\Partition0"},
a593 1
  {"/dev/sdw0", FH_SDW | 0, "\\Device\\Harddisk22\\Partition0"},
a608 1
  {"/dev/sdx0", FH_SDX | 0, "\\Device\\Harddisk23\\Partition0"},
a623 1
  {"/dev/sdy0", FH_SDY | 0, "\\Device\\Harddisk24\\Partition0"},
a638 1
  {"/dev/sdz0", FH_SDZ | 0, "\\Device\\Harddisk25\\Partition0"},
d890 2
a891 2
const device *ttym_dev = dev_storage + 863;
const device *ttys_dev = dev_storage + 783;
d894 1
a894 1
const device *urandom_dev = dev_storage + 864;
d927 1
a927 1
return dev_storage + 782;
d1374 1
a1374 1
return dev_storage + 663;
d1389 1
a1389 1
return dev_storage + 647;
d1428 1
a1428 1
return dev_storage + 662;
d1443 1
a1443 1
return dev_storage + 646;
d1482 1
a1482 1
return dev_storage + 661;
d1497 1
a1497 1
return dev_storage + 645;
d1536 1
a1536 1
return dev_storage + 660;
d1551 1
a1551 1
return dev_storage + 644;
d1590 1
a1590 1
return dev_storage + 659;
d1605 1
a1605 1
return dev_storage + 643;
d1644 1
a1644 1
return dev_storage + 658;
d1659 1
a1659 1
return dev_storage + 642;
d1698 1
a1698 1
return dev_storage + 657;
d1713 1
a1713 1
return dev_storage + 641;
d1752 1
a1752 1
return dev_storage + 656;
d1767 1
a1767 1
return dev_storage + 640;
d1806 1
a1806 1
return dev_storage + 655;
d1821 1
a1821 1
return dev_storage + 639;
d1860 1
a1860 1
return dev_storage + 654;
d1875 1
a1875 1
return dev_storage + 638;
d1953 1
a1953 1
return dev_storage + 866;
d1992 1
a1992 1
return dev_storage + 863;
d2061 1
a2061 1
return dev_storage + 631;
d2079 1
a2079 1
return dev_storage + 792;
d2094 1
a2094 1
return dev_storage + 615;
d2115 1
a2115 1
return dev_storage + 599;
d2130 1
a2130 1
return dev_storage + 583;
d2145 1
a2145 1
return dev_storage + 567;
d2160 1
a2160 1
return dev_storage + 551;
d2178 1
a2178 1
return dev_storage + 535;
d2214 1
a2214 1
return dev_storage + 519;
d2229 1
a2229 1
return dev_storage + 503;
d2244 1
a2244 1
return dev_storage + 487;
d2259 1
a2259 1
return dev_storage + 471;
d2274 1
a2274 1
return dev_storage + 455;
d2289 1
a2289 1
return dev_storage + 439;
d2307 1
a2307 1
return dev_storage + 423;
d2343 1
a2343 1
return dev_storage + 407;
d2358 1
a2358 1
return dev_storage + 391;
d2373 1
a2373 1
return dev_storage + 375;
d2388 1
a2388 1
return dev_storage + 359;
d2403 1
a2403 1
return dev_storage + 343;
d2418 1
a2418 1
return dev_storage + 327;
d2433 1
a2433 1
return dev_storage + 311;
d2448 1
a2448 1
return dev_storage + 295;
d2466 1
a2466 1
return dev_storage + 279;
d2502 1
a2502 1
return dev_storage + 263;
d2517 1
a2517 1
return dev_storage + 247;
d2532 1
a2532 1
return dev_storage + 231;
d2547 1
a2547 1
return dev_storage + 753;
d2562 1
a2562 1
return dev_storage + 743;
d2577 1
a2577 1
return dev_storage + 733;
d2592 1
a2592 1
return dev_storage + 723;
d2607 1
a2607 1
return dev_storage + 713;
d2622 1
a2622 1
return dev_storage + 703;
d2637 1
a2637 1
return dev_storage + 693;
d2652 1
a2652 1
return dev_storage + 683;
d2667 1
a2667 1
return dev_storage + 673;
d2691 1
a2691 1
return dev_storage + 630;
d2709 1
a2709 1
return dev_storage + 791;
d2724 1
a2724 1
return dev_storage + 614;
d2745 1
a2745 1
return dev_storage + 598;
d2760 1
a2760 1
return dev_storage + 582;
d2775 1
a2775 1
return dev_storage + 566;
d2790 1
a2790 1
return dev_storage + 550;
d2808 1
a2808 1
return dev_storage + 534;
d2844 1
a2844 1
return dev_storage + 518;
d2859 1
a2859 1
return dev_storage + 502;
d2874 1
a2874 1
return dev_storage + 486;
d2889 1
a2889 1
return dev_storage + 470;
d2904 1
a2904 1
return dev_storage + 454;
d2919 1
a2919 1
return dev_storage + 438;
d2937 1
a2937 1
return dev_storage + 422;
d2973 1
a2973 1
return dev_storage + 406;
d2988 1
a2988 1
return dev_storage + 390;
d3003 1
a3003 1
return dev_storage + 374;
d3018 1
a3018 1
return dev_storage + 358;
d3033 1
a3033 1
return dev_storage + 342;
d3048 1
a3048 1
return dev_storage + 326;
d3063 1
a3063 1
return dev_storage + 310;
d3078 1
a3078 1
return dev_storage + 294;
d3096 1
a3096 1
return dev_storage + 278;
d3132 1
a3132 1
return dev_storage + 262;
d3147 1
a3147 1
return dev_storage + 246;
d3162 1
a3162 1
return dev_storage + 230;
d3177 1
a3177 1
return dev_storage + 752;
d3192 1
a3192 1
return dev_storage + 742;
d3207 1
a3207 1
return dev_storage + 732;
d3222 1
a3222 1
return dev_storage + 722;
d3237 1
a3237 1
return dev_storage + 712;
d3252 1
a3252 1
return dev_storage + 702;
d3267 1
a3267 1
return dev_storage + 692;
d3282 1
a3282 1
return dev_storage + 682;
d3297 1
a3297 1
return dev_storage + 672;
d3321 1
a3321 1
return dev_storage + 629;
d3339 1
a3339 1
return dev_storage + 790;
d3354 1
a3354 1
return dev_storage + 613;
d3375 1
a3375 1
return dev_storage + 597;
d3390 1
a3390 1
return dev_storage + 581;
d3405 1
a3405 1
return dev_storage + 565;
d3420 1
a3420 1
return dev_storage + 549;
d3438 1
a3438 1
return dev_storage + 533;
d3474 1
a3474 1
return dev_storage + 517;
d3489 1
a3489 1
return dev_storage + 501;
d3504 1
a3504 1
return dev_storage + 485;
d3519 1
a3519 1
return dev_storage + 469;
d3534 1
a3534 1
return dev_storage + 453;
d3549 1
a3549 1
return dev_storage + 437;
d3567 1
a3567 1
return dev_storage + 421;
d3603 1
a3603 1
return dev_storage + 405;
d3618 1
a3618 1
return dev_storage + 389;
d3633 1
a3633 1
return dev_storage + 373;
d3648 1
a3648 1
return dev_storage + 357;
d3663 1
a3663 1
return dev_storage + 341;
d3678 1
a3678 1
return dev_storage + 325;
d3693 1
a3693 1
return dev_storage + 309;
d3708 1
a3708 1
return dev_storage + 293;
d3726 1
a3726 1
return dev_storage + 277;
d3762 1
a3762 1
return dev_storage + 261;
d3777 1
a3777 1
return dev_storage + 245;
d3792 1
a3792 1
return dev_storage + 229;
d3807 1
a3807 1
return dev_storage + 751;
d3822 1
a3822 1
return dev_storage + 741;
d3837 1
a3837 1
return dev_storage + 731;
d3852 1
a3852 1
return dev_storage + 721;
d3867 1
a3867 1
return dev_storage + 711;
d3882 1
a3882 1
return dev_storage + 701;
d3897 1
a3897 1
return dev_storage + 691;
d3912 1
a3912 1
return dev_storage + 681;
d3927 1
a3927 1
return dev_storage + 671;
d3951 1
a3951 1
return dev_storage + 628;
d3969 1
a3969 1
return dev_storage + 789;
d3984 1
a3984 1
return dev_storage + 612;
d4005 1
a4005 1
return dev_storage + 596;
d4020 1
a4020 1
return dev_storage + 580;
d4035 1
a4035 1
return dev_storage + 564;
d4050 1
a4050 1
return dev_storage + 548;
d4068 1
a4068 1
return dev_storage + 532;
d4104 1
a4104 1
return dev_storage + 516;
d4119 1
a4119 1
return dev_storage + 500;
d4134 1
a4134 1
return dev_storage + 484;
d4149 1
a4149 1
return dev_storage + 468;
d4164 1
a4164 1
return dev_storage + 452;
d4179 1
a4179 1
return dev_storage + 436;
d4197 1
a4197 1
return dev_storage + 420;
d4233 1
a4233 1
return dev_storage + 404;
d4248 1
a4248 1
return dev_storage + 388;
d4263 1
a4263 1
return dev_storage + 372;
d4278 1
a4278 1
return dev_storage + 356;
d4293 1
a4293 1
return dev_storage + 340;
d4308 1
a4308 1
return dev_storage + 324;
d4323 1
a4323 1
return dev_storage + 308;
d4338 1
a4338 1
return dev_storage + 292;
d4356 1
a4356 1
return dev_storage + 276;
d4392 1
a4392 1
return dev_storage + 260;
d4407 1
a4407 1
return dev_storage + 244;
d4422 1
a4422 1
return dev_storage + 228;
d4437 1
a4437 1
return dev_storage + 750;
d4452 1
a4452 1
return dev_storage + 740;
d4467 1
a4467 1
return dev_storage + 730;
d4482 1
a4482 1
return dev_storage + 720;
d4497 1
a4497 1
return dev_storage + 710;
d4512 1
a4512 1
return dev_storage + 700;
d4527 1
a4527 1
return dev_storage + 690;
d4542 1
a4542 1
return dev_storage + 680;
d4557 1
a4557 1
return dev_storage + 670;
d4581 1
a4581 1
return dev_storage + 627;
d4599 1
a4599 1
return dev_storage + 788;
d4614 1
a4614 1
return dev_storage + 611;
d4635 1
a4635 1
return dev_storage + 595;
d4650 1
a4650 1
return dev_storage + 579;
d4665 1
a4665 1
return dev_storage + 563;
d4680 1
a4680 1
return dev_storage + 547;
d4698 1
a4698 1
return dev_storage + 531;
d4734 1
a4734 1
return dev_storage + 515;
d4749 1
a4749 1
return dev_storage + 499;
d4764 1
a4764 1
return dev_storage + 483;
d4779 1
a4779 1
return dev_storage + 467;
d4794 1
a4794 1
return dev_storage + 451;
d4809 1
a4809 1
return dev_storage + 435;
d4827 1
a4827 1
return dev_storage + 419;
d4863 1
a4863 1
return dev_storage + 403;
d4878 1
a4878 1
return dev_storage + 387;
d4893 1
a4893 1
return dev_storage + 371;
d4908 1
a4908 1
return dev_storage + 355;
d4923 1
a4923 1
return dev_storage + 339;
d4938 1
a4938 1
return dev_storage + 323;
d4953 1
a4953 1
return dev_storage + 307;
d4968 1
a4968 1
return dev_storage + 291;
d4986 1
a4986 1
return dev_storage + 275;
d5022 1
a5022 1
return dev_storage + 259;
d5037 1
a5037 1
return dev_storage + 243;
d5052 1
a5052 1
return dev_storage + 227;
d5067 1
a5067 1
return dev_storage + 749;
d5082 1
a5082 1
return dev_storage + 739;
d5097 1
a5097 1
return dev_storage + 729;
d5112 1
a5112 1
return dev_storage + 719;
d5127 1
a5127 1
return dev_storage + 709;
d5142 1
a5142 1
return dev_storage + 699;
d5157 1
a5157 1
return dev_storage + 689;
d5172 1
a5172 1
return dev_storage + 679;
d5190 1
a5190 1
return dev_storage + 669;
d5205 1
a5205 1
return dev_storage + 653;
d5250 1
a5250 1
return dev_storage + 626;
d5268 1
a5268 1
return dev_storage + 787;
d5283 1
a5283 1
return dev_storage + 610;
d5304 1
a5304 1
return dev_storage + 594;
d5319 1
a5319 1
return dev_storage + 578;
d5334 1
a5334 1
return dev_storage + 562;
d5349 1
a5349 1
return dev_storage + 546;
d5367 1
a5367 1
return dev_storage + 530;
d5403 1
a5403 1
return dev_storage + 514;
d5418 1
a5418 1
return dev_storage + 498;
d5433 1
a5433 1
return dev_storage + 482;
d5448 1
a5448 1
return dev_storage + 466;
d5463 1
a5463 1
return dev_storage + 450;
d5478 1
a5478 1
return dev_storage + 434;
d5496 1
a5496 1
return dev_storage + 418;
d5532 1
a5532 1
return dev_storage + 402;
d5547 1
a5547 1
return dev_storage + 386;
d5562 1
a5562 1
return dev_storage + 370;
d5577 1
a5577 1
return dev_storage + 354;
d5592 1
a5592 1
return dev_storage + 338;
d5607 1
a5607 1
return dev_storage + 322;
d5622 1
a5622 1
return dev_storage + 306;
d5637 1
a5637 1
return dev_storage + 290;
d5655 1
a5655 1
return dev_storage + 274;
d5691 1
a5691 1
return dev_storage + 258;
d5706 1
a5706 1
return dev_storage + 242;
d5721 1
a5721 1
return dev_storage + 226;
d5736 1
a5736 1
return dev_storage + 748;
d5751 1
a5751 1
return dev_storage + 738;
d5766 1
a5766 1
return dev_storage + 728;
d5781 1
a5781 1
return dev_storage + 718;
d5796 1
a5796 1
return dev_storage + 708;
d5811 1
a5811 1
return dev_storage + 698;
d5826 1
a5826 1
return dev_storage + 688;
d5841 1
a5841 1
return dev_storage + 678;
d5859 1
a5859 1
return dev_storage + 668;
d5874 1
a5874 1
return dev_storage + 652;
d5919 1
a5919 1
return dev_storage + 625;
d5937 1
a5937 1
return dev_storage + 786;
d5952 1
a5952 1
return dev_storage + 609;
d5973 1
a5973 1
return dev_storage + 593;
d5988 1
a5988 1
return dev_storage + 577;
d6003 1
a6003 1
return dev_storage + 561;
d6018 1
a6018 1
return dev_storage + 545;
d6036 1
a6036 1
return dev_storage + 529;
d6072 1
a6072 1
return dev_storage + 513;
d6087 1
a6087 1
return dev_storage + 497;
d6102 1
a6102 1
return dev_storage + 481;
d6117 1
a6117 1
return dev_storage + 465;
d6132 1
a6132 1
return dev_storage + 449;
d6147 1
a6147 1
return dev_storage + 433;
d6165 1
a6165 1
return dev_storage + 417;
d6201 1
a6201 1
return dev_storage + 401;
d6216 1
a6216 1
return dev_storage + 385;
d6231 1
a6231 1
return dev_storage + 369;
d6246 1
a6246 1
return dev_storage + 353;
d6261 1
a6261 1
return dev_storage + 337;
d6276 1
a6276 1
return dev_storage + 321;
d6291 1
a6291 1
return dev_storage + 305;
d6306 1
a6306 1
return dev_storage + 289;
d6324 1
a6324 1
return dev_storage + 273;
d6360 1
a6360 1
return dev_storage + 257;
d6375 1
a6375 1
return dev_storage + 241;
d6390 1
a6390 1
return dev_storage + 225;
d6405 1
a6405 1
return dev_storage + 747;
d6420 1
a6420 1
return dev_storage + 737;
d6435 1
a6435 1
return dev_storage + 727;
d6450 1
a6450 1
return dev_storage + 717;
d6465 1
a6465 1
return dev_storage + 707;
d6480 1
a6480 1
return dev_storage + 697;
d6495 1
a6495 1
return dev_storage + 687;
d6510 1
a6510 1
return dev_storage + 677;
d6528 1
a6528 1
return dev_storage + 667;
d6543 1
a6543 1
return dev_storage + 651;
d6588 1
a6588 1
return dev_storage + 624;
d6606 1
a6606 1
return dev_storage + 785;
d6621 1
a6621 1
return dev_storage + 608;
d6642 1
a6642 1
return dev_storage + 592;
d6657 1
a6657 1
return dev_storage + 576;
d6672 1
a6672 1
return dev_storage + 560;
d6687 1
a6687 1
return dev_storage + 544;
d6705 1
a6705 1
return dev_storage + 528;
d6741 1
a6741 1
return dev_storage + 512;
d6756 1
a6756 1
return dev_storage + 496;
d6771 1
a6771 1
return dev_storage + 480;
d6786 1
a6786 1
return dev_storage + 464;
d6801 1
a6801 1
return dev_storage + 448;
d6816 1
a6816 1
return dev_storage + 432;
d6834 1
a6834 1
return dev_storage + 416;
d6870 1
a6870 1
return dev_storage + 400;
d6885 1
a6885 1
return dev_storage + 384;
d6900 1
a6900 1
return dev_storage + 368;
d6915 1
a6915 1
return dev_storage + 352;
d6930 1
a6930 1
return dev_storage + 336;
d6945 1
a6945 1
return dev_storage + 320;
d6960 1
a6960 1
return dev_storage + 304;
d6975 1
a6975 1
return dev_storage + 288;
d6993 1
a6993 1
return dev_storage + 272;
d7029 1
a7029 1
return dev_storage + 256;
d7044 1
a7044 1
return dev_storage + 240;
d7059 1
a7059 1
return dev_storage + 224;
d7074 1
a7074 1
return dev_storage + 746;
d7089 1
a7089 1
return dev_storage + 736;
d7104 1
a7104 1
return dev_storage + 726;
d7119 1
a7119 1
return dev_storage + 716;
d7134 1
a7134 1
return dev_storage + 706;
d7149 1
a7149 1
return dev_storage + 696;
d7164 1
a7164 1
return dev_storage + 686;
d7179 1
a7179 1
return dev_storage + 676;
d7197 1
a7197 1
return dev_storage + 666;
d7212 1
a7212 1
return dev_storage + 650;
d7257 1
a7257 1
return dev_storage + 623;
d7275 1
a7275 1
return dev_storage + 784;
d7290 1
a7290 1
return dev_storage + 607;
d7311 1
a7311 1
return dev_storage + 591;
d7326 1
a7326 1
return dev_storage + 575;
d7341 1
a7341 1
return dev_storage + 559;
d7356 1
a7356 1
return dev_storage + 543;
d7374 1
a7374 1
return dev_storage + 527;
d7410 1
a7410 1
return dev_storage + 511;
d7425 1
a7425 1
return dev_storage + 495;
d7440 1
a7440 1
return dev_storage + 479;
d7455 1
a7455 1
return dev_storage + 463;
d7470 1
a7470 1
return dev_storage + 447;
d7485 1
a7485 1
return dev_storage + 431;
d7503 1
a7503 1
return dev_storage + 415;
d7539 1
a7539 1
return dev_storage + 399;
d7554 1
a7554 1
return dev_storage + 383;
d7569 1
a7569 1
return dev_storage + 367;
d7584 1
a7584 1
return dev_storage + 351;
d7599 1
a7599 1
return dev_storage + 335;
d7614 1
a7614 1
return dev_storage + 319;
d7629 1
a7629 1
return dev_storage + 303;
d7644 1
a7644 1
return dev_storage + 287;
d7662 1
a7662 1
return dev_storage + 271;
d7698 1
a7698 1
return dev_storage + 255;
d7713 1
a7713 1
return dev_storage + 239;
d7728 1
a7728 1
return dev_storage + 223;
d7743 1
a7743 1
return dev_storage + 745;
d7758 1
a7758 1
return dev_storage + 735;
d7773 1
a7773 1
return dev_storage + 725;
d7788 1
a7788 1
return dev_storage + 715;
d7803 1
a7803 1
return dev_storage + 705;
d7818 1
a7818 1
return dev_storage + 695;
d7833 1
a7833 1
return dev_storage + 685;
d7848 1
a7848 1
return dev_storage + 675;
d7866 1
a7866 1
return dev_storage + 665;
d7881 1
a7881 1
return dev_storage + 649;
a7921 15
            case 'z':
              if (strncmp (KR_keyword, "/dev/sdz0", 9) == 0)
                {
{
return dev_storage + 622;

}
                }
              else
                {
{
return	NULL;

}
                }
d7923 1
a7923 1
              switch (KR_keyword [5])
a7924 3
                case 't':
                  if (strncmp (KR_keyword, "/dev/tty0", 9) == 0)
                    {
d7926 1
a7926 37
return dev_storage + 783;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 's':
                  if (strncmp (KR_keyword, "/dev/sdy0", 9) == 0)
                    {
{
return dev_storage + 606;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                default:
{
return	NULL;

}
                }
            case 'x':
              if (strncmp (KR_keyword, "/dev/sdx0", 9) == 0)
                {
{
return dev_storage + 590;
d7937 2
a7938 2
            case 'w':
              if (strncmp (KR_keyword, "/dev/sdw0", 9) == 0)
d7941 1
a7941 1
return dev_storage + 574;
d7952 2
a7953 2
            case 'v':
              if (strncmp (KR_keyword, "/dev/sdv0", 9) == 0)
d7956 1
a7956 373
return dev_storage + 558;

}
                }
              else
                {
{
return	NULL;

}
                }
            case 'u':
              if (strncmp (KR_keyword, "/dev/sdu0", 9) == 0)
                {
{
return dev_storage + 542;

}
                }
              else
                {
{
return	NULL;

}
                }
            case 't':
              switch (KR_keyword [5])
                {
                case 's':
                  if (strncmp (KR_keyword, "/dev/sdt0", 9) == 0)
                    {
{
return dev_storage + 526;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'n':
                  if (strncmp (KR_keyword, "/dev/nst0", 9) == 0)
                    {
{
return dev_storage + 47;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                default:
{
return	NULL;

}
                }
            case 's':
              if (strncmp (KR_keyword, "/dev/sds0", 9) == 0)
                {
{
return dev_storage + 510;

}
                }
              else
                {
{
return	NULL;

}
                }
            case 'r':
              if (strncmp (KR_keyword, "/dev/sdr0", 9) == 0)
                {
{
return dev_storage + 494;

}
                }
              else
                {
{
return	NULL;

}
                }
            case 'q':
              if (strncmp (KR_keyword, "/dev/sdq0", 9) == 0)
                {
{
return dev_storage + 478;

}
                }
              else
                {
{
return	NULL;

}
                }
            case 'p':
              if (strncmp (KR_keyword, "/dev/sdp0", 9) == 0)
                {
{
return dev_storage + 462;

}
                }
              else
                {
{
return	NULL;

}
                }
            case 'o':
              if (strncmp (KR_keyword, "/dev/sdo0", 9) == 0)
                {
{
return dev_storage + 446;

}
                }
              else
                {
{
return	NULL;

}
                }
            case 'n':
              if (strncmp (KR_keyword, "/dev/sdn0", 9) == 0)
                {
{
return dev_storage + 430;

}
                }
              else
                {
{
return	NULL;

}
                }
            case 'm':
              switch (KR_keyword [5])
                {
                case 's':
                  if (strncmp (KR_keyword, "/dev/sdm0", 9) == 0)
                    {
{
return dev_storage + 414;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'c':
                  if (strncmp (KR_keyword, "/dev/com0", 9) == 0)
                    {
{
return dev_storage + 1;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                default:
{
return	NULL;

}
                }
            case 'l':
              if (strncmp (KR_keyword, "/dev/sdl0", 9) == 0)
                {
{
return dev_storage + 398;

}
                }
              else
                {
{
return	NULL;

}
                }
            case 'k':
              if (strncmp (KR_keyword, "/dev/sdk0", 9) == 0)
                {
{
return dev_storage + 382;

}
                }
              else
                {
{
return	NULL;

}
                }
            case 'j':
              if (strncmp (KR_keyword, "/dev/sdj0", 9) == 0)
                {
{
return dev_storage + 366;

}
                }
              else
                {
{
return	NULL;

}
                }
            case 'i':
              if (strncmp (KR_keyword, "/dev/sdi0", 9) == 0)
                {
{
return dev_storage + 350;

}
                }
              else
                {
{
return	NULL;

}
                }
            case 'h':
              if (strncmp (KR_keyword, "/dev/sdh0", 9) == 0)
                {
{
return dev_storage + 334;

}
                }
              else
                {
{
return	NULL;

}
                }
            case 'g':
              if (strncmp (KR_keyword, "/dev/sdg0", 9) == 0)
                {
{
return dev_storage + 318;

}
                }
              else
                {
{
return	NULL;

}
                }
            case 'f':
              if (strncmp (KR_keyword, "/dev/sdf0", 9) == 0)
                {
{
return dev_storage + 302;

}
                }
              else
                {
{
return	NULL;

}
                }
            case 'e':
              if (strncmp (KR_keyword, "/dev/sde0", 9) == 0)
                {
{
return dev_storage + 286;

}
                }
              else
                {
{
return	NULL;

}
                }
            case 'd':
              switch (KR_keyword [6])
                {
                case 'd':
                  if (strncmp (KR_keyword, "/dev/sdd0", 9) == 0)
                    {
{
return dev_storage + 270;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'c':
                  if (strncmp (KR_keyword, "/dev/scd0", 9) == 0)
                    {
{
return dev_storage + 180;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                default:
{
return	NULL;

}
                }
            case 'c':
              if (strncmp (KR_keyword, "/dev/sdc0", 9) == 0)
                {
{
return dev_storage + 254;

}
                }
              else
                {
{
return	NULL;

}
                }
            case 'b':
              if (strncmp (KR_keyword, "/dev/sdb0", 9) == 0)
                {
{
return dev_storage + 238;
d7967 2
a7968 2
            case 'a':
              if (strncmp (KR_keyword, "/dev/sda0", 9) == 0)
d7971 1
a7971 1
return dev_storage + 222;
d7986 1
a7986 1
return dev_storage + 744;
d8001 1
a8001 1
return dev_storage + 734;
d8016 1
a8016 1
return dev_storage + 724;
d8031 1
a8031 1
return dev_storage + 714;
d8046 1
a8046 1
return dev_storage + 704;
d8061 1
a8061 1
return dev_storage + 694;
d8076 1
a8076 1
return dev_storage + 684;
d8091 1
a8091 1
return dev_storage + 674;
d8109 1
a8109 1
return dev_storage + 664;
d8124 1
a8124 1
return dev_storage + 648;
d8193 1
a8193 1
return dev_storage + 856;
d8271 1
a8271 1
return dev_storage + 842;
d8310 1
a8310 1
return dev_storage + 832;
d8349 1
a8349 1
return dev_storage + 822;
d8388 1
a8388 1
return dev_storage + 812;
d8427 1
a8427 1
return dev_storage + 802;
d8442 1
a8442 1
return dev_storage + 773;
d8478 1
a8478 1
return dev_storage + 763;
d8502 1
a8502 1
return dev_storage + 855;
d8580 1
a8580 1
return dev_storage + 841;
d8619 1
a8619 1
return dev_storage + 831;
d8658 1
a8658 1
return dev_storage + 821;
d8697 1
a8697 1
return dev_storage + 811;
d8736 1
a8736 1
return dev_storage + 801;
d8751 1
a8751 1
return dev_storage + 772;
d8787 1
a8787 1
return dev_storage + 762;
d8811 1
a8811 1
return dev_storage + 854;
d8889 1
a8889 1
return dev_storage + 840;
d8928 1
a8928 1
return dev_storage + 830;
d8967 1
a8967 1
return dev_storage + 820;
d9006 1
a9006 1
return dev_storage + 810;
d9021 1
a9021 1
return dev_storage + 781;
d9060 1
a9060 1
return dev_storage + 800;
d9075 1
a9075 1
return dev_storage + 771;
d9111 1
a9111 1
return dev_storage + 761;
d9135 1
a9135 1
return dev_storage + 853;
d9213 1
a9213 1
return dev_storage + 839;
d9252 1
a9252 1
return dev_storage + 829;
d9291 1
a9291 1
return dev_storage + 819;
d9330 1
a9330 1
return dev_storage + 809;
d9345 1
a9345 1
return dev_storage + 780;
d9384 1
a9384 1
return dev_storage + 799;
d9399 1
a9399 1
return dev_storage + 770;
d9450 1
a9450 1
return dev_storage + 760;
d9474 1
a9474 1
return dev_storage + 637;
d9492 1
a9492 1
return dev_storage + 852;
d9507 1
a9507 1
return dev_storage + 838;
d9522 1
a9522 1
return dev_storage + 828;
d9537 1
a9537 1
return dev_storage + 818;
d9552 1
a9552 1
return dev_storage + 808;
d9570 1
a9570 1
return dev_storage + 798;
d9585 1
a9585 1
return dev_storage + 621;
d9612 1
a9612 1
return dev_storage + 605;
d9627 1
a9627 1
return dev_storage + 589;
d9642 1
a9642 1
return dev_storage + 573;
d9657 1
a9657 1
return dev_storage + 557;
d9798 1
a9798 1
return dev_storage + 541;
d9840 1
a9840 1
return dev_storage + 525;
d9855 1
a9855 1
return dev_storage + 509;
d9870 1
a9870 1
return dev_storage + 493;
d9885 1
a9885 1
return dev_storage + 477;
d9900 1
a9900 1
return dev_storage + 461;
d9915 1
a9915 1
return dev_storage + 445;
d9933 1
a9933 1
return dev_storage + 429;
d9969 1
a9969 1
return dev_storage + 413;
d9984 1
a9984 1
return dev_storage + 397;
d9999 1
a9999 1
return dev_storage + 381;
d10014 1
a10014 1
return dev_storage + 365;
d10029 1
a10029 1
return dev_storage + 349;
d10044 1
a10044 1
return dev_storage + 333;
d10059 1
a10059 1
return dev_storage + 317;
d10074 1
a10074 1
return dev_storage + 301;
d10092 1
a10092 1
return dev_storage + 285;
d10128 1
a10128 1
return dev_storage + 269;
d10143 1
a10143 1
return dev_storage + 253;
d10158 1
a10158 1
return dev_storage + 237;
d10176 1
a10176 1
return dev_storage + 779;
d10191 1
a10191 1
return dev_storage + 769;
d10206 1
a10206 1
return dev_storage + 759;
d10236 1
a10236 1
return dev_storage + 636;
d10254 1
a10254 1
return dev_storage + 851;
d10269 1
a10269 1
return dev_storage + 837;
d10284 1
a10284 1
return dev_storage + 827;
d10299 1
a10299 1
return dev_storage + 817;
d10314 1
a10314 1
return dev_storage + 807;
d10332 1
a10332 1
return dev_storage + 797;
d10347 1
a10347 1
return dev_storage + 620;
d10374 1
a10374 1
return dev_storage + 604;
d10389 1
a10389 1
return dev_storage + 588;
d10404 1
a10404 1
return dev_storage + 572;
d10419 1
a10419 1
return dev_storage + 556;
d10560 1
a10560 1
return dev_storage + 540;
d10602 1
a10602 1
return dev_storage + 524;
d10617 1
a10617 1
return dev_storage + 508;
d10632 1
a10632 1
return dev_storage + 492;
d10647 1
a10647 1
return dev_storage + 476;
d10662 1
a10662 1
return dev_storage + 460;
d10677 1
a10677 1
return dev_storage + 444;
d10695 1
a10695 1
return dev_storage + 428;
d10731 1
a10731 1
return dev_storage + 412;
d10746 1
a10746 1
return dev_storage + 396;
d10761 1
a10761 1
return dev_storage + 380;
d10776 1
a10776 1
return dev_storage + 364;
d10791 1
a10791 1
return dev_storage + 348;
d10806 1
a10806 1
return dev_storage + 332;
d10821 1
a10821 1
return dev_storage + 316;
d10836 1
a10836 1
return dev_storage + 300;
d10854 1
a10854 1
return dev_storage + 284;
d10890 1
a10890 1
return dev_storage + 268;
d10905 1
a10905 1
return dev_storage + 252;
d10920 1
a10920 1
return dev_storage + 236;
d10938 1
a10938 1
return dev_storage + 778;
d10953 1
a10953 1
return dev_storage + 768;
d10968 1
a10968 1
return dev_storage + 758;
d10998 1
a10998 1
return dev_storage + 635;
d11016 1
a11016 1
return dev_storage + 850;
d11031 1
a11031 1
return dev_storage + 846;
d11046 1
a11046 1
return dev_storage + 836;
d11061 1
a11061 1
return dev_storage + 826;
d11076 1
a11076 1
return dev_storage + 816;
d11091 1
a11091 1
return dev_storage + 806;
d11109 1
a11109 1
return dev_storage + 796;
d11124 1
a11124 1
return dev_storage + 619;
d11151 1
a11151 1
return dev_storage + 603;
d11166 1
a11166 1
return dev_storage + 587;
d11181 1
a11181 1
return dev_storage + 571;
d11196 1
a11196 1
return dev_storage + 555;
d11337 1
a11337 1
return dev_storage + 539;
d11379 1
a11379 1
return dev_storage + 523;
d11394 1
a11394 1
return dev_storage + 507;
d11409 1
a11409 1
return dev_storage + 491;
d11424 1
a11424 1
return dev_storage + 475;
d11439 1
a11439 1
return dev_storage + 459;
d11454 1
a11454 1
return dev_storage + 443;
d11472 1
a11472 1
return dev_storage + 427;
d11508 1
a11508 1
return dev_storage + 411;
d11523 1
a11523 1
return dev_storage + 395;
d11538 1
a11538 1
return dev_storage + 379;
d11553 1
a11553 1
return dev_storage + 363;
d11568 1
a11568 1
return dev_storage + 347;
d11583 1
a11583 1
return dev_storage + 331;
d11598 1
a11598 1
return dev_storage + 315;
d11613 1
a11613 1
return dev_storage + 299;
d11631 1
a11631 1
return dev_storage + 283;
d11667 1
a11667 1
return dev_storage + 267;
d11682 1
a11682 1
return dev_storage + 251;
d11697 1
a11697 1
return dev_storage + 235;
d11715 1
a11715 1
return dev_storage + 777;
d11730 1
a11730 1
return dev_storage + 767;
d11745 1
a11745 1
return dev_storage + 757;
d11775 1
a11775 1
return dev_storage + 634;
d11793 1
a11793 1
return dev_storage + 849;
d11808 1
a11808 1
return dev_storage + 845;
d11823 1
a11823 1
return dev_storage + 835;
d11838 1
a11838 1
return dev_storage + 825;
d11853 1
a11853 1
return dev_storage + 815;
d11868 1
a11868 1
return dev_storage + 805;
d11886 1
a11886 1
return dev_storage + 795;
d11901 1
a11901 1
return dev_storage + 618;
d11928 1
a11928 1
return dev_storage + 602;
d11943 1
a11943 1
return dev_storage + 586;
d11958 1
a11958 1
return dev_storage + 570;
d11973 1
a11973 1
return dev_storage + 554;
d12114 1
a12114 1
return dev_storage + 538;
d12156 1
a12156 1
return dev_storage + 522;
d12171 1
a12171 1
return dev_storage + 506;
d12186 1
a12186 1
return dev_storage + 490;
d12201 1
a12201 1
return dev_storage + 474;
d12216 1
a12216 1
return dev_storage + 458;
d12231 1
a12231 1
return dev_storage + 442;
d12249 1
a12249 1
return dev_storage + 426;
d12285 1
a12285 1
return dev_storage + 410;
d12300 1
a12300 1
return dev_storage + 394;
d12315 1
a12315 1
return dev_storage + 378;
d12330 1
a12330 1
return dev_storage + 362;
d12345 1
a12345 1
return dev_storage + 346;
d12360 1
a12360 1
return dev_storage + 330;
d12375 1
a12375 1
return dev_storage + 314;
d12390 1
a12390 1
return dev_storage + 298;
d12408 1
a12408 1
return dev_storage + 282;
d12444 1
a12444 1
return dev_storage + 266;
d12459 1
a12459 1
return dev_storage + 250;
d12474 1
a12474 1
return dev_storage + 234;
d12492 1
a12492 1
return dev_storage + 776;
d12507 1
a12507 1
return dev_storage + 766;
d12522 1
a12522 1
return dev_storage + 756;
d12552 1
a12552 1
return dev_storage + 633;
d12570 1
a12570 1
return dev_storage + 848;
d12585 1
a12585 1
return dev_storage + 844;
d12600 1
a12600 1
return dev_storage + 834;
d12615 1
a12615 1
return dev_storage + 824;
d12630 1
a12630 1
return dev_storage + 814;
d12645 1
a12645 1
return dev_storage + 804;
d12663 1
a12663 1
return dev_storage + 794;
d12678 1
a12678 1
return dev_storage + 617;
d12705 1
a12705 1
return dev_storage + 601;
d12720 1
a12720 1
return dev_storage + 585;
d12735 1
a12735 1
return dev_storage + 569;
d12750 1
a12750 1
return dev_storage + 553;
d12891 1
a12891 1
return dev_storage + 537;
d12933 1
a12933 1
return dev_storage + 521;
d12948 1
a12948 1
return dev_storage + 505;
d12963 1
a12963 1
return dev_storage + 489;
d12978 1
a12978 1
return dev_storage + 473;
d12993 1
a12993 1
return dev_storage + 457;
d13008 1
a13008 1
return dev_storage + 441;
d13026 1
a13026 1
return dev_storage + 425;
d13062 1
a13062 1
return dev_storage + 409;
d13077 1
a13077 1
return dev_storage + 393;
d13092 1
a13092 1
return dev_storage + 377;
d13107 1
a13107 1
return dev_storage + 361;
d13122 1
a13122 1
return dev_storage + 345;
d13137 1
a13137 1
return dev_storage + 329;
d13152 1
a13152 1
return dev_storage + 313;
d13167 1
a13167 1
return dev_storage + 297;
d13185 1
a13185 1
return dev_storage + 281;
d13221 1
a13221 1
return dev_storage + 265;
d13236 1
a13236 1
return dev_storage + 249;
d13251 1
a13251 1
return dev_storage + 233;
d13269 1
a13269 1
return dev_storage + 775;
d13284 1
a13284 1
return dev_storage + 765;
d13299 1
a13299 1
return dev_storage + 755;
d13329 1
a13329 1
return dev_storage + 632;
d13347 1
a13347 1
return dev_storage + 847;
d13362 1
a13362 1
return dev_storage + 843;
d13377 1
a13377 1
return dev_storage + 833;
d13392 1
a13392 1
return dev_storage + 823;
d13407 1
a13407 1
return dev_storage + 813;
d13422 1
a13422 1
return dev_storage + 803;
d13440 1
a13440 1
return dev_storage + 793;
d13455 1
a13455 1
return dev_storage + 616;
d13482 1
a13482 1
return dev_storage + 600;
d13497 1
a13497 1
return dev_storage + 584;
d13512 1
a13512 1
return dev_storage + 568;
d13527 1
a13527 1
return dev_storage + 552;
d13668 1
a13668 1
return dev_storage + 536;
d13710 1
a13710 1
return dev_storage + 520;
d13725 1
a13725 1
return dev_storage + 504;
d13740 1
a13740 1
return dev_storage + 488;
d13755 1
a13755 1
return dev_storage + 472;
d13770 1
a13770 1
return dev_storage + 456;
d13785 1
a13785 1
return dev_storage + 440;
d13803 1
a13803 1
return dev_storage + 424;
d13839 1
a13839 1
return dev_storage + 408;
d13854 1
a13854 1
return dev_storage + 392;
d13869 1
a13869 1
return dev_storage + 376;
d13884 1
a13884 1
return dev_storage + 360;
d13899 1
a13899 1
return dev_storage + 344;
d13914 1
a13914 1
return dev_storage + 328;
d13929 1
a13929 1
return dev_storage + 312;
d13944 1
a13944 1
return dev_storage + 296;
d13962 1
a13962 1
return dev_storage + 280;
d13998 1
a13998 1
return dev_storage + 264;
d14013 1
a14013 1
return dev_storage + 248;
d14028 1
a14028 1
return dev_storage + 232;
d14046 1
a14046 1
return dev_storage + 774;
d14061 1
a14061 1
return dev_storage + 764;
d14076 1
a14076 1
return dev_storage + 754;
d14337 1
a14337 1
return dev_storage + 862;
d14376 1
a14376 1
return dev_storage + 861;
d14415 1
a14415 1
return dev_storage + 860;
d14454 1
a14454 1
return dev_storage + 859;
d14493 1
a14493 1
return dev_storage + 858;
d14532 1
a14532 1
return dev_storage + 857;
d14742 1
a14742 1
return dev_storage + 865;
d14757 1
a14757 1
return dev_storage + 864;
@


1.7
log
@	* devices.h (enum fh_devices): Remove DEV_RAWDRIVE_MAJOR and
	FH_RAWDRIVE.
	* devices.shilka (dev_rawdrive_storage): Remove.
	(unit_devices): Remove pointer to dev_rawdrive_storage.
	(uniq_devices): Remove rawdrive entry.
	* dtable.cc (build_fh_pc): Remove DEV_RAWDRIVE_MAJOR case.
	* path.cc (win32_device_name): ditto.
@
text
@d2 1
d20 1
a20 1
  {"/cygdrive", FH_CYGDRIVE, "/cygdrive", 0, 0, 0, 0};
d23 1
a23 1
  {"", FH_FS, "", 0, 0, 0, 0};
d26 1
a26 1
  {"", FH_PROC, "", 0, 0, 0, 0};
d29 1
a29 22
  {"", FH_REGISTRY, "", 0, 0, 0, 0};

const device dev_process_storage =
  {"", FH_PROCESS, "", 0, 0, 0, 0};

const device dev_tcp_storage =
  {"/dev/inet/tcp", FH_TCP, "", 0, 0, 0, 0};

const device dev_udp_storage =
  {"/dev/inet/udp", FH_UDP, "", 0, 0, 0, 0};

const device dev_icmp_storage =
  {"/dev/inet/icmp", FH_ICMP, "", 0, 0, 0, 0};

const device dev_unix_storage =
  {"/dev/inet/unix", FH_UNIX, "", 0, 0, 0, 0};

const device dev_stream_storage =
  {"/dev/inet/stream", FH_STREAM, "", 0, 0, 0, 0};

const device dev_dgram_storage =
  {"/dev/inet/dgram", FH_DGRAM, "", 0, 0, 0, 0};
d32 1
a32 1
  {"", FH_PIPER, "", 0, 0, 0, 0};
d35 1
a35 157
  {"", FH_PIPEW, "", 0, 0, 0, 0};

const device dev_tty_storage =
{"/dev/tty", FH_TTY, "\\dev\\tty", 0, 0, 0, 0};

const device dev_ttys_storage =
{"/dev/ttys", FH_TTYS, "\\dev\\tty%d", 0, 255, 0, 0};

const device dev_console_storage =
{"/dev/console", FH_CONSOLE, "\\dev\\console", 0, 0, 0, 0};

const device dev_ttym_storage =
{"/dev/ttym", FH_TTYM, "\\dev\\ttym", 0, 255, 0, 0};

const device dev_ptym_storage =
{"/dev/ptmx", FH_PTYM, "\\dev\\ptmx", 0, 0, 0, 0};

const device dev_windows_storage =
{"/dev/windows", FH_WINDOWS, "\\dev\\windows", 0, 0, 0, 0};

const device dev_oss_dsp_storage =
{"/dev/dsp", FH_OSS_DSP, "\\dev\\dsp", 0, 0, 0, 0};

const device dev_conin_storage =
{"/dev/conin", FH_CONIN, "conin", 0, 0, 0, 0};

const device dev_conout_storage =
{"/dev/conout", FH_CONOUT, "conout", 0, 0, 0, 0};

const device dev_null_storage =
{"/dev/null", FH_NULL, "nul", 0, 0, 0, 0};

const device dev_zero_storage =
{"/dev/zero", FH_ZERO, "\\dev\\zero", 0, 0, 0, 0};

const device dev_random_storage =
{"/dev/random", FH_RANDOM, "\\dev\\random", 0, 0, 0, 0};

const device dev_urandom_storage =
{"/dev/urandom", FH_URANDOM, "\\dev\\urandom", 0, 0, 0, 0};

const device dev_mem_storage =
{"/dev/mem", FH_MEM, "\\dev\\mem", 0, 0, 0, 0};

const device dev_kmem_storage =
{"/dev/kmem", FH_KMEM, "\\dev\\mem", 0, 0, 0, 0};

const device dev_clipboard_storage =
{"/dev/clipboard", FH_CLIPBOARD, "\\dev\\clipboard", 0, 0, 0, 0};

const device dev_port_storage =
{"/dev/port", FH_PORT, "\\dev\\port", 0, 0, 0, 0};

const device dev_serial_storage =
{"/dev/com", FH_SERIAL, "\\.\\com%d", 1, 99};

const device dev_ttyS_storage =
{"/dev/ttyS", FH_SERIAL, "\\.\\com%d", 0, 99, -1};

const device dev_pipe_storage =
{"/dev/pipe", FH_PIPE, "\\dev\\pipe", 0, 0, 0, 0};

const device dev_fifo_storage =
{"/dev/fifo", FH_FIFO, "\\dev\\fifo", 0, 0, 0, 0};

const device dev_tape_storage =
{"/dev/st", FH_TAPE, "\\Device\\Tape%d", 0, 127};

const device dev_nst_storage =
{"/dev/nst", FH_NTAPE, "\\Device\\Tape%d", 0, 127};

const device dev_floppy_storage =
{"/dev/fd", FH_FLOPPY, "\\Device\\Floppy%d", 0, 15};

const device dev_cdrom_storage =
{"/dev/scd", FH_CDROM, "\\Device\\CdRom%d", 0, 15};

const device dev_sr_storage =
{"/dev/sr", FH_CDROM, "\\Device\\CdRom%d", 0, 15};

const device dev_sda_storage =
{"/dev/sda", FH_SDA, "\\Device\\Harddisk%d\\Partition%d", 1, 15, 0};

const device dev_sdb_storage =
{"/dev/sdb", FH_SDB, "\\Device\\Harddisk%d\\Partition%d", 1, 15, 16};

const device dev_sdc_storage =
{"/dev/sdc", FH_SDC, "\\Device\\Harddisk%d\\Partition%d", 1, 15, 32};

const device dev_sdd_storage =
{"/dev/sdd", FH_SDD, "\\Device\\Harddisk%d\\Partition%d", 1, 15, 48};

const device dev_sde_storage =
{"/dev/sde", FH_SDE, "\\Device\\Harddisk%d\\Partition%d", 1, 15, 64};

const device dev_sdf_storage =
{"/dev/sdf", FH_SDF, "\\Device\\Harddisk%d\\Partition%d", 1, 15, 80};

const device dev_sdg_storage =
{"/dev/sdg", FH_SDG, "\\Device\\Harddisk%d\\Partition%d", 1, 15, 96};

const device dev_sdh_storage =
{"/dev/sdh", FH_SDH, "\\Device\\Harddisk%d\\Partition%d", 1, 15, 112};

const device dev_sdi_storage =
{"/dev/sdi", FH_SDI, "\\Device\\Harddisk%d\\Partition%d", 1, 15, 128};

const device dev_sdj_storage =
{"/dev/sdj", FH_SDJ, "\\Device\\Harddisk%d\\Partition%d", 1, 15, 144};

const device dev_sdk_storage =
{"/dev/sdk", FH_SDK, "\\Device\\Harddisk%d\\Partition%d", 1, 15, 160};

const device dev_sdl_storage =
{"/dev/sdl", FH_SDL, "\\Device\\Harddisk%d\\Partition%d", 1, 15, 176};

const device dev_sdm_storage =
{"/dev/sdm", FH_SDM, "\\Device\\Harddisk%d\\Partition%d", 1, 15, 192};

const device dev_sdn_storage =
{"/dev/sdn", FH_SDN, "\\Device\\Harddisk%d\\Partition%d", 1, 15, 208};

const device dev_sdo_storage =
{"/dev/sdo", FH_SDO, "\\Device\\Harddisk%d\\Partition%d", 1, 15, 224};

const device dev_sdp_storage =
{"/dev/sdp", FH_SDP, "\\Device\\Harddisk%d\\Partition%d", 1, 15, 240};

const device dev_sdq_storage =
{"/dev/sdq", FH_SDQ, "\\Device\\Harddisk%d\\Partition%d", 1, 15, 256};

const device dev_sdr_storage =
{"/dev/sdr", FH_SDR, "\\Device\\Harddisk%d\\Partition%d", 1, 15, 272};

const device dev_sds_storage =
{"/dev/sds", FH_SDS, "\\Device\\Harddisk%d\\Partition%d", 1, 15, 288};

const device dev_sdt_storage =
{"/dev/sdt", FH_SDT, "\\Device\\Harddisk%d\\Partition%d", 1, 15, 304};

const device dev_sdu_storage =
{"/dev/sdu", FH_SDU, "\\Device\\Harddisk%d\\Partition%d", 1, 15, 320};

const device dev_sdv_storage =
{"/dev/sdv", FH_SDV, "\\Device\\Harddisk%d\\Partition%d", 1, 15, 336};

const device dev_sdw_storage =
{"/dev/sdw", FH_SDW, "\\Device\\Harddisk%d\\Partition%d", 1, 15, 352};

const device dev_sdx_storage =
{"/dev/sdx", FH_SDX, "\\Device\\Harddisk%d\\Partition%d", 1, 15, 368};

const device dev_sdy_storage =
{"/dev/sdy", FH_SDY, "\\Device\\Harddisk%d\\Partition%d", 1, 15, 384};

const device dev_sdz_storage =
{"/dev/sdz", FH_SDZ, "\\Device\\Harddisk%d\\Partition%d", 1, 15, 400};
d38 1
a38 2
{":bad:", FH_BAD, ":bad:", 0, 0, 0, 0};
#define bad_dev (&dev_bad_storage)
d40 1
a40 1
const device *unit_devices[] =
d42 867
a908 7
  &dev_cdrom_storage,
  &dev_serial_storage,
  &dev_ttym_storage,
  &dev_ttys_storage,
  &dev_floppy_storage,
  &dev_tcp_storage,
  &dev_tape_storage
d911 10
a920 28
const device *uniq_devices[] = 
{
  &dev_bad_storage,
  &dev_fs_storage,
  &dev_process_storage,
  &dev_registry_storage,
  &dev_proc_storage,
  &dev_fifo_storage,
  &dev_pipew_storage,
  &dev_piper_storage,
  &dev_pipe_storage,
  &dev_mem_storage,
  &dev_kmem_storage,
  &dev_null_storage,
  &dev_zero_storage,
  &dev_port_storage,
  &dev_random_storage,
  &dev_urandom_storage,
  &dev_tty_storage,
  &dev_console_storage,
  &dev_ptym_storage,
  &dev_conout_storage,
  &dev_conin_storage,
  &dev_clipboard_storage,
  &dev_windows_storage,
  &dev_oss_dsp_storage,
  &dev_serial_storage
};
a927 54
    case 7:
      switch (KR_keyword [6])
        {
        case 't':
          if (strncmp (KR_keyword, "/dev/st", 7) == 0)
            {
{
return &dev_tape_storage;

}
            }
          else
            {
{
return	NULL;

}
            }
        case 'r':
          if (strncmp (KR_keyword, "/dev/sr", 7) == 0)
            {
{
return &dev_sr_storage;

}
            }
          else
            {
{
return	NULL;

}
            }
        case 'd':
          if (strncmp (KR_keyword, "/dev/fd", 7) == 0)
            {
{
return &dev_floppy_storage;

}
            }
          else
            {
{
return	NULL;

}
            }
        default:
{
return	NULL;

}
        }
d935 1
a935 1
return &dev_sdz_storage;
d953 1
a953 1
return &dev_tty_storage;
d968 1
a968 1
return &dev_sdy_storage;
d989 1
a989 1
return &dev_sdx_storage;
d1004 1
a1004 1
return &dev_sdw_storage;
d1019 1
a1019 1
return &dev_sdv_storage;
d1034 1
a1034 1
return &dev_sdu_storage;
d1046 1
a1046 1
          switch (KR_keyword [5])
a1047 3
            case 's':
              if (strncmp (KR_keyword, "/dev/sdt", 8) == 0)
                {
d1049 1
a1049 1
return &dev_sdt_storage;
d1052 3
a1054 24
                }
              else
                {
{
return	NULL;

}
                }
            case 'n':
              if (strncmp (KR_keyword, "/dev/nst", 8) == 0)
                {
{
return &dev_nst_storage;

}
                }
              else
                {
{
return	NULL;

}
                }
            default:
d1064 1
a1064 1
return &dev_sds_storage;
d1079 1
a1079 1
return &dev_sdr_storage;
d1094 1
a1094 1
return &dev_sdq_storage;
d1112 1
a1112 1
return &dev_sdp_storage;
d1127 1
a1127 1
return &dev_oss_dsp_storage;
d1148 1
a1148 1
return &dev_sdo_storage;
d1163 1
a1163 1
return &dev_sdn_storage;
d1181 1
a1181 1
return &dev_sdm_storage;
d1196 1
a1196 16
return &dev_mem_storage;

}
                }
              else
                {
{
return	NULL;

}
                }
            case 'c':
              if (strncmp (KR_keyword, "/dev/com", 8) == 0)
                {
{
return &dev_serial_storage;
d1217 1
a1217 1
return &dev_sdl_storage;
d1232 1
a1232 1
return &dev_sdk_storage;
d1247 1
a1247 1
return &dev_sdj_storage;
d1262 1
a1262 1
return &dev_sdi_storage;
d1277 1
a1277 1
return &dev_sdh_storage;
d1292 1
a1292 1
return &dev_sdg_storage;
d1307 1
a1307 1
return &dev_sdf_storage;
d1322 1
a1322 1
return &dev_sde_storage;
d1334 1
a1334 1
          switch (KR_keyword [6])
a1335 3
            case 'd':
              if (strncmp (KR_keyword, "/dev/sdd", 8) == 0)
                {
d1337 1
a1337 1
return &dev_sdd_storage;
d1340 3
a1342 24
                }
              else
                {
{
return	NULL;

}
                }
            case 'c':
              if (strncmp (KR_keyword, "/dev/scd", 8) == 0)
                {
{
return &dev_cdrom_storage;

}
                }
              else
                {
{
return	NULL;

}
                }
            default:
d1352 1
a1352 1
return &dev_sdc_storage;
d1367 1
a1367 1
return &dev_sdb_storage;
d1382 1
a1382 1
return &dev_sda_storage;
d1393 13
a1405 1
        default:
d1410 4
a1413 7
        }
    case 9:
      switch (KR_keyword [8])
        {
        case 'x':
          if (strncmp (KR_keyword, "/dev/ptmx", 9) == 0)
            {
d1415 1
a1415 1
return &dev_ptym_storage;
d1418 3
a1420 3
            }
          else
            {
d1425 11
a1435 4
            }
        case 't':
          if (strncmp (KR_keyword, "/dev/port", 9) == 0)
            {
d1437 1
a1437 1
return &dev_port_storage;
d1440 2
a1441 3
            }
          else
            {
d1447 2
a1448 2
        case 's':
          if (strncmp (KR_keyword, "/dev/ttys", 9) == 0)
d1450 3
d1454 1
a1454 1
return &dev_ttys_storage;
d1457 3
a1459 3
            }
          else
            {
d1464 3
a1466 6
            }
        case 'o':
          switch (KR_keyword [5])
            {
            case 'z':
              if (strncmp (KR_keyword, "/dev/zero", 9) == 0)
d1469 1
a1469 1
return &dev_zero_storage;
d1480 2
a1481 2
            case 'f':
              if (strncmp (KR_keyword, "/dev/fifo", 9) == 0)
d1484 1
a1484 1
return &dev_fifo_storage;
d1501 2
a1502 2
        case 'm':
          switch (KR_keyword [5])
d1505 1
a1505 1
              if (strncmp (KR_keyword, "/dev/ttym", 9) == 0)
d1508 1
a1508 1
return &dev_ttym_storage;
d1519 2
a1520 2
            case 'k':
              if (strncmp (KR_keyword, "/dev/kmem", 9) == 0)
d1523 1
a1523 1
return &dev_kmem_storage;
d1534 3
a1536 1
            default:
d1538 13481
a15018 1
return	NULL;
d15022 2
a15023 2
        case 'l':
          if (strncmp (KR_keyword, "/dev/null", 9) == 0)
d15025 151
d15177 1
a15177 1
return &dev_null_storage;
d15181 1
a15181 2
          else
            {
d15186 6
a15191 3
            }
        case 'e':
          if (strncmp (KR_keyword, "/dev/pipe", 9) == 0)
d15194 1
a15194 1
return &dev_pipe_storage;
d15205 2
a15206 2
        case 'S':
          if (strncmp (KR_keyword, "/dev/ttyS", 9) == 0)
d15209 1
a15209 1
return &dev_ttyS_storage;
d15220 3
a15222 1
        default:
d15224 1
a15224 1
return	NULL;
d15227 2
a15228 3
        }
    case 10:
          if (strncmp (KR_keyword, "/dev/conin", 10) == 0)
d15231 1
a15231 1
return &dev_conin_storage;
d15235 1
a15235 2
          else
            {
d15240 3
a15242 3
            }
    case 11:
      switch (KR_keyword [5])
d15244 2
a15245 2
        case 'r':
          if (strncmp (KR_keyword, "/dev/random", 11) == 0)
d15248 1
a15248 1
return &dev_random_storage;
d15259 2
a15260 2
        case 'c':
          if (strncmp (KR_keyword, "/dev/conout", 11) == 0)
d15263 1
a15263 1
return &dev_conout_storage;
d15280 2
a15281 2
    case 12:
      switch (KR_keyword [5])
d15283 2
a15284 2
        case 'w':
          if (strncmp (KR_keyword, "/dev/windows", 12) == 0)
d15287 1
a15287 1
return &dev_windows_storage;
d15298 2
a15299 2
        case 'u':
          if (strncmp (KR_keyword, "/dev/urandom", 12) == 0)
d15302 1
a15302 1
return &dev_urandom_storage;
d15313 2
a15314 2
        case 'c':
          if (strncmp (KR_keyword, "/dev/console", 12) == 0)
d15317 1
a15317 1
return &dev_console_storage;
d15334 17
a15350 2
    case 14:
          if (strncmp (KR_keyword, "/dev/clipboard", 14) == 0)
d15353 1
a15353 1
return &dev_clipboard_storage;
a15381 24
  unsigned unit = 0;

  if (!dev || !*dev)
    {
      size_t prior_len = len;
      while (len-- > 0 && isdigit (s[len]))
	continue;
      if (++len < prior_len)
	{
	  dev = KR_find_keyword (s, len);
	  if (!dev || (!dev->upper && dev->devn != FH_TTY))
	    dev = NULL;
	  else
	    {
	      unsigned n = atoi (s + len);
	      if (dev->devn == FH_TTY)
		dev = ttys_dev;         // SIGH
	      if (n >= dev->lower && n <= dev->upper)
		unit = n;
	      else
	        dev = NULL;
	    }
	}
    }
d15383 1
a15383 1
  if (!dev || !*dev)
d15388 1
a15388 5
    {
      *this = *dev;
      if (!setunit (unit))
	devn = 0;
    }
d15400 1
a15400 1
  _dev_t dev = FHDEV (major, 0);
d15404 2
a15405 12
  unsigned i;
  for (i = 0; i < (sizeof (unit_devices) / sizeof (unit_devices[0])); i++)
    if (unit_devices[i]->devn == dev)
      {
	*this = *unit_devices[i];
	this->setunit (minor);
	goto out;
      }

  dev = FHDEV (major, minor);
  for (i = 0; i < (sizeof (uniq_devices) / sizeof (uniq_devices[0])); i++)
    if (uniq_devices[i]->devn == dev)
d15407 1
a15407 1
	*this = *uniq_devices[i];
a15410 1
out:
d15426 1
a15426 1
    *this = myself->ctty < 0 ? *bad_dev : *console_dev;
d15428 1
a15428 4
    {
      *this = *ttys_dev;
      setunit (myself->ctty);
    }
d15430 1
@


1.6
log
@* sigproc.cc (proc_subproc): Restrict permissions on ppid_handle.
* devices.shilka (device::parse): Restore check for tty in unit handling, but
without the previous typo.
* devices.cc: Regenerate.
* devices.h (DEV_CYGDRIVE_MAJOR): Change major number to one used by linux for
"user-mode virtual block device".
@
text
@a212 3
const device dev_rawdrive_storage =
{"/dev/rawdrive", FH_RAWDRIVE, "\\DosDevices\\%c:", 0, 0, 0, 0};

a224 1
  &dev_rawdrive_storage,
a1135 15
    case 13:
          if (strncmp (KR_keyword, "/dev/rawdrive", 13) == 0)
            {
{
return &dev_rawdrive_storage;

}
            }
          else
            {
{
return	NULL;

}
            }
@


1.5
log
@	* devices.h: Move a few device major numbers.  Fix typo of FH_UDP.
	* device.shilka: Remove /dev/hd device entries, rename all device_hd*
	to device_sd*.
	(device::parse): Disallow units outside lower and upper bounds.
	* dtable.cc (build_fh_pc): Fix typo of FH_UDP.
	* path.cc (win32_device_name): Fix win32 name creation to match new
	device handling.
@
text
@d1198 1
a1198 1
	  if (!dev || (!dev->upper && !dev->devn == FH_TTY))
@


1.4
log
@* devices.shilka: Add /dev/sda disk devices.
* devices.cc: Regenerate.
@
text
@d37 1
a37 1
  {"/dev/inet/udp", FH_UCP, "", 0, 0, 0, 0};
d135 2
a136 2
const device dev_hda_storage =
{"/dev/hda", FH_SDA, "\\Device\\Harddisk%d\\Partition%d", 1, 16, -1};
d138 2
a139 2
const device dev_hdb_storage =
{"/dev/hdb", FH_SDB, "\\Device\\Harddisk%d\\Partition%d", 1, 16, 15};
d141 2
a142 2
const device dev_hdc_storage =
{"/dev/hdc", FH_SDC, "\\Device\\Harddisk%d\\Partition%d", 1, 16, 31};
d144 2
a145 2
const device dev_hdd_storage =
{"/dev/hdd", FH_SDD, "\\Device\\Harddisk%d\\Partition%d", 1, 16, 47};
d147 2
a148 2
const device dev_hde_storage =
{"/dev/hde", FH_SDE, "\\Device\\Harddisk%d\\Partition%d", 1, 16, 63};
d150 2
a151 2
const device dev_hdf_storage =
{"/dev/hdf", FH_SDF, "\\Device\\Harddisk%d\\Partition%d", 1, 16, 79};
d153 2
a154 2
const device dev_hdg_storage =
{"/dev/hdg", FH_SDG, "\\Device\\Harddisk%d\\Partition%d", 1, 16, 95};
d156 2
a157 2
const device dev_hdh_storage =
{"/dev/hdh", FH_SDH, "\\Device\\Harddisk%d\\Partition%d", 1, 16, 111};
d159 2
a160 2
const device dev_hdi_storage =
{"/dev/hdi", FH_SDI, "\\Device\\Harddisk%d\\Partition%d", 1, 16, 127};
d162 2
a163 2
const device dev_hdj_storage =
{"/dev/hdj", FH_SDJ, "\\Device\\Harddisk%d\\Partition%d", 1, 16, 143};
d165 2
a166 2
const device dev_hdk_storage =
{"/dev/hdk", FH_SDK, "\\Device\\Harddisk%d\\Partition%d", 1, 16, 159};
d168 2
a169 2
const device dev_hdl_storage =
{"/dev/hdl", FH_SDL, "\\Device\\Harddisk%d\\Partition%d", 1, 16, 175};
d171 2
a172 2
const device dev_hdm_storage =
{"/dev/hdm", FH_SDM, "\\Device\\Harddisk%d\\Partition%d", 1, 16, 191};
d174 2
a175 2
const device dev_hdn_storage =
{"/dev/hdn", FH_SDN, "\\Device\\Harddisk%d\\Partition%d", 1, 16, 207};
d177 2
a178 2
const device dev_hdo_storage =
{"/dev/hdo", FH_SDO, "\\Device\\Harddisk%d\\Partition%d", 1, 16, 223};
d180 2
a181 2
const device dev_hdp_storage =
{"/dev/hdp", FH_SDP, "\\Device\\Harddisk%d\\Partition%d", 1, 16, 239};
d183 2
a184 2
const device dev_hdq_storage =
{"/dev/hdq", FH_SDQ, "\\Device\\Harddisk%d\\Partition%d", 1, 16, 255  /* FIXME 8 bit lunacy */};
d186 2
a187 2
const device dev_hdr_storage =
{"/dev/hdr", FH_SDR, "\\Device\\Harddisk%d\\Partition%d", 1, 16, 271};
d189 2
a190 2
const device dev_hds_storage =
{"/dev/hds", FH_SDS, "\\Device\\Harddisk%d\\Partition%d", 1, 16, 287};
d192 2
a193 2
const device dev_hdt_storage =
{"/dev/hdt", FH_SDT, "\\Device\\Harddisk%d\\Partition%d", 1, 16, 303};
d195 2
a196 2
const device dev_hdu_storage =
{"/dev/hdu", FH_SDU, "\\Device\\Harddisk%d\\Partition%d", 1, 16, 319};
d198 2
a199 2
const device dev_hdv_storage =
{"/dev/hdv", FH_SDV, "\\Device\\Harddisk%d\\Partition%d", 1, 16, 335};
d201 2
a202 2
const device dev_hdw_storage =
{"/dev/hdw", FH_SDW, "\\Device\\Harddisk%d\\Partition%d", 1, 16, 351};
d204 2
a205 2
const device dev_hdx_storage =
{"/dev/hdx", FH_SDX, "\\Device\\Harddisk%d\\Partition%d", 1, 16, 367};
d207 2
a208 2
const device dev_hdy_storage =
{"/dev/hdy", FH_SDY, "\\Device\\Harddisk%d\\Partition%d", 1, 16, 383};
d210 2
a211 2
const device dev_hdz_storage =
{"/dev/hdz", FH_SDZ, "\\Device\\Harddisk%d\\Partition%d", 1, 16, 399};
d322 1
a322 1
      switch (KR_keyword [5])
d324 2
a325 17
        case 't':
          if (strncmp (KR_keyword, "/dev/tty", 8) == 0)
            {
{
return &dev_tty_storage;

}
            }
          else
            {
{
return	NULL;

}
            }
        case 's':
          switch (KR_keyword [7])
a326 372
            case 'z':
              if (strncmp (KR_keyword, "/dev/sdz", 8) == 0)
                {
{
return &dev_hdz_storage;

}
                }
              else
                {
{
return	NULL;

}
                }
            case 'y':
              if (strncmp (KR_keyword, "/dev/sdy", 8) == 0)
                {
{
return &dev_hdy_storage;

}
                }
              else
                {
{
return	NULL;

}
                }
            case 'x':
              if (strncmp (KR_keyword, "/dev/sdx", 8) == 0)
                {
{
return &dev_hdx_storage;

}
                }
              else
                {
{
return	NULL;

}
                }
            case 'w':
              if (strncmp (KR_keyword, "/dev/sdw", 8) == 0)
                {
{
return &dev_hdw_storage;

}
                }
              else
                {
{
return	NULL;

}
                }
            case 'v':
              if (strncmp (KR_keyword, "/dev/sdv", 8) == 0)
                {
{
return &dev_hdv_storage;

}
                }
              else
                {
{
return	NULL;

}
                }
            case 'u':
              if (strncmp (KR_keyword, "/dev/sdu", 8) == 0)
                {
{
return &dev_hdu_storage;

}
                }
              else
                {
{
return	NULL;

}
                }
            case 't':
              if (strncmp (KR_keyword, "/dev/sdt", 8) == 0)
                {
{
return &dev_hdt_storage;

}
                }
              else
                {
{
return	NULL;

}
                }
            case 's':
              if (strncmp (KR_keyword, "/dev/sds", 8) == 0)
                {
{
return &dev_hds_storage;

}
                }
              else
                {
{
return	NULL;

}
                }
            case 'r':
              if (strncmp (KR_keyword, "/dev/sdr", 8) == 0)
                {
{
return &dev_hdr_storage;

}
                }
              else
                {
{
return	NULL;

}
                }
            case 'q':
              if (strncmp (KR_keyword, "/dev/sdq", 8) == 0)
                {
{
return &dev_hdq_storage;

}
                }
              else
                {
{
return	NULL;

}
                }
            case 'p':
              if (strncmp (KR_keyword, "/dev/sdp", 8) == 0)
                {
{
return &dev_hdp_storage;

}
                }
              else
                {
{
return	NULL;

}
                }
            case 'o':
              if (strncmp (KR_keyword, "/dev/sdo", 8) == 0)
                {
{
return &dev_hdo_storage;

}
                }
              else
                {
{
return	NULL;

}
                }
            case 'n':
              if (strncmp (KR_keyword, "/dev/sdn", 8) == 0)
                {
{
return &dev_hdn_storage;

}
                }
              else
                {
{
return	NULL;

}
                }
            case 'm':
              if (strncmp (KR_keyword, "/dev/sdm", 8) == 0)
                {
{
return &dev_hdm_storage;

}
                }
              else
                {
{
return	NULL;

}
                }
            case 'l':
              if (strncmp (KR_keyword, "/dev/sdl", 8) == 0)
                {
{
return &dev_hdl_storage;

}
                }
              else
                {
{
return	NULL;

}
                }
            case 'k':
              if (strncmp (KR_keyword, "/dev/sdk", 8) == 0)
                {
{
return &dev_hdk_storage;

}
                }
              else
                {
{
return	NULL;

}
                }
            case 'j':
              if (strncmp (KR_keyword, "/dev/sdj", 8) == 0)
                {
{
return &dev_hdj_storage;

}
                }
              else
                {
{
return	NULL;

}
                }
            case 'i':
              if (strncmp (KR_keyword, "/dev/sdi", 8) == 0)
                {
{
return &dev_hdi_storage;

}
                }
              else
                {
{
return	NULL;

}
                }
            case 'h':
              if (strncmp (KR_keyword, "/dev/sdh", 8) == 0)
                {
{
return &dev_hdh_storage;

}
                }
              else
                {
{
return	NULL;

}
                }
            case 'g':
              if (strncmp (KR_keyword, "/dev/sdg", 8) == 0)
                {
{
return &dev_hdg_storage;

}
                }
              else
                {
{
return	NULL;

}
                }
            case 'f':
              if (strncmp (KR_keyword, "/dev/sdf", 8) == 0)
                {
{
return &dev_hdf_storage;

}
                }
              else
                {
{
return	NULL;

}
                }
            case 'e':
              if (strncmp (KR_keyword, "/dev/sde", 8) == 0)
                {
{
return &dev_hde_storage;

}
                }
              else
                {
{
return	NULL;

}
                }
            case 'd':
              switch (KR_keyword [6])
                {
                case 'd':
                  if (strncmp (KR_keyword, "/dev/sdd", 8) == 0)
                    {
{
return &dev_hdd_storage;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                case 'c':
                  if (strncmp (KR_keyword, "/dev/scd", 8) == 0)
                    {
{
return &dev_cdrom_storage;

}
                    }
                  else
                    {
{
return	NULL;

}
                    }
                default:
{
return	NULL;

}
                }
            case 'c':
              if (strncmp (KR_keyword, "/dev/sdc", 8) == 0)
                {
d328 1
a328 1
return &dev_hdc_storage;
d331 3
a333 3
                }
              else
                {
d338 6
a343 3
                }
            case 'b':
              if (strncmp (KR_keyword, "/dev/sdb", 8) == 0)
d346 1
a346 1
return &dev_hdb_storage;
d357 2
a358 2
            case 'a':
              if (strncmp (KR_keyword, "/dev/sda", 8) == 0)
d361 1
a361 1
return &dev_hda_storage;
d378 2
a379 2
        case 'n':
          if (strncmp (KR_keyword, "/dev/nst", 8) == 0)
d382 1
a382 1
return &dev_nst_storage;
d393 2
a394 2
        case 'm':
          if (strncmp (KR_keyword, "/dev/mem", 8) == 0)
d397 1
a397 1
return &dev_mem_storage;
d408 2
a409 2
        case 'h':
          switch (KR_keyword [7])
a410 3
            case 'z':
              if (strncmp (KR_keyword, "/dev/hdz", 8) == 0)
                {
d412 1
a412 1
return &dev_hdz_storage;
d415 3
a417 3
                }
              else
                {
d422 4
a425 4
                }
            case 'y':
              if (strncmp (KR_keyword, "/dev/hdy", 8) == 0)
                {
d427 1
a427 1
return &dev_hdy_storage;
d430 3
a432 3
                }
              else
                {
d437 6
a442 3
                }
            case 'x':
              if (strncmp (KR_keyword, "/dev/hdx", 8) == 0)
d445 1
a445 1
return &dev_hdx_storage;
d456 2
a457 2
            case 'w':
              if (strncmp (KR_keyword, "/dev/hdw", 8) == 0)
d460 1
a460 1
return &dev_hdw_storage;
d471 9
a479 3
            case 'v':
              if (strncmp (KR_keyword, "/dev/hdv", 8) == 0)
                {
d481 1
a481 1
return &dev_hdv_storage;
d484 3
a486 3
                }
              else
                {
d491 4
a494 4
                }
            case 'u':
              if (strncmp (KR_keyword, "/dev/hdu", 8) == 0)
                {
d496 1
a496 1
return &dev_hdu_storage;
d499 3
a501 3
                }
              else
                {
d506 4
a509 4
                }
            case 't':
              if (strncmp (KR_keyword, "/dev/hdt", 8) == 0)
                {
d511 1
a511 1
return &dev_hdt_storage;
d514 3
a516 3
                }
              else
                {
d521 4
a524 1
                }
d526 1
a526 1
              if (strncmp (KR_keyword, "/dev/hds", 8) == 0)
d529 1
a529 1
return &dev_hds_storage;
d540 2
a541 2
            case 'r':
              if (strncmp (KR_keyword, "/dev/hdr", 8) == 0)
d544 1
a544 1
return &dev_hdr_storage;
d555 1
a555 10
            case 'q':
              if (strncmp (KR_keyword, "/dev/hdq", 8) == 0)
                {
{
return &dev_hdq_storage;

}
                }
              else
                {
d560 4
a563 4
                }
            case 'p':
              if (strncmp (KR_keyword, "/dev/hdp", 8) == 0)
                {
d565 1
a565 1
return &dev_hdp_storage;
d568 3
a570 3
                }
              else
                {
d575 4
a578 4
                }
            case 'o':
              if (strncmp (KR_keyword, "/dev/hdo", 8) == 0)
                {
d580 1
a580 1
return &dev_hdo_storage;
d583 3
a585 3
                }
              else
                {
d590 6
a595 3
                }
            case 'n':
              if (strncmp (KR_keyword, "/dev/hdn", 8) == 0)
d598 1
a598 1
return &dev_hdn_storage;
d610 1
a610 1
              if (strncmp (KR_keyword, "/dev/hdm", 8) == 0)
d613 1
a613 1
return &dev_hdm_storage;
d624 2
a625 2
            case 'l':
              if (strncmp (KR_keyword, "/dev/hdl", 8) == 0)
d628 1
a628 1
return &dev_hdl_storage;
d639 9
a647 3
            case 'k':
              if (strncmp (KR_keyword, "/dev/hdk", 8) == 0)
                {
d649 1
a649 1
return &dev_hdk_storage;
d652 3
a654 3
                }
              else
                {
d659 4
a662 4
                }
            case 'j':
              if (strncmp (KR_keyword, "/dev/hdj", 8) == 0)
                {
d664 1
a664 1
return &dev_hdj_storage;
d667 3
a669 3
                }
              else
                {
d674 4
a677 4
                }
            case 'i':
              if (strncmp (KR_keyword, "/dev/hdi", 8) == 0)
                {
d679 1
a679 1
return &dev_hdi_storage;
d682 3
a684 3
                }
              else
                {
d689 4
a692 4
                }
            case 'h':
              if (strncmp (KR_keyword, "/dev/hdh", 8) == 0)
                {
d694 1
a694 1
return &dev_hdh_storage;
d697 3
a699 3
                }
              else
                {
d704 4
a707 4
                }
            case 'g':
              if (strncmp (KR_keyword, "/dev/hdg", 8) == 0)
                {
d709 1
a709 1
return &dev_hdg_storage;
d712 3
a714 3
                }
              else
                {
d719 4
a722 4
                }
            case 'f':
              if (strncmp (KR_keyword, "/dev/hdf", 8) == 0)
                {
d724 1
a724 1
return &dev_hdf_storage;
d727 3
a729 3
                }
              else
                {
d734 4
a737 4
                }
            case 'e':
              if (strncmp (KR_keyword, "/dev/hde", 8) == 0)
                {
d739 1
a739 1
return &dev_hde_storage;
d742 3
a744 3
                }
              else
                {
d749 4
a752 4
                }
            case 'd':
              if (strncmp (KR_keyword, "/dev/hdd", 8) == 0)
                {
d754 1
a754 1
return &dev_hdd_storage;
d757 3
a759 3
                }
              else
                {
d764 6
a769 3
                }
            case 'c':
              if (strncmp (KR_keyword, "/dev/hdc", 8) == 0)
d772 1
a772 1
return &dev_hdc_storage;
d783 2
a784 2
            case 'b':
              if (strncmp (KR_keyword, "/dev/hdb", 8) == 0)
d787 1
a787 1
return &dev_hdb_storage;
d798 1
a798 3
            case 'a':
              if (strncmp (KR_keyword, "/dev/hda", 8) == 0)
                {
d800 1
a800 1
return &dev_hda_storage;
d803 4
a806 3
                }
              else
                {
d808 1
a808 1
return	NULL;
d811 3
a813 2
                }
            default:
d819 2
a820 2
        case 'd':
          if (strncmp (KR_keyword, "/dev/dsp", 8) == 0)
d823 1
a823 1
return &dev_oss_dsp_storage;
d834 2
a835 2
        case 'c':
          if (strncmp (KR_keyword, "/dev/com", 8) == 0)
d838 1
a838 1
return &dev_serial_storage;
d1207 2
@


1.3
log
@* cygwin-shilka: Remove '#line directives' or suffer debugging oddities.  Use
-length option so that device prefixes are used.
* devices.cc: Regenerate.
* syscalls.cc (ttyname): Add debugging output.
@
text
@d322 1
a322 1
      switch (KR_keyword [7])
d324 2
a325 2
        case 'z':
          if (strncmp (KR_keyword, "/dev/hdz", 8) == 0)
d328 1
a328 1
return &dev_hdz_storage;
d339 2
a340 2
        case 'y':
          switch (KR_keyword [5])
d342 90
d433 113
a545 1
              if (strncmp (KR_keyword, "/dev/tty", 8) == 0)
d548 54
a601 1
return &dev_tty_storage;
d613 46
a658 1
              if (strncmp (KR_keyword, "/dev/hdy", 8) == 0)
d661 1
a661 1
return &dev_hdy_storage;
d672 49
a720 1
            default:
d725 4
a728 4
            }
        case 'x':
          if (strncmp (KR_keyword, "/dev/hdx", 8) == 0)
            {
d730 1
a730 1
return &dev_hdx_storage;
d733 3
a735 3
            }
          else
            {
d740 11
a750 4
            }
        case 'w':
          if (strncmp (KR_keyword, "/dev/hdw", 8) == 0)
            {
d752 1
a752 1
return &dev_hdw_storage;
d755 2
a756 3
            }
          else
            {
d762 2
a763 2
        case 'v':
          if (strncmp (KR_keyword, "/dev/hdv", 8) == 0)
d766 1
a766 1
return &dev_hdv_storage;
d777 2
a778 2
        case 'u':
          if (strncmp (KR_keyword, "/dev/hdu", 8) == 0)
d781 1
a781 1
return &dev_hdu_storage;
d792 2
a793 2
        case 't':
          switch (KR_keyword [5])
d795 2
a796 2
            case 'n':
              if (strncmp (KR_keyword, "/dev/nst", 8) == 0)
d799 1
a799 1
return &dev_nst_storage;
d810 2
a811 2
            case 'h':
              if (strncmp (KR_keyword, "/dev/hdt", 8) == 0)
d814 1
a814 1
return &dev_hdt_storage;
d825 10
a834 1
            default:
d839 4
a842 4
            }
        case 's':
          if (strncmp (KR_keyword, "/dev/hds", 8) == 0)
            {
d844 1
a844 1
return &dev_hds_storage;
d847 3
a849 3
            }
          else
            {
d854 4
a857 4
            }
        case 'r':
          if (strncmp (KR_keyword, "/dev/hdr", 8) == 0)
            {
d859 1
a859 1
return &dev_hdr_storage;
d862 3
a864 3
            }
          else
            {
d869 4
a872 4
            }
        case 'q':
          if (strncmp (KR_keyword, "/dev/hdq", 8) == 0)
            {
d874 1
a874 1
return &dev_hdq_storage;
d877 3
a879 3
            }
          else
            {
d884 3
a886 6
            }
        case 'p':
          switch (KR_keyword [5])
            {
            case 'h':
              if (strncmp (KR_keyword, "/dev/hdp", 8) == 0)
d889 1
a889 1
return &dev_hdp_storage;
d900 2
a901 2
            case 'd':
              if (strncmp (KR_keyword, "/dev/dsp", 8) == 0)
d904 1
a904 1
return &dev_oss_dsp_storage;
d915 10
a924 1
            default:
d929 4
a932 4
            }
        case 'o':
          if (strncmp (KR_keyword, "/dev/hdo", 8) == 0)
            {
d934 1
a934 1
return &dev_hdo_storage;
d937 3
a939 3
            }
          else
            {
d944 4
a947 4
            }
        case 'n':
          if (strncmp (KR_keyword, "/dev/hdn", 8) == 0)
            {
d949 1
a949 1
return &dev_hdn_storage;
d952 3
a954 3
            }
          else
            {
d959 3
a961 6
            }
        case 'm':
          switch (KR_keyword [5])
            {
            case 'm':
              if (strncmp (KR_keyword, "/dev/mem", 8) == 0)
d964 1
a964 1
return &dev_mem_storage;
d975 2
a976 2
            case 'h':
              if (strncmp (KR_keyword, "/dev/hdm", 8) == 0)
d979 1
a979 1
return &dev_hdm_storage;
d990 2
a991 2
            case 'c':
              if (strncmp (KR_keyword, "/dev/com", 8) == 0)
d994 1
a994 1
return &dev_serial_storage;
d1005 3
a1007 9
            default:
{
return	NULL;

}
            }
        case 'l':
          if (strncmp (KR_keyword, "/dev/hdl", 8) == 0)
            {
d1012 3
a1014 3
            }
          else
            {
d1019 4
a1022 4
            }
        case 'k':
          if (strncmp (KR_keyword, "/dev/hdk", 8) == 0)
            {
d1027 3
a1029 3
            }
          else
            {
d1034 4
a1037 4
            }
        case 'j':
          if (strncmp (KR_keyword, "/dev/hdj", 8) == 0)
            {
d1042 3
a1044 3
            }
          else
            {
d1049 4
a1052 4
            }
        case 'i':
          if (strncmp (KR_keyword, "/dev/hdi", 8) == 0)
            {
d1057 3
a1059 3
            }
          else
            {
d1064 4
a1067 4
            }
        case 'h':
          if (strncmp (KR_keyword, "/dev/hdh", 8) == 0)
            {
d1072 3
a1074 3
            }
          else
            {
d1079 4
a1082 4
            }
        case 'g':
          if (strncmp (KR_keyword, "/dev/hdg", 8) == 0)
            {
d1087 3
a1089 3
            }
          else
            {
d1094 4
a1097 4
            }
        case 'f':
          if (strncmp (KR_keyword, "/dev/hdf", 8) == 0)
            {
d1102 3
a1104 3
            }
          else
            {
d1109 4
a1112 4
            }
        case 'e':
          if (strncmp (KR_keyword, "/dev/hde", 8) == 0)
            {
d1117 3
a1119 3
            }
          else
            {
d1124 3
a1126 6
            }
        case 'd':
          switch (KR_keyword [5])
            {
            case 's':
              if (strncmp (KR_keyword, "/dev/scd", 8) == 0)
d1129 1
a1129 1
return &dev_cdrom_storage;
d1140 2
a1141 2
            case 'h':
              if (strncmp (KR_keyword, "/dev/hdd", 8) == 0)
d1144 1
a1144 1
return &dev_hdd_storage;
d1155 10
a1164 1
            default:
d1169 11
a1179 4
            }
        case 'c':
          if (strncmp (KR_keyword, "/dev/hdc", 8) == 0)
            {
d1181 1
a1181 1
return &dev_hdc_storage;
d1184 2
a1185 3
            }
          else
            {
d1191 2
a1192 2
        case 'b':
          if (strncmp (KR_keyword, "/dev/hdb", 8) == 0)
d1195 1
a1195 1
return &dev_hdb_storage;
d1206 2
a1207 2
        case 'a':
          if (strncmp (KR_keyword, "/dev/hda", 8) == 0)
d1210 1
a1210 1
return &dev_hda_storage;
@


1.2
log
@* devices.cc: New file.
* devices.gperf: New file.
* devices.shilka: New file.
* cygwin-gperf: New file.
* cygwin-shilka: New file.
* fhandler_fifo.cc: New file.
* fhandler_nodevice.cc : New file.  Reorganize headers so that path.h precedes
fhandler.h throughout.  Remove device argument and unit arguments from fhandler
constructors throughout.  Remove pc arguments to fhandler functions and use
internal pc element instead, throughout.  Use dev element in pc throughout.
Use major/minor elements rather than units and device numbers previously in
fhandler class.  Use correct methods for fhandler file names rather than
directly accessing file name variables, throughout.
* Makefile.in (DLL_OFILES): Add devices.o, fhandler_fifo.o
* dcrt0.cc (dll_crt0_1): Call device::init.
* devices.h: Renumber devices based on more Linux-like major/minor numbers.
Add more devices.  Declare standard device storage.
(device): Declare struct.
* dir.cc (opendir): Use new 'build_fh_name' to construct a fhandler_* type.
* dtable.cc (dtable::get_debugger_info): Ditto.
(cygwin_attach_handle_to_fd): Ditto.
(dtable::release): Remove special FH_SOCKET case in favor of generic
"need_fixup_before" test.
(dtable::init_std_file_from_handle): Use either build_fh_dev or build_fh_name
to build standard fhandler.
(dtable::build_fh_name): Renamed from dtable::build_fhandler_from_name.  Move
out of dtable class.  Don't accept a path_conv argument.  Just build it here
and pass it to:
(build_fh_pc): Renamed from dtable::build_fhandler.  Move out of dtable class.
Use intrinsic device type in path_conv to create new fhandler.
(build_fh_dev): Renamed from dtable::build_fhandler.  Move out of dtable class.
Simplify arguments to just take new 'device' type and a name.  Just return
pointer to fhandler rather than trying to insert into dtable.
(dtable::dup_worker): Accommodate above build_fh name changes.
(dtable::find_fifo): New (currently broken) function.
(handle_to_fn): Use strechr for efficiency.
* dtable.h: Reflect above build_fh name changes and argument differences.
(fhandler_base *&operator []): Return self rather than copy of self.
* fhandler.cc (fhandler_base::operator =): Use pc element to set normalized
path.
(fhandler_base::set_name): Ditto.
(fhandler_base::raw_read): Use method to access name.
(fhandler_base::write): Correctly use get_output_handle rather than get_handle.
(handler_base::device_access_denied): New function.
(fhandler_base::open): Eliminate pc argument and use pc element of
fhandler_base throughout.
(fhandler_base::fstat): Detect if device is based in filesystem and use
fstat_fs to calculate stat, if so.
(fhandler_base::fhandler_base): Eliminate handling of file names and, instead,
just free appropriate component from pc.
(fhandler_base::opendir): Remove path_conv parameter.
* fhandler.h: Remove all device flags.
(fhandler_base::pc): New element.
(fhandler_base::set_name): Change argument to path_conv.
(fhandler_base::error): New function.
(fhandler_base::exists): New function.
(fhandler_base::pc_binmode): New function.
(fhandler_base::dev): New function.
(fhandler_base::open_fs): New function.
(fhandler_base::fstat_fs): New function.
(fhandler_base::fstat_by_name): New function.
(fhandler_base::fstat_by_handle): New function.
(fhandler_base::isfifo): New function.
(fhandler_base::is_slow): New function.
(fhandler_base::is_auto_device): New function.
(fhandler_base::is_fs_special): New function.
(fhandler_base::device_access_denied): New function.
(fhandler_base::operator DWORD&): New operator.
(fhandler_base::get_name): Return normalized path from pc.
(fhandler_base::get_win32_name): Return windows path from pc.
(fhandler_base::isdevice): Renamed from is_device.
(fhandler_base::get_native_name): Return device format.
(fhandler_fifo): New class.
(fhandler_nodevice): New class.
(select_stuff::device_specific): Remove array.
(select_stuff::device_specific_pipe): New class element.
(select_stuff::device_specific_socket): New class element.
(select_stuff::device_specific_serial): New class element.
(select_stuff::select_stuff): Initialize new elements.
* fhandler_disk_file.cc (fhandler_base::fstat_by_handle): Move to base class
from fhandler_disk_file.
(fhandler_base::fstat_by_name): Ditto.
(fhandler_base::fstat_by_name): Ditto.
(fhandler_disk_file::open): Move most functionality into
fhandler_base::open_fs.
(fhandler_base::open_fs): New function.
(fhandler_disk_file::close): Move most functionality into
fhandler_base::close_fs.
(fhandler_base::close_fs): New function.
* fhandler_mem.cc (fhandler_dev_mem::open): Use device name in debugging
output.
* fhandler_socket.cc (fhandler_socket::set_connect_secret): Copy standard
urandom device into appropriate place.
(fhandler_socket::accept): Reflect change in fdsock return value.
* fhandler_tty.cc: See "throughouts" above.
* net.cc: Accommodate fdsock change throughout.
(fdsock): Return success or failure, accept fd argument and device argument.
* path.cc (symlink_info::major): New element.
(symlink_info::minor): New element.
(symlink_info::parse_device): Declare new function.
(fs_info::update): Accommodate changes in path_conv class.
(path_conv::fillin): Ditto.
(path_conv::return_and_clear_normalized_path): Eliminate.
(path_conv::set_normalized_path): New function.
(path_conv::path_conv): Set info in dev element.  Use path_conv methods Check
for FH_FS rather than FH_BAD to indicate when to fill in filesystem stuff.
where appropriate rather than direct access.  Use set_normalized_path to set
normalized path.
(windows_device_names): Eliminate.
(get_dev): Ditto.
(get_raw_device_number): Ditto.
(get_device_number): Ditto.
(win32_device_name): Call new device name parser to do most of the heavy
lifting.
(mount_info::conv_to_win32_path): Fill in dev field as appropriate.
(symlink_worker): Handle new device files.
(symlink_info::check): Ditto.
(symlink_info::parse_device): Define new function.
* path.h (executable_states): Move here from fhandler.h.
(fs_info): Rename variables to *_storage and create methods for accessing same.
(path_conv): Add dev element, remove devn and unit and adjust inline methods to
accommodate.
(set_normalized_path): Declare new function.
* pinfo.cc (_pinfo::commune_recv): Add broken support for handling fifos.
(_pinfo::commune_send): Ditto.
* pipe.cc (fhandler_pipe::close): check for existence of handle before closing
it.
(handler_pipe::create): Rename from make_pipe.  Change arguments to accept
fhandler_pipe array.  Accommodate fifos.
(pipe): Rework to deal with fhandler_pipe::create changes.
(_pipe): Ditto.
* select.cc: Use individual device_specific types throughout rather than
indexing with obsolete device number.
(set_bits): Use is_socket call rather than checking device number.
* shared_info.h (CURR_MOUNT_MAGIC): Update.
(conv_to_win32_path): Reflect addition of device argument.
* syscalls.cc (mknod_worker): New function.
(open): Use build_fh_name to build fhandler.
(chown_worker): Detect if this is an 'auto' device rather than an on-filesystem
device and handle appropriately.
(chmod_device): New function.
(chmod): Detect if this is an 'auto' device rather than an on-filesystem device
and handle appropriately.  Use chmod_device to set mode of in-filesystem
devices.
(stat_worker): Eliminate path_conv argument.  Call build_fh_name to construct
fhandler.  Use fh->error() rather than pc->error to detect errors in fhandler
construction.
(access_worker): New function pulled from access.  Accommodate in-filesystem
devices.
(access): Use access_worker.
(fpathconf): Detect if this is an 'auto' device rather than an on-filesystem
device and handle appropriately.
(mknod_worker): New function.
(mknod32): New function.
(chroot): Free normalized path -- assuming it was actually cmalloced.
* tty.cc (create_tty_master): Tweak for new device class.
(tty::common_init): Ditto.
* winsup.h (stat_worker): Remove.
(symlink_worker): Declare.
* exceptions.cc (set_process_mask): Just call sig_dispatch_pending and don't
worry about pending_signals since sig_dispatch_pending should always do the
right thing now.
(sig_handle): Reorganize SIGCONT handling to more closely conform to SUSv3.
* pinfo.h: Move __SIG enum to sigproc.h.
(PICOM_FIFO): New enum element.
(_pinfo): Remove 'thread2signal' stuff throughout class.
(_pinfo::commune_send): Make varargs.
(_pinfo::sigtodo): Eliminate.
(_pinfo::thread2signal): Ditto.
* signal.cc (kill_worker): Eliminate call to setthread2signal.
* sigproc.cc (local_sigtodo): Eliminate.
(getlocal_sigtodo): Ditto.
(sigelem): New class.
(pending_signals): New class.
(sigqueue): New variable, start of sigqueue linked list.
(sigcatch_nonmain): Eliminate.
(sigcatch_main): Eliminate.
(sigcatch_nosync): Eliminate.
(sigcomplete_nonmain): Eliminate.
(pending_signals): Eliminate.
(sig_clear): Call signal thread to clear pending signals, unless already in
signal thread.
(sigpending): Call signal thread to get pending signals.
(sig_dispatch_pending): Eliminate use of pending_signals and just check
sigqueue.
(sigproc_terminate): Eliminate all of the obsolete semaphore stuff.  Close
signal pipe handle.
(sig_send): Eliminate all of the obsolete semaphore stuff and use pipe to send
signals.
(getevent): Eliminate.
(pending_signals::add): New function.
(pending_signals::del): New function.
(pending_signals::next): New function.
(wait_sig): Eliminate all of the obsolete semaphore stuff.  Use pipe to
communicate and maintain a linked list of signals.
* sigproc.h: Move __SIG defines here.  Add __SIGPENDING.
(sig_dispatch_pending): Remove "C" specifier.
(sig_handle): Accept a mask argument.
* thread.cc: Remove signal handling considerations throughout.
@
text
@d1 1
a1 2
/* ANSI-C code produced by gperf version 2.7.2 */
/* Command-line: gperf -c --key-positions=5-8,1-2,9-10 -r -t -C -E -T -L ANSI-C -Hdevhash -Ndevice::lookup -Z devstring -7 -G /cygnus/src/uberbaum/winsup/cygwin/devices.gperf  */
d11 2
a12 4
#undef __GNUC__
static unsigned int devhash (const char *, unsigned)
  __attribute__ ((regparm (2)));
#define bad_dev (&dev_bad_storage)
d14 1
a14 38
enum
  {
    TOTAL_KEYWORDS = 54,
    MIN_WORD_LENGTH = 5,
    MAX_WORD_LENGTH = 14,
    MIN_HASH_VALUE = 106,
    MAX_HASH_VALUE = 288
  };

/* maximum key range = 183, duplicates = 0 */

#ifdef __GNUC__
__inline
#else
#ifdef __cplusplus
inline
#endif
#endif
static unsigned int
devhash (register const char *str, register unsigned int len)
{
  static const unsigned short asso_values[] =
    {
      289, 289, 289, 289, 289, 289, 289, 289, 289, 289,
      289, 289, 289, 289, 289, 289, 289, 289, 289, 289,
      289, 289, 289, 289, 289, 289, 289, 289, 289, 289,
      289, 289, 289, 289, 289, 289, 289, 289, 289, 289,
      289, 289, 289, 289, 289, 289, 289,   2, 289, 289,
      289, 289, 289, 289, 289, 289, 289, 289,  62, 289,
      289, 289, 289, 289, 289, 289, 289, 289, 289, 289,
      289, 289, 289, 289, 289, 289, 289, 289, 289, 289,
      289, 289, 289,  27, 289, 289, 289, 289, 289, 289,
      289, 289, 289, 289, 289, 289, 289,  29,  28,  12,
       45,  59,  32,  39,  24,  11,  19,  53,  55,   2,
       57,  35,  21,  54,  62,   9,  52,   8,  37,  10,
       16,  33,  43, 289, 289, 289, 289, 289
    };
  register int hval = len;
a15 25
  switch (hval)
    {
      default:
      case 10:
        hval += asso_values[(unsigned) cyg_tolower (str[9])];
      case 9:
        hval += asso_values[(unsigned) cyg_tolower (str[8])];
      case 8:
        hval += asso_values[(unsigned) cyg_tolower (str[7])];
      case 7:
        hval += asso_values[(unsigned) cyg_tolower (str[6])];
      case 6:
        hval += asso_values[(unsigned) cyg_tolower (str[5])];
      case 5:
        hval += asso_values[(unsigned) cyg_tolower (str[4])];
      case 4:
      case 3:
      case 2:
        hval += asso_values[(unsigned) cyg_tolower (str[1])];
      case 1:
        hval += asso_values[(unsigned) cyg_tolower (str[0])];
        break;
    }
  return hval;
}
a16 108
static NO_COPY const struct device wordlist[] =
  {
    {""}, {""}, {""}, {""}, {""}, {""}, {""}, {""}, {""},
    {""}, {""}, {""}, {""}, {""}, {""}, {""}, {""}, {""},
    {""}, {""}, {""}, {""}, {""}, {""}, {""}, {""}, {""},
    {""}, {""}, {""}, {""}, {""}, {""}, {""}, {""}, {""},
    {""}, {""}, {""}, {""}, {""}, {""}, {""}, {""}, {""},
    {""}, {""}, {""}, {""}, {""}, {""}, {""}, {""}, {""},
    {""}, {""}, {""}, {""}, {""}, {""}, {""}, {""}, {""},
    {""}, {""}, {""}, {""}, {""}, {""}, {""}, {""}, {""},
    {""}, {""}, {""}, {""}, {""}, {""}, {""}, {""}, {""},
    {""}, {""}, {""}, {""}, {""}, {""}, {""}, {""}, {""},
    {""}, {""}, {""}, {""}, {""}, {""}, {""}, {""}, {""},
    {""}, {""}, {""}, {""}, {""}, {""}, {""},
    {"/dev/com", FH_SERIAL, "\\.\\com%d", 1, 99},
    {""}, {""}, {""}, {""}, {""}, {""}, {""}, {""}, {""},
    {""},
    {"/dev/st", FH_TAPE, "\\Device\\Tape%d", 0, 127},
    {""}, {""},
    {"/dev/mem", FH_MEM, "\\dev\\mem", 0, 0, 0, 0},
    {""}, {""},
    {"/dev/scd", FH_CDROM, "\\Device\\CdRom%d", 0, 15},
    {""}, {""}, {""},
    {"/dev/sr", FH_CDROM, "\\Device\\CdRom%d", 0, 15},
    {"/dev/hdm", FH_SDM, "\\Device\\Harddisk%d\\Partition%d", 1, 16, 191},
    {""}, {""}, {""},
    {"/dev/dsp", FH_OSS_DSP, "\\dev\\dsp", 0, 0, 0, 0},
    {"/dev/fd", FH_FLOPPY, "\\Device\\Floppy%d", 0, 15},
    {"/dev/hdu", FH_SDU, "\\Device\\Harddisk%d\\Partition%d", 1, 16, 319},
    {"/dev/hds", FH_SDS, "\\Device\\Harddisk%d\\Partition%d", 1, 16, 287},
    {"/dev/hdw", FH_SDW, "\\Device\\Harddisk%d\\Partition%d", 1, 16, 351},
    {"/dev/hdi", FH_SDI, "\\Device\\Harddisk%d\\Partition%d", 1, 16, 127},
    {"/dev/hdc", FH_SDC, "\\Device\\Harddisk%d\\Partition%d", 1, 16, 31},
    {""}, {""}, {""},
    {"/dev/hdx", FH_SDX, "\\Device\\Harddisk%d\\Partition%d", 1, 16, 367},
    {""}, {""},
    {"/dev/hdj", FH_SDJ, "\\Device\\Harddisk%d\\Partition%d", 1, 16, 143},
    {""},
    {"/dev/hdp", FH_SDP, "\\Device\\Harddisk%d\\Partition%d", 1, 16, 239},
    {""},
    {"/dev/ptmx", FH_PTYM, "\\dev\\ptmx", 0, 0, 0, 0},
    {"/dev/hdh", FH_SDH, "\\Device\\Harddisk%d\\Partition%d", 1, 16, 111},
    {""}, {""}, {""},
    {"/dev/hdb", FH_SDB, "\\Device\\Harddisk%d\\Partition%d", 1, 16, 15},
    {"/dev/hda", FH_SDA, "\\Device\\Harddisk%d\\Partition%d", 1, 16, -1},
    {""},
    {":bad:", FH_BAD, ":bad:", 0, 0, 0, 0},
    {"/dev/hdf", FH_SDF, "\\Device\\Harddisk%d\\Partition%d", 1, 16, 79},
    {"/dev/hdy", FH_SDY, "\\Device\\Harddisk%d\\Partition%d", 1, 16, 383},
    {""},
    {"/dev/hdo", FH_SDO, "\\Device\\Harddisk%d\\Partition%d", 1, 16, 223},
    {""},
    {"/dev/hdv", FH_SDV, "\\Device\\Harddisk%d\\Partition%d", 1, 16, 335},
    {""},
    {"/dev/hdg", FH_SDG, "\\Device\\Harddisk%d\\Partition%d", 1, 16, 95},
    {""}, {""},
    {"/dev/fifo", FH_FIFO, "\\dev\\fifo", 0, 0, 0, 0},
    {"/dev/hdz", FH_SDZ, "\\Device\\Harddisk%d\\Partition%d", 1, 16, 399},
    {"/dev/pipe", FH_PIPE, "\\dev\\pipe", 0, 0, 0, 0},
    {"/dev/hdd", FH_SDD, "\\Device\\Harddisk%d\\Partition%d", 1, 16, 47},
    {""}, {""},
    {"/dev/kmem", FH_KMEM, "\\dev\\mem", 0, 0, 0, 0},
    {"/dev/nst", FH_NTAPE, "\\Device\\Tape%d", 0, 127},
    {""}, {""},
    {"/dev/hdt", FH_SDT, "\\Device\\Harddisk%d\\Partition%d", 1, 16, 303},
    {"/dev/hdk", FH_SDK, "\\Device\\Harddisk%d\\Partition%d", 1, 16, 159},
    {"/dev/hdq", FH_SDQ, "\\Device\\Harddisk%d\\Partition%d", 1, 16, 255  /* FIXME 8 bit lunacy */},
    {"/dev/hdl", FH_SDL, "\\Device\\Harddisk%d\\Partition%d", 1, 16, 175},
    {""},
    {"/dev/hdn", FH_SDN, "\\Device\\Harddisk%d\\Partition%d", 1, 16, 207},
    {""},
    {"/dev/hde", FH_SDE, "\\Device\\Harddisk%d\\Partition%d", 1, 16, 63},
    {""}, {""},
    {"/dev/hdr", FH_SDR, "\\Device\\Harddisk%d\\Partition%d", 1, 16, 271},
    {""},
    {"/dev/clipboard", FH_CLIPBOARD, "\\dev\\clipboard", 0, 0, 0, 0},
    {""}, {""}, {""},
    {"/dev/tty", FH_TTY, "\\dev\\tty", 0, 0, 0, 0},
    {""}, {""},
    {"/dev/ttym", FH_TTYM, "\\dev\\ttym", 0, 255, 0, 0},
    {""}, {""}, {""}, {""}, {""}, {""},
    {"/dev/ttys", FH_TTYS, "\\dev\\tty%d", 0, 255, 0, 0},
    {""}, {""},
    {"/dev/conout", FH_CONOUT, "conout", 0, 0, 0, 0},
    {""},
    {"/dev/console", FH_CONSOLE, "\\dev\\console", 0, 0, 0, 0},
    {""}, {""}, {""}, {""}, {""}, {""}, {""}, {""}, {""},
    {"/dev/windows", FH_WINDOWS, "\\dev\\windows", 0, 0, 0, 0},
    {""}, {""},
    {"/dev/ttyS", FH_SERIAL, "\\.\\com%d", 0, 99, -1},
    {""}, {""}, {""}, {""}, {""},
    {"/dev/port", FH_PORT, "\\dev\\port", 0, 0, 0, 0},
    {""}, {""},
    {"/dev/conin", FH_CONIN, "conin", 0, 0, 0, 0},
    {""},
    {"/dev/null", FH_NULL, "nul", 0, 0, 0, 0},
    {""}, {""}, {""}, {""}, {""}, {""}, {""}, {""}, {""},
    {""}, {""}, {""}, {""}, {""}, {""}, {""}, {""}, {""},
    {""}, {""}, {""}, {""}, {""},
    {"/dev/zero", FH_ZERO, "\\dev\\zero", 0, 0, 0, 0},
    {""}, {""}, {""}, {""},
    {"/dev/urandom", FH_URANDOM, "\\dev\\urandom", 0, 0, 0, 0},
    {""}, {""}, {""}, {""}, {""}, {""}, {""},
    {"/dev/rawdrive", FH_RAWDRIVE, "\\DosDevices\\%c:", 0, 0, 0, 0},
    {""}, {""}, {""}, {""}, {""}, {""}, {""}, {""}, {""},
    {""}, {""}, {""}, {""}, {""}, {""}, {""}, {""},
    {"/dev/random", FH_RANDOM, "\\dev\\random", 0, 0, 0, 0}
  };
d57 162
a218 56
const device dev_fs =
  {"", FH_FS, "", 0, 0, 0, 0};
const device dev_bad_storage = wordlist[157];
const device dev_cdrom_storage = wordlist[123];
const device dev_cdrom1_storage = wordlist[127];
const device dev_clipboard_storage = wordlist[190];
const device dev_conin_storage = wordlist[231];
const device dev_conout_storage = wordlist[207];
const device dev_console_storage = wordlist[209];
const device dev_fifo_storage = wordlist[168];
const device dev_floppy_storage = wordlist[133];
const device dev_kmem_storage = wordlist[174];
const device dev_mem_storage = wordlist[120];
const device dev_ntape_storage = wordlist[175];
const device dev_null_storage = wordlist[233];
const device dev_oss_dsp_storage = wordlist[132];
const device dev_pipe_storage = wordlist[170];
const device dev_port_storage = wordlist[228];
const device dev_ptym_storage = wordlist[149];
const device dev_random_storage = wordlist[288];
const device dev_rawdrive_storage = wordlist[270];
const device dev_sda_storage = wordlist[155];
const device dev_sdb_storage = wordlist[154];
const device dev_sdc_storage = wordlist[138];
const device dev_sdd_storage = wordlist[171];
const device dev_sde_storage = wordlist[185];
const device dev_sdf_storage = wordlist[158];
const device dev_sdg_storage = wordlist[165];
const device dev_sdh_storage = wordlist[150];
const device dev_sdi_storage = wordlist[137];
const device dev_sdj_storage = wordlist[145];
const device dev_sdk_storage = wordlist[179];
const device dev_sdl_storage = wordlist[181];
const device dev_sdm_storage = wordlist[128];
const device dev_sdn_storage = wordlist[183];
const device dev_sdo_storage = wordlist[161];
const device dev_sdp_storage = wordlist[147];
const device dev_sdq_storage = wordlist[180];
const device dev_sdr_storage = wordlist[188];
const device dev_sds_storage = wordlist[135];
const device dev_sdt_storage = wordlist[178];
const device dev_sdu_storage = wordlist[134];
const device dev_sdv_storage = wordlist[163];
const device dev_sdw_storage = wordlist[136];
const device dev_sdx_storage = wordlist[142];
const device dev_sdy_storage = wordlist[159];
const device dev_sdz_storage = wordlist[169];
const device dev_serial_storage = wordlist[106];
const device dev_serial1_storage = wordlist[222];
const device dev_tape_storage = wordlist[117];
const device dev_tty_storage = wordlist[194];
const device dev_ttym_storage = wordlist[197];
const device dev_ttys_storage = wordlist[204];
const device dev_urandom_storage = wordlist[262];
const device dev_windows_storage = wordlist[219];
const device dev_zero_storage = wordlist[257];
d222 8
a229 8
  &wordlist[123] /* cdrom */,
  &wordlist[106] /* serial */,
  &wordlist[197] /* ttym */,
  &wordlist[204] /* ttys */,
  &wordlist[133] /* floppy */,
  &dev_tcp_storage /* tcp */,
  &wordlist[270] /* rawdrive */,
  &wordlist[117] /* tape */
d234 25
a258 25
  &wordlist[157] /* bad */,
  &dev_fs_storage /* fs */,
  &dev_process_storage /* process */,
  &dev_registry_storage /* registry */,
  &dev_proc_storage /* proc */,
  &wordlist[168] /* fifo */,
  &dev_pipew_storage /* pipew */,
  &dev_piper_storage /* piper */,
  &wordlist[170] /* pipe */,
  &wordlist[120] /* mem */,
  &wordlist[174] /* kmem */,
  &wordlist[233] /* null */,
  &wordlist[257] /* zero */,
  &wordlist[228] /* port */,
  &wordlist[288] /* random */,
  &wordlist[262] /* urandom */,
  &wordlist[194] /* tty */,
  &wordlist[209] /* console */,
  &wordlist[149] /* ptym */,
  &wordlist[207] /* conout */,
  &wordlist[231] /* conin */,
  &wordlist[190] /* clipboard */,
  &wordlist[219] /* windows */,
  &wordlist[132] /* oss_dsp */,
  &wordlist[106] /* serial */
d261 2
a262 5
#ifdef __GNUC__
__inline
#endif
const struct device *
device::lookup (register const char *str, register unsigned int len)
d264 2
a265 1
  if (len <= MAX_WORD_LENGTH && len >= MIN_WORD_LENGTH)
d267 30
a296 1
      register int key = devhash (str, len);
d298 25
a322 1
      if (key <= MAX_HASH_VALUE && key >= 0)
d324 30
a353 1
          register const char *s = wordlist[key].name;
d355 676
a1030 2
          if (strncasematch (str, s, len))
            return &wordlist[key];
d1032 143
a1175 1
  return 0;
d1177 6
d1187 1
a1187 1
  const device *dev = lookup (s, len);
d1197 1
a1197 1
	  dev = lookup (s, len);
d1252 1
a1252 1
  
d1276 2
@


1.1
log
@* syscalls.cc (system): Strip signal considerations from here so that they are
not inherited by a child process.
* spawn.cc (spawn_guts): Handle system() signal stuff here.
* winsup.h (_P_SYSTEM): Define.
@
text
@d15 2
d22 2
a23 2
    MIN_HASH_VALUE = 131,
    MAX_HASH_VALUE = 358
d26 1
a26 1
/* maximum key range = 228, duplicates = 0 */
d40 13
a52 13
      359, 359, 359, 359, 359, 359, 359, 359, 359, 359,
      359, 359, 359, 359, 359, 359, 359, 359, 359, 359,
      359, 359, 359, 359, 359, 359, 359, 359, 359, 359,
      359, 359, 359, 359, 359, 359, 359, 359, 359, 359,
      359, 359, 359, 359, 359, 359, 359,  60, 359, 359,
      359, 359, 359, 359, 359, 359, 359, 359,  62, 359,
      359, 359, 359, 359, 359, 359, 359, 359, 359, 359,
      359, 359, 359, 359, 359, 359, 359, 359, 359, 359,
      359, 359, 359,  15, 359, 359, 359, 359, 359, 359,
      359, 359, 359, 359, 359, 359, 359,   0,   2,  46,
       42,  50,   3,   4,  36,  15,  10,  41,  61,  13,
       26,  30,  52,  57,  45,  27,  59,  39,  51,  38,
       32,  18,  14, 359, 359, 359, 359, 359
a94 16
    {""}, {""}, {""}, {""}, {""}, {""}, {""}, {""}, {""},
    {""}, {""}, {""}, {""}, {""}, {""}, {""}, {""}, {""},
    {""}, {""}, {""}, {""}, {""}, {""}, {""}, {""}, {""},
    {""}, {""}, {""}, {""}, {""},
    {":bad:", FH_BAD, ":bad:", 0, 0, 0, 0},
    {""}, {""}, {""}, {""}, {""}, {""}, {""}, {""}, {""},
    {""}, {""}, {""}, {""}, {""}, {""}, {""}, {""}, {""},
    {""}, {""}, {""}, {""}, {""}, {""}, {""}, {""}, {""},
    {""}, {""}, {""}, {""}, {""}, {""}, {""}, {""}, {""},
    {""}, {""}, {""}, {""}, {""}, {""}, {""}, {""}, {""},
    {""}, {""}, {""}, {""}, {""}, {""}, {""}, {""}, {""},
    {""}, {""}, {""}, {""}, {""}, {""}, {""}, {""}, {""},
    {""}, {""}, {""}, {""}, {""}, {""}, {""}, {""}, {""},
    {""}, {""}, {""}, {""}, {""}, {""}, {""}, {""}, {""},
    {""},
    {"/dev/fd", FH_FLOPPY, "\\Device\\Floppy%d", 0, 15},
d96 1
a96 2
    {"/dev/fifo", FH_FIFO, "\\dev\\fifo", 0, 0, 0, 0},
    {""}, {""}, {""}, {""}, {""}, {""}, {""}, {""}, {""},
a97 3
    {"/dev/sr", FH_CDROM, "\\Device\\CdRom%d", 0, 15},
    {""}, {""}, {""}, {""},
    {"/dev/mem", FH_MEM, "\\dev\\mem", 0, 0, 0, 0},
d99 1
a99 5
    {"/dev/hda", FH_SDA, "\\Device\\Harddisk%d\\Partition%d", 1, 16, -1},
    {""},
    {"/dev/hdb", FH_SDB, "\\Device\\Harddisk%d\\Partition%d", 1, 16, 15},
    {"/dev/hdf", FH_SDF, "\\Device\\Harddisk%d\\Partition%d", 1, 16, 79},
    {"/dev/hdg", FH_SDG, "\\Device\\Harddisk%d\\Partition%d", 1, 16, 95},
d101 1
a101 1
    {"/dev/st", FH_TAPE, "\\Device\\Tape%d", 0, 127},
d103 3
a105 3
    {"/dev/hdj", FH_SDJ, "\\Device\\Harddisk%d\\Partition%d", 1, 16, 143},
    {"/dev/com", FH_SERIAL, "\\.\\com%d", 1, 99},
    {""},
d107 6
a112 1
    {"/dev/hdz", FH_SDZ, "\\Device\\Harddisk%d\\Partition%d", 1, 16, 399},
d114 3
d118 12
d131 1
a131 4
    {""}, {""}, {""}, {""}, {""}, {""}, {""},
    {"/dev/hdn", FH_SDN, "\\Device\\Harddisk%d\\Partition%d", 1, 16, 207},
    {"/dev/hds", FH_SDS, "\\Device\\Harddisk%d\\Partition%d", 1, 16, 287},
    {""}, {""},
d134 1
a134 1
    {"/dev/hdx", FH_SDX, "\\Device\\Harddisk%d\\Partition%d", 1, 16, 367},
d136 8
d145 5
d151 1
a151 8
    {"/dev/hdh", FH_SDH, "\\Device\\Harddisk%d\\Partition%d", 1, 16, 111},
    {"/dev/scd", FH_CDROM, "\\Device\\CdRom%d", 0, 15},
    {"/dev/hdw", FH_SDW, "\\Device\\Harddisk%d\\Partition%d", 1, 16, 351},
    {"/dev/hdu", FH_SDU, "\\Device\\Harddisk%d\\Partition%d", 1, 16, 319},
    {"/dev/kmem", FH_KMEM, "\\dev\\mem", 0, 0, 0, 0},
    {"/dev/hdk", FH_SDK, "\\Device\\Harddisk%d\\Partition%d", 1, 16, 159},
    {"/dev/hdd", FH_SDD, "\\Device\\Harddisk%d\\Partition%d", 1, 16, 47},
    {"/dev/dsp", FH_OSS_DSP, "\\dev\\dsp", 0, 0, 0, 0},
d153 2
d156 2
a157 1
    {"/dev/hdc", FH_SDC, "\\Device\\Harddisk%d\\Partition%d", 1, 16, 31},
a158 5
    {"/dev/hde", FH_SDE, "\\Device\\Harddisk%d\\Partition%d", 1, 16, 63},
    {"/dev/hdv", FH_SDV, "\\Device\\Harddisk%d\\Partition%d", 1, 16, 335},
    {"/dev/hdp", FH_SDP, "\\Device\\Harddisk%d\\Partition%d", 1, 16, 239},
    {""}, {""}, {""}, {""},
    {"/dev/hdq", FH_SDQ, "\\Device\\Harddisk%d\\Partition%d", 1, 16, 255  /* FIXME 8 bit lunacy */},
d160 1
a160 8
    {"/dev/hdt", FH_SDT, "\\Device\\Harddisk%d\\Partition%d", 1, 16, 303},
    {""},
    {"/dev/hdl", FH_SDL, "\\Device\\Harddisk%d\\Partition%d", 1, 16, 175},
    {"/dev/zero", FH_ZERO, "\\dev\\zero", 0, 0, 0, 0},
    {""}, {""}, {""}, {""},
    {"/dev/conin", FH_CONIN, "conin", 0, 0, 0, 0},
    {"/dev/random", FH_RANDOM, "\\dev\\random", 0, 0, 0, 0},
    {""}, {""}, {""},
d162 4
d167 4
d172 2
d175 8
a182 1
    {"/dev/windows", FH_WINDOWS, "\\dev\\windows", 0, 0, 0, 0},
d184 1
a184 8
    {"/dev/ptmx", FH_PTYM, "\\dev\\ptmx", 0, 0, 0, 0},
    {""}, {""}, {""}, {""}, {""},
    {"/dev/console", FH_CONSOLE, "\\dev\\console", 0, 0, 0, 0},
    {"/dev/ttys", FH_TTYS, "\\dev\\tty%d", 0, 255, 0, 0},
    {""}, {""}, {""}, {""}, {""},
    {"/dev/pipe", FH_PIPE, "\\dev\\pipe", 0, 0, 0, 0},
    {""}, {""}, {""},
    {"/dev/conout", FH_CONOUT, "conout", 0, 0, 0, 0},
d186 3
a188 5
    {""}, {""}, {""}, {""}, {""}, {""},
    {"/dev/clipboard", FH_CLIPBOARD, "\\dev\\clipboard", 0, 0, 0, 0},
    {""}, {""}, {""}, {""},
    {"/dev/port", FH_PORT, "\\dev\\port", 0, 0, 0, 0},
    {"/dev/null", FH_NULL, "nul", 0, 0, 0, 0}
d191 1
a191 1
static const device cygdrive_dev_storage =
d194 1
a194 1
static const device fs_dev_storage =
d197 1
a197 1
static const device proc_dev_storage =
d200 1
a200 1
static const device registry_dev_storage =
d203 1
a203 1
static const device process_dev_storage =
d206 1
a206 1
static const device tcp_dev_storage =
d209 1
a209 1
static const device udp_dev_storage =
d212 1
a212 1
static const device icmp_dev_storage =
d215 1
a215 1
static const device unix_dev_storage =
d218 1
a218 1
static const device stream_dev_storage =
d221 1
a221 1
static const device dgram_dev_storage =
d224 1
a224 1
static const device piper_dev_storage =
d227 1
a227 1
static const device pipew_dev_storage =
d230 1
a230 1
static const device dev_fs =
d232 54
a285 67
const device *bad_dev = wordlist + 131;
const device *cdrom_dev = wordlist + 241;
const device *cdrom_dev1 = wordlist + 285;
const device *clipboard_dev = wordlist + 352;
const device *conin_dev = wordlist + 315;
const device *conout_dev = wordlist + 344;
const device *console_dev = wordlist + 333;
const device *cygdrive_dev = &cygdrive_dev_storage;
const device *dgram_dev = &dgram_dev_storage;
const device *fifo_dev = wordlist + 222;
const device *floppy_dev = wordlist + 214;
const device *fs_dev = &fs_dev_storage;
const device *icmp_dev = &icmp_dev_storage;
const device *kmem_dev = wordlist + 288;
const device *mem_dev = wordlist + 246;
const device *ntape_dev = wordlist + 282;
const device *null_dev = wordlist + 358;
const device *oss_dsp_dev = wordlist + 291;
const device *pipe_dev = wordlist + 340;
const device *piper_dev = &piper_dev_storage;
const device *pipew_dev = &pipew_dev_storage;
const device *port_dev = wordlist + 357;
const device *proc_dev = &proc_dev_storage;
const device *process_dev = &process_dev_storage;
const device *ptym_dev = wordlist + 327;
const device *random_dev = wordlist + 316;
const device *rawdrive_dev = wordlist + 345;
const device *registry_dev = &registry_dev_storage;
const device *sda_dev = wordlist + 248;
const device *sdb_dev = wordlist + 250;
const device *sdc_dev = wordlist + 294;
const device *sdd_dev = wordlist + 290;
const device *sde_dev = wordlist + 298;
const device *sdf_dev = wordlist + 251;
const device *sdg_dev = wordlist + 252;
const device *sdh_dev = wordlist + 284;
const device *sdi_dev = wordlist + 263;
const device *sdj_dev = wordlist + 258;
const device *sdk_dev = wordlist + 289;
const device *sdl_dev = wordlist + 309;
const device *sdm_dev = wordlist + 261;
const device *sdn_dev = wordlist + 274;
const device *sdo_dev = wordlist + 278;
const device *sdp_dev = wordlist + 300;
const device *sdq_dev = wordlist + 305;
const device *sdr_dev = wordlist + 293;
const device *sds_dev = wordlist + 275;
const device *sdt_dev = wordlist + 307;
const device *sdu_dev = wordlist + 287;
const device *sdv_dev = wordlist + 299;
const device *sdw_dev = wordlist + 286;
const device *sdx_dev = wordlist + 280;
const device *sdy_dev = wordlist + 266;
const device *sdz_dev = wordlist + 262;
const device *serial_dev = wordlist + 259;
const device *serial_dev1 = wordlist + 322;
const device *stream_dev = &stream_dev_storage;
const device *tape_dev = wordlist + 255;
const device *tcp_dev = &tcp_dev_storage;
const device *tty_dev = wordlist + 306;
const device *ttym_dev = wordlist + 320;
const device *ttys_dev = wordlist + 334;
const device *udp_dev = &udp_dev_storage;
const device *unix_dev = &unix_dev_storage;
const device *urandom_dev = wordlist + 326;
const device *windows_dev = wordlist + 325;
const device *zero_dev = wordlist + 310;
d289 8
a296 8
  wordlist + 241 /* cdrom */,
  wordlist + 259 /* serial */,
  wordlist + 320 /* ttym */,
  wordlist + 334 /* ttys */,
  wordlist + 214 /* floppy */,
  &tcp_dev_storage /* tcp */,
  wordlist + 345 /* rawdrive */,
  wordlist + 255 /* tape */
d301 25
a325 25
  wordlist + 131 /* bad */,
  &fs_dev_storage /* fs */,
  &process_dev_storage /* process */,
  &registry_dev_storage /* registry */,
  &proc_dev_storage /* proc */,
  wordlist + 222 /* fifo */,
  &pipew_dev_storage /* pipew */,
  &piper_dev_storage /* piper */,
  wordlist + 340 /* pipe */,
  wordlist + 246 /* mem */,
  wordlist + 288 /* kmem */,
  wordlist + 358 /* null */,
  wordlist + 310 /* zero */,
  wordlist + 357 /* port */,
  wordlist + 316 /* random */,
  wordlist + 326 /* urandom */,
  wordlist + 306 /* tty */,
  wordlist + 333 /* console */,
  wordlist + 327 /* ptym */,
  wordlist + 344 /* conout */,
  wordlist + 315 /* conin */,
  wordlist + 352 /* clipboard */,
  wordlist + 325 /* windows */,
  wordlist + 291 /* oss_dsp */,
  wordlist + 259 /* serial */
@

