head	1.16;
access;
symbols
	cygwin-1_7_35-release:1.16
	cygwin-1_7_34-release:1.16
	cygwin-1_7_33-release:1.16
	cygwin-1_7_32-release:1.16
	cygwin-1_7_31-release:1.16
	cygwin-1_7_30-release:1.16
	cygwin-1_7_29-release:1.16
	cygwin-1_7_29-release-branchpoint:1.16.0.14
	cygwin-1_7_28-release:1.16
	cygwin-1_7_27-release:1.16
	cygwin-1_7_26-release:1.16
	cygwin-1_7_25-release:1.16
	cygwin-1_7_24-release:1.16
	cygwin-1_7_23-release:1.16
	cygwin-1_7_22-release:1.16
	cygwin-1_7_21-release:1.16
	cygwin-1_7_20-release:1.16
	cygwin-1_7_19-release:1.16
	cygwin-64bit-postmerge:1.16
	cygwin-64bit-premerge-branch:1.16.0.12
	cygwin-64bit-premerge:1.16
	cygwin-1_7_18-release:1.16
	cygwin-1_7_17-release:1.16
	cygwin-64bit-branch:1.16.0.10
	cygwin-1_7_16-release:1.16
	cygwin-1_7_15-release:1.16
	cygwin-1_7_14_2-release:1.16
	cygwin-1_7_14-release:1.16
	cygwin-1_7_12-release:1.16
	cygwin-1_7_11-release:1.16
	cygwin-1_7_10-release:1.16
	cygwin-1_7_9-release:1.16
	cygwin-1_7_8-release:1.16
	cygwin-1_7_7-release:1.16
	cygwin-1_7_5-release:1.16
	cygwin-1_7_4-release:1.16
	cygwin-1_7_3-release:1.16
	cygwin-1_7_2-release:1.16
	cygwin-1_7_1-release:1.16
	cv-branch-2:1.16.0.8
	cr-0x5f1:1.16.0.6
	cv-branch:1.16.0.4
	cr-0x3b58:1.16.0.2
	cr-0x9e:1.14.0.10
	cr-0x9d:1.14.0.8
	corinna-01:1.14
	cr-0x9c:1.14.0.6
	cr-0x9b:1.14.0.4
	cr-0x99:1.14
	Z-emcb-cygwin_daemon:1.14.0.2
	w32api-2_2:1.12
	mingw-runtime-2_4:1.11
	cygnus_cvs_20020108_pre:1.7
	Z-cygwin_daemon_merge-new_HEAD:1.6
	Z-cygwin_daemon_merge_HEAD:1.6
	cygwin_daemon:1.6.0.2;
locks; strict;
comment	@# @;
expand	@o@;


1.16
date	2006.01.02.06.15.58;	author cgf;	state Exp;
branches;
next	1.15;

1.15
date	2005.06.10.19.32.29;	author cgf;	state Exp;
branches;
next	1.14;

1.14
date	2003.03.12.06.28.27;	author cgf;	state Exp;
branches;
next	1.13;

1.13
date	2003.03.09.17.03.05;	author cgf;	state Exp;
branches;
next	1.12;

1.12
date	2003.02.08.16.46.32;	author cgf;	state Exp;
branches;
next	1.11;

1.11
date	2003.02.08.02.56.49;	author cgf;	state Exp;
branches;
next	1.10;

1.10
date	2003.01.22.15.18.58;	author corinna;	state Exp;
branches;
next	1.9;

1.9
date	2002.08.26.02.53.24;	author cgf;	state Exp;
branches;
next	1.8;

1.8
date	2002.07.07.00.43.28;	author cgf;	state Exp;
branches;
next	1.7;

1.7
date	2001.10.08.12.18.38;	author corinna;	state Exp;
branches;
next	1.6;

1.6
date	2001.09.13.19.00.48;	author duda;	state Exp;
branches;
next	1.5;

1.5
date	2001.09.09.13.38.16;	author duda;	state Exp;
branches;
next	1.4;

1.4
date	2001.05.15.10.03.01;	author corinna;	state Exp;
branches;
next	1.3;

1.3
date	2000.09.03.03.58.16;	author cgf;	state Exp;
branches;
next	1.2;

1.2
date	2000.07.27.17.30.50;	author dj;	state Exp;
branches;
next	1.1;

1.1
date	2000.02.17.19.38.31;	author cgf;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2000.02.17.19.38.31;	author cgf;	state Exp;
branches;
next	;


desc
@@


1.16
log
@* cygload/README: Delete.
* cygload/cygload.cc: Move to winsup.api.  Add comments from README.
* cygload/cygload.h: Move to winsup.api.
* cygload/cygload.exp: Move to winsup.api.
* Makefile.in: Remove cygload.
* winsup.api/winsup.exp: If a .exp file is detected, run it rather than using
standard compile.
* winsup.api/resethand.c (main): Use printf to print status or expect thinks
something is wrong.
@
text
@source "site.exp"
source "$srcdir/winsup.api/known_bugs.tcl"

if { ! [isnative] } {
    verbose "skipping winsup.api because it's not native"
    return
}

set rv ""

set ltp_includes "-I$ltp_includes"
set ltp_libs "$rootme/libltp.a"

set add_includes $ltp_includes
set add_libs $ltp_libs

set test_filter ""

if { [info exists env(CYGWIN_TESTSUITE_TESTS)] } {
    set test_filter "$env(CYGWIN_TESTSUITE_TESTS)"
}

proc ws_spawn {cmd args} {
    global rv
    verbose "running $cmd\n"
    catch "exec $cmd" rv
    verbose send "catchCode = $rv\n"
}

verbose "Filter: $test_filter"

foreach src [lsort [glob -nocomplain $srcdir/$subdir/*.c $srcdir/$subdir/*/*.{cc,c}]] {
    if { $test_filter != "" && ! [regexp $test_filter $src] } {
	verbose -log "Skipping $src"
	continue
    }

    regsub "^$srcdir/$subdir/" $src "" testcase
    regsub ".c$" $testcase "" base
    regsub ".*/" $base "" basename
    regsub "/" $base "-" base

    if { [lsearch -exact $xfail_list $basename] >= 0 } {
        set xfail_expected 1
	setup_xfail "*-*-*"
    } else {
        set xfail_expected 0
	clear_xfail
    }

    if [ file exists "$srcdir/$subdir/$basename.exp" ] then {
	source "$srcdir/$subdir/$basename.exp"
    } else {
	ws_spawn "$CC -nodefaultlibs -mwin32 $CFLAGS $src $add_includes $add_libs $runtime_root/binmode.o -lgcc $runtime_root/libcygwin0.a -lkernel32 -luser32 -o $base.exe"
	if { $rv != "" } {
	    verbose -log "$rv"
	    fail "$testcase (compile)"
	} else {
	    if { $verbose } {
	       set redirect_output "./$base.log"
	    } else {
	       set redirect_output /dev/null
	    }
	    ws_spawn "$rootme/cygrun ./$base.exe > $redirect_output"
	    if { $rv != "" } {
		verbose -log "$testcase: $rv"
		fail "$testcase (execute)"
		if { $xfail_expected } {
		    catch { file delete "$base.exe" } err
		    if { $err != "" } {
			note "error deleting $base.exe: $err"
		    }
		}
	    } else {
		pass "$testcase"
		if { ! $xfail_expected } {
		    catch { file delete "$base.exe" } err
		    if { $err != "" } {
			note "error deleting $base.exe: $err"
		    }
		}
	    }
	}
    }
}
@


1.15
log
@* winsup.api/winsup.exp: Remove (temporarily?) -nostdinc from build since it
causes compile failures with gcc 3.4.4.
@
text
@d32 1
a32 1
foreach src [glob -nocomplain $srcdir/$subdir/*.c $srcdir/$subdir/*/*.c] {
d51 2
a52 4
    ws_spawn "$CC -nodefaultlibs -mwin32 $CFLAGS $src $add_includes $add_libs $runtime_root/binmode.o -lgcc $runtime_root/libcygwin0.a -lkernel32 -luser32 -o $base.exe"
    if { $rv != "" } {
	verbose -log "$rv"
	fail "$testcase (compile)"
d54 4
a57 15
        if { $verbose } {
           set redirect_output "./$base.log"
        } else {
           set redirect_output /dev/null
        }
        ws_spawn "$rootme/cygrun ./$base.exe > $redirect_output"
        if { $rv != "" } {
	    verbose -log "$testcase: $rv"
	    fail "$testcase (execute)"
            if { $xfail_expected } {
  	        catch { file delete "$base.exe" } err
                if { $err != "" } {
                    note "error deleting $base.exe: $err"
                }
            }
d59 22
a80 5
	    pass "$testcase"
            if { ! $xfail_expected } {
		catch { file delete "$base.exe" } err
		if { $err != "" } {
                    note "error deleting $base.exe: $err"
@


1.14
log
@Checkin previously referred to in ChangeLog.
@
text
@d51 1
a51 1
    ws_spawn "$CC -nodefaultlibs -nostdinc -mwin32 $CFLAGS $src $add_includes $add_libs $runtime_root/binmode.o -lgcc $runtime_root/libcygwin0.a -lkernel32 -luser32 -o $base.exe"
@


1.13
log
@* Makefile.in: Use "cygwin0" rather than "new-cygwin" to denote in-build-tree
version of library or dll.
* config/default.exp: Ditto.
* winsup.api/winsup.exp: Ditto.
@
text
@d51 1
a51 1
    ws_spawn "$CC -nodefaultlibs -mwin32 $CFLAGS $src $add_includes $add_libs $runtime_root/binmode.o -lgcc $runtime_root/libcygwin0.a -lkernel32 -luser32 -o $base.exe"
@


1.12
log
@* winsup.api/winsup.exp (ws_spawn): Tweak slightly to work with tcl 8.4.1.
@
text
@d51 1
a51 1
    ws_spawn "$CC -nodefaultlibs -mwin32 $CFLAGS $src $add_includes $add_libs $runtime_root/binmode.o -lgcc $runtime_root/new-libcygwin.a -lkernel32 -luser32 -o $base.exe"
@


1.11
log
@* libltp/lib/parse_opts.c: Deal with C warnings.
* winsup.api/pthread/cancel12.c: Ditto.
* winsup.api/winsup.exp: Don't use -g3.
@
text
@d26 1
a26 1
    catch [eval "exec $cmd"] rv
@


1.10
log
@	* cygrun.c: Move here from ../cygwin.
	* Makefile.in: Build cygrun.exe.
	* winsup.api/winsup.exp: Expect cygrun.exe in $rootme.
@
text
@d51 1
a51 1
    ws_spawn "$CC -g3 -nodefaultlibs -mwin32 $CFLAGS $src $add_includes $add_libs $runtime_root/binmode.o -lgcc $runtime_root/new-libcygwin.a -lkernel32 -luser32 -o $base.exe"
@


1.9
log
@* Makefile.in (RUNTEST): Use Makefile's srcdir and bupdir* macros, where
appropriate.
* winsup.api/winsup.exp: Use -nodefaultlibs when linking executable to avoid
potentially linking installed dll.
@
text
@d61 1
a61 1
        ws_spawn "$runtime_root/cygrun ./$base.exe > $redirect_output"
@


1.8
log
@* testsuite/winsup.api/winsup.exp: Add -mwin32 to gcc flags so windows.h will
be found.
@
text
@d51 1
a51 1
    ws_spawn "$CC -g3 -mwin32 $CFLAGS $src $add_includes $add_libs $runtime_root/binmode.o $runtime_root/new-libcygwin.a -o $base.exe"
@


1.7
log
@	* winsup.api/mmaptest01.c: Add several tests on mmaps.  Use libltp.
	* winsup.api/winsup.exp: Link all tests agains libltp.
@
text
@d51 1
a51 1
    ws_spawn "$CC -g3 $CFLAGS $src $add_includes $add_libs $runtime_root/binmode.o $runtime_root/new-libcygwin.a -o $base.exe"
@


1.6
log
@* winsup.api/winsup.exp: Run only selected test if environment
variable CYGWIN_TESTSUITE_TESTS is set. Use its value as regular
expression to filter test names.
* winsup.api/ltp/symlink01.c (creat_path_max): Provide explicit
buffer to getcwd to conform to standards and avoid memory leak.
(do_chdir): Ditto.
@
text
@a9 2
set add_includes ""
set add_libs ""
d14 3
a48 5
    }

    if { [regexp "^ltp/" $testcase ] } {
        set add_includes $ltp_includes
        set add_libs $ltp_libs
@


1.5
log
@* winsup.api/ltp/dup03.c: New test.
* winsup.api/ltp/lseek03.c: Ditto.
* winsup.api/ltp/mmap001.c: Ditto.
* winsup.api/ltp/read01.c: Ditto.
* winsup.api/ltp/readdir01.c: Ditto.
* winsup.api/ltp/rmdir05.c: Ditto.
* winsup.api/ltp/sbrk01.c: Ditto.
* winsup.api/ltp/select02.c: Ditto.
* winsup.api/ltp/select03.c: Ditto.
* winsup.api/ltp/signal03.c: Ditto.
* winsup.api/ltp/stat06.c: Ditto.
* winsup.api/ltp/unlink08.c: Ditto.
* winsup.api/known_bugs.tcl: Update to reflect new test's known
failures.
* winsup.api/winsup.exp: Don't delete executable in case of
unexpected pass, as well as in case of unexpected failure.
* README: Update paragraph about expected failures.
@
text
@d16 6
d29 2
d32 5
@


1.4
log
@        * winsup.api/winsup.exp: Force linking all tests against binmode.o.
@
text
@d64 6
a69 4
	    catch { file delete "$base.exe" } err
            if { $err != "" } {
                note "error deleting $base.exe: $err"
            }
@


1.3
log
@Importing Egor's testsuite.
@
text
@d42 1
a42 1
    ws_spawn "$CC -g3 $CFLAGS $src $add_includes $add_libs $runtime_root/new-libcygwin.a -o $base.exe"
@


1.2
log
@* testsuite/winsup.api/winsup.exp: ignore stdout by default
* testsuite/winsup.api/crlf.c: non-verbose by default

* winsup.h: prune out windows headers we don't normally need
* assert.cc: add wingdi.h and winuser.h
* fhandler_console.cc: ditto
* fhandler_windows.cc: ditto
* select.cc: ditto
* spawn.cc: ditto
* strace.cc: ditto
* tty.cc: ditto
* window.cc: ditto
* hinfo.cc: add winsock.h
* syscalls.cc: add winnls.h
* uinfo.cc: ditto

* include/windows.h: optimize non-inclusion of repeat headers
@
text
@d2 1
d10 5
d29 2
a30 1
    if { [regexp "^xf-" $basename] } {
d33 1
d37 6
a42 1
    ws_spawn "$CC $src $rootme/new-libcygwin.a -o $base.exe"
d47 6
a52 1
        ws_spawn "../cygrun ./$base.exe > /dev/null"
d56 6
d64 4
a67 1
	    file delete "$base.exe"
@


1.1
log
@Initial revision
@
text
@d34 1
a34 1
        ws_spawn "../cygrun ./$base.exe"
@


1.1.1.1
log
@import winsup-2000-02-17 snapshot
@
text
@@
