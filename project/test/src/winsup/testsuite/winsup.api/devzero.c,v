head	1.2;
access;
symbols
	cygwin-1_7_35-release:1.2
	cygwin-1_7_34-release:1.2
	cygwin-1_7_33-release:1.2
	cygwin-1_7_32-release:1.2
	cygwin-1_7_31-release:1.2
	cygwin-1_7_30-release:1.2
	cygwin-1_7_29-release:1.2
	cygwin-1_7_29-release-branchpoint:1.2.0.24
	cygwin-1_7_28-release:1.2
	cygwin-1_7_27-release:1.2
	cygwin-1_7_26-release:1.2
	cygwin-1_7_25-release:1.2
	cygwin-1_7_24-release:1.2
	cygwin-1_7_23-release:1.2
	cygwin-1_7_22-release:1.2
	cygwin-1_7_21-release:1.2
	cygwin-1_7_20-release:1.2
	cygwin-1_7_19-release:1.2
	cygwin-64bit-postmerge:1.2
	cygwin-64bit-premerge-branch:1.2.0.22
	cygwin-64bit-premerge:1.2
	cygwin-1_7_18-release:1.2
	cygwin-1_7_17-release:1.2
	cygwin-64bit-branch:1.2.0.20
	cygwin-1_7_16-release:1.2
	cygwin-1_7_15-release:1.2
	cygwin-1_7_14_2-release:1.2
	cygwin-1_7_14-release:1.2
	cygwin-1_7_12-release:1.2
	cygwin-1_7_11-release:1.2
	cygwin-1_7_10-release:1.2
	cygwin-1_7_9-release:1.2
	cygwin-1_7_8-release:1.2
	cygwin-1_7_7-release:1.2
	cygwin-1_7_5-release:1.2
	cygwin-1_7_4-release:1.2
	cygwin-1_7_3-release:1.2
	cygwin-1_7_2-release:1.2
	cygwin-1_7_1-release:1.2
	cv-branch-2:1.2.0.18
	cr-0x5f1:1.2.0.16
	cv-branch:1.2.0.14
	cr-0x3b58:1.2.0.12
	cr-0x9e:1.2.0.10
	cr-0x9d:1.2.0.8
	corinna-01:1.2
	cr-0x9c:1.2.0.6
	cr-0x9b:1.2.0.4
	cr-0x99:1.2
	Z-emcb-cygwin_daemon:1.2.0.2
	w32api-2_2:1.2
	mingw-runtime-2_4:1.2
	cygnus_cvs_20020108_pre:1.1.1.1
	Z-cygwin_daemon_merge-new_HEAD:1.1.1.1
	Z-cygwin_daemon_merge_HEAD:1.1.1.1
	cygwin_daemon:1.1.1.1.0.10;
locks; strict;
comment	@ * @;
expand	@o@;


1.2
date	2003.01.23.21.21.28;	author cgf;	state Exp;
branches;
next	1.1;

1.1
date	2000.02.17.19.38.31;	author cgf;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2000.02.17.19.38.31;	author cgf;	state Exp;
branches;
next	;


desc
@@


1.2
log
@* libltp/include/test.h: Fix C warnings.
* winsup.api/checksignal.c: Ditto.
* winsup.api/crlf.c: Ditto.
* winsup.api/devzero.c: Ditto.
* winsup.api/iospeed.c: Ditto.
* winsup.api/mmaptest01.c: Ditto.
* winsup.api/mmaptest02.c: Ditto.
* winsup.api/mmaptest03.c: Ditto.
* winsup.api/mmaptest04.c: Ditto.
* winsup.api/nullgetcwd.c: Ditto.
* winsup.api/sigchld.c: Ditto.
* winsup.api/signal-into-win32-api.c: Ditto.
* winsup.api/systemcall.c: Ditto.
* winsup.api/waitpid.c: Ditto.
* winsup.api/pthread/mainthreadexits.c: Ditto.
* winsup.api/pthread/test.h: Ditto.
* winsup.api/pthread/threadidafterfork.c: Ditto.
* Makefile.in: Remove cygrun.exe from RUNTIME since it is built here now.
@
text
@#include <stdio.h>
#include <unistd.h>
#include <stdlib.h>
#include <sys/types.h>
#include <fcntl.h>
#include <sys/mman.h>

int
main(int argc, char **argv)
{
  int fd, r, l;
  char buf[1024];
  char *v;

  fd = open("/dev/zero", O_RDONLY);
  if (fd < 0)
    {
      fprintf(stderr, "Unable to open /dev/zero for reading\n");
      perror("The error was");
      exit(1);
    }

  l = read(fd, buf, 1024);
  if (l != 1024)
    {
      fprintf(stderr, "Asked to read 1024 bytes, got %d\n", l);
      exit(1);
    }

  for (r=0; r<1024; r++)
    if (buf[r] != 0)
      {
	fprintf(stderr, "/dev/zero returned a byte of %02x at offset %d\n",
		buf[r], r);
	exit(1);
      }

  l = lseek(fd, 4096, 0);
  if (l != 0)
    {
      fprintf(stderr, "l == %d\n", l);
      exit(1);
    }

  l = close(fd);
  if (l != 0)
    {
      fprintf(stderr, "close: returned %d\n", l);
      perror("The error was");
      exit(1);
    }

  fd = open("/dev/zero", O_WRONLY);
  if (fd < 0)
    {
      fprintf(stderr, "Unable to open /dev/zero for writing\n");
      perror("The error was");
      exit(1);
    }

  l = write(fd, buf, 1024);
  if (l != 1024)
    {
      fprintf(stderr, "Asked to write 1024 bytes, got %d\n", l);
      exit(1);
    }

  l = close(fd);
  if (l != 0)
    {
      fprintf(stderr, "close: returned %d\n", l);
      perror("The error was");
      exit(1);
    }

  fd = open("/dev/zero", O_RDWR);
  v = (char *)mmap(0, 65536, PROT_READ|PROT_WRITE, MAP_PRIVATE, fd, 0);
  if (v == (char *)-1)
    {
      fprintf(stderr, "mmap r/w /dev/zero failed\n");
      perror("The error was");
      exit(1);
    }

  for (r=0; r<65536; r++)
    if (v[r] != 0)
      {
	fprintf(stderr, "mmap'd r/w /dev/zero has byte %d at offset %d\n",
		v[r], r);
	exit(1);
      }
  munmap(v, 65536);
  close(fd);

  fd = open("/dev/zero", O_RDONLY);
  v = (char *)mmap(0, 65536, PROT_READ, MAP_SHARED, fd, 0);
  if (v == (char *)-1)
    {
      fprintf(stderr, "mmap /dev/zero r/o failed\n");
      perror("The error was");
      exit(1);
    }

  for (r=0; r<65536; r++)
    if (v[r] != 0)
      {
	fprintf(stderr, "mmap'd r/o /dev/zero has byte %d at offset %d\n",
		v[r], r);
	exit(1);
      }
  munmap(v, 65536);
  close(fd);

  exit(0);
}
@


1.1
log
@Initial revision
@
text
@d3 1
d8 2
a9 1
main()
d11 1
a11 1
  int fd, r, w, l;
@


1.1.1.1
log
@import winsup-2000-02-17 snapshot
@
text
@@
