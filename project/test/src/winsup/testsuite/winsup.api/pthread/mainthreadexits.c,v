head	1.2;
access;
symbols
	cygwin-1_7_35-release:1.2
	cygwin-1_7_34-release:1.2
	cygwin-1_7_33-release:1.2
	cygwin-1_7_32-release:1.2
	cygwin-1_7_31-release:1.2
	cygwin-1_7_30-release:1.2
	cygwin-1_7_29-release:1.2
	cygwin-1_7_29-release-branchpoint:1.2.0.24
	cygwin-1_7_28-release:1.2
	cygwin-1_7_27-release:1.2
	cygwin-1_7_26-release:1.2
	cygwin-1_7_25-release:1.2
	cygwin-1_7_24-release:1.2
	cygwin-1_7_23-release:1.2
	cygwin-1_7_22-release:1.2
	cygwin-1_7_21-release:1.2
	cygwin-1_7_20-release:1.2
	cygwin-1_7_19-release:1.2
	cygwin-64bit-postmerge:1.2
	cygwin-64bit-premerge-branch:1.2.0.22
	cygwin-64bit-premerge:1.2
	cygwin-1_7_18-release:1.2
	cygwin-1_7_17-release:1.2
	cygwin-64bit-branch:1.2.0.20
	cygwin-1_7_16-release:1.2
	cygwin-1_7_15-release:1.2
	cygwin-1_7_14_2-release:1.2
	cygwin-1_7_14-release:1.2
	cygwin-1_7_12-release:1.2
	cygwin-1_7_11-release:1.2
	cygwin-1_7_10-release:1.2
	cygwin-1_7_9-release:1.2
	cygwin-1_7_8-release:1.2
	cygwin-1_7_7-release:1.2
	cygwin-1_7_5-release:1.2
	cygwin-1_7_4-release:1.2
	cygwin-1_7_3-release:1.2
	cygwin-1_7_2-release:1.2
	cygwin-1_7_1-release:1.2
	cv-branch-2:1.2.0.18
	cr-0x5f1:1.2.0.16
	cv-branch:1.2.0.14
	cr-0x3b58:1.2.0.12
	cr-0x9e:1.2.0.10
	cr-0x9d:1.2.0.8
	corinna-01:1.2
	cr-0x9c:1.2.0.6
	cr-0x9b:1.2.0.4
	cr-0x99:1.2
	Z-emcb-cygwin_daemon:1.2.0.2
	w32api-2_2:1.2
	mingw-runtime-2_4:1.2;
locks; strict;
comment	@ * @;


1.2
date	2003.01.23.21.21.28;	author cgf;	state Exp;
branches;
next	1.1;

1.1
date	2002.11.24.13.41.36;	author rbcollins;	state Exp;
branches;
next	;


desc
@@


1.2
log
@* libltp/include/test.h: Fix C warnings.
* winsup.api/checksignal.c: Ditto.
* winsup.api/crlf.c: Ditto.
* winsup.api/devzero.c: Ditto.
* winsup.api/iospeed.c: Ditto.
* winsup.api/mmaptest01.c: Ditto.
* winsup.api/mmaptest02.c: Ditto.
* winsup.api/mmaptest03.c: Ditto.
* winsup.api/mmaptest04.c: Ditto.
* winsup.api/nullgetcwd.c: Ditto.
* winsup.api/sigchld.c: Ditto.
* winsup.api/signal-into-win32-api.c: Ditto.
* winsup.api/systemcall.c: Ditto.
* winsup.api/waitpid.c: Ditto.
* winsup.api/pthread/mainthreadexits.c: Ditto.
* winsup.api/pthread/test.h: Ditto.
* winsup.api/pthread/threadidafterfork.c: Ditto.
* Makefile.in: Remove cygrun.exe from RUNTIME since it is built here now.
@
text
@#include <stdio.h>
#include <unistd.h>
#include <pthread.h>
#include <stdlib.h>

static void * Thread (void *);

static pthread_t main_thread;
static pthread_t secondThread;
static int result = 2;

int main(void)
{
  main_thread = pthread_self ();

  if (pthread_create (&secondThread, NULL, Thread, NULL))
      exit (1);
  sleep (5);
  pthread_exit (&result);
  /* If pthread_exit doesm't (which would be a bug) then we do */
  return 1;
}

static void * Thread (void *not_used)
{
  void *myresult;
  /* We should be able to join this */
  if (pthread_join (main_thread, &myresult))
      exit (1);

  if (*(int *)myresult != 2)
      exit (1);

  exit (0);
}
/*
This valid code doesn't work at all. The mainthread object in MTinterface
is not properly initialized, the cancel_event is NULL and the win32_obj_id
is NULL because myself->hProcess is NULL when MTinterface is initialized
(and i don't think that a process handle can be used as thread handle).
Even if the handles would be valid the pthread_join call would try to
delete a thread object that is created static which would result in a
corrupted heap.

Concept test Contributed by Thomas Pfaff <tpfaff@@gmx.net>
Scriptable test by Robert Collins <rbtcollins@@hotmail.com>

*/
@


1.1
log
@2002-11-25  Robert Collins  <rbtcollins@@hotmail.com>

        * readme: Document running portions of the test suite (Thanks Egor!).
        * winsup.api/pthread/mainthreadexits.c: New file, derived from
        Thomas Pfaff's test cases.
        * winsup.api/pthread/threadidafterfork.c: Ditto.
@
text
@d4 1
@

