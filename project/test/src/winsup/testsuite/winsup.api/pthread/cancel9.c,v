head	1.3;
access;
symbols
	cygwin-1_7_35-release:1.3
	cygwin-1_7_34-release:1.3
	cygwin-1_7_33-release:1.3
	cygwin-1_7_32-release:1.3
	cygwin-1_7_31-release:1.3
	cygwin-1_7_30-release:1.3
	cygwin-1_7_29-release:1.3
	cygwin-1_7_29-release-branchpoint:1.3.0.24
	cygwin-1_7_28-release:1.3
	cygwin-1_7_27-release:1.3
	cygwin-1_7_26-release:1.3
	cygwin-1_7_25-release:1.3
	cygwin-1_7_24-release:1.3
	cygwin-1_7_23-release:1.3
	cygwin-1_7_22-release:1.3
	cygwin-1_7_21-release:1.3
	cygwin-1_7_20-release:1.3
	cygwin-1_7_19-release:1.3
	cygwin-64bit-postmerge:1.3
	cygwin-64bit-premerge-branch:1.3.0.22
	cygwin-64bit-premerge:1.3
	cygwin-1_7_18-release:1.3
	cygwin-1_7_17-release:1.3
	cygwin-64bit-branch:1.3.0.20
	cygwin-1_7_16-release:1.3
	cygwin-1_7_15-release:1.3
	cygwin-1_7_14_2-release:1.3
	cygwin-1_7_14-release:1.3
	cygwin-1_7_12-release:1.3
	cygwin-1_7_11-release:1.3
	cygwin-1_7_10-release:1.3
	cygwin-1_7_9-release:1.3
	cygwin-1_7_8-release:1.3
	cygwin-1_7_7-release:1.3
	cygwin-1_7_5-release:1.3
	cygwin-1_7_4-release:1.3
	cygwin-1_7_3-release:1.3
	cygwin-1_7_2-release:1.3
	cygwin-1_7_1-release:1.3
	cv-branch-2:1.3.0.18
	cr-0x5f1:1.3.0.16
	cv-branch:1.3.0.14
	cr-0x3b58:1.3.0.12
	cr-0x9e:1.3.0.10
	cr-0x9d:1.3.0.8
	corinna-01:1.3
	cr-0x9c:1.3.0.6
	cr-0x9b:1.3.0.4
	cr-0x99:1.3
	Z-emcb-cygwin_daemon:1.3.0.2
	w32api-2_2:1.3
	mingw-runtime-2_4:1.3;
locks; strict;
comment	@ * @;


1.3
date	2003.01.24.01.09.40;	author cgf;	state Exp;
branches;
next	1.2;

1.2
date	2003.01.21.20.51.14;	author tpfaff;	state Exp;
branches;
next	1.1;

1.1
date	2003.01.14.20.15.58;	author tpfaff;	state Exp;
branches;
next	;


desc
@@


1.3
log
@Perform more C warning fixup on all C source files and headers.
@
text
@/*
 * File: cancel9.c
 *
 * Test Synopsis: Test if waitpid is a cancellation point.
 *
 * Test Method (Validation or Falsification):
 * - 
 *
 * Requirements Tested:
 * -
 *
 * Features Tested:
 * - 
 *
 * Cases Tested:
 * - 
 *
 * Description:
 * - 
 *
 * Environment:
 * - 
 *
 * Input:
 * - None.
 *
 * Output:
 * - File name, Line number, and failed expression on failure.
 * - No output on success.
 *
 * Assumptions:
 * - have working pthread_create, pthread_cancel, pthread_setcancelstate
 *   pthread_join
 *
 * Pass Criteria:
 * - Process returns zero exit status.
 *
 * Fail Criteria:
 * - Process returns non-zero exit status.
 */

#include "test.h"
#include <assert.h>
#include <sys/wait.h>

static pid_t pid;

static void *Thread(void *punused)
{
  int res;

  pid = fork ();
  assert (pid != -1);
  switch (pid)
    {
    case 0:
      sleep (10);
      break;
    default:
      assert (waitpid (pid, &res, 0) != -1);
    }

  return NULL;
}

int main (void)
{
  int res;

  void * result;
  pthread_t t;

  assert (pthread_create (&t, NULL, Thread, NULL) == 0);
  sleep (5);
  assert (pthread_cancel (t) == 0);
  assert (pthread_join (t, &result) == 0);
  assert (result == PTHREAD_CANCELED);
  assert (waitpid (pid, &res, 0) != -1);

  return 0;
}
@


1.2
log
@* winsup.api/pthread/cancel9.c: Wait in mainthread until child process has terminated.
@
text
@d43 2
@


1.1
log
@Add winsup.api/pthread/cancel9.c
@
text
@d44 2
a48 1
  pid_t pid = fork ();
d50 1
d66 2
d76 1
@

