head	1.5;
access;
symbols
	cygwin-1_7_35-release:1.5
	cygwin-1_7_34-release:1.5
	cygwin-1_7_33-release:1.5
	cygwin-1_7_32-release:1.5
	cygwin-1_7_31-release:1.5
	cygwin-1_7_30-release:1.5
	cygwin-1_7_29-release:1.5
	cygwin-1_7_29-release-branchpoint:1.5.0.14
	cygwin-1_7_28-release:1.5
	cygwin-1_7_27-release:1.5
	cygwin-1_7_26-release:1.5
	cygwin-1_7_25-release:1.5
	cygwin-1_7_24-release:1.5
	cygwin-1_7_23-release:1.5
	cygwin-1_7_22-release:1.5
	cygwin-1_7_21-release:1.5
	cygwin-1_7_20-release:1.5
	cygwin-1_7_19-release:1.5
	cygwin-64bit-postmerge:1.5
	cygwin-64bit-premerge-branch:1.5.0.12
	cygwin-64bit-premerge:1.5
	cygwin-1_7_18-release:1.5
	cygwin-1_7_17-release:1.5
	cygwin-64bit-branch:1.5.0.10
	cygwin-1_7_16-release:1.5
	cygwin-1_7_15-release:1.5
	cygwin-1_7_14_2-release:1.5
	cygwin-1_7_14-release:1.5
	cygwin-1_7_12-release:1.5
	cygwin-1_7_11-release:1.5
	cygwin-1_7_10-release:1.5
	cygwin-1_7_9-release:1.5
	cygwin-1_7_8-release:1.5
	cygwin-1_7_7-release:1.5
	cygwin-1_7_5-release:1.5
	cygwin-1_7_4-release:1.5
	cygwin-1_7_3-release:1.5
	cygwin-1_7_2-release:1.5
	cygwin-1_7_1-release:1.5
	cv-branch-2:1.5.0.8
	cr-0x5f1:1.5.0.6
	cv-branch:1.5.0.4
	cr-0x3b58:1.5.0.2;
locks; strict;
comment	@ * @;


1.5
date	2006.01.02.06.15.58;	author cgf;	state Exp;
branches;
next	1.4;

1.4
date	2006.01.02.04.01.22;	author cgf;	state Exp;
branches;
next	1.3;

1.3
date	2006.01.02.03.45.32;	author cgf;	state Exp;
branches;
next	1.2;

1.2
date	2006.01.01.18.02.54;	author cgf;	state Exp;
branches;
next	1.1;

1.1
date	2006.01.01.17.26.52;	author cgf;	state Exp;
branches;
next	;


desc
@@


1.5
log
@* cygload/README: Delete.
* cygload/cygload.cc: Move to winsup.api.  Add comments from README.
* cygload/cygload.h: Move to winsup.api.
* cygload/cygload.exp: Move to winsup.api.
* Makefile.in: Remove cygload.
* winsup.api/winsup.exp: If a .exp file is detected, run it rather than using
standard compile.
* winsup.api/resethand.c (main): Use printf to print status or expect thinks
something is wrong.
@
text
@#include <stdio.h>
#include <signal.h>
#include <sys/wait.h>
#include <unistd.h>
#include <stdlib.h>

int doit = 0;
void
ouch (int sig)
{
  if (doit++ > 0)
    kill (getpid (), SIGTERM);
}

int
main (int argc, char **argv)
{
  static struct sigaction act;
  if (argc == 1)
    act.sa_flags = SA_RESETHAND;
  act.sa_handler = ouch;
  sigaction (SIGSEGV, &act, NULL);
  int pid = fork ();
  int status;
  if (pid > 0)
    waitpid (pid, &status, 0);
  else
    {
      int *i = 0;
      *i = 9;
      exit (0x42);
    }
  status &= ~0x80;	// remove core dump flag
  printf ("pid %d exited with status %p\n", pid, (void *) status);
  exit (argc == 1 ? !(status == SIGSEGV) : !(status == SIGTERM));
}
@


1.4
log
@* winsup.api/resethand.c (main): Remove core dump flag from exit status.
@
text
@a10 1
  fprintf (stderr, "ouch %d\n", sig);
d34 1
a34 1
  fprintf (stderr, "pid %d exited with status %p\n", pid, (void *) status);
@


1.3
log
@* winsup.api/resethand.c (main): Coerce argument to pointer to stop gcc
complaint.
@
text
@d34 1
@


1.2
log
@* winsup.api/resethand.c: Use SIGSEGV for the signal to test.
@
text
@d34 1
a34 1
  fprintf (stderr, "pid %d exited with status %p\n", pid, status);
@


1.1
log
@* winsup.api/resethand.c: New file.
@
text
@d12 1
a12 1
  if (doit++ == 0)
d23 1
a23 1
  sigaction (SIGTERM, &act, NULL);
d30 3
a32 2
      kill (getpid (), SIGTERM);
      exit (0x27);
d35 1
a35 1
  exit (argc == 1 ? !(status == SIGTERM) : !(status == 0x2700));
@

