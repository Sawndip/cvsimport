head	1.3;
access;
symbols
	cygwin-1_7_17-release:1.2
	cygwin-64bit-branch:1.2.0.20
	cygwin-1_7_16-release:1.2
	cygwin-1_7_15-release:1.2
	cygwin-1_7_14_2-release:1.2
	cygwin-1_7_14-release:1.2
	cygwin-1_7_12-release:1.2
	cygwin-1_7_11-release:1.2
	cygwin-1_7_10-release:1.2
	cygwin-1_7_9-release:1.2
	cygwin-1_7_8-release:1.2
	cygwin-1_7_7-release:1.2
	cygwin-1_7_5-release:1.2
	cygwin-1_7_4-release:1.2
	cygwin-1_7_3-release:1.2
	cygwin-1_7_2-release:1.2
	cygwin-1_7_1-release:1.2
	cv-branch-2:1.2.0.18
	cr-0x5f1:1.2.0.16
	cv-branch:1.2.0.14
	cr-0x3b58:1.2.0.12
	cr-0x9e:1.2.0.10
	cr-0x9d:1.2.0.8
	corinna-01:1.2
	cr-0x9c:1.2.0.6
	cr-0x9b:1.2.0.4
	cr-0x99:1.2
	Z-emcb-cygwin_daemon:1.2.0.2
	w32api-2_2:1.2
	mingw-runtime-2_4:1.2
	w32api-1_5:1.1.1.1
	cygnus_cvs_20020108_pre:1.1.1.1
	Z-cygwin_daemon_merge-new_HEAD:1.1.1.1
	Z-cygwin_daemon_merge_HEAD:1.1.1.1
	cygwin_daemon:1.1.1.1.0.10;
locks; strict;
comment	@ * @;
expand	@o@;


1.3
date	2012.11.07.16.52.45;	author cgf;	state dead;
branches;
next	1.2;

1.2
date	2003.01.27.23.11.13;	author dannysmith;	state Exp;
branches;
next	1.1;

1.1
date	2000.02.17.19.38.32;	author cgf;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2000.02.17.19.38.32;	author cgf;	state Exp;
branches;
next	;


desc
@@


1.3
log
@* mingw: Delete obsolete directory.
* w32api: Ditto.
@
text
@/*
  largeint.c

  Large (64 bits) integer arithmetics library

  Written by Anders Norlander <anorland@@hem2.passagen.se>

  This file is part of a free library for the Win32 API.
  
  This library is distributed in the hope that it will be useful,
  but WITHOUT ANY WARRANTY; without even the implied warranty of
  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.

*/

#define __COMPILING_LARGEINT

#include <largeint.h>

__int64 WINAPI
LargeIntegerAdd (__int64 i1, __int64 i2)
{
  return i1 + i2;
}

__int64 WINAPI
LargeIntegerSubtract (__int64 i1, __int64 i2)
{
  return i1 - i2;
}

__int64 WINAPI
LargeIntegerArithmeticShift (__int64 i, int n)
{
  return i >> n;
}

__int64 WINAPI
LargeIntegerShiftLeft (__int64 i, int n)
{
  return i << n;
}

__int64 WINAPI
LargeIntegerShiftRight (__int64 i, int n)
{
  return i >> n;
}

__int64 WINAPI
LargeIntegerNegate (__int64 i)
{
  return -i;
}

__int64 WINAPI
ConvertLongToLargeInteger (LONG l)
{
  return (__int64) l;
}

__int64 WINAPI
ConvertUlongToLargeInteger (ULONG ul)
{
  return _toi(_toui(ul));
}

__int64 WINAPI
EnlargedIntegerMultiply (LONG l1, LONG l2)
{
  return _toi(l1) * _toi(l2);
}

__int64 WINAPI
EnlargedUnsignedMultiply (ULONG ul1, ULONG ul2)
{
  return _toi(_toui(ul1) * _toui(ul2));
}

__int64 WINAPI
ExtendedIntegerMultiply (__int64 i, LONG l)
{
  return i * _toi(l);
}

__int64 WINAPI
LargeIntegerMultiply (__int64 i1, __int64 i2)
{
  return i1 * i2;
}

__int64 WINAPI LargeIntegerDivide (__int64 i1, __int64 i2, __int64 *remainder)
{
  if (remainder)
    *remainder = i1 % i2;
  return i1 / i2;
}

ULONG WINAPI
EnlargedUnsignedDivide (unsigned __int64 i1, ULONG i2, PULONG remainder)
{
  if (remainder)
    *remainder = i1 % _toi(i2);
  return i1 / _toi(i2);
}
__int64 WINAPI
ExtendedLargeIntegerDivide (__int64 i1, ULONG i2, PULONG remainder)
{
  if (remainder)
    *remainder = i1 % _toi(i2);
  return i1 / _toi(i2);
}

/* FIXME: what is this function supposed to do? */
__int64 WINAPI ExtendedMagicDivide (__int64 i1, __int64 i2, int n)
{
  return 0;
}
@


1.2
log
@2003-01-27  Krzysztof Nikiel  <kni@@poczta.onet.pl>

	* include/mmsystem.h (MIXERCONTROL_CONTROLF_MULTIPLE): Correct
	define.
	* lib/largeint.c (LargeIntegerAdd): Add, don't multiply.
@
text
@@


1.1
log
@Initial revision
@
text
@d23 1
a23 1
  return i1 * i2;
@


1.1.1.1
log
@import winsup-2000-02-17 snapshot
@
text
@@
