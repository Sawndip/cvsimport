head	1.15;
access;
symbols
	cygwin-1_7_17-release:1.14
	cygwin-64bit-branch:1.14.0.2
	cygwin-1_7_16-release:1.14
	cygwin-1_7_15-release:1.14
	cygwin-1_7_14_2-release:1.14
	cygwin-1_7_14-release:1.14
	cygwin-1_7_12-release:1.14
	cygwin-1_7_11-release:1.14
	cygwin-1_7_10-release:1.14
	cygwin-1_7_9-release:1.5
	cygwin-1_7_8-release:1.5
	cygwin-1_7_7-release:1.5
	cygwin-1_7_5-release:1.5
	cygwin-1_7_4-release:1.5
	cygwin-1_7_3-release:1.5
	cygwin-1_7_2-release:1.5
	cygwin-1_7_1-release:1.5
	cv-branch-2:1.4.0.2
	cr-0x5f1:1.2.0.4
	cv-branch:1.2.0.2
	cr-0x3b58:1.1.0.2;
locks; strict;
comment	@# @;


1.15
date	2012.11.07.16.52.46;	author cgf;	state dead;
branches;
next	1.14;

1.14
date	2012.01.16.20.37.25;	author keithmarshall;	state Exp;
branches;
next	1.13;

1.13
date	2012.01.15.21.30.48;	author keithmarshall;	state Exp;
branches;
next	1.12;

1.12
date	2012.01.15.20.56.25;	author keithmarshall;	state Exp;
branches;
next	1.11;

1.11
date	2012.01.15.15.31.11;	author keithmarshall;	state Exp;
branches;
next	1.10;

1.10
date	2012.01.15.15.10.09;	author keithmarshall;	state Exp;
branches;
next	1.9;

1.9
date	2012.01.15.14.28.17;	author keithmarshall;	state Exp;
branches;
next	1.8;

1.8
date	2012.01.15.14.20.36;	author keithmarshall;	state Exp;
branches;
next	1.7;

1.7
date	2012.01.15.12.39.00;	author keithmarshall;	state Exp;
branches;
next	1.6;

1.6
date	2011.12.13.20.46.53;	author keithmarshall;	state Exp;
branches;
next	1.5;

1.5
date	2009.10.29.21.53.47;	author cwilson;	state Exp;
branches;
next	1.4;

1.4
date	2006.09.12.00.29.04;	author ironhead;	state Exp;
branches;
next	1.3;

1.3
date	2006.08.30.13.04.41;	author corinna;	state Exp;
branches;
next	1.2;

1.2
date	2006.05.05.19.17.05;	author ironhead;	state Exp;
branches;
next	1.1;

1.1
date	2004.03.27.02.25.37;	author infidel;	state Exp;
branches;
next	;


desc
@@


1.15
log
@* mingw: Delete obsolete directory.
* w32api: Ditto.
@
text
@# @@configure_input@@
#
#
# Makefile.in
#
# This file is part of a free library building Windows NT drivers.
# 
# This library is distributed in the hope that it will be useful,
# but WITHOUT ANY WARANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.

srcdir = @@srcdir@@
top_srcdir = @@top_srcdir@@
top_builddir = @@top_builddir@@

VPATH = @@srcdir@@

include ${top_builddir}/Makefile.comm

# Headers
#
HEADERS = $(notdir $(wildcard ${top_srcdir}/include/directx/*.h))

# Libraries
#
DEF_FILES = $(notdir $(wildcard ${srcdir}/*.def))
DIST_C_FILES = $(notdir $(wildcard ${srcdir}/*.c))
DIST_H_FILES = $(notdir $(wildcard ${srcdir}/*.h))

LIBS = \
  libd3d8.a libd3d9.a libd3dim.a libd3drm.a libd3dx8d.a libd3dx9d.a \
  libd3dxof.a libddraw.a libdinput.a libdinput8.a libdmoguids.a \
  libdplayx.a libdpnaddr.a libdpnet.a libdpnlobby.a libdpvoice.a \
  libdsetup.a libdsound.a libdxerr8.a libdxerr9.a libdxguid.a \
  libksproxy.a libksuser.a libmsdmo.a libstrmiids.a

DINPUT_OBJS = \
  dinput_joy.o dinput_joy2.o dinput_kbd.o dinput_mouse.o dinput_mouse2.o

DISTFILES = Makefile.in $(DEF_FILES) $(DIST_C_FILES) $(DIST_H_FILES)

.NOTPARALLEL:

# Targets: (note that 'all-default' is a redirection from 'all',
# which is the primary default target identified in the included
# common makefile fragment, ${top_builddir}/Makefile.comm
#
all-default: $(LIBS)

TEST_OPTIONS = \
  $(ALL_CFLAGS) -Wall -pedantic -Wsystem-headers \
  -c ${srcdir}/test.c -o test.o

.PHONY: check test
check test:
	@@echo "Testing directx..."
	@@for lang in c c++ objective-c; do \
	  echo "$$lang..."; \
	  $(CC) -x$$lang $(TEST_OPTIONS); \
	  echo "$$lang UNICODE..."; \
	  $(CC) -x$$lang -DUNICODE $(TEST_OPTIONS); \
	done
	@@echo "windres..."
	$(WINDRES) --include-dir ${INCDIR} -i ${srcdir}/res.rc -o test.o
	@@echo "windres UNICODE..."
	$(WINDRES) --define UNICODE --include-dir ${INCDIR} -i ${srcdir}/res.rc -o test.o
	rm -f test.o

# Rules
#
libdxerr8.a: dxerr8.o dxerr8w.o
	$(AR) r $@@ dxerr8.o dxerr8w.o
	$(RANLIB) $@@

libdxerr9.a: dxerr9.o dxerr9w.o
	$(AR) r $@@ dxerr9.o dxerr9w.o
	$(RANLIB) $@@

libdinput.a: dinput.def $(DINPUT_OBJS)
	$(DLLTOOL) $(DLLTOOL_FLAGS) --output-lib $@@ --def ${srcdir}/dinput.def
	$(AR) r $@@ $(DINPUT_OBJS)
	$(RANLIB) $@@

libdinput8.a: dinput8.def $(DINPUT_OBJS)
	$(DLLTOOL) $(DLLTOOL_FLAGS) --output-lib $@@ --def ${srcdir}/dinput8.def
	$(AR) r $@@ $(DINPUT_OBJS)
	$(RANLIB) $@@

# Install headers and libraries in a target specified directory.
#
install: install-libraries install-headers

install-libraries: all $(need-DESTDIR-compatibility)
	$(mkinstalldirs) $(DESTDIR)${inst_libdir}
	for file in $(LIBS); do \
	  $(INSTALL_DATA) $$file $(DESTDIR)${inst_libdir}; \
	done

install-headers: $(need-DESTDIR-compatibility)
	$(mkinstalldirs) $(DESTDIR)${inst_includedir}
	for file in $(HEADERS); do \
	  $(INSTALL_DATA) ${top_srcdir}/include/directx/$$file $(DESTDIR)${inst_includedir}; \
	done

# Uninstall headers and libraries from a target specified directory
#
uninstall: uninstall-libraries uninstall-headers

uninstall-libraries: $(need-DESTDIR-compatibility)
	for file in $(LIBS); do \
	  rm -f $(DESTDIR)${inst_libdir}/$$file; \
	done
	rmdir $(DESTDIR)${inst_libdir}

uninstall-headers: $(need-DESTDIR-compatibility)
	for file in $(HEADERS); do \
	  rm -f $(DESTDIR)${inst_includedir}/$$file; \
	done
	rmdir $(DESTDIR)${inst_includedir}

dist:
	mkdir ${distdir}/include/directx
	chmod 755 ${distdir}/include/directx
	for file in $(HEADERS); do \
	  cp -p ${top_srcdir}/include/directx/$$file ${distdir}/include/directx; \
	done
	mkdir ${distdir}/lib/directx
	chmod 755 ${distdir}/lib/directx
	for file in $(DISTFILES); do \
	  cp -p ${srcdir}/$$file ${distdir}/lib/directx; \
	done

# Makefile.in: end of file
@


1.14
log
@Correct misused 'rm -r' command in uninstall rules.
@
text
@@


1.13
log
@Add 'check' as GCS conforming alias for make's 'test' goal.
@
text
@d117 1
a117 1
	  rm -r $(DESTDIR)${inst_includedir}/$$file; \
@


1.12
log
@More makefile code refactoring; remove redundant INCLUDES references.
@
text
@d53 3
a55 2
.PHONY: test
test:
@


1.11
log
@More makefile code refactoring; fix top_srcdir references.
@
text
@a18 2
INCLUDES = -I ${top_srcdir}/include -I ${top_srcdir}/include/directx \
  $(EXTRA_INCLUDES)
@


1.10
log
@Update and correct makefile rebuilding rules.
@
text
@d19 1
a19 20

# Depending on if we build as part of winsup or mingw we need to
# add additional include paths in order to get the correct headers
# from the C library.
#
BUILDENV = @@BUILDENV@@

ifeq ($(BUILDENV), cygwin)
  # winsup/include
  # winsup/../newlib/libc/include
  # winsup/../newlib/libc/sys/cygwin
  EXTRA_INCLUDES = -I ${srcdir}/../../include \
    -I ${srcdir}/../../../newlib/libc/include \
    -I ${srcdir}/../../../newlib/libc/sys/cygwin
endif
ifeq ($(BUILDENV), mingw)
  EXTRA_INCLUDES = -I ${srcdir}/../../mingw/include
endif

INCLUDES = -I ${srcdir}/../include -I ${srcdir}/../include/directx \
d24 1
a24 1
HEADERS = $(notdir $(wildcard ${srcdir}/../../include/directx/*.h))
d54 1
a54 1
  -c $(srcdir)/test.c -o test.o
d103 1
a103 1
	  $(INSTALL_DATA) ${srcdir}/../../include/directx/$$file $(DESTDIR)${inst_includedir}; \
d126 1
a126 1
	  cp -p ${srcdir}/../../include/directx/$$file ${distdir}/include/directx; \
@


1.9
log
@More formatting adjustments.
@
text
@a152 3
Makefile: Makefile.in ../../config.status ../../configure
	cd ../..; $(SHELL) config.status

@


1.8
log
@Miscellaneous formatting adjustments.
@
text
@d27 6
a32 4
# winsup/include
# winsup/../newlib/libc/include
# winsup/../newlib/libc/sys/cygwin
EXTRA_INCLUDES = -I${srcdir}/../../include -I${srcdir}/../../../newlib/libc/include -I${srcdir}/../../../newlib/libc/sys/cygwin
d35 1
a35 1
EXTRA_INCLUDES = -I${srcdir}/../../mingw/include
d38 2
a39 1
INCLUDES = -I${srcdir}/../include -I${srcdir}/../include/directx $(EXTRA_INCLUDES)
d50 10
a59 7
LIBS = libd3d8.a libd3d9.a libd3dim.a libd3drm.a libd3dx8d.a libd3dx9d.a \
       libd3dxof.a libddraw.a libdinput.a libdinput8.a libdmoguids.a \
       libdplayx.a libdpnaddr.a libdpnet.a libdpnlobby.a libdpvoice.a \
       libdsetup.a libdsound.a libdxerr8.a libdxerr9.a libdxguid.a \
       libksproxy.a libksuser.a libmsdmo.a libstrmiids.a
DINPUT_OBJS = dinput_joy.o dinput_joy2.o dinput_kbd.o dinput_mouse.o \
       dinput_mouse2.o
@


1.7
log
@Improve self-documentation of 'for' loop commands.
@
text
@d30 1
a30 1
EXTRA_INCLUDES = -I$(srcdir)/../../include -I$(srcdir)/../../../newlib/libc/include -I$(srcdir)/../../../newlib/libc/sys/cygwin
d33 1
a33 1
EXTRA_INCLUDES = -I$(srcdir)/../../mingw/include
d36 1
a36 1
INCLUDES = -I$(srcdir)/../include -I$(srcdir)/../include/directx $(EXTRA_INCLUDES)
d40 1
a40 1
HEADERS = $(notdir $(wildcard $(srcdir)/../../include/directx/*.h))
d44 3
a46 3
DEF_FILES = $(notdir $(wildcard $(srcdir)/*.def))
DIST_C_FILES = $(notdir $(wildcard $(srcdir)/*.c))
DIST_H_FILES = $(notdir $(wildcard $(srcdir)/*.h))
d65 3
a67 1
TEST_OPTIONS = $(ALL_CFLAGS) -Wall -pedantic -Wsystem-headers -c $(srcdir)/test.c -o test.o
d94 1
a94 1
	$(DLLTOOL) $(DLLTOOL_FLAGS) --output-lib $@@ --def $(srcdir)/dinput.def
d99 1
a99 1
	$(DLLTOOL) $(DLLTOOL_FLAGS) --output-lib $@@ --def $(srcdir)/dinput8.def
d108 1
a108 1
	$(mkinstalldirs) $(DESTDIR)$(inst_libdir)
d110 1
a110 1
	  $(INSTALL_DATA) $$file $(DESTDIR)$(inst_libdir)/$$file; \
d114 1
a114 1
	$(mkinstalldirs) $(DESTDIR)$(inst_includedir)
d116 1
a116 1
	  $(INSTALL_DATA) $(srcdir)/../../include/directx/$$file $(DESTDIR)$(inst_includedir)/$$file; \
d125 1
a125 1
	  rm -f $(DESTDIR)$(inst_libdir)/$$file; \
d127 1
a127 1
	rmdir $(DESTDIR)$(inst_libdir)
d131 1
a131 1
	  rm -r $(DESTDIR)$(inst_includedir)/$$file; \
d133 1
a133 1
	rmdir $(DESTDIR)$(inst_includedir)
d136 2
a137 2
	mkdir $(distdir)/include/directx
	chmod 755 $(distdir)/include/directx
d139 1
a139 1
	  cp -p $(srcdir)/../../include/directx/$$file $(distdir)/include/directx/$$file; \
d141 2
a142 2
	mkdir $(distdir)/lib/directx
	chmod 755 $(distdir)/lib/directx
d144 1
a144 1
	  cp -p $(srcdir)/$$file $(distdir)/lib/directx/$$file; \
@


1.6
log
@Factor common code from subdirectory makefiles into Makefile.comm.in
@
text
@d69 5
a73 5
	@@for lang in c c++ objective-c ; do \
		echo "$$lang..."; \
		$(CC) -x$$lang $(TEST_OPTIONS) ; \
		echo "$$lang UNICODE..."; \
		$(CC) -x$$lang -DUNICODE $(TEST_OPTIONS) ; \
d76 1
a76 1
	@@$(WINDRES) --include-dir $(INCDIR) -i $(srcdir)/res.rc -o test.o
d78 2
a79 2
	@@$(WINDRES) --define UNICODE --include-dir $(INCDIR) -i $(srcdir)/res.rc -o test.o
	@@rm -f test.o
d107 2
a108 2
	for i in $(LIBS); do \
		$(INSTALL_DATA) $$i $(DESTDIR)$(inst_libdir)/$$i ; \
d113 2
a114 2
	for i in $(HEADERS); do \
		$(INSTALL_DATA) $(srcdir)/../../include/directx/$$i $(DESTDIR)$(inst_includedir)/$$i ; \
d122 2
a123 2
	@@for i in $(LIBS); do \
		rm -f $(DESTDIR)$(inst_libdir)/$$i ; \
d128 2
a129 2
	@@for i in $(HEADERS); do \
		rm -r $(DESTDIR)$(inst_includedir)/$$i ; \
d136 2
a137 2
	@@for i in $(HEADERS); do \
		cp -p $(srcdir)/../../include/directx/$$i $(distdir)/include/directx/$$i ; \
d141 2
a142 2
	@@for i in $(DISTFILES); do \
		cp -p $(srcdir)/$$i $(distdir)/lib/directx/$$i ; \
@


1.5
log
@Honor DESTDIR for winsup/mingw and winsup/w32api
@
text
@d1 3
d12 3
a15 5
# start config section

SHELL = @@SHELL@@

srcdir = @@srcdir@@
d18 1
a18 48
host_alias = @@host@@
build_alias = @@build@@
target_alias = @@target@@
with_cross_host = @@with_cross_host@@
prefix = @@prefix@@
includedir:=@@includedir@@

program_transform_name = @@program_transform_name@@
exec_prefix = @@exec_prefix@@
libdir:=@@libdir@@
bindir = @@bindir@@
ifeq ($(target_alias),$(host_alias))
ifeq ($(build_alias),$(host_alias))
tooldir:=$(exec_prefix)
else
tooldir:=$(exec_prefix)/$(target_alias)
endif
else
tooldir:=$(exec_prefix)/$(target_alias)
endif
datadir = @@datadir@@
infodir = @@infodir@@
ifneq (,$(findstring cygwin,$(target_alias)))
inst_includedir:=$(tooldir)/include/w32api
inst_libdir:=$(tooldir)/lib/w32api
else
ifneq (,$(with_cross_host))
inst_includedir:=$(tooldir)/include/w32api
inst_libdir:=$(tooldir)/lib
else
inst_includedir:=$(includedir)
inst_libdir:=$(libdir)
endif
endif

INSTALL = @@INSTALL@@
INSTALL_DATA = @@INSTALL_DATA@@
INSTALL_PROGRAM = @@INSTALL_PROGRAM@@
mkinstalldirs = mkdir -p

CC = @@CC@@
CC_FOR_TARGET = $(CC)

DLLTOOL = @@DLLTOOL@@
DLLTOOL_FLAGS = --as=$(AS) -k
AS = @@AS@@
AS_FOR_TARGET = $(AS_FOR_TARGET)
WINDRES = @@WINDRES@@
d23 1
d38 2
a39 11
CFLAGS = @@CFLAGS@@
ALL_CFLAGS = $(CFLAGS) $(INCLUDES)

RANLIB = @@RANLIB@@
AR = @@AR@@
LD = @@LD@@

# end config section

# headers

d42 2
a43 2
# libraries

d59 5
a63 2
# targets
all: $(LIBS)
d81 2
a82 7
# make rules

.SUFFIXES: .c .o .def .a

.c.o:
	$(CC) -c $(ALL_CFLAGS) -o $@@ $<

d101 2
a102 25
lib%.a: %.def %.o
	$(DLLTOOL) $(DLLTOOL_FLAGS) --output-lib $@@ --def $(srcdir)/$*.def
	$(AR) r $@@ $*.o
	$(RANLIB) $@@

lib%.a: %.def
	$(DLLTOOL) $(DLLTOOL_FLAGS) --output-lib $@@ --def $<

lib%.a: %.o
	$(AR) rc $@@ $*.o
	$(RANLIB) $@@

need-DESTDIR-compatibility = prefix libdir includedir
.PHONY: $(need-DESTDIR-compatibility) fail-DESTDIR-compatibility

$(need-DESTDIR-compatibility):
	@@test -z "$(DESTDIR)" || case "$($@@)" in ?:*) \
	  $(MAKE) --no-print-directory reject="$@@" fail-DESTDIR-compatibility ;; \
	esac

fail-DESTDIR-compatibility:
	$(error DESTDIR is not supported when $(reject) contains Win32 path `$($(reject))'; \
	try `make install $(reject)=$(shell echo '$($(reject))' | sed s,:,:$(DESTDIR),) ...' instead)

# install headers and libraries in a target specified directory.
d117 2
a118 1
# uninstall headers and libraries from a target specified directory
a132 1

d148 1
a148 12
# clean

mostlyclean:
	rm -f *~ *.o *.s

clean:
	rm -f *.o *.a *.s *~

distclean: clean
	rm -f config.cache config.status config.log Makefile

maintainer-clean: distclean
@


1.4
log
@2006-09-11  Chris Sutcliffe  <ir0n3h4d@@users.sourceforge.net>

        * lib/Makefile.in: fix typo.
        * lib/ddk/Makefile.in: fix typo.
        * lib/directx/Makefile.in: fix typo.

        Thanks to Keith Marshall (keithmarshall at users dot sourceforge dot net)
        for pointing it out.
@
text
@d169 12
d184 2
a185 2
install-libraries: all
	$(mkinstalldirs) $(inst_libdir)
d187 1
a187 1
		$(INSTALL_DATA) $$i $(inst_libdir)/$$i ; \
d190 2
a191 2
install-headers:
	$(mkinstalldirs) $(inst_includedir)
d193 1
a193 1
		$(INSTALL_DATA) $(srcdir)/../../include/directx/$$i $(inst_includedir)/$$i ; \
d199 1
a199 1
uninstall-libraries:
d201 1
a201 1
		rm -f $(inst_libdir)/$$i ; \
d203 1
a203 1
	rmdir $(inst_libdir)
d205 1
a205 1
uninstall-headers:
d207 1
a207 1
		rm -r $(inst_includedir)/$$i ; \
d209 1
a209 1
	rmdir $(inst_includedir)
@


1.3
log
@	* configure.in: Substitute with_cross_host in depending files.
	* configure: Regenerate.
	* lib/Makefile.in: Add with_cross_host to allow more granular checks.
	Set installation directories accordingly.
	* lib/ddk/Makefile.in: Ditto.
	* lib/directx/Makefile.in: Ditto.
@
text
@d43 1
a43 1
ifneq (,$with_cross_host)
@


1.2
log
@2006-05-05  Chris Sutcliffe <ir0nh34d@@users.sf.net>

    * lib/directx/Makefile.in: Remove reference to libquartz.a since it was moved.
@
text
@d20 1
d43 4
d50 1
@


1.1
log
@2004-03-27  Filip Navara  <xnavara@@volny.cz>

	* include/directx: New subdir.
	* lib/directx: Ditto.
	* include/directx/(d3d9.h, d3d9caps.h, d3d9types.h, dxerr8.h,
	dxerr9.h): New files.
	* lib/ddk/(Makefile.in, d3d8.def, d3d9.def, d3dim.def, d3drm.def,
	d3dx8d.def, d3dx9d.def, d3dxof.def, ddraw.def, dinput.def,
	dinput_joy.c, dinput_joy2.c, dinput_kbd.c, dinput_mouse.c,
	dinput_mouse2.c, dinput_private.h, dinput8.def, dmoguids.c, dplayx.def,
	dpnaddr.def, dpnet.def, dpnlobby.def, dpvoice.def, dsetup.def,
	dsound.def, dxerr.c, dxerr8.c, dxerr8w.c, dxerr9.c, dxerr9w.c,
	dxguid.c, ksproxy.def, ksuser.c, ksuser.def, msdmo.def, quartz.def,
	strmiids.c, test.c): Ditto.
	* lib/(d3dim.def, d3drm.def, d3dxof.def, ddraw.def, dinput.c,
	dinput.def, dplayx.def, dsetup.def, dsound.def, dxguid.c): Removed.
@
text
@d99 1
a99 1
       libksproxy.a libksuser.a libmsdmo.a libquartz.a libstrmiids.a
@

