head	1.16;
access;
symbols
	cygwin-1_7_17-release:1.15
	cygwin-64bit-branch:1.15.0.2
	cygwin-1_7_16-release:1.15
	cygwin-1_7_15-release:1.15
	cygwin-1_7_14_2-release:1.15
	cygwin-1_7_14-release:1.15
	cygwin-1_7_12-release:1.15
	cygwin-1_7_11-release:1.15
	cygwin-1_7_10-release:1.15
	cygwin-1_7_9-release:1.6
	cygwin-1_7_8-release:1.6
	cygwin-1_7_7-release:1.6
	cygwin-1_7_5-release:1.6
	cygwin-1_7_4-release:1.6
	cygwin-1_7_3-release:1.6
	cygwin-1_7_2-release:1.6
	cygwin-1_7_1-release:1.6
	cv-branch-2:1.5.0.2
	cr-0x5f1:1.3.0.16
	cv-branch:1.3.0.14
	cr-0x3b58:1.3.0.12
	cr-0x9e:1.3.0.10
	cr-0x9d:1.3.0.8
	corinna-01:1.3
	cr-0x9c:1.3.0.6
	cr-0x9b:1.3.0.4
	cr-0x99:1.3
	Z-emcb-cygwin_daemon:1.3.0.2
	w32api-2_2:1.3
	mingw-runtime-2_4:1.3;
locks; strict;
comment	@# @;


1.16
date	2012.11.07.16.52.46;	author cgf;	state dead;
branches;
next	1.15;

1.15
date	2012.01.16.20.37.24;	author keithmarshall;	state Exp;
branches;
next	1.14;

1.14
date	2012.01.15.21.30.47;	author keithmarshall;	state Exp;
branches;
next	1.13;

1.13
date	2012.01.15.20.56.25;	author keithmarshall;	state Exp;
branches;
next	1.12;

1.12
date	2012.01.15.15.31.11;	author keithmarshall;	state Exp;
branches;
next	1.11;

1.11
date	2012.01.15.15.10.08;	author keithmarshall;	state Exp;
branches;
next	1.10;

1.10
date	2012.01.15.14.20.36;	author keithmarshall;	state Exp;
branches;
next	1.9;

1.9
date	2012.01.15.12.39.00;	author keithmarshall;	state Exp;
branches;
next	1.8;

1.8
date	2011.12.13.20.46.53;	author keithmarshall;	state Exp;
branches;
next	1.7;

1.7
date	2011.12.13.20.10.42;	author keithmarshall;	state Exp;
branches;
next	1.6;

1.6
date	2009.10.29.21.53.47;	author cwilson;	state Exp;
branches;
next	1.5;

1.5
date	2006.09.12.00.29.04;	author ironhead;	state Exp;
branches;
next	1.4;

1.4
date	2006.08.30.13.04.41;	author corinna;	state Exp;
branches;
next	1.3;

1.3
date	2002.11.25.18.14.25;	author earnie;	state Exp;
branches;
next	1.2;

1.2
date	2002.10.14.19.59.04;	author earnie;	state Exp;
branches;
next	1.1;

1.1
date	2002.10.06.22.18.25;	author earnie;	state Exp;
branches;
next	;


desc
@@


1.16
log
@* mingw: Delete obsolete directory.
* w32api: Ditto.
@
text
@# @@configure_input@@
#
#
# Makefile.in
#
# This file is part of a free library building Windows NT drivers.
# 
# This library is distributed in the hope that it will be useful,
# but WITHOUT ANY WARANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.

srcdir = @@srcdir@@
top_srcdir = @@top_srcdir@@
top_builddir = @@top_builddir@@

VPATH = @@srcdir@@

include ${top_builddir}/Makefile.comm

# Headers
#
HEADERS = $(notdir $(wildcard ${top_srcdir}/include/ddk/*.h))

# Libraries
#
DEF_FILES = $(notdir $(wildcard ${srcdir}/*.def))
IMPLIBS = $(addprefix lib,$(subst .def,.a,$(DEF_FILES)))
LIBS = $(IMPLIBS)

DISTFILES = Makefile.in $(DEF_FILES)

.NOTPARALLEL:

# Targets: (note that 'all-default' is a redirection from 'all',
# which is the primary default target identified in the included
# common makefile fragment, ${top_builddir}/Makefile.comm
#
all-default: $(LIBS)

TEST_OPTIONS = \
  $(ALL_CFLAGS) -Wall -pedantic -Wsystem-headers \
  -c ${srcdir}/test.c -o test.o

.PHONY: check test
check test:
	@@echo "Testing ddk..."
	@@for lang in c c++ objective-c; do \
	  echo "$$lang..."; \
	  $(CC) -x$$lang $(TEST_OPTIONS); \
	  echo "$$lang UNICODE..."; \
	  $(CC) -x$$lang -DUNICODE $(TEST_OPTIONS); \
	done
	@@echo "windres..."
	$(WINDRES) --include-dir ${INCDIR} -i ${srcdir}/res.rc -o test.o
	@@echo "windres UNICODE..."
	$(WINDRES) --define UNICODE --include-dir ${INCDIR} -i ${srcdir}/res.rc -o test.o
	rm -f test.o

# Rules
#
# Install headers and libraries in a target specified directory.
#
install: install-libraries install-headers

install-libraries: all $(need-DESTDIR-compatibility)
	$(mkinstalldirs) $(DESTDIR)${inst_libdir}
	for file in $(LIBS); do \
	  $(INSTALL_DATA) $$file $(DESTDIR)${inst_libdir}; \
	done

ddk_includedir = ${inst_includedir}/ddk

install-headers: $(need-DESTDIR-compatibility)
	$(mkinstalldirs) $(DESTDIR)${ddk_includedir}
	for file in $(HEADERS); do \
	  $(INSTALL_DATA) ${top_srcdir}/include/ddk/$$file $(DESTDIR)${ddk_includedir}; \
	done

# Uninstall headers and libraries from a target specified directory
#
uninstall: uninstall-libraries uninstall-headers

uninstall-libraries: $(need-DESTDIR-compatibility)
	for file in $(LIBS); do \
	  rm -f $(DESTDIR)${inst_libdir}/$$file; \
	done
	rmdir $(DESTDIR)${inst_libdir}

uninstall-headers: $(need-DESTDIR-compatibility)
	for file in $(HEADERS); do \
	  rm -f $(DESTDIR)${ddk_includedir}/$$file; \
	done
	rmdir $(DESTDIR)${ddk_includedir}

dist:
	mkdir ${distdir}/include/ddk
	chmod 755 ${distdir}/include/ddk
	for file in $(HEADERS); do \
	  cp -p ${top_srcdir}/include/ddk/$$file ${distdir}/include/ddk; \
	done
	mkdir ${distdir}/lib/ddk
	chmod 755 ${distdir}/lib/ddk
	for file in $(DISTFILES); do \
	  cp -p ${srcdir}/$$file ${distdir}/lib/ddk; \
	done

# Makefile.in: end of file
@


1.15
log
@Correct misused 'rm -r' command in uninstall rules.
@
text
@@


1.14
log
@Add 'check' as GCS conforming alias for make's 'test' goal.
@
text
@d91 1
a91 1
	  rm -r $(DESTDIR)${ddk_includedir}/$$file; \
@


1.13
log
@More makefile code refactoring; remove redundant INCLUDES references.
@
text
@d44 2
a45 2
.PHONY: test
test:
@


1.12
log
@More makefile code refactoring; fix top_srcdir references.
@
text
@a18 1
INCLUDES = -I ${top_srcdir}/include $(EXTRA_INCLUDES)
@


1.11
log
@Update and correct makefile rebuilding rules.
@
text
@d19 1
a19 18

# Depending on if we build as part of winsup or mingw we need to
# add additional include paths in order to get the correct headers
# from the C library.
#
BUILDENV = @@BUILDENV@@

ifeq ($(BUILDENV), cygwin)
# winsup/include
# winsup/../newlib/libc/include
# winsup/../newlib/libc/sys/cygwin
EXTRA_INCLUDES = -I${srcdir}/../../include -I${srcdir}/../../../newlib/libc/include -I${srcdir}/../../../newlib/libc/sys/cygwin
endif
ifeq ($(BUILDENV), mingw)
EXTRA_INCLUDES = -I${srcdir}/../../mingw/include
endif

INCLUDES = -I${srcdir}/../include $(EXTRA_INCLUDES)
d23 1
a23 1
HEADERS = $(notdir $(wildcard ${srcdir}/../../include/ddk/*.h))
d77 1
a77 1
	  $(INSTALL_DATA) ${srcdir}/../../include/ddk/$$file $(DESTDIR)${ddk_includedir}; \
d100 1
a100 1
	  cp -p ${srcdir}/../../include/ddk/$$file ${distdir}/include/ddk; \
@


1.10
log
@Miscellaneous formatting adjustments.
@
text
@a124 3
Makefile: Makefile.in ../../config.status ../../configure
	cd ../..; $(SHELL) config.status

@


1.9
log
@Improve self-documentation of 'for' loop commands.
@
text
@d30 1
a30 1
EXTRA_INCLUDES = -I$(srcdir)/../../include -I$(srcdir)/../../../newlib/libc/include -I$(srcdir)/../../../newlib/libc/sys/cygwin
d33 1
a33 1
EXTRA_INCLUDES = -I$(srcdir)/../../mingw/include
d36 1
a36 1
INCLUDES = -I$(srcdir)/../include $(EXTRA_INCLUDES)
d40 1
a40 1
HEADERS = $(notdir $(wildcard $(srcdir)/../../include/ddk/*.h))
d44 1
a44 1
DEF_FILES = $(notdir $(wildcard $(srcdir)/*.def))
d58 4
a61 1
TEST_OPTIONS = $(ALL_CFLAGS) -Wall -pedantic -Wsystem-headers -c $(srcdir)/test.c -o test.o
d84 1
a84 1
	$(mkinstalldirs) $(DESTDIR)$(inst_libdir)
d86 1
a86 1
	  $(INSTALL_DATA) $$file $(DESTDIR)$(inst_libdir)/$$file; \
d94 1
a94 1
		$(INSTALL_DATA) $(srcdir)/../../include/ddk/$$file $(DESTDIR)${ddk_includedir}; \
d103 1
a103 1
	  rm -f $(DESTDIR)$(inst_libdir)/$$file; \
d105 1
a105 1
	rmdir $(DESTDIR)$(inst_libdir)
d114 2
a115 2
	mkdir $(distdir)/include/ddk
	chmod 755 $(distdir)/include/ddk
d117 1
a117 1
	  cp -p $(srcdir)/../../include/ddk/$$file $(distdir)/include/ddk/$$file; \
d119 2
a120 2
	mkdir $(distdir)/lib/ddk
	chmod 755 $(distdir)/lib/ddk
d122 1
a122 1
	  cp -p $(srcdir)/$$file $(distdir)/lib/ddk/$$file; \
@


1.8
log
@Factor common code from subdirectory makefiles into Makefile.comm.in
@
text
@d62 5
a66 5
	@@for lang in c c++ objective-c ; do \
		echo "$$lang..."; \
		$(CC) -x$$lang $(TEST_OPTIONS) ; \
		echo "$$lang UNICODE..."; \
		$(CC) -x$$lang -DUNICODE $(TEST_OPTIONS) ; \
d69 1
a69 1
	@@$(WINDRES) --include-dir $(INCDIR) -i $(srcdir)/res.rc -o test.o
d71 2
a72 2
	@@$(WINDRES) --define UNICODE --include-dir $(INCDIR) -i $(srcdir)/res.rc -o test.o
	@@rm -f test.o
d82 2
a83 2
	for i in $(LIBS); do \
		$(INSTALL_DATA) $$i $(DESTDIR)$(inst_libdir)/$$i; \
d90 2
a91 2
	for i in $(HEADERS); do \
		$(INSTALL_DATA) $(srcdir)/../../include/ddk/$$i $(DESTDIR)${ddk_includedir}; \
d99 2
a100 2
	@@for i in $(LIBS); do \
		rm -f $(DESTDIR)$(inst_libdir)/$$i; \
d105 2
a106 2
	@@for i in $(HEADERS); do \
		rm -r $(DESTDIR)${ddk_includedir}/$$i; \
d113 2
a114 2
	@@for i in $(HEADERS); do \
		cp -p $(srcdir)/../../include/ddk/$$i $(distdir)/include/ddk/$$i; \
d118 2
a119 2
	@@for i in $(DISTFILES); do \
		cp -p $(srcdir)/$$i $(distdir)/lib/ddk/$$i; \
@


1.7
log
@Prepare for factoring out common makefile code.
@
text
@d1 3
d12 3
a15 5
# start config section

SHELL = @@SHELL@@

srcdir = @@srcdir@@
d18 1
a18 48
host_alias = @@host@@
build_alias = @@build@@
target_alias = @@target@@
with_cross_host = @@with_cross_host@@
prefix = @@prefix@@
includedir:=@@includedir@@

program_transform_name = @@program_transform_name@@
exec_prefix = @@exec_prefix@@
libdir:=@@libdir@@
bindir = @@bindir@@
ifeq ($(target_alias),$(host_alias))
ifeq ($(build_alias),$(host_alias))
tooldir:=$(exec_prefix)
else
tooldir:=$(exec_prefix)/$(target_alias)
endif
else
tooldir:=$(exec_prefix)/$(target_alias)
endif
datadir = @@datadir@@
infodir = @@infodir@@
ifneq (,$(findstring cygwin,$(target_alias)))
inst_includedir:=$(tooldir)/include/w32api
inst_libdir:=$(tooldir)/lib/w32api
else
ifneq (,$(with_cross_host))
inst_includedir:=$(tooldir)/include/w32api
inst_libdir:=$(tooldir)/lib
else
inst_includedir:=$(includedir)
inst_libdir:=$(libdir)
endif
endif

INSTALL = @@INSTALL@@
INSTALL_DATA = @@INSTALL_DATA@@
INSTALL_PROGRAM = @@INSTALL_PROGRAM@@
mkinstalldirs = mkdir -p

CC = @@CC@@
CC_FOR_TARGET = $(CC)

DLLTOOL = @@DLLTOOL@@
DLLTOOL_FLAGS = --as=$(AS) -k
AS = @@AS@@
AS_FOR_TARGET = $(AS_FOR_TARGET)
WINDRES = @@WINDRES@@
d23 1
d38 2
a39 11
CFLAGS = @@CFLAGS@@
ALL_CFLAGS = $(CFLAGS) $(INCLUDES)

RANLIB = @@RANLIB@@
AR = @@AR@@
LD = @@LD@@

# end config section

# headers

d42 2
a43 2
# libraries

d52 5
a56 2
# targets
all: $(LIBS)
d74 4
a77 32
# make rules

.SUFFIXES: .c .o .def .a

.c.o:
	$(CC) -c $(ALL_CFLAGS) -o $@@ $<

lib%.a : %.def %.o
	$(DLLTOOL) $(DLLTOOL_FLAGS) --output-lib $@@ --def $(srcdir)/$*.def
	$(AR) r $@@ $*.o
	$(RANLIB) $@@

lib%.a: %.def
	$(DLLTOOL) $(DLLTOOL_FLAGS) --output-lib $@@ --def $<

lib%.a: %.o
	$(AR) rc $@@ $*.o
	$(RANLIB) $@@

need-DESTDIR-compatibility = prefix libdir includedir
.PHONY: $(need-DESTDIR-compatibility) fail-DESTDIR-compatibility

$(need-DESTDIR-compatibility):
	@@test -z "$(DESTDIR)" || case "$($@@)" in ?:*) \
	  $(MAKE) --no-print-directory reject="$@@" fail-DESTDIR-compatibility ;; \
	esac

fail-DESTDIR-compatibility:
	$(error DESTDIR is not supported when $(reject) contains Win32 path `$($(reject))'; \
	try `make install $(reject)=$(shell echo '$($(reject))' | sed s,:,:$(DESTDIR),) ...' instead)

# install headers and libraries in a target specified directory.
d94 2
a95 1
# uninstall headers and libraries from a target specified directory
a109 1

d125 1
a125 12
# clean

mostlyclean:
	rm -f *~ *.o *.s

clean:
	rm -f *.o *.a *.s *~

distclean: clean
	rm -f config.cache config.status config.log Makefile

maintainer-clean: distclean
@


1.6
log
@Honor DESTDIR for winsup/mingw and winsup/w32api
@
text
@d40 1
a40 1
inst_includedir:=$(tooldir)/include/w32api/ddk
d44 1
a44 1
inst_includedir:=$(tooldir)/include/w32api/ddk
d47 1
a47 1
inst_includedir:=$(includedir)/ddk
d162 1
a162 1
		$(INSTALL_DATA) $$i $(DESTDIR)$(inst_libdir)/$$i ; \
d165 2
d168 1
a168 1
	$(mkinstalldirs) $(DESTDIR)$(inst_includedir)
d170 1
a170 1
		$(INSTALL_DATA) $(srcdir)/../../include/ddk/$$i $(DESTDIR)$(inst_includedir)/$$i ; \
d178 1
a178 1
		rm -f $(DESTDIR)$(inst_libdir)/$$i ; \
d184 1
a184 1
		rm -r $(DESTDIR)$(inst_includedir)/$$i ; \
d186 1
a186 1
	rmdir $(DESTDIR)$(inst_includedir)
d193 1
a193 1
		cp -p $(srcdir)/../../include/ddk/$$i $(distdir)/include/ddk/$$i ; \
d198 1
a198 1
		cp -p $(srcdir)/$$i $(distdir)/lib/ddk/$$i ; \
@


1.5
log
@2006-09-11  Chris Sutcliffe  <ir0n3h4d@@users.sourceforge.net>

        * lib/Makefile.in: fix typo.
        * lib/ddk/Makefile.in: fix typo.
        * lib/directx/Makefile.in: fix typo.

        Thanks to Keith Marshall (keithmarshall at users dot sourceforge dot net)
        for pointing it out.
@
text
@d144 12
d159 2
a160 2
install-libraries: all
	$(mkinstalldirs) $(inst_libdir)
d162 1
a162 1
		$(INSTALL_DATA) $$i $(inst_libdir)/$$i ; \
d165 2
a166 2
install-headers:
	$(mkinstalldirs) $(inst_includedir)
d168 1
a168 1
		$(INSTALL_DATA) $(srcdir)/../../include/ddk/$$i $(inst_includedir)/$$i ; \
d174 1
a174 1
uninstall-libraries:
d176 1
a176 1
		rm -f $(inst_libdir)/$$i ; \
d178 1
a178 1
	rmdir $(inst_libdir)
d180 1
a180 1
uninstall-headers:
d182 1
a182 1
		rm -r $(inst_includedir)/$$i ; \
d184 1
a184 1
	rmdir $(inst_includedir)
@


1.4
log
@	* configure.in: Substitute with_cross_host in depending files.
	* configure: Regenerate.
	* lib/Makefile.in: Add with_cross_host to allow more granular checks.
	Set installation directories accordingly.
	* lib/ddk/Makefile.in: Ditto.
	* lib/directx/Makefile.in: Ditto.
@
text
@d43 1
a43 1
ifneq (,$with_cross_host)
@


1.3
log
@
	* lib/Makefile.in (dist, install): Correct the install destinations.
	* lib/ddk/Makefile.in (dist, install): Ditto.
@
text
@d20 1
d43 4
d50 1
@


1.2
log
@
	* Makefile.in: Add components for lib/ddk.  Adjust for autoconf-2.53.
	* configure.in: Ditto.
	* lib/Makefile.in: Ditto.
	* lib/ddk/Makefile.in: Correct installation procedure.  Adjust for
	autoconf-2.53.
	* configure: Regenerate.
@
text
@d39 2
a40 2
inst_includedir:=$(tooldir)/include/ddk
inst_libdir:=$(tooldir)/lib
d170 2
a171 2
	mkdir $(distdir)/include
	chmod 755 $(distdir)/include
d173 1
a173 1
		cp -p $(srcdir)/../../ddk/include/$$i $(distdir)/include/ddk/$$i ; \
d175 2
a176 2
	mkdir $(distdir)/lib
	chmod 755 $(distdir)/lib
d178 1
a178 1
		cp -p $(srcdir)/$$i $(distdir)/lib/$$i ; \
@


1.1
log
@
2002-10-06  Casper Hornstrup  <chorns@@it.dk>

	* include/ddk: New subdir.
	* lib/ddk: Ditto.
	* include/ddk/(atm.h, batclass.h, cfg.h, cfgmgr32.h, d4drvif.h,
	d4iface.h, ddkmapi.h, hidclass.h, hidpi.h, hidusage.h, mcd.h,
	miniport.h, minitape.h, mountdev.h, mountmgr.h, ndis.h,
	ndisquid.h, ndistapi.h, ndisvan.h, netevent.h, netpnp.h,
	netdev.h, ntapi.h, ntdd8042.h, ntddbeep.h, ntddcdrm.h,
	ntddcdvd.h, ntddchgr.h, ntdddisk.h, ntddk.h, ntddkbd.h,
	ntddmou.h, ntddndis.h, ntddpar.h, ntddpcm.h, ntddscsi.h,
	ntddser.h, ntddstor.h, ntddtape.h, ntddtdi.h, ntddvdeo.h,
	ntddvol.h, ntifs.h, ntpoapi.h, ntstatus.h, parallel.h, pfhook.h,
	poclass.h, scsi.h, scsiscan.h, scsiwmi.h, smbus.h, srb.h,
	storport.h, tdi.h, tdiinfo.h, tdikrnl.h, tdistat.h, tvout.h,
	upssvc.h, usb.h, usb100.h, usbcamdi.h, usbdi.h, usbioctl.h,
	usbiodef.h, usbscan.h, usbuser.h, video.h, videoagp.h, win2k.h,
	winddi.h, winddk.h, winnt4.h, winxp.h, ws2san.h,
	xfilter.h): New files.
	* lib/ddk/(Makefile.in, apcups.def, cfgmgr32.def, dxapi.def,
	hal.def, hid.def, hidparse.def, mcd.def, ndis.def, ntoskrnl.def,
	scsiport.def, tdi.def, usbcamd.def, usbcamd2.def, videoprt.def,
	win32k.def): Ditto.
@
text
@d17 3
a19 3
host_alias = @@host_alias@@
build_alias = @@build_alias@@
target_alias = @@target_alias@@
d88 1
a88 1
HEADERS = $(notdir $(wildcard $(srcdir)/../include/*.h))
d150 1
a150 1
		$(INSTALL_DATA) $(srcdir)/../../ddk/include/$$i $(inst_includedir)/$$i ; \
@

