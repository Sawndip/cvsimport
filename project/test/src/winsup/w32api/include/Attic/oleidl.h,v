head	1.15;
access;
symbols
	cygwin-1_7_17-release:1.14
	cygwin-64bit-branch:1.14.0.6
	cygwin-1_7_16-release:1.14
	cygwin-1_7_15-release:1.14
	cygwin-1_7_14_2-release:1.14
	cygwin-1_7_14-release:1.14
	cygwin-1_7_12-release:1.14
	cygwin-1_7_11-release:1.14
	cygwin-1_7_10-release:1.14
	cygwin-1_7_9-release:1.14
	cygwin-1_7_8-release:1.14
	cygwin-1_7_7-release:1.14
	cygwin-1_7_5-release:1.14
	cygwin-1_7_4-release:1.14
	cygwin-1_7_3-release:1.14
	cygwin-1_7_2-release:1.14
	cygwin-1_7_1-release:1.14
	cv-branch-2:1.14.0.4
	cr-0x5f1:1.14.0.2
	cv-branch:1.13.0.2
	cr-0x3b58:1.12.0.6
	cr-0x9e:1.12.0.4
	cr-0x9d:1.12.0.2
	corinna-01:1.9
	cr-0x9c:1.9.0.6
	cr-0x9b:1.9.0.4
	cr-0x99:1.9
	Z-emcb-cygwin_daemon:1.9.0.2
	w32api-2_2:1.6
	mingw-runtime-2_4:1.6
	w32api-1_5:1.4
	cygnus_cvs_20020108_pre:1.3
	Z-cygwin_daemon_merge-new_HEAD:1.2
	Z-cygwin_daemon_merge_HEAD:1.2
	cygwin_daemon:1.2.0.4;
locks; strict;
comment	@ * @;
expand	@o@;


1.15
date	2012.11.07.16.52.36;	author cgf;	state dead;
branches;
next	1.14;

1.14
date	2006.07.25.00.22.19;	author dannysmith;	state Exp;
branches;
next	1.13;

1.13
date	2006.04.11.22.56.08;	author ironhead;	state Exp;
branches;
next	1.12;

1.12
date	2004.01.03.22.12.35;	author dannysmith;	state Exp;
branches;
next	1.11;

1.11
date	2004.01.01.22.34.20;	author dannysmith;	state Exp;
branches;
next	1.10;

1.10
date	2003.12.08.19.37.19;	author dannysmith;	state Exp;
branches;
next	1.9;

1.9
date	2003.05.13.02.05.12;	author dannysmith;	state Exp;
branches;
next	1.8;

1.8
date	2003.03.04.00.36.06;	author dannysmith;	state Exp;
branches;
next	1.7;

1.7
date	2003.03.01.06.51.51;	author dannysmith;	state Exp;
branches;
next	1.6;

1.6
date	2002.07.26.04.38.00;	author dannysmith;	state Exp;
branches;
next	1.5;

1.5
date	2002.07.26.04.26.25;	author dannysmith;	state Exp;
branches;
next	1.4;

1.4
date	2002.03.09.09.04.09;	author dannysmith;	state Exp;
branches;
next	1.3;

1.3
date	2001.11.01.19.42.56;	author earnie;	state Exp;
branches;
next	1.2;

1.2
date	2001.08.05.12.47.53;	author earnie;	state Exp;
branches;
next	1.1;

1.1
date	2000.02.17.19.38.31;	author cgf;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2000.02.17.19.38.31;	author cgf;	state Exp;
branches;
next	;


desc
@@


1.15
log
@* mingw: Delete obsolete directory.
* w32api: Ditto.
@
text
@#ifndef _OLEIDL_H
#define _OLEIDL_H
#if __GNUC__ >=3
#pragma GCC system_header
#endif

#ifdef __cplusplus
extern "C" {
#endif

#include <objfwd.h>

#define MK_ALT	32

typedef _COM_interface IParseDisplayName *LPPARSEDISPLAYNAME;
typedef _COM_interface IOleContainer *LPOLECONTAINER;
typedef _COM_interface IOleClientSite *LPOLECLIENTSITE;
typedef _COM_interface IOleObject *LPOLEOBJECT;
typedef _COM_interface IDropTarget *LPDROPTARGET;
typedef _COM_interface IDropSource *LPDROPSOURCE;
typedef _COM_interface IEnumOleUndoUnits *LPENUMOLEUNDOUNITS;
typedef _COM_interface IEnumOLEVERB *LPENUMOLEVERB;
typedef _COM_interface IOleWindow *LPOLEWINDOW;
typedef _COM_interface IOleInPlaceUIWindow *LPOLEINPLACEUIWINDOW;
typedef _COM_interface IOleInPlaceActiveObject *LPOLEINPLACEACTIVEOBJECT;
typedef _COM_interface IOleInPlaceFrame *LPOLEINPLACEFRAME;
typedef _COM_interface IOleAdviseHolder *LPOLEADVISEHOLDER;
typedef _COM_interface IViewObject *LPVIEWOBJECT;
typedef _COM_interface IViewObject2 *LPVIEWOBJECT2;
typedef _COM_interface IOleCache *LPOLECACHE;
typedef _COM_interface IOleCache2 *LPOLECACHE2;
typedef _COM_interface IOleCacheControl *LPOLECACHECONTROL;

typedef enum tagBINDSPEED
{
	BINDSPEED_INDEFINITE=1,
	BINDSPEED_MODERATE,
	BINDSPEED_IMMEDIATE
} BINDSPEED;
typedef enum tagOLEWHICHMK {
	OLEWHICHMK_CONTAINER=1,
	OLEWHICHMK_OBJREL,
	OLEWHICHMK_OBJFULL
} OLEWHICHMK;
typedef enum tagOLEGETMONIKER {
	OLEGETMONIKER_ONLYIFTHERE=1,
	OLEGETMONIKER_FORCEASSIGN,
	OLEGETMONIKER_UNASSIGN,
	OLEGETMONIKER_TEMPFORUSER
} OLEGETMONIKER;
typedef enum tagUSERCLASSTYPE {
	USERCLASSTYPE_FULL=1,
	USERCLASSTYPE_SHORT,
	USERCLASSTYPE_APPNAME
} USERCLASSTYPE;

#ifdef __GNUC__
__extension__  /* IS0 C says enums limited to range of int */ 
#endif
typedef enum tagDROPEFFECT {
	DROPEFFECT_NONE=0,
	DROPEFFECT_COPY=1,
	DROPEFFECT_MOVE=2,
	DROPEFFECT_LINK=4,
	DROPEFFECT_SCROLL=0x80000000
} DROPEFFECT;
typedef struct tagOleMenuGroupWidths {
	LONG width[6];
} OLEMENUGROUPWIDTHS,*LPOLEMENUGROUPWIDTHS;
typedef HGLOBAL HOLEMENU;
typedef enum tagOLECLOSE {
	OLECLOSE_SAVEIFDIRTY,
	OLECLOSE_NOSAVE,
	OLECLOSE_PROMPTSAVE
} OLECLOSE;
typedef struct tagOLEVERB {
	LONG lVerb;
	LPWSTR lpszVerbName;
	DWORD fuFlags;
	DWORD grfAttribs;
} OLEVERB,*LPOLEVERB;
typedef RECT BORDERWIDTHS;
typedef LPRECT LPBORDERWIDTHS;
typedef LPCRECT LPCBORDERWIDTHS;
typedef struct tagOIFI {
	UINT cb;
	BOOL fMDIApp;
	HWND hwndFrame;
	HACCEL haccel;
	UINT cAccelEntries;
}OLEINPLACEFRAMEINFO,*LPOLEINPLACEFRAMEINFO;

DECLARE_ENUMERATOR(OLEVERB);
typedef IEnumOLEVERB IEnumOleVerb;

EXTERN_C const IID IID_IParseDisplayName;
#define INTERFACE IParseDisplayName
DECLARE_INTERFACE_(IParseDisplayName,IUnknown)
{
	STDMETHOD(QueryInterface)(THIS_ REFIID,PVOID*) PURE;
	STDMETHOD_(ULONG,AddRef)(THIS) PURE;
	STDMETHOD_(ULONG,Release)(THIS) PURE;
	STDMETHOD(ParseDisplayName)(THIS_ IBindCtx*,LPOLESTR,ULONG*,IMoniker**) PURE;
};
#undef INTERFACE

#ifdef COBJMACROS
#define IParseDisplayName_QueryInterface(T,a,b) (T)->lpVtbl->QueryInterface(T,a,b)
#define IParseDisplayName_AddRef(T) (T)->lpVtbl->AddRef(T)
#define IParseDisplayName_Release(T) (T)->lpVtbl->Release(T)
#define IParseDisplayName_ParseDisplayName(T,a,b,c,d) (T)->lpVtbl->ParseDisplayName(T,a,b,c,d)
#endif

EXTERN_C const IID IID_IOleContainer;
#define INTERFACE IOleContainer
DECLARE_INTERFACE_(IOleContainer,IParseDisplayName)
{
	STDMETHOD(QueryInterface)(THIS_ REFIID,PVOID*) PURE;
	STDMETHOD_(ULONG,AddRef)(THIS) PURE;
	STDMETHOD_(ULONG,Release)(THIS) PURE;
	STDMETHOD(ParseDisplayName)(THIS_ IBindCtx*,LPOLESTR,ULONG*,IMoniker**) PURE;
	STDMETHOD(EnumObjects)(THIS_ DWORD,IEnumUnknown**) PURE;
	STDMETHOD(LockContainer)(THIS_ BOOL) PURE;
};
#undef INTERFACE

EXTERN_C const IID IID_IOleItemContainer;
#define INTERFACE IOleItemContainer
DECLARE_INTERFACE_(IOleItemContainer,IOleContainer)
{
	STDMETHOD(QueryInterface)(THIS_ REFIID,PVOID*) PURE;
	STDMETHOD_(ULONG,AddRef)(THIS) PURE;
	STDMETHOD_(ULONG,Release)(THIS) PURE;
	STDMETHOD(ParseDisplayName)(THIS_ IBindCtx*,LPOLESTR,ULONG*,IMoniker**) PURE;
	STDMETHOD(EnumObjects)(THIS_ DWORD,IEnumUnknown**) PURE;
	STDMETHOD(LockContainer)(THIS_ BOOL) PURE;
	STDMETHOD(GetObject)(THIS_ LPOLESTR,DWORD,IBindCtx*,REFIID,void**) PURE;
	STDMETHOD(GetObjectStorage)(THIS_ LPOLESTR,IBindCtx*,REFIID,void**) PURE;
	STDMETHOD(IsRunning)(THIS_ LPOLESTR) PURE;
};
#undef INTERFACE

#ifdef COBJMACROS
#define IOleItemContainer_QueryInterface(T,a,b) (T)->lpVtbl->QueryInterface(T,a,b)
#define IOleItemContainer_AddRef(T) (T)->lpVtbl->AddRef(T)
#define IOleItemContainer_Release(T) (T)->lpVtbl->Release(T)
#define IOleItemContainer_ParseDisplayName(T,a,b,c,d) (T)->lpVtbl->ParseDisplayName(T,a,b,c,d)
#define IOleItemContainer_EnumObjects(T,a,b) (T)->lpVtbl->EnumObjects(T,a,b)
#define IOleItemContainer_LockContainer(T,a) (T)->lpVtbl->LockContainer(T,a)
#define IOleItemContainer_GetObject(T,a,b,c,d,e) (T)->lpVtbl->GetObject(T,a,b,c,d,e)
#define IOleItemContainer_GetObjectStorage(T,a,b,c,d) (T)->lpVtbl->GetObjectStorage(T,a,b,c,d)
#define IOleItemContainer_IsRunning(T,a) (T)->lpVtbl->IsRunning(T,a)
#endif

EXTERN_C const IID IID_IOleClientSite;
#define INTERFACE IOleClientSite
DECLARE_INTERFACE_(IOleClientSite,IUnknown)
{
	STDMETHOD(QueryInterface)(THIS_ REFIID,PVOID*) PURE;
	STDMETHOD_(ULONG,AddRef)(THIS) PURE;
	STDMETHOD_(ULONG,Release)(THIS) PURE;
	STDMETHOD(SaveObject)(THIS) PURE;
	STDMETHOD(GetMoniker)(THIS_ DWORD,DWORD,LPMONIKER*) PURE;
	STDMETHOD(GetContainer)(THIS_ LPOLECONTAINER*) PURE;
	STDMETHOD(ShowObject)(THIS) PURE;
	STDMETHOD(OnShowWindow)(THIS_ BOOL) PURE;
	STDMETHOD(RequestNewObjectLayout)(THIS) PURE;
};
#undef INTERFACE

#ifdef COBJMACROS
#define IOleClientSite_QueryInterface(T,a,b) (T)->lpVtbl->QueryInterface(T,a,b)
#define IOleClientSite_AddRef(T) (T)->lpVtbl->AddRef(T)
#define IOleClientSite_Release(T) (T)->lpVtbl->Release(T)
#define IOleClientSite_SaveObject(T) (T)->lpVtbl->SaveObject(T)
#define IOleClientSite_GetMoniker(T,a,b,c) (T)->lpVtbl->GetMoniker(T,a,b,c)
#define IOleClientSite_GetContainer(T,a) (T)->lpVtbl->GetContainer(T,a)
#define IOleClientSite_ShowObject(T) (T)->lpVtbl->ShowObject(T)
#define IOleClientSite_OnShowWindow(T,a) (T)->lpVtbl->OnShowWindow(T,a)
#define IOleClientSite_RequestNewObjectLayout(T) (T)->lpVtbl->RequestNewObjectLayout(T)
#endif

EXTERN_C const IID IID_IOleObject;
#define INTERFACE IOleObject
DECLARE_INTERFACE_(IOleObject,IUnknown)
{
	STDMETHOD(QueryInterface)(THIS_ REFIID,PVOID*) PURE;
	STDMETHOD_(ULONG,AddRef)(THIS) PURE;
	STDMETHOD_(ULONG,Release)(THIS) PURE;
	STDMETHOD(SetClientSite)(THIS_ LPOLECLIENTSITE) PURE;
	STDMETHOD(GetClientSite)(THIS_ LPOLECLIENTSITE*) PURE;
	STDMETHOD(SetHostNames)(THIS_ LPCOLESTR,LPCOLESTR) PURE;
	STDMETHOD(Close)(THIS_ DWORD) PURE;
	STDMETHOD(SetMoniker)(THIS_ DWORD,LPMONIKER) PURE;
	STDMETHOD(GetMoniker)(THIS_ DWORD,DWORD,LPMONIKER*) PURE;
	STDMETHOD(InitFromData)(THIS_ LPDATAOBJECT,BOOL,DWORD) PURE;
	STDMETHOD(GetClipboardData)(THIS_ DWORD,LPDATAOBJECT*) PURE;
	STDMETHOD(DoVerb)(THIS_ LONG,LPMSG,LPOLECLIENTSITE,LONG,HWND,LPCRECT) PURE;
	STDMETHOD(EnumVerbs)(THIS_ LPENUMOLEVERB*) PURE;
	STDMETHOD(Update)(THIS) PURE;
	STDMETHOD(IsUpToDate)(THIS) PURE;
	STDMETHOD(GetUserClassID)(THIS_ LPCLSID) PURE;
	STDMETHOD(GetUserType)(THIS_ DWORD,LPOLESTR*) PURE;
	STDMETHOD(SetExtent)(THIS_ DWORD,SIZEL*) PURE;
	STDMETHOD(GetExtent)(THIS_ DWORD,SIZEL*) PURE;
	STDMETHOD(Advise)(THIS_ LPADVISESINK,PDWORD) PURE;
	STDMETHOD(Unadvise)(THIS_ DWORD) PURE;
	STDMETHOD(EnumAdvise)(THIS_ LPENUMSTATDATA*) PURE;
	STDMETHOD(GetMiscStatus)(THIS_ DWORD,PDWORD) PURE;
	STDMETHOD(SetColorScheme)(THIS_ LPLOGPALETTE) PURE;
};
#undef INTERFACE

#ifdef COBJMACROS
#define IOleObject_QueryInterface(T,a,b) (T)->lpVtbl->QueryInterface(T,a,b)
#define IOleObject_AddRef(T) (T)->lpVtbl->AddRef(T)
#define IOleObject_Release(T) (T)->lpVtbl->Release(T)
#define IOleObject_SetClientSite(T,a) (T)->lpVtbl->SetClientSite(T,a)
#define IOleObject_GetClientSite(T,a) (T)->lpVtbl->GetClientSite(T,a)
#define IOleObject_SetHostNames(T,a,b) (T)->lpVtbl->SetHostNames(T,a,b)
#define IOleObject_Close(T,a) (T)->lpVtbl->Close(T,a)
#define IOleObject_SetMoniker(T,a,b) (T)->lpVtbl->SetMoniker(T,a,b)
#define IOleObject_GetMoniker(T,a,b,c) (T)->lpVtbl->GetMoniker(T,a,b,c)
#define IOleObject_InitFromData(T,a,b,c) (T)->lpVtbl->InitFromData(T,a,b,c)
#define IOleObject_GetClipboardData(T,a,b) (T)->lpVtbl->GetClipboardData(T,a,b)
#define IOleObject_DoVerb(T,a,b,c,d,e,f) (T)->lpVtbl->DoVerb(T,a,b,c,d,e,f)
#define IOleObject_EnumVerbs(T,a) (T)->lpVtbl->EnumVerbs(T,a)
#define IOleObject_Update(T) (T)->lpVtbl->Update(T)
#define IOleObject_IsUpToDate(T) (T)->lpVtbl->IsUpToDate(T)
#define IOleObject_GetUserClassID(T,a) (T)->lpVtbl->GetUserClassID(T,a)
#define IOleObject_GetUserType(T,a,b) (T)->lpVtbl->GetUserType(T,a,b)
#define IOleObject_SetExtent(T,a,b) (T)->lpVtbl->SetExtent(T,a,b)
#define IOleObject_GetExtent(T,a,b) (T)->lpVtbl->GetExtent(T,a,b)
#define IOleObject_Advise(T,a,b) (T)->lpVtbl->Advise(T,a,b)
#define IOleObject_Unadvise(T,a) (T)->lpVtbl->Unadvise(T,a)
#define IOleObject_EnumAdvise(T,a) (T)->lpVtbl->EnumAdvise(T,a)
#define IOleObject_GetMiscStatus(T,a,b) (T)->lpVtbl->GetMiscStatus(T,a,b)
#define IOleObject_SetColorScheme(T,a) (T)->lpVtbl->SetColorScheme(T,a)
#endif

EXTERN_C const IID IID_IOleWindow;
#define INTERFACE IOleWindow
DECLARE_INTERFACE_(IOleWindow,IUnknown)
{
	STDMETHOD(QueryInterface)(THIS_ REFIID,PVOID*) PURE;
	STDMETHOD_(ULONG,AddRef)(THIS) PURE;
	STDMETHOD_(ULONG,Release)(THIS) PURE;
	STDMETHOD(GetWindow)(THIS_ HWND*) PURE;
	STDMETHOD(ContextSensitiveHelp)(THIS_ BOOL) PURE;
};
#undef INTERFACE

#ifdef COBJMACROS
#define IOleWindow_QueryInterface(T,a,b) (T)->lpVtbl->QueryInterface(T,a,b)
#define IOleWindow_AddRef(T) (T)->lpVtbl->AddRef(T)
#define IOleWindow_Release(T) (T)->lpVtbl->Release(T)
#define IOleWindow_GetWindow(T,a) (T)->lpVtbl->GetWindow(T,a)
#define IOleWindow_ContextSensitiveHelp(T,a) (T)->lpVtbl->ContextSensitiveHelp(T,a)
#endif

EXTERN_C const IID IID_IOleInPlaceUIWindow;
#define INTERFACE IOleInPlaceUIWindow
DECLARE_INTERFACE_(IOleInPlaceUIWindow,IOleWindow)
{
	STDMETHOD(QueryInterface)(THIS_ REFIID,PVOID*) PURE;
	STDMETHOD_(ULONG,AddRef)(THIS) PURE;
	STDMETHOD_(ULONG,Release)(THIS) PURE;
	STDMETHOD(GetWindow)(THIS_ HWND*) PURE;
	STDMETHOD(ContextSensitiveHelp)(THIS_ BOOL) PURE;
	STDMETHOD(GetBorder)(THIS_ LPRECT) PURE;
	STDMETHOD(RequestBorderSpace)(THIS_ LPCBORDERWIDTHS) PURE;
	STDMETHOD(SetBorderSpace)(THIS_ LPCBORDERWIDTHS) PURE;
	STDMETHOD(SetActiveObject)(THIS_ LPOLEINPLACEACTIVEOBJECT,LPCOLESTR) PURE;
};
#undef INTERFACE

EXTERN_C const IID IID_IOleInPlaceObject;
#define INTERFACE IOleInPlaceObject
DECLARE_INTERFACE_(IOleInPlaceObject,IOleWindow)
{
	STDMETHOD(QueryInterface)(THIS_ REFIID,PVOID*) PURE;
	STDMETHOD_(ULONG,AddRef)(THIS) PURE;
	STDMETHOD_(ULONG,Release)(THIS) PURE;
	STDMETHOD(GetWindow)(THIS_ HWND*) PURE;
	STDMETHOD(ContextSensitiveHelp)(THIS_ BOOL) PURE;
	STDMETHOD(InPlaceDeactivate)(THIS) PURE;
	STDMETHOD(UIDeactivate)(THIS) PURE;
	STDMETHOD(SetObjectRects)(THIS_ LPCRECT,LPCRECT) PURE;
	STDMETHOD(ReactivateAndUndo)(THIS) PURE;
};
#undef INTERFACE

EXTERN_C const IID IID_IOleInPlaceActiveObject;
#define INTERFACE IOleInPlaceActiveObject
DECLARE_INTERFACE_(IOleInPlaceActiveObject,IOleWindow)
{
	STDMETHOD(QueryInterface)(THIS_ REFIID,PVOID*) PURE;
	STDMETHOD_(ULONG,AddRef)(THIS) PURE;
	STDMETHOD_(ULONG,Release)(THIS) PURE;
	STDMETHOD(GetWindow)(THIS_ HWND*) PURE;
	STDMETHOD(ContextSensitiveHelp)(THIS_ BOOL) PURE;
	STDMETHOD(TranslateAccelerator)(THIS_ LPMSG) PURE;
	STDMETHOD(OnFrameWindowActivate)(THIS_ BOOL) PURE;
	STDMETHOD(OnDocWindowActivate)(THIS_ BOOL) PURE;
	STDMETHOD(ResizeBorder)(THIS_ LPCRECT,LPOLEINPLACEUIWINDOW,BOOL) PURE;
	STDMETHOD(EnableModeless)(THIS_ BOOL) PURE;
};
#undef INTERFACE

EXTERN_C const IID IID_IOleInPlaceFrame;
#define INTERFACE IOleInPlaceFrame
DECLARE_INTERFACE_(IOleInPlaceFrame,IOleInPlaceUIWindow)
{
	STDMETHOD(QueryInterface)(THIS_ REFIID,PVOID*) PURE;
	STDMETHOD_(ULONG,AddRef)(THIS) PURE;
	STDMETHOD_(ULONG,Release)(THIS) PURE;
	STDMETHOD(GetWindow)(THIS_ HWND*) PURE;
	STDMETHOD(ContextSensitiveHelp)(THIS_ BOOL) PURE;
	STDMETHOD(GetBorder)(THIS_ LPRECT) PURE;
	STDMETHOD(RequestBorderSpace)(THIS_ LPCBORDERWIDTHS) PURE;
	STDMETHOD(SetBorderSpace)(THIS_ LPCBORDERWIDTHS) PURE;
	STDMETHOD(SetActiveObject)(THIS_ LPOLEINPLACEACTIVEOBJECT,LPCOLESTR) PURE;
	STDMETHOD(InsertMenus)(THIS_ HMENU,LPOLEMENUGROUPWIDTHS) PURE;
	STDMETHOD(SetMenu)(THIS_ HMENU,HOLEMENU,HWND) PURE;
	STDMETHOD(RemoveMenus)(THIS_ HMENU) PURE;
	STDMETHOD(SetStatusText)(THIS_ LPCOLESTR) PURE;
	STDMETHOD(EnableModeless)(THIS_ BOOL) PURE;
	STDMETHOD(TranslateAccelerator)(THIS_ LPMSG,WORD) PURE;
};
#undef INTERFACE

#ifdef COBJMACROS
#define IOleInPlaceFrame_QueryInterface(T,a,b) (T)->lpVtbl->QueryInterface(T,a,b)
#define IOleInPlaceFrame_AddRef(T) (T)->lpVtbl->AddRef(T)
#define IOleInPlaceFrame_Release(T) (T)->lpVtbl->Release(T)
#define IOleInPlaceFrame_GetWindow(T,a) (T)->lpVtbl->GetWindow(T,a)
#define IOleInPlaceFrame_ContextSensitiveHelp(T,a) (T)->lpVtbl->ContextSensitiveHelp(T,a)
#define IOleInPlaceFrame_GetBorder(T,a) (T)->lpVtbl->GetBorder(T,a)
#define IOleInPlaceFrame_RequestBorderSpace(T,a) (T)->lpVtbl->RequestBorderSpace(T,a)
#define IOleInPlaceFrame_SetBorderSpace(T,a) (T)->lpVtbl->SetBorderSpace(T,a)
#define IOleInPlaceFrame_SetActiveObject(T,a,b) (T)->lpVtbl->SetActiveObject(T,a,b)
#define IOleInPlaceFrame_InsertMenus(T,a,b) (T)->lpVtbl->InsertMenus(T,a,b)
#define IOleInPlaceFrame_SetMenu(T,a,b,c) (T)->lpVtbl->SetMenu(T,a,b,c)
#define IOleInPlaceFrame_RemoveMenus(T,a) (T)->lpVtbl->RemoveMenus(T,a)
#define IOleInPlaceFrame_SetStatusText(T,a) (T)->lpVtbl->SetStatusText(T,a)
#define IOleInPlaceFrame_EnableModeless(T,a) (T)->lpVtbl->EnableModeless(T,a)
#define IOleInPlaceFrame_TranslateAccelerator(T,a,b) (T)->lpVtbl->TranslateAccelerator(T,a,b)
#endif

EXTERN_C const IID IID_IOleInPlaceSite;
#define INTERFACE IOleInPlaceSite
DECLARE_INTERFACE_(IOleInPlaceSite,IOleWindow)
{
	STDMETHOD(QueryInterface)(THIS_ REFIID,PVOID*) PURE;
	STDMETHOD_(ULONG,AddRef)(THIS) PURE;
	STDMETHOD_(ULONG,Release)(THIS) PURE;
	STDMETHOD(GetWindow)(THIS_ HWND*) PURE;
	STDMETHOD(ContextSensitiveHelp)(THIS_ BOOL) PURE;
	STDMETHOD(CanInPlaceActivate)(THIS) PURE;
	STDMETHOD(OnInPlaceActivate)(THIS) PURE;
	STDMETHOD(OnUIActivate)(THIS) PURE;
	STDMETHOD(GetWindowContext)(THIS_ IOleInPlaceFrame**,IOleInPlaceUIWindow**,LPRECT,LPRECT,LPOLEINPLACEFRAMEINFO) PURE;
	STDMETHOD(Scroll)(THIS_ SIZE) PURE;
	STDMETHOD(OnUIDeactivate)(THIS_ BOOL) PURE;
	STDMETHOD(OnInPlaceDeactivate)(THIS) PURE;
	STDMETHOD(DiscardUndoState)(THIS) PURE;
	STDMETHOD(DeactivateAndUndo)(THIS) PURE;
	STDMETHOD(OnPosRectChange)(THIS_ LPCRECT) PURE;
};
#undef INTERFACE

EXTERN_C const IID IID_IOleAdviseHolder;
#define INTERFACE IOleAdviseHolder
DECLARE_INTERFACE_(IOleAdviseHolder,IUnknown)
{
	STDMETHOD(QueryInterface)(THIS_ REFIID,PVOID*) PURE;
	STDMETHOD_(ULONG,AddRef)(THIS) PURE;
	STDMETHOD_(ULONG,Release)(THIS) PURE;
	STDMETHOD(Advise)(THIS_ LPADVISESINK,PDWORD) PURE;
	STDMETHOD(Unadvise)(THIS_ DWORD) PURE;
	STDMETHOD(EnumAdvise)(THIS_ LPENUMSTATDATA*) PURE;
	STDMETHOD(SendOnRename)(THIS_ LPMONIKER) PURE;
	STDMETHOD(SendOnSave)(THIS) PURE;
	STDMETHOD(SendOnClose)(THIS) PURE;
};
#undef INTERFACE

#ifdef COBJMACROS
#define IOleAdviseHolder_QueryInterface(T,a,b) (T)->lpVtbl->QueryInterface(T,a,b)
#define IOleAdviseHolder_AddRef(T) (T)->lpVtbl->AddRef(T)
#define IOleAdviseHolder_Release(T) (T)->lpVtbl->Release(T)
#define IOleAdviseHolder_Advise(T,a,b) (T)->lpVtbl->Advise(T,a,b)
#define IOleAdviseHolder_Unadvise(T,a) (T)->lpVtbl->Unadvise(T,a)
#define IOleAdviseHolder_EnumAdvise(T,a) (T)->lpVtbl->EnumAdvise(T,a)
#define IOleAdviseHolder_SendOnRename(T,a) (T)->lpVtbl->SendOnRename(T,a)
#define IOleAdviseHolder_SendOnSave(T) (T)->lpVtbl->SendOnSave(T)
#define IOleAdviseHolder_SendOnClose(T) (T)->lpVtbl->SendOnClose(T)
#endif

EXTERN_C const IID IID_IDropSource;
#define INTERFACE IDropSource
DECLARE_INTERFACE_(IDropSource,IUnknown)
{
	STDMETHOD(QueryInterface)(THIS_ REFIID,PVOID*) PURE;
	STDMETHOD_(ULONG,AddRef)(THIS) PURE;
	STDMETHOD_(ULONG,Release)(THIS) PURE;
	STDMETHOD(QueryContinueDrag)(THIS_ BOOL,DWORD) PURE;
	STDMETHOD(GiveFeedback)(THIS_ DWORD) PURE;
};
#undef INTERFACE

#ifdef COBJMACROS
#define IDropSource_QueryInterface(T,a,b) (T)->lpVtbl->QueryInterface(T,a,b)
#define IDropSource_AddRef(T) (T)->lpVtbl->AddRef(T)
#define IDropSource_Release(T) (T)->lpVtbl->Release(T)
#define IDropSource_QueryContinueDrag(T,a,b) (T)->lpVtbl->QueryContinueDrag(T,a,b)
#define IDropSource_GiveFeedback(T,a) (T)->lpVtbl->GiveFeedback(T,a)
#endif

EXTERN_C const IID IID_IDropTarget;
#define INTERFACE IDropTarget
DECLARE_INTERFACE_(IDropTarget,IUnknown)
{
	STDMETHOD(QueryInterface)(THIS_ REFIID,PVOID*) PURE;
	STDMETHOD_(ULONG,AddRef)(THIS) PURE;
	STDMETHOD_(ULONG,Release)(THIS) PURE;
	STDMETHOD(DragEnter)(THIS_ LPDATAOBJECT,DWORD,POINTL,PDWORD) PURE;
	STDMETHOD(DragOver)(THIS_ DWORD,POINTL,PDWORD) PURE;
	STDMETHOD(DragLeave)(THIS) PURE;
	STDMETHOD(Drop)(THIS_ LPDATAOBJECT,DWORD,POINTL,PDWORD) PURE;
};
#undef INTERFACE

#ifdef COBJMACROS
#define IDropTarget_QueryInterface(T,a,b) (T)->lpVtbl->QueryInterface(T,a,b)
#define IDropTarget_AddRef(T) (T)->lpVtbl->AddRef(T)
#define IDropTarget_Release(T) (T)->lpVtbl->Release(T)
#define IDropTarget_DragEnter(T,a,b,c,d) (T)->lpVtbl->DragEnter(T,a,b,c,d)
#define IDropTarget_DragOver(T,a,b,c) (T)->lpVtbl->DragOver(T,a,b,c)
#define IDropTarget_DragLeave(T) (T)->lpVtbl->DragLeave(T)
#define IDropTarget_Drop(T,a,b,c,d) (T)->lpVtbl->Drop(T,a,b,c,d)
#endif

typedef BOOL(CALLBACK *__IView_pfncont)(DWORD);
EXTERN_C const IID IID_IViewObject;
#define INTERFACE IViewObject
DECLARE_INTERFACE_(IViewObject,IUnknown)
{
	STDMETHOD(QueryInterface)(THIS_ REFIID,PVOID*) PURE;
	STDMETHOD_(ULONG,AddRef)(THIS) PURE;
	STDMETHOD_(ULONG,Release)(THIS) PURE;
	STDMETHOD(Draw)(THIS_ DWORD,LONG,PVOID,DVTARGETDEVICE*,HDC,HDC,LPCRECTL,LPCRECTL,__IView_pfncont pfnContinue,DWORD) PURE;
	STDMETHOD(GetColorSet)(THIS_ DWORD,LONG,PVOID,DVTARGETDEVICE*,HDC,LPLOGPALETTE*) PURE;
	STDMETHOD(Freeze)(THIS_ DWORD,LONG,PVOID,PDWORD) PURE;
	STDMETHOD(Unfreeze)(THIS_ DWORD) PURE;
	STDMETHOD(SetAdvise)(THIS_ DWORD,DWORD,IAdviseSink*) PURE;
	STDMETHOD(GetAdvise)(THIS_ PDWORD,PDWORD,IAdviseSink**) PURE;
};
#undef INTERFACE

#ifdef COBJMACROS
#define IViewObject_QueryInterface(T,a,b) (T)->lpVtbl->QueryInterface(T,a,b)
#define IViewObject_AddRef(T) (T)->lpVtbl->AddRef(T)
#define IViewObject_Release(T) (T)->lpVtbl->Release(T)
#define IViewObject_Draw(T,a,b,c,d,e,f,g,h,i,j) (T)->lpVtbl->Draw(T,a,b,c,d,e,f,g,h,i,j)
#define IViewObject_GetColorSet(T,a,b,c,d,e,f) (T)->lpVtbl->GetColorSet(T,a,b,c,d,e,f)
#define IViewObject_Freeze(T,a,b,c,d) (T)->lpVtbl->Freeze(T,a,b,c,d)
#define IViewObject_Unfreeze(T,a) (T)->lpVtbl->Unfreeze(T,a)
#define IViewObject_SetAdvise(T,a,b,c) (T)->lpVtbl->SetAdvise(T,a,b,c)
#define IViewObject_GetAdvise(T,a,b,c) (T)->lpVtbl->GetAdvise(T,a,b,c)
#endif

EXTERN_C const IID IID_IViewObject2;
#define INTERFACE IViewObject2
DECLARE_INTERFACE_(IViewObject2,IViewObject)
{
	STDMETHOD(QueryInterface)(THIS_ REFIID,PVOID*) PURE;
	STDMETHOD_(ULONG,AddRef)(THIS) PURE;
	STDMETHOD_(ULONG,Release)(THIS) PURE;
	STDMETHOD(Draw)(THIS_ DWORD,LONG,PVOID,DVTARGETDEVICE*,HDC,HDC,LPCRECTL,LPCRECTL,__IView_pfncont pfnContinue,DWORD) PURE;
	STDMETHOD(GetColorSet)(THIS_ DWORD,LONG,PVOID,DVTARGETDEVICE*,HDC,LPLOGPALETTE*) PURE;
	STDMETHOD(Freeze)(THIS_ DWORD,LONG,PVOID,PDWORD) PURE;
	STDMETHOD(Unfreeze)(THIS_ DWORD) PURE;
	STDMETHOD(SetAdvise)(THIS_ DWORD,DWORD,IAdviseSink*) PURE;
	STDMETHOD(GetAdvise)(THIS_ PDWORD,PDWORD,IAdviseSink**) PURE;
	STDMETHOD(GetExtent)(THIS_ DWORD,LONG,DVTARGETDEVICE*,LPSIZEL) PURE;
};
#undef INTERFACE

#ifdef COBJMACROS
#define IViewObject2_QueryInterface(T,a,b) (T)->lpVtbl->QueryInterface(T,a,b)
#define IViewObject2_AddRef(T) (T)->lpVtbl->AddRef(T)
#define IViewObject2_Release(T) (T)->lpVtbl->Release(T)
#define IViewObject2_Draw(T,a,b,c,d,e,f,g,h,i,j) (T)->lpVtbl->Draw(T,a,b,c,d,e,f,g,h,i,j)
#define IViewObject2_GetColorSet(T,a,b,c,d,e,f) (T)->lpVtbl->GetColorSet(T,a,b,c,d,e,f)
#define IViewObject2_Freeze(T,a,b,c,d) (T)->lpVtbl->Freeze(T,a,b,c,d)
#define IViewObject2_Unfreeze(T,a) (T)->lpVtbl->Unfreeze(T,a)
#define IViewObject2_SetAdvise(T,a,b,c) (T)->lpVtbl->SetAdvise(T,a,b,c)
#define IViewObject2_GetAdvise(T,a,b,c) (T)->lpVtbl->GetAdvise(T,a,b,c)
#define IViewObject2_GetExtent(T,a,b,c,d) (T)->lpVtbl->GetExtent(T,a,b,c,d)
#endif

EXTERN_C const IID IID_IOleCache;
#define INTERFACE IOleCache
DECLARE_INTERFACE_(IOleCache,IUnknown)
{
	STDMETHOD(QueryInterface)(THIS_ REFIID,PVOID*) PURE;
	STDMETHOD_(ULONG,AddRef)(THIS) PURE;
	STDMETHOD_(ULONG,Release)(THIS) PURE;
	STDMETHOD(Cache)(THIS_ FORMATETC*,DWORD,DWORD*) PURE;
	STDMETHOD(Uncache)(THIS_ DWORD) PURE; 
	STDMETHOD(EnumCache)(THIS_ IEnumSTATDATA**); 
	STDMETHOD(InitCache)(THIS_ LPDATAOBJECT); 
	STDMETHOD(SetData)(THIS_ FORMATETC*,STGMEDIUM*,BOOL); 
};
#undef INTERFACE

#ifdef COBJMACROS
#define IOleCache_QueryInterface(T,a,b) (T)->lpVtbl->QueryInterface(T,a,b)
#define IOleCache_AddRef(T) (T)->lpVtbl->AddRef(T)
#define IOleCache_Release(T) (T)->lpVtbl->Release(T)
#define IOleCache_Cache(T,a,b,c) (T)->lpVtbl->Cache(T,a,b,c)
#define IOleCache_Uncache(T,a) (T)->lpVtbl->Uncache(T,a)
#define IOleCache_EnumCache(T,a) (T)->lpVtbl->EnumCache(T,a)
#define IOleCache_InitCache(T,a) (T)->lpVtbl->InitCache(T,a)
#define IOleCache_SetData(T,a,b,c) (T)->lpVtbl->SetData(T,a,b,c)
#endif

EXTERN_C const IID IID_IOleCache2;
#define INTERFACE IOleCache2
DECLARE_INTERFACE_(IOleCache2,IOleCache)
{
	STDMETHOD(QueryInterface)(THIS_ REFIID,PVOID*) PURE;
	STDMETHOD_(ULONG,AddRef)(THIS) PURE;
	STDMETHOD_(ULONG,Release)(THIS) PURE;
	STDMETHOD(Cache)(THIS_ FORMATETC*,DWORD,DWORD*) PURE;
	STDMETHOD(Uncache)(THIS_ DWORD) PURE; 
	STDMETHOD(EnumCache)(THIS_ IEnumSTATDATA**) PURE; 
	STDMETHOD(InitCache)(THIS_ LPDATAOBJECT) PURE; 
	STDMETHOD(SetData)(THIS_ FORMATETC*,STGMEDIUM*,BOOL) PURE; 
	STDMETHOD(UpdateCache)(THIS_ LPDATAOBJECT,DWORD,LPVOID) PURE; 
	STDMETHOD(DiscardCache)(THIS_ DWORD) PURE;
};
#undef INTERFACE

#ifdef COBJMACROS
#define IOleCache2_QueryInterface(T,a,b) (T)->lpVtbl->QueryInterface(T,a,b)
#define IOleCache2_AddRef(T) (T)->lpVtbl->AddRef(T)
#define IOleCache2_Release(T) (T)->lpVtbl->Release(T)
#define IOleCache2_Cache(T,a,b,c) (T)->lpVtbl->Cache(T,a,b,c)
#define IOleCache2_Uncache(T,a) (T)->lpVtbl->Uncache(T,a)
#define IOleCache2_EnumCache(T,a) (T)->lpVtbl->EnumCache(T,a)
#define IOleCache2_InitCache(T,a) (T)->lpVtbl->InitCache(T,a)
#define IOleCache2_SetData(T,a,b,c) (T)->lpVtbl->SetData(T,a,b,c)
#define IOleCache2_UpdateCache(T,a,b,c) (T)->lpVtbl->UpdateCache(T,a,b,c)
#define IOleCache2_DiscardCache(T,a) (T)->lpVtbl->DiscardCache(T,a)
#endif

EXTERN_C const IID IID_IOleCacheControl;
#define INTERFACE IOleCacheControl
DECLARE_INTERFACE_(IOleCacheControl,IUnknown)
{
	STDMETHOD(QueryInterface)(THIS_ REFIID,PVOID*) PURE;
	STDMETHOD_(ULONG,AddRef)(THIS) PURE;
	STDMETHOD_(ULONG,Release)(THIS) PURE;
	STDMETHOD(OnRun)(THIS_ LPDATAOBJECT) PURE;
	STDMETHOD(OnStop)(THIS) PURE;
};
#undef INTERFACE

#ifdef __cplusplus
}
#endif
#endif

@


1.14
log
@	* include/aclui.h: Replace __OBJC__ guard with _OBJC_NO_COM.
	* include/basetyps.h:  Likewise.
 	(_COM_interface): New define.
	(interface): Define to _COM_interface, conditional on !__OBJC__.
	Replace 'interface' with '_COM_interface', throughout.
  	* include/comcat.h: Replace 'interface' with '_COM_interface', throughout.
	* include/commdlg.h: Replace __OBJC__ guard with _OBJC_NO_COM.
	* include/docobj.h: Replace 'interface' with '_COM_interface', throughout.
	* include/mshtml.h: Likewise.
	* include/oaidl.h: Likewise.
	* include/objfwd.h: Likewise.
	* include/objidl.h: Likewise.
	* include/ocidl.h: Likwise.
	* include/olectl.h: Likewise.
	* include/oleidl.h: Likewise.
	* include/shlobj.h: Likewise.
	* include/shlwapi.h: Replace __OBJC__ guard with _OBJC_NO_COM.
	* include/vfw.h: Likewise.
	* include/windows.h. Likewise. Add comment.
	* include/directx/d3d9.h: Replace 'interface' with '_COM_interface',
	throughout.

	* lib/test.c: Replace __OBJC__ guard with _OBJC_NO_COM.
	Add test for conflict with '@@interface'
@
text
@@


1.13
log
@2006-04-11  Chris Sutcliffe <ir0nh34d@@users.sourceforge.net>

    * include/comcat.h: INTERFACE should not remain defined
    at the end of the header.
    * include/docobj.h: Ditto.
    * include/exdisp.h: Ditto.
    * include/intshcut.h: Ditto.
    * include/mlang.h: Ditto.
    * include/mshtml.h: Ditto.
    * include/oaidl.h: Ditto.
@
text
@d15 18
a32 18
typedef interface IParseDisplayName *LPPARSEDISPLAYNAME;
typedef interface IOleContainer *LPOLECONTAINER;
typedef interface IOleClientSite *LPOLECLIENTSITE;
typedef interface IOleObject *LPOLEOBJECT;
typedef interface IDropTarget *LPDROPTARGET;
typedef interface IDropSource *LPDROPSOURCE;
typedef interface IEnumOleUndoUnits *LPENUMOLEUNDOUNITS;
typedef interface IEnumOLEVERB *LPENUMOLEVERB;
typedef interface IOleWindow *LPOLEWINDOW;
typedef interface IOleInPlaceUIWindow *LPOLEINPLACEUIWINDOW;
typedef interface IOleInPlaceActiveObject *LPOLEINPLACEACTIVEOBJECT;
typedef interface IOleInPlaceFrame *LPOLEINPLACEFRAME;
typedef interface IOleAdviseHolder *LPOLEADVISEHOLDER;
typedef interface IViewObject *LPVIEWOBJECT;
typedef interface IViewObject2 *LPVIEWOBJECT2;
typedef interface IOleCache *LPOLECACHE;
typedef interface IOleCache2 *LPOLECACHE2;
typedef interface IOleCacheControl *LPOLECACHECONTROL;
@


1.12
log
@2004-01-03  Filip Navara  <xnavara@@volny.cz>

	* include/cguid.h (CLSID_StdGlobalInterfaceTable): Declare IID.
	* include/oaidl.h (ITypeLib2, ITypeInfo2): Define interfaces,
	declare IID's.
	(IErrorInfo): Add COBJMACROS.
	* include/objbase.h (STGM_NOSNAPSHOT): Add define.
	(CoGetPSClsid): Add protototype,
	(CoRegisterPSClsid): Likewise.
	* include/objidl.h (IMarshal): Correct methods.
	(IMallocSpy): Likewise,
	(LPPSFACTORYBUFFER): Add typedef.
	(IGlobalInterfaceTable): Define interface and COBJMACROS. Declare
	IID.
	(IStorage_CreateStorage, IRpcStubBuffer_Invoke): Fix macros.
	* include/ocidl.h (PROPBAG2_TYPE): Define enum.
	(PROPBAG2, QACONTAINERFLAGS, QACONTAINER, QACONTROL): Define
	structures.
	(IPropertyBag2, IPersistPropertyBag2,IAdviseSinkEx, IPointerInactive,
	IOleUndoUnit, IOleParentUndoUnit, IEnumOleUndoUnits, IOleUndoManager,
	IQuickActivate): Define interfaces. Declare IID's.
	(IPersistPropertyBag2): Add COBJMACROS.
	(LPOLEUNDOMANAGER): Add typedef.
	(LPPROPERTYBAG2): Likewise.
	* include/oleidl.h (LPPARSEDISPLAYNAME): Fix definiton.
	(BINDSPEED): Add definition.
	(IParseDisplayName, IOleItemContainer, IOleObject, IDropSource,
	IDropTarget): Add COBJMACROS.
	* include/wtypes.h (MEMCTX, MSHCTX): Fix enums.
	* include/winerror.h (CO_S_NOTALLINTERFACES): Add define.
	* lib/uuid.c (IID_IGlobalInterfaceTable, IID_IOleUndoManager,
	IID_IPersistPropertyBag2, IID_IPropertyBag2, IID_IRpcProxyBuffer):
	Add definitions.
@
text
@a96 1
#undef INTERFACE
d105 1
a114 1
#undef INTERFACE
d125 1
a127 1
#undef INTERFACE
d141 1
a155 1
#undef INTERFACE
d169 1
a183 1
#undef INTERFACE
d212 1
a241 1
#undef INTERFACE
d251 1
a261 1
#undef INTERFACE
d275 1
a277 1
#undef INTERFACE
d291 1
a293 1
#undef INTERFACE
d308 1
a310 1
#undef INTERFACE
d330 1
a350 1
#undef INTERFACE
d370 1
a372 1
#undef INTERFACE
d386 1
a400 1
#undef INTERFACE
d410 1
a420 1
#undef INTERFACE
d432 1
a445 1
#undef INTERFACE
d459 1
a473 1
#undef INTERFACE
d488 1
a503 1
#undef INTERFACE
d516 1
a529 1
#undef INTERFACE
d544 1
a559 1
#undef INTERFACE
d569 1
@


1.11
log
@2004-01-01  Filip Navara  <xnavara@@volny.cz>

	* include/objbase.h:  Don't care about value of DBG define.
	* include/objidl.h: Add some COBJMACROS.
	* include/ocidl.h: Ditto.
	* include/oleidl.h: Ditto.
	* include/servprov.h: Ditto.
	* include/shlobj.h: Ditto.
	* include/shlobj.h (IContextMenu2): Correct parent in
	DECLARE_INTERFACE.
	* include/oleidl.h (IOleCache, IOleCache2, IOleCacheControl):
	Define interfaces.
	* include/setupapi.h (SetupGetLineTextA): Correct prototype.
	Add new constants for _SETUPAPI_VER >= 0x501.
@
text
@d15 1
a15 1
typedef interface IParseDisplayname *LPPARSEDISPLAYNAME;
d34 6
d107 7
d143 12
d214 27
d412 8
d433 10
@


1.10
log
@2003-12-08  Roald Ribe <rrib@@users.sourceforge.net>

	* include/winuser.h (RT_MANIFEST): Add define.

2003-12-08  Pascal Buhler <pbuhler@@users.sourceforge.net>

	* include/oleidl.h (IViewObject2): Inherit from IViewObject.
@
text
@d30 3
d146 12
d201 8
d280 18
d336 12
d391 12
d420 80
@


1.9
log
@	* include/oleidl.h  (LPENUMOLEDOCUMENTVIEWS): Remove typedef.
	(IEnumOleDocumentViews): Remove commented out DECLARE_ENUMERATOR.
	* include/docobj.h  (LPENUMOLEDOCUMENTVIEWS): Add typedef (previously
	commented out).
	(IEnumOleDocumentViews): Add definition using DECLARE_ENUMERATOR.
@
text
@d341 1
a341 1
DECLARE_INTERFACE_(IViewObject2,IUnknown)
@


1.8
log
@2003-03-04  Heiko Gerdau  <hg@@technosis.de>

	* oleidl.h (IOleObject): Correct GetUserType prototype.
	(IViewObject2): Correct GetExtent prototype.
	* olectl.h (DISPIP_): Add new defines
	* ocidl.h (IOleInPlaceSiteWindowless): Add new interface.
@
text
@a20 1
typedef interface IEnumOleDocumentViews *LPENUMOLEDOCUMENTVIEWS;
a83 1
/*DECLARE_ENUMERATOR_(IEnumOleDocumentViews,IOleDocumentView);*/
@


1.7
log
@2003-03-01  Heiko Gerdau  <hg@@technosis.de>

	* include/oleidl.h (USERCLASSTYPE): Add enum.
	* include/ocidl.h (IObjectWithSite): Add interface.
@
text
@d48 1
d166 1
a166 1
	STDMETHOD(GetUserType)(THIS_ DWORD,LPOLESTR) PURE;
d354 1
a354 1
	STDMETHOD(GetExtent)(THIS_ DWORD,DWORD,DVTARGETDEVICE*,LPSIZEL) PURE;
@


1.6
log
@* include/oleidl.h (MK_ALT): Define.
@
text
@d43 5
@


1.5
log
@2002-07-26  Mattia Barbon  <mbarbon@@dsi.unive.it>

	* include/exdisp.h: New file.
	* include/exdispid.h: New file.
	* include/mshtml.h: New file.
	* lib/test.c: #include exdisp.h and mshtml.h
	* lib/uuid.c (CLSID_WebBrowser, DIID_DWebBrowserEvents,
	DIID_DWebBrowserEvents2, IID_IHTMLDocument, IID_IHTMLDocument2,
	IID_IHTMLElement, IID_IHTMLSelectionObject, IID_IHTMLTxtRange,
	IID_IWebBrowser, IID_IWebBrowser2, IID_IWebBrowserApp):
	New GUIDs.

	* include/docobj.h: New file.
	* include/idispids.h: New file.
	* include/objidl.h (IID_IMoniker): Declare.
	* include/ocidl.h (READYSTATE): New enum.
	(IOleInPlaceSiteEx): New interface.
	* include/olectlid.h (IID_IEnumSTATSTG): New interface
	identifier.
	* include/oleidl.h (IOleItemContainer, IOleInPlaceObject,
	IOleInPlaceSite): New interfaces.
	* lib/test.c: #include docobj.h,idispids.h,
@
text
@d12 3
@


1.4
log
@	* include/accctrl.h, aclapi.h, basetsd.h, basetyps.h, cderr.h,
	cguid.h, commctrl.h, commdlg.h, cpl.h, cplext.h, custcntl.h,
	dbt.h, dde.h, ddeml.h, dlgs.h, excpt.h, httpext.h, imagehlp.h,
	imm.h, initguid.h, intshcut.h, ipexport.h, iphlpapi.h,
	ipifcons.h, iprtrmib.h, iptypes.h, isguids.h, largeint.h, lm.h,
	lmaccess.h, lmalert.h, lmapibuf.h, lmat.h, lmaudit.h,
	lmbrowsr.h, lmchdev.h, lmconfig.h, lmcons.h, lmerr.h,
	lmerrlog.h, lmmsg.h, lmremutl.h, lmrepl.h, lmserver.h,
	lmshare.h, lmsname.h, lmstats.h, lmsvc.h, lmuse.h, lmuseflg.h,
	lmwksta.h, lzexpand.h, mapi.h, mciavi.h, mcx.h, mmsystem.h,
	mswsock.h, nb30.h, nddeapi.h, nspapi.h, ntdef.h, ntsecapi.h,
	ntsecpkg.h, oaidl.h, objbase.h, objfwd.h, objidl.h, odbcinst.h,
	ole.h, ole2.h, ole2ver.h, oleauto.h, olectl.h, olectlid.h,
	oledlg.h, oleidl.h, pbt.h, prsht.h, psapi.h, rapi.h, ras.h,
	raserror.h, rassapi.h, regstr.h, richedit.h, richole.h, rpc.h,
	rpcdce.h, rpcdce2.h, rpcdcep.h, rpcndr.h, rpcnsi.h, rpcnsip.h,
	rpcnterr.h, rpcproxy.h, schannel.h, schnlsp.h, scrnsave.h,
	security.h, setupapi.h, shellapi.h, shlguid.h, shlobj.h, sql.h,
	sqlext.h, sqltypes.h, sqlucode.h, sspi.h, subauth.h,
	tlhelp32.h, unknwn.h, userenv.h, w32api.h, winbase.h, wincon.h,
	wincrypt.h, windef.h, windows.h, windowsx.h, winerror.h,
	wingdi.h, wininet.h, winioctl.h, winnetwk.h, winnls.h, winnt.h,
	winperf.h, winreg.h, winresrc.h, winsock.h, winsock2.h,
	winspool.h, winsvc.h, winuser.h, winver.h, ws2tcpip.h,
	wsnetbs.h, wtypes.h, zmouse.h:	Add #pragma GCC system_header
	if __GNUC__ >= 3.
	* include/mapi.h: Change header guard name to _MAPI_H  for
	consistency.
@
text
@d104 16
d195 16
d248 22
@


1.3
log
@
2001-11-01  Danny Smith  <dannysmith@@users.sourceforge.net>

	* include/basetyps.h (DECLARE_INTERFACE): Don't add
	__attribute__((com_interface)) for __GNUC__ >= 3.

2001-11-01  Danny Smith  <dannysmith@@users.sourceforge.net>

	* include/commdlg.h (PRINTPAGERANGE): Add structure
	definition.
	(PRINTDLGEX[AW]): Likewise.
	(PrintDlgEx[AW]): Add function declaration.
	* lib/comdlg32.def (PrintDlgEx[AW]): Add function stubs.
	* ChangeLog: Fix typo in last entry.


2001-11-01  TAMURA Kent  <tkent@@users.sourceforge.net>

	* include/objbase.h (CoGetClassObject): Change third parameter
	to COSERVERINFO*.

2001-10-30  Danny Smith  <dannysmith@@users.sourceforge.net>

	* include/winuser.h (MOUSEEVENTF_WHEEL): Define.
	Thanks to: Kim Saunders.
	* include/oleauto.h: Define VARIANT* flags for VariantChangeType.
	Thanks to: Pat Thoyts.
	* include/winnt.h: Change C++ style comment to C style.
 	* include/shlobj.h: Ditto.
	* include/objbase.h (enum tagCOINIT): Remove comma at end of
	list.
	* include/oledlg.h (enum tagOLEUIPASTEFLAG): Ditto.
	* include/oleidl.h (enum tagDROPEFFECT): Mark as __extension__
	(enum not limited to range of int).
	* include/oaidl.h (struct tagVARIANT): Mark as __extension__
	(struct with no named members), ifndef NONAMELESSUNION.

2001-10-30  Danny Smith  <dannysmith@@users.sourceforge.net>

	* include/winuser.h (CREATESTRUCT): UNICODE it.
	(CBT_CREATEWND): Likewise.

2001-10-20  Corinna Vinschen  <corinna@@vinschen.de>

	* include/winnetwk.h (WNetGetResourceInformationA): Add declaration.
	(WNetGetResourceInformationW): Ditto.
	(WNetGetResourceInformation): Add define.

2001-10-12  Pedro A Aranda  <paaguti@@hotmail.com>

	* include/winuser.h (POINTSTOPOINT): Use explicit casts
	before extracting words.
@
text
@d3 3
@


1.2
log
@
	* include/wtypes.h: (DECIMAL_SETZERO): Correct typo.
 	* include/oleidl.h (ISupportErrorInfo, ICreateInfo): Move from here
	* include/oaidl.h: ... to here.
	* include/oaidl.h ICreateErrorInfo): Add interface definition.
	(IErrorInfo::GetGUID): Change arg to GUID.
	(LPSUPPORTERRORINFO): Add typedef.
	(IID_ISupportErrorInfo): Change forward decl. of type to IID.
	* include/winsock2.h (WSAGET* and WSAMAKE*): Remove duplicate
	defines.
	* include/commctrl.h (TreeView_SetIndent): Correct typo.
	* include/commctrl.h (TBSTYPE_FLAT): Remove define.
	* include/commctrl.h (TBBUTTONINFO[AW]): Add struct definitions,
	and UNICODE mappings, if _WIN32_IE >= 0x400.
	(TBIF_* and TB_SETBUTTONINFO): Add defines, if _WIN32_IE >= 0x400.
	(CDIS_*,CDDS_*,CDRF_*) : Add defines.
	(tagNMCUSTOMDRAWINFO): Add struct definition and typedefs.
	(tagNMLVCUSTOMDRAW): Likewise.
	(tagNMTVCUSTOMDRAW): Likewise.
	(tagNMLVCACHEHINT): Likewise.
	* include/basetsd.h (#include <_mingw.h>): Remove.
	(__int64): Define.
	* include/wingdi.h (AC_SRC_OVER): Add define.
	(struct _BLENDFUNCTION): Add.
	* include/shlobj.h:  Add BIF_* defines.
	* include/winerror.h (E_PENDING): Add error code define.
	* include/basetsd.h (#include <_mingw.h>): Add directive.
	* include/winbase.h(InterlockedCompareExchange): Change args
	and return value from PVOID to LONG.
	(InterlockedExchange): Change first arg to LPLONG.
	(InterlockedCompareExchangePointer): New macro.
	(InterlockedExchangePointer): New macro.
@
text
@d37 3
@


1.1
log
@Initial revision
@
text
@a287 27
EXTERN_C const IID IID_ISupportErrorInfo;
#undef INTERFACE
#define INTERFACE ISupportErrorInfo
DECLARE_INTERFACE_(ISupportErrorInfo, IUnknown)
{
	STDMETHOD(QueryInterface)(THIS_ REFIID,PVOID*) PURE;
	STDMETHOD_(ULONG,AddRef)(THIS) PURE;
	STDMETHOD_(ULONG,Release)(THIS) PURE;
	STDMETHOD(InterfaceSupportsErrorInfo)(THIS_ REFIID) PURE;

};

EXTERN_C const IID IID_IErrorInfo;
#undef INTERFACE
#define INTERFACE IErrorInfo
DECLARE_INTERFACE_(IErrorInfo, IUnknown)
{
	STDMETHOD(QueryInterface)(THIS_ REFIID,PVOID*) PURE;
	STDMETHOD_(ULONG,AddRef)(THIS) PURE;
	STDMETHOD_(ULONG,Release)(THIS) PURE;

	STDMETHOD(GetGUID)(THIS_ REFIID) PURE;
	STDMETHOD(GetSource)(THIS_ BSTR*) PURE;
	STDMETHOD(GetDescription)(THIS_ BSTR*) PURE;
	STDMETHOD(GetHelpContext)(THIS_ DWORD*) PURE;

 };
@


1.1.1.1
log
@import winsup-2000-02-17 snapshot
@
text
@@
