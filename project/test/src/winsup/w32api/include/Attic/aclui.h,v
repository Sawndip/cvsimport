head	1.5;
access;
symbols
	cygwin-1_7_17-release:1.4
	cygwin-64bit-branch:1.4.0.6
	cygwin-1_7_16-release:1.4
	cygwin-1_7_15-release:1.4
	cygwin-1_7_14_2-release:1.4
	cygwin-1_7_14-release:1.4
	cygwin-1_7_12-release:1.4
	cygwin-1_7_11-release:1.4
	cygwin-1_7_10-release:1.4
	cygwin-1_7_9-release:1.4
	cygwin-1_7_8-release:1.4
	cygwin-1_7_7-release:1.4
	cygwin-1_7_5-release:1.4
	cygwin-1_7_4-release:1.4
	cygwin-1_7_3-release:1.4
	cygwin-1_7_2-release:1.4
	cygwin-1_7_1-release:1.4
	cv-branch-2:1.4.0.4
	cr-0x5f1:1.4.0.2
	cv-branch:1.3.0.2
	cr-0x3b58:1.2.0.2;
locks; strict;
comment	@ * @;


1.5
date	2012.11.07.16.52.34;	author cgf;	state dead;
branches;
next	1.4;

1.4
date	2006.07.25.00.22.19;	author dannysmith;	state Exp;
branches;
next	1.3;

1.3
date	2006.04.18.02.57.59;	author dannysmith;	state Exp;
branches;
next	1.2;

1.2
date	2004.04.30.17.05.28;	author infidel;	state Exp;
branches;
next	1.1;

1.1
date	2004.04.23.16.03.43;	author infidel;	state Exp;
branches;
next	;


desc
@@


1.5
log
@* mingw: Delete obsolete directory.
* w32api: Ditto.
@
text
@#ifndef _ACLUI_H
#define _ACLUI_H
#if __GNUC__ >= 3
#pragma GCC system_header
#endif

#ifndef _OBJC_NO_COM
#include <objbase.h>
#include <commctrl.h>
#include <accctrl.h>
#endif

#if !defined(_ACLUI_)
#define ACLUIAPI	DECLSPEC_IMPORT WINAPI
#else
#define ACLUIAPI	WINAPI
#endif

#ifdef __cplusplus
extern "C" {
#endif

typedef struct _SI_OBJECT_INFO
{
	DWORD dwFlags;
	HINSTANCE hInstance;
	LPWSTR pszServerName;
	LPWSTR pszObjectName;
	LPWSTR pszPageTitle;
	GUID guidObjectType;
} SI_OBJECT_INFO, *PSI_OBJECT_INFO;

/* values for SI_OBJECT_INFO.dwFlags */
#define SI_EDIT_PERMS				0x00000000L
#define SI_EDIT_OWNER				0x00000001L
#define SI_EDIT_AUDITS				0x00000002L
#define SI_CONTAINER				0x00000004L
#define SI_READONLY					0x00000008L
#define SI_ADVANCED					0x00000010L
#define SI_RESET					0x00000020L
#define SI_OWNER_READONLY			0x00000040L
#define SI_EDIT_PROPERTIES			0x00000080L
#define SI_OWNER_RECURSE			0x00000100L
#define SI_NO_ACL_PROTECT			0x00000200L
#define SI_NO_TREE_APPLY			0x00000400L
#define SI_PAGE_TITLE				0x00000800L
#define SI_SERVER_IS_DC				0x00001000L
#define SI_RESET_DACL_TREE			0x00004000L
#define SI_RESET_SACL_TREE			0x00008000L
#define SI_OBJECT_GUID				0x00010000L
#define SI_EDIT_EFFECTIVE			0x00020000L
#define SI_RESET_DACL				0x00040000L
#define SI_RESET_SACL				0x00080000L
#define SI_RESET_OWNER				0x00100000L
#define SI_NO_ADDITIONAL_PERMISSION	0x00200000L
#define SI_MAY_WRITE				0x10000000L

#define SI_EDIT_ALL     (SI_EDIT_PERMS | SI_EDIT_OWNER | SI_EDIT_AUDITS)


typedef struct _SI_ACCESS
{
	const GUID* pguid;
	ACCESS_MASK mask;
	LPCWSTR pszName;
	DWORD dwFlags;
} SI_ACCESS, *PSI_ACCESS;

/* values for SI_ACCESS.dwFlags */
#define SI_ACCESS_SPECIFIC			0x00010000L
#define SI_ACCESS_GENERAL			0x00020000L
#define SI_ACCESS_CONTAINER			0x00040000L
#define SI_ACCESS_PROPERTY			0x00080000L


typedef struct _SI_INHERIT_TYPE
{
	const GUID* pguid;
	ULONG dwFlags;
	LPCWSTR pszName;
} SI_INHERIT_TYPE, *PSI_INHERIT_TYPE;

/* values for SI_INHERIT_TYPE.dwFlags
   INHERIT_ONLY_ACE, CONTAINER_INHERIT_ACE, OBJECT_INHERIT_ACE
   defined elsewhere */


typedef enum _SI_PAGE_TYPE
{
	SI_PAGE_PERM = 0, 
	SI_PAGE_ADVPERM, 
	SI_PAGE_AUDIT, 
	SI_PAGE_OWNER
} SI_PAGE_TYPE;


#define PSPCB_SI_INITDIALOG	(WM_USER + 1)

#ifndef __ISecurityInformation_INTERFACE_DEFINED__
#define __ISecurityInformation_INTERFACE_DEFINED__
#define INTERFACE ISecurityInformation
DECLARE_INTERFACE_(ISecurityInformation, IUnknown)
{
		STDMETHOD(QueryInterface)(THIS_ REFIID,PVOID*) PURE;
		STDMETHOD_(ULONG,AddRef)(THIS) PURE;
		STDMETHOD_(ULONG,Release)(THIS) PURE;
		
		STDMETHOD(GetObjectInformation)(THIS_ PSI_OBJECT_INFO) PURE;
		STDMETHOD(GetSecurity)(THIS_ SECURITY_INFORMATION,PSECURITY_DESCRIPTOR*,BOOL) PURE;
		STDMETHOD(SetSecurity)(THIS_ SECURITY_INFORMATION,PSECURITY_DESCRIPTOR) PURE;
		STDMETHOD(GetAccessRights)(THIS_ const GUID*,DWORD,PSI_ACCESS*,ULONG*,ULONG*) PURE;
		STDMETHOD(MapGeneric)(THIS_ const GUID*,UCHAR*,ACCESS_MASK*) PURE;
		STDMETHOD(GetInheritTypes)(THIS_ PSI_INHERIT_TYPE*,ULONG*) PURE;
		STDMETHOD(PropertySheetPageCallback)(THIS_ HWND,UINT,SI_PAGE_TYPE) PURE;
};
#undef INTERFACE
typedef ISecurityInformation *LPSECURITYINFO;
#endif

/*
 * TODO: ISecurityInformation2, IEffectivePermission, ISecurityObjectTypeInfo
 */

extern DECLSPEC_IMPORT const IID IID_ISecurityInformation;


HPROPSHEETPAGE ACLUIAPI CreateSecurityPage(LPSECURITYINFO psi);
BOOL ACLUIAPI EditSecurity(HWND hwndOwner, LPSECURITYINFO psi);

#ifdef __cplusplus
}
#endif

#endif
@


1.4
log
@	* include/aclui.h: Replace __OBJC__ guard with _OBJC_NO_COM.
	* include/basetyps.h:  Likewise.
 	(_COM_interface): New define.
	(interface): Define to _COM_interface, conditional on !__OBJC__.
	Replace 'interface' with '_COM_interface', throughout.
  	* include/comcat.h: Replace 'interface' with '_COM_interface', throughout.
	* include/commdlg.h: Replace __OBJC__ guard with _OBJC_NO_COM.
	* include/docobj.h: Replace 'interface' with '_COM_interface', throughout.
	* include/mshtml.h: Likewise.
	* include/oaidl.h: Likewise.
	* include/objfwd.h: Likewise.
	* include/objidl.h: Likewise.
	* include/ocidl.h: Likwise.
	* include/olectl.h: Likewise.
	* include/oleidl.h: Likewise.
	* include/shlobj.h: Likewise.
	* include/shlwapi.h: Replace __OBJC__ guard with _OBJC_NO_COM.
	* include/vfw.h: Likewise.
	* include/windows.h. Likewise. Add comment.
	* include/directx/d3d9.h: Replace 'interface' with '_COM_interface',
	throughout.

	* lib/test.c: Replace __OBJC__ guard with _OBJC_NO_COM.
	Add test for conflict with '@@interface'
@
text
@@


1.3
log
@2006-04-18  Bart Oldeman  <bartoldeman@@users.sf.net>

	* lib/test.c: Fix typo in #inlcude.
	* include/aclui.h: INTERFACE should not remain
	defined at the end of the header.
	* include/servprov.h: Ditto.
@
text
@d7 1
a7 1
#ifndef __OBJC__
@


1.2
log
@2004-04-29  Bart Oldeman  <bartoldeman@@users.sourceforge.net>

	* include/objbase.h (STGOPTIONS): Correct pwcsTemplateFile type.
	* include/aclui.h: Remove '\r', throughout.
	* include/msacm.h: Likewise.
	* lib/aclui.def: Likewise.
@
text
@a100 1
#undef INTERFACE
d116 1
@


1.1
log
@2004-04-23  Robert Wruck  <wruck@@tweerlei.de>

	* include/aclui.h: New file.
	* lib/aclui.def: New file.
	* lib/test.c: Add aclui.h to includes.
@
text
@d1 134
a134 134
#ifndef _ACLUI_H
#define _ACLUI_H
#if __GNUC__ >= 3
#pragma GCC system_header
#endif

#ifndef __OBJC__
#include <objbase.h>
#include <commctrl.h>
#include <accctrl.h>
#endif

#if !defined(_ACLUI_)
#define ACLUIAPI	DECLSPEC_IMPORT WINAPI
#else
#define ACLUIAPI	WINAPI
#endif

#ifdef __cplusplus
extern "C" {
#endif

typedef struct _SI_OBJECT_INFO
{
	DWORD dwFlags;
	HINSTANCE hInstance;
	LPWSTR pszServerName;
	LPWSTR pszObjectName;
	LPWSTR pszPageTitle;
	GUID guidObjectType;
} SI_OBJECT_INFO, *PSI_OBJECT_INFO;

/* values for SI_OBJECT_INFO.dwFlags */
#define SI_EDIT_PERMS				0x00000000L
#define SI_EDIT_OWNER				0x00000001L
#define SI_EDIT_AUDITS				0x00000002L
#define SI_CONTAINER				0x00000004L
#define SI_READONLY					0x00000008L
#define SI_ADVANCED					0x00000010L
#define SI_RESET					0x00000020L
#define SI_OWNER_READONLY			0x00000040L
#define SI_EDIT_PROPERTIES			0x00000080L
#define SI_OWNER_RECURSE			0x00000100L
#define SI_NO_ACL_PROTECT			0x00000200L
#define SI_NO_TREE_APPLY			0x00000400L
#define SI_PAGE_TITLE				0x00000800L
#define SI_SERVER_IS_DC				0x00001000L
#define SI_RESET_DACL_TREE			0x00004000L
#define SI_RESET_SACL_TREE			0x00008000L
#define SI_OBJECT_GUID				0x00010000L
#define SI_EDIT_EFFECTIVE			0x00020000L
#define SI_RESET_DACL				0x00040000L
#define SI_RESET_SACL				0x00080000L
#define SI_RESET_OWNER				0x00100000L
#define SI_NO_ADDITIONAL_PERMISSION	0x00200000L
#define SI_MAY_WRITE				0x10000000L

#define SI_EDIT_ALL     (SI_EDIT_PERMS | SI_EDIT_OWNER | SI_EDIT_AUDITS)


typedef struct _SI_ACCESS
{
	const GUID* pguid;
	ACCESS_MASK mask;
	LPCWSTR pszName;
	DWORD dwFlags;
} SI_ACCESS, *PSI_ACCESS;

/* values for SI_ACCESS.dwFlags */
#define SI_ACCESS_SPECIFIC			0x00010000L
#define SI_ACCESS_GENERAL			0x00020000L
#define SI_ACCESS_CONTAINER			0x00040000L
#define SI_ACCESS_PROPERTY			0x00080000L


typedef struct _SI_INHERIT_TYPE
{
	const GUID* pguid;
	ULONG dwFlags;
	LPCWSTR pszName;
} SI_INHERIT_TYPE, *PSI_INHERIT_TYPE;

/* values for SI_INHERIT_TYPE.dwFlags
   INHERIT_ONLY_ACE, CONTAINER_INHERIT_ACE, OBJECT_INHERIT_ACE
   defined elsewhere */


typedef enum _SI_PAGE_TYPE
{
	SI_PAGE_PERM = 0, 
	SI_PAGE_ADVPERM, 
	SI_PAGE_AUDIT, 
	SI_PAGE_OWNER
} SI_PAGE_TYPE;


#define PSPCB_SI_INITDIALOG	(WM_USER + 1)

#ifndef __ISecurityInformation_INTERFACE_DEFINED__
#define __ISecurityInformation_INTERFACE_DEFINED__
#undef INTERFACE
#define INTERFACE ISecurityInformation
DECLARE_INTERFACE_(ISecurityInformation, IUnknown)
{
		STDMETHOD(QueryInterface)(THIS_ REFIID,PVOID*) PURE;
		STDMETHOD_(ULONG,AddRef)(THIS) PURE;
		STDMETHOD_(ULONG,Release)(THIS) PURE;
		
		STDMETHOD(GetObjectInformation)(THIS_ PSI_OBJECT_INFO) PURE;
		STDMETHOD(GetSecurity)(THIS_ SECURITY_INFORMATION,PSECURITY_DESCRIPTOR*,BOOL) PURE;
		STDMETHOD(SetSecurity)(THIS_ SECURITY_INFORMATION,PSECURITY_DESCRIPTOR) PURE;
		STDMETHOD(GetAccessRights)(THIS_ const GUID*,DWORD,PSI_ACCESS*,ULONG*,ULONG*) PURE;
		STDMETHOD(MapGeneric)(THIS_ const GUID*,UCHAR*,ACCESS_MASK*) PURE;
		STDMETHOD(GetInheritTypes)(THIS_ PSI_INHERIT_TYPE*,ULONG*) PURE;
		STDMETHOD(PropertySheetPageCallback)(THIS_ HWND,UINT,SI_PAGE_TYPE) PURE;
};
typedef ISecurityInformation *LPSECURITYINFO;
#endif

/*
 * TODO: ISecurityInformation2, IEffectivePermission, ISecurityObjectTypeInfo
 */

extern DECLSPEC_IMPORT const IID IID_ISecurityInformation;


HPROPSHEETPAGE ACLUIAPI CreateSecurityPage(LPSECURITYINFO psi);
BOOL ACLUIAPI EditSecurity(HWND hwndOwner, LPSECURITYINFO psi);

#ifdef __cplusplus
}
#endif

#endif
@

