head	1.10;
access;
symbols
	cygwin-1_7_17-release:1.9
	cygwin-64bit-branch:1.9.0.2
	cygwin-1_7_16-release:1.9
	cygwin-1_7_15-release:1.9
	cygwin-1_7_14_2-release:1.9
	cygwin-1_7_14-release:1.9
	cygwin-1_7_12-release:1.9
	cygwin-1_7_11-release:1.9
	cygwin-1_7_10-release:1.9
	cygwin-1_7_9-release:1.9
	cygwin-1_7_8-release:1.9
	cygwin-1_7_7-release:1.9
	cygwin-1_7_5-release:1.9
	cygwin-1_7_4-release:1.9
	cygwin-1_7_3-release:1.9
	cygwin-1_7_2-release:1.9
	cygwin-1_7_1-release:1.9
	cv-branch-2:1.8.0.2
	cr-0x5f1:1.7.0.16
	cv-branch:1.7.0.14
	cr-0x3b58:1.7.0.12
	cr-0x9e:1.7.0.10
	cr-0x9d:1.7.0.8
	corinna-01:1.7
	cr-0x9c:1.7.0.6
	cr-0x9b:1.7.0.4
	cr-0x99:1.7
	Z-emcb-cygwin_daemon:1.7.0.2
	w32api-2_2:1.7
	mingw-runtime-2_4:1.7
	w32api-1_5:1.7
	cygnus_cvs_20020108_pre:1.6
	Z-cygwin_daemon_merge-new_HEAD:1.6
	Z-cygwin_daemon_merge_HEAD:1.6
	cygwin_daemon:1.6.0.8;
locks; strict;
comment	@ * @;


1.10
date	2012.11.07.16.52.34;	author cgf;	state dead;
branches;
next	1.9;

1.9
date	2009.11.21.00.44.50;	author ironhead;	state Exp;
branches;
next	1.8;

1.8
date	2008.07.14.15.55.48;	author corinna;	state Exp;
branches;
next	1.7;

1.7
date	2002.03.09.09.04.08;	author dannysmith;	state Exp;
branches;
next	1.6;

1.6
date	2000.10.09.09.51.46;	author corinna;	state Exp;
branches;
next	1.5;

1.5
date	2000.10.08.16.55.29;	author corinna;	state Exp;
branches;
next	1.4;

1.4
date	2000.10.01.21.57.57;	author corinna;	state Exp;
branches;
next	1.3;

1.3
date	2000.10.01.20.09.53;	author corinna;	state Exp;
branches;
next	1.2;

1.2
date	2000.10.01.14.32.24;	author corinna;	state Exp;
branches;
next	1.1;

1.1
date	2000.10.01.14.22.14;	author corinna;	state Exp;
branches;
next	;


desc
@@


1.10
log
@* mingw: Delete obsolete directory.
* w32api: Ditto.
@
text
@#ifndef _IPRTRMIB_H
#define _IPRTRMIB_H
#if __GNUC__ >=3
#pragma GCC system_header
#endif

#include <ipifcons.h>
#ifdef __cplusplus
extern "C" {
#endif
#ifndef ANY_SIZE
#define ANY_SIZE 1
#endif
#define MAXLEN_PHYSADDR 8
#define MAXLEN_IFDESCR 256
#ifndef MAX_INTERFACE_NAME_LEN
#define MAX_INTERFACE_NAME_LEN 256
#endif
#define MIB_IPNET_TYPE_OTHER 1
#define MIB_IPNET_TYPE_INVALID 2
#define MIB_IPNET_TYPE_DYNAMIC 3
#define MIB_IPNET_TYPE_STATIC 4
#define MIB_TCP_RTO_OTHER 1
#define MIB_TCP_RTO_CONSTANT 2
#define MIB_TCP_RTO_RSRE 3
#define MIB_TCP_RTO_VANJ 4
#define MIB_TCP_STATE_CLOSED 1                 
#define MIB_TCP_STATE_LISTEN 2                 
#define MIB_TCP_STATE_SYN_SENT 3                 
#define MIB_TCP_STATE_SYN_RCVD 4                 
#define MIB_TCP_STATE_ESTAB 5                 
#define MIB_TCP_STATE_FIN_WAIT1 6                 
#define MIB_TCP_STATE_FIN_WAIT2 7                 
#define MIB_TCP_STATE_CLOSE_WAIT 8                 
#define MIB_TCP_STATE_CLOSING 9                
#define MIB_TCP_STATE_LAST_ACK 10                
#define MIB_TCP_STATE_TIME_WAIT 11                
#define MIB_TCP_STATE_DELETE_TCB 12                
#define MIB_USE_CURRENT_TTL ((DWORD)-1)
#define MIB_USE_CURRENT_FORWARDING ((DWORD)-1)
#define MIB_TCP_MAXCONN_DYNAMIC ((DWORD)-1)
typedef enum {
  TCP_TABLE_BASIC_LISTENER,
  TCP_TABLE_BASIC_CONNECTIONS,
  TCP_TABLE_BASIC_ALL,
  TCP_TABLE_OWNER_PID_LISTENER,
  TCP_TABLE_OWNER_PID_CONNECTIONS,
  TCP_TABLE_OWNER_PID_ALL,
  TCP_TABLE_OWNER_MODULE_LISTENER,
  TCP_TABLE_OWNER_MODULE_CONNECTIONS,
  TCP_TABLE_OWNER_MODULE_ALL
} TCP_TABLE_CLASS, *PTCP_TABLE_CLASS;
typedef struct {
  DWORD dwAddr;
  DWORD dwIndex;
  DWORD dwMask;
  DWORD dwBCastAddr;
  DWORD dwReasmSize;
  unsigned short unused1;
  unsigned short wType;
} MIB_IPADDRROW, *PMIB_IPADDRROW;
typedef struct {
  DWORD dwNumEntries;
  MIB_IPADDRROW table[ANY_SIZE];
} MIB_IPADDRTABLE, *PMIB_IPADDRTABLE;
typedef struct {
  DWORD dwForwardDest;
  DWORD dwForwardMask;
  DWORD dwForwardPolicy;
  DWORD dwForwardNextHop;
  DWORD dwForwardIfIndex;
  DWORD dwForwardType;
  DWORD dwForwardProto;
  DWORD dwForwardAge;
  DWORD dwForwardNextHopAS;
  DWORD dwForwardMetric1;
  DWORD dwForwardMetric2;
  DWORD dwForwardMetric3;
  DWORD dwForwardMetric4;
  DWORD dwForwardMetric5;
} MIB_IPFORWARDROW, *PMIB_IPFORWARDROW;
typedef struct {
  DWORD dwNumEntries;
  MIB_IPFORWARDROW table[ANY_SIZE];
} MIB_IPFORWARDTABLE, *PMIB_IPFORWARDTABLE;
typedef struct {
  DWORD dwIndex;
  DWORD dwPhysAddrLen;
  BYTE bPhysAddr[MAXLEN_PHYSADDR];
  DWORD dwAddr;
  DWORD dwType;
} MIB_IPNETROW, *PMIB_IPNETROW;
typedef struct {
  DWORD dwNumEntries;
  MIB_IPNETROW table[ANY_SIZE];
} MIB_IPNETTABLE, *PMIB_IPNETTABLE;
typedef struct {
  DWORD dwMsgs;
  DWORD dwErrors;
  DWORD dwDestUnreachs;
  DWORD dwTimeExcds;
  DWORD dwParmProbs;
  DWORD dwSrcQuenchs;
  DWORD dwRedirects;
  DWORD dwEchos;
  DWORD dwEchoReps;
  DWORD dwTimestamps;
  DWORD dwTimestampReps;
  DWORD dwAddrMasks;
  DWORD dwAddrMaskReps;
} MIBICMPSTATS, *PMIBICMPSTATS;
typedef struct {
  MIBICMPSTATS icmpInStats;
  MIBICMPSTATS icmpOutStats;
} MIBICMPINFO, *PMIBICMPINFO;
typedef struct {
  MIBICMPINFO stats;
} MIB_ICMP, *PMIB_ICMP;
typedef struct {
  WCHAR wszName[MAX_INTERFACE_NAME_LEN];
  DWORD dwIndex;
  DWORD dwType;
  DWORD dwMtu;
  DWORD dwSpeed;
  DWORD dwPhysAddrLen;
  BYTE bPhysAddr[MAXLEN_PHYSADDR];
  DWORD dwAdminStatus;
  DWORD dwOperStatus;
  DWORD dwLastChange;
  DWORD dwInOctets;
  DWORD dwInUcastPkts;
  DWORD dwInNUcastPkts;
  DWORD dwInDiscards;
  DWORD dwInErrors;
  DWORD dwInUnknownProtos;
  DWORD dwOutOctets;
  DWORD dwOutUcastPkts;
  DWORD dwOutNUcastPkts;
  DWORD dwOutDiscards;
  DWORD dwOutErrors;
  DWORD dwOutQLen;
  DWORD dwDescrLen;
  BYTE  bDescr[MAXLEN_IFDESCR];
} MIB_IFROW, *PMIB_IFROW;
typedef struct {
  DWORD dwNumEntries;
  MIB_IFROW table[ANY_SIZE];
} MIB_IFTABLE, *PMIB_IFTABLE;
typedef struct {
  DWORD dwForwarding;
  DWORD dwDefaultTTL;
  DWORD dwInReceives;
  DWORD dwInHdrErrors;
  DWORD dwInAddrErrors;
  DWORD dwForwDatagrams;
  DWORD dwInUnknownProtos;
  DWORD dwInDiscards;
  DWORD dwInDelivers;
  DWORD dwOutRequests;
  DWORD dwRoutingDiscards;
  DWORD dwOutDiscards;
  DWORD dwOutNoRoutes;
  DWORD dwReasmTimeout;
  DWORD dwReasmReqds;
  DWORD dwReasmOks;
  DWORD dwReasmFails;
  DWORD dwFragOks;
  DWORD dwFragFails;
  DWORD dwFragCreates;
  DWORD dwNumIf;
  DWORD dwNumAddr;
  DWORD dwNumRoutes;
} MIB_IPSTATS, *PMIB_IPSTATS;
typedef struct {
  DWORD dwRtoAlgorithm;
  DWORD dwRtoMin;
  DWORD dwRtoMax;
  DWORD dwMaxConn;
  DWORD dwActiveOpens;
  DWORD dwPassiveOpens;
  DWORD dwAttemptFails;
  DWORD dwEstabResets;
  DWORD dwCurrEstab;
  DWORD dwInSegs;
  DWORD dwOutSegs;
  DWORD dwRetransSegs;
  DWORD dwInErrs;
  DWORD dwOutRsts;
  DWORD dwNumConns;
} MIB_TCPSTATS, *PMIB_TCPSTATS;
typedef struct {
  DWORD dwState;
  DWORD dwLocalAddr;
  DWORD dwLocalPort;
  DWORD dwRemoteAddr;
  DWORD dwRemotePort;
} MIB_TCPROW, *PMIB_TCPROW;
typedef struct {
  DWORD dwNumEntries;
  MIB_TCPROW table[ANY_SIZE];
} MIB_TCPTABLE, *PMIB_TCPTABLE;
typedef struct {
  DWORD dwState;
  DWORD dwLocalAddr;
  DWORD dwLocalPort;
  DWORD dwRemoteAddr;
  DWORD dwRemotePort;
  DWORD dwOwningPid;
} MIB_TCPROW_OWNER_PID, *PMIB_TCPROW_OWNER_PID;
typedef struct {
  DWORD dwNumEntries;
  MIB_TCPROW_OWNER_PID table[ANY_SIZE];
} MIB_TCPTABLE_OWNER_PID, *PMIB_TCPTABLE_OWNER_PID;
typedef struct {
  DWORD dwInDatagrams;
  DWORD dwNoPorts;
  DWORD dwInErrors;
  DWORD dwOutDatagrams;
  DWORD dwNumAddrs;
} MIB_UDPSTATS, *PMIB_UDPSTATS;
typedef struct {
  DWORD dwLocalAddr;
  DWORD dwLocalPort;
} MIB_UDPROW, *PMIB_UDPROW;
typedef struct {
  DWORD dwNumEntries;
  MIB_UDPROW table[ANY_SIZE];
} MIB_UDPTABLE, *PMIB_UDPTABLE;
typedef struct {
  UCHAR ucLocalAddr[16];
  DWORD dwLocalScopeId;
  DWORD dwLocalPort;
  UCHAR ucRemoteAddr[16];
  DWORD dwRemoteScopeId;
  DWORD dwRemotePort;
  DWORD dwState;
  DWORD dwOwningPid;
} MIB_TCP6ROW_OWNER_PID,  *PMIB_TCP6ROW_OWNER_PID;
typedef struct {
  DWORD dwNumEntries;
  MIB_TCP6ROW_OWNER_PID table[ANY_SIZE];
} MIB_TCP6TABLE_OWNER_PID,  *PMIB_TCP6TABLE_OWNER_PID;
#ifdef __cplusplus
}
#endif
#endif /* _IPRTRMIB_H */
@


1.9
log
@2009-20-10  Chris Sutcliffe  <ir0nh34d@@users.sourceforge.net>

        * include/iprtrmib.h (MIB_IPADDRROW): Correct definition.

        Thanks to Thomas Denk for the report.
@
text
@@


1.8
log
@	* include/iphlpapi.h (GetExtendedTcpTable): Add prototype.
	* include/iprtrmib.h (TCP_TABLE_CLASS, MIB_TCPROW_OWNER_PID,
	MIB_TCPTABLE_OWNER_PID, MIB_TCP6ROW_OWNER_PID,
	MIB_TCP6TABLE_OWNER_PID): Define.
	* lib/iphlpapi.def (GetExtendedTcpTable): Export.
@
text
@d60 1
a60 1
  unsigned short unused2;
@


1.7
log
@	* include/accctrl.h, aclapi.h, basetsd.h, basetyps.h, cderr.h,
	cguid.h, commctrl.h, commdlg.h, cpl.h, cplext.h, custcntl.h,
	dbt.h, dde.h, ddeml.h, dlgs.h, excpt.h, httpext.h, imagehlp.h,
	imm.h, initguid.h, intshcut.h, ipexport.h, iphlpapi.h,
	ipifcons.h, iprtrmib.h, iptypes.h, isguids.h, largeint.h, lm.h,
	lmaccess.h, lmalert.h, lmapibuf.h, lmat.h, lmaudit.h,
	lmbrowsr.h, lmchdev.h, lmconfig.h, lmcons.h, lmerr.h,
	lmerrlog.h, lmmsg.h, lmremutl.h, lmrepl.h, lmserver.h,
	lmshare.h, lmsname.h, lmstats.h, lmsvc.h, lmuse.h, lmuseflg.h,
	lmwksta.h, lzexpand.h, mapi.h, mciavi.h, mcx.h, mmsystem.h,
	mswsock.h, nb30.h, nddeapi.h, nspapi.h, ntdef.h, ntsecapi.h,
	ntsecpkg.h, oaidl.h, objbase.h, objfwd.h, objidl.h, odbcinst.h,
	ole.h, ole2.h, ole2ver.h, oleauto.h, olectl.h, olectlid.h,
	oledlg.h, oleidl.h, pbt.h, prsht.h, psapi.h, rapi.h, ras.h,
	raserror.h, rassapi.h, regstr.h, richedit.h, richole.h, rpc.h,
	rpcdce.h, rpcdce2.h, rpcdcep.h, rpcndr.h, rpcnsi.h, rpcnsip.h,
	rpcnterr.h, rpcproxy.h, schannel.h, schnlsp.h, scrnsave.h,
	security.h, setupapi.h, shellapi.h, shlguid.h, shlobj.h, sql.h,
	sqlext.h, sqltypes.h, sqlucode.h, sspi.h, subauth.h,
	tlhelp32.h, unknwn.h, userenv.h, w32api.h, winbase.h, wincon.h,
	wincrypt.h, windef.h, windows.h, windowsx.h, winerror.h,
	wingdi.h, wininet.h, winioctl.h, winnetwk.h, winnls.h, winnt.h,
	winperf.h, winreg.h, winresrc.h, winsock.h, winsock2.h,
	winspool.h, winsvc.h, winuser.h, winver.h, ws2tcpip.h,
	wsnetbs.h, wtypes.h, zmouse.h:	Add #pragma GCC system_header
	if __GNUC__ >= 3.
	* include/mapi.h: Change header guard name to _MAPI_H  for
	consistency.
@
text
@d42 11
d203 12
d229 14
@


1.6
log
@        * include/iprtrmib.h: Further layout changes according to standard.
        * include/iptypes.h: Ditto.
        * include/ntdef.h: Ditto.
        * include/ntsecapi.h: Ditto.
        * include/subauth.h: Ditto.
@
text
@d3 4
@


1.5
log
@        * include/ntsecapi.h: New file.
        * include/subauth.h: Ditto.
        * include/ipexport.h: Fix global header define not to contain
        trailing underscore. Change layout according to standard.
        * include/iphlpapi.h: Ditto.
        * include/ipifcons.h: Ditto.
        * include/iptypes.h: Ditto.
        * include/ntdef.h: Ditto. Define conditional datatypes dependent
        of inclusion of ntdecapi.h and subauth.h.
        * lib/secur32.def: New stub for secur32.dll.
@
text
@d35 3
a37 3
#define MIB_USE_CURRENT_TTL ((DWORD) -1)
#define MIB_USE_CURRENT_FORWARDING ((DWORD) -1)
#define MIB_TCP_MAXCONN_DYNAMIC ((DWORD) -1)
@


1.4
log
@        * include/ipexport.h: Add missing `extern "C"' directives.
        * include/iphlpapi.h: Ditto.
        * include/iprtrmib.h: Ditto.
        * include/iptypes.h: Ditto.
@
text
@d1 2
a2 3
#ifndef _IPRTRMIB_H_
#define _IPRTRMIB_H_

a3 1

a6 1

a9 1

a11 1

a14 1

a18 1

a22 1

a34 1

a37 1

a46 1

a50 1

a66 1

a70 1

a77 1

a81 1

a96 1

a100 1

a103 1

a129 1

a133 1

a158 1

a175 1

a182 1

a186 1

a193 1

a197 1

a201 1

d205 1
a205 2

#endif /* _IPRTRMIB_H_ */
@


1.3
log
@        * include/ipifcons.h: New header file.
        * include/iprtrmib.h: Move operational states to ipifcons.h.
        * include/iphlpapi.h: Add missing parameters to GetIfTable()
        declaration.
@
text
@d6 4
d229 4
@


1.2
log
@        * include/iprtrmib.h: Add missing MIB_IF_OPER_STATUS_xxx definitions.
@
text
@a16 6
#define MIB_IF_OPER_STATUS_NON_OPERATIONAL 0
#define MIB_IF_OPER_STATUS_UNREACHABLE 1
#define MIB_IF_OPER_STATUS_DISCONNECTED 2
#define MIB_IF_OPER_STATUS_CONNECTING 3
#define MIB_IF_OPER_STATUS_CONNECTED 4

@


1.1
log
@        * lib/iphlpapi.def: New stub for iphlpapi.dll.
        * include/iptypes.h: New header file.
        * include/ipexport.h: Ditto.
        * include/iphlpapi.h: Ditto.
        * include/iprtrmib.h: Ditto.
@
text
@d4 2
d16 6
@

