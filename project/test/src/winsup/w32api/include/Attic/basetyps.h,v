head	1.17;
access;
symbols
	cygwin-1_7_17-release:1.16
	cygwin-64bit-branch:1.16.0.2
	cygwin-1_7_16-release:1.16
	cygwin-1_7_15-release:1.16
	cygwin-1_7_14_2-release:1.16
	cygwin-1_7_14-release:1.16
	cygwin-1_7_12-release:1.16
	cygwin-1_7_11-release:1.16
	cygwin-1_7_10-release:1.16
	cygwin-1_7_9-release:1.16
	cygwin-1_7_8-release:1.16
	cygwin-1_7_7-release:1.16
	cygwin-1_7_5-release:1.14
	cygwin-1_7_4-release:1.14
	cygwin-1_7_3-release:1.14
	cygwin-1_7_2-release:1.14
	cygwin-1_7_1-release:1.14
	cv-branch-2:1.14.0.2
	cr-0x5f1:1.13.0.2
	cv-branch:1.12.0.2
	cr-0x3b58:1.11.0.2
	cr-0x9e:1.8.0.10
	cr-0x9d:1.8.0.8
	corinna-01:1.8
	cr-0x9c:1.8.0.6
	cr-0x9b:1.8.0.4
	cr-0x99:1.8
	Z-emcb-cygwin_daemon:1.8.0.2
	w32api-2_2:1.6
	mingw-runtime-2_4:1.6
	w32api-1_5:1.5
	cygnus_cvs_20020108_pre:1.3
	Z-cygwin_daemon_merge-new_HEAD:1.2
	Z-cygwin_daemon_merge_HEAD:1.2
	cygwin_daemon:1.2.0.8;
locks; strict;
comment	@ * @;
expand	@o@;


1.17
date	2012.11.07.16.52.34;	author cgf;	state dead;
branches;
next	1.16;

1.16
date	2010.07.22.10.47.30;	author ironhead;	state Exp;
branches;
next	1.15;

1.15
date	2010.07.20.00.18.31;	author ironhead;	state Exp;
branches;
next	1.14;

1.14
date	2007.07.12.05.49.18;	author dannysmith;	state Exp;
branches;
next	1.13;

1.13
date	2006.07.25.00.22.19;	author dannysmith;	state Exp;
branches;
next	1.12;

1.12
date	2006.04.28.16.55.26;	author papadopo;	state Exp;
branches;
next	1.11;

1.11
date	2005.03.07.04.58.30;	author dannysmith;	state Exp;
branches;
next	1.10;

1.10
date	2004.03.02.09.50.08;	author dannysmith;	state Exp;
branches;
next	1.9;

1.9
date	2004.02.12.00.20.30;	author dannysmith;	state Exp;
branches;
next	1.8;

1.8
date	2003.07.01.23.37.00;	author earnie;	state Exp;
branches;
next	1.7;

1.7
date	2003.07.01.13.01.41;	author earnie;	state Exp;
branches;
next	1.6;

1.6
date	2003.02.05.15.51.27;	author earnie;	state Exp;
branches;
next	1.5;

1.5
date	2002.03.13.20.00.15;	author dannysmith;	state Exp;
branches;
next	1.4;

1.4
date	2002.03.09.09.04.08;	author dannysmith;	state Exp;
branches;
next	1.3;

1.3
date	2001.11.01.19.42.56;	author earnie;	state Exp;
branches;
next	1.2;

1.2
date	2000.11.01.00.37.23;	author earnie;	state Exp;
branches;
next	1.1;

1.1
date	2000.02.17.19.38.31;	author cgf;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2000.02.17.19.38.31;	author cgf;	state Exp;
branches;
next	;


desc
@@


1.17
log
@* mingw: Delete obsolete directory.
* w32api: Ditto.
@
text
@#ifndef _BASETYPS_H
#define _BASETYPS_H
#if __GNUC__ >=3
#pragma GCC system_header
#endif

#ifndef _OBJC_NO_COM_
# ifdef __cplusplus
#  define EXTERN_C extern "C"
# else
#  define EXTERN_C extern
# endif  /* __cplusplus */ 
# ifndef __int64
#  define __int64 long long
# endif
# ifndef __int32
#  define __int32 long
# endif
# ifndef __int16
#  define __int16 short
# endif
# ifndef __int8
#  define __int8 char
# endif
# ifndef __small
#  define __small char
# endif
# ifndef __hyper
#  define __hyper long long
# endif
# define STDMETHODCALLTYPE	__stdcall
# define STDMETHODVCALLTYPE	__cdecl
# define STDAPICALLTYPE	__stdcall
# define STDAPIVCALLTYPE	__cdecl
# define STDAPI	EXTERN_C HRESULT STDAPICALLTYPE
# define STDAPI_(t)	EXTERN_C t STDAPICALLTYPE
# define STDMETHODIMP	HRESULT STDMETHODCALLTYPE
# define STDMETHODIMP_(t)	t STDMETHODCALLTYPE
# define STDAPIV	EXTERN_C HRESULT STDAPIVCALLTYPE
# define STDAPIV_(t)	EXTERN_C t STDAPIVCALLTYPE
# define STDMETHODIMPV	HRESULT STDMETHODVCALLTYPE
# define STDMETHODIMPV_(t)	t STDMETHODVCALLTYPE
/* Newer MS compilers support the __interface keyword, but
   that has a specific meaning that is enforced by the compiler.
   For now, just get 'interface' out of the global namespace
   for __OBJC__ */
# define _COM_interface	struct
# ifndef __OBJC__
#  define interface	_COM_interface
# endif
# if defined(__cplusplus) && !defined(CINTERFACE)
#  define STDMETHOD(m)	virtual HRESULT STDMETHODCALLTYPE m
#  define STDMETHOD_(t,m)	virtual t STDMETHODCALLTYPE m
#  define PURE	=0
#  define THIS_
#  define THIS	void
/*
  __attribute__((com_interface)) is obsolete in __GNUC__ >= 3
  g++ vtables are now COM-compatible by default
*/
#  if defined(__GNUC__) &&  __GNUC__ < 3 && !defined(NOCOMATTRIBUTE)
#   define DECLARE_INTERFACE(i) _COM_interface __attribute__((com_interface)) i
#   define DECLARE_INTERFACE_(i,b) _COM_interface __attribute__((com_interface)) i : public b
#  else
#   define DECLARE_INTERFACE(i) _COM_interface i
#   define DECLARE_INTERFACE_(i,b) _COM_interface i : public b
#  endif
# else
#  define STDMETHOD(m)	HRESULT(STDMETHODCALLTYPE *m)
#  define STDMETHOD_(t,m)	t(STDMETHODCALLTYPE *m)
#  define PURE
#  define THIS_	INTERFACE *,
#  define THIS	INTERFACE *
#  ifndef CONST_VTABLE
#   define CONST_VTABLE
#  endif
#  define DECLARE_INTERFACE(i) \
   typedef _COM_interface i { CONST_VTABLE struct i##Vtbl *lpVtbl; } i; \
   typedef CONST_VTABLE struct i##Vtbl i##Vtbl; \
   CONST_VTABLE struct i##Vtbl
#  define DECLARE_INTERFACE_(i,b) DECLARE_INTERFACE(i)
# endif
# define BEGIN_INTERFACE
# define END_INTERFACE

# define FWD_DECL(i) typedef _COM_interface i i
# if defined(__cplusplus) && !defined(CINTERFACE)
#  define IENUM_THIS(T)
#  define IENUM_THIS_(T)
# else
#  define IENUM_THIS(T) T*
#  define IENUM_THIS_(T) T*,
# endif
# define DECLARE_ENUMERATOR_(I,T) \
         DECLARE_INTERFACE_(I,IUnknown) \
         { \
	  STDMETHOD(QueryInterface)(IENUM_THIS_(I) REFIID,PVOID*) PURE; \
	  STDMETHOD_(ULONG,AddRef)(IENUM_THIS(I)) PURE; \
	  STDMETHOD_(ULONG,Release)(IENUM_THIS(I)) PURE; \
	  STDMETHOD(Next)(IENUM_THIS_(I) ULONG,T*,ULONG*) PURE; \
	  STDMETHOD(Skip)(IENUM_THIS_(I) ULONG) PURE; \
	  STDMETHOD(Reset)(IENUM_THIS(I)) PURE; \
	  STDMETHOD(Clone)(IENUM_THIS_(I) I**) PURE; \
         }
# define DECLARE_ENUMERATOR(T) DECLARE_ENUMERATOR_(IEnum##T,T)

#endif /* _OBJC_NO_COM_ */

#ifdef _GUID_DEFINED
# warning _GUID_DEFINED is deprecated, use GUID_DEFINED instead
#endif

#if ! (defined _GUID_DEFINED || defined GUID_DEFINED) /* also defined in winnt.h */
#define GUID_DEFINED
typedef struct _GUID
{
    unsigned long Data1;
    unsigned short Data2;
    unsigned short Data3;
    unsigned char Data4[8];
} GUID,*REFGUID,*LPGUID;
#endif /* GUID_DEFINED */
#ifndef UUID_DEFINED
#define UUID_DEFINED
typedef GUID UUID;
#endif /* UUID_DEFINED */
#ifndef __IID_DEFINED__
#define __IID_DEFINED__
typedef GUID IID;
#endif /* __IID_DEFINED__ */
typedef GUID CLSID;
typedef CLSID *LPCLSID;
typedef IID *LPIID;
typedef IID *REFIID;
typedef CLSID *REFCLSID;
typedef GUID FMTID;
typedef FMTID *REFFMTID;
typedef unsigned long error_status_t;
#define uuid_t UUID
typedef unsigned long PROPID;

#ifndef _REFGUID_DEFINED
#if defined (__cplusplus) && !defined (CINTERFACE)
#define REFGUID const GUID&
#define REFIID const IID&
#define REFCLSID const CLSID&
#define REFFMTID const FMTID&
#else
#define REFGUID const GUID* const
#define REFIID const IID* const
#define REFCLSID const CLSID* const
#define REFFMTID const FMTID* const
#endif
#define _REFGUID_DEFINED
#define _REFIID_DEFINED
#define _REFCLSID_DEFINED
#define _REFFMTID_DEFINED
#endif
#ifndef GUID_SECTION
#define GUID_SECTION ".text"
#endif
/* Explicit naming of .text section for readonly data is only
   needed for older GGC (pre-2.95).
   More recent (3.4) GCC puts readonly data in .rdata.  */
#if defined (__GNUC__) && (__GNUC__ <= 2 && __GNUC_MINOR__ < 95) 
#define GUID_SECT __attribute__ ((section (GUID_SECTION)))
#else
#define GUID_SECT
#endif
#if !defined(INITGUID) || (defined(INITGUID) && defined(__cplusplus))
#define GUID_EXT EXTERN_C
#else
#define GUID_EXT
#endif
#ifdef INITGUID
#define DEFINE_GUID(n,l,w1,w2,b1,b2,b3,b4,b5,b6,b7,b8) GUID_EXT const GUID n GUID_SECT = {l,w1,w2,{b1,b2,b3,b4,b5,b6,b7,b8}}
#define DEFINE_OLEGUID(n,l,w1,w2) DEFINE_GUID(n,l,w1,w2,0xC0,0,0,0,0,0,0,0x46)
#else
#define DEFINE_GUID(n,l,w1,w2,b1,b2,b3,b4,b5,b6,b7,b8) GUID_EXT const GUID n
#define DEFINE_OLEGUID(n,l,w1,w2) DEFINE_GUID(n,l,w1,w2,0xC0,0,0,0,0,0,0,0x46)
#endif
#endif 
@


1.16
log
@2010-07-22  Chris Sutcliffe  <ir0nh34d@@users.sourceforge.net>

        * include/basetyps.h (REFGUID, REFIID, REFCLSID, REFFMTID): Revert change
        from 2010-07-17 since it breaks several applications.
@
text
@@


1.15
log
@2010-07-17  Chris Sutcliffe  <ir0nh34d@@users.sourceforge.net>

        * include/winnt.h (HEAP_MAKE_TAG_FLAGS, VALID_INHERIT_FLAGS): Correct
        definition.
        * include/rpcndr.h (NdrUnMarshConfStringHdr, NdrUnMarshCCtxtHdl,
        NdrMarshSCtxtHdl): Ditto.
        * include/basetyps.h (REFGUID, REFIID, REFCLSID, REFFMTID): Remove macro
        definition in favour of typedef definition.

        Thank you to Yuta Tomino for reporting the issues.
@
text
@d142 17
@


1.14
log
@	[mingw-Bugs-1751518]
	* include/mshtml.h (IHTMLDocument2): Correct spelling of put_URL, get_URL.

	[mingw-Bugs-1751565]
	* include/basetyps.h (IID); Guard with __IID_DEFINED__

	[mingw-Bugs-1751595]
	* include/exdisp.h (DWebBrowserEvents2): Remove undocumented STDDISP
	methods.
@
text
@a141 17
#ifndef _REFGUID_DEFINED
#if defined (__cplusplus) && !defined (CINTERFACE)
#define REFGUID const GUID&
#define REFIID const IID&
#define REFCLSID const CLSID&
#define REFFMTID const FMTID&
#else
#define REFGUID const GUID* const
#define REFIID const IID* const
#define REFCLSID const CLSID* const
#define REFFMTID const FMTID* const
#endif
#define _REFGUID_DEFINED
#define _REFIID_DEFINED
#define _REFCLSID_DEFINED
#define _REFFMTID_DEFINED
#endif
@


1.13
log
@	* include/aclui.h: Replace __OBJC__ guard with _OBJC_NO_COM.
	* include/basetyps.h:  Likewise.
 	(_COM_interface): New define.
	(interface): Define to _COM_interface, conditional on !__OBJC__.
	Replace 'interface' with '_COM_interface', throughout.
  	* include/comcat.h: Replace 'interface' with '_COM_interface', throughout.
	* include/commdlg.h: Replace __OBJC__ guard with _OBJC_NO_COM.
	* include/docobj.h: Replace 'interface' with '_COM_interface', throughout.
	* include/mshtml.h: Likewise.
	* include/oaidl.h: Likewise.
	* include/objfwd.h: Likewise.
	* include/objidl.h: Likewise.
	* include/ocidl.h: Likwise.
	* include/olectl.h: Likewise.
	* include/oleidl.h: Likewise.
	* include/shlobj.h: Likewise.
	* include/shlwapi.h: Replace __OBJC__ guard with _OBJC_NO_COM.
	* include/vfw.h: Likewise.
	* include/windows.h. Likewise. Add comment.
	* include/directx/d3d9.h: Replace 'interface' with '_COM_interface',
	throughout.

	* lib/test.c: Replace __OBJC__ guard with _OBJC_NO_COM.
	Add test for conflict with '@@interface'
@
text
@d127 2
d130 1
@


1.12
log
@	* include/basetyps.h (REFFMTID): Define properly.
@
text
@d7 1
a7 1
#ifndef __OBJC__
d43 8
a50 1
# define interface	struct
d62 2
a63 2
#   define DECLARE_INTERFACE(i) interface __attribute__((com_interface)) i
#   define DECLARE_INTERFACE_(i,b) interface __attribute__((com_interface)) i : public b
d65 2
a66 2
#   define DECLARE_INTERFACE(i) interface i
#   define DECLARE_INTERFACE_(i,b) interface i : public b
d78 1
a78 1
   typedef interface i { CONST_VTABLE struct i##Vtbl *lpVtbl; } i; \
d86 1
a86 1
# define FWD_DECL(i) typedef interface i i
d107 1
a107 1
#endif /* __OBJC__ */
d179 1
a179 1
#endif
@


1.11
log
@	* include/basetyps.h (__int16): Correct define.
@
text
@d137 1
d142 1
d147 1
@


1.10
log
@	* basetyps.h (GUID_SECT): Define to nothing for GCC >= 2.95.
@
text
@d20 1
a20 1
#  define __int16 int
@


1.9
log
@	* include/basetypes.h (_REFIID_DEFINED): Correct typo.

	* include/winuser.h (NCCALCSIZE_PARAMS): Define structure.
	Thanks to Mike Nordell <tamlin at algonet dot se>.
@
text
@d149 4
a152 1
#ifdef __GNUC__
@


1.8
log
@
	* include/basetyps.h (small, hyper): Change to __small and __hyper to
	avoid user namespace conflicts.
@
text
@d143 1
a143 1
#define _REFGIID_DEFINED
@


1.7
log
@
	Change existing guards to use the above macro names as appropriate.
	* include/basetyps.h (__int32, __int16, __int8, small, hyper): Define.
	Note: Also added to mingw/include/_mingw.h.
@
text
@d25 2
a26 2
# ifndef small
#  define small char
d28 2
a29 2
# ifndef hyper
#  define hyper long long
@


1.6
log
@
	* include/basetypes.h (_GUID_DEFINED): Add deprecation warning, start
	using GUID_DEFINED instead.
	* include/sqltypes.h: Ditto.
	* include/winnt.h: Ditto.
	* include/ddk/scsiwmi.h: Ditto.
@
text
@d8 42
a49 24
#ifdef __cplusplus
#define EXTERN_C extern "C"
#else
#define EXTERN_C extern
#endif  /* __cplusplus */ 
#define STDMETHODCALLTYPE	__stdcall
#define STDMETHODVCALLTYPE	__cdecl
#define STDAPICALLTYPE	__stdcall
#define STDAPIVCALLTYPE	__cdecl
#define STDAPI	EXTERN_C HRESULT STDAPICALLTYPE
#define STDAPI_(t)	EXTERN_C t STDAPICALLTYPE
#define STDMETHODIMP	HRESULT STDMETHODCALLTYPE
#define STDMETHODIMP_(t)	t STDMETHODCALLTYPE
#define STDAPIV	EXTERN_C HRESULT STDAPIVCALLTYPE
#define STDAPIV_(t)	EXTERN_C t STDAPIVCALLTYPE
#define STDMETHODIMPV	HRESULT STDMETHODVCALLTYPE
#define STDMETHODIMPV_(t)	t STDMETHODVCALLTYPE
#define interface	struct
#if defined(__cplusplus) && !defined(CINTERFACE)
#define STDMETHOD(m)	virtual HRESULT STDMETHODCALLTYPE m
#define STDMETHOD_(t,m)	virtual t STDMETHODCALLTYPE m
#define PURE	=0
#define THIS_
#define THIS	void
d51 2
a52 2
 __attribute__((com_interface)) is obsolete in __GNUC__ >= 3
 g++ vtables are now COM-compatible by default
d54 24
a77 24
#if defined(__GNUC__) &&  __GNUC__ < 3 && !defined(NOCOMATTRIBUTE)
#define DECLARE_INTERFACE(i) interface __attribute__((com_interface)) i
#define DECLARE_INTERFACE_(i,b) interface __attribute__((com_interface)) i : public b
#else
#define DECLARE_INTERFACE(i) interface i
#define DECLARE_INTERFACE_(i,b) interface i : public b
#endif
#else
#define STDMETHOD(m)	HRESULT(STDMETHODCALLTYPE *m)
#define STDMETHOD_(t,m)	t(STDMETHODCALLTYPE *m)
#define PURE
#define THIS_	INTERFACE *,
#define THIS	INTERFACE *
#ifndef CONST_VTABLE
#define CONST_VTABLE
#endif
#define DECLARE_INTERFACE(i) \
typedef interface i { CONST_VTABLE struct i##Vtbl *lpVtbl; } i; \
typedef CONST_VTABLE struct i##Vtbl i##Vtbl; \
CONST_VTABLE struct i##Vtbl
#define DECLARE_INTERFACE_(i,b) DECLARE_INTERFACE(i)
#endif
#define BEGIN_INTERFACE
#define END_INTERFACE
d79 20
a98 20
#define FWD_DECL(i) typedef interface i i
#if defined(__cplusplus) && !defined(CINTERFACE)
#define IENUM_THIS(T)
#define IENUM_THIS_(T)
#else
#define IENUM_THIS(T) T*
#define IENUM_THIS_(T) T*,
#endif
#define DECLARE_ENUMERATOR_(I,T) \
DECLARE_INTERFACE_(I,IUnknown) \
{ \
	STDMETHOD(QueryInterface)(IENUM_THIS_(I) REFIID,PVOID*) PURE; \
	STDMETHOD_(ULONG,AddRef)(IENUM_THIS(I)) PURE; \
	STDMETHOD_(ULONG,Release)(IENUM_THIS(I)) PURE; \
	STDMETHOD(Next)(IENUM_THIS_(I) ULONG,T*,ULONG*) PURE; \
	STDMETHOD(Skip)(IENUM_THIS_(I) ULONG) PURE; \
	STDMETHOD(Reset)(IENUM_THIS(I)) PURE; \
	STDMETHOD(Clone)(IENUM_THIS_(I) I**) PURE; \
}
#define DECLARE_ENUMERATOR(T) DECLARE_ENUMERATOR_(IEnum##T,T)
@


1.5
log
@	* include/richedit.h (RICHEDIT_CLASS): UNICODE it.
	* include/shlobj.h (IContextMenu2): Put methods in right order.
	* include/basetyps.h (REFGUID, REFIID, REFCLSID): Check for
	CINTERFACE before defining.
@
text
@d84 6
a89 2
#ifndef _GUID_DEFINED /* also defined in winnt.h */
#define _GUID_DEFINED
d97 1
a97 1
#endif /* _GUID_DEFINED */
@


1.4
log
@	* include/accctrl.h, aclapi.h, basetsd.h, basetyps.h, cderr.h,
	cguid.h, commctrl.h, commdlg.h, cpl.h, cplext.h, custcntl.h,
	dbt.h, dde.h, ddeml.h, dlgs.h, excpt.h, httpext.h, imagehlp.h,
	imm.h, initguid.h, intshcut.h, ipexport.h, iphlpapi.h,
	ipifcons.h, iprtrmib.h, iptypes.h, isguids.h, largeint.h, lm.h,
	lmaccess.h, lmalert.h, lmapibuf.h, lmat.h, lmaudit.h,
	lmbrowsr.h, lmchdev.h, lmconfig.h, lmcons.h, lmerr.h,
	lmerrlog.h, lmmsg.h, lmremutl.h, lmrepl.h, lmserver.h,
	lmshare.h, lmsname.h, lmstats.h, lmsvc.h, lmuse.h, lmuseflg.h,
	lmwksta.h, lzexpand.h, mapi.h, mciavi.h, mcx.h, mmsystem.h,
	mswsock.h, nb30.h, nddeapi.h, nspapi.h, ntdef.h, ntsecapi.h,
	ntsecpkg.h, oaidl.h, objbase.h, objfwd.h, objidl.h, odbcinst.h,
	ole.h, ole2.h, ole2ver.h, oleauto.h, olectl.h, olectlid.h,
	oledlg.h, oleidl.h, pbt.h, prsht.h, psapi.h, rapi.h, ras.h,
	raserror.h, rassapi.h, regstr.h, richedit.h, richole.h, rpc.h,
	rpcdce.h, rpcdce2.h, rpcdcep.h, rpcndr.h, rpcnsi.h, rpcnsip.h,
	rpcnterr.h, rpcproxy.h, schannel.h, schnlsp.h, scrnsave.h,
	security.h, setupapi.h, shellapi.h, shlguid.h, shlobj.h, sql.h,
	sqlext.h, sqltypes.h, sqlucode.h, sspi.h, subauth.h,
	tlhelp32.h, unknwn.h, userenv.h, w32api.h, winbase.h, wincon.h,
	wincrypt.h, windef.h, windows.h, windowsx.h, winerror.h,
	wingdi.h, wininet.h, winioctl.h, winnetwk.h, winnls.h, winnt.h,
	winperf.h, winreg.h, winresrc.h, winsock.h, winsock2.h,
	winspool.h, winsvc.h, winuser.h, winver.h, ws2tcpip.h,
	wsnetbs.h, wtypes.h, zmouse.h:	Add #pragma GCC system_header
	if __GNUC__ >= 3.
	* include/mapi.h: Change header guard name to _MAPI_H  for
	consistency.
@
text
@d111 1
a111 1
#ifdef __cplusplus
@


1.3
log
@
2001-11-01  Danny Smith  <dannysmith@@users.sourceforge.net>

	* include/basetyps.h (DECLARE_INTERFACE): Don't add
	__attribute__((com_interface)) for __GNUC__ >= 3.

2001-11-01  Danny Smith  <dannysmith@@users.sourceforge.net>

	* include/commdlg.h (PRINTPAGERANGE): Add structure
	definition.
	(PRINTDLGEX[AW]): Likewise.
	(PrintDlgEx[AW]): Add function declaration.
	* lib/comdlg32.def (PrintDlgEx[AW]): Add function stubs.
	* ChangeLog: Fix typo in last entry.


2001-11-01  TAMURA Kent  <tkent@@users.sourceforge.net>

	* include/objbase.h (CoGetClassObject): Change third parameter
	to COSERVERINFO*.

2001-10-30  Danny Smith  <dannysmith@@users.sourceforge.net>

	* include/winuser.h (MOUSEEVENTF_WHEEL): Define.
	Thanks to: Kim Saunders.
	* include/oleauto.h: Define VARIANT* flags for VariantChangeType.
	Thanks to: Pat Thoyts.
	* include/winnt.h: Change C++ style comment to C style.
 	* include/shlobj.h: Ditto.
	* include/objbase.h (enum tagCOINIT): Remove comma at end of
	list.
	* include/oledlg.h (enum tagOLEUIPASTEFLAG): Ditto.
	* include/oleidl.h (enum tagDROPEFFECT): Mark as __extension__
	(enum not limited to range of int).
	* include/oaidl.h (struct tagVARIANT): Mark as __extension__
	(struct with no named members), ifndef NONAMELESSUNION.

2001-10-30  Danny Smith  <dannysmith@@users.sourceforge.net>

	* include/winuser.h (CREATESTRUCT): UNICODE it.
	(CBT_CREATEWND): Likewise.

2001-10-20  Corinna Vinschen  <corinna@@vinschen.de>

	* include/winnetwk.h (WNetGetResourceInformationA): Add declaration.
	(WNetGetResourceInformationW): Ditto.
	(WNetGetResourceInformation): Add define.

2001-10-12  Pedro A Aranda  <paaguti@@hotmail.com>

	* include/winuser.h (POINTSTOPOINT): Use explicit casts
	before extracting words.
@
text
@d3 3
d12 1
a12 1
#endif
@


1.2
log
@
	* include/basetyps.h: add comment for GUID_DEFINED
	* include/lm.h: add includes for lmerr.h and lmserver.h
	* include/lmcons.h: add W2K typedefs LMSTR, LMCSTR
	* include/lmerr.h:  add error codes
	* include/lmserver.h: replace LPTSTR with LPWSTR,
	LPTCSTR with LPWCSTR in structures and prototypes
	* include/lmshare.h: ditto
	* include/lmuse.h: ditto
	* include/lmstats.h: ditto
	* include/oleauto.h: add function prototype SystemTimeToVariantTime
	* include/winbase.h: change first argument of CommConfigDialog to const
	* include/windowsx.h: add macros  defining FAR versions of
	mem and string functions for porting from Win16 code
	* include/winioctl.h:  added IOCTL_STORAGE defines
	* include/winnetwk.h:  added WNNC_NET flags
	* include/winnt.h: add include of <basetsd.h>;
	add structs; add pointer typedefs  for TOKEN structs
	* include/winsock.h: add guard around BSD-ish typedefs
	* include/wtypes.h: new VARENUM enums, new WIN32/WIN64 compat. macros
	* include/basetsd.h: new file
	* include/raserror.h: ditto
	* include/rassapi.h: ditto
	* include/ras.h: ditto
	comment from Earnie: replaced original ras.h contribution with Danny's
	contribution as it is more complete.
	* include/rpcndr.h: add default definition for __RPCNDR_H_VERSION__
@
text
@d29 5
a33 1
#if defined(__GNUC__) && !defined(NOCOMATTRIBUTE)
@


1.1
log
@Initial revision
@
text
@d77 2
a78 2
#ifndef GUID_DEFINED
#define GUID_DEFINED
d86 1
a86 1
#endif /* GUID_DEFINED */
@


1.1.1.1
log
@import winsup-2000-02-17 snapshot
@
text
@@
