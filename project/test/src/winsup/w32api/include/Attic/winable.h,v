head	1.10;
access;
symbols
	cygwin-1_7_17-release:1.9
	cygwin-64bit-branch:1.9.0.14
	cygwin-1_7_16-release:1.9
	cygwin-1_7_15-release:1.9
	cygwin-1_7_14_2-release:1.9
	cygwin-1_7_14-release:1.9
	cygwin-1_7_12-release:1.9
	cygwin-1_7_11-release:1.9
	cygwin-1_7_10-release:1.9
	cygwin-1_7_9-release:1.9
	cygwin-1_7_8-release:1.9
	cygwin-1_7_7-release:1.9
	cygwin-1_7_5-release:1.9
	cygwin-1_7_4-release:1.9
	cygwin-1_7_3-release:1.9
	cygwin-1_7_2-release:1.9
	cygwin-1_7_1-release:1.9
	cv-branch-2:1.9.0.12
	cr-0x5f1:1.9.0.10
	cv-branch:1.9.0.8
	cr-0x3b58:1.9.0.6
	cr-0x9e:1.9.0.4
	cr-0x9d:1.9.0.2
	corinna-01:1.9
	cr-0x9c:1.1.0.6
	cr-0x9b:1.1.0.4
	cr-0x99:1.1
	Z-emcb-cygwin_daemon:1.1.0.2;
locks; strict;
comment	@ * @;


1.10
date	2012.11.07.16.52.39;	author cgf;	state dead;
branches;
next	1.9;

1.9
date	2003.09.26.14.46.33;	author papadopo;	state Exp;
branches;
next	1.8;

1.8
date	2003.09.26.09.49.52;	author papadopo;	state Exp;
branches;
next	1.7;

1.7
date	2003.09.25.11.22.22;	author papadopo;	state Exp;
branches;
next	1.6;

1.6
date	2003.09.25.07.53.44;	author papadopo;	state Exp;
branches;
next	1.5;

1.5
date	2003.09.24.13.47.46;	author papadopo;	state Exp;
branches;
next	1.4;

1.4
date	2003.09.23.15.11.12;	author papadopo;	state Exp;
branches;
next	1.3;

1.3
date	2003.09.23.09.09.50;	author papadopo;	state Exp;
branches;
next	1.2;

1.2
date	2003.09.23.08.51.57;	author papadopo;	state Exp;
branches;
next	1.1;

1.1
date	2003.05.30.10.09.36;	author infidel;	state Exp;
branches;
next	;


desc
@@


1.10
log
@* mingw: Delete obsolete directory.
* w32api: Ditto.
@
text
@#ifndef _WINABLE_H
#define _WINABLE_H
#if __GNUC__ >=3
#pragma GCC system_header
#endif

#ifdef __cplusplus
extern "C" {
#endif

#if (_WIN32_WINNT < 0x0403)
#define INPUT_MOUSE 0x00000000
#define INPUT_KEYBOARD 0x00000001
#define INPUT_HARDWARE 0x00000002
#endif /* (_WIN32_WINNT < 0x04030) */
#if (WINVER < 0x0500)
#define CHILDID_SELF 0
#define OBJID_WINDOW 0x00000000
#define OBJID_SYSMENU 0xFFFFFFFF
#define OBJID_TITLEBAR 0xFFFFFFFE
#define OBJID_MENU 0xFFFFFFFD
#define OBJID_CLIENT 0xFFFFFFFC
#define OBJID_VSCROLL 0xFFFFFFFB
#define OBJID_HSCROLL 0xFFFFFFFA
#define OBJID_SIZEGRIP 0xFFFFFFF9
#define OBJID_CARET 0xFFFFFFF8
#define OBJID_CURSOR 0xFFFFFFF7
#define OBJID_ALERT 0xFFFFFFF6
#define OBJID_SOUND 0xFFFFFFF5
#define GUI_CARETBLINKING 0x00000001
#define GUI_INMOVESIZE 0x00000002
#define GUI_INMENUMODE 0x00000004
#define GUI_SYSTEMMENUMODE 0x00000008
#define GUI_POPUPMENUMODE 0x00000010
#define WINEVENT_OUTOFCONTEXT 0x0000
#define WINEVENT_SKIPOWNTHREAD 0x0001
#define WINEVENT_SKIPOWNPROCESS 0x0002
#define WINEVENT_INCONTEXT 0x0004
#endif /* (WINVER < 0x0500) */
#if (_WIN32_WINNT < 0x0403)
typedef struct tagMOUSEINPUT {
	LONG dx;
	LONG dy;
	DWORD mouseData;
	DWORD dwFlags;
	DWORD time;
	ULONG_PTR dwExtraInfo;
} MOUSEINPUT,*PMOUSEINPUT;
typedef struct tagKEYBDINPUT {
	WORD wVk;
	WORD wScan;
	DWORD dwFlags;
	DWORD time;
	ULONG_PTR dwExtraInfo;
} KEYBDINPUT,*PKEYBDINPUT;
typedef struct tagHARDWAREINPUT {
	DWORD uMsg;
	WORD wParamL;
	WORD wParamH;
} HARDWAREINPUT,*PHARDWAREINPUT;
typedef struct tagINPUT {
	DWORD type;
	_ANONYMOUS_UNION union {
		MOUSEINPUT mi;
		KEYBDINPUT ki;
		HARDWAREINPUT hi;
	} DUMMYUNIONNAME;
} INPUT,*PINPUT,*LPINPUT;
#endif /* (_WIN32_WINNT < 0x0403) */
#if (WINVER < 0x0500)
typedef VOID (*WINEVENTPROC)(HWINEVENTHOOK,DWORD,HWND,LONG,LONG,DWORD,DWORD);
typedef struct tagGUITHREADINFO {
	DWORD cbSize;
	DWORD flags;
	HWND hwndActive;
	HWND hwndFocus;
	HWND hwndCapture;
	HWND hwndMenuOwner;
	HWND hwndMoveSize;
	HWND hwndCaret;
	RECT rcCaret;
} GUITHREADINFO,*PGUITHREADINFO,*LPGUITHREADINFO;
#endif /* (WINVER < 0x0500) */

BOOL WINAPI BlockInput(BOOL);
#if (_WIN32_WINNT < 0x0403)
UINT WINAPI SendInput(UINT,LPINPUT,int);
#endif
#if (WINVER < 0x0500)
BOOL WINAPI GetGUIThreadInfo(DWORD,LPGUITHREADINFO);
void WINAPI NotifyWinEvent(DWORD,HWND,LONG,LONG);
HWINEVENTHOOK WINAPI SetWinEventHook(UINT,UINT,HMODULE,WINEVENTPROC,DWORD,DWORD,UINT);
BOOL WINAPI UnhookWinEvent(HWINEVENTHOOK);
#endif /* (WINVER < 0x0500) */

#ifdef __cplusplus
}
#endif
#endif
@


1.9
log
@	* include/winable.h (BlockInput): Add function.

	* include/winable.h (WS_ACTIVECAPTION): Add constant.
	For use with WINDOWINFO structure.

	* include/winuser.h [_WIN32_WINNT >= 0x0500] (LockWorkStation):
	Add function.

	* include/winuser.h [_WIN32_WINNT >= 0x0501] (IsWinEventHookInstalled):
	Add function.

	* include/winuser.h [WINVER >= 0x0500] (UnhookWinEvent):
	Add function...

	* include/winable.h [WINVER < 0x0500] (UnhookWinEvent):
	...and duplicate.

	* include/winuser.h [_WIN32_WINNT >= 0x0403] (SendInput):
	Guard function...

	* include/winable.h [_WIN32_WINNT < 0x0403] (SendInput):
	...and duplicate.

	* include/winuser.h [WINVER >= 0x0500] (NotifyWinEvent):
	Guard function...

	* include/winable.h [WINVER < 0x0500] (NotifyWinEvent):
	...and duplicate.

	* include/winuser.h [WINVER >= 0x0500] (MOUSEINPUT, KEYBDINPUT,
	HARDWAREINPUT, INPUT): Guard structures...

	* include/winable.h [WINVER < 0x0500] (MOUSEINPUT, KEYBDINPUT,
	HARDWAREINPUT, INPUT): ...and duplicate.

	* include/winuser.h [_WIN32_WINNT >= 0x0403] (INPUT_MOUSE,
	INPUT_KEYBOARD, INPUT_HARDWARE): Guard constants...

	* include/winable.h [_WIN32_WINNT < 0x0403] (INPUT_MOUSE,
	INPUT_KEYBOARD, INPUT_HARDWARE): ...and duplicate.

	* include/winuser.h: Move around some lines. Reformat according
	to recommended or dominant style. Remove FAR keyword.

	* include/winable.h: Move around some lines.

	* lib/user32.def (BlockInput, IsWinEventHookInstalled,
	LockWorkStation, UnhookWinEvent): Add functions.
@
text
@@


1.8
log
@	* include/winuser.h [WINVER >= 0x0500] (SetWinEventHook, WINEVENTPROC,
	WINEVENT_OUTOFCONTEXT, WINEVENT_SKIPOWNTHREAD, WINEVENT_SKIPOWNPROCESS,
	WINEVENT_INCONTEXT): Add function, typedef, and constants.

	* include/winable.h [WINVER < 0x0500] (SetWinEventHook, WINEVENTPROC,
	WINEVENT_OUTOFCONTEXT, WINEVENT_SKIPOWNTHREAD, WINEVENT_SKIPOWNPROCESS,
	WINEVENT_INCONTEXT): Add function, typedef, and constants.

	* include/winuser.h [_WIN32_WINNT >= 0x0500] (UserHandleGrantAccess):
	Add function.

	* lib/user32.def (SetWinEventHook, UserHandleGrantAccess):
	Add functions.
@
text
@a10 1
#if (WINVER < 0x0500)
d12 3
a14 3
#define INPUT_MOUSE 0
#define INPUT_KEYBOARD 1
#define INPUT_HARDWARE 2
d16 1
d35 2
a36 2
#define WINEVENT_OUTOFCONTEXT   0x0000
#define WINEVENT_SKIPOWNTHREAD  0x0001
d38 34
a71 1
#define WINEVENT_INCONTEXT      0x0004
d83 7
a89 1
typedef VOID (*WINEVENTPROC)(HWINEVENTHOOK,DWORD,HWND,LONG,LONG,DWORD,DWORD);
d91 1
d93 1
d99 1
a99 1
#endif /* _WINABLE_H */
@


1.7
log
@* include/winuser.h (DeregisterShellHookWindow): Add function.
* include/winuser.h [_WIN32_WINNT >= 0x0500] (EndTask): Add function.
* lib/user32.def (EndTask): Add function.
* include/winuser.h (WINVER, _WIN32_WINNT): It's better (?) to use _WIN32_WINNT instead of WINVER to test for Windows 2000.
* include/winable.h: Reorder target macros.
* lib/*.def: Cleanup.
@
text
@d35 4
d50 1
d52 1
@


1.6
log
@* include/winuser.h [WINVER >= 0x0500] (GetGUIThreadInfo,
LPGUITHREADINFO): Add function and associated typedef...
* include/winable.h [WINVER < 0x0500] (GetGUIThreadInfo,
LPGUITHREADINFO): ...and duplicate them in <winable.h> as
seems to be required on older versions of Windows.
@
text
@d11 1
a16 1
#if (WINVER < 0x0500)
@


1.5
log
@Remove test code.
@
text
@d45 2
a46 1
} GUITHREADINFO,*PGUITHREADINFO;
@


1.4
log
@This fixes regression in <winable.h> introduced by previous change.
@
text
@a6 2
#include <stdarg.h>

@


1.3
log
@New CHILDID_SELF constant.
More duplicates in <winuser.h> and <winable.h>.
@
text
@d7 2
d13 1
d17 2
a36 3
#if(_WIN32_WINNT >= 0x0501)
#define GUI_16BITTASK 0x00000020
#endif
d48 1
@


1.2
log
@Bring back OBJID_* and GUITHREADINFO constants in <winuser.h>.
Some constants and structures are duplicated in <winable.h> and <winuser.h>.
Add GUI_* and new KEYEVENTF_* constants.
@
text
@d11 4
a45 1
BOOL WINAPI BlockInput(BOOL);
@


1.1
log
@
2003-05-30  Mattia Barbon  <mbarbon@@dsi.unive.it>

	* lib/oleacc.def: New file.
	* include/winable.h: New file.
	* include/oleacc.h: Add extern "C" guard.
	(NAVDIR_*, ROLE_*, STATE_*): Add missing constants.
	(AccessibleChildren, AccessibleObjectFromEvent,
	AccessibleObjectFromPoint, AccessibleObjectFromWindow,
	CreateStdAccessibleProxy[AW], GetOleaccVersionInfo, GetRoleText[AW],
	GetStateText[AW], LresultFromObject, ObjectFromLresult,
	WindowFromAccessibleObject): Add prototypes and UNICODE mappings.
	* include/winuser.h (NotifyWinEvent): Add prototype.
	(OBJID_WINDOW, OBJID_SYSMENU, OBJID_TITLEBAR,
	OBJID_MENU, OBJID_CLIENT, OBJID_VSCROLL, OBJID_HSCROLL,
	OBJID_SIZEGRIP, OBJID_CARET, OBJID_CURSOR, OBJID_ALERT,
	OBJID_SOUND): Move from here to...
	* include/winable.h (OBJID_WINDOW, OBJID_SYSMENU, OBJID_TITLEBAR,
	OBJID_MENU, OBJID_CLIENT, OBJID_VSCROLL, OBJID_HSCROLL,
	OBJID_SIZEGRIP, OBJID_CARET, OBJID_CURSOR, OBJID_ALERT,
	OBJID_SOUND): Here, as per documentation.
	* lib/test.c: Include winable.h.
	* lib/user32.def (NotifyWinEvent): Add missing export.
@
text
@d23 20
@

