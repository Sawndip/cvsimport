head	1.7;
access;
symbols
	cygwin-1_7_17-release:1.6
	cygwin-64bit-branch:1.6.0.2
	cygwin-1_7_16-release:1.6
	cygwin-1_7_15-release:1.6
	cygwin-1_7_14_2-release:1.6
	cygwin-1_7_14-release:1.6
	cygwin-1_7_12-release:1.6
	cygwin-1_7_11-release:1.6
	cygwin-1_7_10-release:1.6
	cygwin-1_7_9-release:1.6
	cygwin-1_7_8-release:1.6
	cygwin-1_7_7-release:1.5
	cygwin-1_7_5-release:1.5
	cygwin-1_7_4-release:1.5
	cygwin-1_7_3-release:1.5
	cygwin-1_7_2-release:1.5
	cygwin-1_7_1-release:1.5
	cv-branch-2:1.5.0.18
	cr-0x5f1:1.5.0.16
	cv-branch:1.5.0.14
	cr-0x3b58:1.5.0.12
	cr-0x9e:1.5.0.10
	cr-0x9d:1.5.0.8
	corinna-01:1.5
	cr-0x9c:1.5.0.6
	cr-0x9b:1.5.0.4
	cr-0x99:1.5
	Z-emcb-cygwin_daemon:1.5.0.2
	w32api-2_2:1.5
	mingw-runtime-2_4:1.5
	w32api-1_5:1.5
	cygnus_cvs_20020108_pre:1.4
	Z-cygwin_daemon_merge-new_HEAD:1.4
	Z-cygwin_daemon_merge_HEAD:1.4
	cygwin_daemon:1.4.0.4;
locks; strict;
comment	@ * @;


1.7
date	2012.11.07.16.52.34;	author cgf;	state dead;
branches;
next	1.6;

1.6
date	2010.12.27.19.59.54;	author ironhead;	state Exp;
branches;
next	1.5;

1.5
date	2002.03.09.09.04.08;	author dannysmith;	state Exp;
branches;
next	1.4;

1.4
date	2001.08.05.12.47.53;	author earnie;	state Exp;
branches;
next	1.3;

1.3
date	2001.06.11.17.29.54;	author earnie;	state Exp;
branches;
next	1.2;

1.2
date	2001.03.30.13.22.17;	author earnie;	state Exp;
branches;
next	1.1;

1.1
date	2000.11.01.00.37.23;	author earnie;	state Exp;
branches;
next	;


desc
@@


1.7
log
@* mingw: Delete obsolete directory.
* w32api: Ditto.
@
text
@#ifndef _BASETSD_H
#define _BASETSD_H
#if __GNUC__ >=3
#pragma GCC system_header
#endif

#ifdef __GNUC__
#ifndef __int64
#define __int64 long long
#endif
#endif

#if defined(_WIN64)
#define __int3264   __int64
#define ADDRESS_TAG_BIT 0x40000000000UI64
#else /*  !_WIN64 */
#define __int3264   __int32
#define ADDRESS_TAG_BIT 0x80000000UL
#define HandleToUlong( h ) ((ULONG)(ULONG_PTR)(h) )
#define HandleToLong( h ) ((LONG)(LONG_PTR) (h) )
#define LongToHandle( h) ((HANDLE)(LONG_PTR) (h))
#define PtrToUlong( p ) ((ULONG)(ULONG_PTR) (p) )
#define PtrToLong( p ) ((LONG)(LONG_PTR) (p) )
#define PtrToUint( p ) ((UINT)(UINT_PTR) (p) )
#define PtrToInt( p ) ((INT)(INT_PTR) (p) )
#define PtrToUshort( p ) ((unsigned short)(ULONG_PTR)(p) )
#define PtrToShort( p ) ((short)(LONG_PTR)(p) )
#define IntToPtr( i )    ((VOID*)(INT_PTR)((int)i))
#define UIntToPtr( ui )  ((VOID*)(UINT_PTR)((unsigned int)ui))
#define LongToPtr( l )   ((VOID*)(LONG_PTR)((long)l))
#define ULongToPtr( ul )  ((VOID*)(ULONG_PTR)((unsigned long)ul))
#endif /* !_WIN64 */

#define UlongToPtr(ul) ULongToPtr(ul)
#define UintToPtr(ui) UIntToPtr(ui)
#define MAXUINT_PTR  (~((UINT_PTR)0))
#define MAXINT_PTR   ((INT_PTR)(MAXUINT_PTR >> 1))
#define MININT_PTR   (~MAXINT_PTR)
#define MAXULONG_PTR (~((ULONG_PTR)0))
#define MAXLONG_PTR  ((LONG_PTR)(MAXULONG_PTR >> 1))
#define MINLONG_PTR  (~MAXLONG_PTR)
#define MAXUHALF_PTR ((UHALF_PTR)~0)
#define MAXHALF_PTR  ((HALF_PTR)(MAXUHALF_PTR >> 1))
#define MINHALF_PTR  (~MAXHALF_PTR)

#ifndef RC_INVOKED
#ifdef __cplusplus
extern "C" {
#endif
typedef signed char INT8;
typedef signed short INT16;
typedef int LONG32, *PLONG32;
#ifndef XFree86Server
typedef int INT32, *PINT32;
#endif /* ndef XFree86Server */
typedef unsigned char UINT8;
typedef unsigned short UINT16;
typedef unsigned int ULONG32, *PULONG32;
typedef unsigned int DWORD32, *PDWORD32;
typedef unsigned int UINT32, *PUINT32;

#if defined(_WIN64)
typedef __int64 INT_PTR, *PINT_PTR;
typedef unsigned __int64 UINT_PTR, *PUINT_PTR;
typedef __int64 LONG_PTR, *PLONG_PTR;
typedef unsigned __int64 ULONG_PTR, *PULONG_PTR;
typedef unsigned __int64 HANDLE_PTR;
typedef unsigned int UHALF_PTR, *PUHALF_PTR;
typedef int HALF_PTR, *PHALF_PTR;

#if 0 /* TODO when WIN64 is here */
inline unsigned long HandleToUlong(const void* h )
    { return((unsigned long) h ); }
inline long HandleToLong( const void* h )
    { return((long) h ); }
inline void* LongToHandle( const long h )
    { return((void*) (INT_PTR) h ); }
inline unsigned long PtrToUlong( const void* p)
    { return((unsigned long) p ); }
inline unsigned int PtrToUint( const void* p )
    { return((unsigned int) p ); }
inline unsigned short PtrToUshort( const void* p )
    { return((unsigned short) p ); }
inline long PtrToLong( const void* p )
    { return((long) p ); }
inline int PtrToInt( const void* p )
    { return((int) p ); }
inline short PtrToShort( const void* p )
    { return((short) p ); }
inline void* IntToPtr( const int i )
    { return( (void*)(INT_PTR)i ); }
inline void* UIntToPtr(const unsigned int ui)
    { return( (void*)(UINT_PTR)ui ); }
inline void* LongToPtr( const long l )
    { return( (void*)(LONG_PTR)l ); }
inline void* ULongToPtr( const unsigned long ul )
    { return( (void*)(ULONG_PTR)ul ); }
#endif /* 0_ */

#else /*  !_WIN64 */
typedef  int INT_PTR, *PINT_PTR;
typedef  unsigned int UINT_PTR, *PUINT_PTR;
typedef  long LONG_PTR, *PLONG_PTR;
typedef  unsigned long ULONG_PTR, *PULONG_PTR;
typedef unsigned short UHALF_PTR, *PUHALF_PTR;
typedef short HALF_PTR, *PHALF_PTR;
typedef unsigned long HANDLE_PTR;
#endif /* !_WIN64 */

typedef ULONG_PTR SIZE_T, *PSIZE_T;
typedef LONG_PTR SSIZE_T, *PSSIZE_T;
typedef ULONG_PTR DWORD_PTR, *PDWORD_PTR;
typedef __int64 LONG64, *PLONG64;
typedef __int64 INT64,  *PINT64;
typedef unsigned __int64 ULONG64, *PULONG64;
typedef unsigned __int64 DWORD64, *PDWORD64;
typedef unsigned __int64 UINT64,  *PUINT64;
#ifdef __cplusplus
}
#endif
#endif /* !RC_INVOKED */

#endif /* _BASETSD_H */
@


1.6
log
@2010-12-27  Seth Jackson  <sethj@@users.sourceforge.net>

        * include/basetsd.h: (INT8, UINT8, INT16, UINT16): Define.
@
text
@@


1.5
log
@	* include/accctrl.h, aclapi.h, basetsd.h, basetyps.h, cderr.h,
	cguid.h, commctrl.h, commdlg.h, cpl.h, cplext.h, custcntl.h,
	dbt.h, dde.h, ddeml.h, dlgs.h, excpt.h, httpext.h, imagehlp.h,
	imm.h, initguid.h, intshcut.h, ipexport.h, iphlpapi.h,
	ipifcons.h, iprtrmib.h, iptypes.h, isguids.h, largeint.h, lm.h,
	lmaccess.h, lmalert.h, lmapibuf.h, lmat.h, lmaudit.h,
	lmbrowsr.h, lmchdev.h, lmconfig.h, lmcons.h, lmerr.h,
	lmerrlog.h, lmmsg.h, lmremutl.h, lmrepl.h, lmserver.h,
	lmshare.h, lmsname.h, lmstats.h, lmsvc.h, lmuse.h, lmuseflg.h,
	lmwksta.h, lzexpand.h, mapi.h, mciavi.h, mcx.h, mmsystem.h,
	mswsock.h, nb30.h, nddeapi.h, nspapi.h, ntdef.h, ntsecapi.h,
	ntsecpkg.h, oaidl.h, objbase.h, objfwd.h, objidl.h, odbcinst.h,
	ole.h, ole2.h, ole2ver.h, oleauto.h, olectl.h, olectlid.h,
	oledlg.h, oleidl.h, pbt.h, prsht.h, psapi.h, rapi.h, ras.h,
	raserror.h, rassapi.h, regstr.h, richedit.h, richole.h, rpc.h,
	rpcdce.h, rpcdce2.h, rpcdcep.h, rpcndr.h, rpcnsi.h, rpcnsip.h,
	rpcnterr.h, rpcproxy.h, schannel.h, schnlsp.h, scrnsave.h,
	security.h, setupapi.h, shellapi.h, shlguid.h, shlobj.h, sql.h,
	sqlext.h, sqltypes.h, sqlucode.h, sspi.h, subauth.h,
	tlhelp32.h, unknwn.h, userenv.h, w32api.h, winbase.h, wincon.h,
	wincrypt.h, windef.h, windows.h, windowsx.h, winerror.h,
	wingdi.h, wininet.h, winioctl.h, winnetwk.h, winnls.h, winnt.h,
	winperf.h, winreg.h, winresrc.h, winsock.h, winsock2.h,
	winspool.h, winsvc.h, winuser.h, winver.h, ws2tcpip.h,
	wsnetbs.h, wtypes.h, zmouse.h:	Add #pragma GCC system_header
	if __GNUC__ >= 3.
	* include/mapi.h: Change header guard name to _MAPI_H  for
	consistency.
@
text
@d50 2
d56 2
@


1.4
log
@
	* include/wtypes.h: (DECIMAL_SETZERO): Correct typo.
 	* include/oleidl.h (ISupportErrorInfo, ICreateInfo): Move from here
	* include/oaidl.h: ... to here.
	* include/oaidl.h ICreateErrorInfo): Add interface definition.
	(IErrorInfo::GetGUID): Change arg to GUID.
	(LPSUPPORTERRORINFO): Add typedef.
	(IID_ISupportErrorInfo): Change forward decl. of type to IID.
	* include/winsock2.h (WSAGET* and WSAMAKE*): Remove duplicate
	defines.
	* include/commctrl.h (TreeView_SetIndent): Correct typo.
	* include/commctrl.h (TBSTYPE_FLAT): Remove define.
	* include/commctrl.h (TBBUTTONINFO[AW]): Add struct definitions,
	and UNICODE mappings, if _WIN32_IE >= 0x400.
	(TBIF_* and TB_SETBUTTONINFO): Add defines, if _WIN32_IE >= 0x400.
	(CDIS_*,CDDS_*,CDRF_*) : Add defines.
	(tagNMCUSTOMDRAWINFO): Add struct definition and typedefs.
	(tagNMLVCUSTOMDRAW): Likewise.
	(tagNMTVCUSTOMDRAW): Likewise.
	(tagNMLVCACHEHINT): Likewise.
	* include/basetsd.h (#include <_mingw.h>): Remove.
	(__int64): Define.
	* include/wingdi.h (AC_SRC_OVER): Add define.
	(struct _BLENDFUNCTION): Add.
	* include/shlobj.h:  Add BIF_* defines.
	* include/winerror.h (E_PENDING): Add error code define.
	* include/basetsd.h (#include <_mingw.h>): Add directive.
	* include/winbase.h(InterlockedCompareExchange): Change args
	and return value from PVOID to LONG.
	(InterlockedExchange): Change first arg to LPLONG.
	(InterlockedCompareExchangePointer): New macro.
	(InterlockedExchangePointer): New macro.
@
text
@d3 3
@


1.3
log
@
	* include/basetsd.h: RC_INVOKED protection and realignment.
	Thanks to: Colin Peters <colinpeters@@users.sourceforge.net>
@
text
@d4 6
@


1.2
log
@
	* include/winuser.h (RT_CURSOR): Add protection for XFree86Server.
	(RT_FONT): Ditto.
	(VK_KANA): New definition.
	* include/basetsd.h (INT32): Ditto.
	* include/windef.h (ATOM): Ditto.
	(BOOL): Ditto.
	(BYTE): Ditto.
	* include/winbase.h (FreeResource): Ditto.
	Thanks to: "Harold Hunt" <huntharo@@msu.edu>
@
text
@d3 35
a53 2
#define __int3264   __int64
#define ADDRESS_TAG_BIT 0x40000000000UI64
a91 2
#define __int3264   __int32
#define ADDRESS_TAG_BIT 0x80000000UL
a94 13
#define HandleToUlong( h ) ((ULONG)(ULONG_PTR)(h) )
#define HandleToLong( h ) ((LONG)(LONG_PTR) (h) )
#define LongToHandle( h) ((HANDLE)(LONG_PTR) (h))
#define PtrToUlong( p ) ((ULONG)(ULONG_PTR) (p) )
#define PtrToLong( p ) ((LONG)(LONG_PTR) (p) )
#define PtrToUint( p ) ((UINT)(UINT_PTR) (p) )
#define PtrToInt( p ) ((INT)(INT_PTR) (p) )
#define PtrToUshort( p ) ((unsigned short)(ULONG_PTR)(p) )
#define PtrToShort( p ) ((short)(LONG_PTR)(p) )
#define IntToPtr( i )    ((VOID*)(INT_PTR)((int)i))
#define UIntToPtr( ui )  ((VOID*)(UINT_PTR)((unsigned int)ui))
#define LongToPtr( l )   ((VOID*)(LONG_PTR)((long)l))
#define ULongToPtr( ul )  ((VOID*)(ULONG_PTR)((unsigned long)ul))
a96 12
#define UlongToPtr(ul) ULongToPtr(ul)
#define UintToPtr(ui) UIntToPtr(ui)
#define MAXUINT_PTR  (~((UINT_PTR)0))
#define MAXINT_PTR   ((INT_PTR)(MAXUINT_PTR >> 1))
#define MININT_PTR   (~MAXINT_PTR)
#define MAXULONG_PTR (~((ULONG_PTR)0))
#define MAXLONG_PTR  ((LONG_PTR)(MAXULONG_PTR >> 1))
#define MINLONG_PTR  (~MAXLONG_PTR)
#define MAXUHALF_PTR ((UHALF_PTR)~0)
#define MAXHALF_PTR  ((HALF_PTR)(MAXUHALF_PTR >> 1))
#define MINHALF_PTR  (~MAXHALF_PTR)

d108 1
@


1.1
log
@
	* include/basetyps.h: add comment for GUID_DEFINED
	* include/lm.h: add includes for lmerr.h and lmserver.h
	* include/lmcons.h: add W2K typedefs LMSTR, LMCSTR
	* include/lmerr.h:  add error codes
	* include/lmserver.h: replace LPTSTR with LPWSTR,
	LPTCSTR with LPWCSTR in structures and prototypes
	* include/lmshare.h: ditto
	* include/lmuse.h: ditto
	* include/lmstats.h: ditto
	* include/oleauto.h: add function prototype SystemTimeToVariantTime
	* include/winbase.h: change first argument of CommConfigDialog to const
	* include/windowsx.h: add macros  defining FAR versions of
	mem and string functions for porting from Win16 code
	* include/winioctl.h:  added IOCTL_STORAGE defines
	* include/winnetwk.h:  added WNNC_NET flags
	* include/winnt.h: add include of <basetsd.h>;
	add structs; add pointer typedefs  for TOKEN structs
	* include/winsock.h: add guard around BSD-ish typedefs
	* include/wtypes.h: new VARENUM enums, new WIN32/WIN64 compat. macros
	* include/basetsd.h: new file
	* include/raserror.h: ditto
	* include/rassapi.h: ditto
	* include/ras.h: ditto
	comment from Earnie: replaced original ras.h contribution with Danny's
	contribution as it is more complete.
	* include/rpcndr.h: add default definition for __RPCNDR_H_VERSION__
@
text
@d7 1
d9 1
@

