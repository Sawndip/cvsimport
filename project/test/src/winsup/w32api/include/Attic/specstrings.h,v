head	1.4;
access;
symbols
	cygwin-1_7_17-release:1.3
	cygwin-64bit-branch:1.3.0.4
	cygwin-1_7_16-release:1.3
	cygwin-1_7_15-release:1.3
	cygwin-1_7_14_2-release:1.3
	cygwin-1_7_14-release:1.3
	cygwin-1_7_12-release:1.3
	cygwin-1_7_11-release:1.3
	cygwin-1_7_10-release:1.3
	cygwin-1_7_9-release:1.3
	cygwin-1_7_8-release:1.3
	cygwin-1_7_7-release:1.3
	cygwin-1_7_5-release:1.3
	cygwin-1_7_4-release:1.3
	cygwin-1_7_3-release:1.3
	cygwin-1_7_2-release:1.3
	cygwin-1_7_1-release:1.3
	cv-branch-2:1.3.0.2;
locks; strict;
comment	@ * @;


1.4
date	2012.11.07.16.52.39;	author cgf;	state dead;
branches;
next	1.3;

1.3
date	2008.04.26.12.07.35;	author ironhead;	state Exp;
branches;
next	1.2;

1.2
date	2008.02.12.01.31.52;	author ironhead;	state Exp;
branches;
next	1.1;

1.1
date	2008.02.02.13.19.23;	author ironhead;	state Exp;
branches;
next	;


desc
@@


1.4
log
@* mingw: Delete obsolete directory.
* w32api: Ditto.
@
text
@#ifndef _SPECSTRINGS_H
#define _SPECSTRINGS_H

#if __GNUC__ >=3
#pragma GCC system_header
#endif

/* These are built from primitives in Microsoft's Standard Annotation Language.
   Search for "Header Annotation" on MSDN site for their MS-specific meanings */

/* __in and __out currently conflict with libstdc++, use with caution */


#define __bcount(size)
#define __bcount_opt(size)
#define __deref_bcount(size)
#define __deref_bcount_opt(size)
#define __deref_ecount(size)
#define __deref_ecount_opt(size)
#define __deref_in
#define __deref_in_bcount(size)
#define __deref_in_bcount_opt(size)
#define __deref_in_ecount(size)
#define __deref_in_ecount_opt(size)
#define __deref_in_opt
#define __deref_inout
#define __deref_inout_bcount(size)
#define __deref_inout_bcount_full(size)
#define __deref_inout_bcount_full_opt(size)
#define __deref_inout_bcount_opt(size)
#define __deref_inout_bcount_part(size,length)
#define __deref_inout_bcount_part_opt(size,length)
#define __deref_inout_ecount(size)
#define __deref_inout_ecount_full(size)
#define __deref_inout_ecount_full_opt(size)
#define __deref_inout_ecount_opt(size)
#define __deref_inout_ecount_part(size,length)
#define __deref_inout_ecount_part_opt(size,length)
#define __deref_inout_opt
#define __deref_opt_bcount(size)
#define __deref_opt_bcount_opt(size)
#define __deref_opt_ecount(size)
#define __deref_opt_ecount_opt(size)
#define __deref_opt_in
#define __deref_opt_in_bcount(size)
#define __deref_opt_in_bcount_opt(size)
#define __deref_opt_in_ecount(size)
#define __deref_opt_in_ecount_opt(size)
#define __deref_opt_in_opt
#define __deref_opt_inout
#define __deref_opt_inout_bcount(size)
#define __deref_opt_inout_bcount_full(size)
#define __deref_opt_inout_bcount_full_opt(size)
#define __deref_opt_inout_bcount_opt(size)
#define __deref_opt_inout_bcount_part(size,length)
#define __deref_opt_inout_bcount_part_opt(size,length)
#define __deref_opt_inout_ecount(size)
#define __deref_opt_inout_ecount_full(size)
#define __deref_opt_inout_ecount_full_opt(size)
#define __deref_opt_inout_ecount_opt(size)
#define __deref_opt_inout_ecount_part(size,length)
#define __deref_opt_inout_ecount_part_opt(size,length)
#define __deref_opt_inout_opt
#define __deref_opt_out
#define __deref_opt_out_bcount(size)
#define __deref_opt_out_bcount_full(size)
#define __deref_opt_out_bcount_full_opt(size)
#define __deref_opt_out_bcount_opt(size)
#define __deref_opt_out_bcount_part(size,length)
#define __deref_opt_out_bcount_part_opt(size,length)
#define __deref_opt_out_ecount(size)
#define __deref_opt_out_ecount_full(size)
#define __deref_opt_out_ecount_full_opt(size)
#define __deref_opt_out_ecount_opt(size)
#define __deref_opt_out_ecount_part(size,length)
#define __deref_opt_out_ecount_part_opt(size,length)
#define __deref_opt_out_opt
#define __deref_out
#define __deref_out_bcount(size)
#define __deref_out_bcount_full(size)
#define __deref_out_bcount_full_opt(size)
#define __deref_out_bcount_opt(size)
#define __deref_out_bcount_part(size,length)
#define __deref_out_bcount_part_opt(size,length)
#define __deref_out_ecount(size)
#define __deref_out_ecount_full(size)
#define __deref_out_ecount_full_opt(size)
#define __deref_out_ecount_opt(size)
#define __deref_out_ecount_part(size,length)
#define __deref_out_ecount_part_opt(size,length)
#define __deref_out_opt
#define __ecount(size)
#define __ecount_opt(size)
#define __in
#define __in_bcount(size)
#define __in_bcount_opt(size)
#define __in_ecount(size)
#define __in_ecount_opt(size)
#define __in_opt
#define __inout
#define __inout_bcount(size)
#define __inout_bcount_full(size)
#define __inout_bcount_full_opt(size)
#define __inout_bcount_opt(size)
#define __inout_bcount_part(size,length)
#define __inout_bcount_part_opt(size,length)
#define __inout_ecount(size)
#define __inout_ecount_full(size)
#define __inout_ecount_full_opt(size)
#define __inout_ecount_opt(size)
#define __inout_ecount_part(size,length)
#define __inout_ecount_part_opt(size,length)
#define __inout_opt
#define __out
#define __out_bcount(size)
#define __out_bcount_full(size)
#define __out_bcount_full_opt(size)
#define __out_bcount_opt(size)
#define __out_bcount_part(size,length)
#define __out_bcount_part_opt(size,length)
#define __out_ecount(size)
#define __out_ecount_full(size)
#define __out_ecount_full_opt(size)
#define __out_ecount_opt(size)
#define __out_ecount_part(size,length)
#define __out_ecount_part_opt(size,length)
#define __out_opt 


#endif /*_SPECSTRINGS_H */
@


1.3
log
@2008-04-26  Danny Smith  <dannysmith@@users.sourceforge.net>

        * include/specstrings.h: Add more dummy defines.
@
text
@@


1.2
log
@2008-02-02  Chris Sutcliffe  <ir0nh34d@@users.sourceforge.net>

  * include/specstrings.h (IN, OUT, OPTIONAL): Remove.
  * include/windef.h (IN, OUT, OPTIONAL): Define.
@
text
@d1 130
a130 22
#ifndef _SPECSTRINGS_H
#define _SPECSTRINGS_H
#if __GNUC__ >=3
#pragma GCC system_header
#endif

/* __in and __out currently conflict with libstdc++, use with caution */

#define __in
#define __inout
#define __in_opt
#define __in_bcount(x)
#define __in_ecount(x)
#define __out
#define __out_ecount_part(x)
#define __out_ecount_part(x,y)
#define __struct_bcount(x)
#define __field_ecount_opt(x)
#define __out_bcount_opt(x)

#endif

@


1.1
log
@2008-02-02  Chris Sutcliffe  <ir0nh34d@@users.sourceforge.net>

        * include/specstrings.h: new file, move pseudo modifiers from windef.h.
        * include/windef.h (__in, __inout, __in_opt, __in_bcound, __in_ecount,
        __out, __out_ecount_part, __struct_bcount, __field_ecount_opt,
        __out_bcount_opt): Move to specstrings.h.
@
text
@a8 2
#define IN
#define OUT
a19 3
#ifndef OPTIONAL
#define OPTIONAL
#endif
@

