head	1.6;
access;
symbols
	cygwin-1_7_17-release:1.5
	cygwin-64bit-branch:1.5.0.6
	cygwin-1_7_16-release:1.5
	cygwin-1_7_15-release:1.5
	cygwin-1_7_14_2-release:1.5
	cygwin-1_7_14-release:1.5
	cygwin-1_7_12-release:1.5
	cygwin-1_7_11-release:1.5
	cygwin-1_7_10-release:1.5
	cygwin-1_7_9-release:1.5
	cygwin-1_7_8-release:1.5
	cygwin-1_7_7-release:1.5
	cygwin-1_7_5-release:1.5
	cygwin-1_7_4-release:1.5
	cygwin-1_7_3-release:1.5
	cygwin-1_7_2-release:1.5
	cygwin-1_7_1-release:1.5
	cv-branch-2:1.5.0.4
	cr-0x5f1:1.5.0.2
	cv-branch:1.4.0.2
	cr-0x3b58:1.3.0.12
	cr-0x9e:1.3.0.10
	cr-0x9d:1.3.0.8
	corinna-01:1.3
	cr-0x9c:1.3.0.6
	cr-0x9b:1.3.0.4
	cr-0x99:1.3
	Z-emcb-cygwin_daemon:1.3.0.2
	w32api-2_2:1.2
	mingw-runtime-2_4:1.2
	w32api-1_5:1.1;
locks; strict;
comment	@ * @;


1.6
date	2012.11.07.16.52.34;	author cgf;	state dead;
branches;
next	1.5;

1.5
date	2006.07.25.00.22.19;	author dannysmith;	state Exp;
branches;
next	1.4;

1.4
date	2006.04.11.22.56.08;	author ironhead;	state Exp;
branches;
next	1.3;

1.3
date	2003.08.24.23.04.57;	author dannysmith;	state Exp;
branches;
next	1.2;

1.2
date	2002.12.26.04.23.57;	author dannysmith;	state Exp;
branches;
next	1.1;

1.1
date	2002.06.13.00.13.34;	author dannysmith;	state Exp;
branches;
next	;


desc
@@


1.6
log
@* mingw: Delete obsolete directory.
* w32api: Ditto.
@
text
@#ifndef _COMCAT_H
#define _COMCAT_H
#if __GNUC__ >=3
#pragma GCC system_header
#endif

#ifndef COM_NO_WINDOWS_H
#include <windows.h>
#include <ole2.h>
#endif

#ifndef _RC_INVOKED

#ifdef __cplusplus
extern "C"{
#endif

EXTERN_C const IID IID_IEnumGUID;
typedef _COM_interface IEnumGUID *LPENUMGUID;

#define INTERFACE IEnumGUID
DECLARE_INTERFACE_(IEnumGUID,IUnknown)
{
	STDMETHOD(QueryInterface)(THIS_ REFIID,PVOID*) PURE;
	STDMETHOD_(ULONG,AddRef)(THIS) PURE;
	STDMETHOD_(ULONG,Release)(THIS) PURE;
	STDMETHOD(Next)(THIS_ ULONG,GUID*,ULONG*) PURE;
	STDMETHOD(Skip)(THIS_ ULONG) PURE;
	STDMETHOD(Reset)(THIS) PURE;
	STDMETHOD(Clone)(THIS_ LPENUMGUID*) PURE;
};
#undef INTERFACE
#if (!defined (__cplusplus) || defined (CINTERFACE)) \
    && defined (COBJMACROS)
#define IEnumGUID_QueryInterface(p,a,b) (p)->lpVtbl->QueryInterface(p,a,b)
#define IEnumGUID_AddRef(p)             (p)->lpVtbl->AddRef(p)
#define IEnumGUID_Release(p)            (p)->lpVtbl->Release(p)
#define IEnumGUID_Next(p,a,b,c)         (p)->lpVtbl->Next(p,a,b,c)
#define IEnumGUID_Skip(p,a)             (p)->lpVtbl->Skip(p,a)
#define IEnumGUID_Reset(p)              (p)->lpVtbl->Reset(p)
#define IEnumGUID_Clone(p,a)            (p)->lpVtbl->Clone(p,a)
#endif

typedef GUID CATID;
typedef REFGUID REFCATID;
#define CATID_NULL GUID_NULL
#define IsEqualCATID(a, b) IsEqualGUID(a, b)

typedef struct tagCATEGORYINFO {
    CATID   catid;		/* category identifier for component */
    LCID    lcid;		/* locale identifier */
    OLECHAR szDescription[128];	/* description of the category */
} CATEGORYINFO, *LPCATEGORYINFO;

EXTERN_C const CATID CATID_Insertable;
EXTERN_C const CATID CATID_Control;
EXTERN_C const CATID CATID_Programmable;
EXTERN_C const CATID CATID_IsShortcut;
EXTERN_C const CATID CATID_NeverShowExt;
EXTERN_C const CATID CATID_DocObject;
EXTERN_C const CATID CATID_Printable;
EXTERN_C const CATID CATID_RequiresDataPathHost;
EXTERN_C const CATID CATID_PersistsToMoniker;
EXTERN_C const CATID CATID_PersistsToStorage;
EXTERN_C const CATID CATID_PersistsToStreamInit;
EXTERN_C const CATID CATID_PersistsToStream;
EXTERN_C const CATID CATID_PersistsToMemory;
EXTERN_C const CATID CATID_PersistsToFile;
EXTERN_C const CATID CATID_PersistsToPropertyBag;
EXTERN_C const CATID CATID_InternetAware;
EXTERN_C const CATID CATID_DesignTimeUIActivatableControl;

#define IEnumCATID IEnumGUID
#define LPENUMCATID LPENUMGUID
#define IID_IEnumCATID IID_IEnumGUID

#define IEnumCLSID IEnumGUID
#define LPENUMCLSID LPENUMGUID
#define IID_IEnumCLSID IID_IEnumGUID

EXTERN_C const IID IID_ICatInformation;
typedef _COM_interface ICatInformation *LPCATINFORMATION;

EXTERN_C const IID IID_ICatRegister;
typedef _COM_interface ICatRegister *LPCATREGISTER;

EXTERN_C const IID IID_IEnumCATEGORYINFO;
typedef _COM_interface IEnumCATEGORYINFO *LPENUMCATEGORYINFO;

EXTERN_C const CLSID CLSID_StdComponentCategoriesMgr;

#define INTERFACE ICatInformation
DECLARE_INTERFACE_(ICatInformation,IUnknown)
{
	STDMETHOD(QueryInterface)(THIS_ REFIID,PVOID*) PURE;
	STDMETHOD_(ULONG,AddRef)(THIS) PURE;
	STDMETHOD_(ULONG,Release)(THIS) PURE;
	STDMETHOD(EnumCategories)(THIS_ LCID,LPENUMCATEGORYINFO*) PURE;
	STDMETHOD(GetCategoryDesc)(THIS_ REFCATID,LCID,PWCHAR*) PURE;
	STDMETHOD(EnumClassesOfCategories)(THIS_ ULONG,CATID*,ULONG,CATID*,LPENUMCLSID*) PURE;
	STDMETHOD(IsClassOfCategories)(THIS_ REFCLSID,ULONG,CATID*,ULONG,CATID*) PURE;
	STDMETHOD(EnumImplCategoriesOfClass)(THIS_ REFCLSID,LPENUMCATID*) PURE;
	STDMETHOD(EnumReqCategoriesOfClass)(THIS_ REFCLSID,LPENUMCATID*) PURE;
};
#undef INTERFACE
#if (!defined (__cplusplus) || defined (CINTERFACE)) \
    && defined (COBJMACROS)
#define ICatInformation_QueryInterface(p,a,b) (p)->lpVtbl->QueryInterface(p,a,b)
#define ICatInformation_AddRef(p)             (p)->lpVtbl->AddRef(p)
#define ICatInformation_Release(p)            (p)->lpVtbl->Release(p)
#define ICatInformation_EnumCategories(p,a,b) (p)->lpVtbl->EnumCategories(p,a,b)
#define ICatInformation_GetCategoryDesc(p,a,b,c) (p)->lpVtbl->GetCategoryDesc(p,a,b,c)
#define ICatInformation_EnumClassesOfCategories(p,a,b,c,d,e) (p)->lpVtbl->EnumClassesOfCategories(p,a,b,c,d,e)
#define ICatInformation_IsClassOfCategories(p,a,b,c,d,e) (p)->lpVtbl->IsClassOfCategories(p,a,b,c,d,e)
#define ICatInformation_EnumImplCategoriesOfClass(p,a,b) (p)->lpVtbl->EnumImplCategoriesOfClass(p,a,b)
#define ICatInformation_EnumReqCategoriesOfClass(p,a,b) (p)->lpVtbl->EnumReqCategoriesOfClass(p,a,b)
#endif

#define INTERFACE ICatRegister
DECLARE_INTERFACE_(ICatRegister,IUnknown)
{
	STDMETHOD(QueryInterface)(THIS_ REFIID,PVOID*) PURE;
	STDMETHOD_(ULONG,AddRef)(THIS) PURE;
	STDMETHOD_(ULONG,Release)(THIS) PURE;
	STDMETHOD(RegisterCategories)(THIS_ ULONG,CATEGORYINFO*) PURE;
	STDMETHOD(UnRegisterCategories)(THIS_ ULONG,CATID*) PURE;
	STDMETHOD(RegisterClassImplCategories)(THIS_ REFCLSID,ULONG,CATID*) PURE;
	STDMETHOD(UnRegisterClassImplCategories)(THIS_ REFCLSID,ULONG,CATID*) PURE;
	STDMETHOD(RegisterClassReqCategories)(THIS_ REFCLSID,ULONG,CATID*) PURE;
	STDMETHOD(UnRegisterClassReqCategories)(THIS_ REFCLSID,ULONG,CATID*) PURE;
};
#undef INTERFACE
#if (!defined (__cplusplus) || defined (CINTERFACE)) \
    && defined (COBJMACROS)
#define ICatRegister_QueryInterface(p,a,b) (p)->lpVtbl->QueryInterface(p,a,b)
#define ICatRegister_AddRef(p)             (p)->lpVtbl->AddRef(p)
#define ICatRegister_Release(p)            (p)->lpVtbl->Release(p)
#define ICatRegister_RegisterCategories(p,a,b) (p)->lpVtbl->RegisterCategories(p,a,b)
#define ICatRegister_UnRegisterCategories(p,a,b) (p)->lpVtbl->UnRegisterCategories(p,a,b)
#define ICatRegister_RegisterClassImplCategories(p,a,b,c) (p)->lpVtbl->RegisterClassImplCategories(p,a,b,c)
#define ICatRegister_UnRegisterClassImplCategories(p,a,b,c) (p)->lpVtbl->UnRegisterClassImplCategories(p,a,b,c)
#define ICatRegister_RegisterClassReqCategories(p,a,b,c) (p)->lpVtbl->RegisterClassReqCategories(p,a,b,c)
#define ICatRegister_UnRegisterClassReqCategories(p,a,b,c) (p)->lpVtbl->UnRegisterClassReqCategories(p,a,b,c)
#endif

EXTERN_C const IID IID_IEnumCATEGORYINFO;
#define INTERFACE IEnumCATEGORYINFO
DECLARE_INTERFACE_(IEnumCATEGORYINFO,IUnknown)
{
	STDMETHOD(QueryInterface)(THIS_ REFIID,PVOID*) PURE;
	STDMETHOD_(ULONG,AddRef)(THIS) PURE;
	STDMETHOD_(ULONG,Release)(THIS) PURE;
	STDMETHOD(Next)(THIS_ ULONG,CATEGORYINFO*,ULONG*) PURE;
	STDMETHOD(Skip)(THIS_ ULONG) PURE;
	STDMETHOD(Reset)(THIS) PURE;
	STDMETHOD(Clone)(THIS_ LPENUMCATEGORYINFO*) PURE;
};
#undef INTERFACE
#if (!defined (__cplusplus) || defined (CINTERFACE)) \
    && defined (COBJMACROS)
#define IEnumCATEGORYINFO_QueryInterface(p,a,b) (p)->lpVtbl->QueryInterface(p,a,b)
#define IEnumCATEGORYINFO_AddRef(p)             (p)->lpVtbl->AddRef(p)
#define IEnumCATEGORYINFO_Release(p)            (p)->lpVtbl->Release(p)
#define IEnumCATEGORYINFO_Next(p,a,b,c)         (p)->lpVtbl->Next(p,a,b,c)
#define IEnumCATEGORYINFO_Skip(p,a)             (p)->lpVtbl->Skip(p,a)
#define IEnumCATEGORYINFO_Reset(p)              (p)->lpVtbl->Reset(p)
#define IEnumCATEGORYINFO_Clone(p,a)            (p)->lpVtbl->Clone(p,a)
#endif

#ifdef __cplusplus
}
#endif

#endif /* _RC_INVOKED */
#endif
@


1.5
log
@	* include/aclui.h: Replace __OBJC__ guard with _OBJC_NO_COM.
	* include/basetyps.h:  Likewise.
 	(_COM_interface): New define.
	(interface): Define to _COM_interface, conditional on !__OBJC__.
	Replace 'interface' with '_COM_interface', throughout.
  	* include/comcat.h: Replace 'interface' with '_COM_interface', throughout.
	* include/commdlg.h: Replace __OBJC__ guard with _OBJC_NO_COM.
	* include/docobj.h: Replace 'interface' with '_COM_interface', throughout.
	* include/mshtml.h: Likewise.
	* include/oaidl.h: Likewise.
	* include/objfwd.h: Likewise.
	* include/objidl.h: Likewise.
	* include/ocidl.h: Likwise.
	* include/olectl.h: Likewise.
	* include/oleidl.h: Likewise.
	* include/shlobj.h: Likewise.
	* include/shlwapi.h: Replace __OBJC__ guard with _OBJC_NO_COM.
	* include/vfw.h: Likewise.
	* include/windows.h. Likewise. Add comment.
	* include/directx/d3d9.h: Replace 'interface' with '_COM_interface',
	throughout.

	* lib/test.c: Replace __OBJC__ guard with _OBJC_NO_COM.
	Add test for conflict with '@@interface'
@
text
@@


1.4
log
@2006-04-11  Chris Sutcliffe <ir0nh34d@@users.sourceforge.net>

    * include/comcat.h: INTERFACE should not remain defined
    at the end of the header.
    * include/docobj.h: Ditto.
    * include/exdisp.h: Ditto.
    * include/intshcut.h: Ditto.
    * include/mlang.h: Ditto.
    * include/mshtml.h: Ditto.
    * include/oaidl.h: Ditto.
@
text
@d19 1
a19 1
typedef interface IEnumGUID *LPENUMGUID;
d82 1
a82 1
typedef interface ICatInformation *LPCATINFORMATION;
d85 1
a85 1
typedef interface ICatRegister *LPCATREGISTER;
d88 1
a88 1
typedef interface IEnumCATEGORYINFO *LPENUMCATEGORYINFO;
@


1.3
log
@2003-08-24   Danny Smith <dannysmith@@users.sourceforge.net>

	* include/objidl.h (COBJMACROS): Define macros only
	if using C interace.
	* include/unknwn.h: Ditto.
	* include/comcat.h: Ditto.

2003-08-24  Filip Navara  <xnavara@@volny.cz>

	* include/prsht.h (PSH_WIZARDHASFINISH, PSH_WIZARD_LITE,
	PSH_NOCONTEXTHELP): Define.
	(PSH_WIZARD97): Fix definition for _WIN32_IE >= 0x500.
	* include/winuser.h (DFCS_TRANSPARENT, DFCS_HOT): Define.
	(LPDLGTEMPLATE[AW]): Add typedefs.
@
text
@a20 1
#undef INTERFACE
a146 1
#undef INTERFACE
@


1.2
log
@	* include/commcat.h: Don't include windows.h or ole2.h ifdef
	COM_NO_WINDOWS_H.
	* include/unknwn.h: Ditto.
@
text
@d34 2
a35 1
#ifdef COBJMACROS
d107 2
a108 1
#ifdef COBJMACROS
d134 2
a135 1
#ifdef COBJMACROS
d161 2
a162 1
#ifdef COBJMACROS
@


1.1
log
@2002-06-13  John K. Hohm <jhohm@@acm.org>

	* include/comcat.h: New file.
@
text
@d7 1
d10 1
@

