head	1.7;
access;
symbols
	cygwin-1_7_17-release:1.6
	cygwin-64bit-branch:1.6.0.8
	cygwin-1_7_16-release:1.6
	cygwin-1_7_15-release:1.6
	cygwin-1_7_14_2-release:1.6
	cygwin-1_7_14-release:1.6
	cygwin-1_7_12-release:1.6
	cygwin-1_7_11-release:1.6
	cygwin-1_7_10-release:1.6
	cygwin-1_7_9-release:1.6
	cygwin-1_7_8-release:1.6
	cygwin-1_7_7-release:1.6
	cygwin-1_7_5-release:1.6
	cygwin-1_7_4-release:1.6
	cygwin-1_7_3-release:1.6
	cygwin-1_7_2-release:1.6
	cygwin-1_7_1-release:1.6
	cv-branch-2:1.6.0.6
	cr-0x5f1:1.6.0.4
	cv-branch:1.6.0.2
	cr-0x3b58:1.5.0.2
	cr-0x9e:1.4.0.10
	cr-0x9d:1.4.0.8
	corinna-01:1.4
	cr-0x9c:1.4.0.6
	cr-0x9b:1.4.0.4
	cr-0x99:1.4
	Z-emcb-cygwin_daemon:1.4.0.2
	w32api-2_2:1.4
	mingw-runtime-2_4:1.4;
locks; strict;
comment	@ * @;


1.7
date	2012.11.07.16.52.43;	author cgf;	state dead;
branches;
next	1.6;

1.6
date	2006.06.12.00.55.06;	author dannysmith;	state Exp;
branches;
next	1.5;

1.5
date	2004.09.28.08.46.54;	author dannysmith;	state Exp;
branches;
next	1.4;

1.4
date	2002.12.19.01.34.26;	author dannysmith;	state Exp;
branches;
next	1.3;

1.3
date	2002.11.15.01.08.17;	author dannysmith;	state Exp;
branches;
next	1.2;

1.2
date	2002.11.12.21.34.07;	author dannysmith;	state Exp;
branches;
next	1.1;

1.1
date	2002.10.06.22.18.25;	author earnie;	state Exp;
branches;
next	;


desc
@@


1.7
log
@* mingw: Delete obsolete directory.
* w32api: Ditto.
@
text
@/*
 * ws2san.h
 *
 * WinSock Direct (SAN) support
 *
 * This file is part of the w32api package.
 *
 * Contributors:
 *   Created by Casper S. Hornstrup <chorns@@users.sourceforge.net>
 *
 * THIS SOFTWARE IS NOT COPYRIGHTED
 *
 * This source code is offered for use in the public domain. You may
 * use, modify or distribute it freely.
 *
 * This code is distributed in the hope that it will be useful but
 * WITHOUT ANY WARRANTY. ALL WARRANTIES, EXPRESS OR IMPLIED ARE HEREBY
 * DISCLAIMED. This includes but is not limited to warranties of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
 *
 */

#ifndef __WS2SAN_H
#define __WS2SAN_H

#if __GNUC__ >=3
#pragma GCC system_header
#endif

#ifdef __cplusplus
extern "C" {
#endif

#include <winsock2.h>
#include "ntddk.h"


#define WSPAPI STDCALL

/* FIXME: Unknown definitions */
typedef PVOID LPWSPDATA;
typedef PDWORD LPWSATHREADID;
typedef PVOID LPWSPPROC_TABLE;
typedef struct _WSPUPCALLTABLEEX WSPUPCALLTABLEEX;
typedef WSPUPCALLTABLEEX *LPWSPUPCALLTABLEEX;

#define SO_MAX_RDMA_SIZE                  0x700D
#define SO_RDMA_THRESHOLD_SIZE            0x700E

#define WSAID_REGISTERMEMORY \
  {0xC0B422F5, 0xF58C, 0x11d1, {0xAD, 0x6C, 0x00, 0xC0, 0x4F, 0xA3, 0x4A, 0x2D}}

#define WSAID_DEREGISTERMEMORY \
  {0xC0B422F6, 0xF58C, 0x11d1, {0xAD, 0x6C, 0x00, 0xC0, 0x4F, 0xA3, 0x4A, 0x2D}}

#define WSAID_REGISTERRDMAMEMORY \
  {0xC0B422F7, 0xF58C, 0x11d1, {0xAD, 0x6C, 0x00, 0xC0, 0x4F, 0xA3, 0x4A, 0x2D}}

#define WSAID_DEREGISTERRDMAMEMORY \
  {0xC0B422F8, 0xF58C, 0x11d1, {0xAD, 0x6C, 0x00, 0xC0, 0x4F, 0xA3, 0x4A, 0x2D}}

#define WSAID_RDMAWRITE \
  {0xC0B422F9, 0xF58C, 0x11d1, {0xAD, 0x6C, 0x00, 0xC0, 0x4F, 0xA3, 0x4A, 0x2D}}

#define WSAID_RDMAREAD \
  {0xC0B422FA, 0xF58C, 0x11d1, {0xAD, 0x6C, 0x00, 0xC0, 0x4F, 0xA3, 0x4A, 0x2D}}

#define WSAID_MEMORYREGISTRATIONCACHECALLBACK \
  {0xE5DA4AF8, 0xD824, 0x48CD, {0xA7, 0x99, 0x63, 0x37, 0xA9, 0x8E, 0xD2, 0xAF}}

typedef struct _WSABUFEX {
  u_long  len; 
  char FAR  *buf; 
  HANDLE  handle; 
} WSABUFEX, FAR * LPWSABUFEX;

#if 0
typedef struct _WSPUPCALLTABLEEX {
  LPWPUCLOSEEVENT  lpWPUCloseEvent;
  LPWPUCLOSESOCKETHANDLE  lpWPUCloseSocketHandle;
  LPWPUCREATEEVENT  lpWPUCreateEvent;
  LPWPUCREATESOCKETHANDLE  lpWPUCreateSocketHandle;
  LPWPUFDISSET  lpWPUFDIsSet;
  LPWPUGETPROVIDERPATH  lpWPUGetProviderPath;
  LPWPUMODIFYIFSHANDLE  lpWPUModifyIFSHandle;
  LPWPUPOSTMESSAGE  lpWPUPostMessage;
  LPWPUQUERYBLOCKINGCALLBACK  lpWPUQueryBlockingCallback;
  LPWPUQUERYSOCKETHANDLECONTEXT  lpWPUQuerySocketHandleContext;
  LPWPUQUEUEAPC  lpWPUQueueApc;
  LPWPURESETEVENT  lpWPUResetEvent;
  LPWPUSETEVENT  lpWPUSetEvent;
  LPWPUOPENCURRENTTHREAD  lpWPUOpenCurrentThread;
  LPWPUCLOSETHREAD  lpWPUCloseThread;
  LPWPUCOMPLETEOVERLAPPEDREQUEST lpWPUCompleteOverlappedRequest;
} WSPUPCALLTABLEEX, FAR * LPWSPUPCALLTABLEEX;
#endif

int WSPAPI
WSPStartupEx(
  /*IN*/ WORD  wVersionRequested,
  /*OUT*/ LPWSPDATA  lpWSPData,
  /*IN*/ LPWSAPROTOCOL_INFOW  lpProtocolInfo,
  /*IN*/ LPWSPUPCALLTABLEEX  lpUpcallTable,
  /*OUT*/ LPWSPPROC_TABLE  lpProcTable);

typedef int WSPAPI
(*LPWSPSTARTUPEX)(
  /*IN*/ WORD  wVersionRequested,
  /*OUT*/ LPWSPDATA  lpWSPData,
  /*IN*/ LPWSAPROTOCOL_INFOW  lpProtocolInfo,
  /*IN*/ LPWSPUPCALLTABLEEX  lpUpcallTable,
  /*OUT*/ LPWSPPROC_TABLE  lpProcTable);

#define MEM_READ                          1
#define MEM_WRITE                         2
#define MEM_READWRITE                     3

int WSPAPI
WSPDeregisterMemory(
  /*IN*/ SOCKET  s,
  /*IN*/ HANDLE  Handle,
  /*OUT*/ LPINT  lpErrno);

typedef int WSPAPI
(*LPFN_WSPDEREGISTERMEMORY)(
  /*IN*/ SOCKET  s,
  /*IN*/ HANDLE  Handle,
  /*OUT*/ LPINT  lpErrno);

int WSPAPI
WSPDeregisterRdmaMemory(
  /*IN*/ SOCKET  s,
  /*IN*/ LPVOID  lpRdmaBufferDescriptor,
  /*IN*/ DWORD  dwDescriptorLength,
  /*OUT*/ LPINT  lpErrno);

typedef int WSPAPI
(*LPFN_WSPDEREGISTERRDMAMEMORY)(
  /*IN*/ SOCKET  s,
  /*IN*/ LPVOID  lpRdmaBufferDescriptor,
  /*IN*/ DWORD  dwDescriptorLength,
  /*OUT*/ LPINT  lpErrno);

int WSPAPI
WSPMemoryRegistrationCacheCallback(
  /*IN*/ PVOID  lpvAddress,
  /*IN*/ SIZE_T  Size,
  /*OUT*/ LPINT  lpErrno);

typedef int WSPAPI
(*LPFN_WSPMEMORYREGISTRATIONCACHECALLBACK)(
  /*IN*/ PVOID  lpvAddress,
  /*IN*/ SIZE_T  Size,
  /*OUT*/ LPINT  lpErrno);

int WSPAPI
WSPRdmaRead(
  /*IN*/ SOCKET  s,
  /*IN*/ LPWSABUFEX  lpBuffers,
  /*IN*/ DWORD  dwBufferCount,
  /*IN*/ LPVOID  lpTargetBufferDescriptor,
  /*IN*/ DWORD  dwTargetDescriptorLength,
  /*IN*/ DWORD  dwTargetBufferOffset,
  /*OUT*/ LPDWORD  lpdwNumberOfBytesRead,
  /*IN*/ DWORD  dwFlags,
  /*IN*/ LPWSAOVERLAPPED  lpOverlapped,
  /*IN*/ LPWSAOVERLAPPED_COMPLETION_ROUTINE  lpCompletionRoutine,
  /*IN*/ LPWSATHREADID  lpThreadId,
  /*OUT*/ LPINT  lpErrno);

typedef int WSPAPI
(*LPFN_WSPRDMAREAD)(
  /*IN*/ SOCKET  s,
  /*IN*/ LPWSABUFEX  lpBuffers,
  /*IN*/ DWORD  dwBufferCount,
  /*IN*/ LPVOID  lpTargetBufferDescriptor,
  /*IN*/ DWORD  dwTargetDescriptorLength,
  /*IN*/ DWORD  dwTargetBufferOffset,
  /*OUT*/ LPDWORD  lpdwNumberOfBytesRead,
  /*IN*/ DWORD  dwFlags,
  /*IN*/ LPWSAOVERLAPPED  lpOverlapped,
  /*IN*/ LPWSAOVERLAPPED_COMPLETION_ROUTINE  lpCompletionRoutine,
  /*IN*/ LPWSATHREADID  lpThreadId,
  /*OUT*/ LPINT  lpErrno);

int WSPAPI
WSPRdmaWrite(
  /*IN*/ SOCKET  s,
  /*IN*/ LPWSABUFEX  lpBuffers,
  /*IN*/ DWORD  dwBufferCount,
  /*IN*/ LPVOID  lpTargetBufferDescriptor,
  /*IN*/ DWORD  dwTargetDescriptorLength,
  /*IN*/ DWORD  dwTargetBufferOffset,
  /*OUT*/ LPDWORD  lpdwNumberOfBytesWritten,
  /*IN*/ DWORD  dwFlags,
  /*IN*/ LPWSAOVERLAPPED  lpOverlapped,
  /*IN*/ LPWSAOVERLAPPED_COMPLETION_ROUTINE  lpCompletionRoutine,
  /*IN*/ LPWSATHREADID  lpThreadId,
  /*OUT*/ LPINT  lpErrno);

typedef int WSPAPI
(*LPFN_WSPRDMAWRITE)(
  /*IN*/ SOCKET  s,
  /*IN*/ LPWSABUFEX  lpBuffers,
  /*IN*/ DWORD  dwBufferCount,
  /*IN*/ LPVOID  lpTargetBufferDescriptor,
  /*IN*/ DWORD  dwTargetDescriptorLength,
  /*IN*/ DWORD  dwTargetBufferOffset,
  /*OUT*/ LPDWORD  lpdwNumberOfBytesWritten,
  /*IN*/ DWORD  dwFlags,
  /*IN*/ LPWSAOVERLAPPED  lpOverlapped,
  /*IN*/ LPWSAOVERLAPPED_COMPLETION_ROUTINE  lpCompletionRoutine,
  /*IN*/ LPWSATHREADID  lpThreadId,
  /*OUT*/ LPINT  lpErrno);

HANDLE WSPAPI
WSPRegisterMemory(
  /*IN*/ SOCKET  s,
  /*IN*/ PVOID  lpBuffer,
  /*IN*/ DWORD  dwBufferLength,
  /*IN*/ DWORD  dwFlags,
  /*OUT*/ LPINT  lpErrno);

int WSPAPI
WSPRegisterRdmaMemory(
  /*IN*/ SOCKET  s,
  /*IN*/ PVOID  lpBuffer,
  /*IN*/ DWORD  dwBufferLength,
  /*IN*/ DWORD  dwFlags,
  /*OUT*/ LPVOID  lpRdmaBufferDescriptor,
  /*IN OUT*/ LPDWORD  lpdwDescriptorLength,
  /*OUT*/ LPINT  lpErrno);

typedef int WSPAPI
(*LPFN_WSPREGISTERRDMAMEMORY)(
  /*IN*/ SOCKET  s,
  /*IN*/ PVOID  lpBuffer,
  /*IN*/ DWORD  dwBufferLength,
  /*IN*/ DWORD  dwFlags,
  /*OUT*/ LPVOID  lpRdmaBufferDescriptor,
  /*IN OUT*/ LPDWORD  lpdwDescriptorLength,
  /*OUT*/ LPINT  lpErrno);

#ifdef __cplusplus
}
#endif

#endif /* __WS2SAN_H */
@


1.6
log
@	[mingw-Bugs-1424461]
	*include/imagehlp.h: Comment out IN, OUT and OPTIONAL,
	throughout.
	*include/rpcdce.h: Don't define IN, OUT or OPTIONAL if
	_NO_W32_PSEUDO_MODIFIERS.
	*include/rpcnsi.h: Comment out IN, OUT and OPTIONAL,
	throughout.
	*include/rpcnsip.h: Likewise.
	*include/windef.h: Don't define IN, OUT or OPTIONAL
	if _NO_W32_PSEUDO_MODIFIERS.
	*include/ddk/batclass.h: Comment out IN, OUT and OPTIONAL,
	throughout.
	*include/ddk/cfgmgr32.h: Likewise.
	*include/ddk/ddkmapi.h: Likewise.
	*include/ddk/hidclass.h: Likewise.
	*include/ddk/hidpi.h: Likewise.
	*include/ddk/kbdmou.h: Likewise.
	*include/ddk/mcd.h: Likewise.
	*include/ddk/miniport.h: Likewise.
	*include/ddk/minitape.h: Likewise.
	*include/ddk/ndis.h: Likewise.
	*include/ddk/ndistapi.h: Likewise.
	*include/ddk/ndiswan.h: Likewise.
	*include/ddk/ntapi.h: Likewise.
	*include/ddk/ntdd8042.h: Likewise.
	*include/ddk/ntddpcm.h: Likewise.
	*include/ddk/ntifs.h: Likewise.
	*include/ddk/ntpoapi.h: Likewise.
	*include/ddk/parallel.h: Likewise.
	*include/ddk/pfhook.h: Likewise.
	*include/ddk/scsiwmi.h: Likewise.
	*include/ddk/smbus.h: Likewise.
	*include/ddk/srb.h: Likewise.
	*include/ddk/storport.h: Likewise.
	*include/ddk/tdikrnl.h: Likewise.
	*include/ddk/upssvc.h: Likewise.
	*include/ddk/usbcamdi.h: Likewise.
	*include/ddk/usbscan.h: Likewise.
	*include/ddk/video.h: Likewise.
	*include/ddk/videoagp.h: Likewise.
	*include/ddk/win2k.h: Likewise.
	*include/ddk/winddi.h: Likewise.
	*include/ddk/winddk.h: Don't define IN, OUT or OPTIONAL
	if _NO_W32_PSEUDO_MODIFIERS.
	Comment out IN, OUT and OPTIONAL, throughout.
	*include/ddk/winnt4.h: Comment out IN, OUT and OPTIONAL,
	throughout.
	*include/ddk/ws2san.h: Likewise.
@
text
@@


1.5
log
@2004-09-29  Filip Navara  <xnavara@@volny.cz>

	* include/ddk/(atm.h, batclass.h, cfg.h, cfgmgr32.h, d4drvif.h,
	d4iface.h, ddkmapi.h, hidclass.h, hidpi.h, mcd.h, miniport.h,
	mountdev.h, mountmgr.h, ndis.h, ndistapi.h, ndiswan.h, netpnp.h,
	newdev.h, ntapi.h, ntdd8042.h, ntddbeep.h, ntddcdrm.h, ntddcdvd.h,
	ntddchgr.h, ntdddisk.h, ntddkbd.h, ntddmou.h, ntddpar.h, ntddpcm.h,
	ntddscsi.h, ntddser.h, ntddstor.h, ntddtape.h, ntddtdi.h,
	ntddvdeo.h, ntddvol.h, ntpoapi.h, parallel.h, pfhook.h, poclass.h,
	scsi.h, scsiscan.h, smbus.h, srb.h, storport.h, tdiinfo.h,
	tdikrnl.h, tvout.h, upssvc.h, usb.h, usb100.h, usbdi.h, usbioctl.h,
	usbiodef.h, usbscan.h, usbuser.h, videoagp.h, winddi.h, winddk.h,
	winnt4.h, ws2san.h): Fixed packing.
	* include/ddk/atm.h (ATM_TRAFFIC_DESCRIPTOR_IE): Fixed declaration.
	* include/ddk/hidclass.h (HID_INTERFACE_HIDPARSE,
	HID_INTERFACE_NOTIFY_PNP): Likewise.
	* include/ddk/ndis.h (NDIS_DMA_BLOCK, CO_FLOW_PARAMETERS): Likewise.
	(NdisQueryPacketLength): Added macro. Thanks to Art Yerkes
	<ayerkes@@speakeasy.net>.
	* include/ddk/usb100.h (USB_CONFIGURATION_DESCRIPTOR): Fixed
	declaration.
	* include/ddk/winddi.h (PATHDATA, GLYPHPOS): Likewise.
	* include/ddk/winddk.h (PDRIVER_CONTROL, PDRIVER_LIST_CONTROL,
	PDRIVER_ADD_DEVICE, PIO_COMPLETION_ROUTINE, PDRIVER_CANCEL,
	PKDEFERRED_ROUTINE, PDRIVER_DISPATCH, PIO_DPC_ROUTINE,
	PMM_DLL_INITIALIZE, PMM_DLL_UNLOAD, PDRIVER_ENTRY,
	PDRIVER_INITIALIZE, PKSERVICE_ROUTINE, PIO_TIMER_ROUTINE,
	PDRIVER_REINITIALIZE, PDRIVER_STARTIO, PKSYNCHRONIZE_ROUTINE,
	PDRIVER_UNLOAD, DRIVER_OBJECT): Fixed callback declarations.
	(struct FILE_BASIC_INFORMATION): Renamed to _FILE_BASIC_INFORMATION.
	(SYNCH_LEVEL): Added definition.
	(KPCR, KPCR_TIB): Fixed declaration.
	(Interlocked[Push/Pop]EntrySList): Declare only if winbase.h isn't
	included and _WIN32_WINNT >= 0x0501.
	(RtlEqualLuid): Fixed macro definition.
	(KfLowerIrql, KfRaiseIrql): Declare and use instead of KeLowerIrql and
	KeRaiseIrql on i386 architectures.
@
text
@d72 3
a74 3
	u_long  len; 
	char FAR  *buf; 
	HANDLE  handle; 
d79 16
a94 16
	LPWPUCLOSEEVENT  lpWPUCloseEvent;
	LPWPUCLOSESOCKETHANDLE  lpWPUCloseSocketHandle;
	LPWPUCREATEEVENT  lpWPUCreateEvent;
	LPWPUCREATESOCKETHANDLE  lpWPUCreateSocketHandle;
	LPWPUFDISSET  lpWPUFDIsSet;
	LPWPUGETPROVIDERPATH  lpWPUGetProviderPath;
	LPWPUMODIFYIFSHANDLE  lpWPUModifyIFSHandle;
	LPWPUPOSTMESSAGE  lpWPUPostMessage;
	LPWPUQUERYBLOCKINGCALLBACK  lpWPUQueryBlockingCallback;
	LPWPUQUERYSOCKETHANDLECONTEXT  lpWPUQuerySocketHandleContext;
	LPWPUQUEUEAPC  lpWPUQueueApc;
	LPWPURESETEVENT  lpWPUResetEvent;
	LPWPUSETEVENT  lpWPUSetEvent;
	LPWPUOPENCURRENTTHREAD  lpWPUOpenCurrentThread;
	LPWPUCLOSETHREAD  lpWPUCloseThread;
	LPWPUCOMPLETEOVERLAPPEDREQUEST lpWPUCompleteOverlappedRequest;
d100 5
a104 5
  IN WORD  wVersionRequested,
  OUT LPWSPDATA  lpWSPData,
  IN LPWSAPROTOCOL_INFOW  lpProtocolInfo,
  IN LPWSPUPCALLTABLEEX  lpUpcallTable,
  OUT LPWSPPROC_TABLE  lpProcTable);
d108 5
a112 5
  IN WORD  wVersionRequested,
  OUT LPWSPDATA  lpWSPData,
  IN LPWSAPROTOCOL_INFOW  lpProtocolInfo,
  IN LPWSPUPCALLTABLEEX  lpUpcallTable,
  OUT LPWSPPROC_TABLE  lpProcTable);
d120 3
a122 3
  IN SOCKET  s,
  IN HANDLE  Handle,
  OUT LPINT  lpErrno);
d126 3
a128 3
  IN SOCKET  s,
  IN HANDLE  Handle,
  OUT LPINT  lpErrno);
d132 4
a135 4
  IN SOCKET  s,
  IN LPVOID  lpRdmaBufferDescriptor,
  IN DWORD  dwDescriptorLength,
  OUT LPINT  lpErrno);
d139 4
a142 4
  IN SOCKET  s,
  IN LPVOID  lpRdmaBufferDescriptor,
  IN DWORD  dwDescriptorLength,
  OUT LPINT  lpErrno);
d146 3
a148 3
  IN PVOID  lpvAddress,
  IN SIZE_T  Size,
  OUT LPINT  lpErrno);
d152 3
a154 3
  IN PVOID  lpvAddress,
  IN SIZE_T  Size,
  OUT LPINT  lpErrno);
d158 12
a169 12
  IN SOCKET  s,
  IN LPWSABUFEX  lpBuffers,
  IN DWORD  dwBufferCount,
  IN LPVOID  lpTargetBufferDescriptor,
  IN DWORD  dwTargetDescriptorLength,
  IN DWORD  dwTargetBufferOffset,
  OUT LPDWORD  lpdwNumberOfBytesRead,
  IN DWORD  dwFlags,
  IN LPWSAOVERLAPPED  lpOverlapped,
  IN LPWSAOVERLAPPED_COMPLETION_ROUTINE  lpCompletionRoutine,
  IN LPWSATHREADID  lpThreadId,
  OUT LPINT  lpErrno);
d173 12
a184 12
  IN SOCKET  s,
  IN LPWSABUFEX  lpBuffers,
  IN DWORD  dwBufferCount,
  IN LPVOID  lpTargetBufferDescriptor,
  IN DWORD  dwTargetDescriptorLength,
  IN DWORD  dwTargetBufferOffset,
  OUT LPDWORD  lpdwNumberOfBytesRead,
  IN DWORD  dwFlags,
  IN LPWSAOVERLAPPED  lpOverlapped,
  IN LPWSAOVERLAPPED_COMPLETION_ROUTINE  lpCompletionRoutine,
  IN LPWSATHREADID  lpThreadId,
  OUT LPINT  lpErrno);
d188 12
a199 12
  IN SOCKET  s,
  IN LPWSABUFEX  lpBuffers,
  IN DWORD  dwBufferCount,
  IN LPVOID  lpTargetBufferDescriptor,
  IN DWORD  dwTargetDescriptorLength,
  IN DWORD  dwTargetBufferOffset,
  OUT LPDWORD  lpdwNumberOfBytesWritten,
  IN DWORD  dwFlags,
  IN LPWSAOVERLAPPED  lpOverlapped,
  IN LPWSAOVERLAPPED_COMPLETION_ROUTINE  lpCompletionRoutine,
  IN LPWSATHREADID  lpThreadId,
  OUT LPINT  lpErrno);
d203 12
a214 12
  IN SOCKET  s,
  IN LPWSABUFEX  lpBuffers,
  IN DWORD  dwBufferCount,
  IN LPVOID  lpTargetBufferDescriptor,
  IN DWORD  dwTargetDescriptorLength,
  IN DWORD  dwTargetBufferOffset,
  OUT LPDWORD  lpdwNumberOfBytesWritten,
  IN DWORD  dwFlags,
  IN LPWSAOVERLAPPED  lpOverlapped,
  IN LPWSAOVERLAPPED_COMPLETION_ROUTINE  lpCompletionRoutine,
  IN LPWSATHREADID  lpThreadId,
  OUT LPINT  lpErrno);
d218 5
a222 5
  IN SOCKET  s,
  IN PVOID  lpBuffer,
  IN DWORD  dwBufferLength,
  IN DWORD  dwFlags,
  OUT LPINT  lpErrno);
d226 7
a232 7
  IN SOCKET  s,
  IN PVOID  lpBuffer,
  IN DWORD  dwBufferLength,
  IN DWORD  dwFlags,
  OUT LPVOID  lpRdmaBufferDescriptor,
  IN OUT LPDWORD  lpdwDescriptorLength,
  OUT LPINT  lpErrno);
d236 7
a242 7
  IN SOCKET  s,
  IN PVOID  lpBuffer,
  IN DWORD  dwBufferLength,
  IN DWORD  dwFlags,
  OUT LPVOID  lpRdmaBufferDescriptor,
  IN OUT LPDWORD  lpdwDescriptorLength,
  OUT LPINT  lpErrno);
@


1.4
log
@	* include/ddk/hidusage.h: Remove unneccessary #pragma pack's.
	* include/ddk/miniport.h (EMULATOR_PORT_ACCESS_TYPE): Define
	before using.
	(VIDEO_ACCESS_RANGE): Guard against prior definition.
	* include/ddk/minitape.h (INQUIRYDATA): Guard against prior
	definition.
	* include/ddk/ndis.h (DECLARE_UNKNOWN_PROTOTYPE): Correct macro.
	* include/ddk/ndisguid.h: Remove unneccessary #pragma pack's.
	* include/ddk/scsi.h (INQUIRYDATA): Guard against prior
	definition.
	* include/ddk/scsiwmi.h (GUID): Define if not already done.
	(LPCGUID): Likewise.
	* include/ddk/tdi.h: Close "Listen flags" comment.
	* include/ddk/tdistat.h: Remove unneccessary #pragma pack's.
	* include/ddk/video.h:	Add #pragma pack(push,4) to balance.
	(VIDEO_ACCESS_RANGE): Guard against prior definition.
	* include/ddk/videoagp.h:Add #pragma pack(push,4) to balance.
	* include/ddk/win2k.h: Likewise.
	* include/ddk/winddi.h: Likewise.
	* include/ddk/winddk.h: Likewise.
	* include/ddk/winnt4.h: Likewise.
	* include/ddk/ws2san.h: Likewise.
	* include/ddk/xfilter.h: Remove unbalanced #pragma pack(pop).
	* include/ddk/video.h: Don't process rest of file ifdef
	__WINDDI_H.
	* include/ddk/winddi.h: Don't process rest of file ifdef
	__VIDEO_H.
	* include/ddk/usb.h: Don't process rest of file ifdef
	__USBDI_H.
	* include/ddk/usbdi.h: Don't process rest of file ifdef
	__USB_H.
	* include/ddk/usbcamdi.h: Don't process rest of file if
	!defined(__USB_H) && !defined(__USBDI_H)
@
text
@a33 2
#pragma pack(push,4)

a243 2
#pragma pack(pop)

@


1.3
log
@	* include/ddk/(atm.h, batclass.h, cfg.h, cfgmgr32.h, d4drvif.h,
	d4iface.h, ddkmapi.h, hidclass.h, hidpi.h, hidusage.h, mcd.h,
	miniport.h, minitape.h, mountdev.h, mountmgr.h, ndis.h,
	ndisquid.h, ndistapi.h, ndisvan.h, netevent.h, netpnp.h,
	netdev.h, ntapi.h, ntdd8042.h, ntddbeep.h, ntddcdrm.h,
	ntddcdvd.h, ntddchgr.h, ntdddisk.h, ntddk.h, ntddkbd.h,
	ntddmou.h, ntddndis.h, ntddpar.h, ntddpcm.h, ntddscsi.h,
	ntddser.h, ntddstor.h, ntddtape.h, ntddtdi.h, ntddvdeo.h,
	ntddvol.h, ntifs.h, ntpoapi.h, ntstatus.h, parallel.h, pfhook.h,
	poclass.h, scsi.h, scsiscan.h, scsiwmi.h, smbus.h, srb.h,
	storport.h, tdi.h, tdiinfo.h, tdikrnl.h, tdistat.h, tvout.h,
	upssvc.h, usb.h, usb100.h, usbcamdi.h, usbdi.h, usbioctl.h,
	usbiodef.h, usbscan.h, usbuser.h, video.h, videoagp.h, win2k.h,
	winddi.h, winddk.h, winnt4.h, winxp.h, ws2san.h,
	xfilter.h): Change comment to refer w32api package, not MinGW.
@
text
@d34 2
@


1.2
log
@	* include/ddk/(atm.h, batclass.h, cfg.h, cfgmgr32.h, d4drvif.h,
	d4iface.h, ddkmapi.h, hidclass.h, hidpi.h, hidusage.h, mcd.h,
	miniport.h, minitape.h, mountdev.h, mountmgr.h, ndis.h,
	ndisquid.h, ndistapi.h, ndisvan.h, netevent.h, netpnp.h,
	netdev.h, ntapi.h, ntdd8042.h, ntddbeep.h, ntddcdrm.h,
	ntddcdvd.h, ntddchgr.h, ntdddisk.h, ntddk.h, ntddkbd.h,
	ntddmou.h, ntddndis.h, ntddpar.h, ntddpcm.h, ntddscsi.h,
	ntddser.h, ntddstor.h, ntddtape.h, ntddtdi.h, ntddvdeo.h,
	ntddvol.h, ntifs.h, ntpoapi.h, ntstatus.h, parallel.h, pfhook.h,
	poclass.h, scsi.h, scsiscan.h, scsiwmi.h, smbus.h, srb.h,
	storport.h, tdi.h, tdiinfo.h, tdikrnl.h, tdistat.h, tvout.h,
	upssvc.h, usb.h, usb100.h, usbcamdi.h, usbdi.h, usbioctl.h,
	usbiodef.h, usbscan.h, usbuser.h, video.h, videoagp.h, win2k.h,
	winddi.h, winddk.h, winnt4.h, winxp.h, ws2san.h,
	xfilter.h): Fix typo in disclaimer comment.
@
text
@d6 1
a6 1
 * This file is part of the MinGW package.
@


1.1
log
@
2002-10-06  Casper Hornstrup  <chorns@@it.dk>

	* include/ddk: New subdir.
	* lib/ddk: Ditto.
	* include/ddk/(atm.h, batclass.h, cfg.h, cfgmgr32.h, d4drvif.h,
	d4iface.h, ddkmapi.h, hidclass.h, hidpi.h, hidusage.h, mcd.h,
	miniport.h, minitape.h, mountdev.h, mountmgr.h, ndis.h,
	ndisquid.h, ndistapi.h, ndisvan.h, netevent.h, netpnp.h,
	netdev.h, ntapi.h, ntdd8042.h, ntddbeep.h, ntddcdrm.h,
	ntddcdvd.h, ntddchgr.h, ntdddisk.h, ntddk.h, ntddkbd.h,
	ntddmou.h, ntddndis.h, ntddpar.h, ntddpcm.h, ntddscsi.h,
	ntddser.h, ntddstor.h, ntddtape.h, ntddtdi.h, ntddvdeo.h,
	ntddvol.h, ntifs.h, ntpoapi.h, ntstatus.h, parallel.h, pfhook.h,
	poclass.h, scsi.h, scsiscan.h, scsiwmi.h, smbus.h, srb.h,
	storport.h, tdi.h, tdiinfo.h, tdikrnl.h, tdistat.h, tvout.h,
	upssvc.h, usb.h, usb100.h, usbcamdi.h, usbdi.h, usbioctl.h,
	usbiodef.h, usbscan.h, usbuser.h, video.h, videoagp.h, win2k.h,
	winddi.h, winddk.h, winnt4.h, winxp.h, ws2san.h,
	xfilter.h): New files.
	* lib/ddk/(Makefile.in, apcups.def, cfgmgr32.def, dxapi.def,
	hal.def, hid.def, hidparse.def, mcd.def, ndis.def, ntoskrnl.def,
	scsiport.def, tdi.def, usbcamd.def, usbcamd2.def, videoprt.def,
	win32k.def): Ditto.
@
text
@d18 1
a18 1
 * DISCLAMED. This includes but is not limited to warranties of
@

