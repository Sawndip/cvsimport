head	1.3;
access;
symbols
	cygwin-1_7_17-release:1.2
	cygwin-64bit-branch:1.2.0.8
	cygwin-1_7_16-release:1.2
	cygwin-1_7_15-release:1.2
	cygwin-1_7_14_2-release:1.2
	cygwin-1_7_14-release:1.2
	cygwin-1_7_12-release:1.2
	cygwin-1_7_11-release:1.2
	cygwin-1_7_10-release:1.2
	cygwin-1_7_9-release:1.2
	cygwin-1_7_8-release:1.2
	cygwin-1_7_7-release:1.2
	cygwin-1_7_5-release:1.2
	cygwin-1_7_4-release:1.2
	cygwin-1_7_3-release:1.2
	cygwin-1_7_2-release:1.2
	cygwin-1_7_1-release:1.2
	cv-branch-2:1.2.0.6
	cr-0x5f1:1.2.0.4
	cv-branch:1.2.0.2
	cr-0x3b58:1.1.0.2;
locks; strict;
comment	@ * @;


1.3
date	2012.11.07.16.52.41;	author cgf;	state dead;
branches;
next	1.2;

1.2
date	2006.06.12.00.55.06;	author dannysmith;	state Exp;
branches;
next	1.1;

1.1
date	2004.05.15.10.08.06;	author dannysmith;	state Exp;
branches;
next	;


desc
@@


1.3
log
@* mingw: Delete obsolete directory.
* w32api: Ditto.
@
text
@/*
 * kbdmou.h
 *
 * Structures and definitions for Keyboard/Mouse class and port drivers.
 *
 * This file is part of the w32api package.
 *
 * Contributors:
 *   Created by Filip Navara <xnavara@@volny.cz>
 *
 * THIS SOFTWARE IS NOT COPYRIGHTED
 *
 * This source code is offered for use in the public domain. You may
 * use, modify or distribute it freely.
 *
 * This code is distributed in the hope that it will be useful but
 * WITHOUT ANY WARRANTY. ALL WARRANTIES, EXPRESS OR IMPLIED ARE HEREBY
 * DISCLAIMED. This includes but is not limited to warranties of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
 *
 */

#ifndef __KBDMOU_H
#define __KBDMOU_H

#include <ddk/ntddkbd.h>
#include <ddk/ntddmou.h>

#define DD_KEYBOARD_PORT_DEVICE_NAME      "\\Device\\KeyboardPort"
#define DD_KEYBOARD_PORT_DEVICE_NAME_U    L"\\Device\\KeyboardPort"
#define DD_KEYBOARD_PORT_BASE_NAME_U      L"KeyboardPort"
#define DD_POINTER_PORT_DEVICE_NAME       "\\Device\\PointerPort"
#define DD_POINTER_PORT_DEVICE_NAME_U     L"\\Device\\PointerPort"
#define DD_POINTER_PORT_BASE_NAME_U       L"PointerPort"

#define DD_KEYBOARD_CLASS_BASE_NAME_U     L"KeyboardClass"
#define DD_POINTER_CLASS_BASE_NAME_U      L"PointerClass"

#define DD_KEYBOARD_RESOURCE_CLASS_NAME_U             L"Keyboard"
#define DD_POINTER_RESOURCE_CLASS_NAME_U              L"Pointer"
#define DD_KEYBOARD_MOUSE_COMBO_RESOURCE_CLASS_NAME_U L"Keyboard/Pointer"

#define POINTER_PORTS_MAXIMUM             8
#define KEYBOARD_PORTS_MAXIMUM            8

#define KBDMOU_COULD_NOT_SEND_COMMAND     0x0000
#define KBDMOU_COULD_NOT_SEND_PARAM       0x0001
#define KBDMOU_NO_RESPONSE                0x0002
#define KBDMOU_INCORRECT_RESPONSE         0x0004

#define I8042_ERROR_VALUE_BASE            1000
#define INPORT_ERROR_VALUE_BASE           2000
#define SERIAL_MOUSE_ERROR_VALUE_BASE     3000

#define IOCTL_INTERNAL_KEYBOARD_CONNECT \
  CTL_CODE(FILE_DEVICE_KEYBOARD, 0x0080, METHOD_NEITHER, FILE_ANY_ACCESS)

#define IOCTL_INTERNAL_KEYBOARD_DISCONNECT \
  CTL_CODE(FILE_DEVICE_KEYBOARD,0x0100, METHOD_NEITHER, FILE_ANY_ACCESS)

#define IOCTL_INTERNAL_KEYBOARD_ENABLE \
  CTL_CODE(FILE_DEVICE_KEYBOARD, 0x0200, METHOD_NEITHER, FILE_ANY_ACCESS)

#define IOCTL_INTERNAL_KEYBOARD_DISABLE \
  CTL_CODE(FILE_DEVICE_KEYBOARD, 0x0400, METHOD_NEITHER, FILE_ANY_ACCESS)

#define IOCTL_INTERNAL_MOUSE_CONNECT \
  CTL_CODE(FILE_DEVICE_MOUSE, 0x0080, METHOD_NEITHER, FILE_ANY_ACCESS)

#define IOCTL_INTERNAL_MOUSE_DISCONNECT \
  CTL_CODE(FILE_DEVICE_MOUSE, 0x0100, METHOD_NEITHER, FILE_ANY_ACCESS)

#define IOCTL_INTERNAL_MOUSE_ENABLE \
  CTL_CODE(FILE_DEVICE_MOUSE, 0x0200, METHOD_NEITHER, FILE_ANY_ACCESS)

#define IOCTL_INTERNAL_MOUSE_DISABLE \
  CTL_CODE(FILE_DEVICE_MOUSE, 0x0400, METHOD_NEITHER, FILE_ANY_ACCESS)

typedef struct _CONNECT_DATA {
	PDEVICE_OBJECT  ClassDeviceObject;
	PVOID  ClassService;
} CONNECT_DATA, *PCONNECT_DATA;

typedef VOID
(STDAPICALLTYPE *PSERVICE_CALLBACK_ROUTINE)(
  /*IN*/ PVOID NormalContext,
  /*IN*/ PVOID SystemArgument1,
  /*IN*/ PVOID SystemArgument2,
  /*IN OUT*/ PVOID SystemArgument3);

#endif /* __KBDMOU_H */
@


1.2
log
@	[mingw-Bugs-1424461]
	*include/imagehlp.h: Comment out IN, OUT and OPTIONAL,
	throughout.
	*include/rpcdce.h: Don't define IN, OUT or OPTIONAL if
	_NO_W32_PSEUDO_MODIFIERS.
	*include/rpcnsi.h: Comment out IN, OUT and OPTIONAL,
	throughout.
	*include/rpcnsip.h: Likewise.
	*include/windef.h: Don't define IN, OUT or OPTIONAL
	if _NO_W32_PSEUDO_MODIFIERS.
	*include/ddk/batclass.h: Comment out IN, OUT and OPTIONAL,
	throughout.
	*include/ddk/cfgmgr32.h: Likewise.
	*include/ddk/ddkmapi.h: Likewise.
	*include/ddk/hidclass.h: Likewise.
	*include/ddk/hidpi.h: Likewise.
	*include/ddk/kbdmou.h: Likewise.
	*include/ddk/mcd.h: Likewise.
	*include/ddk/miniport.h: Likewise.
	*include/ddk/minitape.h: Likewise.
	*include/ddk/ndis.h: Likewise.
	*include/ddk/ndistapi.h: Likewise.
	*include/ddk/ndiswan.h: Likewise.
	*include/ddk/ntapi.h: Likewise.
	*include/ddk/ntdd8042.h: Likewise.
	*include/ddk/ntddpcm.h: Likewise.
	*include/ddk/ntifs.h: Likewise.
	*include/ddk/ntpoapi.h: Likewise.
	*include/ddk/parallel.h: Likewise.
	*include/ddk/pfhook.h: Likewise.
	*include/ddk/scsiwmi.h: Likewise.
	*include/ddk/smbus.h: Likewise.
	*include/ddk/srb.h: Likewise.
	*include/ddk/storport.h: Likewise.
	*include/ddk/tdikrnl.h: Likewise.
	*include/ddk/upssvc.h: Likewise.
	*include/ddk/usbcamdi.h: Likewise.
	*include/ddk/usbscan.h: Likewise.
	*include/ddk/video.h: Likewise.
	*include/ddk/videoagp.h: Likewise.
	*include/ddk/win2k.h: Likewise.
	*include/ddk/winddi.h: Likewise.
	*include/ddk/winddk.h: Don't define IN, OUT or OPTIONAL
	if _NO_W32_PSEUDO_MODIFIERS.
	Comment out IN, OUT and OPTIONAL, throughout.
	*include/ddk/winnt4.h: Comment out IN, OUT and OPTIONAL,
	throughout.
	*include/ddk/ws2san.h: Likewise.
@
text
@@


1.1
log
@2004-05-15  Filip Navara  <xnavara@@volny.cz>

	* include/ddk/kbdmou.h: New file.
	* lib/ddk/videoprt.def (VideoPortMapBankedMemory,
	VideoPortMapDmaMemory, VideoPortMapMemory): Correct suffix.
	* lib/ddk/ntoskrnl.def (_snprintf, _snwprintf, _vsnprintf,
	_vsnwprintf, sprintf, swprintf): Export.
@
text
@d86 4
a89 4
	IN PVOID NormalContext,
	IN PVOID SystemArgument1,
	IN PVOID SystemArgument2,
	IN OUT PVOID SystemArgument3);
@

