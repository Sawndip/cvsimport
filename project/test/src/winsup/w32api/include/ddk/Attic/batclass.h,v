head	1.7;
access;
symbols
	cygwin-1_7_17-release:1.6
	cygwin-64bit-branch:1.6.0.8
	cygwin-1_7_16-release:1.6
	cygwin-1_7_15-release:1.6
	cygwin-1_7_14_2-release:1.6
	cygwin-1_7_14-release:1.6
	cygwin-1_7_12-release:1.6
	cygwin-1_7_11-release:1.6
	cygwin-1_7_10-release:1.6
	cygwin-1_7_9-release:1.6
	cygwin-1_7_8-release:1.6
	cygwin-1_7_7-release:1.6
	cygwin-1_7_5-release:1.6
	cygwin-1_7_4-release:1.6
	cygwin-1_7_3-release:1.6
	cygwin-1_7_2-release:1.6
	cygwin-1_7_1-release:1.6
	cv-branch-2:1.6.0.6
	cr-0x5f1:1.6.0.4
	cv-branch:1.6.0.2
	cr-0x3b58:1.5.0.2
	cr-0x9e:1.4.0.10
	cr-0x9d:1.4.0.8
	corinna-01:1.4
	cr-0x9c:1.4.0.6
	cr-0x9b:1.4.0.4
	cr-0x99:1.4
	Z-emcb-cygwin_daemon:1.4.0.2
	w32api-2_2:1.3
	mingw-runtime-2_4:1.3;
locks; strict;
comment	@ * @;


1.7
date	2012.11.07.16.52.41;	author cgf;	state dead;
branches;
next	1.6;

1.6
date	2006.06.12.00.55.06;	author dannysmith;	state Exp;
branches;
next	1.5;

1.5
date	2004.09.28.08.46.50;	author dannysmith;	state Exp;
branches;
next	1.4;

1.4
date	2003.03.26.22.28.01;	author dannysmith;	state Exp;
branches;
next	1.3;

1.3
date	2002.11.15.01.08.16;	author dannysmith;	state Exp;
branches;
next	1.2;

1.2
date	2002.11.12.21.34.06;	author dannysmith;	state Exp;
branches;
next	1.1;

1.1
date	2002.10.06.22.18.25;	author earnie;	state Exp;
branches;
next	;


desc
@@


1.7
log
@* mingw: Delete obsolete directory.
* w32api: Ditto.
@
text
@/*
 * batclass.h
 *
 * Battery class driver interface
 *
 * This file is part of the w32api package.
 *
 * Contributors:
 *   Created by Casper S. Hornstrup <chorns@@users.sourceforge.net>
 *
 * THIS SOFTWARE IS NOT COPYRIGHTED
 *
 * This source code is offered for use in the public domain. You may
 * use, modify or distribute it freely.
 *
 * This code is distributed in the hope that it will be useful but
 * WITHOUT ANY WARRANTY. ALL WARRANTIES, EXPRESS OR IMPLIED ARE HEREBY
 * DISCLAIMED. This includes but is not limited to warranties of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
 *
 */

#ifndef __BATCLASS_H
#define __BATCLASS_H

#if __GNUC__ >=3
#pragma GCC system_header
#endif

#ifdef __cplusplus
extern "C" {
#endif

#include "ntddk.h"

#if defined(_BATTERYCLASS_)
  #define BCLASSAPI DECLSPEC_EXPORT
#else
  #define BCLASSAPI DECLSPEC_IMPORT
#endif


/* Battery device GUIDs */

DEFINE_GUID(GUID_DEVICE_BATTERY,
  0x72631e54L, 0x78A4, 0x11d0, 0xbc, 0xf7, 0x00, 0xaa, 0x00, 0xb7, 0xb3, 0x2a);

DEFINE_GUID(BATTERY_STATUS_WMI_GUID,
  0xfc4670d1, 0xebbf, 0x416e, 0x87, 0xce, 0x37, 0x4a, 0x4e, 0xbc, 0x11, 0x1a);

DEFINE_GUID(BATTERY_RUNTIME_WMI_GUID,
  0x535a3767, 0x1ac2, 0x49bc, 0xa0, 0x77, 0x3f, 0x7a, 0x02, 0xe4, 0x0a, 0xec);

DEFINE_GUID(BATTERY_TEMPERATURE_WMI_GUID,
  0x1a52a14d, 0xadce, 0x4a44, 0x9a, 0x3e, 0xc8, 0xd8, 0xf1, 0x5f, 0xf2, 0xc2);

DEFINE_GUID(BATTERY_FULL_CHARGED_CAPACITY_WMI_GUID,
  0x40b40565, 0x96f7, 0x4435, 0x86, 0x94, 0x97, 0xe0, 0xe4, 0x39, 0x59, 0x05);

DEFINE_GUID(BATTERY_CYCLE_COUNT_WMI_GUID,
  0xef98db24, 0x0014, 0x4c25, 0xa5, 0x0b, 0xc7, 0x24, 0xae, 0x5c, 0xd3, 0x71);

DEFINE_GUID(BATTERY_STATIC_DATA_WMI_GUID,
  0x05e1e463, 0xe4e2, 0x4ea9, 0x80, 0xcb, 0x9b, 0xd4, 0xb3, 0xca, 0x06, 0x55);

DEFINE_GUID(BATTERY_STATUS_CHANGE_WMI_GUID,
  0xcddfa0c3, 0x7c5b, 0x4e43, 0xa0, 0x34, 0x05, 0x9f, 0xa5, 0xb8, 0x43, 0x64);

DEFINE_GUID(BATTERY_TAG_CHANGE_WMI_GUID,
  0x5e1f6e19, 0x8786, 0x4d23, 0x94, 0xfc, 0x9e, 0x74, 0x6b, 0xd5, 0xd8, 0x88);


/* BATTERY_INFORMATION.Capabilities constants */
#define BATTERY_SET_CHARGE_SUPPORTED      0x00000001
#define BATTERY_SET_DISCHARGE_SUPPORTED   0x00000002
#define BATTERY_SET_RESUME_SUPPORTED      0x00000004
#define BATTERY_IS_SHORT_TERM             0x20000000
#define BATTERY_CAPACITY_RELATIVE         0x40000000
#define BATTERY_SYSTEM_BATTERY            0x80000000

typedef struct _BATTERY_INFORMATION {
  ULONG  Capabilities;
  UCHAR  Technology;
  UCHAR  Reserved[3];
  UCHAR  Chemistry[4];
  ULONG  DesignedCapacity;
  ULONG  FullChargedCapacity;
  ULONG  DefaultAlert1;
  ULONG  DefaultAlert2;
  ULONG  CriticalBias;
  ULONG  CycleCount;
} BATTERY_INFORMATION, *PBATTERY_INFORMATION;

typedef struct _BATTERY_MANUFACTURE_DATE {
  UCHAR  Day;
  UCHAR  Month;
  USHORT  Year;
} BATTERY_MANUFACTURE_DATE, *PBATTERY_MANUFACTURE_DATE;

typedef struct _BATTERY_NOTIFY {
	ULONG  PowerState;
	ULONG  LowCapacity;
	ULONG  HighCapacity;
} BATTERY_NOTIFY, *PBATTERY_NOTIFY;

/* BATTERY_STATUS.PowerState flags */
#define BATTERY_POWER_ON_LINE             0x00000001
#define BATTERY_DISCHARGING               0x00000002
#define BATTERY_CHARGING                  0x00000004
#define BATTERY_CRITICAL                  0x00000008

/* BATTERY_STATUS.Voltage constant */
#define BATTERY_UNKNOWN_VOLTAGE           0xFFFFFFFF

/* BATTERY_STATUS.Rate constant */
#define BATTERY_UNKNOWN_RATE              0x80000000

typedef struct _BATTERY_STATUS {
  ULONG  PowerState;
  ULONG  Capacity;
  ULONG  Voltage;
  LONG  Rate;
} BATTERY_STATUS, *PBATTERY_STATUS;

/* BATTERY_INFORMATION.Capacity constants */
#define BATTERY_UNKNOWN_CAPACITY          0xFFFFFFFF

typedef enum _BATTERY_QUERY_INFORMATION_LEVEL {
  BatteryInformation = 0,
  BatteryGranularityInformation,
  BatteryTemperature,
  BatteryEstimatedTime,
  BatteryDeviceName,
  BatteryManufactureDate,
  BatteryManufactureName,
  BatteryUniqueID,
  BatterySerialNumber
} BATTERY_QUERY_INFORMATION_LEVEL;

/* BatteryEstimatedTime constant */
#define BATTERY_UNKNOWN_TIME              0x80000000

/* NTSTATUS possibly returned by BCLASS_QUERY_STATUS */
#define BATTERY_TAG_INVALID 0

typedef struct _BATTERY_QUERY_INFORMATION {
  ULONG  BatteryTag;
  BATTERY_QUERY_INFORMATION_LEVEL  InformationLevel;
  LONG  AtRate;
} BATTERY_QUERY_INFORMATION, *PBATTERY_QUERY_INFORMATION;

typedef enum _BATTERY_SET_INFORMATION_LEVEL {
  BatteryCriticalBias = 0,
  BatteryCharge,
  BatteryDischarge
} BATTERY_SET_INFORMATION_LEVEL;

#define MAX_BATTERY_STRING_SIZE           128

typedef struct _BATTERY_SET_INFORMATION {
	ULONG  BatteryTag;
	BATTERY_SET_INFORMATION_LEVEL  InformationLevel;
	UCHAR  Buffer[1];
} BATTERY_SET_INFORMATION, *PBATTERY_SET_INFORMATION;

typedef struct _BATTERY_WAIT_STATUS {
	ULONG  BatteryTag;
	ULONG  Timeout;
	ULONG  PowerState;
	ULONG  LowCapacity;
	ULONG  HighCapacity;
} BATTERY_WAIT_STATUS, *PBATTERY_WAIT_STATUS;


#define IOCTL_BATTERY_QUERY_TAG \
  CTL_CODE(FILE_DEVICE_BATTERY, 0x10, METHOD_BUFFERED, FILE_READ_ACCESS)

#define IOCTL_BATTERY_QUERY_INFORMATION \
  CTL_CODE(FILE_DEVICE_BATTERY, 0x11, METHOD_BUFFERED, FILE_READ_ACCESS)

#define IOCTL_BATTERY_SET_INFORMATION \
  CTL_CODE(FILE_DEVICE_BATTERY, 0x12, METHOD_BUFFERED, FILE_WRITE_ACCESS)

#define IOCTL_BATTERY_QUERY_STATUS \
  CTL_CODE(FILE_DEVICE_BATTERY, 0x13, METHOD_BUFFERED, FILE_READ_ACCESS)


typedef NTSTATUS DDKAPI
(*BCLASS_DISABLE_STATUS_NOTIFY)(
  /*IN*/ PVOID  Context);

typedef NTSTATUS DDKAPI
(*BCLASS_QUERY_INFORMATION)(
  /*IN*/ PVOID  Context,
  /*IN*/ ULONG  BatteryTag,
  /*IN*/ BATTERY_QUERY_INFORMATION_LEVEL  Level,
  /*IN*/ LONG  AtRate  /*OPTIONAL*/,
  /*OUT*/ PVOID  Buffer,
  /*IN*/ ULONG  BufferLength,
  /*OUT*/ PULONG  ReturnedLength);

typedef NTSTATUS DDKAPI
(*BCLASS_QUERY_STATUS)(
  /*IN*/ PVOID  Context,
  /*IN*/ ULONG  BatteryTag,
  /*OUT*/ PBATTERY_STATUS  BatteryStatus);

typedef NTSTATUS DDKAPI
(*BCLASS_QUERY_TAG)(
  /*IN*/ PVOID  Context,
  /*OUT*/ PULONG  BatteryTag);

typedef NTSTATUS DDKAPI
(*BCLASS_SET_INFORMATION)(
  /*IN*/ PVOID  Context,
  /*IN*/ ULONG  BatteryTag,
  /*IN*/ BATTERY_SET_INFORMATION_LEVEL  Level,
  /*IN*/ PVOID  Buffer  /*OPTIONAL*/);

typedef NTSTATUS DDKAPI
(*BCLASS_SET_STATUS_NOTIFY)(
  /*IN*/ PVOID  Context,
  /*IN*/ ULONG  BatteryTag,
  /*IN*/ PBATTERY_NOTIFY  BatteryNotify);


typedef struct _BATTERY_MINIPORT_INFO {
  USHORT  MajorVersion;
  USHORT  MinorVersion;
  PVOID  Context;
  BCLASS_QUERY_TAG  QueryTag;
  BCLASS_QUERY_INFORMATION  QueryInformation;
  BCLASS_SET_INFORMATION  SetInformation;
  BCLASS_QUERY_STATUS  QueryStatus;
  BCLASS_SET_STATUS_NOTIFY  SetStatusNotify;
  BCLASS_DISABLE_STATUS_NOTIFY  DisableStatusNotify;
  PDEVICE_OBJECT  Pdo;
  PUNICODE_STRING  DeviceName;
} BATTERY_MINIPORT_INFO, *PBATTERY_MINIPORT_INFO;

/* BATTERY_MINIPORT_INFO.XxxVersion */
#define BATTERY_CLASS_MAJOR_VERSION       0x0001
#define BATTERY_CLASS_MINOR_VERSION       0x0000


BCLASSAPI
NTSTATUS
DDKAPI
BatteryClassInitializeDevice(
  /*IN*/ PBATTERY_MINIPORT_INFO  MiniportInfo,
  /*IN*/ PVOID  *ClassData);

BCLASSAPI
NTSTATUS
DDKAPI
BatteryClassIoctl(
  /*IN*/ PVOID  ClassData,
  /*IN*/ PIRP  Irp);

BCLASSAPI
NTSTATUS
DDKAPI
BatteryClassQueryWmiDataBlock(
  /*IN*/ PVOID  ClassData,
  /*IN*/ PDEVICE_OBJECT  DeviceObject,
  /*IN*/ PIRP  Irp,
  /*IN*/ ULONG  GuidIndex,
  /*IN OUT*/ PULONG  InstanceLengthArray,
  /*IN*/ ULONG  OutBufferSize,
  /*OUT*/ PUCHAR  Buffer);

BCLASSAPI
NTSTATUS
DDKAPI
BatteryClassStatusNotify(
  /*IN*/ PVOID  ClassData);

BCLASSAPI
NTSTATUS
DDKAPI
BatteryClassSystemControl(
  /*IN*/ PVOID  ClassData,
  /*IN*/ PWMILIB_CONTEXT  WmiLibContext,
  /*IN*/ PDEVICE_OBJECT  DeviceObject,
  /*IN*/ PIRP  Irp,
  /*OUT*/ PSYSCTL_IRP_DISPOSITION  Disposition);

BCLASSAPI
NTSTATUS
DDKAPI
BatteryClassUnload(
  /*IN*/ PVOID  ClassData);

#ifdef __cplusplus
}
#endif

#endif /* __BATCLASS_H */
@


1.6
log
@	[mingw-Bugs-1424461]
	*include/imagehlp.h: Comment out IN, OUT and OPTIONAL,
	throughout.
	*include/rpcdce.h: Don't define IN, OUT or OPTIONAL if
	_NO_W32_PSEUDO_MODIFIERS.
	*include/rpcnsi.h: Comment out IN, OUT and OPTIONAL,
	throughout.
	*include/rpcnsip.h: Likewise.
	*include/windef.h: Don't define IN, OUT or OPTIONAL
	if _NO_W32_PSEUDO_MODIFIERS.
	*include/ddk/batclass.h: Comment out IN, OUT and OPTIONAL,
	throughout.
	*include/ddk/cfgmgr32.h: Likewise.
	*include/ddk/ddkmapi.h: Likewise.
	*include/ddk/hidclass.h: Likewise.
	*include/ddk/hidpi.h: Likewise.
	*include/ddk/kbdmou.h: Likewise.
	*include/ddk/mcd.h: Likewise.
	*include/ddk/miniport.h: Likewise.
	*include/ddk/minitape.h: Likewise.
	*include/ddk/ndis.h: Likewise.
	*include/ddk/ndistapi.h: Likewise.
	*include/ddk/ndiswan.h: Likewise.
	*include/ddk/ntapi.h: Likewise.
	*include/ddk/ntdd8042.h: Likewise.
	*include/ddk/ntddpcm.h: Likewise.
	*include/ddk/ntifs.h: Likewise.
	*include/ddk/ntpoapi.h: Likewise.
	*include/ddk/parallel.h: Likewise.
	*include/ddk/pfhook.h: Likewise.
	*include/ddk/scsiwmi.h: Likewise.
	*include/ddk/smbus.h: Likewise.
	*include/ddk/srb.h: Likewise.
	*include/ddk/storport.h: Likewise.
	*include/ddk/tdikrnl.h: Likewise.
	*include/ddk/upssvc.h: Likewise.
	*include/ddk/usbcamdi.h: Likewise.
	*include/ddk/usbscan.h: Likewise.
	*include/ddk/video.h: Likewise.
	*include/ddk/videoagp.h: Likewise.
	*include/ddk/win2k.h: Likewise.
	*include/ddk/winddi.h: Likewise.
	*include/ddk/winddk.h: Don't define IN, OUT or OPTIONAL
	if _NO_W32_PSEUDO_MODIFIERS.
	Comment out IN, OUT and OPTIONAL, throughout.
	*include/ddk/winnt4.h: Comment out IN, OUT and OPTIONAL,
	throughout.
	*include/ddk/ws2san.h: Likewise.
@
text
@@


1.5
log
@2004-09-29  Filip Navara  <xnavara@@volny.cz>

	* include/ddk/(atm.h, batclass.h, cfg.h, cfgmgr32.h, d4drvif.h,
	d4iface.h, ddkmapi.h, hidclass.h, hidpi.h, mcd.h, miniport.h,
	mountdev.h, mountmgr.h, ndis.h, ndistapi.h, ndiswan.h, netpnp.h,
	newdev.h, ntapi.h, ntdd8042.h, ntddbeep.h, ntddcdrm.h, ntddcdvd.h,
	ntddchgr.h, ntdddisk.h, ntddkbd.h, ntddmou.h, ntddpar.h, ntddpcm.h,
	ntddscsi.h, ntddser.h, ntddstor.h, ntddtape.h, ntddtdi.h,
	ntddvdeo.h, ntddvol.h, ntpoapi.h, parallel.h, pfhook.h, poclass.h,
	scsi.h, scsiscan.h, smbus.h, srb.h, storport.h, tdiinfo.h,
	tdikrnl.h, tvout.h, upssvc.h, usb.h, usb100.h, usbdi.h, usbioctl.h,
	usbiodef.h, usbscan.h, usbuser.h, videoagp.h, winddi.h, winddk.h,
	winnt4.h, ws2san.h): Fixed packing.
	* include/ddk/atm.h (ATM_TRAFFIC_DESCRIPTOR_IE): Fixed declaration.
	* include/ddk/hidclass.h (HID_INTERFACE_HIDPARSE,
	HID_INTERFACE_NOTIFY_PNP): Likewise.
	* include/ddk/ndis.h (NDIS_DMA_BLOCK, CO_FLOW_PARAMETERS): Likewise.
	(NdisQueryPacketLength): Added macro. Thanks to Art Yerkes
	<ayerkes@@speakeasy.net>.
	* include/ddk/usb100.h (USB_CONFIGURATION_DESCRIPTOR): Fixed
	declaration.
	* include/ddk/winddi.h (PATHDATA, GLYPHPOS): Likewise.
	* include/ddk/winddk.h (PDRIVER_CONTROL, PDRIVER_LIST_CONTROL,
	PDRIVER_ADD_DEVICE, PIO_COMPLETION_ROUTINE, PDRIVER_CANCEL,
	PKDEFERRED_ROUTINE, PDRIVER_DISPATCH, PIO_DPC_ROUTINE,
	PMM_DLL_INITIALIZE, PMM_DLL_UNLOAD, PDRIVER_ENTRY,
	PDRIVER_INITIALIZE, PKSERVICE_ROUTINE, PIO_TIMER_ROUTINE,
	PDRIVER_REINITIALIZE, PDRIVER_STARTIO, PKSYNCHRONIZE_ROUTINE,
	PDRIVER_UNLOAD, DRIVER_OBJECT): Fixed callback declarations.
	(struct FILE_BASIC_INFORMATION): Renamed to _FILE_BASIC_INFORMATION.
	(SYNCH_LEVEL): Added definition.
	(KPCR, KPCR_TIB): Fixed declaration.
	(Interlocked[Push/Pop]EntrySList): Declare only if winbase.h isn't
	included and _WIN32_WINNT >= 0x0501.
	(RtlEqualLuid): Fixed macro definition.
	(KfLowerIrql, KfRaiseIrql): Declare and use instead of KeLowerIrql and
	KeRaiseIrql on i386 architectures.
@
text
@d190 1
a190 1
  IN PVOID  Context);
d194 7
a200 7
  IN PVOID  Context,
  IN ULONG  BatteryTag,
  IN BATTERY_QUERY_INFORMATION_LEVEL  Level,
  IN LONG  AtRate  OPTIONAL,
  OUT PVOID  Buffer,
  IN ULONG  BufferLength,
  OUT PULONG  ReturnedLength);
d204 3
a206 3
  IN PVOID  Context,
  IN ULONG  BatteryTag,
  OUT PBATTERY_STATUS  BatteryStatus);
d210 2
a211 2
  IN PVOID  Context,
  OUT PULONG  BatteryTag);
d215 4
a218 4
  IN PVOID  Context,
  IN ULONG  BatteryTag,
  IN BATTERY_SET_INFORMATION_LEVEL  Level,
  IN PVOID  Buffer  OPTIONAL);
d222 3
a224 3
  IN PVOID  Context,
  IN ULONG  BatteryTag,
  IN PBATTERY_NOTIFY  BatteryNotify);
d250 2
a251 2
  IN PBATTERY_MINIPORT_INFO  MiniportInfo,
  IN PVOID  *ClassData);
d257 2
a258 2
  IN PVOID  ClassData,
  IN PIRP  Irp);
d264 7
a270 7
  IN PVOID  ClassData,
  IN PDEVICE_OBJECT  DeviceObject,
  IN PIRP  Irp,
  IN ULONG  GuidIndex,
  IN OUT PULONG  InstanceLengthArray,
  IN ULONG  OutBufferSize,
  OUT PUCHAR  Buffer);
d276 1
a276 1
  IN PVOID  ClassData);
d282 5
a286 5
  IN  PVOID  ClassData,
  IN  PWMILIB_CONTEXT  WmiLibContext,
  IN  PDEVICE_OBJECT  DeviceObject,
  IN  PIRP  Irp,
  OUT PSYSCTL_IRP_DISPOSITION  Disposition);
d292 1
a292 1
  IN PVOID  ClassData);
@


1.4
log
@Move some ddk defines to winnt.h as per MSDN documentation

	* include/ddk/batclass.h (BATTERY_REPORTING_SCALE)
	Move structure from here...
	* include/winnt.h (BATTERY_REPORTING_SCALE): To here.

	* include/ddk/ntapi.h (JOBOBJECT_*):
	Remove structures and enums definitions.
  	(JOB_OBJECT*): Move defines from here...
	* include/winnt.h (JOB_OBJECT* ): To here.

	* include/ddk/ntpoapi.h (LATENCY_TIME, POWER_ACTION_POLICY,
	SYSTEM_POWER_LEVEL, SYSTEM_POWER_POLICY,
	PROCESSOR_POWER_POLICY_INFO, PROCESSOR_POWER_POLICY,
	ADMINISTRATOR_POWER_POLICY, SYSTEM_POWER_INFORMATION,
	PROCESSOR_POWER_INFORMATION, SYSTEM_BATTERY_STATE,
	SYSTEM_POWER_CAPABILITIES): Move enums, structures
	and associated defines from here ...
	* include/winnt.h: (LATENCY_TIME, POWER_ACTION_POLICY,
	SYSTEM_POWER_LEVEL, SYSTEM_POWER_POLICY,
	PROCESSOR_POWER_POLICY_INFO, PROCESSOR_POWER_POLICY,
	ADMINISTRATOR_POWER_POLICY, SYSTEM_POWER_INFORMATION,
	PROCESSOR_POWER_INFORMATION, SYSTEM_BATTERY_STATE,
	SYSTEM_POWER_CAPABILITIES):To here.

	* include/ddk/winddk.h (DEVICE_POWER_STATE,
	SYSTEM_POWER_STATE, POWER_ACTION): Move enums
	from here...
	* include/winnt.h (DEVICE_POWER_STATE,
	SYSTEM_POWER_STATE, POWER_ACTION): To here.
@
text
@a33 2
#pragma pack(push,4)

a293 2
#pragma pack(pop)

@


1.3
log
@	* include/ddk/(atm.h, batclass.h, cfg.h, cfgmgr32.h, d4drvif.h,
	d4iface.h, ddkmapi.h, hidclass.h, hidpi.h, hidusage.h, mcd.h,
	miniport.h, minitape.h, mountdev.h, mountmgr.h, ndis.h,
	ndisquid.h, ndistapi.h, ndisvan.h, netevent.h, netpnp.h,
	netdev.h, ntapi.h, ntdd8042.h, ntddbeep.h, ntddcdrm.h,
	ntddcdvd.h, ntddchgr.h, ntdddisk.h, ntddk.h, ntddkbd.h,
	ntddmou.h, ntddndis.h, ntddpar.h, ntddpcm.h, ntddscsi.h,
	ntddser.h, ntddstor.h, ntddtape.h, ntddtdi.h, ntddvdeo.h,
	ntddvol.h, ntifs.h, ntpoapi.h, ntstatus.h, parallel.h, pfhook.h,
	poclass.h, scsi.h, scsiscan.h, scsiwmi.h, smbus.h, srb.h,
	storport.h, tdi.h, tdiinfo.h, tdikrnl.h, tdistat.h, tvout.h,
	upssvc.h, usb.h, usb100.h, usbcamdi.h, usbdi.h, usbioctl.h,
	usbiodef.h, usbscan.h, usbuser.h, video.h, videoagp.h, win2k.h,
	winddi.h, winddk.h, winnt4.h, winxp.h, ws2san.h,
	xfilter.h): Change comment to refer w32api package, not MinGW.
@
text
@a107 5
typedef struct _BATTERY_REPORTING_SCALE {
  ULONG  Granularity;
  ULONG  Capacity;
} BATTERY_REPORTING_SCALE, *PBATTERY_REPORTING_SCALE;

a125 1

@


1.2
log
@	* include/ddk/(atm.h, batclass.h, cfg.h, cfgmgr32.h, d4drvif.h,
	d4iface.h, ddkmapi.h, hidclass.h, hidpi.h, hidusage.h, mcd.h,
	miniport.h, minitape.h, mountdev.h, mountmgr.h, ndis.h,
	ndisquid.h, ndistapi.h, ndisvan.h, netevent.h, netpnp.h,
	netdev.h, ntapi.h, ntdd8042.h, ntddbeep.h, ntddcdrm.h,
	ntddcdvd.h, ntddchgr.h, ntdddisk.h, ntddk.h, ntddkbd.h,
	ntddmou.h, ntddndis.h, ntddpar.h, ntddpcm.h, ntddscsi.h,
	ntddser.h, ntddstor.h, ntddtape.h, ntddtdi.h, ntddvdeo.h,
	ntddvol.h, ntifs.h, ntpoapi.h, ntstatus.h, parallel.h, pfhook.h,
	poclass.h, scsi.h, scsiscan.h, scsiwmi.h, smbus.h, srb.h,
	storport.h, tdi.h, tdiinfo.h, tdikrnl.h, tdistat.h, tvout.h,
	upssvc.h, usb.h, usb100.h, usbcamdi.h, usbdi.h, usbioctl.h,
	usbiodef.h, usbscan.h, usbuser.h, video.h, videoagp.h, win2k.h,
	winddi.h, winddk.h, winnt4.h, winxp.h, ws2san.h,
	xfilter.h): Fix typo in disclaimer comment.
@
text
@d6 1
a6 1
 * This file is part of the MinGW package.
@


1.1
log
@
2002-10-06  Casper Hornstrup  <chorns@@it.dk>

	* include/ddk: New subdir.
	* lib/ddk: Ditto.
	* include/ddk/(atm.h, batclass.h, cfg.h, cfgmgr32.h, d4drvif.h,
	d4iface.h, ddkmapi.h, hidclass.h, hidpi.h, hidusage.h, mcd.h,
	miniport.h, minitape.h, mountdev.h, mountmgr.h, ndis.h,
	ndisquid.h, ndistapi.h, ndisvan.h, netevent.h, netpnp.h,
	netdev.h, ntapi.h, ntdd8042.h, ntddbeep.h, ntddcdrm.h,
	ntddcdvd.h, ntddchgr.h, ntdddisk.h, ntddk.h, ntddkbd.h,
	ntddmou.h, ntddndis.h, ntddpar.h, ntddpcm.h, ntddscsi.h,
	ntddser.h, ntddstor.h, ntddtape.h, ntddtdi.h, ntddvdeo.h,
	ntddvol.h, ntifs.h, ntpoapi.h, ntstatus.h, parallel.h, pfhook.h,
	poclass.h, scsi.h, scsiscan.h, scsiwmi.h, smbus.h, srb.h,
	storport.h, tdi.h, tdiinfo.h, tdikrnl.h, tdistat.h, tvout.h,
	upssvc.h, usb.h, usb100.h, usbcamdi.h, usbdi.h, usbioctl.h,
	usbiodef.h, usbscan.h, usbuser.h, video.h, videoagp.h, win2k.h,
	winddi.h, winddk.h, winnt4.h, winxp.h, ws2san.h,
	xfilter.h): New files.
	* lib/ddk/(Makefile.in, apcups.def, cfgmgr32.def, dxapi.def,
	hal.def, hid.def, hidparse.def, mcd.def, ndis.def, ntoskrnl.def,
	scsiport.def, tdi.def, usbcamd.def, usbcamd2.def, videoprt.def,
	win32k.def): Ditto.
@
text
@d18 1
a18 1
 * DISCLAMED. This includes but is not limited to warranties of
@

