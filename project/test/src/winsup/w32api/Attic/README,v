head	1.3;
access;
symbols
	w32api-1_5:1.2
	cygwin-1-3-10-1:1.2.0.36
	cygwin-1-3-9:1.2.0.34
	cygwin-1-3-8-1:1.2.0.32
	cygwin-1-3-7-1:1.2.0.30
	cygnus_cvs_20020108_pre:1.2
	cygwin-1-3-6-6:1.2.0.28
	cygwin-1-3-6-5:1.2.0.26
	cygwin-1-3-6-4:1.2.0.24
	cygwin-1-3-6-3:1.2.0.22
	cygwin-1-3-6-2:1.2.0.20
	cygwin-1-3-6-1:1.2.0.18
	cygwin-1-3-5-3:1.2.0.16
	cygwin-1-3-5-2:1.2.0.14
	cygwin-1-3-5:1.2.0.12
	cygwin-1-3-4:1.2.0.10
	Z-cygwin_daemon_merge-new_HEAD:1.2
	Z-cygwin_daemon_merge_HEAD:1.2
	cygwin_daemon:1.2.0.8
	cygwin-1-3-3:1.2.0.6
	cygwin-1-3-2:1.2.0.2
	cygwin-1-3-1:1.2.0.4
	cygwin-1-1-8:1.2
	cygwin-1-1-7:1.2
	cygwin-1-1-6:1.2
	cygwin-1-1-5:1.2
	cygwin-1-1-4:1.1.1.1.0.2
	cygwin-1_1_1:1.1.1.1
	winsup-2000-02-17:1.1.1.1
	SNAPSHOT:1.1.1;
locks; strict;
comment	@# @;
expand	@o@;


1.3
date	2002.06.14.13.46.09;	author earnie;	state dead;
branches;
next	1.2;

1.2
date	2000.11.01.01.22.08;	author earnie;	state Exp;
branches;
next	1.1;

1.1
date	2000.02.17.19.38.31;	author cgf;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2000.02.17.19.38.31;	author cgf;	state Exp;
branches;
next	;


desc
@@


1.3
log
@
	* include/w32api.h: Change to version 2.0 to reflect the change
	in the license.
	* README: Renamed.
	* README.w32api: Renamed from README.  Modified license to remove
	the restriction of notifying the author based on the fact that the
	author is unreachable at the notified address.
	* Makefile.in (VERSION): Change to 2.0.
@
text
@        Free headers and libraries for the Win32 API

        Written by Anders Norlander <anorland@@hem2.passagen.se>
        URL: http://www.acc.umu.se/~anorland/gnu-win32/

	Maintained by MinGW Developers
        Send bug reports and questions to MinGW-users@@lists.sourceforge.net
	URL: http://www.mingw.org

* License

  You are free to use, modify and copy this package. No restrictions
  are imposed on programs or object files compiled with this library.
  
  You may not restrict the the usage of this library.

  You may distribute this library as part of another package or as a
  modified package if and only if you do *not* restrict the usage of
  the portions consisting of this (optionally modified) library.

  If distributed as part of another package, please notify the author
  of what you are going to do.  If distributed as a modified package,
  this file *must* be included.

  This library is distributed in the hope that it will be useful, but
  WITHOUT ANY WARRANTY; without even the implied warranty of
  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.

* What is it?

  This is a free set of headers and import libraries for the Win32
  API.  The library differs from the GNU Windows32 library in that I
  have tried to use a file structure that mirrors Microsoft's.  I
  don't like having *all* definitions in one single header as in the
  GNU Windows32 library, I want a clean separation between different
  parts of the API.

  Daniel Guerrero Miralles contributed the DirectX 6.1 import
  libraries and DirectX GUID definitions.

  See the files NOTES and TODO for what needs to be done.

* Size does matter

  Since the WIN32 API is severely bloated (as most MS products seem to
  be) the headers are designed to be as compact as possible, while
  still being readable, in order to minimize parsing time.

  The convention is to omit parameter names for function prototypes,
  no excessive white space. Struct/union members are indented with tab
  characters to make them readable. Comment only when necessary.

  If you are contributing a patch please follow the above mentioned
  convention. Make sure your editor does not convert tabs to spaces.

* What do I need to use it?

  The library is intended for use with egcs 1.1 or later but it is
  possible to use with some other tools as well (although it is not
  very useful). LCC-Win32, MSVC and Borland C++ 5.01 or higher may
  work as well. The import libraries are for GNU tools only.

  The library requires egcs 1.1 or later, since the `#pragma pack'
  feature is used. Mumit Khan provides egcs patches and binaries for
  win32 at `http://www.xraylith.wisc.edu/~khan/software/gnu-win32/'.

  If you are going to use C++ COM objects, you will need a version of
  egcs that recognizes the `comobject' attribute and then define
  HAVE_COMOBJECT when compiling your program. Antonio Mendes de
  Oliveira Neto has a prebuilt version at
  `http://li.facens.br/EGCS-WIN32/english/index.html'. Note that this
  is very experimental. If you want to use COM objects in C++ but with
  C interfaces you must define CINTERFACE.

  Objective-C programs cannot use COM functionality because of
  conflicts between the interface define and the Objective-C
  @@interface directive.  There is also a conflict between the windows
  Obj-C BOOL types. To avoid this conflict you should use WINBOOL in
  all places where you would use BOOL in a C/C++ windows program. If
  you include any windows headers *after* `windows.h' you must use the
  method outlined below:

  /* non-windows includes */
  #include <objc/objc.h>
  ...
  /* windows specific headers */
  #include <windows.h>
  #define BOOL WINBOOL
  #include <commctrl.h>
  ...
  #undef BOOL
  ...
  /* include other headers */

@


1.2
log
@
	* CONTRIBUTIONS: New file.
	* README: Change the maintained by header.
	* TODO: Add a note about checking the TODO.
@
text
@@


1.1
log
@Initial revision
@
text
@d3 1
a3 2
        Written by Anders Norlander
        Send bug reports and questions to anorland@@hem2.passagen.se
d5 4
@


1.1.1.1
log
@import winsup-2000-02-17 snapshot
@
text
@@
