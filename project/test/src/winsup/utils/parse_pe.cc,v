head	1.12;
access;
symbols
	cygwin-1_7_35-release:1.12
	cygwin-1_7_34-release:1.12
	cygwin-1_7_33-release:1.12
	cygwin-1_7_32-release:1.12
	cygwin-1_7_31-release:1.12
	cygwin-1_7_30-release:1.12
	cygwin-1_7_29-release:1.12
	cygwin-1_7_29-release-branchpoint:1.12.0.2
	cygwin-1_7_28-release:1.12
	cygwin-1_7_27-release:1.12
	cygwin-1_7_26-release:1.12
	cygwin-1_7_25-release:1.12
	cygwin-1_7_24-release:1.12
	cygwin-1_7_23-release:1.12
	cygwin-1_7_22-release:1.12
	cygwin-1_7_21-release:1.12
	cygwin-1_7_20-release:1.12
	cygwin-1_7_19-release:1.12
	cygwin-64bit-postmerge:1.12
	cygwin-64bit-premerge-branch:1.11.0.2
	cygwin-64bit-premerge:1.11
	cygwin-1_7_18-release:1.11
	cygwin-1_7_17-release:1.9
	cygwin-64bit-branch:1.9.0.4
	cygwin-1_7_16-release:1.9
	cygwin-1_7_15-release:1.9
	cygwin-1_7_14_2-release:1.9
	cygwin-1_7_14-release:1.9
	cygwin-1_7_12-release:1.9
	cygwin-1_7_11-release:1.9
	cygwin-1_7_10-release:1.9
	cygwin-1_7_9-release:1.9
	cygwin-1_7_8-release:1.9
	cygwin-1_7_7-release:1.9
	cygwin-1_7_5-release:1.9
	cygwin-1_7_4-release:1.9
	cygwin-1_7_3-release:1.9
	cygwin-1_7_2-release:1.9
	cygwin-1_7_1-release:1.9
	cv-branch-2:1.9.0.2
	cr-0x5f1:1.8.0.6
	cv-branch:1.8.0.4
	cr-0x3b58:1.8.0.2
	cr-0x9e:1.5.0.8
	cr-0x9d:1.5.0.6
	corinna-01:1.5
	cr-0x9c:1.5.0.4
	cr-0x9b:1.5.0.2
	cr-0x99:1.4
	Z-emcb-cygwin_daemon:1.4.0.2
	w32api-2_2:1.4
	mingw-runtime-2_4:1.4
	cygnus_cvs_20020108_pre:1.4
	Z-cygwin_daemon_merge-new_HEAD:1.3
	Z-cygwin_daemon_merge_HEAD:1.3
	cygwin_daemon:1.3.0.8;
locks; strict;
comment	@// @;


1.12
date	2013.04.23.09.44.36;	author corinna;	state Exp;
branches;
next	1.11;

1.11
date	2013.01.21.16.28.27;	author cgf;	state Exp;
branches;
next	1.10;

1.10
date	2012.11.23.13.22.47;	author cgf;	state Exp;
branches;
next	1.9;

1.9
date	2007.07.24.19.08.23;	author corinna;	state Exp;
branches
	1.9.4.1;
next	1.8;

1.8
date	2005.06.14.12.42.57;	author corinna;	state Exp;
branches
	1.8.6.1;
next	1.7;

1.7
date	2004.10.25.15.49.36;	author cgf;	state Exp;
branches;
next	1.6;

1.6
date	2004.06.15.02.18.51;	author amodra;	state Exp;
branches;
next	1.5;

1.5
date	2003.09.18.01.46.18;	author cgf;	state Exp;
branches;
next	1.4;

1.4
date	2001.12.11.22.51.01;	author cgf;	state Exp;
branches;
next	1.3;

1.3
date	2000.10.28.05.39.38;	author cgf;	state Exp;
branches;
next	1.2;

1.2
date	2000.10.28.05.00.00;	author cgf;	state Exp;
branches;
next	1.1;

1.1
date	2000.08.24.19.03.12;	author cgf;	state Exp;
branches;
next	;

1.9.4.1
date	2012.11.23.15.14.40;	author corinna;	state Exp;
branches;
next	1.9.4.2;

1.9.4.2
date	2013.01.29.21.54.42;	author corinna;	state Exp;
branches;
next	1.9.4.3;

1.9.4.3
date	2013.02.17.12.07.34;	author yselkowitz;	state Exp;
branches;
next	;

1.8.6.1
date	2007.11.12.15.31.45;	author corinna;	state Exp;
branches;
next	;


desc
@@


1.12
log
@	* Merge in cygwin-64bit-branch.
@
text
@/* parse_pe.cc

   Copyright 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2007, 2012, 2013 Red Hat, Inc.

   Written by Egor Duda <deo@@logos-m.ru>

   This file is part of Cygwin.

   This program is free software; you can redistribute it and/or modify
   it under the terms of the GNU General Public License as published by
   the Free Software Foundation; either version 2 of the License, or
   (at your option) any later version.

   This program is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
   GNU General Public License (file COPYING.dumper) for more details.

   You should have received a copy of the GNU General Public License
   along with this program; if not, write to the Free Software
   Foundation, Inc., 51 Franklin Street - Fifth Floor, Boston, MA 02110-1301, USA.  */

#define PACKAGE
#include <bfd.h>
#include <stdio.h>
#include <stdlib.h>

#include "dumper.h"

int
exclusion::add (LPBYTE mem_base, SIZE_T mem_size)
{
  while (last >= size)
    size += step;
  region = (process_mem_region *) realloc (region, size * sizeof (process_mem_region));
  if (region == NULL)
    return 0;
  region[last].base = mem_base;
  region[last].size = mem_size;
  last++;
  return 1;
};

int
cmp_regions (const void *r1, const void *r2)
{
  if (((process_mem_region *) r1)->base < ((process_mem_region *) r2)->base)
    return -1;
  if (((process_mem_region *) r1)->base > ((process_mem_region *) r2)->base)
    return 1;
  return 0;
}

int
exclusion::sort_and_check ()
{
  qsort (region, last, sizeof (process_mem_region), &cmp_regions);
  for (process_mem_region * p = region; p < region + last - 1; p++)
    {
      process_mem_region *q = p + 1;
      if (q == p + 1)
	continue;
      if (p->base + size > q->base)
	{
	  fprintf (stderr, "region error @@ (%p + %zd) > %p\n", p->base, size, q->base);
	  return 0;
	}
    }
  return 1;
}

static void
select_data_section (bfd * abfd, asection * sect, PTR obj)
{
  exclusion *excl_list = (exclusion *) obj;

  if ((sect->flags & (SEC_CODE | SEC_DEBUGGING)) &&
      sect->vma && bfd_get_section_size (sect))
    {
      excl_list->add ((LPBYTE) sect->vma, (SIZE_T) bfd_get_section_size (sect));
      deb_printf ("excluding section: %20s %08lx\n", sect->name,
		  bfd_get_section_size (sect));
    }
}

int
parse_pe (const char *file_name, exclusion * excl_list)
{
  if (file_name == NULL || excl_list == NULL)
    return 0;

  bfd *abfd = bfd_openr (file_name, "pei-i386");
  if (abfd == NULL)
    {
      bfd_perror ("failed to open file");
      return 0;
    }

  bfd_check_format (abfd, bfd_object);
  bfd_map_over_sections (abfd, &select_data_section, (PTR) excl_list);
  excl_list->sort_and_check ();

  bfd_close (abfd);
  return 1;
}
@


1.11
log
@Update copyrights
@
text
@d3 1
a3 1
   Copyright 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2007, 2012 Red Hat, Inc.
d31 1
a31 1
exclusion::add (LPBYTE mem_base, DWORD mem_size)
d65 1
a65 1
	  fprintf (stderr, "region error @@ (%8p + %d) > %8p\n", p->base, size, q->base);
d80 1
a80 1
      excl_list->add ((LPBYTE) sect->vma, (DWORD) bfd_get_section_size (sect));
@


1.10
log
@ChangeLog:
2012-11-12  Christopher Faylor  <me.cygwin2012@@cgf.cx>

	* Makefile.common: Revamp for new configury.  Add default compilation
	targets, include .E processing.  Add magic for allowing "CFLAGS" to
	control optimization options in "CXXFLAGS".
	* configure.cygwin: New include for Cygwin configure.in's.
	* acinclude.m4: Delete old definitions.  Implement AC_WINDOWS_HEADERS,
	AC_WINDOWS_LIBS, AC_CYGWIN_INCLUDES, target_builddir, winsup_srcdir.
	* aclocal.m4: Regenerate.
	* autogen.sh: New file.
	* ccwrap: New script.
	* c++wrap: New script.
	* config.guess: New script.
	* config.sub: New script.
	* configure: Regenerate.
	* configure.in: Eliminate LIB_AC_PROG_* calls in favor of standard.
	Delete ancient target test.
	* install-sh: New script.

cygserver/ChangeLog:
2012-11-12  Christopher Faylor  <me.cygwin2012@@cgf.cx>

	* Makefile.in: Revamp for new configury.
	* configure.in: Revamp for new configury.
	* aclocal.m4: Regenerate.
	* configure: Ditto.
	* autogen.sh: New script.

cygwin/ChangeLog:
2012-11-22  Christopher Faylor  <me.cygwin2012@@cgf.cx>

	* select.cc (select): Don't return -1 when we've timed out after
	looping.

2012-11-22  Christopher Faylor  <me.cygwin2012@@cgf.cx>

	* Makefile.in: Revamp for new configury.
	(datarootdir): Add variable setting.
	(winver_stamp): Accommodate changes to mkvers.sh setting.
	(libc.a): Fix race when libm.a might not have been built yet.
	* configure.in: Revamp for new configury.
	* aclocal.m4: Regenerate.
	* configure: Ditto.
	* autogen.sh: New script.
	* mkvers.sh: Find include directives via CFLAGS and friends rather than
	assuming that w32api lives nearby.

utils/ChangeLog:
2012-11-12  Christopher Faylor  <me.cygwin2012@@cgf.cx>

	* aclocal.m4: Regenerate.
	* configure: Ditto.
	* autogen.sh: New script.
	* configure.in: Revamp for new configury.
	* Makefile.in: Revamp for new configury.  Rename ALL_* to just *.
	Always use "VERBOSE" setting.
	(MINGW_CXX): Don't include CFLAGS in definition.
	(all): Define target first, before everything else so that it is the
	default.
	(ps.exe): Don't add useless -lcygwin.
	(ldh.exe): For consistency, add to existing MINGW_LDFLAGS rather than
	redefining them.
	(cygcheck.exe): Always include -lz for MINGW_LDFLAGS.  Don't try to
	figure out where to find it.
	(dumper.exe): Simplify check.  Assume libraries are installed rather
	than trying to retrieve from source tree.
	(install): Just use /bin/mkdir to create directories.
	(Makefile): Regenerate when standard dependencies change.
	* dump_setup.cc: Always include zlib.h.  Remove accommodations for it
	possibly not existing.
	* parse_pe.cc: Add define which allows building with installed
	binutils package.
	* dumper.cc: Ditto.
@
text
@d3 1
a3 1
   Copyright 1999, 2000, 2001, 2002, 2003, 2004 Red Hat, Inc.
@


1.9
log
@	* dumper.cc: Change license to plain GPLv2 + later.
	* dumper.h: Ditto.
	* parse_pe.cc: Ditto.
@
text
@d23 1
@


1.9.4.1
log
@Pull in changes from HEAD
@
text
@a22 1
#define PACKAGE
@


1.9.4.2
log
@Pull in changes from HEAD
@
text
@d3 1
a3 1
   Copyright 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2007, 2012 Red Hat, Inc.
@


1.9.4.3
log
@Fix 64-bit type problems in dumper.exe
* dumper.cc: Througout, cast pid to unsigned int, change addresses
and sizes from DWORD to SIZE_T, and use %p for pointer addresses.
(dumper::add_mem_region): Change size type to SIZE_T.
(dumper::split_add_mem_region): Ditto.
* dumper.h (struct process_mem_region): Change size type to SIZE_T.
(class exclusion): Change last, size, and step types to size_t.
(exclusion::exclusion): Change argument type to size_t.
(exclusion::add): Change mem_size type to SIZE_T.
(dumper::add_mem_region): Change size type to SIZE_T.
(dumper::split_add_mem_region): Ditto.
(psapi_get_module_name): Change BaseAddress type to LPVOID.
* module_info.cc (psapi_get_module_name): Ditto.
* parse_pe.cc: Througout, change addresses and sizes from DWORD to
SIZE_T, and use %p for pointer addresses.
(exclusion::add): Change mem_size type to SIZE_T.
@
text
@d3 1
a3 1
   Copyright 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2007, 2012, 2013 Red Hat, Inc.
d31 1
a31 1
exclusion::add (LPBYTE mem_base, SIZE_T mem_size)
d65 1
a65 1
	  fprintf (stderr, "region error @@ (%p + %zd) > %p\n", p->base, size, q->base);
d80 1
a80 1
      excl_list->add ((LPBYTE) sect->vma, (SIZE_T) bfd_get_section_size (sect));
@


1.8
log
@	* parse_pe.c (exclusion::sort_and_check): Remove crude cast.
@
text
@d9 13
a21 3
   This software is a copyrighted work licensed under the terms of the
   Cygwin license.  Please consult the file "CYGWIN_LICENSE" for
   details. */
@


1.8.6.1
log
@2007-08-31  Dave Korn  <dave.korn@@artimi.com>

	* mkgroup.c (enum_groups):  Use MAX_PREFERRED_LENGTH in netgroupenum
	call so that it will automatically size returned buffer sufficiently.

2007-08-03  Dave Korn  <dave.korn@@artimi.com>

	* Makefile.in (cygcheck.exe):  Add bloda.o as prerequisite, adjusting
	dependency-filtering $(wordlist ...) call appropriately.  Link ntdll.
	(bloda.o):  New rule to build bloda.o
	* cygcheck.cc (dump_sysinfo):  Call bloda function dump_dodgy_apps().
	* bloda.cc:  New file implements detection of applications from the
	Big List Of Dodgy Apps.

2007-07-24  Corinna Vinschen  <corinna@@vinschen.de>

	* COPYING.dumper: New file.
	* dumper.cc: Change license to plain GPLv2 + later.
	* dumper.h: Ditto.
	* parse_pe.cc: Ditto.

2007-07-23  Christopher Faylor  <me+cygwin@@cgf.cx>

	* strace.cc (create_child): Don't convert a path from cygwin format
	unless it has a slash.

2007-07-09  Christopher Faylor  <me+cygwin@@cgf.cx>

	* strace.cc (usage): Add missing description for -q.

2007-05-29  Pedro Alves  <pedro_alves@@portugalmail.pt>

	* dumper.cc (dumper::prepare_core_dump): Record a phdr for each section.

2007-03-30  Mark Mitchell  <mark@@codesourcery.com>

	* utils/cygpath.cc (get_long_path_name_w32impl): Close handles returned
	by FindFirstFile.

2006-09-11  Eric Blake  <ebb9@@byu.net>

	* cygcheck.cc (main): Restore POSIXLY_CORRECT before displaying user's
	environment.

2006-08-03  Corinna Vinschen  <corinna@@vinschen.de>

	* path.cc (vconcat): Don't convert backslahes to slashes.
	(cygpath): Return native path with all backslashes.

2006-07-30  Ilya Bobir  <ilya@@po4ta.com>

	* cygpath.cc (get_long_name): Fallback to get_long_path_name_w32impl.

2006-07-27  Corinna Vinschen  <corinna@@vinschen.de>

	* cygpath.c (get_long_name): Cover the case that GetLongPathName
	doesn't return valid information for non-existant files.  Just return
	incoming filename in that case.
@
text
@d9 3
a11 13
   This program is free software; you can redistribute it and/or modify
   it under the terms of the GNU General Public License as published by
   the Free Software Foundation; either version 2 of the License, or
   (at your option) any later version.

   This program is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
   GNU General Public License (file COPYING.dumper) for more details.

   You should have received a copy of the GNU General Public License
   along with this program; if not, write to the Free Software
   Foundation, Inc., 51 Franklin Street - Fifth Floor, Boston, MA 02110-1301, USA.  */
@


1.7
log
@fix whitespace, update some copyrights
@
text
@d54 1
a54 1
	  fprintf (stderr, "region error @@ (%8p + %d) > %8p\n", (unsigned) p->base, size, q->base);
@


1.6
log
@	* dumper.cc (dumper::prepare_core_dump): Use bfd_get_section_size
	instead of _raw_size.
	(dumper::write_core_dump): Likewise.
	* parse_pe.cc (select_data_section): Likewise.
@
text
@d33 1
a33 1
int 
@


1.5
log
@* parse_pe.cc (exclusion::sort_and_check): Make error message a little more
explicit and ignore (hopefully) harmless region overlap.
@
text
@d3 1
a3 1
   Copyright 1999, 2000, 2001, 2002, 2003 Red Hat, Inc.
d67 1
a67 1
      sect->vma && sect->_raw_size)
d69 3
a71 2
      excl_list->add ((LPBYTE) sect->vma, (DWORD) sect->_raw_size);
      deb_printf ("excluding section: %20s %08lx\n", sect->name, sect->_raw_size);
@


1.4
log
@* Makefile.in: Add define to CXXFLAGS.
@
text
@d3 1
a3 1
   Copyright 1999,2000,2001 Red Hat, Inc.
d50 2
d54 1
a54 1
	  fprintf (stderr, "region error @@ %08x", (unsigned) p->base);
@


1.3
log
@* Makefile.in: Accomodate newer gcc's which require linking of c++ programs
with g++.  Fixup output for some compilations.
* cygcheck.cc: Respond to compiler warnings.
* dumper.cc (main): Ditto.
* parse_pe.cc (exclusion::sort_and_check): Ditto.
* setfacl.cc (getaclentry): Ditto.
@
text
@d3 1
a3 1
   Copyright 1999 Cygnus Solutions.
@


1.2
log
@Cleanup formatting on some files.  Remove excessive whitespace.
@
text
@d52 1
a52 1
	  fprintf (stderr, "region error @@ %08x", p->base);
@


1.1
log
@* Makefile.in: Add dumper.exe target and associated mechanisms for building it.
* dumper.cc: New file.
* dumper.h: New file.
* module_info.cc: New file.
* parse_pe.cc: New file.
@
text
@d7 1
a7 1
This file is part of Cygwin.
d9 3
a11 3
This software is a copyrighted work licensed under the terms of the
Cygwin license.  Please consult the file "CYGWIN_LICENSE" for
details. */
d20 1
a20 1
exclusion::add ( LPBYTE mem_base, DWORD mem_size )
d22 7
a28 5
  while ( last >= size ) size += step;
  region = (process_mem_region*) realloc ( region, size * sizeof ( process_mem_region ) );
  if ( region == NULL ) return 0;
  region [ last ].base = mem_base;
  region [ last ].size = mem_size;
d33 2
a34 1
int cmp_regions ( const void* r1, const void* r2 )
d36 1
a36 1
  if ( ((process_mem_region*) r1)->base < ((process_mem_region*) r2)->base )
d38 1
a38 1
  if ( ((process_mem_region*) r1)->base > ((process_mem_region*) r2)->base )
d46 2
a47 2
  qsort ( region, last, sizeof ( process_mem_region ), &cmp_regions );
  for ( process_mem_region* p = region; p < region + last - 1; p++ )
d49 6
a54 6
      process_mem_region* q = p + 1;
      if ( p->base + size > q->base )
        {
          fprintf ( stderr, "region error @@ %08x", p->base );
          return 0;
        }
d60 1
a60 1
select_data_section ( bfd *abfd, asection *sect, PTR obj )
d62 1
a62 1
  exclusion* excl_list = (exclusion*) obj;
d64 2
a65 2
  if ( ( sect->flags & ( SEC_CODE | SEC_DEBUGGING ) ) &&
       sect->vma && sect->_raw_size )
d67 2
a68 2
      excl_list->add ( (LPBYTE)sect->vma, (DWORD)sect->_raw_size );
      deb_printf ( "excluding section: %20s %08lx\n", sect->name, sect->_raw_size);
d73 1
a73 1
parse_pe ( const char* file_name, exclusion* excl_list )
d75 2
a76 1
  if ( file_name == NULL || excl_list == NULL ) return 0;
d78 2
a79 2
  bfd* abfd = bfd_openr ( file_name, "pei-i386" );
  if ( abfd == NULL )
d81 1
a81 1
      bfd_perror ( "failed to open file" );
d85 2
a86 2
  bfd_check_format ( abfd, bfd_object );
  bfd_map_over_sections ( abfd, &select_data_section, (PTR)excl_list );
d89 1
a89 1
  bfd_close ( abfd );
a91 1

@

