head	1.4;
access;
symbols
	cygwin-1_7_35-release:1.4
	cygwin-1_7_34-release:1.4
	cygwin-1_7_33-release:1.4
	cygwin-1_7_32-release:1.4
	cygwin-1_7_31-release:1.4
	cygwin-1_7_30-release:1.4
	cygwin-1_7_29-release:1.4
	cygwin-1_7_29-release-branchpoint:1.4.0.2
	cygwin-1_7_28-release:1.4
	cygwin-1_7_27-release:1.4
	cygwin-1_7_26-release:1.4
	cygwin-1_7_25-release:1.4
	cygwin-1_7_24-release:1.4
	cygwin-1_7_23-release:1.4
	cygwin-1_7_22-release:1.4
	cygwin-1_7_21-release:1.4
	cygwin-1_7_20-release:1.4
	cygwin-1_7_19-release:1.4
	cygwin-64bit-postmerge:1.4
	cygwin-64bit-premerge-branch:1.3.0.6
	cygwin-64bit-premerge:1.3
	cygwin-1_7_18-release:1.3
	cygwin-1_7_17-release:1.3
	cygwin-64bit-branch:1.3.0.4
	cygwin-1_7_16-release:1.3
	cygwin-1_7_15-release:1.3
	cygwin-1_7_14_2-release:1.3
	cygwin-1_7_14-release:1.3
	cygwin-1_7_12-release:1.3
	cygwin-1_7_11-release:1.3
	cygwin-1_7_10-release:1.3
	cygwin-1_7_9-release:1.3
	cygwin-1_7_8-release:1.3
	cygwin-1_7_7-release:1.3
	cygwin-1_7_5-release:1.3
	cygwin-1_7_4-release:1.3
	cygwin-1_7_3-release:1.3
	cygwin-1_7_2-release:1.3
	cygwin-1_7_1-release:1.3
	cv-branch-2:1.3.0.2
	cr-0x5f1:1.2.0.18
	cv-branch:1.2.0.16
	cr-0x3b58:1.2.0.14
	cr-0x9e:1.2.0.12
	cr-0x9d:1.2.0.10
	corinna-01:1.2
	cr-0x9c:1.2.0.6
	cr-0x9b:1.2.0.8
	cr-0x99:1.2
	Z-emcb-cygwin_daemon:1.2.0.2
	w32api-2_2:1.2
	mingw-runtime-2_4:1.2
	cygnus_cvs_20020108_pre:1.2
	Z-cygwin_daemon_merge-new_HEAD:1.2
	Z-cygwin_daemon_merge_HEAD:1.2
	cygwin_daemon:1.2.0.4;
locks; strict;
comment	@ * @;


1.4
date	2013.04.23.09.44.36;	author corinna;	state Exp;
branches;
next	1.3;

1.3
date	2007.07.24.19.08.23;	author corinna;	state Exp;
branches
	1.3.4.1;
next	1.2;

1.2
date	2001.08.30.16.47.51;	author duda;	state Exp;
branches
	1.2.18.1;
next	1.1;

1.1
date	2000.08.24.19.03.12;	author cgf;	state Exp;
branches;
next	;

1.3.4.1
date	2013.02.17.12.07.34;	author yselkowitz;	state Exp;
branches;
next	;

1.2.18.1
date	2007.11.12.15.31.45;	author corinna;	state Exp;
branches;
next	;


desc
@@


1.4
log
@	* Merge in cygwin-64bit-branch.
@
text
@/* dumper.h

   Copyright 1999, 2001, 2013 Red Hat Inc.

   Written by Egor Duda <deo@@logos-m.ru>

   This file is part of Cygwin.

   This program is free software; you can redistribute it and/or modify
   it under the terms of the GNU General Public License as published by
   the Free Software Foundation; either version 2 of the License, or
   (at your option) any later version.

   This program is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
   GNU General Public License (file COPYING.dumper) for more details.

   You should have received a copy of the GNU General Public License
   along with this program; if not, write to the Free Software
   Foundation, Inc., 51 Franklin Street - Fifth Floor, Boston, MA 02110-1301, USA.  */

#ifndef _DUMPER_H_
#define _DUMPER_H_

#include <windows.h>

typedef struct
{
  LPBYTE base;
  SIZE_T size;
} process_mem_region;

typedef struct
{
  DWORD tid;
  HANDLE hThread;
  CONTEXT context;
} process_thread;

typedef struct
{
  LPVOID base_address;
  char* name;
} process_module;

enum process_entity_type
{
  pr_ent_memory,
  pr_ent_thread,
  pr_ent_module
};

typedef struct _process_entity
{
  process_entity_type type;
  union
    {
      process_thread thread;
      process_mem_region memory;
      process_module module;
    } u;
  asection* section;
  struct _process_entity* next;
} process_entity;

class exclusion
{
public:
  size_t last;
  size_t size;
  size_t step;
  process_mem_region* region;

  exclusion ( size_t step ) { last = size = 0;
			      this->step = step;
			      region = NULL; }
  ~exclusion () { free ( region ); }
  int add ( LPBYTE mem_base, SIZE_T mem_size );
  int sort_and_check ();
};

#define PAGE_BUFFER_SIZE 4096

class dumper
{
  DWORD pid;
  DWORD tid; /* thread id of active thread */
  HANDLE hProcess;
  process_entity* list;
  process_entity* last;
  exclusion* excl_list;

  char* file_name;
  bfd* core_bfd;

  asection* status_section;

  int memory_num;
  int module_num;
  int thread_num;

  void close ();
  void dumper_abort ();

  process_entity* add_process_entity_to_list ( process_entity_type type );
  int add_thread ( DWORD tid, HANDLE hThread );
  int add_mem_region ( LPBYTE base, SIZE_T size );

  /* break mem_region by excl_list and add add all subregions */
  int split_add_mem_region ( LPBYTE base, SIZE_T size );

  int add_module ( LPVOID base_address );

  int collect_memory_sections ();
  int dump_memory_region ( asection* to, process_mem_region* memory );
  int dump_thread ( asection* to, process_thread* thread );
  int dump_module ( asection* to, process_module* module );

public:
  int sane ();

  int collect_process_information ();
  void print_core_section_list ();

  dumper ( DWORD pid, DWORD tid, const char* name );
  ~dumper ();

  int init_core_dump ();
  int prepare_core_dump ();
  int write_core_dump ();
};

extern int deb_printf ( const char* format, ... );

extern char* psapi_get_module_name ( HANDLE hProcess, LPVOID BaseAddress );

extern int parse_pe ( const char* file_name, exclusion* excl_list );

extern BOOL verbose;

#endif
@


1.3
log
@	* dumper.cc: Change license to plain GPLv2 + later.
	* dumper.h: Ditto.
	* parse_pe.cc: Ditto.
@
text
@d3 1
a3 1
   Copyright 1999,2001 Red Hat Inc.
d31 1
a31 1
  DWORD size;
d70 3
a72 3
  int last;
  int size;
  int step;
d75 3
a77 3
  exclusion ( int step ) { last = size = 0;
			   this->step = step;
			   region = NULL; }
d79 1
a79 1
  int add ( LPBYTE mem_base, DWORD mem_size );
d108 1
a108 1
  int add_mem_region ( LPBYTE base, DWORD size );
d111 1
a111 1
  int split_add_mem_region ( LPBYTE base, DWORD size );
d136 1
a136 1
extern char* psapi_get_module_name ( HANDLE hProcess, DWORD BaseAddress );
@


1.3.4.1
log
@Fix 64-bit type problems in dumper.exe
* dumper.cc: Througout, cast pid to unsigned int, change addresses
and sizes from DWORD to SIZE_T, and use %p for pointer addresses.
(dumper::add_mem_region): Change size type to SIZE_T.
(dumper::split_add_mem_region): Ditto.
* dumper.h (struct process_mem_region): Change size type to SIZE_T.
(class exclusion): Change last, size, and step types to size_t.
(exclusion::exclusion): Change argument type to size_t.
(exclusion::add): Change mem_size type to SIZE_T.
(dumper::add_mem_region): Change size type to SIZE_T.
(dumper::split_add_mem_region): Ditto.
(psapi_get_module_name): Change BaseAddress type to LPVOID.
* module_info.cc (psapi_get_module_name): Ditto.
* parse_pe.cc: Througout, change addresses and sizes from DWORD to
SIZE_T, and use %p for pointer addresses.
(exclusion::add): Change mem_size type to SIZE_T.
@
text
@d3 1
a3 1
   Copyright 1999, 2001, 2013 Red Hat Inc.
d31 1
a31 1
  SIZE_T size;
d70 3
a72 3
  size_t last;
  size_t size;
  size_t step;
d75 3
a77 3
  exclusion ( size_t step ) { last = size = 0;
			      this->step = step;
			      region = NULL; }
d79 1
a79 1
  int add ( LPBYTE mem_base, SIZE_T mem_size );
d108 1
a108 1
  int add_mem_region ( LPBYTE base, SIZE_T size );
d111 1
a111 1
  int split_add_mem_region ( LPBYTE base, SIZE_T size );
d136 1
a136 1
extern char* psapi_get_module_name ( HANDLE hProcess, LPVOID BaseAddress );
@


1.2
log
@* dumper.h: Update copyright notice.
* dumper.cc: Ditto.
* dumper.cc: (dumper::print_core_section_list): New function.
* dumper.h: (dumper::print_core_section_list): Declare it.
* dumper.cc (print_section_name): New function.
(dumper::collect_process_information): Augment debugging output.
Stop debugee processing if it posts double exception.
(usage): Fix typo in option name.
@
text
@d7 1
a7 1
This file is part of Cygwin.
d9 13
a21 3
This software is a copyrighted work licensed under the terms of the
Cygwin license.  Please consult the file "CYGWIN_LICENSE" for
details. */
@


1.2.18.1
log
@2007-08-31  Dave Korn  <dave.korn@@artimi.com>

	* mkgroup.c (enum_groups):  Use MAX_PREFERRED_LENGTH in netgroupenum
	call so that it will automatically size returned buffer sufficiently.

2007-08-03  Dave Korn  <dave.korn@@artimi.com>

	* Makefile.in (cygcheck.exe):  Add bloda.o as prerequisite, adjusting
	dependency-filtering $(wordlist ...) call appropriately.  Link ntdll.
	(bloda.o):  New rule to build bloda.o
	* cygcheck.cc (dump_sysinfo):  Call bloda function dump_dodgy_apps().
	* bloda.cc:  New file implements detection of applications from the
	Big List Of Dodgy Apps.

2007-07-24  Corinna Vinschen  <corinna@@vinschen.de>

	* COPYING.dumper: New file.
	* dumper.cc: Change license to plain GPLv2 + later.
	* dumper.h: Ditto.
	* parse_pe.cc: Ditto.

2007-07-23  Christopher Faylor  <me+cygwin@@cgf.cx>

	* strace.cc (create_child): Don't convert a path from cygwin format
	unless it has a slash.

2007-07-09  Christopher Faylor  <me+cygwin@@cgf.cx>

	* strace.cc (usage): Add missing description for -q.

2007-05-29  Pedro Alves  <pedro_alves@@portugalmail.pt>

	* dumper.cc (dumper::prepare_core_dump): Record a phdr for each section.

2007-03-30  Mark Mitchell  <mark@@codesourcery.com>

	* utils/cygpath.cc (get_long_path_name_w32impl): Close handles returned
	by FindFirstFile.

2006-09-11  Eric Blake  <ebb9@@byu.net>

	* cygcheck.cc (main): Restore POSIXLY_CORRECT before displaying user's
	environment.

2006-08-03  Corinna Vinschen  <corinna@@vinschen.de>

	* path.cc (vconcat): Don't convert backslahes to slashes.
	(cygpath): Return native path with all backslashes.

2006-07-30  Ilya Bobir  <ilya@@po4ta.com>

	* cygpath.cc (get_long_name): Fallback to get_long_path_name_w32impl.

2006-07-27  Corinna Vinschen  <corinna@@vinschen.de>

	* cygpath.c (get_long_name): Cover the case that GetLongPathName
	doesn't return valid information for non-existant files.  Just return
	incoming filename in that case.
@
text
@d7 1
a7 1
   This file is part of Cygwin.
d9 3
a11 13
   This program is free software; you can redistribute it and/or modify
   it under the terms of the GNU General Public License as published by
   the Free Software Foundation; either version 2 of the License, or
   (at your option) any later version.

   This program is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
   GNU General Public License (file COPYING.dumper) for more details.

   You should have received a copy of the GNU General Public License
   along with this program; if not, write to the Free Software
   Foundation, Inc., 51 Franklin Street - Fifth Floor, Boston, MA 02110-1301, USA.  */
@


1.1
log
@* Makefile.in: Add dumper.exe target and associated mechanisms for building it.
* dumper.cc: New file.
* dumper.h: New file.
* module_info.cc: New file.
* parse_pe.cc: New file.
@
text
@d3 1
a3 1
   Copyright 1999 Cygnus Solutions.
d114 1
@

