head	1.9;
access;
symbols
	cygwin-1_7_17-release:1.8
	cygwin-64bit-branch:1.8.0.2
	cygwin-1_7_16-release:1.8
	cygwin-1_7_15-release:1.8
	cygwin-1_7_14_2-release:1.8
	cygwin-1_7_14-release:1.8
	cygwin-1_7_12-release:1.8
	cygwin-1_7_11-release:1.8
	cygwin-1_7_10-release:1.8
	cygwin-1_7_9-release:1.7
	cygwin-1_7_8-release:1.7
	cygwin-1_7_7-release:1.7
	cygwin-1_7_5-release:1.6
	cygwin-1_7_4-release:1.6
	cygwin-1_7_3-release:1.6
	cygwin-1_7_2-release:1.6
	cygwin-1_7_1-release:1.6
	cv-branch-2:1.5.0.2;
locks; strict;
comment	@# @;


1.9
date	2012.10.24.10.15.27;	author yselkowitz;	state dead;
branches;
next	1.8;

1.8
date	2011.06.14.15.04.04;	author cgf;	state Exp;
branches
	1.8.2.1;
next	1.7;

1.7
date	2010.08.11.03.01.55;	author yselkowitz;	state Exp;
branches;
next	1.6;

1.6
date	2009.08.10.01.55.14;	author davek;	state Exp;
branches;
next	1.5;

1.5
date	2008.10.13.00.56.09;	author cgf;	state Exp;
branches;
next	1.4;

1.4
date	2008.10.12.23.54.03;	author cgf;	state Exp;
branches;
next	1.3;

1.3
date	2008.10.12.03.20.37;	author cgf;	state Exp;
branches;
next	1.2;

1.2
date	2008.10.12.03.08.33;	author cgf;	state Exp;
branches;
next	1.1;

1.1
date	2008.10.12.03.06.12;	author cgf;	state Exp;
branches;
next	;

1.8.2.1
date	2012.10.16.15.20.47;	author corinna;	state Exp;
branches;
next	1.8.2.2;

1.8.2.2
date	2012.10.17.14.31.56;	author corinna;	state Exp;
branches;
next	1.8.2.3;

1.8.2.3
date	2013.03.06.16.39.47;	author corinna;	state dead;
branches;
next	;


desc
@@


1.9
log
@	* configure.in: Add check for MINGW_CXX.  Remove libiconv check.
	* configure: Regenerate.
	* Makefile.in: Remove references to mingw and w32api directories.
	Use MINGW_CXX instead of mingw script to build MINGW_BINS.
	Check for libiconv with $CC --print-file-name.
	* cygcheck.cc: Use relative include paths for Cygwin headers.
	* path.cc: Ditto.
	* strace.cc: Ditto
	* mingw: Remove.
@
text
@#!/bin/bash
# Front-end kludge to cause a Cygwin gcc to default to
# an installed version of the MinGW components.

#
# Find the path to the compiler.
#
compiler=$1; shift
dir=$(cd $(dirname $("$compiler" -print-prog-name=ld))/../..; pwd)

#
# The mingw32 directory should live somewhere close by to the
# compiler.  Search for it.
#
[ "$dir" = '/' ] && dir=''
mingw_dir=''
for d in "$dir"/*-mingw32 "$dir"/usr/*-mingw32 "$dir"/*-mingw* "$dir"/usr/*-mingw* \
         /*-mingw32 /usr/*-mingw32 /*-mingw* /usr/*-mingw*; do
    case "$d" in
	*\**)	continue ;;
	*)	if [ -d "$d"/sys-root/mingw ]; then
		    mingw_dir=$d/sys-root/mingw
		else
		    mingw_dir=$d;
		fi; break;
    esac
done

if [ -z "$mingw_dir" ]; then
    echo "$0: couldn't find i686-pc-mingw32 directory" 1>&2
    exit 1
fi

#
# Inspect each argument throwing away ones that seem to try to include the
# Cygwin environment.
#
newargs=()
sawcomp() { return 1; }
sawcfile() { return 1; }
sawofile() { return 1; }
sawshared() { return 1; }
sawnostdinc() { return 1; }
sawnostdlib() { return 1; }
eatnext() { return 1; }
pushnext() { return 1; }
for f do
    if eatnext; then
	eatnext() { return 1; }
	continue;
    fi
    if pushnext; then
	pushnext() { return 1; }
    else
	case "$f" in
	    *cygwin/include*|*newlib|-mno-cygwin) continue ;;
	    -c|-E)		sawcomp() { return 0; } ;;
	    -xc*)		sawcfile() { return 0; } ;;
	    -isystem)	eatnext() { return 0; }; continue ;;
	    -o)		pushnext() { return 0; } ;;
	    -nostdinc*)	sawnostdinc() { return 0; } ;;
	    -nostdlib)	sawnostdlib() { return 0; } ;;
	    -shared|-Wl,-shared)	sawshared() { return 0; } ;;
	    -*)		;;
	    *.cc|*.c|*.s|*.S|*.i|*.ii)	sawcfile() { return 0; } ;;
	    *.o)		sawofile() { return 0; };;
	esac
    fi
    newargs[${#newargs[*]}]="$f"
done

# Set up a new set of arguments + also search the installed mingw
# directory.
set -- -B"$mingw_dir"/lib/ "${newargs[@@]}"

# Add some default options depending on whether this looks like
# an attempt to link, compile, or both.
if sawcomp || sawcfile; then
    ccdir=$(dirname $($compiler -print-libgcc-file-name))
    sawnostdinc || set -- -isystem "$ccdir"/include -I"${mingw_dir}"/include  "$@@"
    set -- -D__MINGW32__ -D__MSVCRT__ -DWIN32 -D_WIN32 -D__WIN32 -D__WIN32__ -U__CYGWIN__ -Uunix -U__unix__ -U__unix -U __CYGWIN32__ "$@@"
    if ! sawnostdinc; then
	case "$compiler" in
	    *++*) set -- -nostdinc++ "$@@" ;;
	    *) set -- -nostdinc "$@@" ;;
	esac
    fi
fi

if sawofile || ! sawcfile || ! sawcomp; then
    w32api=$($compiler -print-file-name=libc.a)
    w32api=$(cd $(dirname "$w32api")/w32api; pwd)
    set -- -Wl,-nostdlib -L"${w32api}" "$@@"
    ! sawnostdlib && set -- -nostdlib "$@@" -lmingw32 -lgcc -lmoldname -lmingwex -lmsvcrt -lmingw32 -luser32 -lkernel32 -ladvapi32 -lshell32 -lmingw32 -lgcc -lmoldname -lmingwex -lmsvcrt
    ! sawnostdlib && ! sawshared && { sawofile || sawcfile; } && set -- "$mingw_dir"/lib/crt2.o "$@@"
fi

# Execute the compiler with new mingw-specific options.
exec $compiler "$@@"
@


1.8
log
@* mingw: Force use of bash.
@
text
@@


1.8.2.1
log
@	Align ChangeLog to HEAD
	New file ChangeLog.64bit
@
text
@a7 1
cpu=$1; shift
a10 6
case $compiler in
*-*-*-*) 
tool=`echo "$compiler" | sed 's/^\([^-]*\)-\([^-]*\)-\([^-]*\)-\(.*\)$/\4/'` ;;
*) tool=compiler ;;
esac

d15 1
a15 41
[ "$dir" = '/' ] && dir='';

mingw_compiler=''
for d in "$dir"/bin/"$cpu"-w64-mingw*-"$tool"* \
        "$dir"/usr/bin/"$cpu"-w64-mingw*-"$tool"* \
        /bin/"$cpu"-w64-mingw*-"$tool"* /usr/bin/"$cpu"-w64-mingw*-"$tool"* \
        /usr/local/bin/"$cpu"-w64-mingw*-"$tool"* \
        "$dir"/"$cpu"-w64-mingw*/sys-root/bin/"$cpu"-w64-mingw*-"$tool"* \
        "$dir"/usr/"$cpu"-w64-mingw*/sys-root/bin/"$cpu"-w64-mingw*-"$tool"* \
        /"$cpu"-w64-mingw*/sys-root/bin/"$cpu"-w64-mingw*-"$tool"* \
        /usr/"$cpu"-w64-mingw*/sys-root/bin/"$cpu"-w64-mingw*-"$tool"*; do
    case "$d" in
        *\**) continue ;;
        *)
           if test -f "$d"; then
             mingw_compiler=$d;
             break;
           fi
    esac
done

if [ -z "$mingw_compiler" ]; then
  for d in "$dir"/bin/"$cpu"-*-mingw*--"$tool"* \
        "$dir"/usr/bin/"$cpu"-*-mingw*-"$tool"* \
        /bin/"$cpu"-w64-mingw*-"$tool"* /usr/bin/"$cpu"-w64-mingw*-"$tool"* \
        /usr/local/bin/"$cpu"-w64-mingw*-"$tool"* \
        "$dir"/"$cpu"-w64-mingw*/sys-root/bin/"$cpu"-w64-mingw*-"$tool"* \
        "$dir"/usr/"$cpu"-w64-mingw*/sys-root/bin/"$cpu"-w64-mingw*-"$tool"* \
        /"$cpu"-w64-mingw*/sys-root/bin/"$cpu"-w64-mingw*-"$tool"* \
        /usr/"$cpu"-w64-mingw*/sys-root/bin/"$cpu"-w64-mingw*-"$tool"*; do
    case "$d" in
        *\**) continue ;;
        *)
           if test -f "$d"; then
             mingw_compiler=$d;
             break;
           fi
    esac
  done
fi

d17 2
a18 4
for d in "$dir"/"$cpu"-w64-mingw* "$dir"/usr/"$cpu"-w64-mingw* \
        "$dir"/"$cpu"-w64-mingw* "$dir"/usr/"$cpu"-w64-mingw* \
        /"$cpu"-w64-mingw* /usr/"$cpu"-w64-mingw* /"$cpu"-w64-mingw* \
        /usr/"$cpu"-w64-mingw*; do
d30 1
a30 21
  for d in "$dir"/"$cpu"-*-mingw* "$dir"/usr/"$cpu"-*-mingw* \
        "$dir"/"$cpu"-*-mingw* "$dir"/usr/"$cpu"-*-mingw* \
        /"$cpu"-*-mingw* /usr/"$cpu"-*-mingw* /"$cpu"-*-mingw* \
        /usr/"$cpu"-*-mingw*; do
    case "$d" in
        *\**)   continue ;;
        *)      if [ -d "$d"/sys-root/mingw ]; then
                    mingw_dir=$d/sys-root/mingw
                else
                    mingw_dir=$d;
                fi; break;
    esac
  done
fi

if [ -z "$mingw_compiler" ]; then
  mingw_compiler=$compiler
fi

if [ -z "$mingw_dir" ]; then
    echo "$0: couldn't find $cpu-*-mingw32 directory" 1>&2
d99 1
a99 2
echo $mingw_compiler "$@@"
exec $mingw_compiler "$@@"
@


1.8.2.2
log
@	Revert accidental checkin.
@
text
@d8 1
d12 6
d22 41
a62 1
[ "$dir" = '/' ] && dir=''
d64 4
a67 2
for d in "$dir"/*-mingw32 "$dir"/usr/*-mingw32 "$dir"/*-mingw* "$dir"/usr/*-mingw* \
         /*-mingw32 /usr/*-mingw32 /*-mingw* /usr/*-mingw*; do
d79 21
a99 1
    echo "$0: couldn't find i686-pc-mingw32 directory" 1>&2
d168 2
a169 1
exec $compiler "$@@"
@


1.8.2.3
log
@Remove accidentally not removed file.
@
text
@@


1.7
log
@* mingw: Use sysroot, if present, for mingw_dir.
@
text
@d1 1
a1 1
#!/bin/sh
@


1.6
log
@	* mingw: Add fallbacks to search for MinGW components in standard
	install locations if not found in compiler's $prefix.
@
text
@d21 5
a25 1
	*)	mingw_dir=$d; break;
@


1.5
log
@* mingw: Set sawcfile when -xc* is detected.  Extend list of detected source
filew.
@
text
@d17 2
a18 1
for d in "$dir"/*-mingw32 "$dir"/usr/*-mingw32 "$dir"/*-mingw* "$dir"/usr/*-mingw*; do
@


1.4
log
@* mingw: Add more checks to allow more varied use.
@
text
@d53 1
d60 1
a60 1
	    *.cc|*.c)	sawcfile() { return 0; } ;;
@


1.3
log
@* mingw: Use a better method to find where mingw directory lives.
@
text
@d37 3
d51 1
a51 1
	    *cygwin/include*|*newlib*) continue ;;
d54 4
a57 1
	    -o)		pushnext() { return 0; } ; /bin/true ;;
d60 1
a60 1
	    *.o)		sawofile() { return 0; }; /bin/true  ;;
d74 8
a81 5
    set -- -isystem "$ccdir"/include -D__MINGW32__ -D__MSVCRT__ -DWIN32 -D_WIN32 -D__WIN32 -D__WIN32__ -U__CYGWIN__ -Uunix -U__unix__ -U__unix -U __CYGWIN32__ -I"${mingw_dir}"/include "$@@"
    case "$compiler" in
	*++*) set -- -nostdinc++ "$@@" ;;
	*) set -- -nostdinc "$@@" ;;
    esac
d87 3
a89 2
    set -- "$@@" -nostdlib -Wl,-nostdlib -L"$w32api" -lmingw32 -lgcc -lmoldname -lmingwex -lmsvcrt -lmingw32 -luser32 -lkernel32 -ladvapi32 -lshell32 -lmingw32 -lgcc -lmoldname -lmingwex -lmsvcrt
    { sawofile || sawcfile; } && set -- "$mingw_dir"/lib/crt2.o "$@@"
@


1.2
log
@Dummy check-in to get right revision log:

* mingw: New front-end script to control building of MinGW files without using
the deprecated -mno-cygwin option.
* Makefile.in: Use mingw front-end.
@
text
@d9 1
a9 5
case "$compiler" in
	*/*)	;;
	*)	compiler=($(type "$compiler"))
		compiler=${compiler[2]} ;;
esac
a14 2
updir=$(dirname "$compiler")
dir=$(cd "$updir"/..; pwd)
@


1.1
log
@* Makefile.in: Tweak to work better with new utils/mingw front-end.
In utils:
@
text
@d6 1
a6 1
# Find the path to the compiler
@

