head	1.102;
access;
symbols
	cygwin-64bit-postmerge:1.101
	cygwin-64bit-premerge-branch:1.101.0.2
	cygwin-64bit-premerge:1.101
	cygwin-1_7_18-release:1.101
	cygwin-1_7_17-release:1.100
	cygwin-64bit-branch:1.100.0.2
	cygwin-1_7_16-release:1.100
	cygwin-1_7_15-release:1.100
	cygwin-1_7_14_2-release:1.100
	cygwin-1_7_14-release:1.100
	cygwin-1_7_12-release:1.100
	cygwin-1_7_11-release:1.100
	cygwin-1_7_10-release:1.99
	cygwin-1_7_9-release:1.91
	cygwin-1_7_8-release:1.91
	cygwin-1_7_7-release:1.91
	cygwin-1_7_5-release:1.88
	cygwin-1_7_4-release:1.88
	cygwin-1_7_3-release:1.88
	cygwin-1_7_2-release:1.88
	cygwin-1_7_1-release:1.80
	cv-branch-2:1.78.0.2
	cr-0x5f1:1.59.0.4
	cv-branch:1.59.0.2
	cr-0x3b58:1.57.0.2
	cr-0x9e:1.44.0.4
	cr-0x9d:1.43.0.8
	corinna-01:1.43
	cr-0x9c:1.43.0.4
	cr-0x9b:1.43.0.6
	cr-0x99:1.43
	Z-emcb-cygwin_daemon:1.43.0.2
	w32api-2_2:1.35
	mingw-runtime-2_4:1.35
	cygnus_cvs_20020108_pre:1.14
	Z-cygwin_daemon_merge-new_HEAD:1.9
	Z-cygwin_daemon_merge_HEAD:1.9
	cygwin_daemon:1.9.0.2;
locks; strict;
comment	@# @;
expand	@o@;


1.102
date	2013.05.10.15.58.48;	author tangent;	state dead;
branches;
next	1.101;

1.101
date	2012.12.14.11.11.17;	author corinna;	state Exp;
branches;
next	1.100;

1.100
date	2012.02.24.10.19.01;	author yselkowitz;	state Exp;
branches;
next	1.99;

1.99
date	2012.02.04.11.42.04;	author corinna;	state Exp;
branches;
next	1.98;

1.98
date	2012.01.29.09.41.06;	author corinna;	state Exp;
branches;
next	1.97;

1.97
date	2011.12.01.13.06.13;	author corinna;	state Exp;
branches;
next	1.96;

1.96
date	2011.10.11.21.53.57;	author yselkowitz;	state Exp;
branches;
next	1.95;

1.95
date	2011.10.10.14.57.48;	author corinna;	state Exp;
branches;
next	1.94;

1.94
date	2011.10.10.09.50.43;	author corinna;	state Exp;
branches;
next	1.93;

1.93
date	2011.04.13.11.42.43;	author jturney;	state Exp;
branches;
next	1.92;

1.92
date	2011.04.04.09.09.43;	author corinna;	state Exp;
branches;
next	1.91;

1.91
date	2010.08.11.11.01.14;	author corinna;	state Exp;
branches;
next	1.90;

1.90
date	2010.06.29.15.12.52;	author corinna;	state Exp;
branches;
next	1.89;

1.89
date	2010.04.29.10.53.31;	author corinna;	state Exp;
branches;
next	1.88;

1.88
date	2010.02.26.10.47.05;	author yselkowitz;	state Exp;
branches;
next	1.87;

1.87
date	2010.02.25.16.42.59;	author corinna;	state Exp;
branches;
next	1.86;

1.86
date	2010.02.22.20.39.18;	author cgf;	state Exp;
branches;
next	1.85;

1.85
date	2010.02.19.17.55.27;	author cgf;	state Exp;
branches;
next	1.84;

1.84
date	2010.02.17.15.01.56;	author corinna;	state Exp;
branches;
next	1.83;

1.83
date	2010.02.11.11.39.23;	author corinna;	state Exp;
branches;
next	1.82;

1.82
date	2010.01.22.22.31.50;	author corinna;	state Exp;
branches;
next	1.81;

1.81
date	2009.12.16.14.02.57;	author corinna;	state Exp;
branches;
next	1.80;

1.80
date	2009.10.31.13.26.37;	author corinna;	state Exp;
branches;
next	1.79;

1.79
date	2009.07.22.10.20.26;	author corinna;	state Exp;
branches;
next	1.78;

1.78
date	2009.05.17.11.16.12;	author corinna;	state Exp;
branches;
next	1.77;

1.77
date	2009.05.14.03.25.45;	author cgf;	state Exp;
branches;
next	1.76;

1.76
date	2009.04.03.11.50.26;	author corinna;	state Exp;
branches;
next	1.75;

1.75
date	2009.03.27.10.16.13;	author corinna;	state Exp;
branches;
next	1.74;

1.74
date	2009.03.23.20.40.17;	author corinna;	state Exp;
branches;
next	1.73;

1.73
date	2009.03.09.09.20.38;	author corinna;	state Exp;
branches;
next	1.72;

1.72
date	2009.03.02.10.56.19;	author corinna;	state Exp;
branches;
next	1.71;

1.71
date	2008.12.16.10.56.33;	author corinna;	state Exp;
branches;
next	1.70;

1.70
date	2008.12.13.22.43.54;	author cgf;	state Exp;
branches;
next	1.69;

1.69
date	2008.11.26.10.19.09;	author corinna;	state Exp;
branches;
next	1.68;

1.68
date	2008.08.13.16.35.04;	author corinna;	state Exp;
branches;
next	1.67;

1.67
date	2008.07.25.07.08.56;	author corinna;	state Exp;
branches;
next	1.66;

1.66
date	2008.07.23.18.09.50;	author corinna;	state Exp;
branches;
next	1.65;

1.65
date	2008.07.23.11.41.10;	author corinna;	state Exp;
branches;
next	1.64;

1.64
date	2008.07.22.14.40.05;	author corinna;	state Exp;
branches;
next	1.63;

1.63
date	2008.07.17.10.32.03;	author corinna;	state Exp;
branches;
next	1.62;

1.62
date	2007.01.09.12.17.05;	author corinna;	state Exp;
branches;
next	1.61;

1.61
date	2006.10.19.09.08.44;	author corinna;	state Exp;
branches;
next	1.60;

1.60
date	2006.10.16.18.00.06;	author corinna;	state Exp;
branches;
next	1.59;

1.59
date	2006.03.03.09.43.35;	author corinna;	state Exp;
branches
	1.59.4.1;
next	1.58;

1.58
date	2006.02.16.11.17.19;	author corinna;	state Exp;
branches;
next	1.57;

1.57
date	2005.12.29.20.46.34;	author cgf;	state Exp;
branches;
next	1.56;

1.56
date	2005.12.05.16.39.06;	author cgf;	state Exp;
branches;
next	1.55;

1.55
date	2005.11.22.17.19.17;	author cgf;	state Exp;
branches;
next	1.54;

1.54
date	2005.10.03.16.39.29;	author cgf;	state Exp;
branches;
next	1.53;

1.53
date	2005.05.01.15.50.02;	author cgf;	state Exp;
branches;
next	1.52;

1.52
date	2005.04.20.12.25.43;	author corinna;	state Exp;
branches;
next	1.51;

1.51
date	2005.02.24.04.32.45;	author joshuadfranklin;	state Exp;
branches;
next	1.50;

1.50
date	2004.12.24.21.58.38;	author joshuadfranklin;	state Exp;
branches;
next	1.49;

1.49
date	2004.07.12.16.52.16;	author corinna;	state Exp;
branches;
next	1.48;

1.48
date	2004.06.11.18.25.06;	author joshuadfranklin;	state Exp;
branches;
next	1.47;

1.47
date	2004.02.25.01.23.20;	author cgf;	state Exp;
branches;
next	1.46;

1.46
date	2004.02.11.04.10.47;	author joshuadfranklin;	state Exp;
branches;
next	1.45;

1.45
date	2004.01.24.08.10.27;	author joshuadfranklin;	state Exp;
branches;
next	1.44;

1.44
date	2004.01.20.01.00.20;	author joshuadfranklin;	state Exp;
branches;
next	1.43;

1.43
date	2003.08.05.01.06.22;	author cgf;	state Exp;
branches;
next	1.42;

1.42
date	2003.07.04.03.20.22;	author cgf;	state Exp;
branches;
next	1.41;

1.41
date	2003.07.04.03.11.18;	author cgf;	state Exp;
branches;
next	1.40;

1.40
date	2003.04.26.22.33.00;	author joshuadfranklin;	state Exp;
branches;
next	1.39;

1.39
date	2003.04.10.23.27.13;	author joshuadfranklin;	state Exp;
branches;
next	1.38;

1.38
date	2003.03.27.18.46.16;	author cgf;	state Exp;
branches;
next	1.37;

1.37
date	2003.03.12.17.21.31;	author cgf;	state Exp;
branches;
next	1.36;

1.36
date	2003.03.01.17.29.51;	author joshuadfranklin;	state Exp;
branches;
next	1.35;

1.35
date	2003.02.03.00.30.45;	author joshuadfranklin;	state Exp;
branches;
next	1.34;

1.34
date	2002.08.21.15.42.18;	author cgf;	state Exp;
branches;
next	1.33;

1.33
date	2002.07.16.03.12.55;	author cgf;	state Exp;
branches;
next	1.32;

1.32
date	2002.07.11.02.06.50;	author cgf;	state Exp;
branches;
next	1.31;

1.31
date	2002.07.10.00.30.53;	author cgf;	state Exp;
branches;
next	1.30;

1.30
date	2002.07.09.04.27.47;	author cgf;	state Exp;
branches;
next	1.29;

1.29
date	2002.07.08.16.30.01;	author cgf;	state Exp;
branches;
next	1.28;

1.28
date	2002.07.07.00.55.51;	author cgf;	state Exp;
branches;
next	1.27;

1.27
date	2002.06.25.01.16.23;	author cgf;	state Exp;
branches;
next	1.26;

1.26
date	2002.06.12.16.06.10;	author cgf;	state Exp;
branches;
next	1.25;

1.25
date	2002.06.07.19.25.26;	author cgf;	state Exp;
branches;
next	1.24;

1.24
date	2002.06.07.11.12.16;	author corinna;	state Exp;
branches;
next	1.23;

1.23
date	2002.06.07.01.36.17;	author cgf;	state Exp;
branches;
next	1.22;

1.22
date	2002.06.02.17.46.38;	author cgf;	state Exp;
branches;
next	1.21;

1.21
date	2002.05.22.10.05.41;	author corinna;	state Exp;
branches;
next	1.20;

1.20
date	2002.05.15.11.36.00;	author corinna;	state Exp;
branches;
next	1.19;

1.19
date	2002.05.13.05.25.14;	author cgf;	state Exp;
branches;
next	1.18;

1.18
date	2002.05.13.05.18.34;	author cgf;	state Exp;
branches;
next	1.17;

1.17
date	2002.05.12.04.29.54;	author cgf;	state Exp;
branches;
next	1.16;

1.16
date	2002.02.28.00.08.52;	author cgf;	state Exp;
branches;
next	1.15;

1.15
date	2002.01.17.16.54.01;	author corinna;	state Exp;
branches;
next	1.14;

1.14
date	2001.12.04.04.15.15;	author cgf;	state Exp;
branches;
next	1.13;

1.13
date	2001.12.04.04.14.37;	author cgf;	state Exp;
branches;
next	1.12;

1.12
date	2001.12.04.04.12.39;	author cgf;	state Exp;
branches;
next	1.11;

1.11
date	2001.11.12.00.10.12;	author cgf;	state Exp;
branches;
next	1.10;

1.10
date	2001.10.08.03.06.25;	author cgf;	state Exp;
branches;
next	1.9;

1.9
date	2001.09.19.22.06.33;	author cgf;	state Exp;
branches;
next	1.8;

1.8
date	2001.07.19.15.27.59;	author cgf;	state Exp;
branches;
next	1.7;

1.7
date	2001.01.10.22.34.02;	author cgf;	state Exp;
branches;
next	1.6;

1.6
date	2000.11.19.04.55.49;	author cgf;	state Exp;
branches;
next	1.5;

1.5
date	2000.10.28.05.00.00;	author cgf;	state Exp;
branches;
next	1.4;

1.4
date	2000.09.19.01.26.45;	author cgf;	state Exp;
branches;
next	1.3;

1.3
date	2000.05.19.17.06.28;	author dj;	state Exp;
branches;
next	1.2;

1.2
date	2000.04.19.00.55.19;	author dj;	state Exp;
branches;
next	1.1;

1.1
date	2000.02.17.19.38.31;	author cgf;	state Exp;
branches
	1.1.1.1;
next	;

1.59.4.1
date	2007.12.07.09.40.33;	author corinna;	state Exp;
branches;
next	;

1.1.1.1
date	2000.02.17.19.38.31;	author cgf;	state Exp;
branches;
next	;


desc
@@


1.102
log
@- Added <?xml> and <!DOCTYPE> tags to the top of utils.xml and pretty-
  printed it.
- Removed obsolete utils.sgml
- Added a ChangeLog entry for this replacement, which partially took
  place days ago.  This checkin formalizes the switch from SGML to
  DocBook XML for this file.
@
text
@<sect1 id="using-utils"><title>Cygwin Utilities</title>

<para>Cygwin comes with a number of command-line utilities that are
used to manage the UNIX emulation portion of the Cygwin environment.
While many of these reflect their UNIX counterparts, each was written
specifically for Cygwin.  You may use the long or short option names 
interchangeably; for example, <literal>--help</literal> and 
<literal>-h</literal> function identically. All of the Cygwin 
command-line utilities support the <literal>--help</literal> and
<literal>--version</literal> options. 
</para>

<sect2 id="cygcheck"><title>cygcheck</title>

<screen>
Usage: cygcheck [-v] [-h] PROGRAM
       cygcheck -c [-d] [PACKAGE]
       cygcheck -s [-r] [-v] [-h]
       cygcheck -k
       cygcheck -f FILE [FILE]...
       cygcheck -l [PACKAGE]...
       cygcheck -p REGEXP
       cygcheck --delete-orphaned-installation-keys
       cygcheck --enable-unique-object-names Cygwin-DLL
       cygcheck --disable-unique-object-names Cygwin-DLL
       cygcheck --show-unique-object-names Cygwin-DLL
       cygcheck -h

List system information, check installed packages, or query package database.

At least one command option or a PROGRAM is required, as shown above.

  PROGRAM              list library (DLL) dependencies of PROGRAM
  -c, --check-setup    show installed version of PACKAGE and verify integrity
                       (or for all installed packages if none specified)
  -d, --dump-only      just list packages, do not verify (with -c)
  -s, --sysinfo        produce diagnostic system information (implies -c -d)
  -r, --registry       also scan registry for Cygwin settings (with -s)
  -k, --keycheck       perform a keyboard check session (must be run from a
                       plain console only, not from a pty/rxvt/xterm)
  -f, --find-package   find the package to which FILE belongs
  -l, --list-package   list contents of PACKAGE (or all packages if none given)
  -p, --package-query  search for REGEXP in the entire cygwin.com package
                       repository (requires internet connectivity)
  --delete-orphaned-installation-keys
                       Delete installation keys of old, now unused
                       installations from the registry.  Requires the right
                       to change the registry.
  --enable-unique-object-names Cygwin-DLL
  --disable-unique-object-names Cygwin-DLL
  --show-unique-object-names Cygwin-DLL
                       Enable, disable, or show the setting of the
                       \"unique object names\" setting in the Cygwin DLL
                       given as argument to this option.  The DLL path must
                       be given as valid Windows(!) path.
                       See the users guide for more information.
                       If you don't know what this means, don't change it.
  -v, --verbose        produce more verbose output
  -h, --help           annotate output with explanatory comments when given
                       with another command, otherwise print this help
  -V, --version        print the version of cygcheck and exit

Note: -c, -f, and -l only report on packages that are currently installed. To
  search all official Cygwin packages use -p instead.  The -p REGEXP matches
  package names, descriptions, and names of files/paths within all packages.
</screen>

<para>
The <command>cygcheck</command> program is a diagnostic utility for
dealing with Cygwin programs. If you are familiar with
<command>dpkg</command> or <command>rpm</command>,
<command>cygcheck</command> is similar in many ways. (The major difference
is that <command>setup.exe</command> handles installing and uninstalling
packages; see <xref linkend="internet-setup"></xref> for more information.)
</para>
<para>
The <literal>-c</literal> option checks the version and status of 
installed Cygwin packages. If you specify one or more package names,
<command>cygcheck</command> will limit its output to those packages,
or with no arguments it lists all packages. A package will be marked
<literal>Incomplete</literal> if files originally installed are no longer
present. The best thing to do in that situation is reinstall the package
with <command>setup.exe</command>. To see which files are missing, use the
<literal>-v</literal> option. If you do not need to know the status
of each package and want <command>cygcheck</command> to run faster, add the
<literal>-d</literal> option and <command>cygcheck</command> will only
output the name and version for each package.
</para>
<para>
If you list one or more programs on the command line,
<command>cygcheck</command> will diagnose the runtime environment of that
program or programs, providing the names of DLL files on which the program
depends.  If you specify the <literal>-s</literal> option,
<command>cygcheck</command> will give general system information.  If you
list one or more programs on the command line and specify
<literal>-s</literal>, <command>cygcheck</command> will report on
both.</para>
<para>
The <literal>-f</literal> option helps you to track down which package a
file came from, and <literal>-l</literal> lists all files in a package.
For example, to find out about <filename>/usr/bin/less</filename> and its
package:
<example id="utils-cygcheck-ex"><title>Example <command>cygcheck</command> usage</title>
<screen>
$ cygcheck -f /usr/bin/less
less-381-1

$ cygcheck -l less
/usr/bin/less.exe
/usr/bin/lessecho.exe
/usr/bin/lesskey.exe
/usr/man/man1/less.1
/usr/man/man1/lesskey.1
</screen>
</example>
</para>

<para>The <literal>-h</literal> option prints additional helpful
messages in the report, at the beginning of each section.  It also
adds table column headings.  While this is useful information, it also
adds some to the size of the report, so if you want a compact report
or if you know what everything is already, just leave this out.</para>

<para>The <literal>-v</literal> option causes the output to be more
verbose.  What this means is that additional information will be
reported which is usually not interesting, such as the internal
version numbers of DLLs, additional information about recursive DLL
usage, and if a file in one directory in the PATH also occurs in other
directories on the PATH.  </para>

<para>The <literal>-r</literal> option causes
<command>cygcheck</command> to search your registry for information
that is relevant to Cygwin programs.  These registry entries are the
ones that have "Cygwin" in the name.  If you are paranoid about
privacy, you may remove information from this report, but please keep
in mind that doing so makes it harder to diagnose your problems.</para>

<para>In contrast to the other options that search the packages that are
installed on your local system, the <literal>-p</literal> option can be used
to search the entire official Cygwin package repository.  It takes as argument
a Perl-compatible regular expression which is used to match package names, 
package descriptions, and path/filenames of the contents of packages.  This
feature requires an active internet connection, since it must query the
<literal>cygwin.com</literal> web site.  In fact, it is equivalent to the
search that is available on the <ulink url="http://cygwin.com/packages/">Cygwin
package listing</ulink> page.</para>

<para>For example, perhaps you are getting an error because you are missing a
certain DLL and you want to know which package includes that file:
<example id="utils-search-ex"><title>Searching all packages for a file</title>
<screen>
$ cygcheck -p 'cygintl-2\.dll'
Found 1 matches for 'cygintl-2\.dll'.

libintl2-0.12.1-3         GNU Internationalization runtime library

$ cygcheck -p 'libexpat.*\.a'
Found 2 matches for 'libexpat.*\.a'.

expat-1.95.7-1            XML parser library written in C
expat-1.95.8-1            XML parser library written in C

$ cygcheck -p '/ls\.exe'
Found 2 matches for '/ls\.exe'.

coreutils-5.2.1-5         GNU core utilities (includes fileutils, sh-utils and textutils)
coreutils-5.3.0-6         GNU core utilities (includes fileutils, sh-utils and textutils)
</screen>
</example>
</para>

<para>Note that this option takes a regular expression, not a glob or wildcard.
This means that you need to use <literal>.*</literal> if you want something
similar to the wildcard <literal>*</literal> commonly used in filename globbing.
Similarly, to match the period character you should use <literal>\.</literal>
since the <literal>.</literal> character in a regexp is a metacharacter that
will match any character.  Also be aware that the characters such as 
<literal>\</literal> and <literal>*</literal> are shell metacharacters, so 
they must be either escaped or quoted, as in the example above.</para>

<para>The third example above illustrates that if you want to match a whole 
filename, you should include the <literal>/</literal> path seperator.  In the
given example this ensures that filenames that happen to end in
<literal>ls.exe</literal> such as <literal>ncftpls.exe</literal> are not shown.
Note that this use does not mean "look for packages with <literal>ls</literal>
in the root directory," since the <literal>/</literal> can match anywhere in the
path.  It's just there to anchor the match so that it matches a full
filename.</para>

<para>By default the matching is case-sensitive.  To get a case insensitive
match, begin your regexp with <literal>(?i)</literal> which is a PCRE-specific
feature.  For complete documentation on Perl-compatible regular expression
syntax and options, read the <command>perlre</command> manpage, or one of many
websites such as <literal>perldoc.com</literal> that document the Perl
language.</para>

<para>The <command>cygcheck</command> program should be used to send
information about your system for troubleshooting when requested.  
When asked to run this command save the output so that you can email it,
for example:</para>

<screen>
<prompt>$</prompt> <userinput>cygcheck -s -v -r -h &gt; cygcheck_output.txt</userinput>
</screen>

<para>
Each Cygwin DLL stores its path and installation key in the registry.
This allows troubleshooting of problems which could be a result of having
multiple concurrent Cygwin installations.  However, if you're experimenting
a lot with different Cygwin installation paths, your registry could 
accumulate a lot of old Cygwin installation entries for which the
installation doesn't exist anymore.  To get rid of these orphaned registry
entries, use the <command>cygcheck --delete-orphaned-installation-keys</command>
command.</para>

<para>
Each Cygwin DLL generates a key value from its installation path.  This
value is not only stored in the registry, it's also used to generate
global object names used for interprocess communication.   This keeps
different Cygwin installations separate.  Processes running under a
Cygwin DLL installed in C:\cygwin don't see processes running under a
Cygwin DLL installed in C:\Program Files\cygwin.  This allows
running multiple versions of Cygwin DLLs without these versions to
interfere with each other, or to run small third-party installations
for a specific purpose independently from a Cygwin net distribution.
</para>

<para>
For debugging purposes it could be desired that the various Cygwin DLLs
use the same key, independently from their installation paths.  If the
DLLs have different versions, trying to run processes under these DLLs
concurrently will result in error messages like this one:</para>

<screen>
*** shared version mismatch detected - 0x8A88009C/0x75BE0074.
This problem is probably due to using incompatible versions of the Cygwin DLL.
Search for cygwin1.dll using the Windows Start->Find/Search facility
and delete all but the most recent version.  The most recent version *should*
reside in x:\\cygwin\\bin, where 'x' is the drive on which you have
installed the cygwin distribution.  Rebooting is also suggested if you
are unable to find another Cygwin DLL.
</screen>

<para>
To disable the usage of a unique key value of a certain Cygwin DLL, use
the <command>cygcheck --disable-unique-object-names Cygwin-DLL</command>
command.  <literal>Cygwin-DLL</literal> is the Windows path (*not* a 
Cygwin POSIX path) to the DLL for which you want to disable this feature.
Note that you have to stop all Cygwin processes running under this DLL,
before you're allowed to change this setting.  For instance, run
<command>cygcheck</command> from a DOS command line for this purpose.</para>

<para>To re-enable the usage of a unique key, use the
<command>cygcheck --enable-unique-object-names Cygwin-DLL</command> command.
This option has the same characteristics as the
<literal>--disable-unique-object-names</literal> option</para>

<para>Finally, you can use
<command>cygcheck --show-unique-object-names Cygwin-DLL</command> to find out
if the given Cygwin DLL use unique object names or not.  In contrast to the
<literal>--disable-...</literal> and <literal>--enable-...</literal> options,
the <literal>--show-unique-object-names</literal> option also works for
Cygwin DLLs which are currently in use.</para>

</sect2>

<sect2 id="cygpath"><title>cygpath</title>

<screen>
Usage: cygpath (-d|-m|-u|-w|-t TYPE) [-f FILE] [OPTION]... NAME...
       cygpath [-c HANDLE] 
       cygpath [-ADHOPSW] 
       cygpath [-F ID] 

Convert Unix and Windows format paths, or output system path information

Output type options:

  -d, --dos             print DOS (short) form of NAMEs (C:\PROGRA~1\)
  -m, --mixed           like --windows, but with regular slashes (C:/WINNT)
  -M, --mode            report on mode of file (currently binmode or textmode)
  -u, --unix            (default) print Unix form of NAMEs (/cygdrive/c/winnt)
  -w, --windows         print Windows form of NAMEs (C:\WINNT)
  -t, --type TYPE       print TYPE form: 'dos', 'mixed', 'unix', or 'windows'

Path conversion options:

  -a, --absolute        output absolute path
  -l, --long-name       print Windows long form of NAMEs (with -w, -m only)
  -p, --path            NAME is a PATH list (i.e., '/bin:/usr/bin')
  -s, --short-name      print DOS (short) form of NAMEs (with -w, -m only)
  -C, --codepage CP     print DOS, Windows, or mixed pathname in Windows
                        codepage CP.  CP can be a numeric codepage identifier,
                        or one of the reserved words ANSI, OEM, or UTF8.
                        If this option is missing, cygpath defaults to the
                        character set defined by the current locale.

System information:

  -A, --allusers        use `All Users' instead of current user for -D, -P
  -D, --desktop         output `Desktop' directory and exit
  -H, --homeroot        output `Profiles' directory (home root) and exit
  -O, --mydocs          output `My Documents' directory and exit
  -P, --smprograms      output Start Menu `Programs' directory and exit
  -S, --sysdir          output system directory and exit
  -W, --windir          output `Windows' directory and exit
  -F, --folder ID       output special folder with numeric ID and exit

Other options:

  -f, --file FILE       read FILE for input; use - to read from STDIN
  -o, --option          read options from FILE as well (for use with --file)
  -c, --close HANDLE    close HANDLE (for use in captured process)
  -i, --ignore          ignore missing argument
  -h, --help            output usage information and exit
  -V, --version         output version information and exit
</screen>

<para>The <command>cygpath</command> program is a utility that
converts Windows native filenames to Cygwin POSIX-style pathnames and
vice versa.  It can be used when a Cygwin program needs to pass a file 
name to a native Windows program, or expects to get a file name from a
native Windows program.  Alternatively, <command>cygpath</command> can 
output information about the location of important system directories 
in either format.  
</para>

<para>The <literal>-u</literal> and <literal>-w</literal> options
indicate whether you want a conversion to UNIX (POSIX) format 
(<literal>-u</literal>) or to Windows format (<literal>-w</literal>).  
Use the <literal>-d</literal> to get DOS-style (8.3) file and path names.
The <literal>-m</literal> option will output Windows-style format
but with forward slashes instead of backslashes.  This option is 
especially useful in shell scripts, which use backslashes as an escape 
character.</para>

<para> In combination with the <literal>-w</literal> option, you can use
the <literal>-l</literal> and <literal>-s</literal> options to use normal
(long) or DOS-style (short) form. The <literal>-d</literal> option is 
identical to <literal>-w</literal> and <literal>-s</literal> together.
</para>

<para>The <literal>-C</literal> option allows to specify a Windows codepage
to print DOS and Windows paths created with one of the <literal>-d</literal>,
<literal>-m</literal>, or <literal>-w</literal> options.  The default is to
use the character set of the current locale defined by one of the
internationalization environment variables <envar>LC_ALL</envar>,
<envar>LC_CTYPE</envar>, or <envar>LANG</envar>, see
<xref linkend="setup-locale"></xref>.  This is sometimes not sufficient for
interaction with native Windows tools, which might expect native, non-ASCII
characters in a specific Windows codepage.  Console tools, for instance, might
expect pathnames in the current OEM codepage, while graphical tools like
Windows Explorer might expect pathnames in the current ANSI codepage.</para>

<para>The <literal>-C</literal> option takes a single parameter:</para>
<itemizedlist spacing="compact">
<listitem><para><literal>ANSI</literal>, to specify the current ANSI codepage</para></listitem>
<listitem><para><literal>OEM</literal>, to specify the current OEM (console) codepage</para></listitem>
<listitem><para><literal>UTF8</literal>, to specify UTF-8.</para></listitem>
<listitem><para>A numerical, decimal codepage number, for instance 936 for GBK,
28593 for ISO-8859-3, etc.  A full list of supported codepages is listed on the
Microsoft MSDN page
<ulink url="http://msdn.microsoft.com/en-us/library/dd317756(VS.85).aspx">Code Page Identifiers</ulink>.  A codepage of 0 is the same as if the
<literal>-C</literal> hasn't been specified at all.</para></listitem>
</itemizedlist>

<para>The <literal>-p</literal> option means that you want to convert
a path-style string rather than a single filename.  For example, the
PATH environment variable is semicolon-delimited in Windows, but
colon-delimited in UNIX.  By giving <literal>-p</literal> you are
instructing <command>cygpath</command> to convert between these
formats.</para>

<para>The <literal>-i</literal> option supresses the print out of the
usage message if no filename argument was given.  It can be used in
make file rules converting variables that may be omitted
to a proper format.  Note that <command>cygpath</command> output may 
contain spaces (C:\Program Files) so should be enclosed in quotes.
</para>


<example id="utils-cygpath-ex"><title>Example <command>cygpath</command> usage</title>
<screen>
<![CDATA[
#!/bin/sh
if [ "${1}" = "" ];
	then
		XPATH=".";
	else
		XPATH="$(cygpath -C ANSI -w "${1}")";
fi
explorer $XPATH &
]]>
</screen>
</example>

<para>The capital options 
<literal>-D</literal>, <literal>-H</literal>, <literal>-P</literal>, 
<literal>-S</literal>, and <literal>-W</literal> output directories used 
by Windows that are not the same on all systems, for example 
<literal>-S</literal> might output C:\WINNT\system32 or C:\Windows\System32. 
The <literal>-H</literal> shows the Windows profiles directory that can 
be used as root of home.  The <literal>-A</literal> option forces use of 
the "All Users" directories instead of the current user for the 
<literal>-D</literal>, <literal>-O</literal> and <literal>-P</literal> 
options.
The <literal>-F</literal> outputs other special folders specified by
their internal numeric code (decimal or 0x-prefixed hex). For valid codes and
symbolic names, see the CSIDL_* definitions in the include file
/usr/include/w32api/shlobj.h from package w32api. The current valid
range of codes for folders is 0 (Desktop) to 59 (CDBurn area).
By default the output is in UNIX (POSIX) format; 
use the <literal>-w</literal> or <literal>-d</literal> options to get
other formats.</para>

</sect2>

<sect2 id="dumper"><title>dumper</title>

<screen>
Usage: dumper [OPTION] FILENAME WIN32PID

Dump core from WIN32PID to FILENAME.core

-d, --verbose  be verbose while dumping
-h, --help     output help information and exit
-q, --quiet    be quiet while dumping (default)
-V, --version  output version information and exit
</screen>

<para>The <command>dumper</command> utility can be used to create a
core dump of running Windows process. This core dump can be later loaded
to <command>gdb</command> and analyzed. One common way to use 
<command>dumper</command> is to plug it into cygwin's Just-In-Time 
debugging facility by adding

<screen>
error_start=x:\path\to\dumper.exe
</screen>

to the <emphasis>CYGWIN</emphasis> environment variable. Please note that
<literal>x:\path\to\dumper.exe</literal> is Windows-style and not cygwin
path. If <literal>error_start</literal> is set this way, then dumper will
be started whenever some program encounters a fatal error.
</para>

<para>
<command>dumper</command> can be also be started from the command line to 
create a core dump of any running process. Unfortunately, because of a Windows 
API limitation, when a core dump is created and <command>dumper</command> 
exits, the target process is terminated too.
</para>

<para>
To save space in the core dump, <command>dumper</command> doesn't write those
portions of target process' memory space that are loaded from executable and
dll files and are unchangeable, such as program code and debug info. Instead,
<command>dumper</command> saves paths to files which contain that data. When a
core dump is loaded into gdb, it uses these paths to load appropriate files.
That means that if you create a core dump on one machine and try to debug it on
another, you'll need to place identical copies of the executable and dlls in 
the same directories as on the machine where the core dump was created.
</para>

</sect2>

<sect2 id="getconf"><title>getconf</title>

<screen>
Usage: getconf [-v specification] variable_name [pathname]
       getconf -a [pathname]

Get configuration values

  -v specification     Indicate specific version for which configuration
                       values shall be fetched.
  -a, --all            Print all known configuration values

Other options:

  -h, --help           This text
  -V, --version        Print program version and exit
</screen>

<para>The <command>getconf</command> utility prints the value of the
configuration variable specified by <literal>variable_name</literal>.
If no <literal>pathname</literal> is given, <command>getconf</command>
serves as a wrapper for the <literal>confstr</literal> and
<literal>sysconf</literal> functions, supporting the symbolic constants
defined in the <literal>limits.h</literal> and <literal>unistd.h</literal>
headers, without their respective <literal>_CS_</literal> or
<literal>_SC_</literal> prefixes.
</para>

<para>If <literal>pathname</literal> is given, <command>getconf</command>
prints the value of the configuration variable for the specified pathname.
In this form, <command>getconf</command> serves as a wrapper for the
<literal>pathconf</literal> function, supporting the symbolic constants defined
in the <literal>unistd.h</literal> header, without the <literal>_PC_</literal> 
prefix. </para>

<para>If you specify the <literal>-v</literal> option, the parameter
denotes a specification for which the value of the configuration variable
should be printed. Note that the only specifications supported by Cygwin
are <literal>POSIX_V7_ILP32_OFFBIG</literal> and the legacy
<literal>POSIX_V6_ILP32_OFFBIG</literal> and
<literal>XBS5_ILP32_OFFBIG</literal> equivalents.</para>

<para>Use the <literal>-a</literal> option to print a list of all available
configuration variables for the system, or given <literal>pathname</literal>,
and their values.</para>

</sect2>

<sect2 id="getfacl"><title>getfacl</title>

<screen>
Usage: getfacl [-adn] FILE [FILE2...]

Display file and directory access control lists (ACLs).

  -a, --all      display the filename, the owner, the group, and
                 the ACL of the file
  -d, --dir      display the filename, the owner, the group, and
                 the default ACL of the directory, if it exists
  -h, --help     output usage information and exit
  -n, --noname   display user and group IDs instead of names
  -V, --version  output version information and exit

When multiple files are specified on the command line, a blank
line separates the ACLs for each file.
</screen>

<para>
For each argument that is a regular file, special file or
directory, <command>getfacl</command> displays the owner, the group, and the 
ACL.  For directories <command>getfacl</command> displays additionally the 
default ACL.  With no options specified, <command>getfacl</command> displays 
the filename, the owner, the group, and both the ACL and the default ACL, if 
it exists. For more information on Cygwin and Windows ACLs, see
<xref linkend="ntsec"></xref> in the Cygwin User's Guide.
The format for ACL output is as follows:
<screen>
     # file: filename
     # owner: name or uid
     # group: name or uid
     user::perm
     user:name or uid:perm
     group::perm
     group:name or gid:perm
     mask:perm
     other:perm
     default:user::perm
     default:user:name or uid:perm
     default:group::perm
     default:group:name or gid:perm
     default:mask:perm
     default:other:perm
</screen>
</para>
</sect2>

<sect2 id="kill"><title>kill</title>

<screen>
Usage: kill [-f] [-signal] [-s signal] pid1 [pid2 ...]
       kill -l [signal]

Send signals to processes

 -f, --force     force, using win32 interface if necessary
 -l, --list      print a list of signal names
 -s, --signal    send signal (use kill --list for a list)
 -h, --help      output usage information and exit
 -V, --version   output version information and exit
</screen>

<para>The <command>kill</command> program allows you to send arbitrary
signals to other Cygwin programs.  The usual purpose is to end a
running program from some other window when ^C won't work, but you can
also send program-specified signals such as SIGUSR1 to trigger actions
within the program, like enabling debugging or re-opening log files.
Each program defines the signals they understand.</para>

<para>You may need to specify the full path to use <command>kill</command> 
from within some shells, including <command>bash</command>, the default Cygwin
shell. This is because <command>bash</command> defines a 
<command>kill</command> builtin function; see the <command>bash</command>
man page under <emphasis>BUILTIN COMMANDS</emphasis> for more information.
To make sure you are using the Cygwin version, try

<screen>
$ /bin/kill --version
</screen>

which should give the Cygwin <command>kill</command> version number and
copyright information.
</para>

<para>Unless you specific the <literal>-f</literal> option, the "pid" values 
used by <command>kill</command> are the Cygwin pids, not the Windows pids.  
To get a list of running programs and their Cygwin pids, use the Cygwin
<command>ps</command> program. <command>ps -W</command> will display
<emphasis>all</emphasis> windows pids.</para>

<para>The <command>kill -l</command> option prints the name of the
given signal, or a list of all signal names if no signal is given.</para>

<para>To send a specific signal, use the <literal>-signN</literal>
option, either with a signal number or a signal name (minus the "SIG"
part), as shown in these examples:</para>

<example id="utils-kill-ex"><title>Using the kill command</title>
<screen>
<prompt>$</prompt> <userinput>kill 123</userinput>
<prompt>$</prompt> <userinput>kill -1 123</userinput>
<prompt>$</prompt> <userinput>kill -HUP 123</userinput>
<prompt>$</prompt> <userinput>kill -f 123</userinput>
</screen>
</example>

<para>Here is a list of available signals, their numbers, and some
commentary on them, from the file
<literal>&lt;sys/signal.h&gt;</literal>, which should be considered
the official source of this information.</para>

<screen>
SIGHUP       1    hangup
SIGINT       2    interrupt
SIGQUIT      3    quit
SIGILL       4    illegal instruction (not reset when caught)
SIGTRAP      5    trace trap (not reset when caught)
SIGABRT      6    used by abort
SIGEMT       7    EMT instruction
SIGFPE       8    floating point exception
SIGKILL      9    kill (cannot be caught or ignored)
SIGBUS      10    bus error
SIGSEGV     11    segmentation violation
SIGSYS      12    bad argument to system call
SIGPIPE     13    write on a pipe with no one to read it
SIGALRM     14    alarm clock
SIGTERM     15    software termination signal from kill
SIGURG      16    urgent condition on IO channel
SIGSTOP     17    sendable stop signal not from tty
SIGTSTP     18    stop signal from tty
SIGCONT     19    continue a stopped process
SIGCHLD     20    to parent on child stop or exit
SIGCLD      20    System V name for SIGCHLD
SIGTTIN     21    to readers pgrp upon background tty read
SIGTTOU     22    like TTIN for output if (tp-&gt;t_local&amp;LTOSTOP)
SIGIO       23    input/output possible
SIGPOLL     23    System V name for SIGIO
SIGXCPU     24    exceeded CPU time limit
SIGXFSZ     25    exceeded file size limit
SIGVTALRM   26    virtual time alarm
SIGPROF     27    profiling time alarm
SIGWINCH    28    window changed
SIGLOST     29    resource lost (eg, record-lock lost)
SIGPWR      29    power failure
SIGUSR1     30    user defined signal 1
SIGUSR2     31    user defined signal 2
</screen>

</sect2>

<sect2 id="ldd"><title>ldd</title>

<screen>
Usage: ldd [OPTION]... FILE...

Print shared library dependencies

  -h, --help              print this help and exit
  -V, --version           print version information and exit
  -r, --function-relocs   process data and function relocations
                          (currently unimplemented)
  -u, --unused            print unused direct dependencies
                          (currently unimplemented)
  -v, --verbose           print all information
                          (currently unimplemented)
</screen>

<para><command>ldd</command> prints the shared libraries (DLLs) an executable
or DLL is linked against.  No modifying option is implemented yet.</para>

</sect2>

<sect2 id="locale"><title>locale</title>

<screen>
Usage: locale [-amvhV]
   or: locale [-ck] NAME
   or: locale [-usfnU]

Get locale-specific information.

System information:

  -a, --all-locales    List all available supported locales
  -m, --charmaps       List all available character maps
  -v, --verbose        More verbose output

Modify output format:

  -c, --category-name  List information about given category NAME
  -k, --keyword-name   Print information about given keyword NAME

Default locale information:

  -u, --user           Print locale of user's default UI language
  -s, --system         Print locale of system default UI language
  -f, --format         Print locale of user's regional format settings
                       (time, numeric &amp; monetary)
  -n, --no-unicode     Print system default locale for non-Unicode programs
  -U, --utf            Attach \".UTF-8\" to the result

Other options:

  -h, --help           This text
  -V, --version        Print program version and exit
</screen>

<para><command>locale</command> without parameters prints information about
the current locale environment settings.</para>

<para>The <literal>-u</literal>, <literal>-s</literal>, <literal>-f</literal>,
and <literal>-n</literal> options can be used to request the various Windows
locale settings.  The purpose is to use this command in scripts to set the
POSIX locale variables.</para>

<para>The <literal>-u</literal> option prints the current user's Windows
UI locale to stdout.  In Windows Vista and Windows 7 this setting is called
the "Display Language"; there was no corresponding user setting in Windows XP.
The <literal>-s</literal> option prints the systems default instead.
The <literal>-f</literal> option prints the user's setting for time, date,
number and currency.  That's equivalent to the setting in the "Formats" or
"Regional Options" tab in the "Region and Language" or "Regional and Language
Options" dialog.  With the <literal>-U</literal> option
<command>locale</command> appends a ".UTF-8".</para>

<para>Usage example:</para>

<screen>
bash$ export LANG=$(locale -uU)
bash$ echo $LANG
en_US.UTF-8
bash$ export LC_TIME=$(locale -fU)
bash$ echo $LC_TIME
de_DE.UTF-8
</screen>

<para>The <literal>-a</literal> option is helpful to learn which locales
are supported by your Windows machine.  It prints all available locales
and the allowed modifiers.  Example:</para>

<screen>
bash$ locale -a
C
C.utf8
POSIX
af_ZA
af_ZA.utf8
am_ET
am_ET.utf8
...
be_BY
be_BY.utf8
be_BY@@latin
...
ca_ES
ca_ES.utf8
ca_ES@@euro
catalan
...
</screen>

<para>The <literal>-v</literal> option prints more detailed information about
each available locale.  Example:</para>

<screen>
bash$ locale -av
locale: af_ZA           archive: /cygdrive/c/Windows/system32/kernel32.dll
-------------------------------------------------------------------------------
 language | Afrikaans
territory | South Africa
  codeset | ISO-8859-1

locale: af_ZA.utf8      archive: /cygdrive/c/Windows/system32/kernel32.dll
-------------------------------------------------------------------------------
 language | Afrikaans
territory | South Africa
  codeset | UTF-8

...

locale: ca_ES@@euro      archive: /cygdrive/c/Windows/system32/kernel32.dll
-------------------------------------------------------------------------------
 language | Catalan
territory | Spain
  codeset | ISO-8859-15

locale: catalan         archive: /usr/share/locale/locale.alias
-------------------------------------------------------------------------------
 language | Catalan
territory | Spain
  codeset | ISO-8859-1

...
</screen>

<para>The <literal>-m</literal> option prints the names of the available
charmaps supported by Cygwin to stdout.</para>

<para>Otherwise, if arguments are given, <command>locale</command> prints
the values assigned to these arguments.  Arguments can be names of locale
categories (for instance: LC_CTYPE, LC_MONETARY), or names of keywords
supported in the locale categories (for instance: thousands_sep, charmap).
The <literal>-c</literal> option prints additionally the name of the category.
The <literal>-k</literal> option prints additionally the name of the keyword.
Example:</para>

<screen>
bash$ locale -ck LC_MESSAGES
LC_MESSAGES
yesexpr="^[yY]"
noexpr="^[nN]"
yesstr="yes"
nostr="no"
messages-codeset="UTF-8"
bash$ locale noexpr
^[nN]
</screen>

</sect2>

<sect2 id="mkgroup"><title>mkgroup</title>

<screen>
Usage: mkgroup [OPTION]...

Print /etc/group file to stdout

Options:

   -l,--local [machine[,offset]]
                           print local groups with gid offset offset
                           (from local machine if no machine specified)
   -L,--Local [machine[,offset]]
                           ditto, but generate groupname with machine prefix
   -d,--domain [domain[,offset]]
                           print domain groups with gid offset offset
                           (from current domain if no domain specified)
   -D,--Domain [domain[,offset]]
                           ditto, but generate groupname with machine prefix
   -c,--current            print current group
   -C,--Current            ditto, but generate groupname with machine or
                           domain prefix
   -S,--separator char     for -L, -D, -C use character char as domain\group
                           separator in groupname instead of the default '\'
   -o,--id-offset offset   change the default offset (10000) added to gids
                           in domain or foreign server accounts.
   -g,--group groupname    only return information for the specified group
                           one of -l, -L, -d, -D must be specified, too
   -b,--no-builtin         don't print BUILTIN groups
   -U,--unix grouplist     additionally print UNIX groups when using -l or -L
                           on a UNIX Samba server
                           grouplist is a comma-separated list of groupnames
                           or gid ranges (root,-25,50-100).
			   (enumerating large ranges can take a long time!)
   -s,--no-sids            (ignored)
   -u,--users              (ignored)
   -h,--help               print this message
   -V,--version            print version information and exit

Default is to print local groups on stand-alone machines, plus domain
groups on domain controllers and domain member machines.
</screen>

<para>The <command>mkgroup</command> program can be used to help
configure Cygwin by creating a <filename>/etc/group</filename>
file.  Its use is essential to include Windows security information.</para>

<para>The command is initially called by <command>setup.exe</command> to
create a default <filename>/etc/group</filename>.  This should be
sufficient in most circumstances.  However, especially when working
in a multi-domain environment, you can use <command>mkgroup</command>
manually to create a more complete <filename>/etc/group</filename> file for
all domains.  Especially when you have the same group name used on
multiple machines or in multiple domains, you can use the <literal>-D</literal>,
<literal>-L</literal> and <literal>-C</literal> options to create unique
domain\group style groupnames.</para>
  
<para>Note that this information is static.  If you change the group
information in your system, you'll need to regenerate the group file
for it to have the new information.</para>

<para>The <literal>-d/-D</literal> and <literal>-l/-L</literal> options
allow you to specify where the information comes from, the
local SAM of a machine or from the domain, or both.
With the <literal>-d/-D</literal> options the program contacts a Domain
Controller, which my be unreachable or have restricted access.
Comma-separated from the machine or domain, you can specify an offset
which is used as base added to the group's RID to compute the gid
(offset + RID = gid).  This allows you to create the same gids every time you
re-run <command>mkgroup</command>.
For very simple needs, an entry for the current user's group can be
created by using the option <literal>-c</literal> or <literal>-C</literal>.
If you want to use one of the <literal>-D</literal>, <literal>-L</literal>
or <literal>-C</literal> options, but you don't like the backslash as
domain/group separator, you can specify another separator using the
<literal>-S</literal> option, for instance:</para>

<example id="utils-mkgroup-ex"><title>Setting up group entry for current user with different domain/group separator</title>
<screen>
<prompt>$</prompt> <userinput>mkgroup -C -S+ &gt; /etc/group</userinput>
<prompt>$</prompt> <userinput>cat /etc/group</userinput>
DOMAIN+my_group:S-1-5-21-2913048732-1697188782-3448811101-1144:11144:
</screen>
</example>

<para>The <literal>-o</literal> option allows for special cases
(such as multiple domains) where the GIDs might match otherwise.
The <literal>-g</literal> option only prints the information for one group.
The <literal>-U</literal> option allows you to enumerate the standard UNIX
groups on a Samba machine.  It's used together with
<literal>-l samba-server</literal> or <literal>-L samba-server</literal>.
The normal UNIX groups are usually not enumerated, but they can show
up as a group in <command>ls -l</command> output.
</para>

</sect2>

<sect2 id="mkpasswd"><title>mkpasswd</title>

<screen>
Usage: mkpasswd [OPTIONS]...

Print /etc/passwd file to stdout

Options:

   -l,--local [machine[,offset]]
                           print local user accounts with uid offset offset
                           (from local machine if no machine specified)
   -L,--Local [machine[,offset]]
                           ditto, but generate username with machine prefix
   -d,--domain [domain[,offset]]
                           print domain accounts with uid offset offset
                           (from current domain if no domain specified)
   -D,--Domain [domain[,offset]]
                           ditto, but generate username with domain prefix
   -c,--current            print current user
   -C,--Current            ditto, but generate username with machine or
                           domain prefix
   -S,--separator char     for -L, -D, -C use character char as domain\user
                           separator in username instead of the default '\'
   -o,--id-offset offset   change the default offset (10000) added to uids
                           in domain or foreign server accounts.
   -u,--username username  only return information for the specified user
                           one of -l, -L, -d, -D must be specified, too
   -p,--path-to-home path  use specified path instead of user account home dir
                           or /home prefix
   -U,--unix userlist      additionally print UNIX users when using -l or -L\
                           on a UNIX Samba server
                           userlist is a comma-separated list of usernames
                           or uid ranges (root,-25,50-100).
                           (enumerating large ranges can take a long time!)
   -s,--no-sids            (ignored)
   -m,--no-mount           (ignored)
   -g,--local-groups       (ignored)
   -h,--help               displays this message
   -V,--version            version information and exit

Default is to print local accounts on stand-alone machines, domain accounts
on domain controllers and domain member machines.
</screen>

<para>The <command>mkpasswd</command> program can be used to help
configure Cygwin by creating a <filename>/etc/passwd</filename> from
your system information.
Its use is essential to include Windows security information.  However,
the actual passwords are determined by Windows, not by the content of
<filename>/etc/passwd</filename>.</para>

<para>The command is initially called by <command>setup.exe</command> to
create a default <filename>/etc/passwd</filename>.  This should be
sufficient in most circumstances.  However, especially when working
in a multi-domain environment, you can use <command>mkpasswd</command>
manually to create a more complete <filename>/etc/passwd</filename> file for
all domains.  Especially when you have the same user name used on
multiple machines or in multiple domains, you can use the <literal>-D</literal>,
<literal>-L</literal> and <literal>-C</literal> options to create unique
domain\user style usernames.</para>
  
<para>Note that this information is static.  If you change the user
information in your system, you'll need to regenerate the passwd file
for it to have the new information.</para>

<para>The <literal>-d/-D</literal> and <literal>-l/-L</literal> options
allow you to specify where the information comes from, the
local machine or the domain (default or given), or both.
With the  <literal>-d/-D</literal> options the program contacts the Domain
Controller, which may be unreachable or have restricted access.
Comma-separated from the machine or domain, you can specify an offset
which is used as base added to the user's RID to compute the uid
(offset + RID = uid).  This allows to create the same uids every time you
re-run <command>mkpasswd</command>.
An entry for the current user can be created by using the
option <literal>-c</literal> or  <literal>-C</literal>.
If you want to use one of the <literal>-D</literal>, <literal>-L</literal>
or <literal>-C</literal> options, but you don't like the backslash as
domain/group separator, you can specify another separator using the
<literal>-S</literal> option, similar to the <command>mkgroup</command>.
The <literal>-o</literal> option allows for special cases
(such as multiple domains) where the UIDs might match otherwise.
The <literal>-p</literal> option causes <command>mkpasswd</command> to
use the specified prefix instead of the account home dir or <literal>/home/
</literal>. For example, this command:

<example id="utils-althome-ex"><title>Using an alternate home root</title>
<screen>
<prompt>$</prompt> <userinput>mkpasswd -l -p "$(cygpath -H)" &gt; /etc/passwd</userinput>
</screen>
</example>

would put local users' home directories in the Windows 'Profiles' directory. 
The <literal>-u</literal> option creates just an entry for
the specified user.
The <literal>-U</literal> option allows you to enumerate the standard UNIX
users on a Samba machine.  It's used together with
<literal>-l samba-server</literal> or <literal>-L samba-server</literal>.
The normal UNIX users are usually not enumerated, but they can show
up as file owners in <command>ls -l</command> output.
</para>

</sect2>

<sect2 id="mount"><title>mount</title>

<screen>
Usage: mount [OPTION] [&lt;win32path&gt; &lt;posixpath&gt;]
       mount -a
       mount &lt;posixpath&gt;

Display information about mounted filesystems, or mount a filesystem

  -a, --all                     mount all filesystems mentioned in fstab
  -c, --change-cygdrive-prefix  change the cygdrive path prefix to &lt;posixpath&gt;
  -f, --force                   force mount, don't warn about missing mount
                                point directories
  -h, --help                    output usage information and exit
  -m, --mount-entries           write fstab entries to replicate mount points
                                and cygdrive prefixes
  -o, --options X[,X...]        specify mount options
  -p, --show-cygdrive-prefix    show user and/or system cygdrive path prefix
  -V, --version                 output version information and exit
</screen>

<para>The <command>mount</command> program is used to map your drives
and shares onto Cygwin's simulated POSIX directory tree, much like as is
done by mount commands on typical UNIX systems.  However, in contrast to
mount points given in <filename>/etc/fstab</filename>, mount points
created or changed with <command>mount</command> are not persistent.  They
disappear immediately after the last process of the current user exited.
Please see <xref linkend="mount-table"></xref> for more information on the
concepts behind the Cygwin POSIX file system and strategies for using
mounts. To remove mounts temporarily, use <command>umount</command></para>

<sect3 id="utils-mount"><title>Using mount</title>

<para>If you just type <command>mount</command> with no parameters, it
will display the current mount table for you.</para>

<example id="utils-mount-ex">
<title>Displaying the current set of mount points</title>
<screen>
<prompt>$</prompt> <userinput>mount</userinput>
C:/cygwin/bin on /usr/bin type ntfs (binary)
C:/cygwin/lib on /usr/lib type ntfs (binary)
C:/cygwin on / type ntfs (binary)
C: on /mnt/c type ntfs (binary,user,noumount)
D: on /mnt/d type fat (binary,user,noumount)
</screen>
</example>

<para>In this example, c:/cygwin is the POSIX root and the D drive is
mapped to <filename>/mnt/d</filename>.  Note that in this case, the root
mount is a system-wide mount point that is visible to all users running
Cygwin programs, whereas the <filename>/mnt/d</filename> mount is only
visible to the current user.</para>

<para>The <command>mount</command> utility is also the mechanism for
adding new mounts to the mount table in memory.  The following example
demonstrates how to mount the directory
<filename>//pollux/home/joe/data</filename> to <filename>/data</filename>
for the duration of the current session.
</para>

<example id="utils-mount-add-ex">
<title>Adding mount points</title>
<screen>
<prompt>$</prompt> <userinput>ls /data</userinput>
ls: /data: No such file or directory
<prompt>$</prompt> <userinput>mount //pollux/home/joe/data /data</userinput>
mount: warning - /data does not exist!
<prompt>$</prompt> <userinput>mount</userinput>
//pollux/home/joe/data on /data type smbfs (binary)
C:/cygwin/bin on /usr/bin type ntfs (binary)
C:/cygwin/lib on /usr/lib type ntfs (binary)
C:/cygwin on / type ntfs (binary)
C: on /c type ntfs (binary,user,noumount)
D: on /d type fat (binary,user,noumount)
</screen>
</example>

<para>A given POSIX path may only exist once in the mount table.  Attempts to
replace the mount will fail with a busy error.  The <literal>-f</literal>
(force) option causes the old mount to be silently replaced with the new one,
provided the old mount point was a user mount point.  It's not valid to
replace system-wide mount points.  Additionally, the <literal>-f</literal>
option will silence warnings about the non-existence of directories at the
Win32 path location.</para>

<para>
The <literal>-o</literal> option is the method via which various options about
the mount point may be recorded.  The following options are available (note that
most of the options are duplicates of other mount flags):</para>

<screen>
  acl        - Use the filesystem's access control lists (ACLs) to
               implement real POSIX permissions (default).
  binary     - Files default to binary mode (default).
  bind       - Allows to remount part of the file hierarchy somewhere else.
               Different from other mount calls, the first argument 
	       specifies an absolute POSIX path, rather than a Win32 path.
	       This POSIX path is remounted to the POSIX path specified as
	       the second parameter.  The conversion to a Win32 path is done
	       within Cygwin immediately at the time of the call.  Note that
	       symlinks are ignored while performing this path conversion.
  cygexec    - Treat all files below mount point as cygwin executables.
  dos        - Always convert leading spaces and trailing dots and spaces to
	       characters in the UNICODE private use area.  This allows to use
	       broken filesystems which only allow DOS filenames, even if they
	       are not recognized as such by Cygwin.
  exec       - Treat all files below mount point as executable.
  ihash      - Always fake inode numbers rather than using the ones returned
	       by the filesystem.  This allows to use broken filesystems which
	       don't return unambiguous inode numbers, even if they are not
	       recognized as such by Cygwin.
  noacl      - Ignore ACLs and fake POSIX permissions.
  nosuid     - No suid files are allowed (currently unimplemented)
  notexec    - Treat all files below mount point as not executable.
  override   - Override immutable mount points.
  posix=0    - Switch off case sensitivity for paths under this mount point.
  posix=1    - Switch on case sensitivity for paths under this mount point
               (default).
  sparse     - Switch on support for sparse files.  This option only makes
	       sense on NTFS and then only if you really need sparse files.
  text       - Files default to CRLF text mode line endings.
</screen>

<para>For a more complete description of the mount options and the
<filename>/etc/fstab</filename> file, see
<xref linkend="mount-table"></xref>.</para>

<para>Note that all mount points added with <command>mount</command> are
user mount points.  System mount points can only be specified in
the <filename>/etc/fstab</filename> file.</para>

<para>If you added mount points to <filename>/etc/fstab</filename> or your
<filename>/etc/fstab.d/&lt;username&gt;</filename> file, you can add these
mount points to your current user session using the <literal>-a/--all</literal>
option, or by specifing the posix path alone on the command line.  As an
example, consider you added a mount point with the POSIX path
<filename>/my/mount</filename>.  You can add this mount point with either
one of the following two commands to your current user session.</para>

<screen>
<prompt>$</prompt> <userinput>mount /my/mount</userinput>
<prompt>$</prompt> <userinput>mount -a</userinput>
</screen>

<para>The first command just adds the <filename>/my/mount</filename> mount
point to your current session, the <command>mount -a</command> adds all
new mount points to your user session.</para>

<para>If you change a mount point to point to another native path, or
if you changed the flags of a mount point, you have to <command>umount</command>
the mount point first, before you can add it again.  Please note that
all such added mount points are added as user mount points, and that the
rule that system mount points can't be removed or replaced in a running
session still applies.</para>

<para>To bind a POSIX path to another POSIX path, use the
<literal>bind</literal> mount flag.</para>

<screen>
<prompt>$</prompt> <userinput>mount -o bind /var /usr/var</userinput>
</screen>

<para>This command makes the file hirarchy under <filename>/var</filename>
additionally available under <filename>/usr/var</filename>.</para>

<para>
The <literal>-m</literal> option causes the <command>mount</command> utility
to output the current mount table in a series of fstab entries.
You can save this output as a backup when experimenting with the mount table.
Copy the output to <filename>/etc/fstab</filename> to restore the old state.
It also makes moving your settings to a different machine much easier.</para>

</sect3>

<sect3 id="utils-cygdrive"><title>Cygdrive mount points</title>

<para>Whenever Cygwin cannot use any of the existing mounts to convert
from a particular Win32 path to a POSIX one, Cygwin will, instead,
convert to a POSIX path using a default mount point:
<filename>/cygdrive</filename>.  For example, if Cygwin accesses
<filename>z:\foo</filename> and the z drive is not currently in the
mount table, then <filename>z:\</filename> will be accessible as
<filename>/cygdrive/z</filename>.  The <command>mount</command> utility 
can be used to change this default automount prefix through the use of the
"--change-cygdrive-prefix" option.  In the following example, we will
set the automount prefix to <filename>/mnt</filename>:</para>

<example id="utils-cygdrive-ex">
<title>Changing the default prefix</title>
<screen>
<prompt>$</prompt> <userinput>mount --change-cygdrive-prefix /mnt</userinput>
</screen>
</example>

<para>Note that the cygdrive prefix can be set both per-user and system-wide, 
and that as with all mounts, a user-specific mount takes precedence over the 
system-wide setting.  The <command>mount</command> utility creates system-wide 
mounts by default if you do not specify a type.
You can always see the user and system cygdrive prefixes with the 
<literal>-p</literal> option.  Using the <literal>--options</literal>
flag with <literal>--change-cygdrive-prefix</literal> makes all new 
automounted filesystems default to this set of options.  For instance
(using the short form of the command line flags)</para>

<example id="utils-cygdrive-ex2">
<title>Changing the default prefix with specific mount options</title>
<screen>
<prompt>$</prompt> <userinput>mount -c /mnt -o binary,noacl</userinput>
</screen>
</example>


</sect3>

<sect3 id="utils-limitations"><title>Limitations</title>

<para>Limitations: there is a hard-coded limit of 64 mount points
(up to Cygwin 1.7.9: 30 mount points).  Also, although you can mount
to pathnames that do not start with "/", there is no way to make use
of such mount points.</para>

<para>Normally the POSIX mount point in Cygwin is an existing empty
directory, as in standard UNIX. If this is the case, or if there is a
place-holder for the mount point (such as a file, a symbolic link
pointing anywhere, or a non-empty directory), you will get the expected
behavior. Files present in a mount point directory before the mount
become invisible to Cygwin programs.
</para>

<para>It is sometimes desirable to mount to a non-existent directory,
for example to avoid cluttering the root directory with names
such as
<filename>a</filename>, <filename>b</filename>, <filename>c</filename>
pointing to disks.
Although <command>mount</command> will give you a warning, most
everything will work properly when you refer to the mount point
explicitly.  Some strange effects can occur however.
For example if your current working directory is
<filename>/dir</filename>,
say, and <filename>/dir/mtpt</filename> is a mount point, then
<filename>mtpt</filename> will not show up in an <command>ls</command>
or
<command>echo *</command> command and <command>find .</command> will
not
find <filename>mtpt</filename>.
</para>

</sect3>

</sect2>

<sect2 id="passwd"><title>passwd</title>

<screen>
Usage: passwd [OPTION] [USER]

Change USER's password or password attributes.

User operations:
  -l, --lock               lock USER's account.
  -u, --unlock             unlock USER's account.
  -c, --cannot-change      USER can't change password.
  -C, --can-change         USER can change password.
  -e, --never-expires      USER's password never expires.
  -E, --expires            USER's password expires according to system's
                           password aging rule.
  -p, --pwd-not-required   no password required for USER.
  -P, --pwd-required       password is required for USER.
  -R, --reg-store-pwd      enter password to store it in the registry for
                           later usage by services to be able to switch
                           to this user context with network credentials.

System operations:
  -i, --inactive NUM       set NUM of days before inactive accounts are disabled
                           (inactive accounts are those with expired passwords).
  -n, --minage DAYS        set system minimum password age to DAYS days.
  -x, --maxage DAYS        set system maximum password age to DAYS days.
  -L, --length LEN         set system minimum password length to LEN.

Other options:
  -d, --logonserver SERVER connect to SERVER (e.g. domain controller).
                           Default server is the local system, unless
                           changing the current user, in which case the
                           default is the content of $LOGONSERVER.
  -S, --status             display password status for USER (locked, expired,
                           etc.) plus global system password settings.
  -h, --help               output usage information and exit.
  -V, --version            output version information and exit.

If no option is given, change USER's password.  If no user name is given,
operate on current user.  System operations must not be mixed with user
operations.  Don't specify a USER when triggering a system operation. 

Don't specify a user or any other option together with the -R option.
Non-Admin users can only store their password if cygserver is running.
Note that storing even obfuscated passwords in the registry is not overly
secure.  Use this feature only if the machine is adequately locked down.
Don't use this feature if you don't need network access within a remote
session.  You can delete your stored password by using `passwd -R' and
specifying an empty password.
</screen>

<para> <command>passwd</command> changes passwords for user accounts.
A normal user may only change the password for their own account,
but administrators may change passwords on any account.
<command>passwd</command> also changes account information, such as
password expiry dates and intervals.</para>

<para>For password changes, the user is first prompted for their old
password, if one is present.  This password is then encrypted and
compared against the stored password.  The user has only one chance to
enter the correct password.  The administrators are permitted to
bypass this step so that forgotten passwords may be changed.</para>

<para>The user is then prompted for a replacement password.
<command>passwd</command> will prompt twice for this replacement and 
compare the second entry against the first.  Both entries are required to 
match in order for the password to be changed.</para>

<para>After the password has been entered, password aging information
is checked to see if the user is permitted to change their password
at this time.  If not, <command>passwd</command> refuses to change the
password and exits.</para>

<para>
To get current password status information, use the
<literal>-S</literal> option. Administrators can use
<command>passwd</command> to perform several account maintenance
functions (users may perform some of these functions on their own
accounts).  Accounts may be locked with the <literal>-l</literal> flag
and unlocked with the <literal>-u</literal> flag.  Similarly,
<literal>-c</literal> disables a user's ability to change passwords, and
<literal>-C</literal> allows a user to change passwords.  For password
expiry, the <literal>-e</literal> option disables expiration, while the
<literal>-E</literal> option causes the password to expire according to
the system's normal aging rules.  Use <literal>-p</literal> to disable
the password requirement for a user, or <literal>-P</literal> to require
a password.
</para>

<para>Administrators can also use <command>passwd</command> to change
system-wide password expiry and length requirements with the
<literal>-i</literal>, <literal>-n</literal>, <literal>-x</literal>,
and <literal>-L</literal> options.  The <literal>-i</literal>
option is used to disable an account after the password has been expired
for a number of days.  After a user account has had an expired password
for <emphasis>NUM</emphasis> days, the user may no longer sign on to
the account.  The <literal>-n</literal> option is
used to set the minimum number of days before a password may be changed.
The user will not be permitted to change the password until
<emphasis>MINDAYS</emphasis> days have elapsed.  The
<literal>-x</literal> option is used to set the maximum number of days
a password remains valid.  After <emphasis>MAXDAYS</emphasis> days, the
password is required to be changed.  Allowed values for the above options 
are 0 to 999.  The <literal>-L</literal> option sets the minimum length of 
allowed passwords for users who don't belong to the administrators group
to <emphasis>LEN</emphasis> characters.  Allowed values for the minimum
password length are 0 to 14.  In any of the above cases, a value of 0
means `no restrictions'.</para>

<para>
All operations affecting the current user are by default run against
the logon server of the current user (taken from the environment
variable <envar>LOGONSERVER</envar>.  When password or account information
of other users should be changed, the default server is the local system.
To change a user account on a remote machine, use the <literal>-d</literal>
option to specify the machine to run the command against.  Note that the
current user must be a valid member of the administrators group on the remote
machine to perform such actions.
</para>

<para>Users can use the <command>passwd -R</command> to enter
a password which then gets stored in a special area of the registry on the
local system, which is also used by Windows to store passwords of accounts
running Windows services.  When a privileged Cygwin application calls the
<command>set{e}uid(user_id)</command> system call, Cygwin checks if a
password for that user has been stored in this registry area.  If so, it
uses this password to switch to this user account using that password.
This allows you to logon through, for instance, <command>ssh</command> with
public key authentication and get a full qualified user token with
all credentials for network access.  However, the method has some
drawbacks security-wise.  This is explained in more detail in
<xref linkend="ntsec"></xref>.</para>

<para>Please note that storing passwords in that registry area is a
privileged operation which only administrative accounts are allowed to
do.  Administrators can enter the password for other user accounts into
the registry by specifying the username on the commandline.  If normal,
non-admin users should be allowed to enter their passwords using
<command>passwd -R</command>, it's required to run <command>cygserver</command>
as a service under the LocalSystem account before running
<command>passwd -R</command>.  This only affects storing passwords.  Using
passwords in privileged processes does not require <command>cygserver</command>
to run.</para>

<para>Limitations: Users may not be able to change their password on
some systems.</para>

</sect2>

<sect2 id="pldd"><title>pldd</title>

<screen>
Usage: pldd [OPTION...] PID

List dynamic shared objects loaded into a process.

  -?, --help                 Give this help list
      --usage                Give a short usage message
  -V, --version              Print program version
</screen>

<para><command>pldd</command> prints the shared libraries (DLLs) loaded
by the process with the given PID.</para>

</sect2>

<sect2 id="ps"><title>ps</title>

<screen>
Usage: ps [-aefls] [-u UID]

Report process status

 -a, --all       show processes of all users
 -e, --everyone  show processes of all users
 -f, --full      show process uids, ppids
 -h, --help      output usage information and exit
 -l, --long      show process uids, ppids, pgids, winpids
 -p, --process   show information for specified PID
 -s, --summary   show process summary
 -u, --user      list processes owned by UID
 -V, --version   output version information and exit
 -W, --windows   show windows as well as cygwin processes
With no options, ps outputs the long format by default
</screen>

<para>The <command>ps</command> program gives the status of all the
Cygwin processes running on the system (ps = "process status").  Due
to the limitations of simulating a POSIX environment under Windows,
there is little information to give.  
</para>

<para>
The PID column is the process ID you need to give to the 
<command>kill</command> command. The PPID is the parent process ID,
and PGID is the process group ID.  The WINPID column is the process 
ID displayed by NT's Task Manager program. The TTY column gives which 
pseudo-terminal a process is running on, or a <literal>'?'</literal>
for services. The UID column shows which user owns each process. 
STIME is the time the process was started, and COMMAND gives the name
of the program running. Listings may also have a status flag in
column zero; <literal>S</literal> means stopped or suspended (in other
words, in the background), <literal>I</literal> means waiting for
input or interactive (foreground), and <literal>O</literal> means
waiting to output. 
</para>

<para>
By default, <command>ps</command> will only show processes owned by the
current user. With either the <literal>-a</literal> or <literal>-e</literal>
option, all user's processes (and system processes) are listed. There are
historical UNIX reasons for the synonomous options, which are functionally
identical. The <literal>-f</literal> option outputs a "full" listing with
usernames for UIDs. The <literal>-l</literal> option is the default display
mode, showing a "long" listing with all the above columns. The other display
option is <literal>-s</literal>, which outputs a shorter listing of just
PID, TTY, STIME, and COMMAND. The <literal>-u</literal> option allows you
to show only processes owned by a specific user. The <literal>-p</literal>
option allows you to show information for only the process with the
specified PID. The <literal>-W</literal>
option causes <command>ps</command> show non-Cygwin Windows processes as 
well as Cygwin processes. The WINPID is also the PID, and they can be killed
with the Cygwin <command>kill</command> command's <literal>-f</literal>
option.
</para>

</sect2>

<sect2 id="regtool"><title>regtool</title>

<screen>
Usage: regtool [OPTION] (add|check|get|list|remove|unset|load|unload|save) KEY

View or edit the Win32 registry

Actions:

 add KEY\SUBKEY             add new SUBKEY
 check KEY                  exit 0 if KEY exists, 1 if not
 get KEY\VALUE              prints VALUE to stdout
 list KEY                   list SUBKEYs and VALUEs
 remove KEY                 remove KEY
 set KEY\VALUE [data ...]   set VALUE
 unset KEY\VALUE            removes VALUE from KEY
 load KEY\SUBKEY PATH       load hive from PATH into new SUBKEY
 unload KEY\SUBKEY          unload hive and remove SUBKEY
 save KEY\SUBKEY PATH       save SUBKEY into new hive PATH

Options for 'list' Action:

 -k, --keys           print only KEYs
 -l, --list           print only VALUEs
 -p, --postfix        like ls -p, appends '\' postfix to KEY names

Options for 'get' Action:

 -b, --binary         print REG_BINARY data as hex bytes
 -n, --none           print data as stream of bytes as stored in registry
 -x, --hex            print numerical data as hex numbers

Options for 'set' Action:

 -b, --binary         set type to REG_BINARY (hex args or '-')
 -D, --dword-be       set type to REG_DWORD_BIG_ENDIAN
 -e, --expand-string  set type to REG_EXPAND_SZ
 -i, --integer        set type to REG_DWORD
 -m, --multi-string   set type to REG_MULTI_SZ
 -n, --none           set type to REG_NONE
 -Q, --qword          set type to REG_QWORD
 -s, --string         set type to REG_SZ

Options for 'set' and 'unset' Actions:

 -K&lt;c&gt;, --key-separator[=]&lt;c&gt;  set key separator to &lt;c&gt; instead of '\'

Other Options:

 -h, --help     output usage information and exit
 -q, --quiet    no error output, just nonzero return if KEY/VALUE missing
 -v, --verbose  verbose output, including VALUE contents when applicable
 -w, --wow64    access 64 bit registry view (ignored on 32 bit Windows)
 -W, --wow32    access 32 bit registry view (ignored on 32 bit Windows)
 -V, --version  output version information and exit

KEY is in the format [host]\prefix\KEY\KEY\VALUE, where host is optional
remote host in either \\hostname or hostname: format and prefix is any of:
  root     HKCR  HKEY_CLASSES_ROOT (local only)
  config   HKCC  HKEY_CURRENT_CONFIG (local only)
  user     HKCU  HKEY_CURRENT_USER (local only)
  machine  HKLM  HKEY_LOCAL_MACHINE
  users    HKU   HKEY_USERS

You can use forward slash ('/') as a separator instead of backslash, in
that case backslash is treated as escape character
Example: regtool.exe get '\user\software\Microsoft\Clock\iFormat'
</screen>

<para>The <command>regtool</command> program allows shell scripts
to access and modify the Windows registry.  Note that modifying the
Windows registry is dangerous, and carelessness here can result
in an unusable system.  Be careful.</para>

<para>The <literal>-v</literal> option means "verbose".  For most
commands, this causes additional or lengthier messages to be printed.
Conversely, the <literal>-q</literal> option supresses error messages,
so you can use the exit status of the program to detect if a key
exists or not (for example).</para>

<para>The <literal>-w</literal> option allows you to access the 64 bit view
of the registry.  Several subkeys exist in a 32 bit and a 64 bit version
when running on Windows 64.  Since Cygwin is running in 32 bit mode, it
only has access to the 32 bit view of these registry keys.  When using
the <literal>-w</literal> switch, the 64 bit view is used and
<command>regtool</command> can access the entire registry.
This option is simply ignored when running on 32 bit Windows versions.
</para>

<para>The <literal>-W</literal> option allows you to access the 32 bit view
on the registry.  The purpose of this option is mainly for symmetry.  It
permits creation of OS agnostic scripts which would also work in a hypothetical
64 bit version of Cygwin.</para>

<para>You must provide <command>regtool</command> with an 
<emphasis>action</emphasis> following options (if any). Currently,
the action must be <literal>add</literal>, <literal>set</literal>,
<literal>check</literal>, <literal>get</literal>, <literal>list</literal>,
<literal>remove</literal>, <literal>set</literal>, or <literal>unset</literal>.
</para>

<para>The <literal>add</literal> action adds a new key.  The 
<literal>check</literal> action checks to see if a key exists (the 
exit code of the program is zero if it does, nonzero if it does not).
The <literal>get</literal> action gets the value of a key,
and prints it (and nothing else) to stdout.  Note: if the value
doesn't exist, an error message is printed and the program returns a
non-zero exit code.  If you give <literal>-q</literal>, it doesn't
print the message but does return the non-zero exit code.</para>

<para>
The <literal>list</literal> action lists the subkeys and values
belonging to the given key. With <literal>list</literal>, the 
<literal>-k</literal> option instructs <command>regtool</command>
to print only KEYs, and the <literal>-l</literal> option to print
only VALUEs. The <literal>-p</literal> option postfixes a 
<literal>'/'</literal> to each KEY, but leave VALUEs with no
postfix.  The <literal>remove</literal> action 
removes a key.  Note that you may need to remove everything in the key 
before you may remove it, but don't rely on this stopping you from 
accidentally removing too much.  
</para>

<para>The <literal>get</literal> action prints a value within a key.
With the <literal>-b</literal> option, data is printed as hex bytes.
<literal>-n</literal> allows to print the data as a typeless stream of
bytes.  Integer values (REG_DWORD, REG_QWORD) are usually printed
as decimal values.  The <literal>-x</literal> option allows to print
the numbers as hexadecimal values.</para>

<para>The <literal>set</literal> action sets a value within a key.
<literal>-b</literal> means it's binary data (REG_BINARY).
The binary values are specified as hex bytes in the argument list.
If the argument is <literal>'-'</literal>, binary data is read
from stdin instead.
<literal>-d</literal> or <literal>-i</literal> means the value is a 32 bit
integer value (REG_DWORD).
<literal>-D</literal> means the value is a 32 bit integer value in
Big Endian representation (REG_DWORD_BIG_ENDIAN).
<literal>-Q</literal> means the value is a 64 bit integer value (REG_QWORD).
<literal>-s</literal> means the value is a string (REG_SZ).
<literal>-e</literal> means it's an expanding string (REG_EXPAND_SZ)
that contains embedded environment variables.  
<literal>-m</literal> means it's a multi-string (REG_MULTI_SZ).  
If you don't specify one of these, <command>regtool</command> tries to
guess the type based on the value you give.  If it looks like a
number, it's a DWORD, unless it's value doesn't fit into 32 bit, in which
case it's a QWORD.  If it starts with a percent, it's an expanding
string.  If you give multiple values, it's a multi-string.  Else, it's
a regular string.</para>

<para>The <literal>unset</literal> action removes a value from a key.</para>

<para>The <literal>load</literal> action adds a new subkey and loads
the contents of a registry hive into it.
The parent key must be HKEY_LOCAL_MACHINE or HKEY_USERS.
The <literal>unload</literal> action unloads the file and removes
the subkey.
</para>

<para>The <literal>save</literal> action saves a subkey into a
registry hive.
</para>

<para>
By default, the last "\" or "/" is assumed to be the separator between the
key and the value.  You can use the <literal>-K</literal> option to provide 
an alternate key/value separator character.
</para>

</sect2>

<sect2 id="setfacl"><title>setfacl</title>

<screen>
Usage: setfacl [-r] (-f ACL_FILE | -s acl_entries) FILE...
       setfacl [-r] ([-d acl_entries] [-m acl_entries]) FILE...

Modify file and directory access control lists (ACLs)

  -d, --delete     delete one or more specified ACL entries
  -f, --file       set ACL entries for FILE to ACL entries read
                   from a ACL_FILE
  -m, --modify     modify one or more specified ACL entries
  -r, --replace    replace mask entry with maximum permissions
                   needed for the file group class
  -s, --substitute substitute specified ACL entries for the
                   ACL of FILE
  -h, --help       output usage information and exit
  -V, --version    output version information and exit

At least one of (-d, -f, -m, -s) must be specified
</screen>

<para>
For each file given as parameter, <command>setfacl</command> will 
either replace its complete ACL (<literal>-s</literal>, <literal>-f</literal>), 
or it will add, modify, or delete ACL entries.
For more information on Cygwin and Windows ACLs, see
see <xref linkend="ntsec"></xref> in the Cygwin User's Guide.
</para>

<para>
Acl_entries are one or more comma-separated ACL entries 
from the following list:
<screen>
         u[ser]::perm
         u[ser]:uid:perm
         g[roup]::perm
         g[roup]:gid:perm
         m[ask]::perm
         o[ther]::perm
</screen>
Default entries are like the above with the additional
default identifier. For example: 
<screen>
         d[efault]:u[ser]:uid:perm
</screen>
</para>

<para>
<emphasis>perm</emphasis> is either a 3-char permissions string in the form
"rwx" with the character <literal>'-'</literal> for no permission
or it is the octal representation of the permissions, a
value from 0 (equivalent to "---") to 7 ("rwx").
<emphasis>uid</emphasis> is a user name or a numerical uid.
<emphasis>gid</emphasis> is a group name or a numerical gid.
</para>

<para>
The following options are supported:
</para>

<para>
<literal>-d</literal>
Delete one or more specified entries from the file's ACL.
The owner, group and others entries must not be deleted.
Acl_entries to be deleted should be specified without
permissions, as in the following list:
<screen>
         u[ser]:uid
         g[roup]:gid
         d[efault]:u[ser]:uid
         d[efault]:g[roup]:gid
         d[efault]:m[ask]:
         d[efault]:o[ther]:
</screen>
</para>

<para>
<literal>-f</literal>
Take the Acl_entries from ACL_FILE one per line. Whitespace
characters are ignored, and the character "#" may be used
to start a comment.  The special filename "-" indicates
reading from stdin. Note that you can use this with 
<command>getfacl</command> and <command>setfacl</command> to copy 
ACLs from one file to another:
<screen>
$ getfacl source_file | setfacl -f - target_file
</screen>
</para>

<para>
Required entries are: 
one user entry for the owner of the file,
one group entry for the group of the file, and
one other entry.
</para>

<para>
If additional user and group entries are given:
a mask entry for the file group class of the file, and 
no duplicate user or group entries with the same uid/gid.
</para>

<para>
If it is a directory:
one default user entry for the owner of the file,
one default group entry for the group of the file,
one default mask entry for the file group class, and
one default other entry.
</para>

<para>
<literal>-m</literal>
Add or modify one or more specified ACL entries.  Acl_entries is a 
comma-separated list of entries from the same list as above.
</para>

<para>
<literal>-r</literal>   
Causes the permissions specified in the mask 
entry to be ignored and replaced by the maximum permissions needed for 
the file group class.
</para>

<para>
<literal>-s</literal>   
Like <literal>-f</literal>, but substitute the 
file's ACL with Acl_entries specified in a comma-separated list on the 
command line.
</para>

<para>
While the <literal>-d</literal> and <literal>-m</literal> options may be used 
in the same command, the <literal>-f</literal> and <literal>-s</literal> 
options may be used only exclusively.
</para>

<para>
Directories may contain default ACL entries.  Files created
in a directory that contains default ACL entries will have
permissions according to the combination of the current umask,
the explicit permissions requested and the default ACL entries
</para>

<para>
Limitations: Under Cygwin, the default ACL entries are not taken into
account currently.
</para>

</sect2>

<sect2 id="setmetamode"><title>setmetamode</title>

<screen>
Usage: setmetamode [metabit|escprefix]

Get or set keyboard meta mode

  Without argument, it shows the current meta key mode.
  metabit|meta|bit     The meta key sets the top bit of the character.
  escprefix|esc|prefix The meta key sends an escape prefix.

Other options:

  -h, --help           This text
  -V, --version        Print program version and exit
</screen>

<para><command>setmetamode</command> can be used to determine and set the
key code sent by the meta (aka <literal>Alt</literal>) key.</para>

</sect2>

<sect2 id="ssp"><title>ssp</title>

<screen>
Usage: ssp [options] low_pc high_pc command...

Single-step profile COMMAND

 -c, --console-trace  trace every EIP value to the console. *Lots* slower.
 -d, --disable        disable single-stepping by default; use
                      OutputDebugString ("ssp on") to enable stepping
 -e, --enable         enable single-stepping by default; use
                      OutputDebugString ("ssp off") to disable stepping
 -h, --help           output usage information and exit
 -l, --dll            enable dll profiling.  A chart of relative DLL usage
                      is produced after the run.
 -s, --sub-threads    trace sub-threads too.  Dangerous if you have
                      race conditions.
 -t, --trace-eip      trace every EIP value to a file TRACE.SSP.  This
                      gets big *fast*.
 -v, --verbose        output verbose messages about debug events.
 -V, --version        output version information and exit

Example: ssp 0x401000 0x403000 hello.exe
</screen>

<para>
SSP - The Single Step Profiler
</para>

<para>
Original Author:  DJ Delorie 
</para>

<para>
The SSP is a program that uses the Win32 debug API to run a program
one ASM instruction at a time.  It records the location of each
instruction used, how many times that instruction is used, and all
function calls.  The results are saved in a format that is usable by
the profiling program <command>gprof</command>, although 
<command>gprof</command> will claim the values
are seconds, they really are instruction counts.  More on that later.
</para>

<para>
Because the SSP was originally designed to profile the Cygwin DLL, it
does not automatically select a block of code to report statistics on.
You must specify the range of memory addresses to keep track of
manually, but it's not hard to figure out what to specify.  Use the
"objdump" program to determine the bounds of the target's ".text"
section.  Let's say we're profiling cygwin1.dll.  Make sure you've
built it with debug symbols (else <command>gprof</command> won't run) 
and run objdump like this:

<screen>
$ objdump -h cygwin1.dll
</screen>

It will print a report like this:
<screen>
cygwin1.dll:     file format pei-i386

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         0007ea00  61001000  61001000  00000400  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE, DATA
  1 .data         00008000  61080000  61080000  0007ee00  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  . . .
</screen>
</para>

<para>
The only information we're concerned with are the VMA of 
the .text section and the VMA of the section after it 
(sections are usually contiguous; you can also add the 
Size to the VMA to get the end address).  In this case, 
the VMA is 0x61001000 and the ending address is either 
0x61080000 (start of .data method) or 0x0x6107fa00 (VMA+Size
method).
</para>

<para>
There are two basic ways to use SSP - either profiling a whole
program, or selectively profiling parts of the program.
</para>

<para>
To profile a whole program, just run <command>ssp</command> without options.  
By default, it will step the whole program.  Here's a simple example, using 
the numbers above:

<screen>
$ ssp 0x61001000 0x61080000 hello.exe
</screen>

This will step the whole program.  It will take at least 8 minutes on
a PII/300 (yes, really).  When it's done, it will create a file called
"gmon.out".  You can turn this data file into a readable report with
<command>gprof</command>:

<screen>
$ gprof -b cygwin1.dll
</screen>

The "-b" means 'skip the help pages'.  You can omit this until you're
familiar with the report layout.  The <command>gprof</command> documentation 
explains a lot about this report, but <command>ssp</command> changes a few 
things.  For example, the first part of the report reports the amount of time 
spent in each function, like this:

<screen>
Each sample counts as 0.01 seconds.
  %   cumulative   self              self     total
 time   seconds   seconds    calls  ms/call  ms/call  name
 10.02    231.22    72.43       46  1574.57  1574.57  strcspn
  7.95    288.70    57.48      130   442.15   442.15  strncasematch
</screen>

The "seconds" columns are really CPU opcodes, 1/100 second per opcode.
So, "231.22" above means 23,122 opcodes.  The ms/call values are 10x
too big; 1574.57 means 157.457 opcodes per call.  Similar adjustments
need to be made for the "self" and "children" columns in the second
part of the report.
</para>

<para>
OK, so now we've got a huge report that took a long time to generate,
and we've identified a spot we want to work on optimizing.  Let's say
it's the time() function.  We can use SSP to selectively profile this
function by using OutputDebugString() to control SSP from within the
program.  Here's a sample program:

<screen>
	#include &lt;windows.h&gt;
	main()
	{
	  time_t t;
	  OutputDebugString("ssp on");
	  time(&amp;t);
	  OutputDebugString("ssp off");
	}
</screen>
</para>

<para>
Then, add the <literal>-d</literal> option to ssp to default to 
*disabling* profiling.  The program will run at full speed until the first 
OutputDebugString, then step until the second.
You can then use <command>gprof</command> (as usual) to see the performance 
profile for just that portion of the program's execution.
</para>

<para>
There are many options to ssp.  Since step-profiling makes your
program run about 1,000 times slower than normal, it's best to
understand all the options so that you can narrow down the parts
of your program you need to single-step.
</para>

<para>
<literal>-v</literal> - verbose.  This prints messages about threads 
starting and stopping, OutputDebugString calls, DLLs loading, etc.
</para>

<para>
<literal>-t</literal> and <literal>-c</literal> - tracing.  
With <literal>-t</literal>, *every* step's address is written
to the file "trace.ssp".  This can be used to help debug functions,
since it can trace multiple threads.  Clever use of scripts can match
addresses with disassembled opcodes if needed.  Warning: creates
*huge* files, very quickly.  <literal>-c</literal> prints each address to 
the console, useful for debugging key chunks of assembler.  Use 
<literal>addr2line -C -f -s -e foo.exe &lt; trace.ssp &gt; lines.ssp</literal>
and then <literal>perl cvttrace</literal> to convert to symbolic traces.
</para>

<para>
<literal>-s</literal> - subthreads.  Usually, you only need to trace the 
main thread, but sometimes you need to trace all threads, so this enables that.
It's also needed when you want to profile a function that only a
subthread calls.  However, using OutputDebugString automatically
enables profiling on the thread that called it, not the main thread.
</para>

<para>
<literal>-l</literal> - dll profiling.  Generates a pretty table of how much 
time was spent in each dll the program used.  No sense optimizing a function in
your program if most of the time is spent in the DLL.
I usually use the <literal>-v</literal>, <literal>-s</literal>, and 
<literal>-l</literal> options:

<screen>
$ ssp <literal>-v</literal> <literal>-s</literal> <literal>-l</literal> <literal>-d</literal> 0x61001000 0x61080000 hello.exe
</screen>
</para>
</sect2>

<sect2 id="strace"><title>strace</title>

<screen>
Usage: strace.exe [OPTIONS] &lt;command-line&gt;
Usage: strace.exe [OPTIONS] -p &lt;pid&gt;

Trace system calls and signals

  -b, --buffer-size=SIZE       set size of output file buffer
  -d, --no-delta               don't display the delta-t microsecond timestamp
  -f, --trace-children         trace child processes (toggle - default true)
  -h, --help                   output usage information and exit
  -m, --mask=MASK              set message filter mask
  -n, --crack-error-numbers    output descriptive text instead of error
                               numbers for Windows errors
  -o, --output=FILENAME        set output file to FILENAME
  -p, --pid=n                  attach to executing program with cygwin pid n
  -q, --quiet                  toggle "quiet" flag.  Defaults to on if "-p",
                               off otherwise.
  -S, --flush-period=PERIOD    flush buffered strace output every PERIOD secs
  -t, --timestamp              use an absolute hh:mm:ss timestamp insted of 
                               the default microsecond timestamp.  Implies -d
  -T, --toggle                 toggle tracing in a process already being
                               traced. Requires -p &lt;pid&gt;
  -u, --usecs                  toggle printing of microseconds timestamp
  -V, --version                output version information and exit
  -w, --new-window             spawn program under test in a new window

    MASK can be any combination of the following mnemonics and/or hex values
    (0x is optional).  Combine masks with '+' or ',' like so:

                      --mask=wm+system,malloc+0x00800

    Mnemonic Hex     Corresponding Def  Description
    =========================================================================
    all      0x000001 (_STRACE_ALL)      All strace messages.
    flush    0x000002 (_STRACE_FLUSH)    Flush output buffer after each message.
    inherit  0x000004 (_STRACE_INHERIT)  Children inherit mask from parent.
    uhoh     0x000008 (_STRACE_UHOH)     Unusual or weird phenomenon.
    syscall  0x000010 (_STRACE_SYSCALL)  System calls.
    startup  0x000020 (_STRACE_STARTUP)  argc/envp printout at startup.
    debug    0x000040 (_STRACE_DEBUG)    Info to help debugging. 
    paranoid 0x000080 (_STRACE_PARANOID) Paranoid info.
    termios  0x000100 (_STRACE_TERMIOS)  Info for debugging termios stuff.
    select   0x000200 (_STRACE_SELECT)   Info on ugly select internals.
    wm       0x000400 (_STRACE_WM)       Trace Windows msgs (enable _strace_wm).
    sigp     0x000800 (_STRACE_SIGP)     Trace signal and process handling.
    minimal  0x001000 (_STRACE_MINIMAL)  Very minimal strace output.
    pthread  0x002000 (_STRACE_PTHREAD)	Pthread calls.
    exitdump 0x004000 (_STRACE_EXITDUMP) Dump strace cache on exit.
    system   0x008000 (_STRACE_SYSTEM)   Serious error; goes to console and log.
    nomutex  0x010000 (_STRACE_NOMUTEX)  Don't use mutex for synchronization.
    malloc   0x020000 (_STRACE_MALLOC)   Trace malloc calls.
    thread   0x040000 (_STRACE_THREAD)   Thread-locking calls.
    special  0x100000 (_STRACE_SPECIAL)  Special debugging printfs for
                                         non-checked-in code
</screen>

<para>The <command>strace</command> program executes a program, and
optionally the children of the program, reporting any Cygwin DLL output
from the program(s) to stdout, or to a file with the <literal>-o</literal>
option.  With the <literal>-w</literal> option, you can start an strace
session in a new window, for example:

<screen>
$ strace -o tracing_output -w sh -c 'while true; do echo "tracing..."; done' &amp;
</screen>
This is particularly useful for <command>strace</command> sessions that
take a long time to complete.
</para>

<para>
Note that <command>strace</command> is a standalone Windows program and so does 
not rely on the Cygwin DLL itself (you can verify this with 
<command>cygcheck</command>). As a result it does not understand symlinks.
This program is mainly useful for debugging the Cygwin DLL itself.</para>

</sect2>

<sect2 id="tzset"><title>tzset</title>

<screen>
Usage: tzset [OPTION]

Print POSIX-compatible timezone ID from current Windows timezone setting

Options:
  -h, --help               output usage information and exit.
  -V, --version            output version information and exit.

Use tzset to set your TZ variable. In POSIX-compatible shells like bash,
dash, mksh, or zsh:

      export TZ=$(tzset)

In csh-compatible shells like tcsh:

      setenv TZ `tzset`
</screen>

<para>The <command>tzset</command> tool reads the current timezone from Windows
and generates a POSIX-compatible timezone information for the TZ environment
variable from that information.  That's all there is to it.  For the way how
to use it, see the above usage information.</para>

</sect2>

<sect2 id="umount"><title>umount</title>

<screen>
Usage: umount.exe [OPTION] [&lt;posixpath&gt;]

Unmount filesystems

  -h, --help                    output usage information and exit
  -U, --remove-user-mounts      remove all user mounts
  -V, --version                 output version information and exit
</screen>

<para>The <command>umount</command> program removes mounts from the
mount table in the current session.  If you specify a POSIX path that
corresponds to a current mount point, <command>umount</command> will
remove it from the current mount table.  Note that you can only remove
user mount points.  The <literal>-U</literal> flag may be used to
specify removing all user mount points from the current user session.</para>

<para>See <xref linkend="mount-table"></xref> for more information on the mount
table.</para>
</sect2>

</sect1>
@


1.101
log
@	* utils.sgml (mount): Document sparse mount option.
@
text
@@


1.100
log
@* Makefile.in (CYGWIN_BINS): Add pldd.
(pldd.exe): Add -lpsapi to ALL_LDFLAGS.
* pldd.c: New file.
* utils.sgml (pldd): New section.
@
text
@d1157 2
@


1.99
log
@	* utils.sgml: Fix typos.
@
text
@d1437 17
@


1.98
log
@	* Makefile.in (CYGWIN_BINS): Add tzset.
	* tzset.c: New tool, new file.
	* utils.sgml (tzset): New section.

	* new-features.sgml (ov-new1.7.10): Add tzset.

	* release/1.7.10: Add tzset.
@
text
@d133 1
a133 1
that is relevent to Cygwin programs.  These registry entries are the
d144 1
a144 1
<literal>cygwin.com</literal> web site.  In fact, it is equalivant to the
d236 1
a236 1
This problem is probably due to using incompatible versions of the cygwin DLL.
d241 1
a241 1
are unable to find another cygwin DLL.
d349 1
a349 1
<xref linkend="setup-locale"></xref>.  This is sometimes not sufficent for
d408 1
a408 1
their internal numeric code (decimal or 0xhex). For valid codes and
d1888 1
a1888 1
Because the SSP was originally designed to profile the cygwin DLL, it
@


1.97
log
@	* mkgroup.c: Drop support for NT4 domains.
	* mkpasswd.c: Ditto.
	(psx_dir): Remove.
	(current_user): Drop support for -m option.  Use $HOME as is since it's
	a POSIX path anyway.
	(enum_users): Drop support for -m option.
	(usage): Mention -m option as ignored.
	(main): Drop support for -m option.  Mark ignored options as deprecated.
	* utils.sgml (mkpasswd): Remove description of -m option.
@
text
@d2120 28
@


1.96
log
@	* utils.sgml (getconf): Expand documentation.
@
text
@a962 1
   -m,--no-mount           don't use mount points for home dir
d969 1
d1016 1
a1016 5
The <literal>-m</literal> option bypasses the current
mount table so that, for example, two users who have a Windows home 
directory of H: could mount them differently.  For more information on
SIDs, see <xref linkend="ntsec"></xref> in the Cygwin User's Guide.  The
<literal>-p</literal> option causes <command>mkpasswd</command> to
@


1.95
log
@	* Align usage output, version output, as well as usage and version
	option handling to use the same style throughout all Cygwin utils.
	Throughout use program_invocation_short_name to refer to current
	process name in Cygwin executables.
	* utils.sgml: Align documentation to above change.  Add missing
	sections for getconf, ldd, and setmetamode.
	* strace.cc (proc_child): Avoid compiler warning.
@
text
@d487 14
a500 2
If <literal>pathname</literal> is given, <command>getconf</command> prints
the value of the configuration variable for the specified pathname.</para>
d504 4
a507 1
should be printed.</para>
d510 2
a511 1
configuration variables.</para>
@


1.94
log
@	* locale.cc (usage): Restructure, rephrase, add new options.  Drop
	arguments, don't exit.
	(print_version): New function.
	(longopts): Add -f, -n, and -V options.  Reorder.
	(opts): Add -f, -n, and -V options.
	(main): Call GetSystemDefaultUILanguage for -s option.  Call
	GetUserDefaultUILanguage for -u option.  Add -f and -n options and
	call GetUserDefaultLCID and GetSystemDefaultLCID respectively.  Return
	0 after calling usage in -h case.  Add -V option and call print_version.
	Don't print full usage in default case, rather just a short help message
	similar to GNU tools.
	* utils.sgml (locale): Align to above changes.  Rephrase description.
@
text
@d28 1
d274 1
d278 1
d285 1
d287 1
d297 1
d299 1
d308 1
d310 1
d316 1
a316 1
  -v, --version         output version information and exit
d422 1
d428 1
a428 1
-v, --version  output version information and exit
d467 32
d503 1
d512 1
a512 1
  -v, --version  output version information and exit
d552 1
d559 1
a559 1
 -v, --version   output version information and exit
d650 22
d678 1
d824 1
d828 1
d857 1
a857 1
   -v,--version            print version information and exit
d921 1
d925 1
d956 1
a956 1
   -v,--version            version information and exit
d1032 1
d1044 1
a1044 1
  -v, --version                 output version information and exit
d1241 4
a1244 3
<para>Limitations: there is a hard-coded limit of 30 mount
points.  Also, although you can mount to pathnames that do not start
with "/", there is no way to make use of such mount points.</para>
d1280 1
d1312 1
a1312 1
  -v, --version            output version information and exit.
d1429 1
d1440 1
a1440 1
 -v, --version   output version information and exit
d1491 1
d1495 1
d1508 1
d1514 1
d1520 1
d1531 1
d1535 1
d1664 1
d1676 1
a1676 1
  -v, --version    output version information and exit
d1810 22
d1836 1
d2034 1
d2054 1
a2054 1
  -v, --version                output version information and exit
d2112 1
d2117 1
a2117 1
  -v, --version                 output version information and exit
@


1.93
log
@2011-04-12  Jon TURNEY  <jon.turney@@dronecode.org.uk>

        * utils.sgml (strace): Fix a pair of exchanged lines in usage text.
@
text
@d609 1
a609 1
Usage: locale [-amsuUvh]
d611 1
d614 1
a614 1
Options:
d617 5
d624 12
a635 5
  -m, --charmaps       List all available character maps
  -s, --system         Print system default locale
  -u, --user           Print user's default locale
  -U, --utf            Attach ".UTF-8" to the result
  -v, --verbose        More verbose output
d637 1
d643 5
d649 10
a658 5
default locale to stdout.  The <literal>-s</literal> option prints the
systems default locale instead.  With the <literal>-U</literal> option
<command>locale</command> appends a ".UTF-8".  This can be used in scripts
to set the Cygwin locale to the Windows user or system default, for instance:
</para>
d664 3
@


1.92
log
@	* passwd.c (main): Add the ability to specify a username for the -R
	command.
	* utils.sgml: Document the aforementioned change.
@
text
@d1918 1
a1919 1
                               traced. Requires -p &lt;pid&gt;
@


1.91
log
@	* mount.cc (do_mount): Don't treat "bind" mount as remote mount.
	(mount_entries): Drop the "bind" option from output.
	* utils.sgml (mount): Match examples to actual mount output.  Add
	"bind" option and add example.
@
text
@d1310 8
a1317 6
do.  If normal, non-admin users should be allowed to enter their
passwords using <command>passwd -R</command>, it's required to run
<command>cygserver</command> as a service under the LocalSystem account
before running <command>passwd -R</command>.  This only affects storing
passwords.  Using passwords in privileged processes does not require
<command>cygserver</command> to run.</para>
@


1.90
log
@	* utils.sgml (locale): Change stray local cygdrive prefix to Cygwin's
	default.
@
text
@d967 5
a971 5
c:\cygwin\bin on /usr/bin type ntfs (binary)
c:\cygwin\lib on /usr/lib type ntfs (binary)
c:\cygwin on / type ntfs (binary)
c: on /c type ntfs (binary,user,noumount)
d: on /d type fat (binary,user,noumount)
d975 5
a979 5
<para>In this example, c:\cygwin is the POSIX root and D drive is mapped to
<filename>/d</filename>.  Note that in this case, the root mount is a
system-wide mount point that is visible to all users running Cygwin
programs, whereas the <filename>/d</filename> mount is only visible
to the current user.</para>
d982 1
a982 1
adding new mounts to the mount table.  The following example
d997 5
a1001 5
c:/cygwin/bin on /usr/bin type ntfs (binary)
c:/cygwin/lib on /usr/lib type ntfs (binary)
c:/cygwin on / type ntfs (binary)
c: on /c type ntfs (binary,user,noumount)
d: on /d type fat (binary,user,noumount)
d1022 7
d1081 10
@


1.89
log
@	* utils.sgml (mount): Add description for "dos" and "ihash" mount
	options.
@
text
@d686 1
a686 1
locale: ca_ES@@euro      archive: /mnt/c/Windows/system32/kernel32.dll
@


1.88
log
@	* utils.sgml (kill): Add SIGIO, SIGCLD, and SIGPWR.
@
text
@d1023 4
d1028 4
@


1.87
log
@	* utils.sgml (locale): Change description of -a and -av to match
	latest changes.
@
text
@d588 1
d591 1
d599 1
@


1.86
log
@* strace.cc (mnemonic_table): Add "special" mask option.
(usage): Document it.
* utils.sgml: Ditto.
@
text
@d641 1
a641 3
and the allowed modifiers.  The <literal>-v</literal> option prints
additionally the English names of the language and territory connected
to this locale.  Example:</para>
d644 8
a651 3
bash$ locale -av
ar_SA            Arabic (Saudi Arabia)
ar_IQ            Arabic (Iraq)
d653 3
a655 2
zh_TW            Chinese (Traditional) (Taiwan)
zh_TW@@cjknarrow  Chinese (Traditional) (Taiwan)
d657 4
a660 2
de_AT            German (Austria)
de_AT@@euro       German (Austria)
d662 19
a680 3
en_US            English (United States)
en_GB            English (United Kingdom)
en_AU            English (Australia)
d682 13
a694 2
sr_RS            Serbian (Cyrillic) (Serbia)
sr_RS@@latin      Serbian (Latin) (Serbia)
@


1.85
log
@utils/ChangeLog:
* strace.cc (mnemonic_table): Add pthread mask option.
(usage): Document strace pthread mask option.
* utils.sgml: Ditto.

cygwin/ChangeLog:
* include/sys/strace.h: Remove old code.  Add support for ptrace
tracing.
@
text
@d1867 21
a1887 19
    all      0x00001 (_STRACE_ALL)      All strace messages.
    flush    0x00002 (_STRACE_FLUSH)    Flush output buffer after each message.
    inherit  0x00004 (_STRACE_INHERIT)  Children inherit mask from parent.
    uhoh     0x00008 (_STRACE_UHOH)     Unusual or weird phenomenon.
    syscall  0x00010 (_STRACE_SYSCALL)  System calls.
    startup  0x00020 (_STRACE_STARTUP)  argc/envp printout at startup.
    debug    0x00040 (_STRACE_DEBUG)    Info to help debugging. 
    paranoid 0x00080 (_STRACE_PARANOID) Paranoid info.
    termios  0x00100 (_STRACE_TERMIOS)  Info for debugging termios stuff.
    select   0x00200 (_STRACE_SELECT)   Info on ugly select internals.
    wm       0x00400 (_STRACE_WM)       Trace Windows msgs (enable _strace_wm).
    sigp     0x00800 (_STRACE_SIGP)     Trace signal and process handling.
    minimal  0x01000 (_STRACE_MINIMAL)  Very minimal strace output.
    pthread  0x02000 (_STRACE_PTHREAD)  Pthread calls.
    exitdump 0x04000 (_STRACE_EXITDUMP) Dump strace cache on exit.
    system   0x08000 (_STRACE_SYSTEM)   Serious error; goes to console and log.
    nomutex  0x10000 (_STRACE_NOMUTEX)  Don't use mutex for synchronization.
    malloc   0x20000 (_STRACE_MALLOC)   Trace malloc calls.
    thread   0x40000 (_STRACE_THREAD)   Thread-locking calls.
@


1.84
log
@	* Makefile.in (CYGWIN_BINS): Rename getlocale to locale.
	* getlocale.c: Rename to ...
	* locale.cc: Revamp to add full functionality of POSIX locale(1) tool,
	as far as Cygwin supports it.
	* utils.sgml (getlocale): Move and rename to ...
	(locale): Accommodate new functionality.
@
text
@d1880 1
@


1.83
log
@	* getlocale.c (main): Rename local variable to avoid problems.
	Avoid string comparisons, rather test language and sublanguage codes
	wheere possible.  Add more code to handle Serbian language/territory
	state identical on all Windows versions.  Fix handling for "@@latin"
	modifier in Belarusian locale.
	* utils.sgml (getlocale): Try to make wording and example clearer.
@
text
@a503 55
<sect2 id="getlocale"><title>getlocale</title>

<screen>
Usage: getlocale [-asuh]
Print Windows locale(s)

Options:

  -a, --all       List all available locales
  -s, --system    Print system default locale
                  (default is current user default locale)
  -u, --utf       Attach ".UTF-8" to the result
  -h, --help      this text
</screen>

<para><command>getlocale</command> without parameters just prints the
current user's Windows default locale to stdout.  The <literal>-s</literal>
option prints the systems default locale instead.  With the
<literal>-u</literal> option <command>getlocale</command> appends a ".UTF-8".
This can be used in scripts to set the Cygwin locale to the Windows user
or system default, for instance, for a US-based user:
</para>

<screen>
bash$ export LANG=$(getlocale -u)
bash$ echo $LANG
en_US.UTF-8
</screen>

<para>The <literal>-a</literal> option is helpful to learn which locales
are supported by your Windows machine.  It prints all available locales,
their meaning, and the allowed modifiers.  Example:</para>

<screen>
bash$ getlocale -a
ar_SA            Arabic (Saudi Arabia)
ar_IQ            Arabic (Iraq)
...
zh_TW            Chinese (Traditional) (Taiwan)
zh_TW@@cjknarrow  Chinese (Traditional) (Taiwan)
...
de_AT            German (Austria)
de_AT@@euro       German (Austria)
...
en_US            English (United States)
en_GB            English (United Kingdom)
en_AU            English (Australia)
...
sr_RS            Serbian (Cyrillic) (Serbia)
sr_RS@@latin      Serbian (Latin) (Serbia)
...
</screen>

</sect2>

d603 87
@


1.82
log
@	* Makefile.in (CYGWIN_BINS): Add getlocale.
	* getlocale.c: New file.
	* utils.sgml (getlocale): New section describing new getlocale tool.
@
text
@d523 2
a524 1
This can be used in scripts to set the Cygwin locale, for instance:
d534 2
a535 2
are supported by your Windows machine.  It prints the locales and their
actual meaning, like this:</para>
d541 1
d543 5
a547 3
zh_CN            Chinese (Simplified) (People's Republic of China)
zh_HK            Chinese (Traditional) (Hong Kong S.A.R.)
da_DK            Danish (Denmark)
d552 3
@


1.81
log
@	* regtool.cc: Throughout, convert all registry calls to wide char
	calls and use string conversion according to current locale.
	(longopts): Change "dword-le" to "dword-be", as was originally
	intended.
	(usage): Change usage accordingly.
	(print_version): Simplify copyright dates in output.
	(cmd_list): Handle REG_LINK like REG_SZ.
	(cmd_get): Ditto.
	(main): Call setlocale.
	* utils.sgml (regtool): Fix options and add missing descriptions for
	new features.
@
text
@d504 48
@


1.80
log
@	* cygcheck.cc: Include cygprops.h.
	(del_orphaned_reg): New option variable.
	(unique_object_name_opt): Ditto.
	(handle_reg_installation): New function.
	(print_reg_installations): Ditto.
	(del_orphaned_reg_installations): Ditto.
	(memmem): Ditto.
	(handle_unique_object_name): Ditto.
	(dump_sysinfo): Call print_reg_installations from here.
	(usage): Add usage for new options --delete-orphaned-installation-keys,
	--enable-unique-object-names, --disable-unique-object-names, and
	--show-unique-object-names.
	(longopts): Add new options --delete-orphaned-installation-keys,
	--enable-unique-object-names, --disable-unique-object-names, and
	--show-unique-object-names.
	(main): Handle new options.
	* utils.sgml (cygcheck): Change documentaion accordingly.
@
text
@d1260 2
d1265 1
d1269 2
d1351 7
d1363 6
a1370 1
<literal>-i</literal> means the value is an integer (REG_DWORD).
a1371 1
<literal>-s</literal> means the value is a string (REG_SZ).
d1374 2
a1375 1
number, it's a DWORD.  If it starts with a percent, it's an expanding
d1377 3
a1379 3
a regular string.
The <literal>unset</literal> action removes a value from a key.
</para>
@


1.79
log
@	* Makefile.in (path-mount.o): Add a rule to build stripped down version
	of path.cc for usage in mount.
	(mount.exe): Add dependency to path-mount.o.
	* mount.cc (force): Convert to bool value.  Accommodate throughout.
	(from_fstab): New function.
	(do_mount_from_fstab): New function.
	(longopts): Add --all option.
	(opts): Add -a option.
	(usage): Document -a/--all option.
	(main): Handle -a option as well as single parameter.
	* path.cc: Add FSTAB_ONLY conditional to allow building path-mount.o.
	(mount_table): Remove static storage class.
	(max_mount_entry): Ditto.
	(root_here): Unused.  Remove.
	(from_fstab_line): Remove static.
	* path.h (struct mnt_t): Define here rather than in path.cc.
	(from_fstab_line): Declare.
	(mount_table): Declare.
	(max_mount_entry): Declare.
	* utils.sgml (mount): Document -a/--all option and mounting of single
	path from fstab files.
@
text
@d16 3
a18 3
Usage: cygcheck PROGRAM [ -v ] [ -h ]
       cygcheck -c [ PACKAGE ... ] [ -d ]
       cygcheck -s [ -r ] [ -v ] [ -h ]
d20 2
a21 2
       cygcheck -f FILE [ FILE ... ]
       cygcheck -l [ PACKAGE ... ]
d23 5
d44 13
d205 59
@


1.78
log
@	* cygpath.cc (codepage): New variable.
	(long_options): Add --codepage option.
	(options): Add -C option.
	(usage): Add -C/--codepage description.
	(my_wcstombs): New function.  Use througout instead of wcstombs.
	(do_options): Handle -C/--codepage option.
	* utils.sgml (cygpath): Add description for new -C/--codepage option.
@
text
@d732 2
d736 1
d842 24
@


1.77
log
@cygwin ChangeLog
2009-05-13  Corinna Vinschen  <corinna@@vinschen.de>
	    Christopher Faylor  <me+cygwin@@cgf.cx>

	* mount.cc (mount_info::got_usr_bin): Define.
	(mount_info::got_usr_lib): Ditto.
	(mount_info::root_idx): Ditto.
	(mount_info::create_root_entry): Create root entry as immutable and
	flag as automatic.
	(mount_info::init): Remove "Huh?  No /etc/fstab..." warning.
	Unconditionally call from_fstab for user and system tables.  Fill in
	/usr/bin and /usr/lib if they have not been specified in /etc/fstab.
	(oopts): Alphabetize.  Add "override" option to allow overriding
	immutable mount points.
	(mount_info::add_item): Accommodate new MOUNT_IMMUTABLE flag intended
	for root mount.
	(mount_info::add_item): Detect "/usr/bin", "/usr/lib", and "/" and set
	appropriate global state.
	(fillout_mntent): Add ,auto to mount points added by Cygwin DLL.
	(mount): Remove masking of MOUNT_SYSTEM.  Allow user to shoot
	themselves.  Add comment.
	* mount.h (mount_info::got_usr_bin): Declare.
	(mount_info::got_usr_lib): Ditto.
	(mount_info::root_idx): Ditto.
	* include/sys/mount.h: Reformat enum.
	Add MOUNT_{OVERRIDE,IMMUTABLE,AUTOMATIC}.

doc ChangeLog
2009-05-13  Corinna Vinschen  <corinna@@vinschen.de>
	    Christopher Faylor  <me+cygwin@@cgf.cx>

	* pathnames.sgml (mount-table): Sort mount options and add override
	option.  Add description of root mount handling.

utils ChangeLog
2009-05-13  Corinna Vinschen  <corinna@@vinschen.de>
	    Christopher Faylor  <me+cygwin@@cgf.cx>

	* mount.cc (oopts): Sort.  Add override option.  Add dummy "auto"
	option for consistency.
	(mount_entries): Avoid adding auto-mounted entries to -m output.

	* utils.sgml: Sort mount options.  Add description of override option.
@
text
@d210 5
d257 24
d304 1
a304 1
		XPATH="$(cygpath -w "${1}")";
@


1.76
log
@	* utils.sgml: Various syntactical and semantical fixes.
	* cygcheck.cc (usage): Fix --find-package explanation.
@
text
@a788 1
  noacl      - Ignore ACLs and fake POSIX permissions.
d790 1
a790 1
  text       - Files default to CRLF text mode line endings.
d792 2
d795 1
a795 2
  cygexec    - Treat all files below mount point as cygwin executables.
  nosuid     - No suid files are allowed (currently unimplemented)
d799 1
@


1.75
log
@	* utils.sgml (passwd -R): Remove references to CYGWIN="server".
@
text
@d35 1
a35 1
  -f, --find-package   find the package that FILE belongs to
d376 1
a376 1
see <xref linkend="ntsec"></xref> in the Cygwin User's Guide.
d445 1
a445 1
part), like these examples:</para>
d563 1
a563 1
(offset + RID = gid).  This allows to create the same gids every time you
d570 1
a570 1
<literal>-S</literal> option, for instance</para>
d583 1
a583 1
The <literal>-U</literal> option allows to enumerate the standard UNIX
d587 1
a587 1
up as group in <command>ls -l</command> output.
d670 1
a670 1
<literal>-S</literal> option, simialar to the <command>mkgroup</command>.
d690 1
a690 1
The <literal>-U</literal> option allows to enumerate the standard UNIX
d811 1
a811 1
to output the current mount table in a series of fstab entries.  This allows
d1020 2
a1021 2
This allows to logon through, for instance, <command>ssh</command> with
public key authentication and to get a full qualified user token with
d1023 2
a1024 2
drawbacks security-wise.  This is explained in more detail in the
<xref linkend="ntsec"></xref> section.</para>
d1026 1
a1026 1
<para>Please note that storing password in that registry area is a
d1081 1
a1081 1
By default <command>ps</command> will only show processes owned by the
d1169 2
a1170 2
<para>The <literal>-w</literal> option allows to access the 64 bit view
on the registry.  Several subkeys exist in a 32 bit and a 64 bit version
d1172 2
a1173 2
has only access to the 32 bit view of these registry keys.  When using
the <literal>-w</literal> the 64 bit view is used and
d1178 3
a1180 3
<para>The <literal>-W</literal> option allows to access the 32 bit view
on the registry.  The purpose of this  option is mainly symmetry.  It
allows to create OS agnostic scripts which would also work in a hypothetic
d1193 1
a1193 1
The <literal>get</literal> action gets the value of a value of a key,
@


1.74
log
@	* passwd.c (usage): Change description for -d option according to
	previous change.
	(main): Fix typo.
	* utils.sgml: Add missing description for passwd -d option.
@
text
@d936 1
a936 2
Non-Admin users can only store their password if cygserver is running and
the CYGWIN environment variable is set to contain the word 'server'.
d1031 2
a1032 5
and the environment variable CYGWIN
(see <xref linkend="using-cygwinenv"></xref>)
must be set to contain the "server" setting before running
<command>passwd -R</command>.  This only affects storing passwords.
Using passwords in privileged processes does not require
@


1.73
log
@	* utils.sgml: Fix typo.
@
text
@d922 4
d1003 11
d1015 3
a1017 3
a password which then gets stored in a special area of the registry,
which is also used by Windows to store passwords of accounts running
Windows services.  When a privileged Cygwin application calls the
@


1.72
log
@	* utils.sgml: Set example prompt to "$" throughout.  Don't use "/"
	as example cygdrive prefix.  Remove reference to -u and -s options.
	Add an example using the -o flag.
@
text
@d38 1
a38 1
                       repository (requies internet connectivity)
@


1.71
log
@	* utils.sgml: Fix typo in passwd screen text.
@
text
@d184 1
a184 1
<prompt>C:\cygwin&gt;</prompt> <userinput>cygcheck -s -v -r -h &gt; cygcheck_output.txt</userinput>
d734 1
a734 1
<prompt>c:\cygwin\&gt;</prompt> <userinput>mount</userinput>
d759 1
a759 1
<prompt>c:\cygwin\&gt;</prompt> <userinput>ls /data</userinput>
d761 1
a761 1
<prompt>c:\cygwin\&gt;</prompt> <userinput>mount //pollux/home/joe/data /data</userinput>
d763 1
a763 1
<prompt>c:\cygwin\&gt;</prompt> <userinput>mount</userinput>
d829 1
a829 1
set the automount prefix to <filename>/</filename>:</para>
d834 1
a834 1
<prompt>c:\cygwin\&gt;</prompt> <userinput>mount --change-cygdrive-prefix /</userinput>
d841 1
a841 2
mounts by default if you do not specify a type.  Use the <literal>-s</literal> 
or <literal>-u</literal> flag to indicate a system or user mount, respectively.
d843 1
a843 1
<literal>-p</literal> option.  Using the <literal>-b</literal>
d845 10
a854 1
automounted filesystems default to binary mode file accesses.</para>
@


1.70
log
@* utils.sgml: Convert some backslashes to slashes.
@
text
@d904 1
a904 1
                           to this user context with network credentials."
@


1.69
log
@	* passwd.c (longopts): Add --reg-store-pwd option.
	(opts): Add -R option.
	(usage): Add text for -R/--reg-store-pwd option.
	(main): Fix size of local user and password string arrays.
	Handle -R option.
	* utils.sgml: Add text for passwd -R/--reg-store-pwd option.
@
text
@d752 1
a752 1
<filename>\\pollux\home\joe\data</filename> to <filename>/data</filename>
d764 4
a767 4
\\pollux\home\joe\data on /data type smbfs (binary)
c:\cygwin\bin on /usr/bin type ntfs (binary)
c:\cygwin\lib on /usr/lib type ntfs (binary)
c:\cygwin on / type ntfs (binary)
@


1.68
log
@	* mount.cc (NT_MAX_PATH): Define.
	(longopts): Rename mount-commands option to mount-entries.
	(opts): Remove removed options.
	(struct opt): Move up in file to allow using it in usage.
	(usage): Change text for --mount-entries option.  Remove
	-X option.  Add valid options output.
	(main): Remove handling -b option.
	(convert_spaces): New static function to convert spaces to "\040"
	string.
	(mount_entries): Renamed from mount_commands.  Rewrite to emit
	/etc/fstab compatible output.
	(show_cygdrive_info): Print "nouser" rather than "system".
	* umount.cc (longopts): Remove remove-all-mounts,
	remove-cygdrive-prefix, remove-system-mounts, system and user options.
	(opts): Remove A, c, s, S, u options.
	(usage): Remove text for all removed options.
	(main): Remove handling for all removed options.
	(remove_all_mounts): Remove.
	(remove_all_system_mounts): Remove.
	(remove_cygdrive_prefix): Remove.
	* utils.sgml: Fix mount and umount documentation.  Move description
	of (cyg,not)exec options to mount table section.
@
text
@d902 3
d922 9
d991 25
@


1.67
log
@
	* utils.sgml: Remove useless text.
@
text
@a704 2
  -b, --binary     (default)    text files are equivalent to binary files
                                (newline = \n)
d709 2
a710 2
  -m, --mount-commands          write mount commands to replicate user and
                                system mount points and cygdrive prefixes
a712 3
  -s, --system     (default)    add system-wide mount point
  -t, --text                    text files get \r\n line endings
  -u, --user                    add user-only mount point
a713 5
  -x, --executable              treat all files under mount point as executables
  -E, --no-executable           treat all files under mount point as 
                                non-executables
  -X, --cygwin-executable       treat all files under mount point as cygwin
                                executables
d718 7
a724 4
done by mount commands on typical UNIX systems.  Please see
<xref linkend="mount-table"></xref> for more information on the concepts
behind the Cygwin POSIX file system and strategies for using
mounts. To remove mounts, use <command>umount</command></para>
d735 5
a739 5
c:\cygwin\bin on /usr/bin type system (binmode)
c:\cygwin\lib on /usr/lib type system (binmode)
c:\cygwin on / type system (binmode)
c: on /c type user (binmode,noumount)
d: on /d type user (binmode,noumount)
d752 2
a753 1
<filename>\\pollux\home\joe\data</filename> to <filename>/data</filename>.
d761 1
a761 1
<prompt>c:\cygwin\&gt;</prompt> <userinput>mount \\pollux\home\joe\data /data</userinput>
d764 6
a769 6
\\pollux\home\joe\data on /data type sytem (binmode)
c:\cygwin\bin on /usr/bin type system (binmode)
c:\cygwin\lib on /usr/lib type system (binmode)
c:\cygwin on / type system (binmode)
c: on /c type user (binmode,noumount)
d: on /d type user (binmode,noumount)
d773 7
a779 47
<para>Note that <command>mount</command> was invoked from the Windows
command shell in the previous example.  In many Unix shells, including
bash, it is legal and convenient to use the forward "/" in Win32
pathnames since the "\" is the shell's escape character. </para>

<para>The <literal>-s</literal> flag to <command>mount</command> is used to add a mount
in the system-wide mount table used by all Cygwin users on the system,
instead of the user-specific one.  System-wide mounts are displayed
by <command>mount</command> as being of the "system" type, as is the
case for the <filename>/</filename> partition in the last example.
Under Windows NT, only those users with Administrator priviledges are
permitted to modify the system-wide mount table.</para>

<para>Note that a given POSIX path may only exist once in the user
table and once in the global, system-wide table.  Attempts to replace
the mount will fail with a busy error.  The <literal>-f</literal> (force) flag causes
the old mount to be silently replaced with the new one.  It will also
silence warnings about the non-existence of directories at the Win32
path location.</para>

<para>The <literal>-b</literal> flag is used to instruct Cygwin to treat binary and
text files in the same manner by default.  Binary mode mounts are
marked as "binmode" in the Flags column of <command>mount</command>
output.  By default, mounts are in text mode ("textmode" in the Flags
column).</para>

<para>Normally, files ending in certain extensions (.exe, .com, .bat, .cmd) 
are assumed to be executable.  Files whose first two characters begin with 
'#!' are also considered to be executable.  
The <literal>-x</literal> flag is used to instruct Cygwin that the 
mounted file is "executable".  If the <literal>-x</literal> flag is used 
with a directory then all files in the directory are executable.  
This option allows other files to be marked as executable and avoids the 
overhead of opening each file to check for a '#!'.  The <literal>-X</literal>
option is very similar to <literal>-x</literal>, but also prevents Cygwin
from setting up commands and environment variables for a normal Windows 
program, adding another small performance gain.  The opposite of these 
flags is the <literal>-E</literal> flag, which means that no files should be 
marked as executable.  </para>

<para>
The <literal>-m</literal> option causes the <command>mount</command> utility
to output a series of commands that could recreate both user and system mount 
points. You can save this output as a backup when experimenting with the
mount table. It also makes moving your settings to a different machine
much easier.
</para>
d787 29
a815 11
  user       - mount lives user-specific mount
  system     - mount lives in system table (default)
  binary     - files default to binary mode (default)
  text       - files default to CRLF text mode line endings
  exec       - files below mount point are all executable
  notexec    - files below mount point are not executable
  cygexec    - files below mount point are all cygwin executables
  nosuid     - no suid files are allowed (currently unimplemented)
  managed    - directory is managed by cygwin.  Mixed case and special
               characters in filenames are allowed.
</screen>
a1619 2
  -A, --remove-all-mounts       remove all mounts
  -c, --remove-cygdrive-prefix  remove cygdrive prefix
a1620 3
  -s, --system                  remove system mount (default)
  -S, --remove-system-mounts    remove all system mounts
  -u, --user                    remove user mount
d1626 5
a1630 13
mount table.  If you specify a POSIX path that corresponds to a
current mount point, <command>umount</command> will remove it from the
system registry area.  (Administrator priviledges are required).
The <literal>-u</literal> flag may be used to specify removing the mount 
from the user-specific registry area instead.</para>

<para>The <command>umount</command> utility may also be used to remove
all mounts of a particular type.  With the extended options it is
possible to remove all mounts (<literal>-A</literal>), all 
cygdrive automatically-mounted mounts (<literal>-c</literal>), all
mounts in the current user's registry area (<literal>-U</literal>), 
or all mounts in the system-wide registry area (<literal>-S</literal>) 
(with Administrator privileges).</para>
d1632 1
a1632 1
<para>See <xref linkend="mount"></xref> for more information on the mount
@


1.66
log
@	* mkgroup.c: Rework to allow per-domain/per-machine id_offset.
	Add -b option to skip builtin groups.
	(main): Simplify code.
	* mkpasswd.c: Rework to allow per-domain/per-machine id_offset.
	(main): Simplify code.
	* utils.sgml: Explain changed mkgroup/mkpasswd -d/-D/-l/-L options.
	Add mkgroup -b option.
@
text
@a251 6
<para>Caveat: The <literal>-l</literal> option does not work if the
<emphasis>check_case</emphasis> parameter of <emphasis>CYGWIN</emphasis> 
is set to <emphasis>strict</emphasis>, since Cygwin is not able to match 
any Windows short path in this mode.
</para>

d286 1
a286 1
<literal>-S</literal> might output C:\WINNT\SYSTEM32 or C:\WINDOWS\SYSTEM. 
d297 1
a297 3
On Win9x systems with only a single user, <literal>-A</literal> has no
effect; <literal>-D</literal> and <literal>-AD</literal> would have the
same output.  By default the output is in UNIX (POSIX) format; 
@


1.65
log
@	* mkgroup.c: Consolidate variable names.
	(enum_unix_groups): New function.
	(print_special): Use LookupAccountSidW instead of LookupAccountSidA.
	(current_group): Ditto.
	(usage): Add -U option.
	(longopts): Add --unix option.
	(opts): Add -U option.
	(main): Handle -U option.  Call enum_unix_groups if set.
	* mkpasswd.c: Consolidate variable names.
	(current_user): Use LookupAccountSidW instead of LookupAccountSidA.
	(enum_unix_users): New function.
	(usage): Add -U option.
	(longopts): Add --unix option.
	(opts): Add -U option.
	(main): Handle -U option.  Call enum_unix_groups if set.
	* utils.sgml: Add -U option text to mkgroup and mkpasswd description.
@
text
@d512 10
a521 6
   -l,--local [machine]    print local groups (from local machine if no
                           machine specified)
   -L,--Local [machine]    ditto, but generate groupname with machine prefix
   -d,--domain [domain]    print domain groups (from current domain if no
                           domain specified)
   -D,--Domain [domain]    ditto, but generate groupname with machine prefix
d531 1
d569 4
d607 10
a616 6
   -l,--local [machine]    print local user accounts (from local machine
                           if no machine specified)
   -L,--Local [machine]    ditto, but generate username with machine prefix
   -d,--domain [domain]    print domain accounts (from current domain
                           if no domain specified)
   -D,--Domain [domain]    ditto, but generate username with domain prefix
d669 4
@


1.64
log
@	* Makefile.in (cygcheck.exe): Link against ntdll.
	* bloda.cc: Use statically linked functions throughout.
	* cygpath.cc: Drop 9x considerations.
	* mkgroup.c: Revamp.  Redefine -l and -d options to take optional
	machine and domain parameters.  Redefine -c to work always, using
	token information.  Add -L, -D, -C to create unique groupnames in
	domain\group syntax.  Add -S option to define domain\group separator
	char.  Ignore -u and -s options.
	* mkpasswd.c: Revamp.  Redefine -l and -d options to take optional
	machine and domain parameters.  Redefine -c to work always, using
	token information.  Add -L, -D, -C to create unique usernames in
	domain\user syntax.  Add -S option to define domain\user separator
	char.  Ignore -g and -s options.  Prefer to take homedir from $HOME
	over $HOMEDRIVE/$HOMEPATH.
	* path.cc (oopts): Add "acl", "noacl", "posix=0" and "posix=1" options.
	(getmntent): Accomodate throughout.
	* ps.cc: Fix copyright dates.
	* utils.sgml: Fix text for mkgroup and mkpasswd.
@
text
@d527 5
d582 5
d616 5
d680 7
a686 1
the specified user.</para>
@


1.63
log
@	* utils.sgml: Add id's to all examples.
@
text
@d508 2
a509 2
Usage: mkgroup [OPTION]... [domain]...
Prints /etc/group file to stdout
d512 19
a530 11
   -l,--local             print local group information
   -c,--current           print current group, if a domain account
   -d,--domain            print global group information (from current
                          domain if no domains specified).
   -o,--id-offset offset  change the default offset (10000) added to gids
                          in domain accounts.
   -s,--no-sids           don't print SIDs in pwd field
                          (this affects ntsec)
   -u,--users             print user list in gr_mem field
   -g,--group groupname   only return information for the specified group\n");
   -h,--help              print this message
d532 2
a533 3
   -v,--version           print version information and exit

One of `-l' or `-d' must be given on NT/W2K.
d537 12
a548 8
configure your Windows system to be more UNIX-like by creating an
initial <filename>/etc/group</filename>.
Its use is essential on the NT series (Windows NT, 2000, and XP) to
include Windows security information.
It can also be used on the Win9x series (Windows 95, 98, and Me) to
create a file with the correct format.
To initially set up your machine if you are a local user, you'd do
something like this:</para>
a549 7
<example id="utils-mkgroup-ex"><title>Setting up the groups file for local accounts</title>
<screen>
<prompt>$</prompt> <userinput>mkdir /etc</userinput>
<prompt>$</prompt> <userinput>mkgroup -l &gt; /etc/group</userinput>
</screen>
</example>

d554 1
a554 1
<para>The <literal>-d</literal> and <literal>-l</literal> options
d556 2
a557 2
local machine or the domain (default or given), or both.
With the  <literal>-d</literal> option the program contacts the Domain
d559 16
a574 4
An entry for the current domain user can then be created by using the
option <literal>-c</literal> together with <literal>-l</literal>,
but <literal>-c</literal> has no effect when used with <literal>-d</literal>.
The <literal>-o</literal> option allows for special cases
d576 1
a576 11
The <literal>-s</literal>
option omits the NT Security Identifier (SID).  For more information on 
SIDs, see <xref linkend="ntsec"></xref> in the Cygwin User's Guide.  The
<literal>-u</literal> option causes <command>mkgroup</command> to 
enumerate the users for each group, placing the group members in the 
gr_mem (last) field.  Note that this can greatly increase
the time for <command>mkgroup</command> to run in a large domain.
Having gr_mem fields is helpful when a domain user logs in remotely
while the local machine is disconnected from the Domain Controller.
The <literal>-g</literal> option only prints the information for
one group.
d584 2
a585 2
Usage: mkpasswd [OPTION]... [domain]...
Prints /etc/passwd file to stdout
d588 11
a598 4
   -l,--local              print local user accounts
   -c,--current            print current account, if a domain account
   -d,--domain             print domain accounts (from current domain
                           if no domains specified)
d600 5
a604 3
                           in domain accounts.
   -g,--local-groups       print local group information too
                           if no domains specified
d606 2
a607 4
   -s,--no-sids            don't print SIDs in GCOS field
                           (this affects ntsec)
   -p,--path-to-home path  use specified path and not user account home dir or /home
   -u,--username username  only return information for the specified user
d611 2
a612 1
One of `-l', `-d' or `-g' must be given on NT/W2K.
d616 15
a630 10
configure your Windows system to be more UNIX-like by creating an
initial <filename>/etc/passwd</filename> from your system information.
Its use is essential on the NT series (Windows NT, 2000, and XP) to
include Windows security information, but the actual passwords are
determined by Windows, not by the content of <filename>/etc/passwd</filename>.
On the Win9x series (Windows 95, 98, and Me) the password field must be
replaced by the output of <userinput>crypt your_password</userinput>
if remote access is desired.
To initially set up your machine if you are a local user, you'd do
something like this:</para>
a631 7
<example id="utils-mkpasswd-ex"><title>Setting up the passwd file for local accounts</title>
<screen>
<prompt>$</prompt> <userinput>mkdir /etc</userinput>
<prompt>$</prompt> <userinput>mkpasswd -l &gt; /etc/passwd</userinput>
</screen>
</example>

d636 1
a636 1
<para>The <literal>-d</literal> and <literal>-l</literal> options
d639 8
a646 5
With the  <literal>-d</literal> option the program contacts the Domain
Controller, which my be unreachable or have restricted access.
An entry for the current domain user can then be created by using the
option <literal>-c</literal> together with <literal>-l</literal>,
but <literal>-c</literal> has no effect when used with <literal>-d</literal>.
d649 1
a649 3
The <literal>-g</literal> option creates a local
user that corresponds to each local group. This is because NT assigns groups
file ownership.  The <literal>-m</literal> option bypasses the current
d651 1
a651 2
directory of H: could mount them differently.  The <literal>-s</literal>
option omits the NT Security Identifier (SID).  For more information on
d664 2
a665 3
On Win9x machines the <literal>-u</literal> option creates an entry for
the specified user. On the NT series it restricts the output to that user,
greatly reducing the amount of time it takes in a large domain.</para>
@


1.62
log
@	* cygpath.cc (usage): Add -O and -F, remove tabs.
	(get_special_folder): New function.
	(get_user_folder): New function.
	(dowin): Add -O and -F, better -D, -P error handling.
	(main): Add -O and -F.
	* utils.sgml (cygpath): Document -O and -F.
@
text
@d84 1
a84 1
<example><title>Example <command>cygcheck</command> usage</title>
d131 1
a131 1
<example><title>Searching all packages for a file</title>
d273 1
a273 1
<example><title>Example <command>cygpath</command> usage</title>
d455 1
a455 1
<example><title>Using the kill command</title>
d539 1
a539 1
<example><title>Setting up the groups file for local accounts</title>
d613 1
a613 1
<example><title>Setting up the passwd file for local accounts</title>
d645 1
a645 1
<example><title>Using an alternate home root</title>
d692 1
a692 1
<sect3><title>Using mount</title>
d697 1
a697 1
<example>
d721 1
a721 1
<example>
d805 1
a805 1
<sect3><title>Cygdrive mount points</title>
d818 1
a818 1
<example>
d837 1
a837 1
<sect3><title>Limitations</title>
@


1.61
log
@	* regtool.cc (longopts): Add --wow32 option.
	(opts): Add -W option.
	(usage): Add text for --wow32/-W option.
	(main): Handle --wow32/-W option.
	* utils.sgml: Document the new -W option.
@
text
@d194 2
a195 1
       cygpath [-ADHPSW] 
d201 1
a201 1
  -M, --mode		report on mode of file (currently binmode or textmode)
d214 1
d218 1
d296 7
a302 1
<literal>-D</literal> and <literal>-P</literal> options. 
@


1.60
log
@	* regtool.cc (KEY_WOW64_64KEY): Define.
	(longopts): Add --wow64 option.
	(opts): Add -w option.
	(wow64): New variable to control usage of KEY_WOW64_64KEY access flag.
	(usage): Add text for --wow64/-w option.
	(print_version): Fix copyright.
	(find_key): Use wow64 value in calls to RegOpenKeyEx and RegCreateKeyEx.
	(cmd_add): Use wow64 value in call to RegCreateKeyEx.
	(regDeleteKeyEx): New function pointer to load RegDeleteKeyEx function
	dynamically.
	(cmd_remove): Load and use regDeleteKeyEx when wow64 is set.
	(main): Handle --wow64/-w option.
	* utils.sgml: Document the new -w option.
@
text
@d1064 1
d1100 5
@


1.59
log
@	* regtool.cc (options): Add 'binary'.
	(usage): Document 'load|unload|save' and '-b'.
	(find_key): Add 'options' parameter, add load/unload.
	(cmd_set): Add KT_BINARY case.
	(cmd_get): Add hex output in KT_BINARY case.
	(cmd_load): New function.
	(cmd_unload): New function.
	(set_privilege): New function.
	(cmd_save): New function.
	(commands): Add load, unload and save.
	(main): Add '-b'
	* utils.sgml (regtool): Document it.
@
text
@d1063 1
d1090 9
@


1.59.4.1
log
@	* regtool.cc (KEY_WOW64_64KEY): Define conditionally.
	(KEY_WOW64_32KEY): Ditto.
	(opts): Add missing 'W'.

	* regtool.cc (key_type): Drop.
	(REG_AUTO): Define.
	(value_type): Replace key_type.  Use REG_xxx values directly.
	Accomodate change throughout.
	(longopts): Add --dword, --dword-le, --none, --qword and --hex options.
	(opts): Add -d, -D, -n, -Q and -x options.
	(types): Array to convert REG_xxx into strings.
	(hex): New variable to keep value of --hex option.
	(usage): Accomodate new options.  Print only the necessary by default.
	Only be verbose in case of -h/--help option.
	(cmd_list): Use key separator from -K option when printing.
	Print value type when verbose option is given.  Handle so far not
	handled REG_xxx types.
	(cmd_set): Avoid SEGV due to missing argument.  Handle so far not
	handled REG_xxx types.
	(cmd_get): Handle --binary option type agnostic.  Handle so far not
	handled REG_xxx types.
	(main): Handle new options.

	* regtool.cc (longopts): Add --wow32 option.
	(opts): Add -W option.
	(usage): Add text for --wow32/-W option.
	(main): Handle --wow32/-W option.
	* utils.sgml: Document the new -W option.

	* regtool.cc (KEY_WOW64_64KEY): Drop definition.  Instead define
	WINVER to 0x0502 before including windows.h.

	* regtool.cc (KEY_WOW64_64KEY): Define.
	(longopts): Add --wow64 option.
	(opts): Add -w option.
	(wow64): New variable to control usage of KEY_WOW64_64KEY access flag.
	(usage): Add text for --wow64/-w option.
	(print_version): Fix copyright.
	(find_key): Use wow64 value in calls to RegOpenKeyEx and RegCreateKeyEx.
	(cmd_add): Use wow64 value in call to RegCreateKeyEx.
	(regDeleteKeyEx): New function pointer to load RegDeleteKeyEx function
	dynamically.
	(cmd_remove): Load and use regDeleteKeyEx when wow64 is set.
	(main): Handle --wow64/-w option.
	* utils.sgml: Document the new -w option.
@
text
@a1062 2
 -w, --wow64    access 64 bit registry view (ignored on 32 bit Windows)
 -W, --wow32    access 32 bit registry view (ignored on 32 bit Windows)
a1088 14
<para>The <literal>-w</literal> option allows to access the 64 bit view
on the registry.  Several subkeys exist in a 32 bit and a 64 bit version
when running on Windows 64.  Since Cygwin is running in 32 bit mode, it
has only access to the 32 bit view of these registry keys.  When using
the <literal>-w</literal> the 64 bit view is used and
<command>regtool</command> can access the entire registry.
This option is simply ignored when running on 32 bit Windows versions.
</para>

<para>The <literal>-W</literal> option allows to access the 32 bit view
on the registry.  The purpose of this  option is mainly symmetry.  It
allows to create OS agnostic scripts which would also work in a hypothetic
64 bit version of Cygwin.</para>

@


1.58
log
@	* ps.cc (longopts): Add --process option.
	(opts): Add -p option.
	(usage): Mention -p/--process option.
	(main): Handle -p option.
	* utils.sgml: Describe -p/--process option.
@
text
@d1026 1
a1026 1
Usage: regtool.exe [OPTION] (add | check | get | list | remove | unset) KEY
d1037 3
d1046 3
d1050 1
d1119 4
d1136 11
@


1.57
log
@*** cygwin DLL Changes:
* child_info.h (CURR_CHILD_INFO_MAGIC): Reset.
(child_info::dwProcessId): Delete.
(child_info::straced): New variable.
(child_info::handle_fork): New member function.
* dcrt0.cc (in_forkee): New global variable.
(__cygwin_user_data::forkee): Mark as obsolete.
(do_global_ctors): Use in_forkee rather than user_data->forkee.
(get_cygwin_startup_info): Ditto.  Deal with new straced field to allow strace
to deal with children of attached processes.
(initial_env): Accommodate changes to strace::hello.
(child_info_fork::handle_fork): Rename from plain old 'handle_fork'.  Move
alloc_stack() call elsewhere.
(dll_crt0_0): Fill out more of user_data.  Reference handle_fork via fork_info.
Add some debugging output.
(_dll_crt0): Don't wait for sync thread if sync_startup is invalid.  Zero
sync_startup here.  Call alloc_stack() here, if appropriate.
(dll_crt0_1): Use in_forkee rather than user_data->forkee.
(dll_crt0): Ditto.
* malloc_wrapper.cc (malloc_init): Ditto.
* dll_init.cc (in_forkee): Remove local static version of this variable.
(dll_list::load_after_fork): Don't set in_forkee here.
* external.cc (cygwin_internal): Use strace method rather than accessing field
directly.
* fhandler.cc (fhandler_base::read): Ditto.
* fhandler_tty.cc (fhandler_tty_common::__acquire_output_mutex): Ditto.
* fork.cc (frok::parent): Invoke strace write_childpid to communicate with
potential strace.
(child_copy): Add more detail to debugging output.
* init.cc (calibration_id): New static variable.
(prime_threads): Set sync_startup to invalid handle if we already know about
thread_func_ix.  Use static calibration_id to hold calibration thread id.
* munge_threadfunc (munge_threadfunc): Don't try to debug if we don't find
threadfunc_ix.
(dll_entry): Avoid calling munge_threadfunc and _cygtls::remove on non-cygwin
threads invoked during process startup.
* pinfo.cc (set_myself): Always call strace.hello here regardless of DEBUGGING.
* sigproc.cc (child_info::child_info): Remove spurious handling of dwProcessId.
Set straced as appropriate.
* spawn.cc (spawn_guts): Rename ciresrv to ch.  Invoke strace write_childpid to
communicate with potential strace.
* strace.cc: Include child_info.h.
(strace::hello): Remove inited test.  Use active() method to test if strace has
been activated.  Handle case where we are started before
(mypid): New function.
(strace::vsprntf): Try to deal more intelligently with case where progname may
not be filled out.  Put pid in parentheses if it is a windows pid rather than a
cygwin pid.  myself has been filled out.
(strace::write_childpid): New function for notifying strace about the creation
of children.
(strace::vprntf): Use strace method rather than accessing field directly.
(strace_printf): Ditto.
(strace::wm): Ditto.
* winsup.h (in_forkee): Declare.
* include/sys/strace.h (strace::write_childpid): Declare new function.
(strace::attached): Define new function.
(strace::active): Ditto.
(strace::active_val): Ditto.
(_STRACE_ON): Delete.
(_STRACE_OFF): Ditto.
(define_strace0): Use strace method rather than accessing field directly.
(strace_printf_wrap): Ditto.
(strace_printf_wrap1): Ditto.

*** cygwin utils changes:
* strace.cc (nprocesses): Make static global.
(quiet): New variable.
(strace_active): Ditto.
(add_child): Increment nprocesses here.  Don't add a child if it is already
added (windows bug?).  Report on child if not quiet.
(get_child): Just return NULL if child not found.
(remove_child): Report on child if not quiet.
(attach_process): Don't complain if given a windows process.  Use windows pid
in error.
(handle_output_debug_string): Issue error if trying to manipulate a process
that we don't know about.  Handle _STRACE_CHILD_PID - attach to reported child
when we get this.
(proc_child): Move nprocesses to file scope.  Report on exceptions.
(longopts): Implement "--quiet".
(opts): Implement "-q".
(main): Manipulate quiet flag.
* utils.sgml (strace): Add words describing '-q'.
@
text
@d973 1
d1012 3
a1014 1
to show only processes owned by a specific user. The <literal>-W</literal>
@


1.56
log
@* strace.cc (show_usecs): Renamed from 'usecs'.
(main): Use show_usecs rather than usecs.  Toggle delta if '-u' is specified.
(handle_output_debug_string): Avoid printing microsecond timestamp if
show_usecs == 0.
* utils.sgml (strace): Add words to describe '-u'.
@
text
@d1492 2
@


1.55
log
@* Makefile.in: Link cygcheck with libwininet.a.
* cygcheck.cc: Add includes.
(grep_packages): New global variable.
(display_internet_error): New function.
(safe_chars): New global variable.
(base_url): Ditto.
(package_grep): New function.
(usage): Reword --help output for clarity.  Document new argument.
(longopts): Add 'package-query' option.
(opts): Add 'p' option, reorder to be consistent with 'longopts'.
(main): Accommodate new option.
* utils.sgml (cygcheck): Update --help output.  Document new -p option.
@
text
@d1496 1
d1544 2
a1545 3
<command>cygcheck</command>). As a result it does not understand POSIX
pathnames or symlinks.  This program is mainly useful for debugging the 
Cygwin DLL itself.</para>
@


1.54
log
@add other options
@
text
@d16 31
a46 13
Usage: cygcheck [OPTIONS] [PROGRAM...]
Check system information or PROGRAM library dependencies

 -c, --check-setup   check packages installed via setup.exe
 -d, --dump-only     no integrity checking of package contents (requires -c)
 -s, --sysinfo       system information (not with -k)
 -v, --verbose       verbose output (indented) (for -[cfls] or programs)
 -r, --registry      registry search (requires -s)
 -k, --keycheck      perform a keyboard check session (not with -[scfl])
 -f, --find-package  find installed packages containing files (not with -[cl])
 -l, --list-package  list the contents of installed packages (not with -[cf])
 -h, --help          give help about the info (not with -[cfl])
 -V, --version       output version information and exit
d86 1
a86 1
$ cygcheck.exe -f /usr/bin/less
d89 1
a89 1
$ cygcheck.exe -l less
d119 59
@


1.53
log
@* mount.cc (usage): Clarify action of -m option.
@
text
@d139 7
@


1.52
log
@	* utils.sgml (mount): Clarify setting cygdrive prefix for user
	and system-wide.
@
text
@d577 1
a577 1
  -m, --mount-commands          write mount commands to replace user and
@


1.51
log
@
* cygpath.cc (usage): Clarify help output to indicate acceptance
of multiple file names as arguments.
@
text
@d732 5
a736 3
<para>Note that if you set a new prefix in this manner, you can
specify the <literal>-s</literal> flag to make this the system-wide default 
prefix.  By default, the cygdrive-prefix applies only to the system-wide setting.  
@


1.50
log
@	* .sgml: Cleanup markup for XML validity.
@
text
@d115 2
a116 1
Usage: cygpath (-d|-m|-u|-w|-t TYPE) [-c HANDLE] [-f FILE] [options] NAME
d121 1
a121 1
  -d, --dos             print DOS (short) form of NAME (C:\PROGRA~1\)
d124 2
a125 2
  -u, --unix            (default) print Unix form of NAME (/cygdrive/c/winnt)
  -w, --windows         print Windows form of NAME (C:\WINNT)
d129 1
a129 1
  -l, --long-name       print Windows long form of NAME (with -w, -m only)
d131 1
a131 1
  -s, --short-name      print DOS (short) form of NAME (with -w, -m only)
@


1.49
log
@	* mkgroup.cc (netapibufferallocate,netgroupgetinfo): New function
	pointers.
	(load_netapi): Load NetApiBufferAllocate and NetGroupGetInfo.
	(enum_local_groups,enum_groups): Add disp_groupname parameter.
	Load info for disp_groupname if specified.
	(usage): Add description of "-g/--group" option.
	(longopts,opts): Add "-g/--group" option.
	(main): Process "-g/--group" option.
	* utils.sgml (mkgroup): Add description of "-g/--group" option
@
text
@d37 1
a37 1
packages; see <xref linkend="internet-setup"> for more information.)
d290 1
a290 1
see <Xref Linkend="ntsec"> in the Cygwin User's Guide.
d468 1
a468 1
SIDs, see <Xref Linkend="ntsec"> in the Cygwin User's Guide.  The
d546 1
a546 1
SIDs, see <Xref Linkend="ntsec"> in the Cygwin User's Guide.  The
d594 1
a594 1
<Xref Linkend="mount-table"> for more information on the concepts
d1069 1
a1069 1
see <Xref Linkend="ntsec"> in the Cygwin User's Guide.
d1493 1
a1493 1
<para>See <Xref Linkend="mount"> for more information on the mount
@


1.48
log
@Define ps status flags
@
text
@d427 1
d475 2
@


1.47
log
@* cygpath.cc (long_options): Add "mode" option.
(options): Ditto.
(usage): Report on new option.
(report_mode): New function.
(main): Implement -M option.
@
text
@d904 5
a908 1
of the program running.
@


1.46
log
@	* utils.sgml: Update cygcheck options
@
text
@d122 1
@


1.45
log
@Cleanup minor markup problems.
@
text
@d16 1
a16 1
Usage: cygcheck [OPTIONS] [program ...]
d19 10
a28 8
 -c, --check-setup  check packages installed via setup.exe
 -s, --sysinfo      system information (not with -k)
 -v, --verbose      verbose output (indented) (for -s or programs)
 -r, --registry     registry search (requires -s)
 -k, --keycheck     perform a keyboard check session (not with -s)
 -h, --help         give help about the info (not with -c)
 -V, --version      output version information and exit
You must at least give either -s or -k or a program name
d31 49
a79 11
<para>The <command>cygcheck</command> program is a diagnostic utility
that examines your system and reports the information that is
significant to the proper operation of Cygwin programs.  It can give
information about specific programs or libraries you are trying to
run, general system information, or both.  If you list one or more
programs on the command line, it will diagnose the runtime environment
of that program or programs, providing the names of DLL files on which
the program depends.  If you specify the <literal>-s</literal>
option, it will give general system information.  If you specify
<literal>-s</literal> and list one or more programs on the command line,
it reports on both.</para>
a100 5
<para>The <literal>-c</literal> option causes the arguments
to be interpreted as package names.  <command>cygcheck</command> will
report the current version of the package that you specify, or with no
arguments, on all packages.</para>

d184 1
a184 1
<example><title>Example cygpath usage</title>
d193 2
a194 2
	fi
	explorer $XPATH &
@


1.44
log
@Document new passwd options.
@
text
@d151 1
d160 1
d1404 1
a1404 1
$ strace -o tracing_output -w sh -c 'while true; do echo "tracing..."; done' &
@


1.43
log
@change default for --change-default-prefix
@
text
@d739 2
a740 3
Usage: passwd (-l|-u|-S) [USER]
       passwd [-i NUM] [-n MINDAYS] [-x MAXDAYS] [-L LEN]
Change USER's password or password attributes
d743 9
a751 3
 -l, --lock      lock USER's account
 -u, --unlock    unlock USER's account
 -S, --status    display password status for USER (locked, expired, etc.)
d754 5
a758 5
 -i, --inactive  set NUM of days before inactive accounts are disabled
                 (inactive accounts are those with expired passwords)
 -n, --minage    set system minimum password age to MINDAYS
 -x, --maxage    set system maximum password age to MAXDAYS
 -L, --length    set system minimum password length to LEN
d761 8
a768 2
 -h, --help      output usage information and exit
 -v, --version   output version information and exit
d777 1
a777 1
<para>Password changes: The user is first prompted for their old
d785 1
a785 1
compare the second entry against the first.  Both entries are require to 
d793 15
a807 7
<para>Account maintenance: User accounts may be locked and unlocked with the
<literal>-l</literal> and <literal>-u</literal> flags.  The
<literal>-l</literal> option disables an account.  The <literal>-u</literal>
option re-enables an account.</para>

<para>The account status may be given with the <literal>-S</literal>
option.  The status information is self explanatory.</para>
@


1.42
log
@* mount.cc (struct opt): Remove posix option.
@
text
@d692 1
a692 1
prefix.  By default, the cygdrive-prefix applies only to the current user.  
@


1.41
log
@* mount.cc (longopts): Add long "options" keyword.
(opts): Add -o option.
(usage): Display -o option.
(struct opt): New.
(concat3): New function.
(main): Handle -o flag.
@
text
@d651 17
@


1.40
log
@* mkpasswd.c (usage) Remove extra newline from description output.
@
text
@d537 1
@


1.39
log
@Pierre's update for mkgroup/mkpasswd
@
text
@d17 2
d82 2
d184 1
d279 2
d377 1
a377 2

This program prints a /etc/group file to stdout
d444 1
a444 2

This program prints a /etc/passwd file to stdout
d527 2
d723 1
d801 2
d855 1
a965 1

d1115 2
d1312 2
d1384 2
@


1.38
log
@note mount binary default.
@
text
@d369 1
a369 1
Usage: mkgroup [OPTION]... [domain]
d376 3
a378 4
   -d,--domain            print global group information from the domain
                          specified (or from the current domain if there is
                          no domain specified)
   -o,--id-offset offset  change the default offset (10000) added to uids
d437 1
a437 1
Usage: mkpasswd [OPTION]... [domain]
d445 1
a445 1
                           if no domain specified)
d449 1
a449 1
                           if no domain specified
d453 1
a453 1
   -p,--path-to-home path  use specified path instead of user account home dir
d502 2
a503 1
use a prefix other than <literal>/home/</literal>. For example, this command:
@


1.37
log
@fix typo
@
text
@d522 1
a522 1
  -b, --binary                  text files are equivalent to binary files
d532 1
a532 1
  -t, --text       (default)    text files get \r\n line endings
@


1.36
log
@Document new mkgroup,mkpasswd options
@
text
@d665 1
a665 1
<para>Note that you if you set a new prefix in this manner, you can
@


1.35
log
@* cygwinenv.sgml: Add section for 'CYGWIN codepage:[ansi|oem]'
@
text
@d375 1
d393 9
a401 8
initial <filename>/etc/group</filename> substitute (some commands need this
file) from your system information. It only works on the NT series
(Windows NT, 2000, and XP). <command>mkgroup</command> does not work on 
the Win9x series (Windows 95, 98, and Me) because they lack the security model 
to support it. To initially set up your machine, you'd do something like 
this:</para>

<example><title>Setting up the groups file</title>
d413 10
a422 4
allow you to specify where the information comes from, either the
local machine or the default (or given) domain.  The <literal>-o</literal>
option allows for special cases (such as multiple domains) where the GIDs 
might match otherwise. The <literal>-s</literal>
d429 2
d444 1
d464 11
a474 8
initial <filename>/etc/passwd</filename> substitute (some commands
need this file) from your system information. It only works on the NT series
(Windows NT, 2000, and XP). <command>mkpasswd</command> does not work on 
the Win9x series (Windows 95, 98, and Me) because they lack the security model 
to support it. To initially set up your machine, you'd do something like 
this:</para>

<example><title>Setting up the passwd file</title>
d486 10
a495 4
allow you to specify where the information comes from, either the
local machine or the default (or given) domain.  The <literal>-o</literal>
option allows for special cases (such as multiple domains) where the UIDs
might match otherwise.  The <literal>-g</literal> option creates a local
d512 3
a514 3
The <literal>-u</literal> option allows <command>mkpasswd</command> to 
search for a specific username, greatly reducing the amount of time it 
takes in a large domain.</para>
@


1.34
log
@fix some glitches
@
text
@d846 3
d920 6
@


1.33
log
@jdf fix.
@
text
@d116 1
a116 1
character.
d171 1
a171 1
other formats.
d266 1
a266 1

d494 1
a494 1
takes in a large domain. 
d1263 1
a1263 1

@


1.32
log
@jdf patch
@
text
@d501 1
a501 1
Usage: mount [OPTION] [<win32path> <posixpath>]
d504 1
a504 1
  -c, --change-cygdrive-prefix  change the cygdrive path prefix to <posixpath>
d1269 2
a1270 2
Usage: strace.exe [OPTIONS] <command-line>
Usage: strace.exe [OPTIONS] -p <pid>
d1284 1
a1284 1
                               traced. Requires -p <pid>
d1340 1
a1340 1
Usage: umount.exe [OPTION] [<posixpath>]
@


1.31
log
@more jdf
@
text
@d8 3
a10 1
<literal>-h</literal> function identically.
d527 1
a527 1
mounts.</para>
d821 379
a1199 1
<sect2 id="umount"><title>umount</title>
d1202 8
a1209 9
Usage: umount.exe [OPTION] [<posixpath>]
  -A, --remove-all-mounts       remove all mounts
  -c, --remove-cygdrive-prefix  remove cygdrive prefix
  -h, --help                    output usage information and exit
  -s, --system                  remove system mount (default)
  -S, --remove-system-mounts    remove all system mounts
  -u, --user                    remove user mount
  -U, --remove-user-mounts      remove all user mounts
  -v, --version                 output version information and exit
d1211 21
d1233 26
a1258 6
<para>The <command>umount</command> program removes mounts from the
mount table.  If you specify a POSIX path that corresponds to a
current mount point, <command>umount</command> will remove it from the
user-specific registry area.  The -s flag may be used to specify
removing the mount from the system-wide registry area instead
(Administrator priviledges are required).</para>
d1260 3
a1262 5
<para>The <command>umount</command> utility may also be used to remove
all mounts of a particular type.  With the extended options it is
possible to remove all mounts, all automatically-mounted mounts, all
mounts in the current user's registry area, or all mounts in the
system-wide registry area (with Administrator privileges).</para>
a1263 2
<para>See <Xref Linkend="mount">) for more information on the mount
table.</para>
a1314 1

d1317 3
a1319 5
from the program(s) to file.  This program is mainly useful for debugging
the Cygwin DLL itself.</para>
</sect2>

<sect2 id="regtool"><title>regtool</title>
d1322 5
a1326 1
Usage: regtool.exe [OPTION] (add | check | get | list | remove | unset) KEY
d1328 6
a1333 8
Actions:
 add KEY\SUBKEY             add new SUBKEY
 check KEY                  exit 0 if KEY exists, 1 if not
 get KEY\VALUE              prints VALUE to stdout
 list KEY                   list SUBKEYs and VALUEs
 remove KEY                 remove KEY
 set KEY\VALUE [data ...]   set VALUE
 unset KEY\VALUE            removes VALUE from KEY
d1335 1
a1335 4
Options for 'list' Action:
 -k, --keys           print only KEYs
 -l, --list           print only VALUEs
 -p, --postfix        like ls -p, appends '\' postfix to KEY names
d1337 1
a1337 5
Options for 'set' Action:
 -e, --expand-string  set type to REG_EXPAND_SZ
 -i, --integer        set type to REG_DWORD
 -m, --multi-string   set type to REG_MULTI_SZ
 -s, --string         set type to REG_SZ
d1339 10
a1348 17
Other Options:
 -h, --help     output usage information and exit
 -q, --quiet    no error output, just nonzero return if KEY/VALUE missing
 -v, --verbose  verbose output, including VALUE contents when applicable
 -V, --version  output version information and exit

KEY is in the format [host]\prefix\KEY\KEY\VALUE, where host is optional
remote host in either \\hostname or hostname: format and prefix is any of:
  root     HKCR  HKEY_CLASSES_ROOT (local only)
  config   HKCC  HKEY_CURRENT_CONFIG (local only)
  user     HKCU  HKEY_CURRENT_USER (local only)
  machine  HKLM  HKEY_LOCAL_MACHINE
  users    HKU   HKEY_USERS

You can use forward slash ('/') as a separator instead of backslash, in
that case backslash is treated as escape character
Example: regtool.exe get '\user\software\Microsoft\Clock\iFormat'
d1351 6
a1356 4
<para>The <command>regtool</command> program allows shell scripts
to access and modify the Windows registry.  Note that modifying the
Windows registry is dangerous, and carelessness here can result
in an unusable system.  Be careful.</para>
d1358 7
a1364 32
<para>The <literal>-v</literal> option means "verbose".  For most
commands, this causes additional or lengthier messages to be printed.
Conversely, the <literal>-q</literal> option supresses error messages,
so you can use the exit status of the program to detect if a key
exists or not (for example).</para>

<para>The <literal>list</literal> command lists the subkeys and values
belonging to the given key.  The <literal>add</literal> command adds a
new key.  The <literal>remove</literal> command removes a key.  Note
that you may need to remove everything in the key before you may
remove it, but don't rely on this stopping you from accidentally
removing too much.  The <literal>check</literal> command checks to see
if a key exists (the exit code of the program is zero if it does,
nonzero if it does not).</para>

<para>The <literal>set</literal> command sets a value within a key.
<literal>-i</literal> means the value is an integer (DWORD).
<literal>-s</literal> means the value is a string.
<literal>-e</literal> means it's an expanding string (it contains
embedded environment variables).  <literal>-m</literal> means it's a
multi-string (list).  If you don't specify one of these, it tries to
guess the type based on the value you give.  If it looks like a
number, it's a number.  If it starts with a percent, it's an expanding
string.  If you give multiple values, it's a multi-string.  Else, it's
a regular string.</para>

<para>The <literal>unset</literal> command removes a value from a key.
The <literal>get</literal> command gets the value of a value of a key,
and prints it (and nothing else) to stdout.  Note: if the value
doesn't exist, an error message is printed and the program returns a
non-zero exit code.  If you give <literal>-q</literal>, it doesn't
print the message but does return the non-zero exit code.</para>
d1366 2
@


1.30
log
@More jdf changes.
@
text
@d714 1
a714 1
the administrators may change the password for any account.
d725 3
a727 3
<command>passwd</command> will prompt again and compare the second entry
against the first.  Both entries are require to match in order for the
password to be changed.</para>
a733 19
<para>Password expiry and length: The password aging information may be
changed by the administrators with the <literal>-x</literal>,
<literal>-n</literal> and <literal>-i</literal> options.  The
<literal>-x</literal> option is used to set the maximum number of days
a password remains valid.  After <emphasis>max</emphasis> days, the
password is required to be changed.  The <literal>-n</literal> option is
used to set the minimum number of days before a password may be changed.
The user will not be permitted to change the password until
<emphasis>min</emphasis> days have elapsed.  The <literal>-i</literal>
option is used to disable an account after the password has been expired
for a number of days.  After a user account has had an expired password
for <emphasis>inact</emphasis> days, the user may no longer sign on to
the account. Allowed values for the above options are 0 to 999.  The
<literal>-L</literal> option sets the minimum length of allowed passwords
for users, which doesn't belong to the administrators group, to
<emphasis>len</emphasis> characters.  Allowed values for the minimum
password length are 0 to 14.  In any of the above cases, a value of 0
means `no restrictions'.</para>

d742 20
d786 30
a815 4
there is little information to give.  The PID column is the process ID
you need to give to the <command>kill</command> command.  The WINPID
column is the process ID that's displayed by NT's Task Manager
program.</para>
@


1.29
log
@Joshua Daniel Franklin update.
@
text
@d271 6
a276 6
kill -l [signal]
-f, --force     force, using win32 interface if necessary
-l, --list      print a list of signal names
-s, --signal    send signal (use kill --list for a list)
-h, --help      output usage information and exit
-v, --version   output version information and exit
d391 5
a395 3
file) from your system information. It only works on NT.
To initially set up your machine,
you'd do something like this:</para>
d410 10
a419 1
local machine or the default (or given) domain.</para>
d452 5
a456 2
need this file) from your system information. It only works on NT.
To initially set up your machine, you'd do something like this:</para>
d471 11
a481 5
local machine or the default (or given) domain.</para>

</sect2>

<sect2 id="passwd"><title>passwd</title>
d483 1
d485 1
a485 18
Usage: passwd (-l|-u|-S) [USER]
       passwd [-i NUM] [-n MINDAYS] [-x MAXDAYS] [-L LEN]

User operations:
 -l, --lock      lock USER's account
 -u, --unlock    unlock USER's account
 -S, --status    display password status for USER (locked, expired, etc.)

System operations:
 -i, --inactive  set NUM of days before inactive accounts are disabled
                 (inactive accounts are those with expired passwords)
 -n, --minage    set system minimum password age to MINDAYS
 -x, --maxage    set system maximum password age to MAXDAYS
 -L, --length    set system minimum password length to LEN

Other options:
 -h, --help      output usage information and exit
 -v, --version   output version information and exit
d487 1
d489 4
a492 51
<para> <command>passwd</command> changes passwords for user accounts.
A normal user may only change the password for their own account,
the administrators may change the password for any account.
<command>passwd</command> also changes account information, such as
password expiry dates and intervals.</para>

<para>Password changes: The user is first prompted for their old
password, if one is present.  This password is then encrypted and
compared against the stored password.  The user has only one chance to
enter the correct password.  The administrators are permitted to
bypass this step so that forgotten passwords may be changed.</para>

<para>The user is then prompted for a replacement password.
<command>passwd</command> will prompt again and compare the second entry
against the first.  Both entries are require to match in order for the
password to be changed.</para>

<para>After the password has been entered, password aging information
is checked to see if the user is permitted to change their password
at this time.  If not, <command>passwd</command> refuses to change the
password and exits.</para>

<para>Password expiry and length: The password aging information may be
changed by the administrators with the <literal>-x</literal>,
<literal>-n</literal> and <literal>-i</literal> options.  The
<literal>-x</literal> option is used to set the maximum number of days
a password remains valid.  After <emphasis>max</emphasis> days, the
password is required to be changed.  The <literal>-n</literal> option is
used to set the minimum number of days before a password may be changed.
The user will not be permitted to change the password until
<emphasis>min</emphasis> days have elapsed.  The <literal>-i</literal>
option is used to disable an account after the password has been expired
for a number of days.  After a user account has had an expired password
for <emphasis>inact</emphasis> days, the user may no longer sign on to
the account. Allowed values for the above options are 0 to 999.  The
<literal>-L</literal> option sets the minimum length of allowed passwords
for users, which doesn't belong to the administrators group, to
<emphasis>len</emphasis> characters.  Allowed values for the minimum
password length are 0 to 14.  In any of the above cases, a value of 0
means `no restrictions'.</para>

<para>Account maintenance: User accounts may be locked and unlocked with the
<literal>-l</literal> and <literal>-u</literal> flags.  The
<literal>-l</literal> option disables an account.  The <literal>-u</literal>
option re-enables an account.</para>

<para>The account status may be given with the <literal>-S</literal>
option.  The status information is self explanatory.</para>

<para>Limitations: Users may not be able to change their password on
some systems.</para>
d535 6
a540 4
<prompt>c:\cygnus\&gt;</prompt> <userinput>mount</userinput>
Device           Directory           Type        Flags
D:               /d                  user        textmode
C:               /                   system      textmode
d544 1
a544 2
<para>In this example, the C
drive is the POSIX root and D drive is mapped to
a552 2
<filename>C:\cygnus\cygwin-b20\H-i586-cygwin32\bin</filename>
to <filename>/bin</filename> and the network directory
d554 1
a554 1
<filename>/bin</filename> is assumed to already exist.</para>
d559 1
a559 1
<prompt>c:\cygnus\&gt;</prompt> <userinput>ls /bin /data</userinput>
d561 9
a569 15
<prompt>c:\cygnus\&gt;</prompt> <userinput>mount C:\cygnus\cygwin-b20\H-i586-cygwin32\bin /bin</userinput>
<prompt>c:\cygnus\&gt;</prompt> <userinput>mount \\pollux\home\joe\data /data</userinput>
Warning: /data does not exist!
<prompt>c:\cygnus\&gt;</prompt> <userinput>mount</userinput>
Device           Directory           Type        Flags
\\pollux\home\joe\data   /data       user        textmode
C:\cygnus\cygwin-b20\H-i586-cygwin32\bin   /bin   user   textmode
D:               /d                  user        textmode
\\.\tape1:       /dev/st1            user        textmode
\\.\tape0:       /dev/st0            user        textmode
\\.\b:           /dev/fd1            user        textmode
\\.\a:           /dev/fd0            user        textmode
C:               /                   system      textmode
<prompt>c:\cygnus\&gt;</prompt> <userinput>ls /bin/sh</userinput>
/bin/sh
d578 1
a578 1
<para>The "-s" flag to <command>mount</command> is used to add a mount
d588 1
a588 1
the mount will fail with a busy error.  The "-f" (force) flag causes
d593 1
a593 1
<para>The "-b" flag is used to instruct Cygwin to treat binary and
d599 21
a619 8
<para>The "-x" flag is used to instruct Cygwin that the mounted file
is "executable".  If the "-x" flag is used with a directory then
all files in the directory are executable.  Files ending in certain
extensions (.exe, .com, .bat, .cmd) are assumed to be executable
by default.  Files whose first two characters begin with '#!' are
also considered to be executable.  This option allows other files
to be marked as executable and avoids the overhead of opening each
file to check for a '#!'.</para>
d629 5
a633 9
<filename>Z:\foo</filename> and the Z drive is not currently in the
mount table, then <filename>Z:\</filename> will be accessible as
<filename>/cygdrive/Z</filename>.  The default prefix of
<filename>/cygdrive</filename> may be changed via the
<Xref Linkend="mount"> command.</para>

<para>The <command>mount</command> utility can be used to change this
default automount prefix through the use of the
"--change-cygdrive-prefix" flag.  In the following example, we will
d639 1
a639 1
<prompt>c:\cygnus\&gt;</prompt> <userinput>mount --change-cygdrive-prefix /</userinput>
d644 6
a649 4
specify the "-s" flag to make this the system-wide default prefix.  By
default, the cygdrive-prefix applies only to the current user.  In the
same way, you can specify the "-b" flag such that all new automounted
filesystems default to binary mode file accesses.</para>
d686 77
@


1.28
log
@doc patch.
@
text
@d123 3
a125 2
<em>check_case</em> parameter of <em>CYGWIN</em> is set to <em>strict</em>,
since Cygwin is not able to match any Windows short path in this mode.
d173 94
d271 6
a276 6
       kill -l [signal]
 -f, --force     force, using win32 interface if necessary
 -l, --list      print a list of signal names
 -s, --signal    send signal (use kill --list for a list)
 -h, --help      output usage information and exit
 -v, --version   output version information and exit
d286 18
a303 3
<para>Note that, unless you specific the <literal>-f</literal> option,
the "pid" values are the Cygwin pids, not the Windows pids.  To get a
list of running programs and their Cygwin pids, use the Cygwin
a309 2
<para><command>kill -h</command> just displays the kill usage message.</para>

a348 1
SIGCLD      20    System V name for SIGCHLD
a350 1
SIGIO       23    input/output possible signal
a923 46
<sect2 id="dumper"><title>dumper</title>

<screen>
Usage: dumper [OPTION] FILENAME WIN32PID
Dump core from WIN32PID to FILENAME.core
 -d, --verbose  be verbose while dumping
 -h, --help     output help information and exit
 -q, --quiet    be quiet while dumping (default)
 -v, --version  output version information and exit
</screen>

<para>The <command>dumper</command> utility can be used to create
core dump of running windows process. This core dump can be later loaded
to gdb an analyzed. One common way to use <command>dumper</command> is to
plug it into cygwin's Just-In-Time debugging facility by adding

<screen>
error_start=x:\path\to\dumper.exe
</screen>

to <em>CYGWIN</em> environment variable. Please note that
<literal>x:\path\to\dumper.exe</literal> is win32-style and not cygwin
path. If <literal>error_start</literal> is set this way, then dumper will
be started whenever some program encounters fatal error.
</para>

<para>
<command>dumper</command> can be also be started from command line to create
core dump of any running process. Unfortunately, because of windows API
limitation, when core dump is created and <command>dumper</command> exits,
the target process is terminated too.
</para>

<para>
To save the space in core dump, <command>dumper</command> doesn't write those
portions of target process' memory space that are loaded from executable and
dll files and are unchangeable, such as program code and debug info. Instead,
<command>dumper</command> saves paths to files which contain that data. When
core dump is loaded into gdb, it uses these paths to load appropriate files.
That means that if you create core dump on one machine and try to debug it on
other, you'll need to place identical copies of executable and dlls in the same
directories as on machine where core dump has been created.
</para>

</sect2>

a924 1

@


1.27
log
@Update from Joshua Daniel Franklin
@
text
@d6 4
a9 1
specifically for Cygwin.</para>
d28 1
a28 1
information about a specific program (or program) you are trying to
d31 2
a32 1
of that program or programs.  If you specify the <literal>-s</literal>
d37 5
a41 15
<para>The <literal>-c</literal> option causes the "program" arguments
to be interpreted as package names.  <command>cygcheck</command> will
report the current version of the package that you specify.  With no
arguments, <command>cygcheck</command> will report on all packages.</para>

<para>The <command>cygcheck</command> program should be used to send
information about your system to Cygnus for troubleshooting (if your
support representative requests it).  When asked to run this command,
include all the options plus any commands you are having trouble with,
and save the output so that you can mail it to Cygnus, like
this:</para>

<screen>
<prompt>C:\Cygnus&gt;</prompt> <userinput>cygcheck -s -v -r -h &gt; tocygnus.txt</userinput>
</screen>
d52 2
a53 2
that is relevent to Cygnus programs.  These registry entries are the
ones that have "Cygnus" in the name.  If you are paranoid about
d55 6
a60 2
in mind that doing so makes it harder for Cygnus to diagnose your
problems.</para>
d62 8
a69 5
<para>The <literal>-h</literal> option prints additional helpful
messages in the report, at the beginning of each section.  It also
adds table column headings.  While this is useful information, it also
adds some to the size of the report, so if you want a compact report
or if you know what everything is already, just leave this out.</para>
d76 8
a83 8
Usage: cygpath.exe (-u|-w|-t TYPE) [-c HANDLE] [-f FILE] [options] NAME
       cygpath.exe [-ADHPSW] 
Output type options (required):
  -u|--unix             print Unix form of NAME (default)
  -w|--windows          print Windows form of NAME 
  -t|--type             print Windows form of NAME with TYPE one of
     dos                drive letter with backslashes (C:\WINNT)
     mixed              drive letter with regular slashes (C:/WINNT)
d85 11
a95 17
  -a|--absolute         output absolute path
  -c|--close HANDLE     close HANDLE (for use in captured process)
  -f|--file FILE        read FILE for input; use - to read from STDIN
  -i|--ignore           ignore missing argument
  -l|--long-name        print Windows long form of NAME (with -w only)
  -p|--path             NAME is a PATH list (i.e., '/bin:/usr/bin')
  -s|--short-name       print Windows short form of NAME (with -w only)
System information output:
  -A|--allusers         use `All Users' instead of current user for -D, -P
  -D|--desktop          output `Desktop' directory and exit
  -H|--homeroot         output `Profiles' directory (home root) and exit
  -P|--smprograms       output Start Menu `Programs' directory and exit
  -S|--sysdir           output system directory and exit
  -W|--windir           output `Windows' directory and exit
Other options:
  -h|--help             output usage information and exit
  -v|--version          output version information and exit
d100 6
a105 5
back.  It can be used when a Cygwin program needs to pass a file name
to a native Windows program, or expects to get a file name from a
native Windows program.  You may use the long or short option names
interchangeably, even though only the short ones are described
here.</para>
d108 13
a120 7
indicate whether you want a conversion from Windows to UNIX (POSIX)
format (<literal>-u</literal>) or a conversion from UNIX (POSIX) to
Windows format (<literal>-w</literal>).  You must give exactly
one of these.  To give neither or both is an error.  Use the
<literal>-l</literal> or <literal>-s</literal> option in combination 
with the <literal>-w</literal> option to convert to Windows long or 
short form.</para>
d136 5
a140 2
make file rules converting variables to a proper format that may be
omitted.</para>
d145 7
a151 4
for i in `echo *.exe | sed 's/\.exe/.cc/'`
do
  notepad "`cygpath -w $i`"
done
d160 4
a163 4
The <literal>-A</literal> option forces use of the "All Users" directories 
instead of the current user for the <literal>-D</literal> and 
<literal>-P</literal> options. The <literal>-H</literal> shows the Windows'
profiles directory that can be used as root of home.
d166 3
a168 2
same output.
The <literal>-ws</literal> options can be combined with the capital options.
@


1.26
log
@Add dumper.exe words from Egor Duda.
@
text
@d11 9
a19 8
Usage: cygcheck [-s] [-v] [-r] [-h] [program ...]
  -c   check current package setup
  -h   give help about the info
  -s   system information
  -v   verbose output (indented) (for -s or programs)
  -r   registry search (requires -s)
  -V   version info
You must at least give either -s or a program name
d75 9
a83 4
Usage: cygpath [-p|--path] (-w|--windows) ([-s|--short-name]|[-l|--long-name]) filename
Usage: cygpath [-p|--path] (-u|--unix) filename
Usage: cygpath (-H|--homeroot)|(-S|--sysdir)|(-W|--windir) [-s|--short-name]
Usage: cygpath [-A|--allusers] (-D|--desktop)|(-P|--smprograms) [-s|--short-name]
d85 2
a86 2
  -c|--close handle     close handle (for use in captured process)
  -f|--file file        read file for input path information
d88 4
a91 9
  -l|--long-name        print Windows long form of filename
  -p|--path             filename argument is a path
  -s|--short-name       print Windows short form of filename
  -u|--unix             print Unix form of filename
  -t|--type             print Windows form of filename with specified
     dos                drive letter with backslashes (c:\winnt)
     mixed              drive letter with regular slashes (c:/winnt)
  -v|--version          output version information and exit
  -w|--windows          print Windows form of filename
a92 1
  -H|--homeroot		output `Profiles' directory (home root) and exit
d94 1
d98 3
d166 7
a172 3
Usage: kill [-f] [-sigN] [-s sigN] pid1 [pid2 ...]
Usage: kill -l [signal]
Usage: Kill -h
d252 19
a270 14
usage: mkgroup [options] [domain]
  This program prints a /etc/group file to stdout
  Options:
     -l,--local             print local group information
     -d,--domain            print global group information from the domain
                            specified (or from the current domain if there is
                            no domain specified)
     -o,--id-offset offset  change the default offset (10000) added to uids
                            in domain accounts.
     -s,--no-sids           don't print SIDs in pwd field
                            (this affects ntsec)
     -u,--users             print user list in gr_mem field
     -?,--help              print this message
  One of `-l' or `-d' must be given on NT/W2K.
d300 21
a320 19
Usage: mkpasswd [options] [domain]
  Usage: mkpasswd [OPTION]... [domain]
  This program prints a /etc/passwd file to stdout
  Options:
     -l,--local              print local user accounts
     -d,--domain             print domain accounts (from current domain
                             if no domain specified)
     -o,--id-offset offset   change the default offset (10000) added to uids
                             in domain accounts.
     -g,--local-groups       print local group information too
                             if no domain specified
     -m,--no-mount           don't use mount points for home dir
     -s,--no-sids            don't print SIDs in GCOS field
                             (this affects ntsec)
     -p,--path-to-home path  if user account has no home dir, use
                             path instead of /home/
     -u,--username username  only return information for the specified user
     -?,--help               displays this message
  One of `-l', `-d' or `-g' must be given on NT/W2K.
d349 18
a366 10
Usage passwd [name]
      passwd [-x max] [-n min] [-i inact] [-L len]
      passwd {-l|-u|-S} name
  -x max   set max age of passwords
  -n min   set min age of passwords
  -i inact disables account after inact days of expiry
  -L len   set min password length
  -l       lock an account
  -u       unlock an account
  -S       show account information
d426 1
a426 3
Usage mount
      mount [options] &lt;win32path&gt; &lt;posixpath&gt;

d429 1
a429 1
  -c, --change-cygdrive-prefix  change the cygdrive path prefix to &lt;posixpath&gt;
d432 3
a434 2
  -i, --import-old-mounts copy  old registry mount table mounts into the current
                                mount areas
d436 1
a436 1
  -s, --system     (default)    add mount point to system-wide registry location
d438 2
a439 1
  -u, --user                    add mount point to user registry location
d441 2
d444 1
a444 7
                                executables.  Use to speed up file access.
  -E, --no-executable           don't open files to see if they contain executable
                                magic.  Use to speed up file access.
  -m, --mount-commands          write mount commands to replace user and
                                system mount points and cygdrive prefixes

  When invoked without any arguments, mount displays the current mount table.
d615 11
a625 7
Usage ps [-aefl] [-u uid]
  -a, -e   show processes of all users
  -f       show process uids, ppids
  -l       show process uids, ppids, pgids, winpids
  -s	   short process listing
  -u uid   show processes owned by uid
  -W	   show all windows processes, not just cygwin processes
d641 1
a641 1
Usage umount [options] &lt;posixpath&gt;
d644 1
d649 1
d672 2
a673 2
Usage: strace [OPTIONS] <command-line>
Usage: strace [OPTIONS] -p <pid>
d712 1
a712 1
    system   0x08000 (_STRACE_SYSTEM)   Cache strace messages.
d718 1
d728 39
a766 24
Regtool Copyright (c) 2000 Red Hat Inc
 regtool -h  - print this message
 regtool [-v|-p|-k|-l] list [key]  - list subkeys and values
     -p=postfix, like ls -p, appends / postfix to key names
     -k=keys, lists only keys
     -l=values, lists only values
 regtool [-v] add [key\subkey]  - add new subkey
 regtool [-v] remove [key]  - remove key
 regtool [-v|-q] check [key]  - exit 0 if key exists, 1 if not
 regtool [-i|-s|-e|-m] set [key\value] [data ...]  - set value
     -i=integer -s=string -e=expand-string -m=multi-string
 regtool [-v] unset [key\value]  - removes value from key
 regtool [-q] get [key\value]  - prints value to stdout
     -q=quiet, no error msg, just return nonzero exit if key/value missing
 key is in the format [host]\prefix\KEY\KEY\VALUE, where host is optional
 remote host in either \\hostname or hostname: format and prefix is any of:
 root     HKCR  HKEY_CLASSES_ROOT (local only)
 config   HKCC  HKEY_CURRENT_CONFIG (local only)
 user     HKCU  HKEY_CURRENT_USER (local only)
 machine  HKLM  HKEY_LOCAL_MACHINE
 users    HKU   HKEY_USERS
 You can use forward slash ('/') as a separator instead of backslash, in
 that case backslash is treated as escape character.
 example: \user\software\Microsoft\Clock\iFormat
@


1.25
log
@* cygpath.cc: Add option to output windows paths in different formats: "dos"
and "mixed".
(main): Process options.
(doit): Check new options flags.
@
text
@d768 46
@


1.24
log
@	* regtool.cc (Fail): Be more verbose.
	(find_key): Add support for remote registry access.
	(usage): Document it.
	* utils.sgml: Document it.
@
text
@d86 3
@


1.23
log
@* strace.cc (toggle): New global variable.
(error): Use exit instead of ExitProcess so that stdio buffers get flushed.
(create_child): Remove command line error checking.
(dostrace): Ditto.
(dotoggle): New function.
(usage): Add entry for new option -T|--toggle.  Alphabetize.
(longopts): Add new option -T|--toggle.
(opts): Ditto.
(main): Handle new -T|--toggle option.  Move all command line checking here
from other functions.
* utils.sgml: Update section for strace.
@
text
@d713 9
a721 6
 keys are like \prefix\key\key\key\value, where prefix is any of:
   root     HKCR  HKEY_CLASSES_ROOT
   config   HKCC  HKEY_CURRENT_CONFIG
   user     HKCU  HKEY_CURRENT_USER
   machine  HKLM  HKEY_LOCAL_MACHINE
   users    HKU   HKEY_USERS
@


1.22
log
@* strace.cc (forkdebug): Make true by default.
(attach_process): Use window pid if cygwin pid isn't available (yet).
(create_child): Use either DEBUG_ONLY_THIS_PROCESS or DEBUG_PROCESS,
exclusively.  (Suggested by Conrad.Scott@@dsl.pipex.com)
@
text
@d644 2
a645 2
Usage strace [options] program [args...]

d648 2
a649 2
  -f, --trace-children         trace child processes (toggle -- default is "true")
  -h, --help                   display help info
d654 1
a654 1
  -p, --pid=pid                attach to a running process
d656 5
a660 3
  -t, --timestamp              use an absolute hh:mm:ss timestamp insted of the
                               default microsecond timestamp.  Implies -d
  -v, --version                display version info
@


1.21
log
@	* cygpath.cc (usage): Change usage output slightly.

	* cygpath.cc (main): Add option l to support conversion to
	Windows long file names.  Refactured code for capital options.
	Support of options from file for capital options.
	(dowin): New function.  Refactured from main.
	(doit): Call long path conversion.
	(get_long_name): New function.
	(get_long_paths): New function.
	(get_long_path_name_w32impl): New function.  Reimplementation
	of Windows API function GetLongPathName (only 98/Me/2000/XP or
	higher).
	(get_short_name): Call GetShortPathName only once.
	(get_short_paths): Fix calculating buffer size.
	* utils.sgml: Update cygpath section for l option.
@
text
@d648 1
a648 1
  -f, --trace-children         also trace forked child processes
@


1.20
log
@	* cygpath.cc (get_short_paths): Fix more error checking.
	(get_short_name): Ditto.

	* cygpath.cc (main): Add option H to show the Windows' profiles
	directory.  Support short names for options DPSW.  Clean up
	copied code lines.
	* utils.sgml: Update cygpath section for H option and s support.
@
text
@d74 4
a77 1
Usage: cygpath.exe [-p|--path] (-u|--unix)|(-w|--windows [-s|--short-name]) filename
d82 1
d89 1
a89 1
  -H|--homeroot		output `Profiles' directory (home root) and exit\n\
d109 8
a116 2
<literal>-s</literal> option in combination with the <literal>-w
</literal> option to convert to Windows short form.</para>
@


1.19
log
@document kill -h.
@
text
@d85 1
d131 8
a138 6
<literal>-D</literal>, <literal>-P</literal>, <literal>-S</literal>, and
<literal>-W</literal> output directories used by Windows that are not the
same on all systems, for example <literal>-S</literal> might output 
C:\WINNT\SYSTEM32 or C:\WINDOWS\SYSTEM. The <literal>-A</literal> option
forces use of the "All Users" directories instead of the current user
for the <literal>-D</literal> and <literal>-P</literal> options.
d142 1
@


1.18
log
@Update ChangeLog with missing entry.
@
text
@d147 1
d165 2
@


1.17
log
@* mount.cc (do_mount): Default to non-exec option for remote drives.  Report
warnings before attempting a mount.
(longopts): Add no-executable option.
(mount_commands): Ditto.
(opts): Ditto.
(usage): Ditto.  Indicate that system mount is now the default.
(main): Accommodate no-executable option.  Make system mount the default.
* umount.cc (usage): Indicate that system umount is now the default.
(main): Make system umount the default.
@
text
@d145 2
a146 1
Usage: kill [-f] [-sigN] pid1 [pid2 ...]
d161 3
@


1.16
log
@Update options
@
text
@d390 1
a390 1
  -s, --system                  add mount point to system-wide registry location
d392 1
a392 1
  -u, --user       (default)    add mount point to user registry location
d395 3
a397 1
                                executables
d597 1
a597 1
  -s, --system                  remove system mount
@


1.15
log
@	* cygpath.cc (main): Add options to show Desktop and Start
	Menu's Programs directory for current user or all users.
	Move bulk of DPWS options outside the getopt case statement.
	* utils.sgml: Update cygpath section for ADPWS options.
@
text
@d12 6
a17 5
  -c = check current package setup
  -s = system information
  -v = verbose output (indented) (for -s or programs)
  -r = registry search (requires -s)
  -h = give help about the info
a627 1
  -o, --output=FILENAME        set output file to FILENAME
d630 2
@


1.14
log
@remove extra mask info
@
text
@d73 15
a87 14
Usage: cygpath [-p|--path] (-u|--unix)|(-w|--windows [-s|--short-name]) filename
       cygpath [-v|--version]
       cygpath [-W|--windir|-S|--sysdir]
  -a|--absolute      output absolute path
  -c|--close handle  close handle (for use in captured process)
  -f|--file file     read file for path information
  -i|--ignore        ignore missing filename argument
  -p|--path          filename argument is a path
  -s|--short-name    print Windows short form of filename
  -S|--sysdir        print Windows system directory
  -u|--unix          print UNIX form of filename
  -v|--version       print program version
  -w|--windows       print Windows form of filename
  -W|--windir        print Windows directory
d127 11
@


1.13
log
@remove extra mask info
@
text
@d654 1
a654 1
the Cygwin DLL itself.
@


1.12
log
@* cygcheck.cc (usage): Add -c description.
* cygpath.cc (usage): Alphabetize options.
* strace.cc (usage): Ditto.
@
text
@a654 21

The mask argument is a hexadecimal string signifying which events should be
reported.  The valid bits to set are as follows:
</para>

<screen>
  Bit			Explanation
0x00000001		All strace output is collected
0x00000008		Unusual or weird phenomenon
0x00000010		System calls
0x00000020		argv/envp printout at startup
0x00000040		Information useful for DLL debugging
0x00000080		Paranoid information
0x00000100		Termios debbugging
0x00000200		Select() function debugging
0x00000400		Window message debugging
0x00000800		Signal and process handling
0x00001000		Very minimal strace output
0x00020000		Malloc calls
0x00040000		Thread locking calls
</screen>
@


1.11
log
@* cygcheck.cc (scan_registry): Open registry with read-only access.
(main): Reflect argument change for dump_setup.
* dump_setup.cc (dump_setup): Add preliminary extra argument for future use.
* path.cc (read_mounts): Open registry with read-only access.
@
text
@d34 1
a34 1
arguments, <command>cygcheck</command> will report on all packages.
d76 11
a86 8
  -u|--unix       print UNIX form of filename
  -w|--windows    print Windows form of filename
  -s|--short-name print Windows short form of filename
  -p|--path       filename argument is a path
  -v|--version    print program version
  -W|--windir     print Windows directory
  -S|--sysdir     print Windows system directory
  -i|--ignore     ignore missing filename argument
d207 14
a220 9
usage: mkgroup &lt;options&gt; [domain]
This program prints group information to stdout
Options:\n");
    -l,--local           print pseudo group information if there is
                         no domain
    -d,--domain          print global group information from the domain
                         specified (or from the current domain if there is
                         no domain specified)
    -?,--help            print this message
d251 18
a268 8
This program prints a /etc/passwd file to stdout
Options are
   -l,--local              print local accounts
   -d,--domain             print domain accounts (from current domain
                           if no domain specified
   -g,--local-groups       print local group information too
   -?,--help               displays this message
This program does only work on Windows NT
d367 18
a384 11
      mount [-bfs] &lt;win32path&gt; &lt;posixpath&gt;
      mount [-bs] --change-cygdrive-prefix&lt;posixpath&gt;
      mount --import-old-mounts

  -b = text files are equivalent to binary files (newline = \n)
  -x = files in the mounted directory are automatically given execute permission.
  -X = files in the mounted directory are automatically given execute permission and are assumed to be Cygwin (i.e., not generic windows) executables only.
  -f = force mount, don't warn about missing mount point directories
  -s = add mount point to system-wide registry location
  --change-automount-prefix = change path prefix used for automatic mount points
  --import-old-mounts = copy old registry mount table mounts into the current mount areas
d579 7
a585 7
Usage umount [-s] &lt;posixpath&gt;
-s = remove mount point from system-wide registry location

--remove-all-mounts = remove all mounts
--remove-auto-mounts = remove all automatically mounted mounts
--remove-user-mounts = remove all mounts in the current user mount registry area, including auto mounts
--remove-system-mounts = Remove all mounts in the system-wide mount registry area
d599 1
a599 1
system-wide registry area (with Administrator priviledges).</para>
d608 1
a608 1
Usage strace [-m mask] [-o output-file] [ft] program [args...]
d610 39
a648 8
-b n		  use buffer of size 'n' when writing output file
-d		  include delta time in usecs for each line (default)
-f		  follow all forks and execs
-m mask		  mask for reporting cygwin events (default 1)
-n		  convert Win32 error messages to text
-o output-file	  output file to hold strace events (default stderr)
-t		  output time in hh:mm:ss format
-u		  include time in usecs since start for each line (default)
@


1.10
log
@* kill.cc (main): Set exit value to 1 on invalid pid.  Perform minor cleanup.
@
text
@d12 1
d31 5
d129 1
a129 1
Usage: kill [-sigN] pid1 [pid2 ...]
d139 9
a147 8
<para>Note that the "pid" values are the Cygwin pids, not the Windows
pids.  To get a list of running programs and their Cygwin pids, use
the Cygwin <command>ps</command> program.</para>

<para>To send a specific signal, use the
<literal>-signN</literal> option, either
with a signal number or a signal name (minus the "SIG" part), like
these examples:</para>
d149 1
a149 1
<example><title>Specifying signals with the kill command</title>
d154 1
@


1.9
log
@Add -t option.
@
text
@d347 1
@


1.8
log
@fix typo.
@
text
@d582 1
a582 1
-f		  follow forked subprocesses
@


1.7
log
@* regtool.cc (cmd_list): Add new registry display options.
(cmd_list): Add code to implement -p, -k, and -l options.
* regtool.cc (Fail): Add call to LocalFree to free memory allocated by
FormatMessage.
@
text
@d111 1
a111 1
for i in `echo *.exe | sed 's/\.exe/cc/'`
@


1.6
log
@* utils.sgml: Document new options for ps and strace.
@
text
@d616 10
a625 6
regtool -h  - print this message
regtool [-v] list [key]  - list subkeys and values
regtool [-v] add [key\subkey]  - add new subkey
regtool [-v] remove [key]  - remove key
regtool [-v|-q] check [key]  - exit 0 if key exists, 1 if not
regtool [-i|-s|-e|-m] set [key\value] [data ...]  - set value
d627 2
a628 2
regtool [-v] unset [key\value]  - removes value from key
regtool [-q] get [key\value]  - prints value to stdout
d630 1
a630 1
keys are like \prefix\key\key\key\value, where prefix is any of:
d636 1
a636 1
example: \user\software\Microsoft\Clock\iFormat
@


1.5
log
@Cleanup formatting on some files.  Remove excessive whitespace.
@
text
@d524 1
d527 3
a529 2
  -u uid   list processes owned by uid
  -a, -e   show processes of all users
d576 3
d580 1
d583 1
a583 2
-t		  convert Win32 error messages to text
-s		  remove mount point from system-wide registry location
d598 1
a598 1
0x00000002		Unusual or weird phenomenon
@


1.4
log
@* cygpath.cc: Add new options: -s and -i.
* utils.sgml: Document the new options.
@
text
@d272 1
a272 1
      passwd [-x max] [-n min] [-i inact] [-L len] 
d306 2
a307 2
changed by the administrators with the <literal>-x</literal>, 
<literal>-n</literal> and <literal>-i</literal> options.  The 
d311 1
a311 1
used to set the minimum number of days before a password may be changed.  
d324 2
a325 2
<para>Account maintenance: User accounts may be locked and unlocked with the 
<literal>-l</literal> and <literal>-u</literal> flags.  The 
d386 1
a386 1
demonstrates how to mount the directory 
d388 1
a388 1
to <filename>/bin</filename> and the network directory 
d426 1
a426 1
permitted to modify the system-wide mount table.</para> 
@


1.3
log
@* cygpath.cc: add --windir/--sysdir options
* utils.sgml: and document them
@
text
@d67 1
a67 1
Usage: cygpath [-p|--path] (-u|--unix)|(-w|--windows) filename
d70 8
a77 6
  -u|--unix     print UNIX form of filename
  -w|--windows  print Windows form of filename
  -p|--path     filename argument is a path
  -v|--version  print program version
  -W|--windir   print windows directory
  -S|--sysdir   print system directory
d92 3
a94 1
one of these.  To give neither or both is an error.</para>
d103 5
d113 1
a113 1
  notepad `cygpath -w $i`
@


1.2
log
@clean up SGML for latest version of jade/docbook
@
text
@d69 1
d74 2
@


1.1
log
@Initial revision
@
text
@d427 1
a427 1
column).
d436 1
a436 1
file to check for a '#!'.
d469 2
@


1.1.1.1
log
@import winsup-2000-02-17 snapshot
@
text
@@
