head	1.4;
access;
symbols
	cygwin-1_7_35-release:1.4
	cygwin-1_7_34-release:1.4
	cygwin-1_7_33-release:1.4
	cygwin-1_7_32-release:1.4
	cygwin-1_7_31-release:1.4
	cygwin-1_7_30-release:1.4
	cygwin-1_7_29-release:1.4
	cygwin-1_7_29-release-branchpoint:1.4.0.2
	cygwin-1_7_28-release:1.4
	cygwin-1_7_27-release:1.4
	cygwin-1_7_26-release:1.4
	cygwin-1_7_25-release:1.4
	cygwin-1_7_24-release:1.4
	cygwin-1_7_23-release:1.4
	cygwin-1_7_22-release:1.4
	cygwin-1_7_21-release:1.4
	cygwin-1_7_20-release:1.3
	cygwin-1_7_19-release:1.3
	cygwin-64bit-postmerge:1.3
	cygwin-64bit-premerge-branch:1.3.0.2
	cygwin-64bit-premerge:1.3
	cygwin-1_7_18-release:1.3
	cygwin-1_7_17-release:1.2
	cygwin-64bit-branch:1.2.0.2
	cygwin-1_7_16-release:1.2
	cygwin-1_7_15-release:1.2
	cygwin-1_7_14_2-release:1.2
	cygwin-1_7_14-release:1.2
	cygwin-1_7_12-release:1.2
	cygwin-1_7_11-release:1.2
	cygwin-1_7_10-release:1.2
	cygwin-1_7_9-release:1.1
	cygwin-1_7_8-release:1.1
	cygwin-1_7_7-release:1.1
	cygwin-1_7_5-release:1.1
	cygwin-1_7_4-release:1.1
	cygwin-1_7_3-release:1.1
	cygwin-1_7_2-release:1.1
	cygwin-1_7_1-release:1.1
	cv-branch-2:1.1.0.2;
locks; strict;
comment	@ * @;


1.4
date	2013.06.26.13.10.35;	author corinna;	state Exp;
branches;
next	1.3;

1.3
date	2013.01.21.16.28.27;	author cgf;	state Exp;
branches;
next	1.2;

1.2
date	2011.12.17.23.39.47;	author cgf;	state Exp;
branches
	1.2.2.1;
next	1.1;

1.1
date	2009.03.14.14.56.20;	author corinna;	state Exp;
branches;
next	;

1.2.2.1
date	2013.01.29.21.54.42;	author corinna;	state Exp;
branches;
next	;


desc
@@


1.4
log
@	* cygpath.cc (do_pathconv): when -p option is given, generate wide
	path without long path prefixing.
	* wide_path.h (wide_path::wide_path): Allow extra bool parameter to
	specify whether or not performing Windows long path prefixing.
@
text
@/* wide_path.h  -- Define class wide_path to convert multibyte win32 path
		   to wchar_t Win32 path including long path prefix if
		   necessary.

   Copyright 2009, 2011, 2013 Red Hat, Inc.

   This file is part of Cygwin.

   This software is a copyrighted work licensed under the terms of the
   Cygwin license.  Please consult the file "CYGWIN_LICENSE" for
   details. */

#include <stdlib.h>
#include <wchar.h>

class wide_path
{
  wchar_t *wp;

public:
  wide_path () : wp (NULL) {}
  wide_path (const char *mb_path, bool do_prefix = true)
  {
    int len = mbstowcs (NULL, mb_path, 0) + 1;
    wp = (wchar_t *) malloc ((len + 6) * sizeof (wchar_t));
    wchar_t *wp_p = wp;
    if (do_prefix && len >= MAX_PATH && strncmp (mb_path, "\\\\?\\", 4) != 0)
      {
	wcscpy (wp_p, L"\\\\?\\");
	wp_p += 4;
	if (strncmp (mb_path, "\\\\", 2) == 0)
	  {
	    wcscpy (wp_p, L"UNC");
	    wp_p += 3;
	    ++mb_path;
	    --len;
	  }
      }
    mbstowcs (wp_p, mb_path, len);
  }
  ~wide_path () { if (wp) free (wp); }
  operator const wchar_t *() const { return wp; }
};
@


1.3
log
@Update copyrights
@
text
@d5 1
a5 1
   Copyright 2009, 2011 Red Hat, Inc.
d22 1
a22 1
  wide_path (const char *mb_path)
d27 1
a27 1
    if (len >= MAX_PATH && strncmp (mb_path, "\\\\?\\", 4) != 0)
@


1.2
log
@Clean up whitespace.
@
text
@d5 1
a5 1
   Copyright 2009 Red Hat, Inc.
@


1.2.2.1
log
@Pull in changes from HEAD
@
text
@d5 1
a5 1
   Copyright 2009, 2011 Red Hat, Inc.
@


1.1
log
@	* wide_path.h (class wide_path): New class to convert Windows path
	to WCHAR win32 path, including long path conversion if necessary.
	* cygcheck.cc: Use class wide_path throughout to call Win32 functions
	taking potentially long filenames.
	(display_error): Use snprintf rather than sprintf.
	(display_error_fmt): Ditto.
	(dump_sysinfo): Use FindFirstFileW/FindNextFileW.
	* cygpath.cc: Use class wide_path throughout to call Win32 functions
	taking potentially long filenames.
	(get_device_name): Raise buffer size to take long pathnames.
	(get_short_paths): Convert to using GetShortPathNameW.
	(get_short_name): Ditto.
	(get_long_path_name_w32impl): Convert to equivalent of GetLongPathNameW.
	(get_long_name): Convert to using GetLongPathNameW.
	(do_sysfolders): Raise buffer size for POSIX pathname to PATH_MAX.
	(do_pathconv): In case of POSIX->Win32 conversion, convert to wchar_t
	Win32 path name and drop long pathname prefix if possible.
	(main): Call setlocale to accommodate wide char/multibyte conversions.
@
text
@d2 1
a2 1
                   to wchar_t Win32 path including long path prefix if
@

