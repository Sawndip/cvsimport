head	1.116;
access;
symbols
	cygwin-1_7_35-release:1.116
	cygwin-1_7_34-release:1.116
	cygwin-1_7_33-release:1.114.2.1
	cygwin-1_7_32-release:1.114.2.1
	cygwin-1_7_31-release:1.114.2.1
	cygwin-1_7_30-release:1.114.2.1
	cygwin-1_7_29-release:1.114
	cygwin-1_7_29-release-branchpoint:1.114.0.2
	cygwin-1_7_28-release:1.113
	cygwin-1_7_27-release:1.113
	cygwin-1_7_26-release:1.113
	cygwin-1_7_25-release:1.112
	cygwin-1_7_24-release:1.112
	cygwin-1_7_23-release:1.112
	cygwin-1_7_22-release:1.111
	cygwin-1_7_21-release:1.111
	cygwin-1_7_20-release:1.111
	cygwin-1_7_19-release:1.111
	cygwin-64bit-postmerge:1.110
	cygwin-64bit-premerge-branch:1.110.0.2
	cygwin-64bit-premerge:1.110
	cygwin-1_7_18-release:1.110
	cygwin-1_7_17-release:1.101
	cygwin-64bit-branch:1.100.0.2
	cygwin-1_7_16-release:1.100
	cygwin-1_7_15-release:1.99
	cygwin-1_7_14_2-release:1.99
	cygwin-1_7_14-release:1.99
	cygwin-1_7_12-release:1.99
	cygwin-1_7_11-release:1.99
	cygwin-1_7_10-release:1.98
	cygwin-1_7_9-release:1.90
	cygwin-1_7_8-release:1.90
	cygwin-1_7_7-release:1.90
	cygwin-1_7_5-release:1.90
	cygwin-1_7_4-release:1.90
	cygwin-1_7_3-release:1.90
	cygwin-1_7_2-release:1.90
	cygwin-1_7_1-release:1.88
	cv-branch-2:1.85.0.2
	cr-0x5f1:1.63.0.4
	cv-branch:1.63.0.2
	cr-0x3b58:1.62.0.2
	cr-0x9e:1.55.0.4
	cr-0x9d:1.55.0.2
	corinna-01:1.54
	cr-0x9c:1.53.0.2
	cr-0x9b:1.53.0.4
	cr-0x99:1.46
	Z-emcb-cygwin_daemon:1.44.0.2
	w32api-2_2:1.40
	mingw-runtime-2_4:1.40
	cygnus_cvs_20020108_pre:1.31
	Z-cygwin_daemon_merge-new_HEAD:1.24
	Z-cygwin_daemon_merge_HEAD:1.24
	cygwin_daemon:1.24.0.2;
locks; strict;
comment	@# @;
expand	@o@;


1.116
date	2014.12.05.13.41.52;	author corinna;	state Exp;
branches;
next	1.115;

1.115
date	2014.05.13.10.24.16;	author jturney;	state Exp;
branches;
next	1.114;

1.114
date	2014.02.09.12.23.13;	author jturney;	state Exp;
branches
	1.114.2.1;
next	1.113;

1.113
date	2013.11.19.11.14.36;	author corinna;	state Exp;
branches;
next	1.112;

1.112
date	2013.07.31.09.58.55;	author corinna;	state Exp;
branches;
next	1.111;

1.111
date	2013.05.21.09.32.12;	author corinna;	state Exp;
branches;
next	1.110;

1.110
date	2013.02.21.02.13.17;	author yselkowitz;	state Exp;
branches;
next	1.109;

1.109
date	2013.01.21.16.28.27;	author cgf;	state Exp;
branches;
next	1.108;

1.108
date	2012.11.28.03.22.36;	author cgf;	state Exp;
branches;
next	1.107;

1.107
date	2012.11.27.21.32.36;	author cgf;	state Exp;
branches;
next	1.106;

1.106
date	2012.11.27.16.14.52;	author cgf;	state Exp;
branches;
next	1.105;

1.105
date	2012.11.23.13.22.47;	author cgf;	state Exp;
branches;
next	1.104;

1.104
date	2012.11.07.16.32.08;	author corinna;	state Exp;
branches;
next	1.103;

1.103
date	2012.11.05.11.15.23;	author corinna;	state Exp;
branches;
next	1.102;

1.102
date	2012.10.24.10.15.27;	author yselkowitz;	state Exp;
branches;
next	1.101;

1.101
date	2012.10.19.11.58.48;	author corinna;	state Exp;
branches;
next	1.100;

1.100
date	2012.07.11.16.41.51;	author corinna;	state Exp;
branches
	1.100.2.1;
next	1.99;

1.99
date	2012.02.24.10.19.01;	author yselkowitz;	state Exp;
branches;
next	1.98;

1.98
date	2012.01.29.09.41.06;	author corinna;	state Exp;
branches;
next	1.97;

1.97
date	2011.12.22.13.48.05;	author corinna;	state Exp;
branches;
next	1.96;

1.96
date	2011.12.22.12.40.26;	author corinna;	state Exp;
branches;
next	1.95;

1.95
date	2011.12.02.16.15.25;	author corinna;	state Exp;
branches;
next	1.94;

1.94
date	2011.11.28.17.49.56;	author corinna;	state Exp;
branches;
next	1.93;

1.93
date	2011.09.15.16.49.51;	author jturney;	state Exp;
branches;
next	1.92;

1.92
date	2011.08.21.19.36.52;	author cgf;	state Exp;
branches;
next	1.91;

1.91
date	2011.07.20.01.18.14;	author yselkowitz;	state Exp;
branches;
next	1.90;

1.90
date	2010.02.17.15.01.56;	author corinna;	state Exp;
branches;
next	1.89;

1.89
date	2010.01.22.22.31.50;	author corinna;	state Exp;
branches;
next	1.88;

1.88
date	2009.11.04.14.14.52;	author corinna;	state Exp;
branches;
next	1.87;

1.87
date	2009.07.22.10.20.26;	author corinna;	state Exp;
branches;
next	1.86;

1.86
date	2009.07.05.00.01.26;	author cgf;	state Exp;
branches;
next	1.85;

1.85
date	2009.05.16.15.46.42;	author corinna;	state Exp;
branches;
next	1.84;

1.84
date	2009.05.11.14.01.17;	author corinna;	state Exp;
branches;
next	1.83;

1.83
date	2009.04.13.22.51.02;	author davek;	state Exp;
branches;
next	1.82;

1.82
date	2009.03.18.04.19.05;	author cgf;	state Exp;
branches;
next	1.81;

1.81
date	2009.02.24.02.11.14;	author cgf;	state Exp;
branches;
next	1.80;

1.80
date	2009.01.17.11.59.16;	author corinna;	state Exp;
branches;
next	1.79;

1.79
date	2009.01.09.05.11.57;	author cgf;	state Exp;
branches;
next	1.78;

1.78
date	2008.10.29.13.13.26;	author cgf;	state Exp;
branches;
next	1.77;

1.77
date	2008.10.12.03.08.33;	author cgf;	state Exp;
branches;
next	1.76;

1.76
date	2008.10.12.03.06.12;	author cgf;	state Exp;
branches;
next	1.75;

1.75
date	2008.08.17.16.45.44;	author cgf;	state Exp;
branches;
next	1.74;

1.74
date	2008.07.30.06.07.42;	author cgf;	state Exp;
branches;
next	1.73;

1.73
date	2008.07.22.14.40.05;	author corinna;	state Exp;
branches;
next	1.72;

1.72
date	2008.05.15.11.01.25;	author corinna;	state Exp;
branches;
next	1.71;

1.71
date	2008.03.09.09.41.42;	author briand;	state Exp;
branches;
next	1.70;

1.70
date	2008.03.09.04.10.10;	author briand;	state Exp;
branches;
next	1.69;

1.69
date	2008.03.08.17.52.49;	author briand;	state Exp;
branches;
next	1.68;

1.68
date	2007.12.21.03.32.46;	author briand;	state Exp;
branches;
next	1.67;

1.67
date	2007.08.03.19.41.48;	author davek;	state Exp;
branches;
next	1.66;

1.66
date	2007.07.10.00.12.54;	author cgf;	state Exp;
branches;
next	1.65;

1.65
date	2006.09.12.15.14.51;	author cgf;	state Exp;
branches;
next	1.64;

1.64
date	2006.08.02.09.48.18;	author corinna;	state Exp;
branches;
next	1.63;

1.63
date	2006.07.03.16.00.58;	author corinna;	state Exp;
branches
	1.63.4.1;
next	1.62;

1.62
date	2006.01.18.15.57.55;	author cgf;	state Exp;
branches;
next	1.61;

1.61
date	2006.01.17.15.37.13;	author cgf;	state Exp;
branches;
next	1.60;

1.60
date	2006.01.17.12.33.46;	author corinna;	state Exp;
branches;
next	1.59;

1.59
date	2006.01.15.09.29.02;	author corinna;	state Exp;
branches;
next	1.58;

1.58
date	2005.11.22.17.19.17;	author cgf;	state Exp;
branches;
next	1.57;

1.57
date	2004.02.21.04.51.15;	author cgf;	state Exp;
branches;
next	1.56;

1.56
date	2004.02.10.16.01.31;	author cgf;	state Exp;
branches;
next	1.55;

1.55
date	2003.11.19.18.50.52;	author corinna;	state Exp;
branches;
next	1.54;

1.54
date	2003.10.17.17.19.31;	author cgf;	state Exp;
branches;
next	1.53;

1.53
date	2003.09.12.01.51.21;	author cgf;	state Exp;
branches;
next	1.52;

1.52
date	2003.09.11.02.56.40;	author cgf;	state Exp;
branches;
next	1.51;

1.51
date	2003.09.11.02.00.42;	author cgf;	state Exp;
branches;
next	1.50;

1.50
date	2003.09.11.00.07.28;	author cgf;	state Exp;
branches;
next	1.49;

1.49
date	2003.09.10.21.55.59;	author cgf;	state Exp;
branches;
next	1.48;

1.48
date	2003.09.08.04.29.34;	author cgf;	state Exp;
branches;
next	1.47;

1.47
date	2003.09.08.02.50.02;	author cgf;	state Exp;
branches;
next	1.46;

1.46
date	2003.09.01.02.33.50;	author cgf;	state Exp;
branches;
next	1.45;

1.45
date	2003.09.01.01.57.44;	author cgf;	state Exp;
branches;
next	1.44;

1.44
date	2003.07.26.00.10.48;	author cgf;	state Exp;
branches;
next	1.43;

1.43
date	2003.03.09.19.29.22;	author cgf;	state Exp;
branches;
next	1.42;

1.42
date	2003.03.04.05.30.50;	author cgf;	state Exp;
branches;
next	1.41;

1.41
date	2003.03.01.03.38.19;	author cgf;	state Exp;
branches;
next	1.40;

1.40
date	2003.01.22.17.15.53;	author corinna;	state Exp;
branches;
next	1.39;

1.39
date	2002.07.07.00.54.38;	author cgf;	state Exp;
branches;
next	1.38;

1.38
date	2002.07.07.00.44.08;	author cgf;	state Exp;
branches;
next	1.37;

1.37
date	2002.05.13.05.13.58;	author cgf;	state Exp;
branches;
next	1.36;

1.36
date	2002.02.27.16.10.17;	author cgf;	state Exp;
branches;
next	1.35;

1.35
date	2002.01.29.02.03.32;	author cgf;	state Exp;
branches;
next	1.34;

1.34
date	2002.01.22.03.22.55;	author cgf;	state Exp;
branches;
next	1.33;

1.33
date	2002.01.22.03.17.58;	author cgf;	state Exp;
branches;
next	1.32;

1.32
date	2002.01.21.21.35.55;	author cgf;	state Exp;
branches;
next	1.31;

1.31
date	2001.12.11.22.51.01;	author cgf;	state Exp;
branches;
next	1.30;

1.30
date	2001.11.11.06.07.36;	author cgf;	state Exp;
branches;
next	1.29;

1.29
date	2001.11.11.03.06.59;	author cgf;	state Exp;
branches;
next	1.28;

1.28
date	2001.10.24.22.09.37;	author cgf;	state Exp;
branches;
next	1.27;

1.27
date	2001.10.24.21.56.53;	author cgf;	state Exp;
branches;
next	1.26;

1.26
date	2001.10.13.05.33.47;	author cgf;	state Exp;
branches;
next	1.25;

1.25
date	2001.10.10.01.58.33;	author cgf;	state Exp;
branches;
next	1.24;

1.24
date	2001.09.22.00.40.37;	author cgf;	state Exp;
branches;
next	1.23;

1.23
date	2001.09.21.01.01.27;	author cgf;	state Exp;
branches;
next	1.22;

1.22
date	2001.09.19.16.22.47;	author cgf;	state Exp;
branches;
next	1.21;

1.21
date	2001.09.06.02.38.22;	author cgf;	state Exp;
branches;
next	1.20;

1.20
date	2000.12.11.00.10.49;	author cgf;	state Exp;
branches;
next	1.19;

1.19
date	2000.12.03.05.42.03;	author cgf;	state Exp;
branches;
next	1.18;

1.18
date	2000.10.28.05.39.38;	author cgf;	state Exp;
branches;
next	1.17;

1.17
date	2000.10.28.05.00.00;	author cgf;	state Exp;
branches;
next	1.16;

1.16
date	2000.10.19.02.13.52;	author dj;	state Exp;
branches;
next	1.15;

1.15
date	2000.09.29.11.20.53;	author corinna;	state Exp;
branches;
next	1.14;

1.14
date	2000.09.28.06.39.43;	author corinna;	state Exp;
branches;
next	1.13;

1.13
date	2000.09.10.16.56.00;	author cgf;	state Exp;
branches;
next	1.12;

1.12
date	2000.08.29.01.58.00;	author cgf;	state Exp;
branches;
next	1.11;

1.11
date	2000.08.25.16.50.08;	author cgf;	state Exp;
branches;
next	1.10;

1.10
date	2000.08.25.15.45.42;	author cgf;	state Exp;
branches;
next	1.9;

1.9
date	2000.08.24.19.03.12;	author cgf;	state Exp;
branches;
next	1.8;

1.8
date	2000.07.01.04.20.24;	author cgf;	state Exp;
branches;
next	1.7;

1.7
date	2000.05.18.18.39.11;	author cgf;	state Exp;
branches;
next	1.6;

1.6
date	2000.04.03.01.29.06;	author cgf;	state Exp;
branches;
next	1.5;

1.5
date	2000.03.19.03.53.18;	author cgf;	state Exp;
branches;
next	1.4;

1.4
date	2000.03.18.17.45.35;	author cgf;	state Exp;
branches;
next	1.3;

1.3
date	2000.03.15.14.38.09;	author cgf;	state Exp;
branches;
next	1.2;

1.2
date	2000.02.28.05.08.05;	author cgf;	state Exp;
branches;
next	1.1;

1.1
date	2000.02.17.19.38.31;	author cgf;	state Exp;
branches
	1.1.1.1;
next	;

1.114.2.1
date	2014.05.19.12.26.01;	author corinna;	state Exp;
branches;
next	;

1.100.2.1
date	2012.10.16.15.20.47;	author corinna;	state Exp;
branches;
next	1.100.2.2;

1.100.2.2
date	2012.10.17.14.31.55;	author corinna;	state Exp;
branches;
next	1.100.2.3;

1.100.2.3
date	2012.10.24.13.01.59;	author corinna;	state Exp;
branches;
next	1.100.2.4;

1.100.2.4
date	2012.11.05.12.31.18;	author corinna;	state Exp;
branches;
next	1.100.2.5;

1.100.2.5
date	2012.11.07.16.39.43;	author corinna;	state Exp;
branches;
next	1.100.2.6;

1.100.2.6
date	2012.11.23.15.14.40;	author corinna;	state Exp;
branches;
next	1.100.2.7;

1.100.2.7
date	2012.11.29.17.15.23;	author corinna;	state Exp;
branches;
next	1.100.2.8;

1.100.2.8
date	2013.01.29.21.54.42;	author corinna;	state Exp;
branches;
next	1.100.2.9;

1.100.2.9
date	2013.02.21.11.24.35;	author corinna;	state Exp;
branches;
next	;

1.63.4.1
date	2007.11.12.15.31.45;	author corinna;	state Exp;
branches;
next	1.63.4.2;

1.63.4.2
date	2007.12.23.12.36.09;	author briand;	state Exp;
branches;
next	;

1.1.1.1
date	2000.02.17.19.38.31;	author cgf;	state Exp;
branches;
next	;


desc
@@


1.116
log
@	* Makefile.in: Add rules to create and depend on tzmap.h.
	* tzmap-from-unicode.org: New script to create tzmap.h.
	* tzmap.h: New auto-generated file.
	* tzset.c: Drop tzmap from here and include tzmap.h instead.  Drop
	Windows 2000 considerations.
@
text
@# Makefile for Cygwin utilities
# Copyright 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006,
# 2007, 2008, 2009, 2010, 2011, 2012 Red Hat, Inc.

# This file is part of Cygwin.

# This software is a copyrighted work licensed under the terms of the
# Cygwin license.  Please consult the file "CYGWIN_LICENSE" for
# details.

srcdir:=@@srcdir@@
target_builddir:=@@target_builddir@@
winsup_srcdir:=@@winsup_srcdir@@
configure_args=@@configure_args@@

export CC:=@@CC@@
export CXX:=@@CXX@@

CFLAGS:=@@CFLAGS@@
CXXFLAGS:=@@CXXFLAGS@@
override CXXFLAGS+=-fno-exceptions -fno-rtti

include ${srcdir}/../Makefile.common

cygwin_build:=${target_builddir}/winsup/cygwin

cygwin_headers:=@@cygwin_headers@@

# environment variables used by ccwrap
export CCWRAP_HEADERS:=. ${srcdir} $(call justdir,${cygwin_headers})
export CCWRAP_SYSTEM_HEADERS:=${cygwin_headers} @@newlib_headers@@
export CCWRAP_DIRAFTER_HEADERS:=@@windows_headers@@

WINDOWS_LIBDIR:=@@windows_libdir@@

prefix:=@@prefix@@
exec_prefix:=@@exec_prefix@@

bindir:=@@bindir@@
program_transform_name:=@@program_transform_name@@

override INSTALL:=@@INSTALL@@
override INSTALL_PROGRAM:=@@INSTALL_PROGRAM@@
override INSTALL_DATA:=@@INSTALL_DATA@@

EXEEXT:=@@EXEEXT@@
EXEEXT_FOR_BUILD:=@@EXEEXT_FOR_BUILD@@

.PHONY: all install clean realclean warn_dumper warn_cygcheck_zlib

LDLIBS := -lnetapi32 -ladvapi32 -lkernel32 -luser32
CYGWIN_LDFLAGS := -static -Wl,--enable-auto-import -L${WINDOWS_LIBDIR} $(LDLIBS)
DEP_LDLIBS := $(cygwin_build)/libcygwin.a

MINGW_CXX      := @@MINGW_CXX@@

# List all binaries to be linked in Cygwin mode.  Each binary on this list
# must have a corresponding .o of the same name.
CYGWIN_BINS := ${addsuffix .exe,cygpath getconf getfacl ldd locale kill minidumper mkgroup \
        mkpasswd mount passwd pldd ps regtool setfacl setmetamode ssp tzset umount}

# List all binaries to be linked in MinGW mode.  Each binary on this list
# must have a corresponding .o of the same name.
MINGW_BINS := ${addsuffix .exe,cygcheck cygwin-console-helper ldh strace}

# List all objects to be compiled in MinGW mode.  Any object not on this
# list will will be compiled in Cygwin mode implicitly, so there is no
# need for a CYGWIN_OBJS.
MINGW_OBJS := bloda.o cygcheck.o dump_setup.o ldh.o path.o strace.o
MINGW_LDFLAGS:=-static

CYGCHECK_OBJS:=cygcheck.o bloda.o path.o dump_setup.o
ZLIB:=-lz

.PHONY: all
all:

# If a binary should link in any objects besides the .o with the same
# name as the binary, then list those here.
strace.exe: path.o
cygcheck.exe: cygcheck.o bloda.o path.o dump_setup.o

path-mount.o: path.cc
	${COMPILE.cc} -c -DFSTAB_ONLY -o $@@ $<
mount.exe: path-mount.o

.PHONY: tzmap
tzmap:
	${srcdir}/tzmap-from-unicode.org > ${srcdir}/$@@.h

tzmap.h:
	[ -f "${srcdir}/tzmap.h" ] || ${srcdir}/tzmap-from-unicode.org > ${srcdir}/$@@

tzset.o: tzmap.h

# Provide any necessary per-target variable overrides.

cygcheck.exe: MINGW_LDFLAGS += ${ZLIB} -lwininet -lpsapi -lntdll
cygcheck.exe: ${CYGCHECK_OBJS}

cygpath.o: CXXFLAGS += -fno-threadsafe-statics
cygpath.exe: CYGWIN_LDFLAGS += -lcygwin -luserenv -lntdll
ps.exe: CYGWIN_LDFLAGS += -lcygwin -lpsapi -lntdll
strace.exe: MINGW_LDFLAGS += -lntdll

ldd.exe:CYGWIN_LDFLAGS += -lpsapi
pldd.exe: CYGWIN_LDFLAGS += -lpsapi
minidumper.exe: CYGWIN_LDFLAGS += -ldbghelp

ldh.exe: MINGW_LDFLAGS += -nostdlib -lkernel32

# Check for dumper's requirements and enable it if found.
libbfd   := $(call libname,libbfd.a)
build_dumper := $(shell test -r "$(libbfd)" && echo 1)

ifdef build_dumper
CYGWIN_BINS += dumper.exe
dumper.o module_info.o parse_pe.o: CXXFLAGS += -I$(top_srcdir)/include
dumper.o parse_pe.o: dumper.h
dumper.exe: module_info.o parse_pe.o
dumper.exe: CYGWIN_LDFLAGS += -lpsapi -lbfd -lintl -liconv -liberty ${ZLIB}
else
all: warn_dumper
endif

all: Makefile $(CYGWIN_BINS) $(MINGW_BINS)

# test harness support (note: the "MINGW_BINS +=" should come after the
# "all:" above so that the testsuite is not run for "make" but only
# "make check".)
MINGW_BINS += testsuite.exe
MINGW_OBJS += path-testsuite.o testsuite.o
testsuite.exe: path-testsuite.o
path-testsuite.cc: path.cc ; @@test -L $@@ || ln -sf ${filter %.cc,$^} $@@
path-testsuite.o: MINGW_CXXFLAGS += -DTESTSUITE
# this is necessary because this .c lives in the build dir instead of src
path-testsuite.o: MINGW_CXX := ${patsubst -I.,-I$(utils_source),$(MINGW_CXX)}
path-testsuite.cc path.cc testsuite.cc: testsuite.h
check: testsuite.exe ; $(<D)/$(<F)

# the rest of this file contains generic rules

# how to compile a MinGW object
${MINGW_OBJS}: override CXX:=${MINGW_CXX}
${MINGW_OBJS}: CCWRAP_HEADERS:=${srcdir}
${MINGW_OBJS}: CCWRAP_SYSTEM_HEADERS:=
# ${MINGW_OBJS}: CCWRAP_DIRAFTER_HEADERS:=
$(MINGW_OBJS): %.o: %.cc
	c++wrap -c -o $@@ ${CXXFLAGS} $(MINGW_CXXFLAGS) $<

# how to link a MinGW binary
$(MINGW_BINS): %.exe: %.o
	$(MINGW_CXX) $(MINGW_CXXFLAGS) -o $@@ ${filter %.o,$^} $(MINGW_LDFLAGS)

# how to link a Cygwin binary
$(CYGWIN_BINS): %.exe: %.o
	${CXX} -o $@@ $(filter %.o,$^) -B${cygwin_build}/ ${LDFLAGS} ${CYGWIN_LDFLAGS}

# note: how to compile a Cygwin object is covered by the pattern rule in Makefile.common

# these dependencies ensure that the required in-tree libs are built first
$(MINGW_BINS): $(DEP_LDLIBS)
$(CYGWIN_BINS): $(DEP_LDLIBS)

cygcheck.o cygpath.o module_info.o path.o ps.o regtool.o strace.o: loadlib.h

.PHONY: clean
clean:
	rm -f *.o $(CYGWIN_BINS) $(MINGW_BINS) path-testsuite.cc testsuite.exe

.PHONY: realclean
realclean: clean
	rm -f Makefile config.cache

.PHONY: install
install: all
	/bin/mkdir -p ${DESTDIR}${bindir}
	for i in $(CYGWIN_BINS) ${filter-out testsuite.exe,$(MINGW_BINS)} ; do \
	  n=`echo $$i | sed '$(program_transform_name)'`; \
	  $(INSTALL_PROGRAM) $$i $(DESTDIR)$(bindir)/$$n; \
	done

$(cygwin_build)/libcygwin.a: $(cygwin_build)/Makefile
	@@$(MAKE) -C $(@@D) $(@@F)

.PHONY: warn_dumper
warn_dumper:
	@@echo '*** Not building dumper.exe since some required libraries or'
	@@echo '*** or headers are missing.  Potential candidates are:'
	@@echo '***   bfd.h, libbfd.a, libiconv.a, or libintl.a'
	@@echo '*** If you need this program, check out the naked-bfd and naked-intl'
	@@echo '*** sources from sourceware.org.  Then, configure and build these'
	@@echo '*** libraries.  Otherwise, you can safely ignore this warning.'

Makefile: Makefile.in config.status
	/bin/sh ./config.status
@


1.115
log
@	* Makefile.in (minidumper.exe): Link directly with dbghelp.
	* minidumper.cc (minidump): Ditto.
@
text
@d87 9
@


1.114
log
@2014-02-07  Jon TURNEY  <jon.turney@@dronecode.org.uk>

	* minidumper.cc: New file.
	* Makefile.in (CYGWIN_BINS): Add minidumper.
	* utils.xml (minidumper): New section.
@
text
@d99 1
@


1.114.2.1
log
@2014-04-21  Jon TURNEY  <jon.turney@@dronecode.org.uk>

	* minidumper.cc (filter_minidump_type): New function.
	(minidump): Change default dump type from MiniDumpNormal to
	something with more useful information without getting too
	big. Use filter_minidump_type() to filter out unsupported dump
	types.

2014-04-21  Jon TURNEY  <jon.turney@@dronecode.org.uk>

	* Makefile.in (minidumper.exe): Link directly with dbghelp.
	* minidumper.cc (minidump): Ditto.

2014-04-21  Jon TURNEY  <jon.turney@@dronecode.org.uk>

	* minidumper.cc (minidump): Fix copy and paste error in checking
	result of OpenProcess().
@
text
@a98 1
minidumper.exe: CYGWIN_LDFLAGS += -ldbghelp
@


1.113
log
@	* Makefile.in (cygcheck.exe): Link against wininet.dll.
	(dumper.exe): Link against psapi.dll.
	* cygcheck.cc (_WIN32_WINNT): Define as 0x0602.
	(pInternetCloseHandle): Drop pointer.
	(PRODUCT_UNLICENSED): Drop definition.
	(PRODUCT_PROFESSIONAL_WMC): Ditto.
	(package_grep): Delete code loading wininet functions dynamically, just
	call functions directly.
@
text
@d59 1
a59 1
CYGWIN_BINS := ${addsuffix .exe,cygpath getconf getfacl ldd locale kill mkgroup \
@


1.112
log
@	* Makefile.in (MINGW_LDFLAGS): Don't link against w32api libs.  These
	are only for Cygwin executables.
@
text
@d89 1
a89 1
cygcheck.exe: MINGW_LDFLAGS += ${ZLIB} -lpsapi -lntdll
d111 1
a111 1
dumper.exe: CYGWIN_LDFLAGS += -lbfd -lintl -liconv -liberty ${ZLIB}
@


1.111
log
@	Reinstantiate accidentally removed patch from 2009-05-16:
	* Makefile.in (cygpath.exe): Link against cygwin.a before linking
	against ntdll.dll to avoid linking symbols defined in both DLLs
	from ntdll.
	(ps.exe): Ditto.
@
text
@d70 1
a70 1
MINGW_LDFLAGS:=-L${WINDOWS_LIBDIR} -static
@


1.110
log
@* Makefile.in (CYGWIN_LDFLAGS): Replace -static-lib* with -static.
(MINGW_LDFLAGS): Ditto.
(ZLIB): Simplify accordingly.
@
text
@d93 2
a94 2
cygpath.exe: CYGWIN_LDFLAGS += -luserenv -lntdll
ps.exe: CYGWIN_LDFLAGS += -lpsapi -lntdll
@


1.109
log
@Update copyrights
@
text
@d52 1
a52 1
CYGWIN_LDFLAGS := -static-libgcc -static-libstdc++ -Wl,--enable-auto-import -L${WINDOWS_LIBDIR} $(LDLIBS)
d70 1
a70 1
MINGW_LDFLAGS:=-L${WINDOWS_LIBDIR} -static-libgcc -static-libstdc++
d73 1
a73 1
ZLIB:=-Wl,-dn,-lz,-dy
@


1.108
log
@* Makefile.in: Move CFLAGS and CXXFLAGS so that they can be manipulated by
Makefile.common.  Add -static-libstdc++ to *LDFLAGS.  Add dependencies for
loadlib.h.
* loadlib.h: Update copyright.
(_load_sys_library): Properly define set_dll_library as WINAPI to avoid stack
corruption.
@
text
@d2 2
a3 2
# Copyright 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004,
# 2005, 2006, 2007, 2008, 2009, 2010 Red Hat, Inc.
@


1.107
log
@* Makefile.in (ZLIBS): Common define to force static load.
(MINGW_LDFLAGS): Use static libgcc.
@
text
@d19 4
a48 4
CFLAGS:=@@CFLAGS@@
CXXFLAGS:=@@CXXFLAGS@@
override CXXFLAGS+=-fno-exceptions -fno-rtti -DHAVE_DECL_GETOPT=0

d51 2
a52 2
LDLIBS     := -lnetapi32 -ladvapi32 -lkernel32 -luser32
CYGWIN_LDFLAGS    := -static-libgcc -Wl,--enable-auto-import -L${WINDOWS_LIBDIR} $(LDLIBS)
d70 1
a70 1
MINGW_LDFLAGS:=-L${WINDOWS_LIBDIR} -static-libgcc
d155 2
@


1.106
log
@* Makefile.in: Make sure that libz is always loaded staticly.
@
text
@d70 1
a70 1
MINGW_LDFLAGS:=-L${WINDOWS_LIBDIR}
d73 1
d89 1
a89 1
cygcheck.exe: MINGW_LDFLAGS += -lpsapi -lntdll --static -lz
d111 1
a111 1
dumper.exe: CYGWIN_LDFLAGS += -lbfd -lintl -liconv -liberty --static -lz
@


1.105
log
@ChangeLog:
2012-11-12  Christopher Faylor  <me.cygwin2012@@cgf.cx>

	* Makefile.common: Revamp for new configury.  Add default compilation
	targets, include .E processing.  Add magic for allowing "CFLAGS" to
	control optimization options in "CXXFLAGS".
	* configure.cygwin: New include for Cygwin configure.in's.
	* acinclude.m4: Delete old definitions.  Implement AC_WINDOWS_HEADERS,
	AC_WINDOWS_LIBS, AC_CYGWIN_INCLUDES, target_builddir, winsup_srcdir.
	* aclocal.m4: Regenerate.
	* autogen.sh: New file.
	* ccwrap: New script.
	* c++wrap: New script.
	* config.guess: New script.
	* config.sub: New script.
	* configure: Regenerate.
	* configure.in: Eliminate LIB_AC_PROG_* calls in favor of standard.
	Delete ancient target test.
	* install-sh: New script.

cygserver/ChangeLog:
2012-11-12  Christopher Faylor  <me.cygwin2012@@cgf.cx>

	* Makefile.in: Revamp for new configury.
	* configure.in: Revamp for new configury.
	* aclocal.m4: Regenerate.
	* configure: Ditto.
	* autogen.sh: New script.

cygwin/ChangeLog:
2012-11-22  Christopher Faylor  <me.cygwin2012@@cgf.cx>

	* select.cc (select): Don't return -1 when we've timed out after
	looping.

2012-11-22  Christopher Faylor  <me.cygwin2012@@cgf.cx>

	* Makefile.in: Revamp for new configury.
	(datarootdir): Add variable setting.
	(winver_stamp): Accommodate changes to mkvers.sh setting.
	(libc.a): Fix race when libm.a might not have been built yet.
	* configure.in: Revamp for new configury.
	* aclocal.m4: Regenerate.
	* configure: Ditto.
	* autogen.sh: New script.
	* mkvers.sh: Find include directives via CFLAGS and friends rather than
	assuming that w32api lives nearby.

utils/ChangeLog:
2012-11-12  Christopher Faylor  <me.cygwin2012@@cgf.cx>

	* aclocal.m4: Regenerate.
	* configure: Ditto.
	* autogen.sh: New script.
	* configure.in: Revamp for new configury.
	* Makefile.in: Revamp for new configury.  Rename ALL_* to just *.
	Always use "VERBOSE" setting.
	(MINGW_CXX): Don't include CFLAGS in definition.
	(all): Define target first, before everything else so that it is the
	default.
	(ps.exe): Don't add useless -lcygwin.
	(ldh.exe): For consistency, add to existing MINGW_LDFLAGS rather than
	redefining them.
	(cygcheck.exe): Always include -lz for MINGW_LDFLAGS.  Don't try to
	figure out where to find it.
	(dumper.exe): Simplify check.  Assume libraries are installed rather
	than trying to retrieve from source tree.
	(install): Just use /bin/mkdir to create directories.
	(Makefile): Regenerate when standard dependencies change.
	* dump_setup.cc: Always include zlib.h.  Remove accommodations for it
	possibly not existing.
	* parse_pe.cc: Add define which allows building with installed
	binutils package.
	* dumper.cc: Ditto.
@
text
@d88 1
a88 1
cygcheck.exe: MINGW_LDFLAGS += -lpsapi -lntdll -lz
d110 1
a110 1
dumper.exe: CYGWIN_LDFLAGS += -lbfd -lintl -liconv -liberty -lz
@


1.104
log
@winsup:

	* Makefile.common (zlib_source): Remove.
	(zlib_build): Remove.
	(bz2lib_source): Remove.
	(bz2lib_build): Remove.
	(w32api_source): Remove.
	(w32api_build): Remove.
	(w32api_lib): Remove.
	(mingw_build): Remove.
	(mingw_source): Remove.
	($(w32api_lib)/%.a): Remove rule.
	* Makefile.in (ZLIB): Remove.
	($(SUBDIRS)): Drop mingw check.
	(mingw): Remove rule.
	(install_mingw): Ditto.
	* configure.in: Remove support for mingw as build target.
	* configure: Regenerate.

utils:

	* Makefile.in ($(MINGW_BINS)): Drop -B$(mingw_build)/ from build
	expression.
@
text
@d11 20
a30 1
SHELL:=@@SHELL@@
a31 2
srcdir:=@@srcdir@@
VPATH:=@@srcdir@@
a44 5
CC:=@@CC@@
CC_FOR_TARGET:=$(CC)
CXX:=@@CXX@@
CXX_FOR_TARGET:=$(CXX)

a48 4
include $(srcdir)/../Makefile.common

.SUFFIXES:
.NOEXPORT:
d51 3
a53 3
ALL_LDLIBS     := -lnetapi32 -ladvapi32 -lkernel32 -luser32
ALL_LDFLAGS    := -static-libgcc -Wl,--enable-auto-import -B$(newlib_build)/libc $(LDFLAGS) $(ALL_LDLIBS)
ALL_DEP_LDLIBS := $(cygwin_build)/libcygwin.a
d55 1
a55 1
MINGW_CXX      := @@MINGW_CXX@@ $(CFLAGS)
d70 6
d80 1
a80 1
cygcheck.exe: bloda.o path.o dump_setup.o
d83 1
a83 1
	$(CXX) -c $(CXXFLAGS) -DFSTAB_ONLY -I$(updir) $< -o $@@
d87 7
a93 5
cygcheck.exe: MINGW_CXXFLAGS += -idirafter $(cygwin_source)/include -idirafter $(newlib_source)/libc/include
cygcheck.exe: MINGW_LDFLAGS += -lpsapi -lntdll
cygpath.exe: ALL_LDFLAGS += -lcygwin -luserenv -lntdll
cygpath.exe: CXXFLAGS += -fno-threadsafe-statics
ps.exe: ALL_LDFLAGS += -lcygwin -lpsapi -lntdll
d96 2
a97 2
ldd.exe: ALL_LDFLAGS += -lpsapi
pldd.exe: ALL_LDFLAGS += -lpsapi
d99 1
a99 1
ldh.exe: MINGW_LDFLAGS := -nostdlib -lkernel32
d102 3
a104 5
libiconv := ${shell $(CC) --print-file-name=libiconv.a}
libbfd   := ${shell $(CC) -B$(bupdir2)/bfd/ --print-file-name=libbfd.a}
libintl  := ${shell $(CC) -B$(bupdir2)/intl/ --print-file-name=libintl.a}
bfdlink	 := $(shell ${CC} -xc /dev/null -o /dev/null -c -B${bupdir2}/bfd/ -include bfd.h 2>&1)
build_dumper := ${shell test -r $(libbfd) -a -r $(libintl) -a -n "$(libiconv)" -a -z "${bfdlink}" && echo 1}
d107 1
a107 1
dumper.o module_info.o parse_pe.o: CXXFLAGS += -I$(bupdir2)/bfd -I$(updir1)/include
d110 1
a110 1
dumper.exe: ALL_LDFLAGS += ${libbfd} ${libintl} -L$(bupdir1)/libiberty $(libiconv) -liberty -lz
a114 11
# Check for availability of a MinGW libz and enable for cygcheck.
libz:=${shell x=$$(${MINGW_CXX} --print-file-name=libz.a); cd $$(dirname $$x); dir=$$(pwd); case "$$dir" in *mingw*) echo $$dir/libz.a ;; esac}
ifdef libz
zlib_h  := -include ${patsubst %/lib/libz.a,%/include/zlib.h,$(libz)}
zconf_h := ${patsubst %/zlib.h,%/zconf.h,$(zlib_h)}
dump_setup.o: MINGW_CXXFLAGS += $(zconf_h) $(zlib_h)
cygcheck.exe: MINGW_LDFLAGS += $(libz)
else
all: warn_cygcheck_zlib
endif

d133 4
d138 1
a138 6
ifdef VERBOSE
	$(MINGW_CXX) $c -o $(@@D)/$(basename $@@)$o $(MINGW_CXXFLAGS) $<
else
	@@echo $(MINGW_CXX) $c $(MINGW_CXXFLAGS) ... $(*F).cc;\
	$(MINGW_CXX) $c -o $(@@D)/$(basename $@@)$o $(MINGW_CXXFLAGS) $<
endif
a141 4
ifdef VERBOSE
	$(MINGW_CXX) $(MINGW_CXXFLAGS) -o $@@ ${filter %.o,$^} $(MINGW_LDFLAGS)
else
	@@echo $(MINGW_CXX) -o $@@ ${filter %.o,$^} ${filter-out -B%, $(MINGW_CXXFLAGS) $(MINGW_LDFLAGS)};\
a142 1
endif
d146 1
a146 6
ifdef VERBOSE
	$(CXX) -o $@@ ${filter %.o,$^} -B$(cygwin_build)/ $(ALL_LDFLAGS)
else
	@@echo $(CXX) -o $@@ ${filter %.o,$^} ... ${filter-out -B%, $(ALL_LDFLAGS)};\
	$(CXX) -o $@@ ${filter %.o,$^} -B$(cygwin_build)/ $(ALL_LDFLAGS)
endif
d151 2
a152 2
$(MINGW_BINS): $(ALL_DEP_LDLIBS)
$(CYGWIN_BINS): $(ALL_DEP_LDLIBS)
d154 1
d158 1
d162 1
d164 1
a164 1
	$(SHELL) $(updir1)/mkinstalldirs $(DESTDIR)$(bindir)
d173 1
d182 2
a183 2
warn_cygcheck_zlib:
	@@echo '*** Building cygcheck without package content checking due to missing mingw libz.a.'
@


1.103
log
@	* Makefile.in (MINGW_CXX): Attach $(CFLAGS) to allow providing
	build option tweaks to mingw compiler as well.
@
text
@d141 1
a141 1
	$(MINGW_CXX) $(MINGW_CXXFLAGS) -o $@@ ${filter %.o,$^} -B$(mingw_build)/ $(MINGW_LDFLAGS)
d144 1
a144 1
	$(MINGW_CXX) $(MINGW_CXXFLAGS) -o $@@ ${filter %.o,$^} -B$(mingw_build)/ $(MINGW_LDFLAGS)
@


1.102
log
@	* configure.in: Add check for MINGW_CXX.  Remove libiconv check.
	* configure: Regenerate.
	* Makefile.in: Remove references to mingw and w32api directories.
	Use MINGW_CXX instead of mingw script to build MINGW_BINS.
	Check for libiconv with $CC --print-file-name.
	* cygcheck.cc: Use relative include paths for Cygwin headers.
	* path.cc: Ditto.
	* strace.cc: Ditto
	* mingw: Remove.
@
text
@d47 1
a47 1
MINGW_CXX      := @@MINGW_CXX@@
@


1.101
log
@	* Makefile.in (cygcheck.exe): Add temporary (1.7.17-only) hack to
	allow cygcheck running on pre-Vista despite of the new w32api not
	matching the locally used w32api.
@
text
@d43 5
a47 9
ALL_LDLIBS     := -lnetapi32 -ladvapi32
ALL_LDFLAGS    := -static-libgcc -Wl,--enable-auto-import -B$(newlib_build)/libc -B$(w32api_lib) $(LDFLAGS) $(ALL_LDLIBS)
ALL_DEP_LDLIBS := $(cygwin_build)/libcygwin.a ${patsubst -l%,\
                    $(w32api_lib)/lib%.a,$(ALL_LDLIBS) -lkernel32 -luser32}

MINGW_LIB        := $(mingw_build)/libmingw32.a
MINGW_LDLIBS     := $(ALL_LDLIBS) $(MINGW_LIB)
MINGW_DEP_LDLIBS := $(ALL_DEP_LDLIBS) $(MINGW_LIB)
MINGW_CXX        := ${srcdir}/mingw ${CXX} -I${updir}
d73 2
a74 1
cygcheck.exe: MINGW_LDFLAGS +=  -B{w32api_lib} -lpsapi -lntdll -lmsvcrt
a82 1
ldh.exe: MINGW_LDLIBS :=
d86 1
a86 1
LIBICONV := @@libiconv@@
d90 1
a90 1
build_dumper := ${shell test -r $(libbfd) -a -r $(libintl) -a -n "$(LIBICONV)" -a -z "${bfdlink}" && echo 1}
d96 1
a96 1
dumper.exe: ALL_LDFLAGS += ${libbfd} ${libintl} -L$(bupdir1)/libiberty $(LIBICONV) -liberty -lz
d104 1
a104 1
zlib_h  := -include ${patsubst %/lib/mingw/libz.a,%/include/zlib.h,${patsubst %/lib/libz.a,%/include/zlib.h,$(libz)}}
d159 1
a159 1
$(MINGW_BINS): $(MINGW_DEP_LDLIBS)
a177 3
$(MINGW_LIB): $(mingw_build)/Makefile
	@@$(MAKE) -C $(@@D) $(@@F)

@


1.100
log
@	* Makefile.in (cygcheck.exe): Link against psapi.dll.
	* bloda.cc: Change include section to work with Mingw64 headers.
	Include psapi.h.  Use SystemProcessInformation instead of
	SystemProcessesAndThreadsInformation throughout and add define for
	w32api headers.  Ditto for PSYSTEM_PROCESS_INFORMATION vs.
	PSYSTEM_PROCESSES.
	(system_module_list): New type to replace SYSTEM_MODULE_INFORMATION.
	Change usage throughout accordingly.
	(get_module_list): Fetch module list using PSAPI functions
	EnumDeviceDrivers and GetDeviceDriverBaseNameA.
	* cygcheck.cc (max): Define as __max if not defined already.
	(alloca): Only define if not defined already.
	(handle_unique_object_name): Use explicit sharing flags rather than
	FILE_SHARE_VALID_FLAGS which officially is only available in DDK
	headers.
	(PRODUCT_ULTIMATE_E): Only define if not defined already.
	* dump_setup.cc: Change include section to work with Mingw64 headers.
	(NtQueryAttributesFile): Drop NTOSAPI aka DECLSPEC_IMPORT.
	* strace.cc: Change include section to work with Mingw64 headers.
	(alloca): Only define if not defined already.
@
text
@d77 1
a77 1
cygcheck.exe: MINGW_LDFLAGS += -lpsapi -lntdll
@


1.100.2.1
log
@	Align ChangeLog to HEAD
	New file ChangeLog.64bit
@
text
@a30 1
HOST_CPU=@@HOST_CPU@@
d43 9
a51 5
ALL_LDLIBS     := -lnetapi32 -ladvapi32 -lkernel32 -luser32
ALL_LDFLAGS    := -static-libgcc -Wl,--enable-auto-import -B$(newlib_build)/libc $(LDFLAGS) $(ALL_LDLIBS)
ALL_DEP_LDLIBS := $(cygwin_build)/libcygwin.a

MINGW_CXX        := ${srcdir}/mingw ${HOST_CPU} ${CXX} -I${updir}
d86 1
d145 1
a145 1
	$(MINGW_CXX) $(MINGW_CXXFLAGS) -o $@@ ${filter %.o,$^} $(MINGW_LDFLAGS)
d148 1
a148 1
	$(MINGW_CXX) $(MINGW_CXXFLAGS) -o $@@ ${filter %.o,$^} $(MINGW_LDFLAGS)
d163 1
a163 1
$(MINGW_BINS): $(ALL_DEP_LDLIBS)
d182 3
@


1.100.2.2
log
@	Revert accidental checkin.
@
text
@d31 1
d44 5
a48 9
ALL_LDLIBS     := -lnetapi32 -ladvapi32
ALL_LDFLAGS    := -static-libgcc -Wl,--enable-auto-import -B$(newlib_build)/libc -B$(w32api_lib) $(LDFLAGS) $(ALL_LDLIBS)
ALL_DEP_LDLIBS := $(cygwin_build)/libcygwin.a ${patsubst -l%,\
                    $(w32api_lib)/lib%.a,$(ALL_LDLIBS) -lkernel32 -luser32}

MINGW_LIB        := $(mingw_build)/libmingw32.a
MINGW_LDLIBS     := $(ALL_LDLIBS) $(MINGW_LIB)
MINGW_DEP_LDLIBS := $(ALL_DEP_LDLIBS) $(MINGW_LIB)
MINGW_CXX        := ${srcdir}/mingw ${CXX} -I${updir}
a82 1
ldh.exe: MINGW_LDLIBS :=
d141 1
a141 1
	$(MINGW_CXX) $(MINGW_CXXFLAGS) -o $@@ ${filter %.o,$^} -B$(mingw_build)/ $(MINGW_LDFLAGS)
d144 1
a144 1
	$(MINGW_CXX) $(MINGW_CXXFLAGS) -o $@@ ${filter %.o,$^} -B$(mingw_build)/ $(MINGW_LDFLAGS)
d159 1
a159 1
$(MINGW_BINS): $(MINGW_DEP_LDLIBS)
a177 3
$(MINGW_LIB): $(mingw_build)/Makefile
	@@$(MAKE) -C $(@@D) $(@@F)

@


1.100.2.3
log
@Pull in changes from HEAD
@
text
@d43 9
a51 5
ALL_LDLIBS     := -lnetapi32 -ladvapi32 -lkernel32 -luser32
ALL_LDFLAGS    := -static-libgcc -Wl,--enable-auto-import -B$(newlib_build)/libc $(LDFLAGS) $(ALL_LDLIBS)
ALL_DEP_LDLIBS := $(cygwin_build)/libcygwin.a

MINGW_CXX      := @@MINGW_CXX@@
a76 1
cygcheck.exe: MINGW_CXXFLAGS += -idirafter $(cygwin_source)/include -idirafter $(newlib_source)/libc/include
d86 1
d90 1
a90 1
libiconv := ${shell $(CC) --print-file-name=libiconv.a}
d94 1
a94 1
build_dumper := ${shell test -r $(libbfd) -a -r $(libintl) -a -n "$(libiconv)" -a -z "${bfdlink}" && echo 1}
d100 1
a100 1
dumper.exe: ALL_LDFLAGS += ${libbfd} ${libintl} -L$(bupdir1)/libiberty $(libiconv) -liberty -lz
d108 1
a108 1
zlib_h  := -include ${patsubst %/lib/libz.a,%/include/zlib.h,$(libz)}
d163 1
a163 1
$(MINGW_BINS): $(ALL_DEP_LDLIBS)
d182 3
@


1.100.2.4
log
@Pull in changes from HEAD
@
text
@d47 1
a47 1
MINGW_CXX      := @@MINGW_CXX@@ $(CFLAGS)
@


1.100.2.5
log
@Pull in changes from HEAD
@
text
@d141 1
a141 1
	$(MINGW_CXX) $(MINGW_CXXFLAGS) -o $@@ ${filter %.o,$^} $(MINGW_LDFLAGS)
d144 1
a144 1
	$(MINGW_CXX) $(MINGW_CXXFLAGS) -o $@@ ${filter %.o,$^} $(MINGW_LDFLAGS)
@


1.100.2.6
log
@Pull in changes from HEAD
@
text
@d11 2
d14 1
a14 20
target_builddir:=@@target_builddir@@
winsup_srcdir:=@@winsup_srcdir@@
configure_args=@@configure_args@@

export CC:=@@CC@@
export CXX:=@@CXX@@

include ${srcdir}/../Makefile.common

cygwin_build:=${target_builddir}/winsup/cygwin

cygwin_headers:=@@cygwin_headers@@

# environment variables used by ccwrap
export CCWRAP_HEADERS:=. ${srcdir} $(call justdir,${cygwin_headers})
export CCWRAP_SYSTEM_HEADERS:=${cygwin_headers} @@newlib_headers@@
export CCWRAP_DIRAFTER_HEADERS:=@@windows_headers@@

WINDOWS_LIBDIR:=@@windows_libdir@@

d28 5
d37 4
d43 3
a45 3
LDLIBS     := -lnetapi32 -ladvapi32 -lkernel32 -luser32
CYGWIN_LDFLAGS    := -static-libgcc -Wl,--enable-auto-import -L${WINDOWS_LIBDIR} $(LDLIBS)
DEP_LDLIBS := $(cygwin_build)/libcygwin.a
d47 1
a47 1
MINGW_CXX      := @@MINGW_CXX@@
a61 6
MINGW_LDFLAGS:=-L${WINDOWS_LIBDIR}

CYGCHECK_OBJS:=cygcheck.o bloda.o path.o dump_setup.o

.PHONY: all
all:
d66 1
a66 1
cygcheck.exe: cygcheck.o bloda.o path.o dump_setup.o
d69 1
a69 1
	${COMPILE.cc} -c -DFSTAB_ONLY -o $@@ $<
d73 5
a77 7

cygcheck.exe: MINGW_LDFLAGS += -lpsapi -lntdll -lz
cygcheck.exe: ${CYGCHECK_OBJS}

cygpath.o: CXXFLAGS += -fno-threadsafe-statics
cygpath.exe: CYGWIN_LDFLAGS += -luserenv -lntdll
ps.exe: CYGWIN_LDFLAGS += -lpsapi -lntdll
d80 2
a81 2
ldd.exe:CYGWIN_LDFLAGS += -lpsapi
pldd.exe: CYGWIN_LDFLAGS += -lpsapi
d83 1
a83 1
ldh.exe: MINGW_LDFLAGS += -nostdlib -lkernel32
d86 5
a90 3
libbfd   := $(call libname,libbfd.a)
build_dumper := $(shell test -r "$(libbfd)" && echo 1)

d93 1
a93 1
dumper.o module_info.o parse_pe.o: CXXFLAGS += -I$(top_srcdir)/include
d96 1
a96 1
dumper.exe: CYGWIN_LDFLAGS += -lbfd -lintl -liconv -liberty -lz
d101 11
a129 4
${MINGW_OBJS}: override CXX:=${MINGW_CXX}
${MINGW_OBJS}: CCWRAP_HEADERS:=${srcdir}
${MINGW_OBJS}: CCWRAP_SYSTEM_HEADERS:=
# ${MINGW_OBJS}: CCWRAP_DIRAFTER_HEADERS:=
d131 6
a136 1
	c++wrap -c -o $@@ ${CXXFLAGS} $(MINGW_CXXFLAGS) $<
d140 4
d145 1
d149 6
a154 1
	${CXX} -o $@@ $(filter %.o,$^) -B${cygwin_build}/ ${LDFLAGS} ${CYGWIN_LDFLAGS}
d159 2
a160 2
$(MINGW_BINS): $(DEP_LDLIBS)
$(CYGWIN_BINS): $(DEP_LDLIBS)
a161 1
.PHONY: clean
a164 1
.PHONY: realclean
a167 1
.PHONY: install
d169 1
a169 1
	/bin/mkdir -p ${DESTDIR}${bindir}
a177 1
.PHONY: warn_dumper
d186 2
a187 2
Makefile: Makefile.in config.status
	/bin/sh ./config.status
@


1.100.2.7
log
@Pull in changes from HEAD
@
text
@a18 4
CFLAGS:=@@CFLAGS@@
CXXFLAGS:=@@CXXFLAGS@@
override CXXFLAGS+=-fno-exceptions -fno-rtti

d45 4
d51 2
a52 2
LDLIBS := -lnetapi32 -ladvapi32 -lkernel32 -luser32
CYGWIN_LDFLAGS := -static-libgcc -static-libstdc++ -Wl,--enable-auto-import -L${WINDOWS_LIBDIR} $(LDLIBS)
d70 1
a70 1
MINGW_LDFLAGS:=-L${WINDOWS_LIBDIR} -static-libgcc -static-libstdc++
a72 1
ZLIB:=-Wl,-dn,-lz,-dy
d88 1
a88 1
cygcheck.exe: MINGW_LDFLAGS += ${ZLIB} -lpsapi -lntdll
d110 1
a110 1
dumper.exe: CYGWIN_LDFLAGS += -lbfd -lintl -liconv -liberty ${ZLIB}
a153 2
cygcheck.o cygpath.o module_info.o path.o ps.o regtool.o strace.o: loadlib.h

@


1.100.2.8
log
@Pull in changes from HEAD
@
text
@d2 2
a3 2
# Copyright 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006,
# 2007, 2008, 2009, 2010, 2011, 2012 Red Hat, Inc.
@


1.100.2.9
log
@Pull in changes from HEAD
@
text
@d52 1
a52 1
CYGWIN_LDFLAGS := -static -Wl,--enable-auto-import -L${WINDOWS_LIBDIR} $(LDLIBS)
d70 1
a70 1
MINGW_LDFLAGS:=-L${WINDOWS_LIBDIR} -static
d73 1
a73 1
ZLIB:=-lz
@


1.99
log
@* Makefile.in (CYGWIN_BINS): Add pldd.
(pldd.exe): Add -lpsapi to ALL_LDFLAGS.
* pldd.c: New file.
* utils.sgml (pldd): New section.
@
text
@d77 1
a77 1
cygcheck.exe: MINGW_LDFLAGS += -lntdll
@


1.98
log
@	* Makefile.in (CYGWIN_BINS): Add tzset.
	* tzset.c: New tool, new file.
	* utils.sgml (tzset): New section.

	* new-features.sgml (ov-new1.7.10): Add tzset.

	* release/1.7.10: Add tzset.
@
text
@d56 1
a56 1
        mkpasswd mount passwd ps regtool setfacl setmetamode ssp tzset umount}
d84 1
@


1.97
log
@	Don't leave Windows 2000 behind.

	* Makefile.in (ps.exe): Revert previous change.
	* ps.cc: Include psapi.h again.
	(main): In CW_GETPINFO_FULL case.  Evaluate minimal process access mask
	required per OS and use that in OpenProcess call.  Use
	GetModuleFileNameExW on Windows 2000 or if fetching the drive mapping
	failed.  Handle empty process name.
@
text
@d56 1
a56 1
        mkpasswd mount passwd ps regtool setfacl setmetamode ssp umount}
@


1.96
log
@	* Makefile.in (ps.exe): Drop -lpsapi from ALL_LDFLAGS.
	* ps.cc: Don't include psapi.h.
	(dosdevs): Drop.
	(unicode_buf): Define.
	(main): Simplify path evaluation in CW_GETPINFO_FULL case. Fetch drive
	map from Cygwin DLL.  Use it to convert NT device paths to Win32 paths.
@
text
@d80 1
a80 1
ps.exe: ALL_LDFLAGS += -lcygwin -lntdll
@


1.95
log
@	* Makefile.in (cygpath.exe): Add -luserenv to ALL_LDFLAGS.
	* cygpath.cc: Throughout, use cygwin_conv_path WIN_W rather than WIN_A
	conversion.
	(get_long_path_name_w32impl): Remove.
	(get_long_name): Drop pre-Windows 2000 accommodations.  Just call
	GetLongPathNameW here directly.
	(get_special_folder): Convert first parameter to WCHAR buffer pointer.
	Drop conversion of result from WCHAR * to char *.
	(do_sysfolders): Accommodate change to get_special_folder and only
	convert result to char * last.  Drop pre-Windows 2000 accommodations
	and just call GetProfilesDirectoryW directly.  Replace call to
	GetWindowsDirectoryW with call to GetSystemWindowsDirectoryW.
	Just call GetShortPathNameW directly.
	(do_pathconv): Simplify buffer handling.
@
text
@d80 1
a80 1
ps.exe: ALL_LDFLAGS += -lcygwin -lpsapi -lntdll
@


1.94
log
@	* ps.cc: Remove all Win 9x considerations.  Use psapi functions
	directly.  Drop support for older Cygwin DLLs.  Just use progname_long
	as is since it's already a POSIX path now.  Rename "tty" to "pty" as in
	the Cygwin DLL.  Call setlocale to make sure wcstombs does the right
	thing according to the current locale.
	* Makefile.in (ps.exe): Link against psapi.dll.
@
text
@d78 1
a78 1
cygpath.exe: ALL_LDFLAGS += -lcygwin -lntdll
@


1.93
log
@	* strace.cc (attach_process): Try to turn off DEBUG_ONLY_THIS_PROCESS
	if Attaching to a process with the trace-children flag set.
	(handle_output_debug_string): Apparently we don't need to explicitly
	attach for debugging when a child process starts
	* Makefile.in (strace.exe): Link with ntdll
@
text
@d80 1
a80 1
ps.exe: ALL_LDFLAGS += -lcygwin -lntdll
@


1.92
log
@* Makefile.in: Check for header file existence when building dumper.exe too.
@
text
@d81 1
@


1.91
log
@* Makefile.in (CYGWIN_BINS): Add getconf.
(getconf.c): New file.
@
text
@d91 2
a92 1
build_dumper := ${shell test -r $(libbfd) -a -r $(libintl) -a -n "$(LIBICONV)" && echo 1}
d184 3
a186 2
	@@echo '*** Not building dumper.exe since some required libraries are'
	@@echo '*** missing: libbfd.a and libintl.a.'
@


1.90
log
@	* Makefile.in (CYGWIN_BINS): Rename getlocale to locale.
	* getlocale.c: Rename to ...
	* locale.cc: Revamp to add full functionality of POSIX locale(1) tool,
	as far as Cygwin supports it.
	* utils.sgml (getlocale): Move and rename to ...
	(locale): Accommodate new functionality.
@
text
@d55 1
a55 1
CYGWIN_BINS := ${addsuffix .exe,cygpath getfacl ldd locale kill mkgroup \
@


1.89
log
@	* Makefile.in (CYGWIN_BINS): Add getlocale.
	* getlocale.c: New file.
	* utils.sgml (getlocale): New section describing new getlocale tool.
@
text
@d55 1
a55 1
CYGWIN_BINS := ${addsuffix .exe,cygpath getfacl getlocale ldd kill mkgroup \
@


1.88
log
@	* Makefile.in (cygpath.exe): Add -fno-threadsafe-statics to CXXFLAGS.
@
text
@d3 1
a3 1
# 2005, 2006, 2007, 2008, 2009 Red Hat, Inc.
d55 1
a55 1
CYGWIN_BINS := ${addsuffix .exe,cygpath getfacl ldd kill mkgroup \
@


1.87
log
@	* Makefile.in (path-mount.o): Add a rule to build stripped down version
	of path.cc for usage in mount.
	(mount.exe): Add dependency to path-mount.o.
	* mount.cc (force): Convert to bool value.  Accommodate throughout.
	(from_fstab): New function.
	(do_mount_from_fstab): New function.
	(longopts): Add --all option.
	(opts): Add -a option.
	(usage): Document -a/--all option.
	(main): Handle -a option as well as single parameter.
	* path.cc: Add FSTAB_ONLY conditional to allow building path-mount.o.
	(mount_table): Remove static storage class.
	(max_mount_entry): Ditto.
	(root_here): Unused.  Remove.
	(from_fstab_line): Remove static.
	* path.h (struct mnt_t): Define here rather than in path.cc.
	(from_fstab_line): Declare.
	(mount_table): Declare.
	(max_mount_entry): Declare.
	* utils.sgml (mount): Document -a/--all option and mounting of single
	path from fstab files.
@
text
@d79 1
@


1.86
log
@* cygwin-console-helper.cc: New file.
@
text
@d72 4
@


1.85
log
@	* Makefile.in (cygpath.exe): Link against cygwin.a before linking
	against ntdll.dll to avoid linking symbols defined in both DLLs
	from ntdll.
	(ps.exe): Ditto.
@
text
@d60 1
a60 1
MINGW_BINS := ${addsuffix .exe,cygcheck ldh strace}
@


1.84
log
@	* Makefile.in: Link ps.exe agains ntdll.dll.
	* ps.cc (main): Enable SE_DEBUG_NAME privilege if Windows processes
	have to be enumerated.  Workaround EnumProcessModules problem when
	running under WOW64 and use NtQueryInformationProcess to fetch
	process image name.
@
text
@d74 2
a75 2
cygpath.exe: ALL_LDFLAGS += -lntdll
ps.exe: ALL_LDFLAGS += -lntdll
@


1.83
log
@
	* Makefile.in (dumper.exe):  Add -lz to ALL_LDFLAGS.
@
text
@d75 1
@


1.82
log
@* ldd.cc (load_dll): Start helper program rather than ldd.exe.
(set_entry_point_break): Rename from get_entry_point.
(print_dlls): Rename from print_dlls_and_kill_inferior.  Avoid printing
specific dll name if we're looking at a dll.
(report): Always dump dlls on process exit.  Don't allow thread creation.
Accommodate get_entry_point rename.
(start_process): Start process with DEBUG_ONLY_THIS_PROCESS.
(longopts): Eliminate "dll" option.
(main): Ditto.
* ldd.cc: Use wide character Win32 paths throughout.
(load_dll): Fix size expression (add fn) in realloc.
@
text
@d91 1
a91 1
dumper.exe: ALL_LDFLAGS += ${libbfd} ${libintl} -L$(bupdir1)/libiberty $(LIBICONV) -liberty
@


1.81
log
@Add DESTDIR functionality to Makefile.in's.
@
text
@d60 1
a60 1
MINGW_BINS := ${addsuffix .exe,strace cygcheck}
d65 1
a65 1
MINGW_OBJS := bloda.o cygcheck.o dump_setup.o path.o strace.o
d78 3
@


1.80
log
@	* Makefile.in: Fix copyright date.
	* cygcheck.cc (scan_registry): Take additional parameter and add code
	to avoid recursion in Wow6432Node subkey.  Rename variable cygnus to
	cygwin.  Scan for "Cygwin" instead of for "cygnus" substring.
	(dump_sysinfo): Drop unused calls to scan_registry.  Drop scanning
	HKEY_CURRENT_CONFIG.
@
text
@d161 1
a161 1
	$(SHELL) $(updir1)/mkinstalldirs $(bindir)
d164 1
a164 1
	  $(INSTALL_PROGRAM) $$i $(bindir)/$$n; \
@


1.79
log
@* ldd.cc: New file.  First stab at implementing ldd-like functionality for
Cygwin.
* Makefile.in (CYGWIN_BINS): Add ldd.
(ldd.exe): Use -lpsapi.
@
text
@d3 1
a3 1
# 2005, 2006, 2007, 2008 Red Hat, Inc.
@


1.78
log
@* Makefile.in (ALL_LDFLAGS): Link libgcc statically for everything here.
@
text
@d55 1
a55 1
CYGWIN_BINS := ${addsuffix .exe,cygpath getfacl kill mkgroup \
d76 2
@


1.77
log
@Dummy check-in to get right revision log:

* mingw: New front-end script to control building of MinGW files without using
the deprecated -mno-cygwin option.
* Makefile.in: Use mingw front-end.
@
text
@d44 1
a44 1
ALL_LDFLAGS    := -Wl,--enable-auto-import -B$(newlib_build)/libc -B$(w32api_lib) $(LDFLAGS) $(ALL_LDLIBS)
@


1.76
log
@* Makefile.in: Tweak to work better with new utils/mingw front-end.
In utils:
@
text
@d138 1
a138 1
$(CYGWIN_BINS): %.exe: %.o 
@


1.75
log
@* Makefile.in (ALL_LDFLAGS): Add --enable-auto-import option to quiet ld
warnings.
* mkgroup.c: Change all global variables and most functions to static.
(enum_local_groups): Add a print_current parameter to control whether entries
for everything should be printed or just the current user.
(enum_groups): Ditto.
(main): Move call fetch_current_pgrp_sid earlier to avoid a NULL deference when
no command line arguments are specified.  Accommodate argument changes to above
functions.  Avoid printing SYSTEM account when print_current is specified.
Issue error when extra stuff is found on the command line.
* mkpasswd.c: Change all global variables and most functions to static.
(enum_users): Add a print_current parameter to control whether entries for
everything should be printed or just the current user.
(main): Move call fetch_current_user_sid earlier to avoid a NULL deference when
no command line arguments are specified.  Accommodate argument change to above
function.  Avoid printing standard accounts when print_current is specified.
Issue error when extra stuff is found on the command line.
@
text
@d51 1
a51 2
MINGW_CXX        := ${patsubst %/cygwin/include,%/mingw/include,\
                      ${filter-out -I$(newlib_source)/%,$(COMPILE_CXX)}} -I$(updir)
d92 1
a92 1
libz:=${shell x=$$($(CC) -mno-cygwin --print-file-name=libz.a); cd $$(dirname $$x); dir=$$(pwd); case "$$dir" in *mingw*) echo $$dir/libz.a ;; esac}
d131 1
a131 1
	$(CXX) $(MINGW_CXXFLAGS) -o $@@ ${filter %.o,$^} -B$(mingw_build)/ $(MINGW_LDFLAGS)
d133 2
a134 2
	@@echo $(CXX) -o $@@ ${filter %.o,$^} ${filter-out -B%, $(MINGW_CXXFLAGS) $(MINGW_LDFLAGS)};\
	$(CXX) $(MINGW_CXXFLAGS) -o $@@ ${filter %.o,$^} -B$(mingw_build)/ $(MINGW_LDFLAGS)
@


1.74
log
@* Makefile.in: Link cygcheck with -lntdll even without mingw-zlib.
@
text
@d44 1
a44 1
ALL_LDFLAGS    := -B$(newlib_build)/libc -B$(w32api_lib) $(LDFLAGS) $(ALL_LDLIBS)
@


1.73
log
@	* Makefile.in (cygcheck.exe): Link against ntdll.
	* bloda.cc: Use statically linked functions throughout.
	* cygpath.cc: Drop 9x considerations.
	* mkgroup.c: Revamp.  Redefine -l and -d options to take optional
	machine and domain parameters.  Redefine -c to work always, using
	token information.  Add -L, -D, -C to create unique groupnames in
	domain\group syntax.  Add -S option to define domain\group separator
	char.  Ignore -u and -s options.
	* mkpasswd.c: Revamp.  Redefine -l and -d options to take optional
	machine and domain parameters.  Redefine -c to work always, using
	token information.  Add -L, -D, -C to create unique usernames in
	domain\user syntax.  Add -S option to define domain\user separator
	char.  Ignore -g and -s options.  Prefer to take homedir from $HOME
	over $HOMEDRIVE/$HOMEPATH.
	* path.cc (oopts): Add "acl", "noacl", "posix=0" and "posix=1" options.
	(getmntent): Accomodate throughout.
	* ps.cc: Fix copyright dates.
	* utils.sgml: Fix text for mkgroup and mkpasswd.
@
text
@d74 1
d98 1
a98 1
cygcheck.exe: MINGW_LDFLAGS += $(libz) -lntdll
d176 1
a176 1
	@@echo '*** sources from sources.redhat.com.  Then, configure and build these'
@


1.72
log
@	* Makefile.in (CYGWIN_BINS): Remove ipcrm and ipcs.
	* ipcrm.c: Remove.
	* ipcs.c: Remove.
@
text
@d97 1
a97 1
cygcheck.exe: MINGW_LDFLAGS += $(libz)
@


1.71
log
@	* Makefile.in (install): Don't install the testsuite.
@
text
@d56 1
a56 1
CYGWIN_BINS := ${addsuffix .exe,cygpath getfacl ipcrm ipcs kill mkgroup \
@


1.70
log
@	* Makefile.in: Add a 'check' target that builds and runs
	testsuite.exe from path-testsuite.o and testsuite.o.
	* path.cc: Include testsuite.h.
	(struct mnt): Change to a mnt_t typedef and don't define
	mount_table when TESTSUITE is defined.
	(find2): Don't include when TESTSUITE is defined to avoid warning.
	(get_cygdrive0): Ditto.
	(get_cygdrive): Ditto.
	(read_mounts): Provide empty implementation when TESTSUITE is
	defined.
	(vconcat): Use the isslash macro.
	(unconvert_slashes): New helper to convert to backslashses.
	(rel_vconcat): Handle relative paths more gracefully.
	(cygpath): Skip a leading "./" sequence.  Avoid double-slashes.
	Normalize final output to backslashes and remove redundant path
	sequences.
	* testsuite.cc: New file implementing testsuite driver.
	* testsuite.h: New header implementing harness mount table and
	series of tests.
@
text
@d160 1
a160 1
	for i in $(CYGWIN_BINS) $(MINGW_BINS) ; do \
@


1.69
log
@	* Makefile.in: Reorganize considerably, using GNU make's
	static pattern rules and target-specific variables.
@
text
@d102 15
a118 2
all: Makefile $(CYGWIN_BINS) $(MINGW_BINS)

d153 1
a153 1
	rm -f *.o $(CYGWIN_BINS) $(MINGW_BINS)
@


1.68
log
@	* Makefile.in (cygcheck.exe): Don't link to ntdll.
	* bloda.cc (pNtQuerySystemInformation): Add.
	(pRtlAnsiStringToUnicodeString): Add.
	(get_process_list): Use function pointers for NT functions.
	(dump_dodgy_apps): Skip dodgy app check on non-NT platforms.
	Use GetProcAddress for NT-specific functions.
@
text
@d3 1
a3 1
# 2005, 2006, 2007 Red Hat, Inc.
a38 48
LIBICONV:=@@libiconv@@
libbfd:=${shell $(CC) -B$(bupdir2)/bfd/ --print-file-name=libbfd.a}
libintl:=${shell $(CC) -B$(bupdir2)/intl/ --print-file-name=libintl.a}
build_dumper:=${shell test -r $(libbfd) -a -r $(libintl) -a -n "$(LIBICONV)" && echo 1}

libz:=${shell x=$$($(CC) -mno-cygwin --print-file-name=libz.a); cd $$(dirname $$x); dir=$$(pwd); case "$$dir" in *mingw*) echo $$dir/libz.a ;; esac}
zlib_h:=-include ${patsubst %/lib/mingw/libz.a,%/include/zlib.h,${patsubst %/lib/libz.a,%/include/zlib.h,$(libz)}}
zconf_h:=${patsubst %/zlib.h,%/zconf.h,$(zlib_h)}
ifeq "${libz}" ""
zlib_h:=
zconf_h:=
libz:=
endif

DUMPER_INCLUDES:=-I$(bupdir2)/bfd -I$(updir1)/include

libcygwin:=$(cygwin_build)/libcygwin.a
libuser32:=$(w32api_lib)/libuser32.a
libkernel32:=$(w32api_lib)/libkernel32.a
ALL_DEP_LDLIBS:=$(libcygwin) $(w32api_lib)/libnetapi32.a \
		$(w32api_lib)/libadvapi32.a $(w32api_lib)/libkernel32.a \
		$(w32api_lib)/libuser32.a

ALL_LDLIBS:=${patsubst $(w32api_lib)/lib%.a,-l%,\
	      ${filter-out $(libuser32),\
	       ${filter-out $(libkernel32),\
		${filter-out $(libcygwin), $(ALL_DEP_LDLIBS)}}}}

MINGW_LIB:=$(mingw_build)/libmingw32.a
DUMPER_LIB:=${libbfd} ${libintl} -L$(bupdir1)/libiberty $(LIBICONV) -liberty
MINGW_LDLIBS:=${filter-out $(libcygwin),$(ALL_LDLIBS) $(MINGW_LIB)}
MINGW_DEP_LDLIBS:=${ALL_DEP_LDLIBS} ${MINGW_LIB}
ALL_LDFLAGS:=-B$(newlib_build)/libc -B$(w32api_lib) $(LDFLAGS) $(ALL_LDLIBS)
DUMPER_LDFLAGS:=$(ALL_LDFLAGS) $(DUMPER_LIB)
MINGW_CXX:=${patsubst %/cygwin/include,%/mingw/include,${filter-out -I$(newlib_source)/%,$(COMPILE_CXX)}} -I$(updir)

PROGS:=	cygcheck.exe cygpath.exe getfacl.exe kill.exe mkgroup.exe \
	mkpasswd.exe mount.exe passwd.exe ps.exe regtool.exe setfacl.exe \
	setmetamode.exe ssp.exe strace.exe umount.exe ipcrm.exe ipcs.exe

CLEAN_PROGS:=$(PROGS)
ifndef build_dumper
PROGS:=warn_dumper $(PROGS)
else
PROGS+=dumper$(EXEEXT)
CLEAN_PROGS+=dumper.exe
endif

d41 1
d43 44
a86 7
.PHONY: all install clean realclean warn_dumper

all: Makefile $(PROGS)

strace.exe: strace.o path.o $(MINGW_DEP_LDLIBS)
ifdef VERBOSE
	$(CXX) $(MINGW_CXXFLAGS) -o $@@ ${wordlist 1,2,$^} -B$(mingw_build)/ $(MINGW_LDFLAGS)
d88 1
a88 2
	@@echo $(CXX) -o $@@ ${wordlist 1,2,$^} ${filter-out -B%, $(MINGW_CXXFLAGS) $(MINGW_LDFLAGS)};\
	$(CXX) $(MINGW_CXXFLAGS) -o $@@ ${wordlist 1,2,$^} -B$(mingw_build)/ $(MINGW_LDFLAGS)
d91 7
a97 6
cygcheck.exe: cygcheck.o bloda.o path.o dump_setup.o $(MINGW_DEP_LDLIBS)
ifeq "$(libz)" ""
	@@echo '*** Building cygcheck without package content checking due to missing mingw libz.a.'
endif
ifdef VERBOSE
	$(CXX) $(MINGW_CXXFLAGS) -o $@@ ${wordlist 1,4,$^} -B$(mingw_build)/ $(MINGW_LDFLAGS) $(libz)
d99 1
a99 2
	@@echo $(CXX) -o $@@ ${wordlist 1,4,$^} ${filter-out -B%, $(MINGW_CXXFLAGS) $(MINGW_LDFLAGS)} $(libz);\
	$(CXX) $(MINGW_CXXFLAGS) -o $@@ ${wordlist 1,4,$^} -B$(mingw_build)/ $(MINGW_LDFLAGS) $(libz)
d102 1
a102 7
dumper.o: dumper.cc dumper.h
ifdef VERBOSE
	${filter-out -nostdinc,$(COMPILE_CXX)} $c -o $@@ $(DUMPER_INCLUDES) ${firstword $^}
else
	@@echo $(CXX) $c $(CFLAGS) $(DUMPER_INCLUDES) ... $(basename $@@).cc;\
	${filter-out -nostdinc,$(COMPILE_CXX)} $c -o $(@@D)/$(basename $@@)$o $(DUMPER_INCLUDES) $<
endif
d104 1
a104 7
module_info.o: module_info.cc
ifdef VERBOSE
	${filter-out -nostdinc,$(COMPILE_CXX)} $c -o $@@ $(DUMPER_INCLUDES) ${firstword $^}
else
	@@echo $(CXX) $c $(CFLAGS) $(DUMPER_INCLUDES) ... $(basename $@@).cc;\
	${filter-out -nostdinc,$(COMPILE_CXX)} $c -o $(@@D)/$(basename $@@)$o $(DUMPER_INCLUDES) $<
endif
d106 2
a107 1
parse_pe.o: parse_pe.cc dumper.h
d109 1
a109 1
	${filter-out -nostdinc,$(COMPILE_CXX)} $c -o $@@ $(DUMPER_INCLUDES) ${firstword $^}
d111 1
a111 6
	@@echo $(CXX) $c $(CFLAGS) $(DUMPER_INCLUDES) ... $(basename $@@).cc;\
	${filter-out -nostdinc,$(COMPILE_CXX)} $c -o $(@@D)/$(basename $@@)$o $(DUMPER_INCLUDES) $<
endif

path.o: path.cc
ifdef VERBOSE
a112 11
else
	@@echo $(MINGW_CXX) $c -o $(@@D)/$(basename $@@)$o $(MINGW_CXXFLAGS) ... $^;\
	${MINGW_CXX} $c -o $(@@D)/$(basename $@@)$o $(MINGW_CXXFLAGS) $<
endif

dump_setup.o: dump_setup.cc
ifdef VERBOSE
	$(MINGW_CXX) $(zconf_h) $(zlib_h) $c -o $(@@D)/$(basename $@@)$o $(MINGW_CXXFLAGS) $<
else
	@@echo $(MINGW_CXX) $c -o $(@@D)/$(basename $@@)$o $(MINGW_CXXFLAGS) ... $^;\
	$(MINGW_CXX) $(zconf_h) $(zlib_h) $c -o $(@@D)/$(basename $@@)$o $(MINGW_CXXFLAGS) $<
d115 2
a116 1
bloda.o: bloda.cc
d118 1
a118 1
	${MINGW_CXX} $c -o $(@@D)/$(basename $@@)$o $(MINGW_CXXFLAGS) -I$(updir) $<
d120 2
a121 2
	@@echo $(MINGW_CXX) $c -o $(@@D)/$(basename $@@)$o $(MINGW_CXXFLAGS) ... $^;\
	${MINGW_CXX} $c -o $(@@D)/$(basename $@@)$o $(MINGW_CXXFLAGS) -I$(updir) $<
d124 2
a125 1
cygcheck.o: cygcheck.cc
d127 1
a127 1
	${MINGW_CXX} $c -o $(@@D)/$(basename $@@)$o $(MINGW_CXXFLAGS) -I$(updir) $<
d129 2
a130 2
	@@echo $(MINGW_CXX) $c -o $(@@D)/$(basename $@@)$o $(MINGW_CXXFLAGS) ... $^;\
	${MINGW_CXX} $c -o $(@@D)/$(basename $@@)$o $(MINGW_CXXFLAGS) -I$(updir) $<
d133 1
a133 7
strace.o: strace.cc
ifdef VERBOSE
	$(MINGW_CXX) $c -o $(@@D)/$(basename $@@)$o $(MINGW_CXXFLAGS) -I$(updir) $<
else
	@@echo $(MINGW_CXX) $c -o $(@@D)/$(basename $@@)$o $(MINGW_CXXFLAGS) ... $^;\
	$(MINGW_CXX) $c -o $(@@D)/$(basename $@@)$o $(MINGW_CXXFLAGS) -I$(updir) $<
endif
d135 3
a137 7
kill.exe: kill.o
ifdef VERBOSE
	$(CXX) -o $@@ $^ -B$(cygwin_build)/ $(ALL_LDFLAGS) $(KILL_LIB)
else
	@@echo $(CXX) -o $@@ $^ ${filter-out -B%, $(ALL_LDFLAGS)};\
	$(CXX) -o $@@ $^ -B$(cygwin_build)/ $(ALL_LDFLAGS) $(KILL_LIB)
endif
d140 1
a140 1
	rm -f *.o $(CLEAN_PROGS)
d143 1
a143 1
	rm -f  Makefile config.cache
d147 1
a147 1
	for i in $(PROGS) ; do \
d155 1
a155 1
$(mingw_build)/libmingw32.a: $(mingw_build)/Makefile
d165 2
a166 23
dumper.exe: module_info.o parse_pe.o dumper.o $(ALL_DEP_LDLIBS)
ifdef VERBOSE
	$(CXX) -o $@@ ${wordlist 1,3,$^} -B$(cygwin_build)/ $(DUMPER_LDFLAGS)
else
	@@echo $(CXX) -o $@@ ${wordlist 1,3,$^} ${filter-out -B%, $(DUMPER_LDFLAGS)};\
	$(CXX) -o $@@ ${wordlist 1,3,$^} -B$(cygwin_build)/ $(DUMPER_LDFLAGS)
endif

cygpath.exe: cygpath.o $(ALL_DEP_LDLIBS)
ifdef VERBOSE
	$(CXX) -o $@@ ${firstword $^} -B$(cygwin_build)/ $(ALL_LDFLAGS) -lntdll
else
	@@echo $(CXX) -o $@@ ${firstword $^} ${filter-out -B%, $(ALL_LDFLAGS) -lntdll};\
	$(CXX) -o $@@ ${firstword $^} -B$(cygwin_build)/ $(ALL_LDFLAGS) -lntdll
endif

%.exe: %.o $(ALL_DEP_LDLIBS)
ifdef VERBOSE
	$(CXX) -o $@@ ${firstword $^} -B$(cygwin_build)/ $(ALL_LDFLAGS)
else
	@@echo $(CXX) -o $@@ ${firstword $^} ... ${filter-out -B%, $(ALL_LDFLAGS)};\
	$(CXX) -o $@@ ${firstword $^} -B$(cygwin_build)/ $(ALL_LDFLAGS)
endif
@


1.67
log
@	* Makefile.in (cygcheck.exe):  Add bloda.o as prerequisite, adjusting
	dependency-filtering $(wordlist ...) call appropriately.  Link ntdll.
	(bloda.o):  New rule to build bloda.o
	* cygcheck.cc (dump_sysinfo):  Call bloda function dump_dodgy_apps().
	* bloda.cc:  New file implements detection of applications from the
	Big List Of Dodgy Apps.
@
text
@d107 1
a107 1
	$(CXX) $(MINGW_CXXFLAGS) -o $@@ ${wordlist 1,4,$^} -B$(mingw_build)/ $(MINGW_LDFLAGS) $(libz) -lntdll
d109 2
a110 2
	@@echo $(CXX) -o $@@ ${wordlist 1,4,$^} ${filter-out -B%, $(MINGW_CXXFLAGS) $(MINGW_LDFLAGS)} $(libz) -lntdll;\
	$(CXX) $(MINGW_CXXFLAGS) -o $@@ ${wordlist 1,4,$^} -B$(mingw_build)/ $(MINGW_LDFLAGS) $(libz) -lntdll
@


1.66
log
@* cygwin/strsig.cc (__signals): New macro.
(sys_sigabbrev): New array of signal strings, patterned after linux.
(siglist): Use __signals.
* cygwin/include/cygwin/signal.h (sys_sigabbrev): Define.
* cygwin/include/cygwin/version.h: Bump API minor version to 177.

* utils/Makefile.in (kill.exe): Remove reliance on libiberty.
* utils/kill.cc (strsigno): New function patterned after libiberty but using
newly exported cygwin array.
@
text
@d3 1
a3 1
# 2005, 2006 Red Hat, Inc.
d102 1
a102 1
cygcheck.exe: cygcheck.o path.o dump_setup.o $(MINGW_DEP_LDLIBS)
d107 1
a107 1
	$(CXX) $(MINGW_CXXFLAGS) -o $@@ ${wordlist 1,3,$^} -B$(mingw_build)/ $(MINGW_LDFLAGS) $(libz)
d109 2
a110 2
	@@echo $(CXX) -o $@@ ${wordlist 1,3,$^} ${filter-out -B%, $(MINGW_CXXFLAGS) $(MINGW_LDFLAGS)} $(libz);\
	$(CXX) $(MINGW_CXXFLAGS) -o $@@ ${wordlist 1,3,$^} -B$(mingw_build)/ $(MINGW_LDFLAGS) $(libz)
d153 8
@


1.65
log
@* Makefile.in: Fix -ntdll typo.
* cygcheck.cc (main): Restore POSIXLY_CORRECT before displaying user's
environment.
@
text
@d169 1
a169 1
kill.exe: kill.o $(bupdir1)/libiberty/strsignal.o
@


1.64
log
@	* Makefile.in (cygpath.exe): Add rule to link cygpath against ntdll.dll.
	* cygpath.cc: Include DDK headers.
	(RtlAllocateUnicodeString): New static inline function.
	(get_device_name): New static function to evaluate DOS path from
	native NT path.
	(get_device_paths): New function to do the same for path lists.
	(doit): Call get_device_paths/get_device_name where appropriate.
@
text
@d215 2
a216 2
	@@echo $(CXX) -o $@@ ${firstword $^} ${filter-out -B%, $(ALL_LDFLAGS) -ntdll};\
	$(CXX) -o $@@ ${firstword $^} -B$(cygwin_build)/ $(ALL_LDFLAGS) -ntdll
@


1.63
log
@	* Makefile.in: Build setmetamode.exe.
	* setmetamode.c: New file.
@
text
@d211 8
@


1.63.4.1
log
@2007-08-31  Dave Korn  <dave.korn@@artimi.com>

	* mkgroup.c (enum_groups):  Use MAX_PREFERRED_LENGTH in netgroupenum
	call so that it will automatically size returned buffer sufficiently.

2007-08-03  Dave Korn  <dave.korn@@artimi.com>

	* Makefile.in (cygcheck.exe):  Add bloda.o as prerequisite, adjusting
	dependency-filtering $(wordlist ...) call appropriately.  Link ntdll.
	(bloda.o):  New rule to build bloda.o
	* cygcheck.cc (dump_sysinfo):  Call bloda function dump_dodgy_apps().
	* bloda.cc:  New file implements detection of applications from the
	Big List Of Dodgy Apps.

2007-07-24  Corinna Vinschen  <corinna@@vinschen.de>

	* COPYING.dumper: New file.
	* dumper.cc: Change license to plain GPLv2 + later.
	* dumper.h: Ditto.
	* parse_pe.cc: Ditto.

2007-07-23  Christopher Faylor  <me+cygwin@@cgf.cx>

	* strace.cc (create_child): Don't convert a path from cygwin format
	unless it has a slash.

2007-07-09  Christopher Faylor  <me+cygwin@@cgf.cx>

	* strace.cc (usage): Add missing description for -q.

2007-05-29  Pedro Alves  <pedro_alves@@portugalmail.pt>

	* dumper.cc (dumper::prepare_core_dump): Record a phdr for each section.

2007-03-30  Mark Mitchell  <mark@@codesourcery.com>

	* utils/cygpath.cc (get_long_path_name_w32impl): Close handles returned
	by FindFirstFile.

2006-09-11  Eric Blake  <ebb9@@byu.net>

	* cygcheck.cc (main): Restore POSIXLY_CORRECT before displaying user's
	environment.

2006-08-03  Corinna Vinschen  <corinna@@vinschen.de>

	* path.cc (vconcat): Don't convert backslahes to slashes.
	(cygpath): Return native path with all backslashes.

2006-07-30  Ilya Bobir  <ilya@@po4ta.com>

	* cygpath.cc (get_long_name): Fallback to get_long_path_name_w32impl.

2006-07-27  Corinna Vinschen  <corinna@@vinschen.de>

	* cygpath.c (get_long_name): Cover the case that GetLongPathName
	doesn't return valid information for non-existant files.  Just return
	incoming filename in that case.
@
text
@d3 1
a3 1
# 2005, 2006, 2007 Red Hat, Inc.
d102 1
a102 1
cygcheck.exe: cygcheck.o bloda.o path.o dump_setup.o $(MINGW_DEP_LDLIBS)
d107 1
a107 1
	$(CXX) $(MINGW_CXXFLAGS) -o $@@ ${wordlist 1,4,$^} -B$(mingw_build)/ $(MINGW_LDFLAGS) $(libz) -lntdll
d109 2
a110 2
	@@echo $(CXX) -o $@@ ${wordlist 1,4,$^} ${filter-out -B%, $(MINGW_CXXFLAGS) $(MINGW_LDFLAGS)} $(libz) -lntdll;\
	$(CXX) $(MINGW_CXXFLAGS) -o $@@ ${wordlist 1,4,$^} -B$(mingw_build)/ $(MINGW_LDFLAGS) $(libz) -lntdll
a152 8
bloda.o: bloda.cc
ifdef VERBOSE
	${MINGW_CXX} $c -o $(@@D)/$(basename $@@)$o $(MINGW_CXXFLAGS) -I$(updir) $<
else
	@@echo $(MINGW_CXX) $c -o $(@@D)/$(basename $@@)$o $(MINGW_CXXFLAGS) ... $^;\
	${MINGW_CXX} $c -o $(@@D)/$(basename $@@)$o $(MINGW_CXXFLAGS) -I$(updir) $<
endif

@


1.63.4.2
log
@	* Makefile.in (cygcheck.exe): Don't link to ntdll.
	* bloda.cc (pNtQuerySystemInformation): Add.
	(pRtlAnsiStringToUnicodeString): Add.
	(get_process_list): Use function pointers for NT functions.
	(dump_dodgy_apps): Skip dodgy app check on non-NT platforms.
	Use GetProcAddress for NT-specific functions.
@
text
@d107 1
a107 1
	$(CXX) $(MINGW_CXXFLAGS) -o $@@ ${wordlist 1,4,$^} -B$(mingw_build)/ $(MINGW_LDFLAGS) $(libz)
d109 2
a110 2
	@@echo $(CXX) -o $@@ ${wordlist 1,4,$^} ${filter-out -B%, $(MINGW_CXXFLAGS) $(MINGW_LDFLAGS)} $(libz);\
	$(CXX) $(MINGW_CXXFLAGS) -o $@@ ${wordlist 1,4,$^} -B$(mingw_build)/ $(MINGW_LDFLAGS) $(libz)
@


1.62
log
@bad_keywords
@
text
@d77 1
a77 1
	ssp.exe strace.exe umount.exe ipcrm.exe ipcs.exe
@


1.61
log
@copyright
@
text
@a18 1
sysconfdir:=@@sysconfdir@@
d184 1
a184 1
	$(SHELL) $(updir1)/mkinstalldirs $(bindir) $(sysconfdir)
@


1.60
log
@	* Makefile.in: Replace etcdir with sysconfdir.
@
text
@d2 2
a3 1
# Copyright 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004 Red Hat, Inc.
@


1.59
log
@	* Makefile.in (cygcheck.exe): Do not link against libwininet.a.
	* cygcheck.cc (pInternetCloseHandle): Define global function pointer.
	(display_internet_error): Use it.
	(package_grep): Attempt to load wininet.dll at runtime.  Call WinInet
	API through function pointers throughout.
@
text
@d18 1
a18 1
etcdir:=$(exec_prefix)/etc
d184 1
a184 1
	$(SHELL) $(updir1)/mkinstalldirs $(bindir) $(etcdir)
@


1.58
log
@* Makefile.in: Link cygcheck with libwininet.a.
* cygcheck.cc: Add includes.
(grep_packages): New global variable.
(display_internet_error): New function.
(safe_chars): New global variable.
(base_url): Ditto.
(package_grep): New function.
(usage): Reword --help output for clarity.  Document new argument.
(longopts): Add 'package-query' option.
(opts): Add 'p' option, reorder to be consistent with 'longopts'.
(main): Accommodate new option.
* utils.sgml (cygcheck): Update --help output.  Document new -p option.
@
text
@d102 1
a102 1
cygcheck.exe: cygcheck.o path.o dump_setup.o $(MINGW_DEP_LDLIBS) $(w32api_lib)/libwininet.a
d107 1
a107 1
	$(CXX) $(MINGW_CXXFLAGS) -o $@@ ${wordlist 1,3,$^} -B$(mingw_build)/ $(MINGW_LDFLAGS) $(libz) $(w32api_lib)/libwininet.a
d109 2
a110 2
	@@echo $(CXX) -o $@@ ${wordlist 1,3,$^} ${filter-out -B%, $(MINGW_CXXFLAGS) $(MINGW_LDFLAGS)} $(libz) $(w32api_lib)/libwininet.a;\
	$(CXX) $(MINGW_CXXFLAGS) -o $@@ ${wordlist 1,3,$^} -B$(mingw_build)/ $(MINGW_LDFLAGS) $(libz) $(w32api_lib)/libwininet.a
@


1.57
log
@* Makefile.in (build_dumper): Detect missing iconv library.
* cygpath.cc (dowin): Report on filename conversion errors.
(doit): Ditto.
* strace.cc (main): Use symbolic constant for _STRACE_ALL when setting mask.
@
text
@d102 1
a102 1
cygcheck.exe: cygcheck.o path.o dump_setup.o $(MINGW_DEP_LDLIBS)
d107 1
a107 1
	$(CXX) $(MINGW_CXXFLAGS) -o $@@ ${wordlist 1,3,$^} -B$(mingw_build)/ $(MINGW_LDFLAGS) $(libz)
d109 2
a110 2
	@@echo $(CXX) -o $@@ ${wordlist 1,3,$^} ${filter-out -B%, $(MINGW_CXXFLAGS) $(MINGW_LDFLAGS)} $(libz);\
	$(CXX) $(MINGW_CXXFLAGS) -o $@@ ${wordlist 1,3,$^} -B$(mingw_build)/ $(MINGW_LDFLAGS) $(libz)
@


1.56
log
@* strace.cc (main): Ensure POSIXLY_CORRECT argument ordering.
* cygcheck.cc (main): Ditto.
@
text
@d39 1
d42 1
a42 1
build_dumper:=${shell test -r $(libbfd) && test -r ${libintl} &&  echo 1}
a66 1
LIBICONV:=@@libiconv@@
@


1.55
log
@	* Makefile.in: Add rules to build ipcrm and ipcs.
	* ipcrm.c: New file.
	* ipcs.c: New file.
@
text
@d2 1
a2 1
# Copyright 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003 Red Hat, Inc.
@


1.54
log
@* cygcheck.cc (pretty_id): Don't exec if `id' program is not found.
@
text
@d77 1
a77 1
	ssp.exe strace.exe umount.exe
@


1.53
log
@* Makefile.in: Tweak mingw libz.a detection to make it more reliably detect
when libz.a is not available.
@
text
@d80 3
a82 1
ifdef build_dumper
a83 2
else
PROGS:=warn_dumper $(PROGS)
@


1.52
log
@* Makefile.in (cygcheck.o): Use MINGW_CXX for compilation.
* cygcheck.cc: Just include <getopt.h> rather than cygwin version.
(pretty_id): Avoid compiler warnings.
* cygpath.cc (usage): Ditto.
@
text
@d43 4
a46 4
libz:=${shell $(CC) -mno-cygwin --print-file-name=libz.a}
zlib_h:=-include ${patsubst %/lib/libz.a,%/include/zlib.h,$(libz)}
zconf_h:=-include ${patsubst %/lib/libz.a,%/include/zconf.h,$(libz)}
ifeq "${dir $(libz)}" "./"
d104 1
a104 1
	echo '*** Building cygcheck without package content checking due to missing mingw libz.a.'
@


1.51
log
@* Makefile.in (MINGW_CXX): Define and use for mingw-compiled files.
* path.cc: Include more path info in cygwin-specific includes since the cygwin
directory is no longer included by default.
@
text
@d155 1
a155 1
	${CXX} $c -o $(@@D)/$(basename $@@)$o $(MINGW_CXXFLAGS) -I$(updir) $<
d157 2
a158 2
	@@echo $(CXX) $c -o $(@@D)/$(basename $@@)$o $(MINGW_CXXFLAGS) ... $^;\
	${CXX} $c -o $(@@D)/$(basename $@@)$o $(MINGW_CXXFLAGS) -I$(updir) $<
@


1.50
log
@* Makefile.in: More fixups to adjust for the fact that mingw_getopt.o is no
longer built.
@
text
@d69 1
a69 1
MINGW_LDLIBS:=$(ALL_LDLIBS) $(MINGW_LIB)
d73 1
d139 1
a139 1
	${filter-out -I$(newlib_source)/%,$(COMPILE_CXX)} $c -o $(@@D)/$(basename $@@)$o $(MINGW_CXXFLAGS) $<
d141 2
a142 2
	@@echo $(CXX) $c -o $(@@D)/$(basename $@@)$o $(MINGW_CXXFLAGS) ... $^;\
	${filter-out -I$(newlib_source)/%,$(COMPILE_CXX)} $c -o $(@@D)/$(basename $@@)$o $(MINGW_CXXFLAGS) $<
d147 1
a147 1
	${filter-out -I$(newlib_source)/%,$(COMPILE_CXX)} $(zconf_h) $(zlib_h) $c -o $(@@D)/$(basename $@@)$o $(MINGW_CXXFLAGS) $<
d149 2
a150 2
	@@echo $(CXX) $c -o $(@@D)/$(basename $@@)$o $(MINGW_CXXFLAGS) ... $^;\
	${filter-out -I$(newlib_source)/%,$(COMPILE_CXX)} $(zconf_h) $(zlib_h) $c -o $(@@D)/$(basename $@@)$o $(MINGW_CXXFLAGS) $<
d163 1
a163 1
	${filter-out -I$(newlib_source)/%,$(COMPILE_CXX)} $c -o $(@@D)/$(basename $@@)$o $(MINGW_CXXFLAGS) -I$(updir) $<
d165 2
a166 2
	@@echo $(CXX) $c -o $(@@D)/$(basename $@@)$o $(MINGW_CXXFLAGS) ... $^;\
	${filter-out -I$(newlib_source)/%,$(COMPILE_CXX)} $c -o $(@@D)/$(basename $@@)$o $(MINGW_CXXFLAGS) -I$(updir) $<
@


1.49
log
@* Makefile.in: Remove references to getopt since it is now part of mingwex.
@
text
@d95 1
a95 1
	$(CXX) $(MINGW_CXXFLAGS) -o $@@ ${wordlist 1,3,$^} -B$(mingw_build)/ $(MINGW_LDFLAGS)
d98 1
a98 1
	$(CXX) $(MINGW_CXXFLAGS) -o $@@ ${wordlist 1,3,$^} -B$(mingw_build)/ $(MINGW_LDFLAGS)
d106 1
a106 1
	$(CXX) $(MINGW_CXXFLAGS) -o $@@ ${wordlist 1,4,$^} -B$(mingw_build)/ $(MINGW_LDFLAGS) $(libz)
@


1.48
log
@* Makefile.in (zlib_h): Rename libz.h -> zlib.h.
@
text
@d93 1
a93 1
strace.exe: strace.o path.o mingw_getopt.o $(MINGW_DEP_LDLIBS)
d101 1
a101 1
cygcheck.exe: cygcheck.o mingw_getopt.o path.o dump_setup.o $(MINGW_DEP_LDLIBS)
d108 2
a109 2
	@@echo $(CXX) -o $@@ ${wordlist 1,2,$^} ${filter-out -B%, $(MINGW_CXXFLAGS) $(MINGW_LDFLAGS)} $(libz);\
	$(CXX) $(MINGW_CXXFLAGS) -o $@@ ${wordlist 1,4,$^} -B$(mingw_build)/ $(MINGW_LDFLAGS) $(libz)
a133 8
endif

mingw_getopt.o: $(cygwin_source)/lib/getopt.c
ifdef VERBOSE
	${filter-out -I$(newlib_source)/%,$(COMPILE_CC)} $c -o $(@@D)/$(basename $@@)$o $(MINGW_CFLAGS) $<
else
	@@echo $(CC) $c -o $(@@D)/$(basename $@@)$o $(MINGW_CFLAGS) ... $^;\
	${filter-out -I$(newlib_source)/%,$(COMPILE_CC)} $c -o $(@@D)/$(basename $@@)$o $(MINGW_CFLAGS) $<
@


1.47
log
@* Makefile.in: Detect existence of mingw zlib headers and libraries.  Build
cygcheck wihtout package checking if they are unavailable.
* dump_setup.cc: Generate dummy zlib macros when zlib is not available.
(open_package_list): Use zlib functions to uncompress package lists.  Return
gzFile rather than FILE *.
(check_package_files): Change fp to gzFile to accommodate zlib functions.  Use
gzgets to read from package file.  Use gzclose to close the handle.
(package_list): Ditto.
(package_find): Ditto.
@
text
@d44 1
a44 1
zlib_h:=-include ${patsubst %/lib/libz.a,%/include/libz.h,$(libz)}
@


1.46
log
@* Makefile.in: Oops.  Put the '...' in the right place.
@
text
@d43 9
d102 3
d106 1
a106 1
	$(CXX) $(MINGW_CXXFLAGS) -o $@@ ${wordlist 1,4,$^} -B$(mingw_build)/ $(MINGW_LDFLAGS)
d108 2
a109 2
	@@echo $(CXX) -o $@@ ${wordlist 1,2,$^} ${filter-out -B%, $(MINGW_CXXFLAGS) $(MINGW_LDFLAGS)};\
	$(CXX) $(MINGW_CXXFLAGS) -o $@@ ${wordlist 1,4,$^} -B$(mingw_build)/ $(MINGW_LDFLAGS)
d154 1
a154 1
	${filter-out -I$(newlib_source)/%,$(COMPILE_CXX)} $c -o $(@@D)/$(basename $@@)$o $(MINGW_CXXFLAGS) $<
d157 1
a157 1
	${filter-out -I$(newlib_source)/%,$(COMPILE_CXX)} $c -o $(@@D)/$(basename $@@)$o $(MINGW_CXXFLAGS) $<
@


1.45
log
@* Makefile.in: Display "..." when not-verbose.
* kill.cc (forcekill): Default to entered pid when pinfo fails.  Issue some
warnings when things don't work.
@
text
@d208 1
a208 1
	$(CXX) -o $@@ ${firstword $^} -B$(cygwin_build)/ ... $(ALL_LDFLAGS)
d210 1
a210 1
	@@echo $(CXX) -o $@@ ${firstword $^} ${filter-out -B%, $(ALL_LDFLAGS)};\
@


1.44
log
@preliminary checkin
@
text
@d208 1
a208 1
	$(CXX) -o $@@ ${firstword $^} -B$(cygwin_build)/ $(ALL_LDFLAGS)
@


1.43
log
@.
@
text
@d21 3
a23 3
INSTALL:=@@INSTALL@@
INSTALL_PROGRAM:=@@INSTALL_PROGRAM@@
INSTALL_DATA:=@@INSTALL_DATA@@
@


1.42
log
@* Makefile.in (strace.exe): Include mingw_getopt.o in link line.
* cygcheck.cc (print_version): Update copyright.
* strace.cc (print_version): Ditto.
(main): Allow cygwin paths for -o option.
(create_child): Allow cygwin path as argv[0].
* path.cc (path.cc): Allow UNC paths.
@
text
@d2 1
a2 1
# Copyright 1996, 1997, 1998, 1999, 2000, 2001 Red Hat, Inc.
@


1.41
log
@* Makefile.in (cygcheck.o): Fix so that actual mingw include files are used.
* cygcheck.cc (find_on_path): Translate from cygwin path when qualified path
name found.
(pretty_id): New function.  Dump output of id command.
(dump_sysinfo): Call pretty_id for CYGWIN=ntsec and CYGWIN=nontsec cases.
@
text
@d84 1
a84 1
strace.exe: strace.o mingw_getopt.o $(MINGW_DEP_LDLIBS)
d86 1
a86 1
	$(CXX) $(MINGW_CXXFLAGS) -o $@@ ${wordlist 1,2,$^} -B$(mingw_build)/ $(MINGW_LDFLAGS)
d89 1
a89 1
	$(CXX) $(MINGW_CXXFLAGS) -o $@@ ${wordlist 1,2,$^} -B$(mingw_build)/ $(MINGW_LDFLAGS)
@


1.40
log
@	* Makefile.in (ALL_LDFLAGS): Remove newlib/libm from tools paths.
	(MINGW_LDFLAGS): Remove in favor of definition from Makefile.common.
@
text
@d150 1
a150 1
	${filter-out -I$(newlib_source)/%,$(COMPILE_CXX)} $c -o $(@@D)/$(basename $@@)$o $(MINGW_CXXFLAGS) -I$(updir) $<
d153 1
a153 1
	${filter-out -I$(newlib_source)/%,$(COMPILE_CXX)} $c -o $(@@D)/$(basename $@@)$o $(MINGW_CXXFLAGS) -I$(updir) $<
@


1.39
log
@* configure.in: Check for libiconv.a.
* configure: Regenerate.
* Makefile.in: Add libiconv.a to libraries required for dumper.exe.
@
text
@d62 1
a62 3
ALL_LDFLAGS:=-B$(newlib_build)/libc/ -B$(newlib_build)/libm/ -B$(w32api_lib)/ \
	     $(LDFLAGS) $(ALL_LDLIBS)
MINGW_LDFLAGS:=$(ALL_LDFLAGS) $(MINGW_LIB)
@


1.38
log
@* Makefile.in: Use MINGW stuff from Makefile.common.
@
text
@d57 1
d59 1
a59 1
DUMPER_LIB:=${libbfd} ${libintl} -L$(bupdir1)/libiberty -liberty
@


1.37
log
@* Makefile.in (kill.exe): Add as a specific target.
* kill.cc (longopts): New.
(opts): Ditto.
(get_sig): Accept const char * parameter.  Return -1 on unknown signal.
(test_for_unknown_sig): New function.
(listsig): New function.
(main): Use getopt_long for option parsing.  Implement -l, and -s options.  Use
test_for_unknown_sig() to test for signal validity.
@
text
@a38 2
MINGW_INCLUDES:=$(MINGW_INCLUDES) $(w32api_include) -I$(updir)

a44 3
MINGW_CXXFLAGS:=${filter-out $(newlib_source)/%,$(CXXFLAGS)} -mno-cygwin $(MINGW_INCLUDES)
MINGW_CFLAGS:=-mno-cygwin $(MINGW_INCLUDES)

d151 1
a151 1
	${filter-out -I$(newlib_source)/%,$(COMPILE_CXX)} $c -o $(@@D)/$(basename $@@)$o $(MINGW_CXXFLAGS) $<
d154 1
a154 1
	${filter-out -I$(newlib_source)/%,$(COMPILE_CXX)} $c -o $(@@D)/$(basename $@@)$o $(MINGW_CXXFLAGS) $<
d159 1
a159 1
	${filter-out -I$(newlib_source)/%,$(COMPILE_CXX)} $c -o $(@@D)/$(basename $@@)$o $(MINGW_CXXFLAGS) $<
d162 1
a162 1
	${filter-out -I$(newlib_source)/%,$(COMPILE_CXX)} $c -o $(@@D)/$(basename $@@)$o $(MINGW_CXXFLAGS) $<
@


1.36
log
@* ssp.c (help_desk): Fix compiler warning.  Christopher Faylor <cgf@@redhat.com>
Change appropriate globals to statics throughout.
* cygcheck.cc (usage): Simplify usage output.  Generalize to allow use for
help.
(longopts): Add version option.
(opts): Add 'V" version option.
(print_version): New function.
(main): Accommodate new version option.  Accommodate usage parameter changes.
Use usage to output help message.
* Makefile.in (CXXFLAGS): Add override so that HAVE_DECL_GETOPT is defined.
(libbfd): Use -B rather than -L so that bfd from build directory is correctly
found.
(libintl): Ditto.
@
text
@a113 1

d168 8
@


1.35
log
@* Makefile.in (MINGW_INCLUDES): Change cygwin include.
* strace.cc: Use specific cygwin includes, as required.
(load_cygwin): New function.  Loads cygwin DLL, if necessary.
(attach_process): Attaches strace to a running process.
(dostrace): Accept pid argument.  Attach to pid if supplied.
(usage): Describe -p option.  Correct system description.
(longopts): Alphabetize.
(opts): Ditto.
(main): Ditto.  Handle -p option.
* Makefile.in (CXXFLAGS): Ensure that important settings are preserved even
when overriden by command line.
@
text
@d35 1
a35 1
CXXFLAGS+=-fno-exceptions -fno-rtti -DHAVE_DECL_GETOPT=0
d41 2
a42 2
libbfd:=${shell $(CC) -L$(bupdir2)/bfd --print-file-name=libbfd.a}
libintl:=${shell $(CC) -L$(bupdir2)/intl --print-file-name=libintl.a}
@


1.34
log
@* Makefile.in (CXXFLAGS): Ensure that important settings are preserved even
when overriden by command line.
@
text
@d39 1
a39 1
MINGW_INCLUDES:=$(MINGW_INCLUDES) $(cygwin_include) $(w32api_include)
@


1.33
log
@* Makefile.in: Build intermediate cygcheck.o to force use of MINGW_CXXFLAGS.
* cygcheck.cc (cygwin_info): Intitialize variable to quiet g++ warning.
(dump_sysinfo): Make variables unsigned to quiet g++ warnings.
* strace.cc (version_string): Rename from SCCSid.
(add_child): Remove unused variable.
(version): Use version_string.  Avoid use of fprintf.
@
text
@d34 2
a35 1
CXXFLAGS:=@@CXXFLAGS@@ -fno-exceptions -fno-rtti -DHAVE_DECL_GETOPT=0
@


1.32
log
@* Makefile.in: Use CXX instead of CC to compile C++ sources.
@
text
@d89 1
a89 1
strace.exe: strace.cc mingw_getopt.o $(MINGW_DEP_LDLIBS)
d97 1
a97 1
cygcheck.exe: cygcheck.cc mingw_getopt.o path.o dump_setup.o $(MINGW_DEP_LDLIBS)
d147 16
@


1.31
log
@* Makefile.in: Add define to CXXFLAGS.
@
text
@d140 1
a140 1
	${filter-out -I$(newlib_source)/%,$(COMPILE_CC)} $c -o $(@@D)/$(basename $@@)$o $(MINGW_CFLAGS) $<
d142 2
a143 2
	@@echo $(CC) $c -o $(@@D)/$(basename $@@)$o $(MINGW_CFLAGS) ... $^;\
	${filter-out -I$(newlib_source)/%,$(COMPILE_CC)} $c -o $(@@D)/$(basename $@@)$o $(MINGW_CFLAGS) $<
d148 1
a148 1
	${filter-out -I$(newlib_source)/%,$(COMPILE_CC)} $c -o $(@@D)/$(basename $@@)$o $(MINGW_CFLAGS) $<
d150 2
a151 2
	@@echo $(CC) $c -o $(@@D)/$(basename $@@)$o $(MINGW_CFLAGS) ... $^;\
	${filter-out -I$(newlib_source)/%,$(COMPILE_CC)} $c -o $(@@D)/$(basename $@@)$o $(MINGW_CFLAGS) $<
@


1.30
log
@* dump_setup.cc: New file.
* Makefile.in: Add info for dump_setup.o.
* cygcheck.cc (main): Recognize '-c' option for checking setup installed base.
* path.cc (cygpath): Read mount table if not loaded.
@
text
@d2 1
a2 1
# Copyright 1996, 1997, 1998, 1999, 2000 Cygnus Solutions.
d34 1
a34 1
CXXFLAGS:=@@CXXFLAGS@@ -fno-exceptions -fno-rtti
@


1.29
log
@* Makefile.in (cygcheck.exe): Compile as -mno-cygwin executable.
* path.cc: New file.
* cygcheck.cc (init_paths): Use MS-DOS path syntax.
(cygwin_info): Properly display cygwin version numbers.  Prettify some output.
(dump_sysinfo): Calculate max names of posix and ms-dos paths for prettier
output.
@
text
@d97 1
a97 1
cygcheck.exe: cygcheck.cc mingw_getopt.o path.o $(MINGW_DEP_LDLIBS)
d99 1
a99 1
	$(CXX) $(MINGW_CXXFLAGS) -o $@@ ${wordlist 1,3,$^} -B$(mingw_build)/ $(MINGW_LDFLAGS)
d102 1
a102 1
	$(CXX) $(MINGW_CXXFLAGS) -o $@@ ${wordlist 1,3,$^} -B$(mingw_build)/ $(MINGW_LDFLAGS)
d139 8
@


1.28
log
@* Makefile.in: Remove EXEEXT consideration.  We always need EXEEXT.
@
text
@d97 8
d131 8
@


1.27
log
@* Makefile.in: Only build testsuite directory on first 'make check'.
* configure.in: Remove testsuite from SUBDIRS.
* configure: Regenerate.
@
text
@d70 1
a70 1
PROGS:=	cygcheck.exe cygpath.exe cygme.exe getfacl.exe kill.exe mkgroup.exe \
@


1.26
log
@* Makefile.in: Allow stdinc searching for dumper.
@
text
@d70 3
a72 4
PROGS:=mount$(EXEEXT) umount$(EXEEXT) ps$(EXEEXT) kill$(EXEEXT) \
       mkpasswd$(EXEEXT) mkgroup$(EXEEXT) cygpath$(EXEEXT) cygcheck$(EXEEXT) \
       passwd$(EXEEXT) getfacl$(EXEEXT) setfacl$(EXEEXT) strace$(EXEEXT) \
       regtool$(EXEEXT) ssp$(EXEEXT)
@


1.25
log
@* Makefile.in (MINGW_INCLUDES): Accomodate changes in Makefile.common.
@
text
@d100 1
a100 1
	$(COMPILE_CXX) $c -o $@@ $(DUMPER_INCLUDES) ${firstword $^}
d103 1
a103 1
	$(COMPILE_CXX) $c -o $(@@D)/$(basename $@@)$o $(DUMPER_INCLUDES) $<
d109 1
a109 1
	$(COMPILE_CXX) $c -o $@@ $(DUMPER_INCLUDES) ${firstword $^}
d112 1
a112 1
	$(COMPILE_CXX) $c -o $(@@D)/$(basename $@@)$o $(DUMPER_INCLUDES) $<
d117 1
a117 1
	$(COMPILE_CXX) $c -o $@@ $(DUMPER_INCLUDES) ${firstword $^}
d120 1
a120 1
	$(COMPILE_CXX) $c -o $(@@D)/$(basename $@@)$o $(DUMPER_INCLUDES) $<
@


1.24
log
@* Makefile.in (mingw_getopt.o): Ensure that newlib include directories are not
searched.
@
text
@d38 1
a38 1
MINGW_INCLUDES:=-I$(mingw_source)/include -I$(cygwin_source)/include -I$(w32api_include)
@


1.23
log
@* Makefile.in (MINGW_INCLUDES): Still need cygwin/include directory.
@
text
@d125 1
a125 1
	$(COMPILE_CC) $c -o $(@@D)/$(basename $@@)$o $(MINGW_CFLAGS) $<
@


1.22
log
@* Makefile.in: Filter newlib includes from mingw compilation.
@
text
@d38 1
a38 1
MINGW_INCLUDES:=-I$(mingw_source)/include -I$(w32api_include)
@


1.21
log
@* Makefile.in (dumper): Change logic for libbfd and libintl so that they will
be found either in the build tree or the installed directory.
* mkpasswd.c (enum_users): Add a comment as a password for NT.
@
text
@d38 1
a38 1
MINGW_INCLUDES:=-I$(mingw_source)/include -I$(cygwin_source)/include -I$(w32api_include)
d46 1
a46 1
MINGW_CXXFLAGS:=$(CXXFLAGS) -mno-cygwin $(MINGW_INCLUDES)
d128 1
a128 1
	$(COMPILE_CC) $c -o $(@@D)/$(basename $@@)$o $(MINGW_CFLAGS) $<
@


1.20
log
@* Makefile.in: Compile/link dumper.exe with c++.
@
text
@d40 3
a42 3
libbfd:=$(bupdir2)/bfd/libbfd.a
libintl:=$(bupdir2)/intl/libintl.a
build_dumper:=${shell test -r $(libbfd) -a -r $(libintl) -a -d $(updir1)/include && echo 1}
d62 1
a62 1
DUMPER_LIB:=-L$(bupdir2)/bfd -lbfd -L$(bupdir1)/libiberty -liberty -L$(bupdir2)/intl -lintl
@


1.19
log
@* Makefile.in: Use CXX to build the DLL.
* configure.in: Find correct c++ compiler.
* configure: Regenerate.
@
text
@d34 1
a34 1
CXXFLAGS:=@@CXXFLAGS@@ -fno-exceptions -nostdinc++ -fno-rtti
d100 1
a100 1
	$(COMPILE_CC) $c -o $@@ $(DUMPER_INCLUDES) ${firstword $^}
d102 2
a103 2
	@@echo $(CC) $c $(CFLAGS) $(DUMPER_INCLUDES) ... $(basename $@@).cc;\
	$(COMPILE_CC) $c -o $(@@D)/$(basename $@@)$o $(DUMPER_INCLUDES) $<
d109 1
a109 1
	$(COMPILE_CC) $c -o $@@ $(DUMPER_INCLUDES) ${firstword $^}
d111 2
a112 2
	@@echo $(CC) $c $(CFLAGS) $(DUMPER_INCLUDES) ... $(basename $@@).cc;\
	$(COMPILE_CC) $c -o $(@@D)/$(basename $@@)$o $(DUMPER_INCLUDES) $<
d117 1
a117 1
	$(COMPILE_CC) $c -o $@@ $(DUMPER_INCLUDES) ${firstword $^}
d119 2
a120 2
	@@echo $(CC) $c $(CFLAGS) $(DUMPER_INCLUDES) ... $(basename $@@).cc;\
	$(COMPILE_CC) $c -o $(@@D)/$(basename $@@)$o $(DUMPER_INCLUDES) $<
@


1.18
log
@* Makefile.in: Accomodate newer gcc's which require linking of c++ programs
with g++.  Fixup output for some compilations.
* cygcheck.cc: Respond to compiler warnings.
* dumper.cc (main): Ditto.
* parse_pe.cc (exclusion::sort_and_check): Ditto.
* setfacl.cc (getaclentry): Ditto.
@
text
@d30 1
a30 1
CXX:=${subst gcc,g++,$(CC)}
@


1.17
log
@Cleanup formatting on some files.  Remove excessive whitespace.
@
text
@d30 2
d47 1
a47 3
MINGW_CFLAGS:=$(CFLAGS) -mno-cygwin $(MINGW_INCLUDES)

DUMPER_CFLAGS:=$(CFLAGS) $(INCLUDES) $(DUMPER_INCLUDES)
d92 1
a92 1
	$(CC) $(MINGW_CXXFLAGS) -o $@@ ${wordlist 1,2,$^} -B$(mingw_build)/ $(MINGW_LDFLAGS)
d94 2
a95 2
	@@echo $(CC) -o $@@ ${wordlist 1,2,$^} ${filter-out -B%, $(MINGW_CXXFLAGS) $(MINGW_LDFLAGS)};\
	$(CC) $(MINGW_CXXFLAGS) -o $@@ ${wordlist 1,2,$^} -B$(mingw_build)/ $(MINGW_LDFLAGS)
d99 7
a105 1
	$(CC) -c -o $@@ $(DUMPER_CFLAGS) ${firstword $^}
d108 6
a113 1
	$(CC) -c -o $@@ $(DUMPER_CFLAGS) $^
d116 6
a121 1
	$(CC) -c -o $@@ $(DUMPER_CFLAGS) ${firstword $^}
d124 6
a129 1
	$(CC) -c -o $@@ $(MINGW_CFLAGS) $^
d159 1
a159 1
	$(CC) -o $@@ ${wordlist 1,3,$^} -B$(cygwin_build)/ $(DUMPER_LDFLAGS)
d161 2
a162 2
	@@echo $(CC) -o $@@ ${wordlist 1,3,$^} ${filter-out -B%, $(DUMPER_LDFLAGS)};\
	$(CC) -o $@@ ${wordlist 1,3,$^} -B$(cygwin_build)/ $(DUMPER_LDFLAGS)
d167 1
a167 1
	$(CC) -o $@@ ${firstword $^} -B$(cygwin_build)/ $(ALL_LDFLAGS)
d169 2
a170 2
	@@echo $(CC) -o $@@ ${firstword $^} ${filter-out -B%, $(ALL_LDFLAGS)};\
	$(CC) -o $@@ ${firstword $^} -B$(cygwin_build)/ $(ALL_LDFLAGS)
@


1.16
log
@* ssp.c: new
* ssp.txt: new
* Makefile.in: build ssp.exe
@
text
@d68 1
a68 1
DUMPER_LDFLAGS:=$(ALL_LDFLAGS) $(DUMPER_LIB) 
@


1.15
log
@        * cygcheck.cc (keyeprint): New function.
        (check_keys): New function. Perform checking keycodes.
        (main): Add option `-k' for invoking check_keys.
        Change option processing to use long options and getopt_long.
        * cygkeycheck.cc: Removed. Functionality moved to `cygcheck.cc'.
        * Makefile.in: Remove cygkeycheck from the dependencies.
@
text
@d73 1
a73 1
       regtool$(EXEEXT)
@


1.14
log
@        * cygkeycheck.cc: New file. Utility to retrieve keycodes.
        * Makefile.in: Add cygkeycheck to the dependencies.
@
text
@d73 1
a73 1
       regtool$(EXEEXT) cygkeycheck$(EXEEXT)
@


1.13
log
@* Makefile.in: Refine dumper.exe message.
@
text
@d73 1
a73 1
       regtool$(EXEEXT)
@


1.12
log
@* kill.c (main): Avoid skipping next argument when a signal number is
specified.
* Makefile.in: Always clean dumper.exe.
@
text
@d130 5
a134 4
	@@echo '*** Not building dumper.exe since some required libraries or headers'
	@@echo '*** are missing (libbfd.a, libintl.a, and include/).'
	@@echo '*** Check out and build these libraries from sources.redhat.com if you'
	@@echo '*** need dumper.exe.  Otherwise, you can safely ignore this warning.'
@


1.11
log
@* Makefile.in: Only build dumper.exe when all of its library and include
dependencies are available.
@
text
@d75 1
d80 1
d111 1
a111 1
	rm -f *.o $(PROGS)
@


1.10
log
@* Makefile.in: Make failure to build dumper.exe a non-error.
@
text
@d38 4
d62 1
a62 1
DUMPER_LIB:=-L$(bupdir2)/bfd -lbfd -L$(bupdir2)/libiberty -liberty -L$(bupdir2)/intl -lintl
d73 7
a79 1
       regtool$(EXEEXT) dumper$(EXEEXT)
d84 1
a84 1
.PHONY: all install clean realclean
d97 1
a97 1
	-$(CC) -c -o $@@ $(DUMPER_CFLAGS) ${firstword $^}
d100 1
a100 1
	-$(CC) -c -o $@@ $(DUMPER_CFLAGS) $^
d103 1
a103 1
	-$(CC) -c -o $@@ $(DUMPER_CFLAGS) ${firstword $^}
d127 6
d135 1
a135 1
	-$(CC) -o $@@ ${wordlist 1,3,$^} -B$(cygwin_build)/ $(DUMPER_LDFLAGS)
d137 1
a137 1
	-@@echo $(CC) -o $@@ ${wordlist 1,3,$^} ${filter-out -B%, $(DUMPER_LDFLAGS)};\
@


1.9
log
@* Makefile.in: Add dumper.exe target and associated mechanisms for building it.
* dumper.cc: New file.
* dumper.h: New file.
* module_info.cc: New file.
* parse_pe.cc: New file.
@
text
@d119 1
a119 1
	$(CC) -o $@@ ${wordlist 1,3,$^} -B$(cygwin_build)/ $(DUMPER_LDFLAGS)
d121 1
a121 1
	@@echo $(CC) -o $@@ ${wordlist 1,3,$^} ${filter-out -B%, $(DUMPER_LDFLAGS)};\
@


1.8
log
@* Makefile.in: Find getopt.c in cygwin/lib subdirectory.
@
text
@d38 2
d43 2
d58 1
d64 1
d69 1
a69 1
       regtool$(EXEEXT)
d86 9
d116 8
@


1.7
log
@* Makefile.in: Eliminate WINSUP_DEPS.
* cygpath.cc: Reorganize includes to accomodate sys/cygwin.h changes.
* mkgroup.c: Ditto.
* mkpasswd.c: Ditto.
* mount.cc: Ditto.  Eliminate use of cygwin source specific includes.
* ps.cc: Ditto.
* cygwin.cc: Eliminate obsolete file.
@
text
@d80 1
a80 1
mingw_getopt.o: $(cygwin_source)/getopt.c
@


1.6
log
@update copyright.
@
text
@a64 2
WINSUP_DEPS:=$(cygwin_source)/winsup.h

@


1.5
log
@Patch suggested by Mumit Khan <khan@@xraylith.wisc.edu>:
* strace.cc (_impure_ptr): New global variable to make strace build under
Cygwin gcc.
@
text
@d2 1
a2 1
# Copyright 1996, 1997, 1998 Cygnus Solutions.
@


1.4
log
@* Makefile.in: Make CXXFLAGS consistent with cygwin.
@
text
@d36 1
a36 1
MINGW_INCLUDES:=-I$(updir)/mingw/include
d78 1
a78 1
	@@echo $(CC) -mno-cygwin -o $@@ ${wordlist 1,2,$^} ${filter-out -B%, $(MINGW_CXXFLAGS) $(MINGW_LDFLAGS)};\
@


1.3
log
@* Makefile.in: Use MINGW_CXXFLAGS when compiling strace.
@
text
@d32 1
a32 1
CXXFLAGS:=@@CXXFLAGS@@
d38 2
a39 2
MINGW_CXXFLAGS:=$(CXXFLAGS) -mno-cygwin $(CXXFLAGS) $(MINGW_INCLUDES)
MINGW_CFLAGS:=$(CFLAGS) -mno-cygwin $(CFLAGS) $(MINGW_INCLUDES)
d55 1
d74 1
a74 1
strace.exe: strace.cc mingw_getopt.o $(MINGW_LDLIBS)
@


1.2
log
@* strace.cc (handle_output_debug_string): Parse strace output to allow various
types of time output.
@
text
@d75 1
a75 1
	$(CC) $(MINGW_CFLAGS) -o $@@ ${wordlist 1,2,$^} -B$(mingw_build)/ $(MINGW_LDFLAGS)
d77 2
a78 2
	@@echo $(CC) -mno-cygwin -o $@@ ${wordlist 1,2,$^} ${filter-out -B%, $(MINGW_LDFLAGS)};\
	$(CC) $(MINGW_CFLAGS) -o $@@ ${wordlist 1,2,$^} -B$(mingw_build)/ $(MINGW_LDFLAGS)
@


1.1
log
@Initial revision
@
text
@d38 2
a39 2
MINGW_CXXFLAGS:=-mno-cygwin $(CXXFLAGS) $(MINGW_INCLUDES)
MINGW_CFLAGS:=-mno-cygwin $(CFLAGS) $(MINGW_INCLUDES)
@


1.1.1.1
log
@import winsup-2000-02-17 snapshot
@
text
@@
