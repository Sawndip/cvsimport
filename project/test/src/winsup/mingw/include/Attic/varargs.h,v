head	1.5;
access;
symbols
	cygwin-1_7_17-release:1.4
	cygwin-64bit-branch:1.4.0.22
	cygwin-1_7_16-release:1.4
	cygwin-1_7_15-release:1.4
	cygwin-1_7_14_2-release:1.4
	cygwin-1_7_14-release:1.4
	cygwin-1_7_12-release:1.4
	cygwin-1_7_11-release:1.4
	cygwin-1_7_10-release:1.4
	cygwin-1_7_9-release:1.4
	cygwin-1_7_8-release:1.4
	cygwin-1_7_7-release:1.4
	cygwin-1_7_5-release:1.4
	cygwin-1_7_4-release:1.4
	cygwin-1_7_3-release:1.4
	cygwin-1_7_2-release:1.4
	cygwin-1_7_1-release:1.4
	cv-branch-2:1.4.0.20
	cr-0x5f1:1.4.0.18
	cv-branch:1.4.0.16
	cr-0x3b58:1.4.0.14
	cr-0x9e:1.4.0.12
	cr-0x9d:1.4.0.10
	corinna-01:1.4
	cr-0x9c:1.4.0.8
	cr-0x9b:1.4.0.4
	cr-0x99:1.4
	Z-emcb-cygwin_daemon:1.4.0.2
	w32api-2_2:1.4
	mingw-runtime-2_4:1.4
	mingw-std-ns-branch:1.4.0.6
	mingw-runtime-2_0:1.4
	mingwex:1.3.0.10
	cygnus_cvs_20020108_pre:1.3
	Z-cygwin_daemon_merge-new_HEAD:1.2
	Z-cygwin_daemon_merge_HEAD:1.2
	cygwin_daemon:1.2.0.4;
locks; strict;
comment	@ * @;
expand	@o@;


1.5
date	2012.11.07.16.52.17;	author cgf;	state dead;
branches;
next	1.4;

1.4
date	2002.06.13.10.20.43;	author dannysmith;	state Exp;
branches;
next	1.3;

1.3
date	2001.12.05.15.01.05;	author earnie;	state Exp;
branches
	1.3.10.1;
next	1.2;

1.2
date	2001.08.29.13.43.59;	author earnie;	state Exp;
branches;
next	1.1;

1.1
date	2000.02.17.19.38.31;	author cgf;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2000.02.17.19.38.31;	author cgf;	state Exp;
branches;
next	;

1.3.10.1
date	2002.04.17.05.37.05;	author dannysmith;	state Exp;
branches;
next	;


desc
@@


1.5
log
@* mingw: Delete obsolete directory.
* w32api: Ditto.
@
text
@/*
 * This is just an RC_INVOKED guard for the real varargs.h
 * fixincluded in gcc system dir.  One day we will delete this file.
 */
#ifndef RC_INVOKED
#include_next<varargs.h>
#endif
@


1.4
log
@	* include/_mingw.h: Increment version to 2.0.
	* Makefile.in: Ditto.
	Merge in mingwex branch.
@
text
@@


1.3
log
@Merge MinGW CVS differences
@
text
@d2 2
a3 34
 * varargs.h
 *
 * Old, non-ANSI facilities for stepping through a list of function
 * arguments of an unknown number and type.
 * TODO: Has not been tested. Essentially it copies the GCC version.
 *
 * NOTE: I believe GCC supplies a version of this header as well (in
 *       addition to stdarg.h and others). The GCC version is more
 *       complex, to deal with many alternate systems, but it is
 *       probably more trustworthy overall. It would probably be
 *       better to use the GCC version.
 *
 * NOTE: These are incompatible with the versions in stdarg.h and should
 *       NOT be mixed! All new code should use the ANSI compatible versions.
 *
 * This file is part of the Mingw32 package.
 *
 * Contributors:
 *  Created by Colin Peters <colin@@bird.fu.is.saga-u.ac.jp>
 *
 *  THIS SOFTWARE IS NOT COPYRIGHTED
 *
 *  This source code is offered for use in the public domain. You may
 *  use, modify or distribute it freely.
 *
 *  This code is distributed in the hope that it will be useful but
 *  WITHOUT ANY WARRANTY. ALL WARRANTIES, EXPRESS OR IMPLIED ARE HEREBY
 *  DISCLAIMED. This includes but is not limited to warranties of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
 *
 * $Revision: 1.4 $
 * $Author: cgf $
 * $Date: 2000/02/05 04:04:59 $
 *
a4 16

#ifndef	__STRICT_ANSI__

#ifndef _VARARGS_H_
#define _VARARGS_H_

/* All the headers include this file. */
#include <_mingw.h>

/* 
 * I was told that Win NT likes this.
 */
#ifndef _VA_LIST_DEFINED
#define _VA_LIST_DEFINED
#endif

d6 1
a6 8

#ifndef	_VA_LIST
#define _VA_LIST
#if defined __GNUC__ && __GNUC__ >= 3
typedef __builtin_va_list va_list;
#else
typedef char* va_list;
#endif
a7 40

/*
 * Amount of space required in an argument list (ie. the stack) for an
 * argument of type t.
 */
#define __va_argsiz(t)	\
	(((sizeof(t) + sizeof(int) - 1) / sizeof(int)) * sizeof(int))

#define	va_alist	__builtin_va_alist

/*
 * Used in old style argument lists IIRC. The ellipsis forces the compiler
 * to realize this is a vararg function.
 */
#define va_dcl		int __builtin_va_alist; ...

#define va_start(ap)	\
	((ap) = ((va_list) &__builtin_va_alist))
#define va_end(ap)	((void)0)


/*
 * Increment ap to the next argument in the list while returing a
 * pointer to what ap pointed to first, which is of type t.
 *
 * We cast to void* and then to t* because this avoids a warning about
 * increasing the alignment requirement.
 */

#define va_arg(ap, t)					\
	 (((ap) = (ap) + __va_argsiz(t)),		\
	  *((t*) (void*) ((ap) - __va_argsiz(t))))


#endif	/* Not RC_INVOKED */

#endif	/* Not _VARARGS_H_ */

#endif	/* Not __STRICT_ANSI__ */

@


1.3.10.1
log
@	* Makefile.in (INCLUDES): Add "-iwithprefixbefore include" to
	ensure gcc include dir is searched despite -nostdinc.
	* profile/Makefile.in (INCLUDES): Likewise.
	* mingwex/Makefile.in (INCLUDES): Likewise.
	* include/stdarg.h: Replace with stub that just guards the
	real gcc system header with #ifndef RCINVOKED
	* include/varargs.h: Likewise.
	* include/stddef.h: Likewise.
	* include/stdio.h: Include stdarg.h after defining
	 __need___va_list.
	(__VALIST): Define as __gnuc_va_list if __GNUC__, else char*.
	Replace va_list with __VALIST throughout.
@
text
@d2 34
a35 2
 * This is just an RC_INVOKED guard for the real varargs.h
 * fixincluded in gcc system dir.  One day we will delete this file.
d37 16
d54 8
a61 1
#include_next<varargs.h>
d63 40
@


1.2
log
@
	* include/stdarg.h (va_list): Typedef as __builtin_va_list if
	__GNUC__ >= 3.
	* include/varargs.h (va_list): Ditto.
	* include/stdio.h (va_list): Ditto.
@
text
@d29 1
a29 1
 *  DISCLAMED. This includes but is not limited to warranties of
@


1.1
log
@Initial revision
@
text
@d55 5
a59 2
#ifndef _VA_LIST
#define	_VA_LIST
d61 1
@


1.1.1.1
log
@import winsup-2000-02-17 snapshot
@
text
@@
