head	1.5;
access;
symbols
	cr-0x9e:1.4.0.12
	cr-0x9d:1.4.0.10
	corinna-01:1.4
	cr-0x9c:1.4.0.8
	cr-0x9b:1.4.0.4
	cr-0x99:1.4
	Z-emcb-cygwin_daemon:1.4.0.2
	w32api-2_2:1.4
	mingw-runtime-2_4:1.4
	mingw-std-ns-branch:1.4.0.6
	mingw-runtime-2_0:1.4
	mingwex:1.3.0.10
	cygnus_cvs_20020108_pre:1.3
	Z-cygwin_daemon_merge-new_HEAD:1.2
	Z-cygwin_daemon_merge_HEAD:1.2
	cygwin_daemon:1.2.0.4;
locks; strict;
comment	@ * @;
expand	@o@;


1.5
date	2005.10.12.09.02.24;	author dannysmith;	state dead;
branches;
next	1.4;

1.4
date	2002.06.13.10.20.43;	author dannysmith;	state Exp;
branches
	1.4.6.1;
next	1.3;

1.3
date	2001.12.05.15.01.05;	author earnie;	state Exp;
branches
	1.3.10.1;
next	1.2;

1.2
date	2001.08.29.13.43.59;	author earnie;	state Exp;
branches;
next	1.1;

1.1
date	2000.02.17.19.38.31;	author cgf;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2000.02.17.19.38.31;	author cgf;	state Exp;
branches;
next	;

1.3.10.1
date	2002.04.17.05.37.05;	author dannysmith;	state Exp;
branches;
next	;

1.4.6.1
date	2002.09.27.09.32.20;	author dannysmith;	state Exp;
branches;
next	1.4.6.2;

1.4.6.2
date	2003.03.31.22.36.41;	author dannysmith;	state Exp;
branches;
next	;


desc
@@


1.5
log
@	* include/stddef.h: Remove.
	* include/stdarg.h: Remove.
@
text
@/*
 * This is just an RC_INVOKED guard for the real stdarg.h
 * fixincluded in gcc system dir. One day we will delete this file.
 */
#ifndef RC_INVOKED
#include_next<stdarg.h>
#endif
@


1.4
log
@	* include/_mingw.h: Increment version to 2.0.
	* Makefile.in: Ditto.
	Merge in mingwex branch.
@
text
@@


1.4.6.1
log
@	* include/stdio.h: Don't include stdarg.h.
	(__VA_LIST): Define as __builtin_va_list or char* instead.
	* include/stdarg.h: #include _mingw.h.
	In C++, #include_next<stdarg.g> in namespace __ginclude.
	Push va_list into std:: if whole file is needed, else
	push __gnuc_va_list into global.
@
text
@d1 3
a3 3
/* 
 * stdarg.h 
 * Forwarding header to get gcc's stdarg.h and keep std namespace clean
d5 1
a5 31

#ifndef RC_INVOKED 

#include <_mingw.h>

#ifdef __cplusplus

namespace __ginclude
{
  /* Include gcc's stdarg.h.  */
# include_next<stdarg.h>
}

/* If invocation was from the user program, push va_list into std. */  
#if defined  (_STDARG_H)

__BEGIN_CSTD_NAMESPACE
  using __ginclude::va_list;
__END_CSTD_NAMESPACE

/* Otherwise inject __gnuc_va_list into global.  */

#else

using __ginclude::__gnuc_va_list;

#endif /* _STDARG_H */

#else /* __cplusplus */

/* Just include gcc's stdarg.h.  */
a6 1

a7 2

#endif /* RC_INVOKED */ 
@


1.4.6.2
log
@	* include/stdarg.h: Get rid of namespaces.
@
text
@d1 3
a3 3
/*
 * This is just an RC_INVOKED guard for the real stdarg.h
 * included in gcc system dir.  One day we will delete this file.
d7 29
d37 3
@


1.3
log
@Merge MinGW CVS differences
@
text
@d2 2
a3 41
 * stdarg.h
 *
 * Provides facilities for stepping through a list of function arguments of
 * an unknown number and type.
 *
 * NOTE: Gcc should provide stdarg.h, and I believe their version will work
 *       with crtdll. If necessary I think you can replace this with the GCC
 *       stdarg.h.
 *
 * Note that the type used in va_arg is supposed to match the actual type
 * *after default promotions*. Thus, va_arg (..., short) is not valid.
 *
 * This file is part of the Mingw32 package.
 *
 * Contributors:
 *  Created by Colin Peters <colin@@bird.fu.is.saga-u.ac.jp>
 *
 *  THIS SOFTWARE IS NOT COPYRIGHTED
 *
 *  This source code is offered for use in the public domain. You may
 *  use, modify or distribute it freely.
 *
 *  This code is distributed in the hope that it will be useful but
 *  WITHOUT ANY WARRANTY. ALL WARRANTIES, EXPRESS OR IMPLIED ARE HEREBY
 *  DISCLAIMED. This includes but is not limited to warranties of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
 *
 * $Revision: 1.4 $
 * $Author: dannysmith $
 * $Date: 2001/11/29 04:26:33 $
 *
 */

#ifndef _STDARG_H_
#define _STDARG_H_

/* All the headers include this file. */
#include <_mingw.h>

/*
 * Don't do any of this stuff for the resource compiler.
d6 1
a6 14

/* 
 * I was told that Win NT likes this.
 */
#ifndef _VA_LIST_DEFINED
#define _VA_LIST_DEFINED
#endif

#ifndef	_VA_LIST
#define _VA_LIST
#if defined __GNUC__ && __GNUC__ >= 3
typedef __builtin_va_list va_list;
#else
typedef char* va_list;
a7 53
#endif

/*
 * Amount of space required in an argument list (ie. the stack) for an
 * argument of type t.
 */
#define __va_argsiz(t)	\
	(((sizeof(t) + sizeof(int) - 1) / sizeof(int)) * sizeof(int))


/*
 * Start variable argument list processing by setting AP to point to the
 * argument after pN.
 */
#ifdef	__GNUC__
/*
 * In GNU the stack is not necessarily arranged very neatly in order to
 * pack shorts and such into a smaller argument list. Fortunately a
 * neatly arranged version is available through the use of __builtin_next_arg.
 */
#define va_start(ap, pN)	\
	((ap) = ((va_list) __builtin_next_arg(pN)))
#else
/*
 * For a simple minded compiler this should work (it works in GNU too for
 * vararg lists that don't follow shorts and such).
 */
#define va_start(ap, pN)	\
	((ap) = ((va_list) (&pN) + __va_argsiz(pN)))
#endif


/*
 * End processing of variable argument list. In this case we do nothing.
 */
#define va_end(ap)	((void)0)


/*
 * Increment ap to the next argument in the list while returing a
 * pointer to what ap pointed to first, which is of type t.
 *
 * We cast to void* and then to t* because this avoids a warning about
 * increasing the alignment requirement.
 */

#define va_arg(ap, t)					\
	 (((ap) = (ap) + __va_argsiz(t)),		\
	  *((t*) (void*) ((ap) - __va_argsiz(t))))

#endif /* Not RC_INVOKED */

#endif /* not _STDARG_H_ */
@


1.3.10.1
log
@	* Makefile.in (INCLUDES): Add "-iwithprefixbefore include" to
	ensure gcc include dir is searched despite -nostdinc.
	* profile/Makefile.in (INCLUDES): Likewise.
	* mingwex/Makefile.in (INCLUDES): Likewise.
	* include/stdarg.h: Replace with stub that just guards the
	real gcc system header with #ifndef RCINVOKED
	* include/varargs.h: Likewise.
	* include/stddef.h: Likewise.
	* include/stdio.h: Include stdarg.h after defining
	 __need___va_list.
	(__VALIST): Define as __gnuc_va_list if __GNUC__, else char*.
	Replace va_list with __VALIST throughout.
@
text
@d2 41
a42 2
 * This is just an RC_INVOKED guard for the real stdarg.h
 * fixincluded in gcc system dir. One day we will delete this file.
d45 14
a58 1
#include_next<stdarg.h>
d60 53
@


1.2
log
@
	* include/stdarg.h (va_list): Typedef as __builtin_va_list if
	__GNUC__ >= 3.
	* include/varargs.h (va_list): Ditto.
	* include/stdio.h (va_list): Ditto.
@
text
@d26 1
a26 1
 *  DISCLAMED. This includes but is not limited to warranties of
d29 3
a31 3
 * $Revision: 1.5 $
 * $Author: cgf $
 * $Date: 2000/02/05 04:04:57 $
@


1.1
log
@Initial revision
@
text
@d55 3
d60 1
a60 1

@


1.1.1.1
log
@import winsup-2000-02-17 snapshot
@
text
@@
