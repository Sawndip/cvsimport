head	1.47;
access;
symbols
	cygwin-1_7_17-release:1.46
	cygwin-64bit-branch:1.46.0.2
	cygwin-1_7_16-release:1.44
	cygwin-1_7_15-release:1.44
	cygwin-1_7_14_2-release:1.44
	cygwin-1_7_14-release:1.44
	cygwin-1_7_12-release:1.44
	cygwin-1_7_11-release:1.44
	cygwin-1_7_10-release:1.44
	cygwin-1_7_9-release:1.40
	cygwin-1_7_8-release:1.40
	cygwin-1_7_7-release:1.40
	cygwin-1_7_5-release:1.40
	cygwin-1_7_4-release:1.40
	cygwin-1_7_3-release:1.40
	cygwin-1_7_2-release:1.40
	cygwin-1_7_1-release:1.40
	cv-branch-2:1.37.0.2
	cr-0x5f1:1.26.0.6
	cv-branch:1.26.0.4
	cr-0x3b58:1.26.0.2
	cr-0x9e:1.22.0.4
	cr-0x9d:1.22.0.2
	corinna-01:1.22
	cr-0x9c:1.20.0.6
	cr-0x9b:1.20.0.4
	cr-0x99:1.20
	Z-emcb-cygwin_daemon:1.20.0.2
	w32api-2_2:1.16
	mingw-runtime-2_4:1.16
	mingw-std-ns-branch:1.10.0.6
	mingw-runtime-2_0:1.9
	mingwex:1.8.0.4
	cygnus_cvs_20020108_pre:1.7
	Z-cygwin_daemon_merge-new_HEAD:1.5
	Z-cygwin_daemon_merge_HEAD:1.5
	cygwin_daemon:1.5.0.4;
locks; strict;
comment	@ * @;
expand	@o@;


1.47
date	2012.11.07.16.52.17;	author cgf;	state dead;
branches;
next	1.46;

1.46
date	2012.08.03.16.06.45;	author earnie;	state Exp;
branches;
next	1.45;

1.45
date	2012.08.03.15.51.29;	author earnie;	state Exp;
branches;
next	1.44;

1.44
date	2011.05.24.22.43.29;	author ironhead;	state Exp;
branches;
next	1.43;

1.43
date	2011.05.23.03.43.30;	author ironhead;	state Exp;
branches;
next	1.42;

1.42
date	2011.05.23.03.30.01;	author ironhead;	state Exp;
branches;
next	1.41;

1.41
date	2011.05.23.01.01.18;	author ironhead;	state Exp;
branches;
next	1.40;

1.40
date	2009.08.08.13.26.11;	author ironhead;	state Exp;
branches;
next	1.39;

1.39
date	2009.07.18.15.19.03;	author ironhead;	state Exp;
branches;
next	1.38;

1.38
date	2009.06.17.22.01.36;	author ironhead;	state Exp;
branches;
next	1.37;

1.37
date	2008.10.11.21.47.56;	author keithmarshall;	state Exp;
branches;
next	1.36;

1.36
date	2008.09.25.21.53.17;	author keithmarshall;	state Exp;
branches;
next	1.35;

1.35
date	2008.05.15.23.27.29;	author ironhead;	state Exp;
branches;
next	1.34;

1.34
date	2008.05.07.02.35.16;	author ironhead;	state Exp;
branches;
next	1.33;

1.33
date	2008.05.03.02.13.48;	author ironhead;	state Exp;
branches;
next	1.32;

1.32
date	2007.07.12.09.38.17;	author dannysmith;	state Exp;
branches;
next	1.31;

1.31
date	2007.06.23.07.34.16;	author dannysmith;	state Exp;
branches;
next	1.30;

1.30
date	2007.06.13.07.43.58;	author dannysmith;	state Exp;
branches;
next	1.29;

1.29
date	2007.01.26.08.20.54;	author dannysmith;	state Exp;
branches;
next	1.28;

1.28
date	2006.09.10.21.15.38;	author dannysmith;	state Exp;
branches;
next	1.27;

1.27
date	2006.08.31.23.48.56;	author dannysmith;	state Exp;
branches;
next	1.26;

1.26
date	2005.09.19.09.48.08;	author dannysmith;	state Exp;
branches;
next	1.25;

1.25
date	2004.07.26.09.13.42;	author dannysmith;	state Exp;
branches;
next	1.24;

1.24
date	2004.07.25.11.23.43;	author dannysmith;	state Exp;
branches;
next	1.23;

1.23
date	2004.04.20.22.49.32;	author earnie;	state Exp;
branches;
next	1.22;

1.22
date	2003.09.29.09.16.23;	author dannysmith;	state Exp;
branches;
next	1.21;

1.21
date	2003.09.24.00.41.01;	author dannysmith;	state Exp;
branches;
next	1.20;

1.20
date	2003.07.03.07.50.53;	author dannysmith;	state Exp;
branches;
next	1.19;

1.19
date	2003.05.15.22.28.57;	author dannysmith;	state Exp;
branches;
next	1.18;

1.18
date	2003.03.11.03.00.50;	author dannysmith;	state Exp;
branches;
next	1.17;

1.17
date	2003.02.10.21.13.34;	author dannysmith;	state Exp;
branches;
next	1.16;

1.16
date	2003.02.08.14.30.29;	author earnie;	state Exp;
branches;
next	1.15;

1.15
date	2003.01.03.05.02.18;	author dannysmith;	state Exp;
branches;
next	1.14;

1.14
date	2002.11.26.00.11.06;	author dannysmith;	state Exp;
branches;
next	1.13;

1.13
date	2002.10.20.04.30.28;	author dannysmith;	state Exp;
branches;
next	1.12;

1.12
date	2002.10.03.00.49.20;	author dannysmith;	state Exp;
branches;
next	1.11;

1.11
date	2002.10.02.03.43.33;	author dannysmith;	state Exp;
branches;
next	1.10;

1.10
date	2002.06.18.04.13.18;	author dannysmith;	state Exp;
branches
	1.10.6.1;
next	1.9;

1.9
date	2002.06.13.10.20.43;	author dannysmith;	state Exp;
branches;
next	1.8;

1.8
date	2002.01.25.20.03.56;	author earnie;	state Exp;
branches
	1.8.4.1;
next	1.7;

1.7
date	2001.12.05.15.01.05;	author earnie;	state Exp;
branches;
next	1.6;

1.6
date	2001.11.01.19.51.48;	author earnie;	state Exp;
branches;
next	1.5;

1.5
date	2001.08.05.12.52.43;	author earnie;	state Exp;
branches;
next	1.4;

1.4
date	2001.01.28.16.40.19;	author earnie;	state Exp;
branches;
next	1.3;

1.3
date	2001.01.16.16.43.00;	author earnie;	state Exp;
branches;
next	1.2;

1.2
date	2000.11.21.02.50.03;	author earnie;	state Exp;
branches;
next	1.1;

1.1
date	2000.02.17.19.38.31;	author cgf;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2000.02.17.19.38.31;	author cgf;	state Exp;
branches;
next	;

1.8.4.1
date	2002.03.22.22.35.38;	author dannysmith;	state Exp;
branches;
next	1.8.4.2;

1.8.4.2
date	2002.04.04.09.24.40;	author dannysmith;	state Exp;
branches;
next	1.8.4.3;

1.8.4.3
date	2002.04.26.01.32.09;	author dannysmith;	state Exp;
branches;
next	;

1.10.6.1
date	2002.09.21.00.18.51;	author dannysmith;	state Exp;
branches;
next	1.10.6.2;

1.10.6.2
date	2002.10.02.04.38.37;	author dannysmith;	state Exp;
branches;
next	1.10.6.3;

1.10.6.3
date	2002.10.03.23.42.00;	author dannysmith;	state Exp;
branches;
next	1.10.6.4;

1.10.6.4
date	2002.10.11.03.13.32;	author dannysmith;	state Exp;
branches;
next	1.10.6.5;

1.10.6.5
date	2002.10.16.22.33.36;	author dannysmith;	state Exp;
branches;
next	1.10.6.6;

1.10.6.6
date	2002.11.19.08.47.47;	author dannysmith;	state Exp;
branches;
next	1.10.6.7;

1.10.6.7
date	2002.12.10.10.48.19;	author dannysmith;	state Exp;
branches;
next	1.10.6.8;

1.10.6.8
date	2003.01.26.22.37.50;	author dannysmith;	state Exp;
branches;
next	1.10.6.9;

1.10.6.9
date	2003.03.31.22.32.19;	author dannysmith;	state Exp;
branches;
next	1.10.6.10;

1.10.6.10
date	2003.04.07.01.22.47;	author dannysmith;	state Exp;
branches;
next	;


desc
@@


1.47
log
@* mingw: Delete obsolete directory.
* w32api: Ditto.
@
text
@/*
 * stdlib.h
 * This file has no copyright assigned and is placed in the Public Domain.
 * This file is a part of the mingw-runtime package.
 * No warranty is given; refer to the file DISCLAIMER within the package.
 *
 * Definitions for common types, variables, and functions.
 *
 */

#ifndef _STDLIB_H_
#define _STDLIB_H_

/* All the headers include this file. */
#include <_mingw.h>

#define __need_size_t
#define __need_wchar_t
#define __need_NULL
#ifndef RC_INVOKED
#include <stddef.h>
#endif /* RC_INVOKED */

/*
 * RAND_MAX is the maximum value that may be returned by rand.
 * The minimum is zero.
 */
#define	RAND_MAX	0x7FFF

/*
 * These values may be used as exit status codes.
 */
#define	EXIT_SUCCESS	0
#define	EXIT_FAILURE	1

/*
 * Definitions for path name functions.
 * NOTE: All of these values have simply been chosen to be conservatively high.
 *       Remember that with long file names we can no longer depend on
 *       extensions being short.
 */
#ifndef __STRICT_ANSI__

#ifndef MAX_PATH
#define	MAX_PATH	(260)
#endif

#define	_MAX_PATH	MAX_PATH
#define	_MAX_DRIVE	(3)
#define	_MAX_DIR	256
#define	_MAX_FNAME	256
#define	_MAX_EXT	256

#endif	/* Not __STRICT_ANSI__ */


#ifndef RC_INVOKED

#ifdef __cplusplus
extern "C" {
#endif

#if !defined (__STRICT_ANSI__)

/*
 * This seems like a convenient place to declare these variables, which
 * give programs using WinMain (or main for that matter) access to main-ish
 * argc and argv. environ is a pointer to a table of environment variables.
 * NOTE: Strings in _argv and environ are ANSI strings.
 */
extern int	_argc;
extern char**	_argv;

/* imports from runtime dll of the above variables */
#ifdef __MSVCRT__

extern int*  __cdecl __MINGW_NOTHROW   __p___argc(void);
extern char*** __cdecl __MINGW_NOTHROW  __p___argv(void);
extern wchar_t***  __cdecl __MINGW_NOTHROW __p___wargv(void);

#define __argc (*__p___argc())
#define __argv (*__p___argv())
#define __wargv (*__p___wargv())

#else /* !MSVCRT */

#ifndef __DECLSPEC_SUPPORTED

extern int*    _imp____argc_dll;
extern char***  _imp____argv_dll;
#define __argc (*_imp____argc_dll)
#define __argv (*_imp____argv_dll)

#else /* __DECLSPEC_SUPPORTED */

__MINGW_IMPORT int    __argc_dll;
__MINGW_IMPORT char**  __argv_dll;
#define __argc __argc_dll
#define __argv __argv_dll

#endif /* __DECLSPEC_SUPPORTED */

#endif /* __MSVCRT */
#endif /* __STRICT_ANSI__ */
/*
 * Also defined in ctype.h.
 */
#ifndef MB_CUR_MAX
#ifdef __DECLSPEC_SUPPORTED
# ifdef __MSVCRT__
#  define MB_CUR_MAX __mb_cur_max
   __MINGW_IMPORT int __mb_cur_max;
# else		/* not __MSVCRT */
#  define MB_CUR_MAX __mb_cur_max_dll
   __MINGW_IMPORT int __mb_cur_max_dll;
# endif		/* not __MSVCRT */

#else		/* ! __DECLSPEC_SUPPORTED */
# ifdef __MSVCRT__
   extern int* _imp____mb_cur_max;
#  define MB_CUR_MAX (*_imp____mb_cur_max)
# else		/* not __MSVCRT */
   extern int*  _imp____mb_cur_max_dll;
#  define MB_CUR_MAX (*_imp____mb_cur_max_dll)
# endif 	/* not __MSVCRT */
#endif  	/*  __DECLSPEC_SUPPORTED */
#endif  /* MB_CUR_MAX */

/* 
 * MS likes to declare errno in stdlib.h as well. 
 */

#ifdef _UWIN
#undef errno
extern int errno;
#else
 _CRTIMP int* __cdecl __MINGW_NOTHROW	_errno(void);
#define	errno		(*_errno())
#endif
 _CRTIMP int* __cdecl __MINGW_NOTHROW	__doserrno(void);
#define	_doserrno	(*__doserrno())

#if !defined (__STRICT_ANSI__)
/*
 * Use environ from the DLL, not as a global. 
 */

#ifdef __MSVCRT__
  extern _CRTIMP char *** __cdecl __MINGW_NOTHROW __p__environ(void);
  extern _CRTIMP wchar_t *** __cdecl __MINGW_NOTHROW  __p__wenviron(void);
# define _environ (*__p__environ())
# define _wenviron (*__p__wenviron())
#else /* ! __MSVCRT__ */
# ifndef __DECLSPEC_SUPPORTED
    extern char *** _imp___environ_dll;
#   define _environ (*_imp___environ_dll)
# else /* __DECLSPEC_SUPPORTED */
    __MINGW_IMPORT char ** _environ_dll;
#   define _environ _environ_dll
# endif /* __DECLSPEC_SUPPORTED */
#endif /* ! __MSVCRT__ */

#define environ _environ

#ifdef	__MSVCRT__
/* One of the MSVCRTxx libraries */

#ifndef __DECLSPEC_SUPPORTED
  extern int*	_imp___sys_nerr;
# define	sys_nerr	(*_imp___sys_nerr)
#else /* __DECLSPEC_SUPPORTED */
  __MINGW_IMPORT int	_sys_nerr;
# ifndef _UWIN
#   define	sys_nerr	_sys_nerr
# endif /* _UWIN */
#endif /* __DECLSPEC_SUPPORTED */

#else /* ! __MSVCRT__ */

/* CRTDLL run time library */

#ifndef __DECLSPEC_SUPPORTED
  extern int*	_imp___sys_nerr_dll;
# define sys_nerr	(*_imp___sys_nerr_dll)
#else /* __DECLSPEC_SUPPORTED */
  __MINGW_IMPORT int	_sys_nerr_dll;
# define sys_nerr	_sys_nerr_dll
#endif /* __DECLSPEC_SUPPORTED */

#endif /* ! __MSVCRT__ */

#ifndef __DECLSPEC_SUPPORTED
extern char***	_imp__sys_errlist;
#define	sys_errlist	(*_imp___sys_errlist)
#else /* __DECLSPEC_SUPPORTED */
__MINGW_IMPORT char*	_sys_errlist[];
#ifndef _UWIN
#define	sys_errlist	_sys_errlist
#endif /* _UWIN */
#endif /* __DECLSPEC_SUPPORTED */

/*
 * OS version and such constants.
 */

#ifdef	__MSVCRT__
/* msvcrtxx.dll */

extern _CRTIMP unsigned __cdecl __MINGW_NOTHROW int*	__p__osver(void);
extern _CRTIMP unsigned __cdecl __MINGW_NOTHROW int*	__p__winver(void);
extern _CRTIMP unsigned __cdecl __MINGW_NOTHROW int*	__p__winmajor(void);
extern _CRTIMP unsigned __cdecl __MINGW_NOTHROW int*	__p__winminor(void);

#ifndef __DECLSPEC_SUPPORTED
# define _osver		(*__p__osver())
# define _winver	(*__p__winver())
# define _winmajor	(*__p__winmajor())
# define _winminor	(*__p__winminor())
#else
__MINGW_IMPORT unsigned int _osver;
__MINGW_IMPORT unsigned int _winver;
__MINGW_IMPORT unsigned int _winmajor;
__MINGW_IMPORT unsigned int _winminor;
#endif /* __DECLSPEC_SUPPORTED */

#else
/* Not msvcrtxx.dll, thus crtdll.dll */

#ifndef __DECLSPEC_SUPPORTED

extern unsigned int*	_imp___osver_dll;
extern unsigned int*	_imp___winver_dll;
extern unsigned int*	_imp___winmajor_dll;
extern unsigned int*	_imp___winminor_dll;

#define _osver		(*_imp___osver_dll)
#define _winver		(*_imp___winver_dll)
#define _winmajor	(*_imp___winmajor_dll)
#define _winminor	(*_imp___winminor_dll)

#else /* __DECLSPEC_SUPPORTED */

__MINGW_IMPORT unsigned int	_osver_dll;
__MINGW_IMPORT unsigned int	_winver_dll;
__MINGW_IMPORT unsigned int	_winmajor_dll;
__MINGW_IMPORT unsigned int	_winminor_dll;

#define _osver		_osver_dll
#define _winver		_winver_dll
#define _winmajor	_winmajor_dll
#define _winminor	_winminor_dll

#endif /* __DECLSPEC_SUPPORTED */

#endif

#if defined  __MSVCRT__
/* although the _pgmptr is exported as DATA,
 * be safe and use the access function __p__pgmptr() to get it. */
_CRTIMP char** __cdecl __MINGW_NOTHROW __p__pgmptr(void);
#define _pgmptr     (*__p__pgmptr())
_CRTIMP wchar_t** __cdecl __MINGW_NOTHROW __p__wpgmptr(void);
#define _wpgmptr    (*__p__wpgmptr())
#else /* ! __MSVCRT__ */
# ifndef __DECLSPEC_SUPPORTED
  extern char** __imp__pgmptr_dll;
# define _pgmptr (*_imp___pgmptr_dll)
# else /* __DECLSPEC_SUPPORTED */
 __MINGW_IMPORT char* _pgmptr_dll;
# define _pgmptr _pgmptr_dll
# endif /* __DECLSPEC_SUPPORTED */
/* no wide version in CRTDLL */
#endif /* __MSVCRT__ */

/*
 * This variable determines the default file mode.
 * TODO: Which flags work?
 */
#if !defined (__DECLSPEC_SUPPORTED) || defined (__IN_MINGW_RUNTIME)

#ifdef __MSVCRT__
extern int* _imp___fmode;
#define	_fmode	(*_imp___fmode)
#else
/* CRTDLL */
extern int* _imp___fmode_dll;
#define	_fmode	(*_imp___fmode_dll)
#endif

#else /* __DECLSPEC_SUPPORTED */

#ifdef __MSVCRT__
__MINGW_IMPORT  int _fmode;
#else /* ! __MSVCRT__ */
__MINGW_IMPORT  int _fmode_dll;
#define	_fmode	_fmode_dll
#endif /* ! __MSVCRT__ */

#endif /* __DECLSPEC_SUPPORTED */

#endif /* Not __STRICT_ANSI__ */

_CRTIMP __int64 __cdecl _strtoi64(const char*, char **, int);
_CRTIMP __int64 __cdecl _strtoi64_l(const char *, char **, int, _locale_t);
_CRTIMP unsigned __int64 __cdecl _strtoui64(const char*, char **, int);
_CRTIMP unsigned __int64 __cdecl _strtoui64_l(const char *, char **, int, _locale_t);

_CRTIMP double __cdecl __MINGW_NOTHROW	atof	(const char*);
_CRTIMP int __cdecl __MINGW_NOTHROW	atoi	(const char*);
_CRTIMP long __cdecl __MINGW_NOTHROW 	atol	(const char*);
#if !defined (__STRICT_ANSI__)
_CRTIMP double __cdecl __MINGW_NOTHROW	_wtof (const wchar_t *);
_CRTIMP int __cdecl __MINGW_NOTHROW	_wtoi (const wchar_t *);
_CRTIMP long __cdecl __MINGW_NOTHROW _wtol (const wchar_t *);
#endif
#if !defined __NO_ISOCEXT  /*  in libmingwex.a */
double __cdecl __MINGW_NOTHROW __strtod (const char*, char**);
extern double __cdecl __MINGW_NOTHROW
strtod (const char* __restrict__ __nptr, char** __restrict__ __endptr);
float __cdecl __MINGW_NOTHROW strtof (const char * __restrict__, char ** __restrict__);
long double __cdecl __MINGW_NOTHROW strtold (const char * __restrict__, char ** __restrict__);
#else
_CRTIMP double __cdecl __MINGW_NOTHROW	strtod	(const char*, char**);
#endif /* __NO_ISOCEXT */

_CRTIMP long __cdecl __MINGW_NOTHROW	strtol	(const char*, char**, int);
_CRTIMP unsigned long __cdecl __MINGW_NOTHROW	strtoul	(const char*, char**, int);

#ifndef _WSTDLIB_DEFINED
/*  also declared in wchar.h */
_CRTIMP __int64 __cdecl _wcstoi64(const wchar_t *, wchar_t **, int);
_CRTIMP __int64 __cdecl _wcstoi64_l(const wchar_t *, wchar_t **, int, _locale_t);
_CRTIMP unsigned __int64 __cdecl _wcstoui64(const wchar_t *, wchar_t **, int);
_CRTIMP unsigned __int64 __cdecl _wcstoui64_l(const wchar_t *, wchar_t **, int, _locale_t);
_CRTIMP long __cdecl __MINGW_NOTHROW	wcstol	(const wchar_t*, wchar_t**, int);
_CRTIMP unsigned long __cdecl __MINGW_NOTHROW	wcstoul (const wchar_t*, wchar_t**, int);
_CRTIMP double __cdecl __MINGW_NOTHROW	wcstod	(const wchar_t*, wchar_t**);
#if !defined __NO_ISOCEXT /*  in libmingwex.a */
float __cdecl __MINGW_NOTHROW wcstof( const wchar_t * __restrict__, wchar_t ** __restrict__);
long double __cdecl __MINGW_NOTHROW wcstold (const wchar_t * __restrict__, wchar_t ** __restrict__);
#endif /* __NO_ISOCEXT */
#ifdef __MSVCRT__ 
_CRTIMP wchar_t* __cdecl __MINGW_NOTHROW _wgetenv(const wchar_t*);
_CRTIMP int __cdecl __MINGW_NOTHROW	_wputenv(const wchar_t*);
_CRTIMP void __cdecl __MINGW_NOTHROW	_wsearchenv(const wchar_t*, const wchar_t*, wchar_t*);
_CRTIMP int __cdecl __MINGW_NOTHROW   	_wsystem(const wchar_t*);
_CRTIMP void __cdecl __MINGW_NOTHROW    _wmakepath(wchar_t*, const wchar_t*, const wchar_t*, const wchar_t*, const wchar_t*);
_CRTIMP void __cdecl __MINGW_NOTHROW	_wsplitpath (const wchar_t*, wchar_t*, wchar_t*, wchar_t*, wchar_t*);
_CRTIMP wchar_t* __cdecl __MINGW_NOTHROW   _wfullpath (wchar_t*, const wchar_t*, size_t);
#endif
#define _WSTDLIB_DEFINED
#endif

_CRTIMP size_t __cdecl __MINGW_NOTHROW	wcstombs	(char*, const wchar_t*, size_t);
_CRTIMP int __cdecl __MINGW_NOTHROW	wctomb		(char*, wchar_t);

_CRTIMP int __cdecl __MINGW_NOTHROW	mblen		(const char*, size_t);
_CRTIMP size_t __cdecl __MINGW_NOTHROW	mbstowcs	(wchar_t*, const char*, size_t);
_CRTIMP int __cdecl __MINGW_NOTHROW	mbtowc		(wchar_t*, const char*, size_t);

_CRTIMP int __cdecl __MINGW_NOTHROW	rand	(void);
_CRTIMP void __cdecl __MINGW_NOTHROW	srand	(unsigned int);

_CRTIMP void* __cdecl __MINGW_NOTHROW	calloc	(size_t, size_t) __MINGW_ATTRIB_MALLOC;
_CRTIMP void* __cdecl __MINGW_NOTHROW	malloc	(size_t) __MINGW_ATTRIB_MALLOC;
_CRTIMP void* __cdecl __MINGW_NOTHROW	realloc	(void*, size_t);
_CRTIMP void __cdecl __MINGW_NOTHROW	free	(void*);
_CRTIMP void __cdecl __MINGW_NOTHROW	abort	(void) __MINGW_ATTRIB_NORETURN;
_CRTIMP void __cdecl __MINGW_NOTHROW	exit	(int) __MINGW_ATTRIB_NORETURN;

/* Note: This is in startup code, not imported directly from dll */
int __cdecl __MINGW_NOTHROW	atexit	(void (*)(void));

_CRTIMP int __cdecl __MINGW_NOTHROW	system	(const char*);
_CRTIMP char* __cdecl __MINGW_NOTHROW	getenv	(const char*);

/* bsearch and qsort are also in non-ANSI header search.h  */
_CRTIMP void* __cdecl bsearch (const void*, const void*, size_t, size_t, 
			       int (*)(const void*, const void*));
_CRTIMP void __cdecl qsort(void*, size_t, size_t,
			   int (*)(const void*, const void*));

_CRTIMP int __cdecl __MINGW_NOTHROW	abs	(int) __MINGW_ATTRIB_CONST;
_CRTIMP long __cdecl __MINGW_NOTHROW	labs	(long) __MINGW_ATTRIB_CONST;

/*
 * div_t and ldiv_t are structures used to return the results of div and
 * ldiv.
 *
 * NOTE: div and ldiv appear not to work correctly unless
 *       -fno-pcc-struct-return is specified. This is included in the
 *       mingw32 specs file.
 */
typedef struct { int quot, rem; } div_t;
typedef struct { long quot, rem; } ldiv_t;

_CRTIMP div_t __cdecl __MINGW_NOTHROW	div	(int, int) __MINGW_ATTRIB_CONST;
_CRTIMP ldiv_t __cdecl __MINGW_NOTHROW	ldiv	(long, long) __MINGW_ATTRIB_CONST;

#if !defined (__STRICT_ANSI__)

/*
 * NOTE: Officially the three following functions are obsolete. The Win32 API
 *       functions SetErrorMode, Beep and Sleep are their replacements.
 */
_CRTIMP void __cdecl __MINGW_NOTHROW	_beep (unsigned int, unsigned int) __MINGW_ATTRIB_DEPRECATED;
/* Not to be confused with  _set_error_mode (int).  */
_CRTIMP void __cdecl __MINGW_NOTHROW	_seterrormode (int) __MINGW_ATTRIB_DEPRECATED;
_CRTIMP void __cdecl __MINGW_NOTHROW	_sleep (unsigned long) __MINGW_ATTRIB_DEPRECATED;

_CRTIMP void __cdecl __MINGW_NOTHROW	_exit	(int) __MINGW_ATTRIB_NORETURN;

/* _onexit is MS extension. Use atexit for portability.  */
/* Note: This is in startup code, not imported directly from dll */
typedef  int (* _onexit_t)(void);
_onexit_t __cdecl __MINGW_NOTHROW _onexit( _onexit_t );

_CRTIMP int __cdecl __MINGW_NOTHROW	_putenv	(const char*);
_CRTIMP void __cdecl __MINGW_NOTHROW	_searchenv (const char*, const char*, char*);

_CRTIMP char* __cdecl __MINGW_NOTHROW	_ecvt (double, int, int*, int*);
_CRTIMP char* __cdecl __MINGW_NOTHROW	_fcvt (double, int, int*, int*);
_CRTIMP char* __cdecl __MINGW_NOTHROW	_gcvt (double, int, char*);

_CRTIMP void __cdecl __MINGW_NOTHROW	_makepath (char*, const char*, const char*, const char*, const char*);
_CRTIMP void __cdecl __MINGW_NOTHROW	_splitpath (const char*, char*, char*, char*, char*);
_CRTIMP char* __cdecl __MINGW_NOTHROW	_fullpath (char*, const char*, size_t);

_CRTIMP char* __cdecl __MINGW_NOTHROW	_itoa (int, char*, int);
_CRTIMP char* __cdecl __MINGW_NOTHROW	_ltoa (long, char*, int);
_CRTIMP char* __cdecl __MINGW_NOTHROW   _ultoa(unsigned long, char*, int);
_CRTIMP wchar_t* __cdecl __MINGW_NOTHROW  _itow (int, wchar_t*, int);
_CRTIMP wchar_t* __cdecl __MINGW_NOTHROW  _ltow (long, wchar_t*, int);
_CRTIMP wchar_t* __cdecl __MINGW_NOTHROW  _ultow (unsigned long, wchar_t*, int);

#ifdef __MSVCRT__
_CRTIMP __int64 __cdecl __MINGW_NOTHROW	_atoi64(const char *);
_CRTIMP char* __cdecl __MINGW_NOTHROW	_i64toa(__int64, char *, int);
_CRTIMP char* __cdecl __MINGW_NOTHROW	_ui64toa(unsigned __int64, char *, int);
_CRTIMP __int64 __cdecl __MINGW_NOTHROW	_wtoi64(const wchar_t *);
_CRTIMP wchar_t* __cdecl __MINGW_NOTHROW _i64tow(__int64, wchar_t *, int);
_CRTIMP wchar_t* __cdecl __MINGW_NOTHROW _ui64tow(unsigned __int64, wchar_t *, int);

_CRTIMP unsigned int __cdecl __MINGW_NOTHROW (_rotl)(unsigned int, int) __MINGW_ATTRIB_CONST;
_CRTIMP unsigned int __cdecl __MINGW_NOTHROW (_rotr)(unsigned int, int) __MINGW_ATTRIB_CONST;
_CRTIMP unsigned long __cdecl __MINGW_NOTHROW (_lrotl)(unsigned long, int) __MINGW_ATTRIB_CONST;
_CRTIMP unsigned long __cdecl __MINGW_NOTHROW (_lrotr)(unsigned long, int) __MINGW_ATTRIB_CONST;

_CRTIMP int __cdecl __MINGW_NOTHROW _set_error_mode (int);

# define _OUT_TO_DEFAULT	0
# define _OUT_TO_STDERR 	1
# define _OUT_TO_MSGBOX 	2
# define _REPORT_ERRMODE	3

# if __MSVCRT_VERSION__ >= 0x800
#  ifndef _UINTPTR_T_DEFINED
#   define _UINTPTR_T_DEFINED
#   ifdef _WIN64
      typedef unsigned __int64 uintptr_t;
#   else
      typedef unsigned int uintptr_t;
#   endif
#  endif

_CRTIMP unsigned int __cdecl __MINGW_NOTHROW _set_abort_behavior (unsigned int, unsigned int);

/* These masks work with msvcr80.dll version 8.0.50215.44 (a beta release).  */
#  define _WRITE_ABORT_MSG	1
#  define _CALL_REPORTFAULT	2

typedef void
(* _invalid_parameter_handler) (
    const wchar_t *,
    const wchar_t *,
    const wchar_t *,
    unsigned int,
    uintptr_t);
_invalid_parameter_handler _set_invalid_parameter_handler (_invalid_parameter_handler);

# endif /* __MSVCRT_VERSION__ >= 0x800 */
#endif /* __MSVCRT__ */

#ifndef	_NO_OLDNAMES

_CRTIMP int __cdecl __MINGW_NOTHROW	putenv (const char*);
_CRTIMP void __cdecl __MINGW_NOTHROW	searchenv (const char*, const char*, char*);

_CRTIMP char* __cdecl __MINGW_NOTHROW	itoa (int, char*, int);
_CRTIMP char* __cdecl __MINGW_NOTHROW	ltoa (long, char*, int);

#ifndef _UWIN
_CRTIMP char* __cdecl __MINGW_NOTHROW	ecvt (double, int, int*, int*);
_CRTIMP char* __cdecl __MINGW_NOTHROW	fcvt (double, int, int*, int*);
_CRTIMP char* __cdecl __MINGW_NOTHROW	gcvt (double, int, char*);
#endif /* _UWIN */
#endif	/* Not _NO_OLDNAMES */

#endif	/* Not __STRICT_ANSI__ */

/* C99 names */

#if !defined __NO_ISOCEXT /* externs in static libmingwex.a */

/* C99 name for _exit */
void __cdecl __MINGW_NOTHROW _Exit(int) __MINGW_ATTRIB_NORETURN;
#if !defined __NO_INLINE__ && !defined __STRICT_ANSI__
__CRT_INLINE void __cdecl __MINGW_NOTHROW _Exit(int __status)
	{  _exit (__status); }
#endif 

typedef struct { long long quot, rem; } lldiv_t;

lldiv_t	__cdecl __MINGW_NOTHROW lldiv (long long, long long) __MINGW_ATTRIB_CONST;

long long __cdecl __MINGW_NOTHROW llabs(long long);
#ifndef __NO_INLINE__
__CRT_INLINE long long __cdecl __MINGW_NOTHROW llabs(long long _j)
  {return (_j >= 0 ? _j : -_j);}
#endif

long long  __cdecl __MINGW_NOTHROW strtoll (const char* __restrict__, char** __restrict, int);
unsigned long long  __cdecl __MINGW_NOTHROW strtoull (const char* __restrict__, char** __restrict__, int);

#if defined (__MSVCRT__) /* these are stubs for MS _i64 versions */ 
long long  __cdecl __MINGW_NOTHROW atoll (const char *);

#if !defined (__STRICT_ANSI__)
long long  __cdecl __MINGW_NOTHROW wtoll (const wchar_t *);
char* __cdecl __MINGW_NOTHROW lltoa (long long, char *, int);
char* __cdecl __MINGW_NOTHROW ulltoa (unsigned long long , char *, int);
wchar_t* __cdecl __MINGW_NOTHROW lltow (long long, wchar_t *, int);
wchar_t* __cdecl __MINGW_NOTHROW ulltow (unsigned long long, wchar_t *, int);

  /* inline using non-ansi functions */
#ifndef __NO_INLINE__
__CRT_INLINE long long  __cdecl __MINGW_NOTHROW atoll (const char * _c)
	{ return _atoi64 (_c); }
__CRT_INLINE char*  __cdecl __MINGW_NOTHROW lltoa (long long _n, char * _c, int _i)
	{ return _i64toa (_n, _c, _i); }
__CRT_INLINE char*  __cdecl __MINGW_NOTHROW ulltoa (unsigned long long _n, char * _c, int _i)
	{ return _ui64toa (_n, _c, _i); }
__CRT_INLINE long long  __cdecl __MINGW_NOTHROW wtoll (const wchar_t * _w)
 	{ return _wtoi64 (_w); }
__CRT_INLINE wchar_t*  __cdecl __MINGW_NOTHROW lltow (long long _n, wchar_t * _w, int _i)
	{ return _i64tow (_n, _w, _i); } 
__CRT_INLINE wchar_t*  __cdecl __MINGW_NOTHROW ulltow (unsigned long long _n, wchar_t * _w, int _i)
	{ return _ui64tow (_n, _w, _i); } 
#endif /* (__NO_INLINE__) */
#endif /* (__STRICT_ANSI__)  */

#endif /* __MSVCRT__ */

#endif /* !__NO_ISOCEXT */


#ifdef __cplusplus
}
#endif

#endif	/* Not RC_INVOKED */

#endif	/* Not _STDLIB_H_ */

@


1.46
log
@	* include/wchar.h (_wcstrtoi64): Declare.
	(_wcstrtoi64_l): Ditto.
	(_wcstrtoui64): Ditto.
	(_wcstrtoui64_l): Ditto.
@
text
@@


1.45
log
@	* include/stdlib.h (_strtoi64): Declare.
	(_strtoi64_l): Ditto.
	(_strtoui64): Ditto.
	(_strtoui64_l): Ditto.
	(_wcstrtoi64): Ditto.
	(_wcstrtoi64_l): Ditto.
	(_wcstrtoui64): Ditto.
	(_wcstrtoui64_l): Ditto.
@
text
@a304 2
_CRTIMP __int64 __cdecl _wcstoi64(const wchar_t *, wchar_t **, int);
_CRTIMP __int64 __cdecl _wcstoi64_l(const wchar_t *, wchar_t **, int, _locale_t);
a306 2
_CRTIMP unsigned __int64 __cdecl _wcstoui64(const wchar_t *, wchar_t **, int);
_CRTIMP unsigned __int64 __cdecl _wcstoui64_l(const wchar_t *, wchar_t **, int, _locale_t);
d331 4
@


1.44
log
@2011-05-24  Chris Sutcliffe  <ir0nh34d@@users.sourceforge.net>

        * include/stdlib.h (strtod): Declare as extern to resolve compilation issues.

        Thanks to cgf for the report.
@
text
@d303 9
@


1.43
log
@2011-05-22  Chris Sutcliffe  <ir0nh34d@@users.sourceforge.net>

        * include/stdlib.h (strtod): Remove possible static declaration to resolve
        issue with gcc.

        Thanks to Tobias Burnus for the report.
@
text
@d313 2
a314 5
__inline__ double __cdecl __MINGW_NOTHROW
strtod (const char* __restrict__ __nptr, char** __restrict__ __endptr)
{
  return __strtod(__nptr, __endptr);
}
@


1.42
log
@2011-05-22  Chris Sutcliffe  <ir0nh34d@@users.sourceforge.net>

        * include/stdlib.h (_rotl, _lrotl, _rotr, _lrotr): Resolve conflict with gcc
        by wrapping the functions in brackets.

        Thanks to Kai Tietz for the report.
@
text
@a312 5
#ifdef __cplusplus
/* We require a function with external linkage. */
#else
static
#endif /* Not __cplusplus */
@


1.41
log
@2011-05-22  Antoine LECA  <antoinel@@users.sourceforge.net>

        * include/_mingw.h:  Define GCC system_header only if PCC is not defined.
        * include/stdlib.h:  Fix a long-standing typo which prevented correct use of
        the MB_CUR_MAX macro/variable when DECLSPEC is not supported and <stdlib.h>
        is included before <ctype.h>.
@
text
@d443 4
a446 4
_CRTIMP unsigned int __cdecl __MINGW_NOTHROW _rotl(unsigned int, int) __MINGW_ATTRIB_CONST;
_CRTIMP unsigned int __cdecl __MINGW_NOTHROW _rotr(unsigned int, int) __MINGW_ATTRIB_CONST;
_CRTIMP unsigned long __cdecl __MINGW_NOTHROW _lrotl(unsigned long, int) __MINGW_ATTRIB_CONST;
_CRTIMP unsigned long __cdecl __MINGW_NOTHROW _lrotr(unsigned long, int) __MINGW_ATTRIB_CONST;
@


1.40
log
@2009-08-08  Danny Smith  <dannysmith@@users.sourceforge.net>

        * include/math.h (__fpclassifyl, __isnan, __isnanf, isnanl, __signbit,
        __signbitf, __signbitl, sinhf, tanhf, expf, frexpf, ldexpf, hypotf, powf,
        __fp_unordered_compare): Add prototypes.
        * include/stdio.h (vsnwprintf): Add prototype.
        * include/wchar.h (vsnwprintf): Add prototype.
        * include/unistd.h (ftruncate): Move prototype out of __NO_INLINE__ guard.
@
text
@d120 1
a120 1
   extern int* _imp____mbcur_max;
d123 1
a123 1
   extern int*  _imp____mbcur_max_dll;
@


1.39
log
@2009-07-18  Gregory McGarry  <gregorymcgarry@@users.sourceforge.net>

        * include/inttypes.h include/math.h include/stdio.h include/stdlib.h
        include/string.h include/unistd.h include/wchar.h: Add __NO_INLINE__ guard
        to all inline functions.
@
text
@d506 1
a506 1
#ifndef __NO_INLINE__
@


1.38
log
@2009-06-16 Chris Sutcliffe <ir0nh34d@@users.sourceforge.net>

        * include/stdlib.h (_wtof): Define.
@
text
@d506 1
a506 1
#ifndef __STRICT_ANSI__   /* inline using non-ansi functions */
d516 1
d519 1
d535 1
d548 1
@


1.37
log
@Make strtod() inline definition C89 compliant.
@
text
@d307 1
@


1.36
log
@Fix MinGW-Bug [2125708].
@
text
@d317 5
a321 2
inline double __cdecl __MINGW_NOTHROW strtod (const char* __restrict__ __nptr, char** __restrict__ __endptr)
{ return __strtod(__nptr, __endptr); }
@


1.35
log
@2008-05-15 Ramiro Polla <ramiro@@lisha.ufsc.br>

        * include/stdlib.h: Fix strtod under C++.
@
text
@a415 1

a438 1

d445 16
a460 14
#define _OUT_TO_DEFAULT	0
#define _OUT_TO_STDERR	1
#define _OUT_TO_MSGBOX	2
#define _REPORT_ERRMODE	3

#if __MSVCRT_VERSION__ >= 0x800
#ifndef _INTPTR_T_DEFINED
#define _INTPTR_T_DEFINED
#ifdef _WIN64
  typedef __int64 intptr_t;
#else
  typedef int intptr_t;
#endif
#endif
d462 1
d464 2
a465 2
#define _WRITE_ABORT_MSG 1
#define _CALL_REPORTFAULT 2
d467 7
a473 5
typedef void (* _invalid_parameter_handler) (const wchar_t *,
					     const wchar_t *,
					     const wchar_t *,
					     unsigned int,
					     uintptr_t);
d475 2
a476 1
#endif /* __MSVCRT_VERSION__ >= 0x800 */
@


1.34
log
@2008-05-06 Ramiro Polla <ramiro@@lisha.ufsc.br>

        * mingwex/gdtoa/strtodnrp.c: Remove alias from strtod to __strtod.
        * include/stdlib.h: Define strtod to __strtod when __NO_ISOCEXT is not set.
@
text
@d312 7
a318 1
#define strtod __strtod
@


1.33
log
@2008-04-02 Ramiro Polla  <ramiro@@lisha.ufsc.br>

        Make strtod() conform to C99.

        * include/stdlib.h (strtod): Declare this mingwex function, and...
        (_strtod): rename this MSVCRT counterpart.

        * mingwex/gdtoa/strtodnrp.c (strtod): Alias to __strtod.
@
text
@a309 1
_CRTIMP double __cdecl __MINGW_NOTHROW	_strtod	(const char*, char**);
d311 2
a312 1
double __cdecl __MINGW_NOTHROW strtod (const char*, char**);
d315 2
@


1.32
log
@	* incude/wchar.h (_wsystem) Declare.
	(_wputenv) Declare.
	(_wgetenv): Declare.
	(_wsearchenv): Declare.
	(_wmakepath): Declare.
	(_wsplitpath): Declare.
	(_wfullpath): Declare.
	* incude/stdlib.h (_wsystem) Declare.
	(_wputenv, _wgetenv, _wsearchenv, _wmakepath, _wsplitpath, _wfullpath):
	Move into _WSTDLIB_DEFINED guard.
	* include/tchar.h (_tsystem): New UNICODE mapping define.
@
text
@d310 1
a310 1
_CRTIMP double __cdecl __MINGW_NOTHROW	strtod	(const char*, char**);
d312 1
@


1.31
log
@	*include/assert.h:  Qualify all  functions with __MINGW_NOTHROW.
	*include/conio.h:  Likewise.
	*include/ctype.h:  Likewise.
	*include/direct.h:  Likewise.
	*include/dos.h:  Likewise.
	*include/errno.h:  Likewise.
	*include/fenv.h:  Likewise.
	*include/float.h:  Likewise.
	*include/inttypes.h:  Likewise.
	*include/io.h:  Likewise.
	*include/libgen.h:  Likewise.
	*include/locale.h:  Likewise.
	*include/malloc.h:  Likewise.
	*include/mbctype.h:  Likewise.
	*include/mbstring.h:  Likewise.
	*include/process.h:  Likewise.
	*include/search.h:  Likewise.
	*include/setjmp.h:  Likewise.
	*include/signal.h:  Likewise.
	*include/stdio.h:  Likewise.
	*include/stdlib.h:  Likewise.
	*include/string.h:  Likewise.
	*include/time.h:  Likewise.
	*include/wchar.h:  Likewise.
	*include/sys/stat.h:  Likewise.
	*include/sys/time.h:  Likewise.
	*include/sys/timeb.h:  Likewise.
	*include/sys/utime.h:  Likewise.
@
text
@d321 2
d328 9
a336 3

_CRTIMP long __cdecl __MINGW_NOTHROW	wcstol	(const wchar_t*, wchar_t**, int);
_CRTIMP unsigned long __cdecl __MINGW_NOTHROW	wcstoul (const wchar_t*, wchar_t**, int);
a430 6
_CRTIMP wchar_t* __cdecl __MINGW_NOTHROW _wgetenv(const wchar_t*);
_CRTIMP int __cdecl __MINGW_NOTHROW	 _wputenv(const wchar_t*);
_CRTIMP void __cdecl __MINGW_NOTHROW	_wsearchenv(const wchar_t*, const wchar_t*, wchar_t*);
_CRTIMP void __cdecl __MINGW_NOTHROW    _wmakepath(wchar_t*, const wchar_t*, const wchar_t*, const wchar_t*, const wchar_t*);
_CRTIMP void __cdecl __MINGW_NOTHROW	_wsplitpath (const wchar_t*, wchar_t*, wchar_t*, wchar_t*, wchar_t*);
_CRTIMP wchar_t* __cdecl __MINGW_NOTHROW    _wfullpath (wchar_t*, const wchar_t*, size_t);
@


1.30
log
@	* include/stdlib.h: Don't include stdint.h.  Conditionally define intptr_t.
	* include/io.h: Likewise.
@
text
@d77 3
a79 3
extern int*  __cdecl   __p___argc(void);
extern char*** __cdecl  __p___argv(void);
extern wchar_t***  __cdecl __p___wargv(void);
d137 1
a137 1
 _CRTIMP int* __cdecl	_errno(void);
d140 1
a140 1
 _CRTIMP int* __cdecl	__doserrno(void);
d149 2
a150 2
  extern _CRTIMP char *** __cdecl __p__environ(void);
  extern _CRTIMP wchar_t *** __cdecl  __p__wenviron(void);
d209 4
a212 4
extern _CRTIMP unsigned __cdecl int*	__p__osver(void);
extern _CRTIMP unsigned __cdecl int*	__p__winver(void);
extern _CRTIMP unsigned __cdecl int*	__p__winmajor(void);
extern _CRTIMP unsigned __cdecl int*	__p__winminor(void);
d260 1
a260 1
_CRTIMP char** __cdecl __p__pgmptr(void);
d262 1
a262 1
_CRTIMP wchar_t** __cdecl __p__wpgmptr(void);
d303 3
a305 3
_CRTIMP double __cdecl	atof	(const char*);
_CRTIMP int __cdecl	atoi	(const char*);
_CRTIMP long __cdecl 	atol	(const char*);
d307 2
a308 2
_CRTIMP int __cdecl	_wtoi (const wchar_t *);
_CRTIMP long __cdecl _wtol (const wchar_t *);
d310 1
a310 1
_CRTIMP double __cdecl	strtod	(const char*, char**);
d312 2
a313 2
float __cdecl strtof (const char * __restrict__, char ** __restrict__);
long double __cdecl strtold (const char * __restrict__, char ** __restrict__);
d316 2
a317 2
_CRTIMP long __cdecl	strtol	(const char*, char**, int);
_CRTIMP unsigned long __cdecl	strtoul	(const char*, char**, int);
d321 1
a321 1
_CRTIMP double __cdecl	wcstod	(const wchar_t*, wchar_t**);
d323 2
a324 2
float __cdecl wcstof( const wchar_t * __restrict__, wchar_t ** __restrict__);
long double __cdecl wcstold (const wchar_t * __restrict__, wchar_t ** __restrict__);
d327 2
a328 2
_CRTIMP long __cdecl	wcstol	(const wchar_t*, wchar_t**, int);
_CRTIMP unsigned long __cdecl	wcstoul (const wchar_t*, wchar_t**, int);
d332 2
a333 2
_CRTIMP size_t __cdecl	wcstombs	(char*, const wchar_t*, size_t);
_CRTIMP int __cdecl	wctomb		(char*, wchar_t);
d335 13
a347 13
_CRTIMP int __cdecl	mblen		(const char*, size_t);
_CRTIMP size_t __cdecl	mbstowcs	(wchar_t*, const char*, size_t);
_CRTIMP int __cdecl	mbtowc		(wchar_t*, const char*, size_t);

_CRTIMP int __cdecl	rand	(void);
_CRTIMP void __cdecl	srand	(unsigned int);

_CRTIMP void* __cdecl	calloc	(size_t, size_t) __MINGW_ATTRIB_MALLOC;
_CRTIMP void* __cdecl	malloc	(size_t) __MINGW_ATTRIB_MALLOC;
_CRTIMP void* __cdecl	realloc	(void*, size_t);
_CRTIMP void __cdecl	free	(void*);
_CRTIMP void __cdecl	abort	(void) __MINGW_ATTRIB_NORETURN;
_CRTIMP void __cdecl	exit	(int) __MINGW_ATTRIB_NORETURN;
d350 1
a350 1
int __cdecl	atexit	(void (*)(void));
d352 2
a353 2
_CRTIMP int __cdecl	system	(const char*);
_CRTIMP char* __cdecl	getenv	(const char*);
d356 4
a359 4
_CRTIMP void* __cdecl	bsearch	(const void*, const void*, size_t, size_t, 
				 int (*)(const void*, const void*));
_CRTIMP void __cdecl	qsort	(void*, size_t, size_t,
				 int (*)(const void*, const void*));
d361 2
a362 2
_CRTIMP int __cdecl	abs	(int) __MINGW_ATTRIB_CONST;
_CRTIMP long __cdecl	labs	(long) __MINGW_ATTRIB_CONST;
d375 2
a376 2
_CRTIMP div_t __cdecl	div	(int, int) __MINGW_ATTRIB_CONST;
_CRTIMP ldiv_t __cdecl	ldiv	(long, long) __MINGW_ATTRIB_CONST;
d384 1
a384 1
_CRTIMP void __cdecl	_beep (unsigned int, unsigned int) __MINGW_ATTRIB_DEPRECATED;
d386 2
a387 2
_CRTIMP void __cdecl	_seterrormode (int) __MINGW_ATTRIB_DEPRECATED;
_CRTIMP void __cdecl	_sleep (unsigned long) __MINGW_ATTRIB_DEPRECATED;
d389 1
a389 1
_CRTIMP void __cdecl	_exit	(int) __MINGW_ATTRIB_NORETURN;
d394 1
a394 1
_onexit_t __cdecl _onexit( _onexit_t );
d396 2
a397 2
_CRTIMP int __cdecl	_putenv	(const char*);
_CRTIMP void __cdecl	_searchenv (const char*, const char*, char*);
d400 14
a413 14
_CRTIMP char* __cdecl	_ecvt (double, int, int*, int*);
_CRTIMP char* __cdecl	_fcvt (double, int, int*, int*);
_CRTIMP char* __cdecl	_gcvt (double, int, char*);

_CRTIMP void __cdecl	_makepath (char*, const char*, const char*, const char*, const char*);
_CRTIMP void __cdecl	_splitpath (const char*, char*, char*, char*, char*);
_CRTIMP char* __cdecl	_fullpath (char*, const char*, size_t);

_CRTIMP char* __cdecl	_itoa (int, char*, int);
_CRTIMP char* __cdecl	_ltoa (long, char*, int);
_CRTIMP char* __cdecl   _ultoa(unsigned long, char*, int);
_CRTIMP wchar_t* __cdecl  _itow (int, wchar_t*, int);
_CRTIMP wchar_t* __cdecl  _ltow (long, wchar_t*, int);
_CRTIMP wchar_t* __cdecl  _ultow (unsigned long, wchar_t*, int);
d416 18
a433 18
_CRTIMP __int64 __cdecl	_atoi64(const char *);
_CRTIMP char* __cdecl	_i64toa(__int64, char *, int);
_CRTIMP char* __cdecl	_ui64toa(unsigned __int64, char *, int);
_CRTIMP __int64 __cdecl	_wtoi64(const wchar_t *);
_CRTIMP wchar_t* __cdecl _i64tow(__int64, wchar_t *, int);
_CRTIMP wchar_t* __cdecl _ui64tow(unsigned __int64, wchar_t *, int);

_CRTIMP wchar_t* __cdecl _wgetenv(const wchar_t*);
_CRTIMP int __cdecl	 _wputenv(const wchar_t*);
_CRTIMP void __cdecl	_wsearchenv(const wchar_t*, const wchar_t*, wchar_t*);
_CRTIMP void __cdecl    _wmakepath(wchar_t*, const wchar_t*, const wchar_t*, const wchar_t*, const wchar_t*);
_CRTIMP void __cdecl	_wsplitpath (const wchar_t*, wchar_t*, wchar_t*, wchar_t*, wchar_t*);
_CRTIMP wchar_t* __cdecl    _wfullpath (wchar_t*, const wchar_t*, size_t);

_CRTIMP unsigned int __cdecl _rotl(unsigned int, int) __MINGW_ATTRIB_CONST;
_CRTIMP unsigned int __cdecl _rotr(unsigned int, int) __MINGW_ATTRIB_CONST;
_CRTIMP unsigned long __cdecl _lrotl(unsigned long, int) __MINGW_ATTRIB_CONST;
_CRTIMP unsigned long __cdecl _lrotr(unsigned long, int) __MINGW_ATTRIB_CONST;
d435 1
a435 1
_CRTIMP int __cdecl _set_error_mode (int);
d450 1
a450 1
_CRTIMP unsigned int __cdecl _set_abort_behavior (unsigned int, unsigned int);
d466 2
a467 2
_CRTIMP int __cdecl	putenv (const char*);
_CRTIMP void __cdecl	searchenv (const char*, const char*, char*);
d469 2
a470 2
_CRTIMP char* __cdecl	itoa (int, char*, int);
_CRTIMP char* __cdecl	ltoa (long, char*, int);
d473 3
a475 3
_CRTIMP char* __cdecl	ecvt (double, int, int*, int*);
_CRTIMP char* __cdecl	fcvt (double, int, int*, int*);
_CRTIMP char* __cdecl	gcvt (double, int, char*);
d486 1
a486 1
void __cdecl _Exit(int) __MINGW_ATTRIB_NORETURN;
d488 1
a488 1
__CRT_INLINE void __cdecl _Exit(int __status)
d494 1
a494 1
lldiv_t	__cdecl lldiv (long long, long long) __MINGW_ATTRIB_CONST;
d496 2
a497 2
long long __cdecl llabs(long long);
__CRT_INLINE long long __cdecl llabs(long long _j)
d500 2
a501 2
long long  __cdecl strtoll (const char* __restrict__, char** __restrict, int);
unsigned long long  __cdecl strtoull (const char* __restrict__, char** __restrict__, int);
d504 1
a504 1
long long  __cdecl atoll (const char *);
d507 5
a511 5
long long  __cdecl wtoll (const wchar_t *);
char* __cdecl lltoa (long long, char *, int);
char* __cdecl ulltoa (unsigned long long , char *, int);
wchar_t* __cdecl lltow (long long, wchar_t *, int);
wchar_t* __cdecl ulltow (unsigned long long, wchar_t *, int);
d514 1
a514 1
__CRT_INLINE long long  __cdecl atoll (const char * _c)
d516 1
a516 1
__CRT_INLINE char*  __cdecl lltoa (long long _n, char * _c, int _i)
d518 1
a518 1
__CRT_INLINE char*  __cdecl ulltoa (unsigned long long _n, char * _c, int _i)
d520 1
a520 1
__CRT_INLINE long long  __cdecl wtoll (const wchar_t * _w)
d522 1
a522 1
__CRT_INLINE wchar_t*  __cdecl lltow (long long _n, wchar_t * _w, int _i)
d524 1
a524 1
__CRT_INLINE wchar_t*  __cdecl ulltow (unsigned long long _n, wchar_t * _w, int _i)
@


1.29
log
@	Expose some msvcr80.dll functions.
	* include/stdlib.h (_set_abort_behavior): Add prototype.
	(_WRITE_ABORT_MSG, _CALL_REPORTFAULT): Add defines for
	_set_abort_behavior mask argument.
	(_invalid_parameter_handler): Add typedef.
	(_set_invalid_parameter_handler): Add prototype.
	* include/stdio.h (_get_printf_count_output): Add prototype.
	(_set_printf_count_output): Add prototype.
	* msvcrt.def.in (_get_printf_count_output, _set_printf_count_output,
	_set_abort_behavior, _set_invalid_parameter_handler): Add stubs.
@
text
@a23 2
#include <stdint.h> /* For uintptr_t */

d442 8
@


1.28
log
@	* include/_mingw.h (__MINGW_ATTRIB_DEPRECATED): Define.
	(__MINGW_IMPORT): Ansify.
	* include/stdlib.h (_sleep, _beep, _seterrormode): Add
	__MINGW_ATTRIB_DEPRECATED.
@
text
@d24 2
a347 1

d443 14
a456 1
#endif
@


1.27
log
@	Import David Gay's gdtoa library.

	* mingwex/gdtoa: New directory.
	* mingwex/gdtoa/(arithchk.c, dmisc.c, dtoa.c, g__fmt.c, g_dfmt.c,
	g_ffmt.c, g_xfmt.c, gd_arith.h, gd_qnan.h, gdtoa.c, gdtoa.h,
	gdtoaimp.h, gethex.c, gmisc.c, hd_init.c, hexnan.c, misc.c, qnan.c,
	README, smisc.c, strtodg.c, strtodnrp.c, strtof.c, strtopx.c, sum.c,
	ulp.c): New files.
	* mingwex/(strtof.c, strtold.c, ldtoa.c): Remove files.
	* mingwex/math/(cephes-emath.c, cephes-emath.h): Remove files.
	* mingwex/mb_wc_common.h (get_cp_from_locale); Rename to get_codepage().
        * mingwex/(btowc.c, wctob.c, mbrtowc.c, wcrtomb.c): Adjust call to get_codepage().
	* mingwex/wcstold.c: Avoid using strtold internals.
	* mingwex/wcstof.c: Rewrite.
	* mingwex/Makefile.in (GDTOA_DISTFILES): Add to distribution.
	(GDTOA_OBJS): Add to library.
	(DISTFILES): Remove strtof.c strtold.c ldtoa.c cephes-emath.c cephes-emath.h.
	(STDLIB_OBJS): Remove.
	(STDLIB_STUB_OBJS): Remove strtof.o wcstof,o.
	(Q8_OBJS): Add wcstof.o wcstold.o.
	* include/stdlib.h (strtof): Remove inline definition.
	(wcstof): Likewise.
	* include/wchar.h (wcstof): Remove inline definition.
@
text
@a16 1

d385 4
a388 3
_CRTIMP void __cdecl	_beep (unsigned int, unsigned int);
_CRTIMP void __cdecl	_seterrormode (int);
_CRTIMP void __cdecl	_sleep (unsigned long);
@


1.26
log
@	* include/stdlib.h (strtof): Add prototype.  Uglify
	parameter names in inline definition.
	(wcstof): Likewise.
	(_Exit): Uglify	parameter names in inline definition.
	(llabs): Add prototype.
	(_set_error_mode): Add prototype and input defines.
@
text
@d312 2
a313 4
#if !defined __NO_ISOCEXT  /* extern stub in static libmingwex.a */
float __cdecl strtof (const char *, char **);
__CRT_INLINE float __cdecl strtof (const char *__nptr, char **__endptr)
  { return (strtod (__nptr, __endptr));}
d323 2
a324 4
#if !defined __NO_ISOCEXT /* extern stub in static libmingwex.a */
float __cdecl wcstof( const wchar_t *, wchar_t **);
__CRT_INLINE float __cdecl wcstof( const wchar_t *__nptr, wchar_t **__endptr)
{  return (wcstod(__nptr, __endptr)); }
@


1.25
log
@	* include/_mingw.h: Use only two underscores to uglify
	__MINGW_ATTRIB_* macros.
	* include/stdlib.h: Adjust __MINGW_ATTRIB_* tokens.
	* includ/setjmp.h: Likewise.

	* include/sting.h: Add __MINGW_ATTRIB_PURE to locale-independent
	string functions.
	(_strdup, strdup): Add __MINGW_ATTRIB_MALLOC.
@
text
@d313 3
a315 2
__CRT_INLINE float __cdecl strtof (const char *nptr, char **endptr)
  { return (strtod (nptr, endptr));}
d326 3
a328 2
__CRT_INLINE float __cdecl wcstof( const wchar_t *nptr, wchar_t **endptr)
{  return (wcstod(nptr, endptr)); }
d439 7
d472 2
a473 2
__CRT_INLINE void __cdecl _Exit(int status)
	{  _exit(status); }
d480 1
@


1.24
log
@	* include/_mingw.h (_MINGW_ATTR_*):  Replace with
	__MINGW_ATTRIB_*.
	* include/stdlib.h (_ATTRIB_NORETURN): Replace with
	__MINGW_ATTRIB_NOREURN, throughout.
	(malloc): Declare with __MINGW_ATTRIB_MALLOC.
	(calloc): Likewise.
	(abs): Declare with __MINGW_ATTRIB_CONST.
	(labs): Likewise.
	(div): Likewise.
	(ldiv): Likewise.
	(lldiv): Likewise.
	(_rotl): Likewise.
	(_rotr): Likewise.
	(_lrotl): Likewise.
	(_lrotr): Likewise.
	* include/setjmp.h (longjmp): Add __MINGW_ATTRIB_NORETURN.
@
text
@d345 2
a346 2
_CRTIMP void* __cdecl	calloc	(size_t, size_t) ___MINGW_ATTRIB_MALLOC;
_CRTIMP void* __cdecl	malloc	(size_t) ___MINGW_ATTRIB_MALLOC;
d350 2
a351 2
_CRTIMP void __cdecl	abort	(void) ___MINGW_ATTRIB_NORETURN;
_CRTIMP void __cdecl	exit	(int) ___MINGW_ATTRIB_NORETURN;
d365 2
a366 2
_CRTIMP int __cdecl	abs	(int) ___MINGW_ATTRIB_CONST;
_CRTIMP long __cdecl	labs	(long) ___MINGW_ATTRIB_CONST;
d379 2
a380 2
_CRTIMP div_t __cdecl	div	(int, int) ___MINGW_ATTRIB_CONST;
_CRTIMP ldiv_t __cdecl	ldiv	(long, long) ___MINGW_ATTRIB_CONST;
d392 1
a392 1
_CRTIMP void __cdecl	_exit	(int) ___MINGW_ATTRIB_NORETURN;
d433 4
a436 4
_CRTIMP unsigned int __cdecl _rotl(unsigned int, int) ___MINGW_ATTRIB_CONST;
_CRTIMP unsigned int __cdecl _rotr(unsigned int, int) ___MINGW_ATTRIB_CONST;
_CRTIMP unsigned long __cdecl _lrotl(unsigned long, int) ___MINGW_ATTRIB_CONST;
_CRTIMP unsigned long __cdecl _lrotr(unsigned long, int) ___MINGW_ATTRIB_CONST;
d461 1
a461 1
void __cdecl _Exit(int) ___MINGW_ATTRIB_NORETURN;
d469 1
a469 1
lldiv_t	__cdecl lldiv (long long, long long) ___MINGW_ATTRIB_CONST;
@


1.23
log
@
	* CONTRIBUTORS: New file.
	* DISCLAIMER: Ditto.
	* CRT_noglob.c: Reword copyright and disclaimer.  Move Contributors
	section CONTRIBUTORS file.  Remove RCS tags.
	* CRTFmode.c: Ditto.
	* CRTglob.c: Ditto.
	* CRTinit.c: Ditto.
	* crt1.c: Ditto.
	* crtdll.dev: Ditto.
	* dllcrt1.c: Ditto.
	* dllmain.c: Ditto.
	* gccmain.c: Ditto.
	* init.c: Ditto.
	* isascii.c: Ditto.
	* iscsym.c: Ditto.
	* iscsymf.c: Ditto.
	* jamfile: Ditto.
	* main.c: Ditto.
	* msvcrt.def.in: Ditto.
	* strcasecmp.c: Ditto.
	* toascii.c: Ditto.
	* wcscmpi.c: Ditto.
	* include/assert.h: Ditto.
	* include/conio.h: Ditto.
	* include/ctype.h: Ditto.
	* include/direct.h: Ditto.
	* include/dirent.h: Ditto.
	* include/dos.h: Ditto.
	* include/errno.h: Ditto.
	* include/excpt.h: Ditto.
	* include/fcntl.h: Ditto.
	* include/float.h: Ditto.
	* include/io.h: Ditto.
	* include/locale.h: Ditto.
	* include/malloc.h: Ditto.
	* include/math.h: Ditto.
	* include/process.h: Ditto.
	* include/setjmp.h: Ditto.
	* include/share.h: Ditto.
	* include/signal.h: Ditto.
	* include/stdio.h: Ditto.
	* include/stdlib.h: Ditto.
	* include/string.h: Ditto.
	* include/tchar.h: Ditto.
	* include/time.h: Ditto.
	* include/wchar.h: Ditto.
	* include/sys/locking.h: Ditto.
	* include/sys/param.h: Ditto.
	* include/sys/stat.h: Ditto.
	* include/sys/timeb.h: Ditto.
	* include/sys/types.h: Ditto.
	* include/sys/utime.h: Ditto.
	* mingwex/dirent.c: Ditto.
@
text
@a303 6
#ifdef	__GNUC__
#define	_ATTRIB_NORETURN	__attribute__ ((noreturn))
#else	/* Not __GNUC__ */
#define	_ATTRIB_NORETURN
#endif	/* __GNUC__ */

d345 2
a346 2
_CRTIMP void* __cdecl	calloc	(size_t, size_t);
_CRTIMP void* __cdecl	malloc	(size_t);
d350 2
a351 2
_CRTIMP void __cdecl	abort	(void) _ATTRIB_NORETURN;
_CRTIMP void __cdecl	exit	(int) _ATTRIB_NORETURN;
d365 2
a366 2
_CRTIMP int __cdecl	abs	(int);
_CRTIMP long __cdecl	labs	(long);
d379 2
a380 2
_CRTIMP div_t __cdecl	div	(int, int);
_CRTIMP ldiv_t __cdecl	ldiv	(long, long);
d392 1
a392 1
_CRTIMP void __cdecl	_exit	(int) _ATTRIB_NORETURN;
d433 4
a436 4
_CRTIMP unsigned int __cdecl _rotl(unsigned int, int);
_CRTIMP unsigned int __cdecl _rotr(unsigned int, int);
_CRTIMP unsigned long __cdecl _lrotl(unsigned long, int);
_CRTIMP unsigned long __cdecl _lrotr(unsigned long, int);
d461 1
a461 1
void __cdecl _Exit(int) _ATTRIB_NORETURN;
d469 1
a469 1
lldiv_t	__cdecl lldiv (long long, long long);
a505 4
/*
 * Undefine the no return attribute used in some function definitions
 */
#undef	_ATTRIB_NORETURN
@


1.22
log
@	* include/stdlib.h: Guard non-ISO functions with
	!__STRICT_ANSI__, throughout.
@
text
@d3 3
a7 19
 *
 * This file is part of the Mingw32 package.
 *
 * Contributors:
 *  Created by Colin Peters <colin@@bird.fu.is.saga-u.ac.jp>
 *
 *  THIS SOFTWARE IS NOT COPYRIGHTED
 *
 *  This source code is offered for use in the public domain. You may
 *  use, modify or distribute it freely.
 *
 *  This code is distributed in the hope that it will be useful but
 *  WITHOUT ANY WARRANTY. ALL WARRANTIES, EXPRESS OR IMPLIED ARE HEREBY
 *  DISCLAIMED. This includes but is not limited to warranties of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
 *
 * $Revision: 1.6 $
 * $Author: cgf $
 * $Date: 2000/02/05 04:04:57 $
@


1.21
log
@	* include/_mingw.h (__CRT_INLINE): Define.
	* include/ctype.h: Replace 'extern inline' with __CRT_INLINE,
	throughout
	* include/inttypes.h: Likewise.
	* include/math.h: Likewise.
	* include/stdio.h: Likewise.
	* include/stdlib.h: Likewise.
	* include/string.h: Likewise.
	* include/wchar.h: Likewise.
	* include/wctype.h: Likewise.
@
text
@d80 2
d121 1
a121 1

d160 1
a221 1
#ifndef __STRICT_ANSI__
d329 1
d332 1
a332 1

d404 1
a404 1
#ifndef	__STRICT_ANSI__
@


1.20
log
@	* include/search.h: New file.
	* include/stdlib.h: Add comment about qsort, bsearch in
	search.h.
	* test_headers.c: Include search.h.
	* moldname.def.in (lfind, lsearch): Add.
@
text
@d332 1
a332 1
extern __inline__ float __cdecl strtof (const char *nptr, char **endptr)
d344 1
a344 1
extern __inline__ float __cdecl wcstof( const wchar_t *nptr, wchar_t **endptr)
d482 1
a482 1
extern __inline__ void __cdecl _Exit(int status)
d490 1
a490 1
extern __inline__ long long __cdecl llabs(long long _j)
d507 1
a507 1
extern __inline__ long long  __cdecl atoll (const char * _c)
d509 1
a509 1
extern __inline__ char*  __cdecl lltoa (long long _n, char * _c, int _i)
d511 1
a511 1
extern __inline__ char*  __cdecl ulltoa (unsigned long long _n, char * _c, int _i)
d513 1
a513 1
extern __inline__ long long  __cdecl wtoll (const wchar_t * _w)
d515 1
a515 1
extern __inline__ wchar_t*  __cdecl lltow (long long _n, wchar_t * _w, int _i)
d517 1
a517 1
extern __inline__ wchar_t*  __cdecl ulltow (unsigned long long _n, wchar_t * _w, int _i)
@


1.19
log
@	* include/stdlib.h (_Exit): Move out of __STRICT_ANSI__ block,
	but still protect inline definition with __STRICT_ANSI__
@
text
@d372 1
a372 1
/* Note: This in startup code, not imported directly from dll */
d378 1
@


1.18
log
@	* include/stdlib.h (qsort): Remove const from first parm.
	Thanks to: Tien-Ren Chen  <trchen@@sourceforge.users.net>
@
text
@d411 1
a411 6
#if !defined __NO_ISOCEXT /* extern stub in static libmingwex.a */
/* C99 function name */
void __cdecl _Exit(int) _ATTRIB_NORETURN; /* Declare to get noreturn attribute.  */
extern __inline__ void __cdecl _Exit(int status)
	{  _exit(status); }
#endif
a428 1

d477 7
@


1.17
log
@	* include/_mingw.h (_CRTIMP): Define for __GNUC__ if
	__declspec(dllimport)  supported.
	(__cdecl): Define if not already defined.
	(__stdcall): Likewise.
	* include/dirent.h: Qualify fuctions with __cdecl.
	* include/fenv.h: Likewise.
	* include/inttypes.h: Likewise.
	* include/assert.h: Qualify fuctions with __cdecl. Qualify
	CRT dll imports with _CRTIMP.
	* include/conio.h: Likewise.
	* include/ctype.h: Likewise.
	* include/direct.h: Likewise.
	* include/dos.h: Likewise.
	* include/errno.h: Likewise.
	* include/float.h: Likewise.
	* include/io.h: Likewise.
	* include/locale.h: Likewise.
	* include/malloc.h: Likewise.
	* include/math.h: Likewise.
	* include/mbctype.h: Likewise.
	* include/mbstring.h: Likewise.
	* include/process.h: Likewise.
	* include/setjmp.h: Likewise.
	* include/signal.h: Likewise.
	* include/stdio.h: Likewise.
	* include/stdlib.h: Likewise.
	* include/string.h: Likewise.
	* include/time.h: Likewise.
	* include/wchar.h: Likewise.
	* include/wctype.h: Likewise.
	* include/sys/stat.h: Likewise.
	* include/sys/timeb.h: Likewise.
	* include/sys/utime.h: Likewise.

	* include/ctype.h: Guard ctype inlines with __NO_INLINE__.
	* include/wctype.h: Guard wctype inlines with __NO_INLINE__.

	* include/stdio.h (__VALIST): Guard against prior definition.
@
text
@d380 1
a380 1
_CRTIMP void __cdecl	qsort	(const void*, size_t, size_t,
@


1.16
log
@
	* include/stdlib.h: Make words after #endif a comment.
@
text
@d92 3
a94 3
extern int*     __p___argc(void);
extern char***   __p___argv(void);
extern wchar_t***   __p___wargv(void);
d152 1
a152 1
int*	_errno(void);
d155 1
a155 1
int*	__doserrno(void);
d163 2
a164 2
  extern char *** __p__environ(void);
  extern wchar_t *** __p__wenviron(void);
d224 4
a227 4
extern unsigned int*	__p__osver(void);
extern unsigned int*	__p__winver(void);
extern unsigned int*	__p__winmajor(void);
extern unsigned int*	__p__winminor(void);
d275 1
a275 1
char**  __p__pgmptr(void);
d277 1
a277 1
wchar_t**  __p__wpgmptr(void);
d324 9
a332 9
double	atof	(const char*);
int	atoi	(const char*);
long	atol	(const char*);
int	_wtoi (const wchar_t *);
long _wtol (const wchar_t *);

double	strtod	(const char*, char**);
#if !defined __NO_ISOCEXT  /* extern stubs in static libmingwex.a */
extern __inline__ float strtof (const char *nptr, char **endptr)
d334 1
a334 1
long double strtold (const char * __restrict__, char ** __restrict__);
d337 2
a338 2
long	strtol	(const char*, char**, int);
unsigned long	strtoul	(const char*, char**, int);
d342 1
a342 1
double	wcstod	(const wchar_t*, wchar_t**);
d344 1
a344 1
extern __inline__ float wcstof( const wchar_t *nptr, wchar_t **endptr)
d346 1
a346 1
long double wcstold (const wchar_t * __restrict__, wchar_t ** __restrict__);
d349 2
a350 2
long	wcstol	(const wchar_t*, wchar_t**, int);
unsigned long	wcstoul (const wchar_t*, wchar_t**, int);
d354 2
a355 2
size_t	wcstombs	(char*, const wchar_t*, size_t);
int	wctomb		(char*, wchar_t);
d357 3
a359 23
int	mblen		(const char*, size_t);
size_t	mbstowcs	(wchar_t*, const char*, size_t);
int	mbtowc		(wchar_t*, const char*, size_t);

int	rand	(void);
void	srand	(unsigned int);

void*	calloc	(size_t, size_t);
void*	malloc	(size_t);
void*	realloc	(void*, size_t);
void	free	(void*);

void	abort	(void) _ATTRIB_NORETURN;
void	exit	(int) _ATTRIB_NORETURN;
int	atexit	(void (*)(void));

int	system	(const char*);
char*	getenv	(const char*);

void*	bsearch	(const void*, const void*, size_t, size_t, 
                 int (*)(const void*, const void*));
void	qsort	(const void*, size_t, size_t,
                 int (*)(const void*, const void*));
d361 24
a384 2
int	abs	(int);
long	labs	(long);
d397 2
a398 2
div_t	div	(int, int);
ldiv_t	ldiv	(long, long);
d406 3
a408 3
void	_beep (unsigned int, unsigned int);
void	_seterrormode (int);
void	_sleep (unsigned long);
d410 1
a410 1
void	_exit	(int) _ATTRIB_NORETURN;
d413 2
a414 2
void _Exit(int) _ATTRIB_NORETURN; /* Declare to get noreturn attribute.  */
extern __inline__ void _Exit(int status)
d418 1
d420 1
a420 1
_onexit_t _onexit( _onexit_t );
d422 2
a423 2
int	_putenv	(const char*);
void	_searchenv (const char*, const char*, char*);
d426 3
a428 3
char*	_ecvt (double, int, int*, int*);
char*	_fcvt (double, int, int*, int*);
char*	_gcvt (double, int, char*);
d430 3
a432 3
void	_makepath (char*, const char*, const char*, const char*, const char*);
void	_splitpath (const char*, char*, char*, char*, char*);
char*	_fullpath (char*, const char*, size_t);
d435 6
a440 6
char*	_itoa (int, char*, int);
char*	_ltoa (long, char*, int);
char*   _ultoa(unsigned long, char*, int);
wchar_t*  _itow (int, wchar_t*, int);
wchar_t*  _ltow (long, wchar_t*, int);
wchar_t*  _ultow (unsigned long, wchar_t*, int);
d443 18
a460 18
__int64	_atoi64(const char *);
char*	_i64toa(__int64, char *, int);
char*	_ui64toa(unsigned __int64, char *, int);
__int64	_wtoi64(const wchar_t *);
wchar_t* _i64tow(__int64, wchar_t *, int);
wchar_t* _ui64tow(unsigned __int64, wchar_t *, int);

wchar_t* _wgetenv(const wchar_t*);
int	 _wputenv(const wchar_t*);
void	_wsearchenv(const wchar_t*, const wchar_t*, wchar_t*);
void    _wmakepath(wchar_t*, const wchar_t*, const wchar_t*, const wchar_t*, const wchar_t*);
void	_wsplitpath (const wchar_t*, wchar_t*, wchar_t*, wchar_t*, wchar_t*);
wchar_t*    _wfullpath (wchar_t*, const wchar_t*, size_t);

unsigned int _rotl(unsigned int, int);
unsigned int _rotr(unsigned int, int);
unsigned long _lrotl(unsigned long, int);
unsigned long _lrotr(unsigned long, int);
d465 2
a466 2
int	putenv (const char*);
void	searchenv (const char*, const char*, char*);
d468 2
a469 2
char*	itoa (int, char*, int);
char*	ltoa (long, char*, int);
d472 3
a474 3
char*	ecvt (double, int, int*, int*);
char*	fcvt (double, int, int*, int*);
char*	gcvt (double, int, char*);
d486 1
a486 1
lldiv_t	lldiv (long long, long long);
d488 1
a488 1
extern __inline__ long long llabs(long long _j)
d491 2
a492 2
long long strtoll (const char* __restrict__, char** __restrict, int);
unsigned long long strtoull (const char* __restrict__, char** __restrict__, int);
d495 1
a495 1
long long atoll (const char *);
d498 5
a502 5
long long wtoll(const wchar_t *);
char* lltoa(long long, char *, int);
char* ulltoa(unsigned long long , char *, int);
wchar_t* lltow(long long, wchar_t *, int);
wchar_t* ulltow(unsigned long long, wchar_t *, int);
d505 1
a505 1
extern __inline__ long long atoll (const char * _c)
d507 1
a507 1
extern __inline__ char* lltoa(long long _n, char * _c, int _i)
d509 1
a509 1
extern __inline__ char* ulltoa(unsigned long long _n, char * _c, int _i)
d511 1
a511 1
extern __inline__ long long wtoll(const wchar_t * _w)
d513 1
a513 1
extern __inline__ wchar_t* lltow(long long _n, wchar_t * _w, int _i)
d515 1
a515 1
extern __inline__ wchar_t* ulltow(unsigned long long _n, wchar_t * _w, int _i)
@


1.15
log
@	* include/stdlib.h (_osver, _winver, _winmajor,
	_winminor): Declare as direct imports from dll if
	__DECLSPEC_SUPPORTED.
@
text
@d239 1
a239 1
#endif __DECLSPEC_SUPPORTED
@


1.14
log
@Add strtold and wcstold to libmingwex.a

	* mingwex/strtold.c: New file.
	* mingwex/wcstold.c: New file.
	* mingwex/ldtoa.c: New file.
	* mingwex/math/cephes_emath.h: New file.
	* mingwex/math/cephes_emath.c: New file.
	* mingwex/Makefile.in (DISTFILES): Add new files.
	(MATH_DISTFILES): Ditto.
	(STDLIB_OBJS): New. Define as strtold.c wcstold.c.
	(MATH_OBJS): Add cephes_emath.o.
	(LIB_OBJS): Add $(STDLIB_OBJS).
	* include/stdlib.h (strtold, wcstold): Add prototypes.
	* include/wchar.h (wcstold): Add prototype.

Add missing ChangeLog entry for 2002-11-09.
@
text
@d229 11
a239 4
#define _osver		(*__p__osver())
#define _winver		(*__p__winver())
#define _winmajor	(*__p__winmajor())
#define _winminor	(*__p__winminor())
@


1.13
log
@2002-10-19  Danny Smith  <dannysmith@@users.sourceforge.net>

	* crt1.c: Define new macro __IN_MINGW_RUNTIME before including
	stdlib.h. Comment on reason.
	Define WIN32_MEAN_AND_LEAN before including windows.h
	* include/stdlib.h (_fmode): Protect declaration as dllimported
	variable with __IN_MINGW_RUNTIME.

2002-10-19  Igor Pechtchanski  <pechtcha@@cs.nyu.edu>

	* crt1.c: Include stdlib.h.
@
text
@d327 1
d339 1
@


1.12
log
@	* include/fcntl.h (_fmode): Remove declarations and
	compatibility defines.
	(_setmode, setmode): Remove prototypes.
	* include/stdlib (_fmode): Add declarations and
	compatibility defines.  Change type to int.
	* include/io.h (_setmode, setmode): Add prototypes.
	* samples/fmode/all.c: Adjust includes.
	* samples/fmode/test.c: Likewise.
	* crt1.c (_CRT_fmode): Declare as int.
	* CRTfmode.c (_CRT_fmode): Likewise.

	* include/stdlib: Remove comment about MB_CUR_MAX.
@
text
@d287 1
a287 1
#ifndef __DECLSPEC_SUPPORTED
d407 1
a407 1
typedef  int (* _onexit_t)(void); 
@


1.11
log
@	* include/stdlib.h (_imp____mbcur_max): add missing ';'.
	(_imp____mbcur_max_dll): Likewise.
@
text
@a122 2

/* Also defined in stdlib.h */
d143 1
d282 26
@


1.10
log
@2002-06-18  Casper S. Hornstrup  <chorns@@users.sourceforge.net>

	* include/_mingw.h (__MINGW_IMPORT): Check for prior definition before
	defining.
	* include/excpt.h (): Include windef.h not windows.h.
	* include/fcntl.h (_O_SHORT_LIVED): Add define.
	(_chmod): Add prototype.
        (_creat): Correct prototype.
	(SH_DENY*): Rename defines to _SH_DENY*.
	(SH_DENY*): Add Non-ANSI names for _SH_DENY*.
	include/stdio.h (_IOMYBUF, _IOEOF, _IOERR, _IOSTRG,
	_IOAPPEND): Add defines.
	(_wfindfirst): Correct prototype.
	(_wfdopen): Add prototype.
	* include/stdlib.h (_rotl, _rotr, _lrotl, _lrotr): Add
	prototypes.
	* include/string.h (_mbschr, _mbstok, _mbsncat): Remove
	 prototypes.
	(_wcsdup): Correct prototype.
	* include/mbstring.h: Remove comments about _mbschr, _mbstok,
	 _mbsncat being in string.h.
	* include/wchar.h (_wfindfirst): Correct prototype.
	* include/tchar.h (_tfdopen): Add _UNICODE mappings.
@
text
@d137 1
a137 1
   extern int* _imp____mbcur_max
d140 1
a140 1
   extern int*  _imp____mbcur_max_dll
@


1.10.6.1
log
@	* include/stdlib.h: Move _Exit prototype into main C99 block.
	Use C++ c-header compatability defines.
@
text
@d76 3
a78 1
__BEGIN_CGLOBAL_NAMESPACE
a291 3
__END_CGLOBAL_NAMESPACE
__BEGIN_CSTD_NAMESPACE

d295 2
a306 9
__END_CSTD_NAMESPACE
__BEGIN_CGLOBAL_NAMESPACE

int	_wtoi (const wchar_t *);
long _wtol (const wchar_t *);

__END_CGLOBAL_NAMESPACE
__BEGIN_CSTD_NAMESPACE

a363 3
__END_CSTD_NAMESPACE
__BEGIN_CGLOBAL_NAMESPACE

d375 6
a443 1
/* NOTE: These are in global namespace for now. */
d447 1
a447 5
void _Exit(int) _ATTRIB_NORETURN; /* Declare to get noreturn attribute.  */
#ifndef __STRICT_ANSI__ /* inline using non-ANSI exit */
extern __inline__ void _Exit(int status)
	{ __CGLOBAL _exit(status); }
#endif
a448 1
typedef struct { long long quot, rem; } lldiv_t;
d457 1
a457 1
#if defined (__MSVCRT__) /* stub for MS _i64 versions */ 
a458 8
#if !defined (__STRICT_ANSI__)
  /* inline using non-ansi function */
extern __inline__ long long  atoll (const char * _c)
	{ return  __CGLOBAL _atoi64 (_c); }
#endif
#endif
#endif /* __NO_ISOCEXT */

a459 2
#if !defined __NO_ISOCEXT /* externs in static libmingwex.a */
#if defined (__MSVCRT__) /* these are stubs for MS _i64 versions */ 
d461 1
a461 1

a463 2

long long wtoll(const wchar_t *);
d468 2
d480 1
a481 1
#endif /* (__STRICT_ANSI__)  */
d483 1
a485 2
__END_CGLOBAL_NAMESPACE

d491 3
@


1.10.6.2
log
@	* include/cytpe.h: Prefix identifiers used as args of inlines
	with '__', throughout.
	* include/inttypes.h: Likewise.
	* include/math.h: Likewise.
	* include/stdio.h: Likewise.
	* include/stdlib.h: Likewise.
	* include/wchar.h: Likewise.
	* include/wctype.h: Likewise.
@
text
@d299 2
a300 2
extern __inline__ float strtof (const char *__nptr, char **__endptr)
  { return (strtod (__nptr, __endptr));}
d319 2
a320 2
extern __inline__ float wcstof( const wchar_t *__nptr, wchar_t **__endptr)
{  return (wcstod(__nptr, __endptr)); }
d455 2
a456 2
extern __inline__ void _Exit(int __status)
	{ __CGLOBAL _exit(__status); }
d462 2
a463 2
extern __inline__ long long llabs(long long __j)
  {return (__j >= 0 ? __j : -__j);}
d472 2
a473 2
extern __inline__ long long  atoll (const char * __c)
	{ return  __CGLOBAL _atoi64 (__c); }
d491 10
a500 10
extern __inline__ char* lltoa(long long __n, char * __c, int __i)
	{ return _i64toa (__n, __c, __i); }
extern __inline__ char* ulltoa(unsigned long long __n, char * __c, int __i)
	{ return _ui64toa (__n, __c, __i); }
extern __inline__ long long wtoll(const wchar_t * __w)
 	{ return _wtoi64 (__w); }
extern __inline__ wchar_t* lltow(long long __n, wchar_t * __w, int __i)
	{ return _i64tow (__n, __w, __i); } 
extern __inline__ wchar_t* ulltow(unsigned long long __n, wchar_t * __w, int __i)
	{ return _ui64tow (__n, __w, __i); } 
@


1.10.6.3
log
@Merge from mingw mainline.
@
text
@d121 2
d135 1
a135 1
   extern int* _imp____mbcur_max;
d138 1
a138 1
   extern int*  _imp____mbcur_max_dll;
a142 1

a280 26

/*
 * This variable determines the default file mode.
 * TODO: Which flags work?
 */
#ifndef __DECLSPEC_SUPPORTED

#ifdef __MSVCRT__
extern int* _imp___fmode;
#define	_fmode	(*_imp___fmode)
#else
/* CRTDLL */
extern int* _imp___fmode_dll;
#define	_fmode	(*_imp___fmode_dll)
#endif

#else /* __DECLSPEC_SUPPORTED */

#ifdef __MSVCRT__
__MINGW_IMPORT  int _fmode;
#else /* ! __MSVCRT__ */
__MINGW_IMPORT  int _fmode_dll;
#define	_fmode	_fmode_dll
#endif /* ! __MSVCRT__ */

#endif /* __DECLSPEC_SUPPORTED */
@


1.10.6.4
log
@	* include/ctype: Qualify wint_t with __CSTD
	when in global namespace.
	* include/wctype:Likewise.
	* include/stdio.h: Qualify wint_t and size_t with __CSTD
	when in global namespace.
	* include/stdlib.h: Qualify size_t with __CSTD
	when in global namespace.
	* include/string.h: Likewise.
	* include/time.h: Likewise.
	* include/sys/types.h: Inject time_t into global namespace.
@
text
@d448 1
a448 1
wchar_t*    _wfullpath (wchar_t*, const wchar_t*, __CSTD size_t);
@


1.10.6.5
log
@	* include/stdio.h: Qualify another size_t with __CSTD.
	* include/stdlib.h: Likewise.
	* include/wchar.h: Qualify size_t with __CSTD,
	when in global namespace.
@
text
@d425 1
a425 1
char*	_fullpath (char*, const char*, __CSTD size_t);
@


1.10.6.6
log
@	Merge from mingw trunk (changes since 2002-10-04).
@
text
@d285 1
a285 1
#if !defined (__DECLSPEC_SUPPORTED) || defined (__IN_MINGW_RUNTIME)
@


1.10.6.7
log
@	Merge from mingw trunk (changes since 2002-11-19).
@
text
@a325 1
long double strtold (const char * __restrict__, char ** __restrict__);
a345 1
long double wcstold (const wchar_t * __restrict__, wchar_t ** __restrict__);
@


1.10.6.8
log
@	Merge from mingw trunk (changes since 2002-12-10).
@
text
@d227 4
a230 11
#ifndef __DECLSPEC_SUPPORTED
# define _osver		(*__p__osver())
# define _winver	(*__p__winver())
# define _winmajor	(*__p__winmajor())
# define _winminor	(*__p__winminor())
#else
__MINGW_IMPORT unsigned int _osver;
__MINGW_IMPORT unsigned int _winver;
__MINGW_IMPORT unsigned int _winmajor;
__MINGW_IMPORT unsigned int _winminor;
#endif __DECLSPEC_SUPPORTED
@


1.10.6.9
log
@	Merge from mingw trunk (changes since 2003-01-27).
@
text
@d90 3
a92 3
_CRTIMP int*  __cdecl   __p___argc(void);
_CRTIMP char*** __cdecl  __p___argv(void);
_CRTIMP wchar_t***  __cdecl __p___wargv(void);
d150 2
a151 2
 _CRTIMP int* __cdecl	_errno(void);
#define	errno	 (*_errno())
d153 2
a154 2
 _CRTIMP int* __cdecl	__doserrno(void);
#define	_doserrno (*__doserrno())
d161 2
a162 2
_CRTIMP char *** __cdecl __p__environ(void);
_CRTIMP wchar_t *** __cdecl  __p__wenviron(void);
d222 4
a225 4
_CRTIMP unsigned __cdecl int*	__p__osver(void);
_CRTIMP unsigned __cdecl int*	__p__winver(void);
_CRTIMP unsigned __cdecl int*	__p__winmajor(void);
_CRTIMP unsigned __cdecl int*	__p__winminor(void);
d237 1
a237 1
#endif /* __DECLSPEC_SUPPORTED */
d273 1
a273 1
_CRTIMP char** __cdecl __p__pgmptr(void);
d275 1
a275 1
_CRTIMP wchar_t** __cdecl __p__wpgmptr(void);
d325 3
a327 3
_CRTIMP double __cdecl	atof (const char*);
_CRTIMP int __cdecl	atoi (const char*);
_CRTIMP long __cdecl	atol (const char*);
d329 1
a329 1
_CRTIMP double __cdecl	strtod (const char*, char**);
d331 1
a331 1
extern __inline__ float __cdecl strtof (const char *__nptr, char **__endptr)
d333 1
a333 1
long double __cdecl strtold (const char * __restrict__, char ** __restrict__);
d336 2
a337 2
_CRTIMP long __cdecl strtol (const char*, char**, int);
_CRTIMP unsigned long __cdecl strtoul (const char*, char**, int);
d342 2
a343 2
_CRTIMP int __cdecl _wtoi (const wchar_t *);
_CRTIMP long __cdecl _wtol (const wchar_t *);
d350 1
a350 1
_CRTIMP double __cdecl	wcstod (const wchar_t*, wchar_t**);
d352 1
a352 1
extern __inline__ float __cdecl wcstof (const wchar_t *__nptr, wchar_t **__endptr)
d354 1
a354 1
long double __cdecl wcstold (const wchar_t * __restrict__, wchar_t ** __restrict__);
d357 2
a358 2
_CRTIMP long __cdecl wcstol (const wchar_t*, wchar_t**, int);
_CRTIMP unsigned long __cdecl wcstoul (const wchar_t*, wchar_t**, int);
d362 2
a363 2
_CRTIMP size_t __cdecl wcstombs (char*, const wchar_t*, size_t);
_CRTIMP int __cdecl wctomb (char*, wchar_t);
d365 23
a387 23
_CRTIMP int __cdecl mblen (const char*, size_t);
_CRTIMP size_t __cdecl mbstowcs (wchar_t*, const char*, size_t);
_CRTIMP int __cdecl mbtowc (wchar_t*, const char*, size_t);

_CRTIMP int __cdecl rand (void);
_CRTIMP void __cdecl srand (unsigned int);

_CRTIMP void* __cdecl calloc (size_t, size_t);
_CRTIMP void* __cdecl malloc (size_t);
_CRTIMP void* __cdecl realloc (void*, size_t);
_CRTIMP void __cdecl free (void*);

_CRTIMP void __cdecl	abort (void) _ATTRIB_NORETURN;
_CRTIMP void __cdecl	exit (int) _ATTRIB_NORETURN;
int __cdecl	atexit (void (*)(void));

_CRTIMP int __cdecl system (const char*);
_CRTIMP char* __cdecl getenv (const char*);

_CRTIMP void* __cdecl bsearch (const void*, const void*, size_t, size_t, 
			       int (*)(const void*, const void*));
_CRTIMP void __cdecl qsort (void*, size_t, size_t,
			    int (*)(const void*, const void*));
d389 2
a390 2
_CRTIMP int __cdecl	abs (int);
_CRTIMP long __cdecl	labs (long);
d403 2
a404 2
_CRTIMP div_t __cdecl	div (int, int);
_CRTIMP ldiv_t __cdecl	ldiv (long, long);
d415 3
a417 3
_CRTIMP void __cdecl	_beep (unsigned int, unsigned int);
_CRTIMP void __cdecl	_seterrormode (int);
_CRTIMP void __cdecl	_sleep (unsigned long);
d419 1
a419 1
_CRTIMP void __cdecl	_exit (int) _ATTRIB_NORETURN;
d424 2
a425 2
_CRTIMP int __cdecl _putenv (const char*);
_CRTIMP void __cdecl _searchenv (const char*, const char*, char*);
d428 3
a430 3
_CRTIMP char* __cdecl _ecvt (double, int, int*, int*);
_CRTIMP char* __cdecl _fcvt (double, int, int*, int*);
_CRTIMP char* __cdecl _gcvt (double, int, char*);
d432 3
a434 3
_CRTIMP void __cdecl _makepath (char*, const char*, const char*, const char*, const char*);
_CRTIMP void __cdecl _splitpath (const char*, char*, char*, char*, char*);
_CRTIMP char* __cdecl _fullpath (char*, const char*, __CSTD size_t);
d437 3
a439 3
_CRTIMP char* __cdecl _itoa (int, char*, int);
_CRTIMP char* __cdecl _ltoa (long, char*, int);
_CRTIMP char* __cdecl _ultoa(unsigned long, char*, int);
d441 2
a442 2
_CRTIMP wchar_t* __cdecl  _ltow (long, wchar_t*, int);
_CRTIMP wchar_t* __cdecl  _ultow (unsigned long, wchar_t*, int);
d446 2
a447 2
_CRTIMP char* __cdecl _i64toa(__int64, char *, int);
_CRTIMP char* __cdecl _ui64toa(unsigned __int64, char *, int);
d449 2
a450 2
_CRTIMP wchar_t* __cdecl _i64tow(__int64, wchar_t *, int);
_CRTIMP wchar_t* __cdecl _ui64tow(unsigned __int64, wchar_t *, int);
d452 11
a462 11
_CRTIMP wchar_t* __cdecl _wgetenv(const wchar_t*);
_CRTIMP int __cdecl	 _wputenv(const wchar_t*);
_CRTIMP void __cdecl	_wsearchenv(const wchar_t*, const wchar_t*, wchar_t*);
_CRTIMP void __cdecl    _wmakepath(wchar_t*, const wchar_t*, const wchar_t*, const wchar_t*, const wchar_t*);
_CRTIMP void __cdecl	_wsplitpath (const wchar_t*, wchar_t*, wchar_t*, wchar_t*, wchar_t*);
_CRTIMP wchar_t* __cdecl  __cdecl _wfullpath (wchar_t*, const wchar_t*, __CSTD size_t);

_CRTIMP unsigned int __cdecl _rotl(unsigned int, int);
_CRTIMP unsigned int __cdecl _rotr(unsigned int, int);
_CRTIMP unsigned long __cdecl _lrotl(unsigned long, int);
_CRTIMP unsigned long __cdecl _lrotr(unsigned long, int);
d467 2
a468 2
_CRTIMP int __cdecl	putenv (const char*);
_CRTIMP void __cdecl	searchenv (const char*, const char*, char*);
d470 2
a471 2
_CRTIMP char* __cdecl itoa (int, char*, int);
_CRTIMP char* __cdecl ltoa (long, char*, int);
d474 3
a476 3
_CRTIMP char* __cdecl ecvt (double, int, int*, int*);
_CRTIMP char* __cdecl fcvt (double, int, int*, int*);
_CRTIMP char* __cdecl gcvt (double, int, char*);
d487 1
a487 1
void __cdecl _Exit(int) _ATTRIB_NORETURN; /* Declare to get noreturn attribute.  */
d494 1
a494 1
lldiv_t	__cdecl lldiv (long long, long long);
d496 1
a496 1
extern __inline__ long long __cdecl llabs(long long __j)
d499 2
a500 2
long long __cdecl strtoll (const char* __restrict__, char** __restrict, int);
unsigned long long __cdecl strtoull (const char* __restrict__, char** __restrict__, int);
d503 1
a503 1
long long __cdecl atoll (const char *);
d506 1
a506 1
extern __inline__ long long __cdecl atoll (const char * __c)
d517 2
a518 2
char* __cdecl lltoa(long long, char *, int);
char* __cdecl ulltoa(unsigned long long , char *, int);
d520 3
a522 3
long long __cdecl wtoll(const wchar_t *);
wchar_t* __cdecl lltow(long long, wchar_t *, int);
wchar_t* __cdecl ulltow(unsigned long long, wchar_t *, int);
d525 1
a525 1
extern __inline__ char* __cdecl lltoa(long long __n, char * __c, int __i)
d527 1
a527 1
extern __inline__ char* __cdecl ulltoa(unsigned long long __n, char * __c, int __i)
d529 1
a529 1
extern __inline__ long long __cdecl wtoll(const wchar_t * __w)
d531 1
a531 1
extern __inline__ wchar_t* __cdecl lltow(long long __n, wchar_t * __w, int __i)
d533 1
a533 1
extern __inline__ wchar_t* __cdecl ulltow(unsigned long long __n, wchar_t * __w, int __i)
@


1.10.6.10
log
@	* include/_mingw.h: Don't include <bits/c++config.h>.
	(__MINGW_USE_NAMESPACES): Define as _GLIBCPP_USE_NAMESPACES.
	* include/ctype.h: Whitespace changes.
	* include/locale.h: Remove duplicate inclusion of <stddef.h>.
	* include/stdlib.h: (strtof, strtold): Move out of std namespace.
	(wcstof, wcstold): Likewise.
	* include/time.h (strftime): Remove duplicate declaration.
	(_wasctime): Qualify tm with __CSTD.
	* include/wchar.h (wcstof, wcstold): Move out of std namespace.
	(wcstoll, wcstoull): Likewise.
	* include/sys/types.h (__MINGW_USE_NAMESPACES): Use instead of
	__USE_STD_CXX.
@
text
@d33 1
d73 1
d330 6
d338 1
d340 4
a344 5
#if !defined __NO_ISOCEXT  /* extern stubs in static libmingwex.a */
__BEGIN_CGLOBAL_NAMESPACE  /* C99 */
extern __inline__ float __cdecl strtof (const char *__nptr, char **__endptr)
  { return (__CSTD strtod (__nptr, __endptr));}
long double __cdecl strtold (const char * __restrict__, char ** __restrict__);
d346 1
a346 1
#endif /* __NO_ISOCEXT */
d348 2
a349 4
#ifndef _WSTDLIB_DEFINED /* also declared in wchar.h */
__BEGIN_CSTD_NAMESPACE
_CRTIMP long __cdecl wcstol (const wchar_t*, wchar_t**, int);
_CRTIMP unsigned long __cdecl wcstoul (const wchar_t*, wchar_t**, int);
a350 1
__END_CSTD_NAMESPACE
d352 2
a353 3
__BEGIN_CGLOBAL_NAMESPACE /* C99 */
extern __inline__ float __cdecl wcstof( const wchar_t *__nptr, wchar_t **__endptr)
	{  return __CSTD wcstod(__nptr, __endptr); }
a354 1
__END_CGLOBAL_NAMESPACE
d356 4
a359 1
#define  _WSTDLIB_DEFINED
a361 1
__BEGIN_CSTD_NAMESPACE
a443 3
_CRTIMP int __cdecl _wtoi (const wchar_t *);
_CRTIMP long __cdecl _wtol (const wchar_t *);

d482 1
a482 1
/* C99 */
d484 1
d486 1
@


1.9
log
@	* include/_mingw.h: Increment version to 2.0.
	* Makefile.in: Ditto.
	Merge in mingwex branch.
@
text
@d419 5
@


1.8
log
@Merge MinGW changes
@
text
@d104 4
a107 4
extern int*    __imp___argc_dll;
extern char***  __imp___argv_dll;
#define __argc (*__imp___argc_dll)
#define __argv (*__imp___argv_dll)
d124 1
d126 1
d130 1
a130 1
# else /* not __MSVCRT */
d133 11
a143 1
# endif /* not __MSVCRT */
a144 1

d170 2
a171 2
    extern char *** __imp__environ_dll;
#   define _environ (*__imp__environ_dll)
d184 2
a185 2
  extern int*	__imp__sys_nerr;
# define	sys_nerr	(*__imp__sys_nerr)
d198 2
a199 2
  extern int*	__imp__sys_nerr_dll;
# define sys_nerr	(*__imp__sys_nerr_dll)
d208 2
a209 2
extern char***	__imp__sys_errlist;
#define	sys_errlist	(*__imp__sys_errlist)
d276 1
a276 1
# define _pgmptr (*__imp__pgmptr_dll)
d299 10
d310 5
a314 1
long	strtol	(const char*, char**, int);
a315 2

unsigned long	strtoul	(const char*, char**, int);
d317 2
a363 1

d375 6
a380 1

d437 43
@


1.8.4.1
log
@Added fenv.h inttypes.h
@
text
@d288 3
a290 4
#if !defined __NO_ISOCEXT  /* extern stubs in static libmingwex.a */
extern __inline__ float strtof (const char *nptr, char **endptr)
  { return (strtod (nptr, endptr));}
#endif /* __NO_ISOCEXT */
a291 1
long	strtol	(const char*, char**, int);
a292 10

#ifndef _WSTDLIB_DEFINED
/*  also declared in wchar.h */
double	wcstod	(const wchar_t*, wchar_t**);
#if !defined __NO_ISOCEXT /* extern stub in static libmingwex.a */
extern __inline__ float wcstof( const wchar_t *nptr, wchar_t **endptr)
{  return (wcstod(nptr, endptr)); }
#endif /* __NO_ISOCEXT */

long	wcstol	(const wchar_t*, wchar_t**, int);
a293 2
#define _WSTDLIB_DEFINED
#endif
d339 1
a350 3
/* C99 function name */
static __inline__ void _Exit(int status)
	{  _exit(status); }
a407 43

/* C99 names */

#if !defined __NO_ISOCEXT /* externs in static libmingwex.a */

typedef struct { long long quot, rem; } lldiv_t;

lldiv_t	lldiv (long long, long long);

extern __inline__ long long llabs(long long _j)
  {return (_j >= 0 ? _j : -_j);}

long long strtoll (const char* __restrict__, char** __restrict, int);
unsigned long long strtoull (const char* __restrict__, char** __restrict__, int);

#if defined (__MSVCRT__) /* these are stubs for MS _i64 versions */ 
long long atoll (const char *);

#if !defined (__STRICT_ANSI__)
long long wtoll(const wchar_t *);
char* lltoa(long long, char *, int);
char* ulltoa(unsigned long long , char *, int);
wchar_t* lltow(long long, wchar_t *, int);
wchar_t* ulltow(unsigned long long, wchar_t *, int);

  /* inline using non-ansi functions */
extern __inline__ long long atoll (const char * _c)
	{ return _atoi64 (_c); }
extern __inline__ char* lltoa(long long _n, char * _c, int _i)
	{ return _i64toa (_n, _c, _i); }
extern __inline__ char* ulltoa(unsigned long long _n, char * _c, int _i)
	{ return _ui64toa (_n, _c, _i); }
extern __inline__ long long wtoll(const wchar_t * _w)
 	{ return _wtoi64 (_w); }
extern __inline__ wchar_t* lltow(long long _n, wchar_t * _w, int _i)
	{ return _i64tow (_n, _w, _i); } 
extern __inline__ wchar_t* ulltow(unsigned long long _n, wchar_t * _w, int _i)
	{ return _ui64tow (_n, _w, _i); } 
#endif /* (__STRICT_ANSI__)  */

#endif /* __MSVCRT__ */

#endif /* !__NO_ISOCEXT */
@


1.8.4.2
log
@	* include/math.h (DOMAIN, SING, OVERFLOW, UNDERFLOW,
	TLOSS, PLOSS): Move oldname defines back, following
	the underscored names.
	(_controlfp, _control87, _clearfp, _statusfp, _fpreset,
	_fpecode): Remove prototypes copied from float.h.
	(nan, nanf): Move into block protected against RC_INVOKED
	and __cplusplus.
	* include/stdlib.h (_Exit): Change from static inline to
	extern inline.
	* mingwex/_Exit.c : New file.
	* mingwex/Makefile.in: Add _Exit.o to libmingwex.a.
@
text
@a363 1
#if !defined __NO_ISOCEXT /* extern stub in static libmingwex.a */
d365 1
a365 2
void _Exit(int) _ATTRIB_NORETURN; /* Declare to get noreturn attribute.  */
extern __inline__ void _Exit(int status)
d367 1
a367 1
#endif
@


1.8.4.3
log
@	* include/dos.h: Change  prefix "__imp_"  to "_imp__" for
	__GNUC__ without __DECLSPEC_SUPPORTED.
	* include/fnctl.h: Likewise.
	* include/math.h: Likewise.
	* include/stdio.h: Likewise.
	* include/stdlib.h: Likewise.
	* include/time.h: Likewise.
	* include/wctype.h: Likewise.
	* include/ctype.h: Likewise.
@
text
@d104 4
a107 4
extern int*    _imp____argc_dll;
extern char***  _imp____argv_dll;
#define __argc (*_imp____argc_dll)
#define __argv (*_imp____argv_dll)
a123 1
/* Also defined in stdlib.h */
a124 1
#ifdef __DECLSPEC_SUPPORTED
d128 1
a128 1
# else		/* not __MSVCRT */
d131 2
a132 1
# endif		/* not __MSVCRT */
a133 10
#else		/* ! __DECLSPEC_SUPPORTED */
# ifdef __MSVCRT__
   extern int* _imp____mbcur_max
#  define MB_CUR_MAX (*_imp____mb_cur_max)
# else		/* not __MSVCRT */
   extern int*  _imp____mbcur_max_dll
#  define MB_CUR_MAX (*_imp____mb_cur_max_dll)
# endif 	/* not __MSVCRT */
#endif  	/*  __DECLSPEC_SUPPORTED */
#endif  /* MB_CUR_MAX */
d159 2
a160 2
    extern char *** _imp___environ_dll;
#   define _environ (*_imp___environ_dll)
d173 2
a174 2
  extern int*	_imp___sys_nerr;
# define	sys_nerr	(*_imp___sys_nerr)
d187 2
a188 2
  extern int*	_imp___sys_nerr_dll;
# define sys_nerr	(*_imp___sys_nerr_dll)
d197 2
a198 2
extern char***	_imp__sys_errlist;
#define	sys_errlist	(*_imp___sys_errlist)
d265 1
a265 1
# define _pgmptr (*_imp___pgmptr_dll)
@


1.7
log
@Merge MinGW CVS differences
@
text
@d352 4
@


1.6
log
@
2001-10-30  Danny Smith  <dannysmith@@users.sourceforge.net>

	* include/io.h (_commit): Add declaration.
	Thanks to: "stefan" <stefan@@lkcc.org>

2001-10-30  Danny Smith  <dannysmith@@users.sourceforge.net>

	* include/sys/stat.h: Make S_IS* macros safer.

2001-10-27  Danny Smith  <dannysmith@@users.sourceforge.net>

	* include/stdlib.h (EXIT_FAILURE): Change value to 1.

2001-10-12  Danny Smith  <dannysmith@@users.sourceforge.net>

	* include/stdlib.h (__p__environ, __p__wenviron): Use
	__STDC__ prototypes.
@
text
@d18 1
a18 1
 *  DISCLAMED. This includes but is not limited to warranties of
@


1.5
log
@
	* include/stdlib.h (_wpgmptr): Don't declare ifndef __MSVCRT__.
	* include/stdio.h (_IORW): Change constant to 0x0080.
	(TMP_MAX): Add new define.
	(_P_tmpdir): Ditto.
	(_wP_tmpdir): Ditto.
	(L_tmpnam): Change constant to 16.
	* include/malloc.h: Fix non-ANSI comment after #endif.
	* profile/Makefile.in (mkinstalldirs): Correct relative path.
@
text
@d51 1
a51 1
#define	EXIT_FAILURE	-1
d153 2
a154 2
  extern char *** __p__environ();
  extern wchar_t *** __p__wenviron();
@


1.4
log
@
	*include/stdlib.h (__p__pgmptr): add prototype.
	(__p__wpgmptr): likewise.
	(_pgmptr_dll): move declaration from dos.h.
	(_wpgmptr_dll): likewise.
	(_pgmptr): conditional define (MSVCT/CRTDLL).
	(_wpgmptr): likewise.
	*include/dos.h (_base*_dll variables): declare only for CRTDLL.
	(_os*_dll variables): likewise.
	(_pgmptr_dll): remove declaration and associated defines to stdlib.h.
	(_wpgmptr_dll): likewise.
@
text
@a265 2
  extern wchar_t** __imp_wpgmptr_dll;
# define _wpgmptr (*__imp__wpgmptr_dll)
a268 2
 __MINGW_IMPORT wchar_t* _wpgmptr_dll;
# define _wpgmptr _wpgmptr_dll
d270 1
@


1.3
log
@
	* include/stdlib.h: Apply Danny Smith patch 102730
	2000-12-09  Danny Smith  <danny_r_smith_2001@@yahoo.co.nz>
	(_wgetenv) Correction to return type.
@
text
@d255 21
@


1.2
log
@
	* include/direct.h: add guard around MSVCRT-only prototytpes
	* include/io.h: add __int64 struct definitions and function prototypes;
		 add guard for MSVCRT-only prototypes
	* include/limits.h: add ISO C9x macros LLONG_MIN, LLONG_MAX, ULLONG_MAX
	* include/stdio.h: add wchar function prototypes (__MSVCRT__);
		 put wchar functions together to make sync with wchar.h easier
	* include/stdlib.h: add wide char functions (__MSVCRT__)
	* include/string.h: add string collation functions ( __MSVCRT__)
	* include/sys/stat.h: add __int64 struct and function ( __MSVCRT__)
	* include/tchar.h: add macros and macro function definitions
	* include/wchar.h: add wide char function prototypes ( __MSVCRT__ );
		enclose more functions in __MSVCRT__ guard;
		some oldname wide char function prototypes #if (0)'d
	* profile/gmon.h: add guard around BSD-ish typedefs
@
text
@d362 2
a363 2
int	    _wgetenv(const wchar_t*);
int	    _wputenv(const wchar_t*);
@


1.1
log
@Initial revision
@
text
@d266 2
a336 2
char*	_itoa (int, char*, int);
char*	_ltoa (long, char*, int);
a344 2
int	_wtoi (const wchar_t *);
long	_wtol (const wchar_t *);
d346 10
d358 1
a358 2
__int64	_atoi64(const char *);

a360 1
__int64	_wtoi64(const wchar_t *);
d362 7
@


1.1.1.1
log
@import winsup-2000-02-17 snapshot
@
text
@@
