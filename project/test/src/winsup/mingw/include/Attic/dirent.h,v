head	1.13;
access;
symbols
	cygwin-1_7_17-release:1.12
	cygwin-64bit-branch:1.12.0.2
	cygwin-1_7_16-release:1.12
	cygwin-1_7_15-release:1.12
	cygwin-1_7_14_2-release:1.12
	cygwin-1_7_14-release:1.12
	cygwin-1_7_12-release:1.12
	cygwin-1_7_11-release:1.12
	cygwin-1_7_10-release:1.12
	cygwin-1_7_9-release:1.10
	cygwin-1_7_8-release:1.10
	cygwin-1_7_7-release:1.9
	cygwin-1_7_5-release:1.9
	cygwin-1_7_4-release:1.9
	cygwin-1_7_3-release:1.9
	cygwin-1_7_2-release:1.9
	cygwin-1_7_1-release:1.9
	cv-branch-2:1.9.0.2
	cr-0x5f1:1.8.0.6
	cv-branch:1.8.0.4
	cr-0x3b58:1.8.0.2
	cr-0x9e:1.5.0.10
	cr-0x9d:1.5.0.8
	corinna-01:1.5
	cr-0x9c:1.5.0.6
	cr-0x9b:1.5.0.4
	cr-0x99:1.5
	Z-emcb-cygwin_daemon:1.5.0.2
	w32api-2_2:1.3
	mingw-runtime-2_4:1.3
	mingw-std-ns-branch:1.3.0.6
	mingw-runtime-2_0:1.3
	mingwex:1.2.0.10
	cygnus_cvs_20020108_pre:1.2
	Z-cygwin_daemon_merge-new_HEAD:1.1.1.1
	Z-cygwin_daemon_merge_HEAD:1.1.1.1
	cygwin_daemon:1.1.1.1.0.10;
locks; strict;
comment	@ * @;
expand	@o@;


1.13
date	2012.11.07.16.52.16;	author cgf;	state dead;
branches;
next	1.12;

1.12
date	2011.10.01.20.18.10;	author keithmarshall;	state Exp;
branches;
next	1.11;

1.11
date	2011.08.27.20.16.47;	author keithmarshall;	state Exp;
branches;
next	1.10;

1.10
date	2010.12.27.21.19.42;	author ironhead;	state Exp;
branches;
next	1.9;

1.9
date	2007.06.23.07.54.58;	author dannysmith;	state Exp;
branches;
next	1.8;

1.8
date	2004.07.30.08.27.29;	author dannysmith;	state Exp;
branches;
next	1.7;

1.7
date	2004.04.20.22.49.32;	author earnie;	state Exp;
branches;
next	1.6;

1.6
date	2004.03.11.09.41.08;	author dannysmith;	state Exp;
branches;
next	1.5;

1.5
date	2003.06.18.13.54.46;	author earnie;	state Exp;
branches;
next	1.4;

1.4
date	2003.02.10.21.13.34;	author dannysmith;	state Exp;
branches;
next	1.3;

1.3
date	2002.06.13.10.20.43;	author dannysmith;	state Exp;
branches
	1.3.6.1;
next	1.2;

1.2
date	2001.12.05.15.01.05;	author earnie;	state Exp;
branches
	1.2.10.1;
next	1.1;

1.1
date	2000.02.17.19.38.31;	author cgf;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2000.02.17.19.38.31;	author cgf;	state Exp;
branches;
next	;

1.2.10.1
date	2002.04.23.01.59.05;	author dannysmith;	state Exp;
branches;
next	1.2.10.2;

1.2.10.2
date	2002.05.15.05.15.23;	author dannysmith;	state Exp;
branches;
next	;

1.3.6.1
date	2003.03.31.22.32.19;	author dannysmith;	state Exp;
branches;
next	;


desc
@@


1.13
log
@* mingw: Delete obsolete directory.
* w32api: Ditto.
@
text
@/*
 * DIRENT.H (formerly DIRLIB.H)
 * This file has no copyright assigned and is placed in the Public Domain.
 * This file is a part of the mingw-runtime package.
 * No warranty is given; refer to the file DISCLAIMER within the package.
 *
 */
#ifndef _DIRENT_H_
#define _DIRENT_H_

/* All the headers include this file. */
#include <_mingw.h>

#include <io.h>

#ifndef RC_INVOKED

#ifdef __cplusplus
extern "C" {
#endif

struct dirent
{
	long		d_ino;		/* Always zero. */
	unsigned short	d_reclen;	/* Always zero. */
	unsigned short	d_namlen;	/* Length of name in d_name. */

	/* The following exactly mimic the layout of _finddata_t ...
	 */
	unsigned	d_type;		/* File attributes */
	time_t		d_time_create;
	time_t		d_time_access;	/* always midnight local time */
	time_t		d_time_write;
	_fsize_t	d_size;
	/*
	 * ...so that we may map a union of _finddata_t at the
	 * location of d_type (corresponding to _finddata_t.attrib),
	 * and thus map this directly to the _findfirst/_findnext
	 * returned field.
	 */
	char		d_name[FILENAME_MAX]; /* File name. */
};

/*
 * This opaque data type represents the private structure
 * through which a directory stream is referenced.
 */
typedef union __dirstream_t DIR;

DIR* __cdecl __MINGW_NOTHROW opendir (const char*);
struct dirent* __cdecl __MINGW_NOTHROW readdir (DIR*);
int __cdecl __MINGW_NOTHROW closedir (DIR*);
void __cdecl __MINGW_NOTHROW rewinddir (DIR*);
long __cdecl __MINGW_NOTHROW telldir (DIR*);
void __cdecl __MINGW_NOTHROW seekdir (DIR*, long);


/* wide char versions */

struct _wdirent
{
	long		d_ino;		/* Always zero. */
	unsigned short	d_reclen;	/* Always zero. */
	unsigned short	d_namlen;	/* Length of name in d_name. */

	/* The following exactly mimic the layout of _wfinddata_t ...
	 */
	unsigned	d_type;		/* File attributes */
    	time_t		d_time_create;	/* -1 for FAT file systems */
    	time_t		d_time_access;	/* -1 for FAT file systems */
    	time_t		d_time_write;
    	_fsize_t	d_size;
	/*
	 * ...so that we may map a union of _wfinddata_t at the
	 * location of d_type (corresponding to _wfinddata_t.attrib),
	 * and thus map this directly to the _wfindfirst/_wfindnext
	 * returned field.
	 */
	wchar_t		d_name[FILENAME_MAX]; /* File name. */
};

/*
 * This opaque data type represents the private structure
 * through which a wide directory stream is referenced.
 */
typedef union __wdirstream_t _WDIR;

_WDIR* __cdecl __MINGW_NOTHROW _wopendir (const wchar_t*);
struct _wdirent*  __cdecl __MINGW_NOTHROW _wreaddir (_WDIR*);
int __cdecl __MINGW_NOTHROW _wclosedir (_WDIR*);
void __cdecl __MINGW_NOTHROW _wrewinddir (_WDIR*);
long __cdecl __MINGW_NOTHROW _wtelldir (_WDIR*);
void __cdecl __MINGW_NOTHROW _wseekdir (_WDIR*, long);


#ifdef	__cplusplus
}
#endif

#if defined(_BSD_SOURCE) || defined(_WIN32)
/*
 * BSD-ish systems define manifest constants for the d_type field;
 * although probably only DT_REG and DT_DIR are useful on Win32, we
 * try to map them as best we can from the _finddata.attrib field.
 *
 * The relevant Microsoft manifest values are:
 *
 *   _A_NORMAL	(0x0000)	normal file: best fit for DT_REG
 *   _A_RDONLY	(0x0001)	read-only: no BSD d_type equivalent
 *   _A_HIDDEN	(0x0002)	hidden entity: no BSD equivalent
 *   _A_SYSTEM	(0x0004)	system entity: no BSD equivalent
 *   _A_VOLID	(0x0008)	volume label: no BSD equivalent
 *   _A_SUBDIR	(0x0010)	directory: best fit for DT_DIR
 *   _A_ARCH	(0x0020)	"dirty": no BSD equivalent
 *
 * Thus, we may immediately define:
 */
#define DT_REG   	_A_NORMAL
#define DT_DIR   	_A_SUBDIR

/* The remaining BSD d_type manifest values have no Win32 equivalents;
 * we will define them artificially, and then we will ensure that our
 * opendir()/readdir() implementation will never assign them; (we will
 * substitute DT_UNKNOWN, but it would be unwise to simply make these
 * equivalent to that, since an application is likely to simply check
 * for d_type equal to any one of these defined types, and thus could
 * mistakenly identify DT_UNKNOWN as being of the tested type):
 */
#define DT_BLK   	(((_A_SUBDIR) << 4) | DT_UNKNOWN)
#define DT_CHR   	(((_A_SUBDIR) << 5) | DT_UNKNOWN)
#define DT_FIFO  	(((_A_SUBDIR) << 6) | DT_UNKNOWN)
#define DT_LNK   	(((_A_SUBDIR) << 7) | DT_UNKNOWN)
#define DT_SOCK  	(((_A_SUBDIR) << 8) | DT_UNKNOWN)

/* No file system entity can ever be simultaneously a volume label
 * and a directory; we will exploit this to unambiguously define:
 */
#define DT_UNKNOWN	(_A_VOLID | _A_SUBDIR)

#endif  /* _BSD_SOURCE */
#endif	/* ! RC_INVOKED */

#endif	/* !defined _DIRENT_H_ */
@


1.12
log
@Rationalise structure layout; add dirent.d_type field.
@
text
@@


1.11
log
@Don't expose implementation detail for opaque DIRENT structures.
@
text
@d27 14
d48 1
a48 1
typedef struct __dirstream_t DIR;
d65 14
d86 1
a86 1
typedef struct __wdirstream_t _WDIR;
d100 42
a141 1
#endif	/* Not RC_INVOKED */
d143 1
a143 1
#endif	/* Not _DIRENT_H_ */
@


1.10
log
@2010-12-27  Ozkan Sezer  <sezero@@users.sourceforge.net>

        * include/dirent.h (dd_handle): Define as intptr_t.
@
text
@d31 2
a32 3
 * This is an internal data structure. Good programmers will not use it
 * except as an argument to one of the functions below.
 * dd_stat field is now int (was short in older versions).
d34 1
a34 24
typedef struct
{
	/* disk transfer area for this dir */
	struct _finddata_t	dd_dta;

	/* dirent struct to return from dir (NOTE: this makes this thread
	 * safe as long as only one thread uses a particular DIR struct at
	 * a time) */
	struct dirent		dd_dir;

	/* _findnext handle */
	intptr_t		dd_handle;

	/*
	 * Status of search:
	 *   0 = not started yet (next entry to read is first entry)
	 *  -1 = off the end
	 *   positive = 0 based index of next entry
	 */
	int			dd_stat;

	/* given path for dir with search pattern (struct is extended) */
	char			dd_name[1];
} DIR;
d55 2
a56 2
 * This is an internal data structure. Good programmers will not use it
 * except as an argument to one of the functions below.
d58 1
a58 24
typedef struct
{
	/* disk transfer area for this dir */
	struct _wfinddata_t	dd_dta;

	/* dirent struct to return from dir (NOTE: this makes this thread
	 * safe as long as only one thread uses a particular DIR struct at
	 * a time) */
	struct _wdirent		dd_dir;

	/* _findnext handle */
	intptr_t		dd_handle;

	/*
	 * Status of search:
	 *   0 = not started yet (next entry to read is first entry)
	 *  -1 = off the end
	 *   positive = 0 based index of next entry
	 */
	int			dd_stat;

	/* given path for dir with search pattern (struct is extended) */
	wchar_t			dd_name[1];
} _WDIR;
@


1.9
log
@*include/wctpe.h: Likewise.
*include/wdirent.h: Likewise.
Changelog: Whitespace
Further: http://www.lib.virginia.edu/cgi-bin/imgload.cgi/53
@
text
@d46 1
a46 1
	long			dd_handle;
d49 1
a49 1
         * Status of search:
d93 1
a93 1
	long			dd_handle;
d96 1
a96 1
         * Status of search:
a106 2


@


1.8
log
@	* include/dirent.h (struct _wdirent): Remove obsolete comment.
@
text
@d60 6
a65 6
DIR* __cdecl opendir (const char*);
struct dirent* __cdecl readdir (DIR*);
int __cdecl closedir (DIR*);
void __cdecl rewinddir (DIR*);
long __cdecl telldir (DIR*);
void __cdecl seekdir (DIR*, long);
d109 6
a114 6
_WDIR* __cdecl _wopendir (const wchar_t*);
struct _wdirent*  __cdecl _wreaddir (_WDIR*);
int __cdecl _wclosedir (_WDIR*);
void __cdecl _wrewinddir (_WDIR*);
long __cdecl _wtelldir (_WDIR*);
void __cdecl _wseekdir (_WDIR*, long);
@


1.7
log
@
	* CONTRIBUTORS: New file.
	* DISCLAIMER: Ditto.
	* CRT_noglob.c: Reword copyright and disclaimer.  Move Contributors
	section CONTRIBUTORS file.  Remove RCS tags.
	* CRTFmode.c: Ditto.
	* CRTglob.c: Ditto.
	* CRTinit.c: Ditto.
	* crt1.c: Ditto.
	* crtdll.dev: Ditto.
	* dllcrt1.c: Ditto.
	* dllmain.c: Ditto.
	* gccmain.c: Ditto.
	* init.c: Ditto.
	* isascii.c: Ditto.
	* iscsym.c: Ditto.
	* iscsymf.c: Ditto.
	* jamfile: Ditto.
	* main.c: Ditto.
	* msvcrt.def.in: Ditto.
	* strcasecmp.c: Ditto.
	* toascii.c: Ditto.
	* wcscmpi.c: Ditto.
	* include/assert.h: Ditto.
	* include/conio.h: Ditto.
	* include/ctype.h: Ditto.
	* include/direct.h: Ditto.
	* include/dirent.h: Ditto.
	* include/dos.h: Ditto.
	* include/errno.h: Ditto.
	* include/excpt.h: Ditto.
	* include/fcntl.h: Ditto.
	* include/float.h: Ditto.
	* include/io.h: Ditto.
	* include/locale.h: Ditto.
	* include/malloc.h: Ditto.
	* include/math.h: Ditto.
	* include/process.h: Ditto.
	* include/setjmp.h: Ditto.
	* include/share.h: Ditto.
	* include/signal.h: Ditto.
	* include/stdio.h: Ditto.
	* include/stdlib.h: Ditto.
	* include/string.h: Ditto.
	* include/tchar.h: Ditto.
	* include/time.h: Ditto.
	* include/wchar.h: Ditto.
	* include/sys/locking.h: Ditto.
	* include/sys/param.h: Ditto.
	* include/sys/stat.h: Ditto.
	* include/sys/timeb.h: Ditto.
	* include/sys/types.h: Ditto.
	* include/sys/utime.h: Ditto.
	* mingwex/dirent.c: Ditto.
@
text
@a75 1
	/* NOTE: The name in the dirent structure points to the name in the	 *       wfinddata_t structure in the _WDIR. */
@


1.6
log
@	* include/conio.h: Remove __STRICT_ANSI__ guard from non-ANSI header.
	* include/direct.h:  Ditto.
	* include/dirent.h:  Ditto.
	* include/dos.h:  Ditto.
	* include/excpt.h:  Ditto.
	* inlude/fcntl,h
	* include/io.h:  Ditto.
	* inlude/mem.h:  Ditto.
	* include/memory.h:  Ditto.
	* include/process.h:  Ditto.
	* inlude/search.h:  Ditto.
	* include/share.h:  Ditto.
	* include/unistd.h:  Ditto.
	* include/sys/fcntl.h:  Ditto.
	* include/file.h:  Ditto.
	* include/sys/locking.h:  Ditto.
	* include/sys/param.h:  Ditto.
	* include/sys/stat,h
	* include/sys/time.h:  Ditto.
	* include/sys/timeb.h:  Ditto.
	* include/sys/types.h:  Ditto.
	* include/sys/unistd.h:  Ditto.
	* include/sys/utime.h:  Ditto.
@
text
@d3 3
a5 18
 *
 * by M. J. Weinstein   Released to public domain 1-Jan-89
 *
 * Because I have heard that this feature (opendir, readdir, closedir)
 * it so useful for programmers coming from UNIX or attempting to port
 * UNIX code, and because it is reasonably light weight, I have included
 * it in the Mingw32 package. I have also added an implementation of
 * rewinddir, seekdir and telldir.
 *   - Colin Peters <colin@@bird.fu.is.saga-u.ac.jp>
 *
 *  This code is distributed in the hope that is will be useful but
 *  WITHOUT ANY WARRANTY. ALL WARRANTIES, EXPRESS OR IMPLIED ARE HEREBY
 *  DISCLAIMED. This includeds but is not limited to warranties of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
 *
 * $Revision: 1.3 $
 * $Author: dannysmith $
 * $Date: 2001/11/29 04:26:33 $
@


1.5
log
@
	* include/dirent.h (dirent): Make d_name and array instead of a pointer.
	* mingwex/dirent.c: Modifications througout to fill d_name array.
        * Makefile.in (LIBS): Add new MSVCRT libraries libmsvcr70 and
        libmsvcr71, including debug versions.
        (msvcr70.def, msvcr70d.def, msvcr71.def, msvcr71.def): New targets.
@
text
@a22 3

#ifndef	__STRICT_ANSI__

a139 3

#endif	/* Not __STRICT_ANSI__ */

@


1.4
log
@	* include/_mingw.h (_CRTIMP): Define for __GNUC__ if
	__declspec(dllimport)  supported.
	(__cdecl): Define if not already defined.
	(__stdcall): Likewise.
	* include/dirent.h: Qualify fuctions with __cdecl.
	* include/fenv.h: Likewise.
	* include/inttypes.h: Likewise.
	* include/assert.h: Qualify fuctions with __cdecl. Qualify
	CRT dll imports with _CRTIMP.
	* include/conio.h: Likewise.
	* include/ctype.h: Likewise.
	* include/direct.h: Likewise.
	* include/dos.h: Likewise.
	* include/errno.h: Likewise.
	* include/float.h: Likewise.
	* include/io.h: Likewise.
	* include/locale.h: Likewise.
	* include/malloc.h: Likewise.
	* include/math.h: Likewise.
	* include/mbctype.h: Likewise.
	* include/mbstring.h: Likewise.
	* include/process.h: Likewise.
	* include/setjmp.h: Likewise.
	* include/signal.h: Likewise.
	* include/stdio.h: Likewise.
	* include/stdlib.h: Likewise.
	* include/string.h: Likewise.
	* include/time.h: Likewise.
	* include/wchar.h: Likewise.
	* include/wctype.h: Likewise.
	* include/sys/stat.h: Likewise.
	* include/sys/timeb.h: Likewise.
	* include/sys/utime.h: Likewise.

	* include/ctype.h: Guard ctype inlines with __NO_INLINE__.
	* include/wctype.h: Guard wctype inlines with __NO_INLINE__.

	* include/stdio.h (__VALIST): Guard against prior definition.
@
text
@d45 1
a45 3
	char*		d_name;		/* File name. */
	/* NOTE: The name in the dirent structure points to the name in the
	 *       finddata_t structure in the DIR. */
d93 1
a93 1
	wchar_t*	d_name;		/* File name. */
@


1.3
log
@	* include/_mingw.h: Increment version to 2.0.
	* Makefile.in: Ditto.
	Merge in mingwex branch.
@
text
@d80 6
a85 6
DIR*		opendir (const char*);
struct dirent*	readdir (DIR*);
int		closedir (DIR*);
void		rewinddir (DIR*);
long		telldir (DIR*);
void		seekdir (DIR*, long);
d130 6
a135 6
_WDIR*		_wopendir (const wchar_t*);
struct _wdirent* _wreaddir (_WDIR*);
int		_wclosedir (_WDIR*);
void		_wrewinddir (_WDIR*);
long		_wtelldir (_WDIR*);
void		_wseekdir (_WDIR*, long);
@


1.3.6.1
log
@	Merge from mingw trunk (changes since 2003-01-27).
@
text
@d80 6
a85 6
DIR* __cdecl opendir (const char*);
struct dirent* __cdecl readdir (DIR*);
int __cdecl closedir (DIR*);
void __cdecl rewinddir (DIR*);
long __cdecl telldir (DIR*);
void __cdecl seekdir (DIR*, long);
d130 6
a135 6
_WDIR* __cdecl _wopendir (const wchar_t*);
struct _wdirent*  __cdecl _wreaddir (_WDIR*);
int __cdecl _wclosedir (_WDIR*);
void __cdecl _wrewinddir (_WDIR*);
long __cdecl _wtelldir (_WDIR*);
void __cdecl _wseekdir (_WDIR*, long);
@


1.2
log
@Merge MinGW CVS differences
@
text
@d53 1
d74 1
a74 1
	short			dd_stat;
a79 1

d86 51
@


1.2.10.1
log
@	Make wide char versions of opendir and friends.
	* include/dirent.h (_wdirent, _WDIR): Define wide versions of
	struct dirent, DIR.
	(_wopendir,_wreaddir,_wclosedir,_wrewinddir,_wtelldir,
	_wseekdir): Add prototypes for wide versions of corresponding
	standard functions.
	* include/tchar.h; Add _UNICODE mappings for dirent.h
	structures and functions.
	* mingwex/dirent.c: Make _UNICODE neutral.
	* mingwex/wdirent.c: New file to define _UNICODE before
	including dirent.c.
	* mingwex/Makefile.in (DISTFILES): Add wdirent.c/
	(POSIX_OBJS): Add wdirent.o.
	(wdirent.o): Specify dependency on dirent.c as well as
	wdirent.c.
	* samples/dirent/wtest.c: New file, wide version of test.c.
@
text
@a79 1

a85 52


/* wide char versions */

struct _wdirent
{
	long		d_ino;		/* Always zero. */
	unsigned short	d_reclen;	/* Always zero. */
	unsigned short	d_namlen;	/* Length of name in d_name. */
	wchar_t*	d_name;		/* File name. */
	/* NOTE: The name in the dirent structure points to the name in the
	 *       wfinddata_t structure in the _WDIR. */
};

/*
 * This is an internal data structure. Good programmers will not use it
 * except as an argument to one of the functions below.
 */
typedef struct
{
	/* disk transfer area for this dir */
	struct _wfinddata_t	dd_dta;

	/* dirent struct to return from dir (NOTE: this makes this thread
	 * safe as long as only one thread uses a particular DIR struct at
	 * a time) */
	struct _wdirent		dd_dir;

	/* _findnext handle */
	long			dd_handle;

	/*
         * Status of search:
	 *   0 = not started yet (next entry to read is first entry)
	 *  -1 = off the end
	 *   positive = 0 based index of next entry
	 */
	short			dd_stat;

	/* given path for dir with search pattern (struct is extended) */
	wchar_t			dd_name[1];
} _WDIR;



_WDIR*		_wopendir (const wchar_t*);
struct _wdirent* _wreaddir (_WDIR*);
int		_wclosedir (_WDIR*);
void		_wrewinddir (_WDIR*);
long		_wtelldir (_WDIR*);
void		_wseekdir (_WDIR*, long);

@


1.2.10.2
log
@	* include/dirent.h (DIR): Change dd_stat type to int.
@
text
@a52 1
 * dd_stat field is now int (was short in older versions).
d73 1
a73 1
	int			dd_stat;
d79 2
d97 2
a98 1
	/* NOTE: The name in the dirent structure points to the name in the	 *       wfinddata_t structure in the _WDIR. */
d124 1
a124 1
	int			dd_stat;
@


1.1
log
@Initial revision
@
text
@d15 1
a15 1
 *  DISCLAMED. This includeds but is not limited to warranties of
d18 3
a20 3
 * $Revision: 1.4 $
 * $Author: cgf $
 * $Date: 2000/02/05 04:04:52 $
@


1.1.1.1
log
@import winsup-2000-02-17 snapshot
@
text
@@
