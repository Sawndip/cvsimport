head	1.11;
access;
symbols
	cygwin-1_7_17-release:1.10
	cygwin-64bit-branch:1.10.0.2
	cygwin-1_7_16-release:1.9
	cygwin-1_7_15-release:1.9
	cygwin-1_7_14_2-release:1.9
	cygwin-1_7_14-release:1.9
	cygwin-1_7_12-release:1.9
	cygwin-1_7_11-release:1.9
	cygwin-1_7_10-release:1.9
	cygwin-1_7_9-release:1.9
	cygwin-1_7_8-release:1.9
	cygwin-1_7_7-release:1.9
	cygwin-1_7_5-release:1.9
	cygwin-1_7_4-release:1.9
	cygwin-1_7_3-release:1.9
	cygwin-1_7_2-release:1.9
	cygwin-1_7_1-release:1.9
	cv-branch-2:1.9.0.2
	cr-0x5f1:1.7.0.6
	cv-branch:1.7.0.4
	cr-0x3b58:1.7.0.2
	cr-0x9e:1.4.0.10
	cr-0x9d:1.4.0.8
	corinna-01:1.4
	cr-0x9c:1.4.0.6
	cr-0x9b:1.4.0.4
	cr-0x99:1.4
	Z-emcb-cygwin_daemon:1.4.0.2
	w32api-2_2:1.2
	mingw-runtime-2_4:1.2
	mingw-std-ns-branch:1.2.0.16
	mingw-runtime-2_0:1.2
	mingwex:1.2.0.10
	cygnus_cvs_20020108_pre:1.2
	Z-cygwin_daemon_merge-new_HEAD:1.1.1.1
	Z-cygwin_daemon_merge_HEAD:1.1.1.1
	cygwin_daemon:1.1.1.1.0.10;
locks; strict;
comment	@ * @;
expand	@o@;


1.11
date	2012.11.07.16.52.17;	author cgf;	state dead;
branches;
next	1.10;

1.10
date	2012.08.03.18.58.26;	author earnie;	state Exp;
branches;
next	1.9;

1.9
date	2008.04.26.00.24.19;	author ironhead;	state Exp;
branches;
next	1.8;

1.8
date	2007.06.23.07.34.16;	author dannysmith;	state Exp;
branches;
next	1.7;

1.7
date	2004.04.20.22.49.32;	author earnie;	state Exp;
branches;
next	1.6;

1.6
date	2004.03.12.16.39.37;	author cgf;	state Exp;
branches;
next	1.5;

1.5
date	2004.03.11.09.41.08;	author dannysmith;	state Exp;
branches;
next	1.4;

1.4
date	2003.07.02.22.09.25;	author dannysmith;	state Exp;
branches;
next	1.3;

1.3
date	2003.02.10.21.13.34;	author dannysmith;	state Exp;
branches;
next	1.2;

1.2
date	2001.12.05.15.01.05;	author earnie;	state Exp;
branches
	1.2.16.1;
next	1.1;

1.1
date	2000.02.17.19.38.31;	author cgf;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2000.02.17.19.38.31;	author cgf;	state Exp;
branches;
next	;

1.2.16.1
date	2003.03.31.22.32.19;	author dannysmith;	state Exp;
branches;
next	;


desc
@@


1.11
log
@* mingw: Delete obsolete directory.
* w32api: Ditto.
@
text
@/* 
 * process.h
 * This file has no copyright assigned and is placed in the Public Domain.
 * This file is a part of the mingw-runtime package.
 * No warranty is given; refer to the file DISCLAIMER within the package.
 *
 * Function calls for spawning child processes.
 *
 */

#ifndef	_PROCESS_H_
#define	_PROCESS_H_

/* All the headers include this file. */
#include <_mingw.h>

#include <sys/types.h> /* For _pid_t and pid_t. */
#include <stdint.h>  /* For intptr_t. */
/*
 * Constants for cwait actions.
 * Obsolete for Win32.
 */
#define	_WAIT_CHILD		0
#define	_WAIT_GRANDCHILD	1

#ifndef	_NO_OLDNAMES
#define	WAIT_CHILD		_WAIT_CHILD
#define	WAIT_GRANDCHILD		_WAIT_GRANDCHILD
#endif	/* Not _NO_OLDNAMES */

/*
 * Mode constants for spawn functions.
 */
#define	_P_WAIT		0
#define	_P_NOWAIT	1
#define	_P_OVERLAY	2
#define	_OLD_P_OVERLAY	_P_OVERLAY
#define	_P_NOWAITO	3
#define	_P_DETACH	4

#ifndef	_NO_OLDNAMES
#define	P_WAIT		_P_WAIT
#define	P_NOWAIT	_P_NOWAIT
#define	P_OVERLAY	_P_OVERLAY
#define	OLD_P_OVERLAY	_OLD_P_OVERLAY
#define	P_NOWAITO	_P_NOWAITO
#define	P_DETACH	_P_DETACH
#endif	/* Not _NO_OLDNAMES */


#ifndef RC_INVOKED

#ifdef	__cplusplus
extern "C" {
#endif

_CRTIMP void __cdecl __MINGW_NOTHROW _cexit(void);
_CRTIMP void __cdecl __MINGW_NOTHROW _c_exit(void);

_CRTIMP int __cdecl __MINGW_NOTHROW _cwait (int*, _pid_t, int);

_CRTIMP _pid_t __cdecl __MINGW_NOTHROW _getpid(void);

_CRTIMP intptr_t __cdecl __MINGW_NOTHROW _execl	(const char*, const char*, ...);
_CRTIMP intptr_t __cdecl __MINGW_NOTHROW _execle	(const char*, const char*, ...);
_CRTIMP intptr_t __cdecl __MINGW_NOTHROW _execlp	(const char*, const char*, ...);
_CRTIMP intptr_t __cdecl __MINGW_NOTHROW _execlpe	(const char*, const char*, ...);
_CRTIMP intptr_t __cdecl __MINGW_NOTHROW _execv	(const char*, const char* const*);
_CRTIMP intptr_t __cdecl __MINGW_NOTHROW _execve	(const char*, const char* const*, const char* const*);
_CRTIMP intptr_t __cdecl __MINGW_NOTHROW _execvp	(const char*, const char* const*);
_CRTIMP intptr_t __cdecl __MINGW_NOTHROW _execvpe	(const char*, const char* const*, const char* const*);

_CRTIMP intptr_t __cdecl __MINGW_NOTHROW _spawnl	(int, const char*, const char*, ...);
_CRTIMP intptr_t __cdecl __MINGW_NOTHROW _spawnle	(int, const char*, const char*, ...);
_CRTIMP intptr_t __cdecl __MINGW_NOTHROW _spawnlp	(int, const char*, const char*, ...);
_CRTIMP intptr_t __cdecl __MINGW_NOTHROW _spawnlpe	(int, const char*, const char*, ...);
_CRTIMP intptr_t __cdecl __MINGW_NOTHROW _spawnv	(int, const char*, const char* const*);
_CRTIMP intptr_t __cdecl __MINGW_NOTHROW _spawnve	(int, const char*, const char* const*, const char* const*);
_CRTIMP intptr_t __cdecl __MINGW_NOTHROW _spawnvp	(int, const char*, const char* const*);
_CRTIMP intptr_t __cdecl __MINGW_NOTHROW _spawnvpe	(int, const char*, const char* const*, const char* const*);

#ifndef _WPROCESS_DEFINED
/* Also in wchar.h - keep in sync */
_CRTIMP intptr_t __cdecl __MINGW_NOTHROW _wexecl	(const wchar_t*, const wchar_t*, ...);
_CRTIMP intptr_t __cdecl __MINGW_NOTHROW _wexecle	(const wchar_t*, const wchar_t*, ...);
_CRTIMP intptr_t __cdecl __MINGW_NOTHROW _wexeclp	(const wchar_t*, const wchar_t*, ...);
_CRTIMP intptr_t __cdecl __MINGW_NOTHROW _wexeclpe	(const wchar_t*, const wchar_t*, ...);
_CRTIMP intptr_t __cdecl __MINGW_NOTHROW _wexecv	(const wchar_t*, const wchar_t* const*);
_CRTIMP intptr_t __cdecl __MINGW_NOTHROW _wexecve	(const wchar_t*, const wchar_t* const*, const wchar_t* const*);
_CRTIMP intptr_t __cdecl __MINGW_NOTHROW _wexecvp	(const wchar_t*, const wchar_t* const*);
_CRTIMP intptr_t __cdecl __MINGW_NOTHROW _wexecvpe	(const wchar_t*, const wchar_t* const*, const wchar_t* const*);

_CRTIMP intptr_t __cdecl __MINGW_NOTHROW _wspawnl	(int, const wchar_t*, const wchar_t*, ...);
_CRTIMP intptr_t __cdecl __MINGW_NOTHROW _wspawnle	(int, const wchar_t*, const wchar_t*, ...);
_CRTIMP intptr_t __cdecl __MINGW_NOTHROW _wspawnlp	(int, const wchar_t*, const wchar_t*, ...);
_CRTIMP intptr_t __cdecl __MINGW_NOTHROW _wspawnlpe	(int, const wchar_t*, const wchar_t*, ...);
_CRTIMP intptr_t __cdecl __MINGW_NOTHROW _wspawnv	(int, const wchar_t*, const wchar_t* const*);
_CRTIMP intptr_t __cdecl __MINGW_NOTHROW _wspawnve	(int, const wchar_t*, const wchar_t* const*, const wchar_t* const*);
_CRTIMP intptr_t __cdecl __MINGW_NOTHROW _wspawnvp	(int, const wchar_t*, const wchar_t* const*);
_CRTIMP intptr_t __cdecl __MINGW_NOTHROW _wspawnvpe	(int, const wchar_t*, const wchar_t* const*, const wchar_t* const*);

#define _WPROCESS_DEFINED
#endif

/*
 * The functions _beginthreadex and _endthreadex are not provided by CRTDLL.
 * They are provided by MSVCRT.
 *
 * NOTE: Apparently _endthread calls CloseHandle on the handle of the thread,
 * making for race conditions if you are not careful. Basically you have to
 * make sure that no-one is going to do *anything* with the thread handle
 * after the thread calls _endthread or returns from the thread function.
 *
 * NOTE: No old names for these functions. Use the underscore.
 */
_CRTIMP unsigned long __cdecl __MINGW_NOTHROW
	_beginthread	(void (*)(void *), unsigned, void*);
_CRTIMP void __cdecl __MINGW_NOTHROW _endthread	(void);

#ifdef	__MSVCRT__
_CRTIMP unsigned long __cdecl __MINGW_NOTHROW
	_beginthreadex	(void *, unsigned, unsigned (__stdcall *) (void *), 
			 void*, unsigned, unsigned*);
_CRTIMP void __cdecl __MINGW_NOTHROW _endthreadex (unsigned);
#endif


#ifndef	_NO_OLDNAMES
/*
 * Functions without the leading underscore, for portability. These functions
 * live in liboldnames.a.
 */
_CRTIMP int  __cdecl __MINGW_NOTHROW cwait (int*, pid_t, int);
_CRTIMP pid_t __cdecl __MINGW_NOTHROW getpid (void);

_CRTIMP intptr_t __cdecl __MINGW_NOTHROW execl	(const char*, const char*, ...);
_CRTIMP intptr_t __cdecl __MINGW_NOTHROW execle	(const char*, const char*, ...);
_CRTIMP intptr_t __cdecl __MINGW_NOTHROW execlp	(const char*, const char*, ...);
_CRTIMP intptr_t __cdecl __MINGW_NOTHROW execlpe	(const char*, const char*,...);
_CRTIMP intptr_t __cdecl __MINGW_NOTHROW execv	(const char*, const char* const*);
_CRTIMP intptr_t __cdecl __MINGW_NOTHROW execve	(const char*, const char* const*, const char* const*);
_CRTIMP intptr_t __cdecl __MINGW_NOTHROW execvp	(const char*, const char* const*);
_CRTIMP intptr_t __cdecl __MINGW_NOTHROW execvpe	(const char*, const char* const*, const char* const*);

_CRTIMP intptr_t __cdecl __MINGW_NOTHROW spawnl	(int, const char*, const char*, ...);
_CRTIMP intptr_t __cdecl __MINGW_NOTHROW spawnle	(int, const char*, const char*, ...);
_CRTIMP intptr_t __cdecl __MINGW_NOTHROW spawnlp	(int, const char*, const char*, ...);
_CRTIMP intptr_t __cdecl __MINGW_NOTHROW spawnlpe	(int, const char*, const char*, ...);
_CRTIMP intptr_t __cdecl __MINGW_NOTHROW spawnv	(int, const char*, const char* const*);
_CRTIMP intptr_t __cdecl __MINGW_NOTHROW spawnve	(int, const char*, const char* const*, const char* const*);
_CRTIMP intptr_t __cdecl __MINGW_NOTHROW spawnvp	(int, const char*, const char* const*);
_CRTIMP intptr_t __cdecl __MINGW_NOTHROW spawnvpe	(int, const char*, const char* const*, const char* const*);
#endif	/* Not _NO_OLDNAMES */

#ifdef	__cplusplus
}
#endif

#endif	/* Not RC_INVOKED */

#endif	/* _PROCESS_H_ not defined */
@


1.10
log
@2012-08-02  Ivan Maidanski  <ivmai@@users.sourceforge.net>

	* include/process.h (_wexec*, _wspawn*): Declare.
@
text
@@


1.9
log
@2008-04-25  Danny Smith  <dannysmith@@users.sourceforge.net>

        * include/process.h: Include stdint.h for intptr_t definition.
        (_execl, _execle, _execlp, _execlpe, _execv, _execve, _execvp, _execvpe,
        _spawnl, _spawnle, _spawnlp, _spawnlpe, _spawnv, _spawnve, _spawnvp,
        _spawnvpe): Return intptr_t.
        (execl, execle, execlp, execlpe, execv, execve, execvp, execvpe, spawnl,
        spawnle, spawnlp, spawnlpe, spawnv, spawnve, spawnvp, spawnvpe): Return
        intptr_t.

        [!_WPROCESS_DEFINED]: Include stdint.h for intptr_t definition.
        (_wexecl, _wexecle, _wexeclp, _wexeclpe, _wexecv, _wexecve, _wexecvp,
        _wexecvpe, _wspawnl, _wspawnle, _wspawnlp, _wspawnlpe, _wspawnv, _wspawnve,
        _wspawnvp, _wspawnvpe): Return intptr_t.
@
text
@d82 22
@


1.8
log
@	*include/assert.h:  Qualify all  functions with __MINGW_NOTHROW.
	*include/conio.h:  Likewise.
	*include/ctype.h:  Likewise.
	*include/direct.h:  Likewise.
	*include/dos.h:  Likewise.
	*include/errno.h:  Likewise.
	*include/fenv.h:  Likewise.
	*include/float.h:  Likewise.
	*include/inttypes.h:  Likewise.
	*include/io.h:  Likewise.
	*include/libgen.h:  Likewise.
	*include/locale.h:  Likewise.
	*include/malloc.h:  Likewise.
	*include/mbctype.h:  Likewise.
	*include/mbstring.h:  Likewise.
	*include/process.h:  Likewise.
	*include/search.h:  Likewise.
	*include/setjmp.h:  Likewise.
	*include/signal.h:  Likewise.
	*include/stdio.h:  Likewise.
	*include/stdlib.h:  Likewise.
	*include/string.h:  Likewise.
	*include/time.h:  Likewise.
	*include/wchar.h:  Likewise.
	*include/sys/stat.h:  Likewise.
	*include/sys/time.h:  Likewise.
	*include/sys/timeb.h:  Likewise.
	*include/sys/utime.h:  Likewise.
@
text
@d17 2
a18 3
/* Includes a definition of _pid_t and pid_t */
#include <sys/types.h>

d64 17
a80 17
_CRTIMP int __cdecl __MINGW_NOTHROW _execl	(const char*, const char*, ...);
_CRTIMP int __cdecl __MINGW_NOTHROW _execle	(const char*, const char*, ...);
_CRTIMP int __cdecl __MINGW_NOTHROW _execlp	(const char*, const char*, ...);
_CRTIMP int __cdecl __MINGW_NOTHROW _execlpe	(const char*, const char*, ...);
_CRTIMP int __cdecl __MINGW_NOTHROW _execv	(const char*, const char* const*);
_CRTIMP int __cdecl __MINGW_NOTHROW _execve	(const char*, const char* const*, const char* const*);
_CRTIMP int __cdecl __MINGW_NOTHROW _execvp	(const char*, const char* const*);
_CRTIMP int __cdecl __MINGW_NOTHROW _execvpe	(const char*, const char* const*, const char* const*);

_CRTIMP int __cdecl __MINGW_NOTHROW _spawnl	(int, const char*, const char*, ...);
_CRTIMP int __cdecl __MINGW_NOTHROW _spawnle	(int, const char*, const char*, ...);
_CRTIMP int __cdecl __MINGW_NOTHROW _spawnlp	(int, const char*, const char*, ...);
_CRTIMP int __cdecl __MINGW_NOTHROW _spawnlpe	(int, const char*, const char*, ...);
_CRTIMP int __cdecl __MINGW_NOTHROW _spawnv	(int, const char*, const char* const*);
_CRTIMP int __cdecl __MINGW_NOTHROW _spawnve	(int, const char*, const char* const*, const char* const*);
_CRTIMP int __cdecl __MINGW_NOTHROW _spawnvp	(int, const char*, const char* const*);
_CRTIMP int __cdecl __MINGW_NOTHROW _spawnvpe	(int, const char*, const char* const*, const char* const*);
d113 18
a130 16
_CRTIMP int __cdecl __MINGW_NOTHROW execl (const char*, const char*, ...);
_CRTIMP int __cdecl __MINGW_NOTHROW execle (const char*, const char*, ...);
_CRTIMP int __cdecl __MINGW_NOTHROW execlp (const char*, const char*, ...);
_CRTIMP int __cdecl __MINGW_NOTHROW execlpe (const char*, const char*, ...);
_CRTIMP int __cdecl __MINGW_NOTHROW execv (const char*, const char* const*);
_CRTIMP int __cdecl __MINGW_NOTHROW execve (const char*, const char* const*, const char* const*);
_CRTIMP int __cdecl __MINGW_NOTHROW execvp (const char*, const char* const*);
_CRTIMP int __cdecl __MINGW_NOTHROW execvpe (const char*, const char* const*, const char* const*);
_CRTIMP int __cdecl __MINGW_NOTHROW spawnl (int, const char*, const char*, ...);
_CRTIMP int __cdecl __MINGW_NOTHROW spawnle (int, const char*, const char*, ...);
_CRTIMP int __cdecl __MINGW_NOTHROW spawnlp (int, const char*, const char*, ...);
_CRTIMP int __cdecl __MINGW_NOTHROW spawnlpe (int, const char*, const char*, ...);
_CRTIMP int __cdecl __MINGW_NOTHROW spawnv (int, const char*, const char* const*);
_CRTIMP int __cdecl __MINGW_NOTHROW spawnve (int, const char*, const char* const*, const char* const*);
_CRTIMP int __cdecl __MINGW_NOTHROW spawnvp (int, const char*, const char* const*);
_CRTIMP int __cdecl __MINGW_NOTHROW spawnvpe (int, const char*, const char* const*, const char* const*);
@


1.7
log
@
	* CONTRIBUTORS: New file.
	* DISCLAIMER: Ditto.
	* CRT_noglob.c: Reword copyright and disclaimer.  Move Contributors
	section CONTRIBUTORS file.  Remove RCS tags.
	* CRTFmode.c: Ditto.
	* CRTglob.c: Ditto.
	* CRTinit.c: Ditto.
	* crt1.c: Ditto.
	* crtdll.dev: Ditto.
	* dllcrt1.c: Ditto.
	* dllmain.c: Ditto.
	* gccmain.c: Ditto.
	* init.c: Ditto.
	* isascii.c: Ditto.
	* iscsym.c: Ditto.
	* iscsymf.c: Ditto.
	* jamfile: Ditto.
	* main.c: Ditto.
	* msvcrt.def.in: Ditto.
	* strcasecmp.c: Ditto.
	* toascii.c: Ditto.
	* wcscmpi.c: Ditto.
	* include/assert.h: Ditto.
	* include/conio.h: Ditto.
	* include/ctype.h: Ditto.
	* include/direct.h: Ditto.
	* include/dirent.h: Ditto.
	* include/dos.h: Ditto.
	* include/errno.h: Ditto.
	* include/excpt.h: Ditto.
	* include/fcntl.h: Ditto.
	* include/float.h: Ditto.
	* include/io.h: Ditto.
	* include/locale.h: Ditto.
	* include/malloc.h: Ditto.
	* include/math.h: Ditto.
	* include/process.h: Ditto.
	* include/setjmp.h: Ditto.
	* include/share.h: Ditto.
	* include/signal.h: Ditto.
	* include/stdio.h: Ditto.
	* include/stdlib.h: Ditto.
	* include/string.h: Ditto.
	* include/tchar.h: Ditto.
	* include/time.h: Ditto.
	* include/wchar.h: Ditto.
	* include/sys/locking.h: Ditto.
	* include/sys/param.h: Ditto.
	* include/sys/stat.h: Ditto.
	* include/sys/timeb.h: Ditto.
	* include/sys/types.h: Ditto.
	* include/sys/utime.h: Ditto.
	* mingwex/dirent.c: Ditto.
@
text
@d58 2
a59 2
_CRTIMP void __cdecl _cexit(void);
_CRTIMP void __cdecl _c_exit(void);
d61 1
a61 1
_CRTIMP int __cdecl _cwait (int*, _pid_t, int);
d63 1
a63 1
_CRTIMP _pid_t __cdecl _getpid(void);
d65 17
a81 17
_CRTIMP int __cdecl _execl	(const char*, const char*, ...);
_CRTIMP int __cdecl _execle	(const char*, const char*, ...);
_CRTIMP int __cdecl _execlp	(const char*, const char*, ...);
_CRTIMP int __cdecl _execlpe	(const char*, const char*, ...);
_CRTIMP int __cdecl _execv	(const char*, const char* const*);
_CRTIMP int __cdecl _execve	(const char*, const char* const*, const char* const*);
_CRTIMP int __cdecl _execvp	(const char*, const char* const*);
_CRTIMP int __cdecl _execvpe	(const char*, const char* const*, const char* const*);

_CRTIMP int __cdecl _spawnl	(int, const char*, const char*, ...);
_CRTIMP int __cdecl _spawnle	(int, const char*, const char*, ...);
_CRTIMP int __cdecl _spawnlp	(int, const char*, const char*, ...);
_CRTIMP int __cdecl _spawnlpe	(int, const char*, const char*, ...);
_CRTIMP int __cdecl _spawnv	(int, const char*, const char* const*);
_CRTIMP int __cdecl _spawnve	(int, const char*, const char* const*, const char* const*);
_CRTIMP int __cdecl _spawnvp	(int, const char*, const char* const*);
_CRTIMP int __cdecl _spawnvpe	(int, const char*, const char* const*, const char* const*);
d95 1
a95 1
_CRTIMP unsigned long __cdecl
d97 1
a97 1
_CRTIMP void __cdecl _endthread	(void);
d100 1
a100 1
_CRTIMP unsigned long __cdecl
d103 1
a103 1
_CRTIMP void __cdecl _endthreadex (unsigned);
d112 18
a129 18
_CRTIMP int  __cdecl cwait (int*, pid_t, int);
_CRTIMP pid_t __cdecl getpid (void);
_CRTIMP int __cdecl execl (const char*, const char*, ...);
_CRTIMP int __cdecl execle (const char*, const char*, ...);
_CRTIMP int __cdecl execlp (const char*, const char*, ...);
_CRTIMP int __cdecl execlpe (const char*, const char*, ...);
_CRTIMP int __cdecl execv (const char*, const char* const*);
_CRTIMP int __cdecl execve (const char*, const char* const*, const char* const*);
_CRTIMP int __cdecl execvp (const char*, const char* const*);
_CRTIMP int __cdecl execvpe (const char*, const char* const*, const char* const*);
_CRTIMP int __cdecl spawnl (int, const char*, const char*, ...);
_CRTIMP int __cdecl spawnle (int, const char*, const char*, ...);
_CRTIMP int __cdecl spawnlp (int, const char*, const char*, ...);
_CRTIMP int __cdecl spawnlpe (int, const char*, const char*, ...);
_CRTIMP int __cdecl spawnv (int, const char*, const char* const*);
_CRTIMP int __cdecl spawnve (int, const char*, const char* const*, const char* const*);
_CRTIMP int __cdecl spawnvp (int, const char*, const char* const*);
_CRTIMP int __cdecl spawnvpe (int, const char*, const char* const*, const char* const*);
@


1.6
log
@* include/process.h: Remove the #endif associated with removal of
__STRICT_ANSI__ guard from non-ANSI header.
@
text
@d3 3
a7 19
 *
 * This file is part of the Mingw32 package.
 *
 * Contributors:
 *  Created by Colin Peters <colin@@bird.fu.is.saga-u.ac.jp>
 *
 *  THIS SOFTWARE IS NOT COPYRIGHTED
 *
 *  This source code is offered for use in the public domain. You may
 *  use, modify or distribute it freely.
 *
 *  This code is distributed in the hope that it will be useful but
 *  WITHOUT ANY WARRANTY. ALL WARRANTIES, EXPRESS OR IMPLIED ARE HEREBY
 *  DISCLAIMED. This includes but is not limited to warranties of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
 *
 * $Revision: 1.3 $
 * $Author: dannysmith $
 * $Date: 2001/11/29 04:26:33 $
@


1.5
log
@	* include/conio.h: Remove __STRICT_ANSI__ guard from non-ANSI header.
	* include/direct.h:  Ditto.
	* include/dirent.h:  Ditto.
	* include/dos.h:  Ditto.
	* include/excpt.h:  Ditto.
	* inlude/fcntl,h
	* include/io.h:  Ditto.
	* inlude/mem.h:  Ditto.
	* include/memory.h:  Ditto.
	* include/process.h:  Ditto.
	* inlude/search.h:  Ditto.
	* include/share.h:  Ditto.
	* include/unistd.h:  Ditto.
	* include/sys/fcntl.h:  Ditto.
	* include/file.h:  Ditto.
	* include/sys/locking.h:  Ditto.
	* include/sys/param.h:  Ditto.
	* include/sys/stat,h
	* include/sys/time.h:  Ditto.
	* include/sys/timeb.h:  Ditto.
	* include/sys/types.h:  Ditto.
	* include/sys/unistd.h:  Ditto.
	* include/sys/utime.h:  Ditto.
@
text
@a154 2

#endif	/* Not __STRICT_ANSI__ */
@


1.4
log
@	* include/process.h (_execv, _execvp, _spawnv, _spawnvp, _execve,
	_execvpe, _spawnve, _spawnvpe, execv, execvp, spawnv, spawnvp,
	execve, execvpe, spawnve, spawnvpe): Const-ify all the char params.
@
text
@a26 2
#ifndef	__STRICT_ANSI__

a156 1

@


1.3
log
@	* include/_mingw.h (_CRTIMP): Define for __GNUC__ if
	__declspec(dllimport)  supported.
	(__cdecl): Define if not already defined.
	(__stdcall): Likewise.
	* include/dirent.h: Qualify fuctions with __cdecl.
	* include/fenv.h: Likewise.
	* include/inttypes.h: Likewise.
	* include/assert.h: Qualify fuctions with __cdecl. Qualify
	CRT dll imports with _CRTIMP.
	* include/conio.h: Likewise.
	* include/ctype.h: Likewise.
	* include/direct.h: Likewise.
	* include/dos.h: Likewise.
	* include/errno.h: Likewise.
	* include/float.h: Likewise.
	* include/io.h: Likewise.
	* include/locale.h: Likewise.
	* include/malloc.h: Likewise.
	* include/math.h: Likewise.
	* include/mbctype.h: Likewise.
	* include/mbstring.h: Likewise.
	* include/process.h: Likewise.
	* include/setjmp.h: Likewise.
	* include/signal.h: Likewise.
	* include/stdio.h: Likewise.
	* include/stdlib.h: Likewise.
	* include/string.h: Likewise.
	* include/time.h: Likewise.
	* include/wchar.h: Likewise.
	* include/wctype.h: Likewise.
	* include/sys/stat.h: Likewise.
	* include/sys/timeb.h: Likewise.
	* include/sys/utime.h: Likewise.

	* include/ctype.h: Guard ctype inlines with __NO_INLINE__.
	* include/wctype.h: Guard wctype inlines with __NO_INLINE__.

	* include/stdio.h (__VALIST): Guard against prior definition.
@
text
@d84 1
a84 1
_CRTIMP int __cdecl _execle		(const char*, const char*, ...);
d87 4
a90 4
_CRTIMP int __cdecl _execv	(const char*, char* const*);
_CRTIMP int __cdecl _execve	(const char*, char* const*, char* const*);
_CRTIMP int __cdecl _execvp	(const char*, char* const*);
_CRTIMP int __cdecl _execvpe	(const char*, char* const*, char* const*);
d96 5
a100 4
_CRTIMP int __cdecl _spawnv	(int, const char*, char* const*);
_CRTIMP int __cdecl _spawnve	(int, const char*, char* const*, char* const*);
_CRTIMP int __cdecl _spawnvp	(int, const char*, char* const*);
_CRTIMP int __cdecl _spawnvpe	(int, const char*, char* const*, char* const*);
d136 4
a139 4
_CRTIMP int __cdecl execv (const char*, char* const*);
_CRTIMP int __cdecl execve (const char*, char* const*, char* const*);
_CRTIMP int __cdecl execvp (const char*, char* const*);
_CRTIMP int __cdecl execvpe (const char*, char* const*, char* const*);
d144 4
a147 4
_CRTIMP int __cdecl spawnv (int, const char*, char* const*);
_CRTIMP int __cdecl spawnve (int, const char*, char* const*, char* const*);
_CRTIMP int __cdecl spawnvp (int, const char*, char* const*);
_CRTIMP int __cdecl spawnvpe (int, const char*, char* const*, char* const*);
@


1.2
log
@Merge MinGW CVS differences
@
text
@d76 2
a77 2
void	_cexit(void);
void	_c_exit(void);
d79 1
a79 1
int	_cwait (int*, _pid_t, int);
d81 1
a81 1
_pid_t	_getpid(void);
d83 17
a99 17
int	_execl		(const char*, const char*, ...);
int	_execle		(const char*, const char*, ...);
int	_execlp		(const char*, const char*, ...);
int	_execlpe	(const char*, const char*, ...);
int	_execv		(const char*, char* const*);
int	_execve		(const char*, char* const*, char* const*);
int	_execvp		(const char*, char* const*);
int	_execvpe	(const char*, char* const*, char* const*);

int	_spawnl		(int, const char*, const char*, ...);
int	_spawnle	(int, const char*, const char*, ...);
int	_spawnlp	(int, const char*, const char*, ...);
int	_spawnlpe	(int, const char*, const char*, ...);
int	_spawnv		(int, const char*, char* const*);
int	_spawnve	(int, const char*, char* const*, char* const*);
int	_spawnvp	(int, const char*, char* const*);
int	_spawnvpe	(int, const char*, char* const*, char* const*);
d112 1
a112 1
unsigned long
d114 1
a114 1
void	_endthread	(void);
d117 1
a117 1
unsigned long
d120 1
a120 1
void	_endthreadex	(unsigned);
d129 18
a146 18
int	cwait (int*, pid_t, int);
pid_t	getpid (void);
int	execl (const char*, const char*, ...);
int	execle (const char*, const char*, ...);
int	execlp (const char*, const char*, ...);
int	execlpe (const char*, const char*, ...);
int	execv (const char*, char* const*);
int	execve (const char*, char* const*, char* const*);
int	execvp (const char*, char* const*);
int	execvpe (const char*, char* const*, char* const*);
int	spawnl (int, const char*, const char*, ...);
int	spawnle (int, const char*, const char*, ...);
int	spawnlp (int, const char*, const char*, ...);
int	spawnlpe (int, const char*, const char*, ...);
int	spawnv (int, const char*, char* const*);
int	spawnve (int, const char*, char* const*, char* const*);
int	spawnvp (int, const char*, char* const*);
int	spawnvpe (int, const char*, char* const*, char* const*);
@


1.2.16.1
log
@	Merge from mingw trunk (changes since 2003-01-27).
@
text
@d76 2
a77 2
_CRTIMP void __cdecl _cexit(void);
_CRTIMP void __cdecl _c_exit(void);
d79 1
a79 1
_CRTIMP int __cdecl _cwait (int*, _pid_t, int);
d81 1
a81 1
_CRTIMP _pid_t __cdecl _getpid(void);
d83 17
a99 17
_CRTIMP int __cdecl _execl	(const char*, const char*, ...);
_CRTIMP int __cdecl _execle		(const char*, const char*, ...);
_CRTIMP int __cdecl _execlp	(const char*, const char*, ...);
_CRTIMP int __cdecl _execlpe	(const char*, const char*, ...);
_CRTIMP int __cdecl _execv	(const char*, char* const*);
_CRTIMP int __cdecl _execve	(const char*, char* const*, char* const*);
_CRTIMP int __cdecl _execvp	(const char*, char* const*);
_CRTIMP int __cdecl _execvpe	(const char*, char* const*, char* const*);

_CRTIMP int __cdecl _spawnl	(int, const char*, const char*, ...);
_CRTIMP int __cdecl _spawnle	(int, const char*, const char*, ...);
_CRTIMP int __cdecl _spawnlp	(int, const char*, const char*, ...);
_CRTIMP int __cdecl _spawnlpe	(int, const char*, const char*, ...);
_CRTIMP int __cdecl _spawnv	(int, const char*, char* const*);
_CRTIMP int __cdecl _spawnve	(int, const char*, char* const*, char* const*);
_CRTIMP int __cdecl _spawnvp	(int, const char*, char* const*);
_CRTIMP int __cdecl _spawnvpe	(int, const char*, char* const*, char* const*);
d112 1
a112 1
_CRTIMP unsigned long __cdecl
d114 1
a114 1
_CRTIMP void __cdecl _endthread	(void);
d117 1
a117 1
_CRTIMP unsigned long __cdecl
d120 1
a120 1
_CRTIMP void __cdecl _endthreadex (unsigned);
d129 18
a146 18
_CRTIMP int  __cdecl cwait (int*, pid_t, int);
_CRTIMP pid_t __cdecl getpid (void);
_CRTIMP int __cdecl execl (const char*, const char*, ...);
_CRTIMP int __cdecl execle (const char*, const char*, ...);
_CRTIMP int __cdecl execlp (const char*, const char*, ...);
_CRTIMP int __cdecl execlpe (const char*, const char*, ...);
_CRTIMP int __cdecl execv (const char*, char* const*);
_CRTIMP int __cdecl execve (const char*, char* const*, char* const*);
_CRTIMP int __cdecl execvp (const char*, char* const*);
_CRTIMP int __cdecl execvpe (const char*, char* const*, char* const*);
_CRTIMP int __cdecl spawnl (int, const char*, const char*, ...);
_CRTIMP int __cdecl spawnle (int, const char*, const char*, ...);
_CRTIMP int __cdecl spawnlp (int, const char*, const char*, ...);
_CRTIMP int __cdecl spawnlpe (int, const char*, const char*, ...);
_CRTIMP int __cdecl spawnv (int, const char*, char* const*);
_CRTIMP int __cdecl spawnve (int, const char*, char* const*, char* const*);
_CRTIMP int __cdecl spawnvp (int, const char*, char* const*);
_CRTIMP int __cdecl spawnvpe (int, const char*, char* const*, char* const*);
@


1.1
log
@Initial revision
@
text
@d18 1
a18 1
 *  DISCLAMED. This includes but is not limited to warranties of
d21 3
a23 3
 * $Revision: 1.4 $
 * $Author: cgf $
 * $Date: 2000/02/05 04:04:55 $
@


1.1.1.1
log
@import winsup-2000-02-17 snapshot
@
text
@@
