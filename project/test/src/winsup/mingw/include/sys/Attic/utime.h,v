head	1.10;
access;
symbols
	cygwin-1_7_17-release:1.9
	cygwin-64bit-branch:1.9.0.2
	cygwin-1_7_16-release:1.9
	cygwin-1_7_15-release:1.9
	cygwin-1_7_14_2-release:1.9
	cygwin-1_7_14-release:1.9
	cygwin-1_7_12-release:1.9
	cygwin-1_7_11-release:1.9
	cygwin-1_7_10-release:1.9
	cygwin-1_7_9-release:1.9
	cygwin-1_7_8-release:1.9
	cygwin-1_7_7-release:1.9
	cygwin-1_7_5-release:1.9
	cygwin-1_7_4-release:1.9
	cygwin-1_7_3-release:1.9
	cygwin-1_7_2-release:1.9
	cygwin-1_7_1-release:1.8
	cv-branch-2:1.8.0.2
	cr-0x5f1:1.6.0.6
	cv-branch:1.6.0.4
	cr-0x3b58:1.6.0.2
	cr-0x9e:1.3.0.10
	cr-0x9d:1.3.0.8
	corinna-01:1.3
	cr-0x9c:1.3.0.6
	cr-0x9b:1.3.0.4
	cr-0x99:1.3
	Z-emcb-cygwin_daemon:1.3.0.2
	w32api-2_2:1.2
	mingw-runtime-2_4:1.2
	mingw-std-ns-branch:1.2.0.16
	mingw-runtime-2_0:1.2
	mingwex:1.2.0.10
	cygnus_cvs_20020108_pre:1.2
	Z-cygwin_daemon_merge-new_HEAD:1.1.1.1
	Z-cygwin_daemon_merge_HEAD:1.1.1.1
	cygwin_daemon:1.1.1.1.0.10;
locks; strict;
comment	@ * @;
expand	@o@;


1.10
date	2012.11.07.16.52.17;	author cgf;	state dead;
branches;
next	1.9;

1.9
date	2010.02.17.02.41.06;	author ironhead;	state Exp;
branches;
next	1.8;

1.8
date	2007.10.03.18.55.56;	author ironhead;	state Exp;
branches;
next	1.7;

1.7
date	2007.06.23.07.34.16;	author dannysmith;	state Exp;
branches;
next	1.6;

1.6
date	2004.04.20.22.49.32;	author earnie;	state Exp;
branches;
next	1.5;

1.5
date	2004.03.26.11.30.24;	author dannysmith;	state Exp;
branches;
next	1.4;

1.4
date	2004.03.11.09.41.08;	author dannysmith;	state Exp;
branches;
next	1.3;

1.3
date	2003.02.10.21.13.34;	author dannysmith;	state Exp;
branches;
next	1.2;

1.2
date	2001.12.05.15.01.06;	author earnie;	state Exp;
branches
	1.2.16.1;
next	1.1;

1.1
date	2000.02.17.19.38.31;	author cgf;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2000.02.17.19.38.31;	author cgf;	state Exp;
branches;
next	;

1.2.16.1
date	2002.09.25.23.50.30;	author dannysmith;	state Exp;
branches;
next	1.2.16.2;

1.2.16.2
date	2003.03.31.22.32.19;	author dannysmith;	state Exp;
branches;
next	;


desc
@@


1.10
log
@* mingw: Delete obsolete directory.
* w32api: Ditto.
@
text
@/*
 * utime.h
 * This file has no copyright assigned and is placed in the Public Domain.
 * This file is a part of the mingw-runtime package.
 * No warranty is given; refer to the file DISCLAIMER within the package.
 *
 * Support for the utime function.
 *
 */
#ifndef	_UTIME_H_
#define	_UTIME_H_

/* All the headers include this file. */
#include <_mingw.h>

#define __need_wchar_t
#define __need_size_t
#ifndef RC_INVOKED
#include <stddef.h>
#endif	/* Not RC_INVOKED */
#include <sys/types.h>

#ifndef	RC_INVOKED

/*
 * Structure used by _utime function.
 */
struct _utimbuf
{
	time_t	actime;		/* Access time */
	time_t	modtime;	/* Modification time */
};
#if __MSVCRT_VERSION__ >= 0x0800
struct __utimbuf32
{
	__time32_t actime;
	__time32_t modtime;
};
#endif /* __MSVCRT_VERSION__ >= 0x0800 */


#ifndef	_NO_OLDNAMES
/* NOTE: Must be the same as _utimbuf above. */
struct utimbuf
{
	time_t	actime;
	time_t	modtime;
};
#endif	/* Not _NO_OLDNAMES */

#ifdef	__cplusplus
extern "C" {
#endif

#if __MSVCRT_VERSION__ < 0x0800
_CRTIMP int __cdecl __MINGW_NOTHROW	_utime (const char*, struct _utimbuf*);
#endif

#ifndef	_NO_OLDNAMES
/* FIXME for __MSVCRT_VERSION__ >= 0x0800 */
_CRTIMP int __cdecl __MINGW_NOTHROW	utime (const char*, struct utimbuf*);
#endif	/* Not _NO_OLDNAMES */

#if __MSVCRT_VERSION__ < 0x0800
_CRTIMP int __cdecl __MINGW_NOTHROW	_futime (int, struct _utimbuf*);
#endif

/* The wide character version, only available for MSVCRT versions of the
 * C runtime library. */
#ifdef __MSVCRT__
#if __MSVCRT_VERSION__ < 0x0800
_CRTIMP int __cdecl __MINGW_NOTHROW	_wutime (const wchar_t*, struct _utimbuf*);
#endif
#endif /* MSVCRT runtime */

/* These require newer versions of msvcrt.dll (6.10 or higher).  */ 
#if __MSVCRT_VERSION__ >= 0x0601
struct __utimbuf64
{
	__time64_t actime;
	__time64_t modtime;
};

_CRTIMP int __cdecl __MINGW_NOTHROW	_utime64 (const char*, struct __utimbuf64*);
_CRTIMP int __cdecl __MINGW_NOTHROW	_wutime64 (const wchar_t*, struct __utimbuf64*);
_CRTIMP int __cdecl __MINGW_NOTHROW	_futime64 (int, struct __utimbuf64*);
#endif /* __MSVCRT_VERSION__ >= 0x0601 */

#if __MSVCRT_VERSION__ >= 0x0800
_CRTIMP int __cdecl __MINGW_NOTHROW	_utime32 (const char*, struct __utimbuf32*);
_CRTIMP int __cdecl __MINGW_NOTHROW	_wutime32 (const wchar_t*, struct __utimbuf32*);
_CRTIMP int __cdecl __MINGW_NOTHROW	_futime32 (int, struct __utimbuf32*);
#ifndef _USE_32BIT_TIME_T
_CRTALIAS int __cdecl __MINGW_NOTHROW	_utime (const char* _v1, struct _utimbuf* _v2)	   { return(_utime64  (_v1,(struct __utimbuf64*)_v2)); }
_CRTALIAS int __cdecl __MINGW_NOTHROW	_wutime (const wchar_t* _v1, struct _utimbuf* _v2) { return(_wutime64 (_v1,(struct __utimbuf64*)_v2)); }
_CRTALIAS int __cdecl __MINGW_NOTHROW	_futime (int _v1, struct _utimbuf* _v2)		   { return(_futime64 (_v1,(struct __utimbuf64*)_v2)); }
#else
_CRTALIAS int __cdecl __MINGW_NOTHROW	_utime (const char* _v1, struct _utimbuf* _v2)	   { return(_utime32  (_v1,(struct __utimbuf32*)_v2)); }
_CRTALIAS int __cdecl __MINGW_NOTHROW	_wutime (const wchar_t* _v1, struct _utimbuf* _v2) { return(_wutime32 (_v1,(struct __utimbuf32*)_v2)); }
_CRTALIAS int __cdecl __MINGW_NOTHROW	_futime (int _v1, struct _utimbuf* _v2)		   { return(_futime32 (_v1,(struct __utimbuf32*)_v2)); }
#endif
#endif /* __MSVCRT_VERSION__ >= 0x0800 */

#ifdef	__cplusplus
}
#endif

#endif	/* Not RC_INVOKED */

#endif	/* Not _UTIME_H_ */
@


1.9
log
@2010-02-14  Roumen Petrov  <rumen@@users.sourceforge.net>

        Issue [2134161]: time64 functions and types for msvcrt >= 8.0
        (initial implementation)

        * new type: __time32_t

        * new structures: _finddata32_t, _finddata32i64_t, _finddata64i32_t,
        __stat32, _stat32i64, _stat64i32, __timeb32, __utimbuf32,
        __wfinddata32_t, _wfinddata32i64_t, _wfinddata64i32_t

        * new functions: _ctime32, _difftime32, _difftime64, _findfirst32
        _findfirst32i64, _findfirst64i32, _findnext32, _findnext32i64,
        _findnext64i32, _fstat32, _fstat32i64, _fstat64i32, _ftime32,
        _futime32, _gmtime32, _localtime32, _mkgmtime32, _mkgmtime64,
        _mktime32, _stat32, _stat32i64, _stat64i32, _time32, _utime32,
        _wctime32, _wfindfirst32, _wfindfirst32i64, _wfindfirst64i32,
        _wfindnext32, _wfindnext32i64, _wfindnext64i32, _wstat32,
        _wstat32i64, _wstat64i32,_wutime32

        * new define _USE_32BIT_TIME_T set 32 or 64 aliases for: time_t,
        ctime, difftime, _findfirst, _findfirsti64, _findnext, _findnexti64,
        _fstat, _fstati64, _ftime, _futime, gmtime, localtime, mktime,
        _stat, _stati64, time, _utime, _wctime, _wfindfirst, _wfindfirsti64,
        _wfindnext, _wfindnexti64, _wstat, _wstati64, _wutime
@
text
@@


1.8
log
@2007-10-03  Bernd Becker <hugin@@users.sourceforge.net>

        * include/io.h (__finddata64_t, __wfinddata64_t): changed member 'size'
        from '_fsize_t' to '__int64' to be consistent with the other ...64
        structures and the value set there is 8 bytes not 4.  Add guard for both
        as the are only used by functions available from 6.1 on.

        * include/malloc.h (_HEAP_MAXREQ): Define.
        (_aligned_offset_recalloc): Define.
        (_aligned_recalloc()): Define.

        * include/math.h: fixed a typo in a comment.
        (atanhf): Fixed declaration.

        * include/wchar.h (__wfinddata64_t): changed member 'size' from '_fsize_t'
        to '__int64' to be consistent with the other ...64 structures and the value
        set there is 8 bytes not 4.  Added guard as this function is only used by
        functions available from 6.1 on.

        * include/sys/stat.h: some members of 'stat' were declared with types with
        a prefixed underscore, while the ones without the underscore should have
        been used.  Added guard to '__stat64' as it is only used by functions
        available from 6.1 on.  Added the wide character versions of the
        exec()/spawn() family for completion
        (_stati64): changed the type of the 'st_mode' member from 'unsigned int' to
        '_mode_t'

        * include/sys/timeb.h (timeb, _timb): changed the type of the 'time' member
        from 'long' to 'time_t'
        (__timeb64): moved declaration of structure directly before the declaration
        of the function '_ftime64()', so it is guarded as well

        * include/sys/utime.h (__utimbuf64): moved declaration of structure directly
        before the declaration of the functions using it, so it is guarded as well
@
text
@d33 7
d55 1
d57 1
d60 1
d64 1
d66 1
d71 1
d73 1
d89 15
@


1.7
log
@	*include/assert.h:  Qualify all  functions with __MINGW_NOTHROW.
	*include/conio.h:  Likewise.
	*include/ctype.h:  Likewise.
	*include/direct.h:  Likewise.
	*include/dos.h:  Likewise.
	*include/errno.h:  Likewise.
	*include/fenv.h:  Likewise.
	*include/float.h:  Likewise.
	*include/inttypes.h:  Likewise.
	*include/io.h:  Likewise.
	*include/libgen.h:  Likewise.
	*include/locale.h:  Likewise.
	*include/malloc.h:  Likewise.
	*include/mbctype.h:  Likewise.
	*include/mbstring.h:  Likewise.
	*include/process.h:  Likewise.
	*include/search.h:  Likewise.
	*include/setjmp.h:  Likewise.
	*include/signal.h:  Likewise.
	*include/stdio.h:  Likewise.
	*include/stdlib.h:  Likewise.
	*include/string.h:  Likewise.
	*include/time.h:  Likewise.
	*include/wchar.h:  Likewise.
	*include/sys/stat.h:  Likewise.
	*include/sys/time.h:  Likewise.
	*include/sys/timeb.h:  Likewise.
	*include/sys/utime.h:  Likewise.
@
text
@a43 7
struct __utimbuf64
{
	__time64_t actime;
	__time64_t modtime;
};


d64 6
@


1.6
log
@
	* CONTRIBUTORS: New file.
	* DISCLAIMER: Ditto.
	* CRT_noglob.c: Reword copyright and disclaimer.  Move Contributors
	section CONTRIBUTORS file.  Remove RCS tags.
	* CRTFmode.c: Ditto.
	* CRTglob.c: Ditto.
	* CRTinit.c: Ditto.
	* crt1.c: Ditto.
	* crtdll.dev: Ditto.
	* dllcrt1.c: Ditto.
	* dllmain.c: Ditto.
	* gccmain.c: Ditto.
	* init.c: Ditto.
	* isascii.c: Ditto.
	* iscsym.c: Ditto.
	* iscsymf.c: Ditto.
	* jamfile: Ditto.
	* main.c: Ditto.
	* msvcrt.def.in: Ditto.
	* strcasecmp.c: Ditto.
	* toascii.c: Ditto.
	* wcscmpi.c: Ditto.
	* include/assert.h: Ditto.
	* include/conio.h: Ditto.
	* include/ctype.h: Ditto.
	* include/direct.h: Ditto.
	* include/dirent.h: Ditto.
	* include/dos.h: Ditto.
	* include/errno.h: Ditto.
	* include/excpt.h: Ditto.
	* include/fcntl.h: Ditto.
	* include/float.h: Ditto.
	* include/io.h: Ditto.
	* include/locale.h: Ditto.
	* include/malloc.h: Ditto.
	* include/math.h: Ditto.
	* include/process.h: Ditto.
	* include/setjmp.h: Ditto.
	* include/share.h: Ditto.
	* include/signal.h: Ditto.
	* include/stdio.h: Ditto.
	* include/stdlib.h: Ditto.
	* include/string.h: Ditto.
	* include/tchar.h: Ditto.
	* include/time.h: Ditto.
	* include/wchar.h: Ditto.
	* include/sys/locking.h: Ditto.
	* include/sys/param.h: Ditto.
	* include/sys/stat.h: Ditto.
	* include/sys/timeb.h: Ditto.
	* include/sys/types.h: Ditto.
	* include/sys/utime.h: Ditto.
	* mingwex/dirent.c: Ditto.
@
text
@d55 1
a55 1
_CRTIMP int __cdecl	_utime (const char*, struct _utimbuf*);
d58 1
a58 1
_CRTIMP int __cdecl	utime (const char*, struct utimbuf*);
d61 1
a61 1
_CRTIMP int __cdecl	_futime (int, struct _utimbuf*);
d66 1
a66 1
_CRTIMP int __cdecl	_wutime (const wchar_t*, struct _utimbuf*);
d71 3
a73 3
_CRTIMP int __cdecl	_utime64 (const char*, struct __utimbuf64*);
_CRTIMP int __cdecl	_wutime64 (const wchar_t*, struct __utimbuf64*);
_CRTIMP int __cdecl	_futime64 (int, struct __utimbuf64*);
@


1.5
log
@	Add prototypes for new msvcrt.dll versions

	* include/_mingw.h (__MSVCRT_VERSION__): Define default as 0x0600.

	* include/time.h (__time64_t): Add typedef.
	(_mktime64): Add prototype for __MSVCRT_VERSION__ >= 0x0601.
	(_ctime64): Likewise.
	(_wctime64): Likewise.
	(_gmtime64): Likewise.
	(_localtime64): Likewise.
	(wcsftime): Move into _WTIME_DEFINED block.
	Regroup non-ANSI prototypes.

	* include/io.h: Include <stdint.h>.
	(__finddata64_t): Add struct definition.
	(__wfinddata64_t): Likewise.
	(_findfirst64): Add prototype for __MSVCRT_VERSION__ >= 0x0601.
	(_findnext64): Likewise.
	(_wfindfirst64): Likewise.
	(_wfindnext64): Likewise.

	* include/sys/timeb.h (__timeb64): Add struct definition.
	(_ftime64): Add prototype for __MSVCRT_VERSION__ >= 0x0601.

	* include/sys/utime.h (__utimbuf64): Add struct definition.
	(_utime64): Add prototype for __MSVCRT_VERSION__ >= 0x0601.
	(_futime64): Likewise.
	(_wutime64): Likewise.

	* include/sys/stat.h (__stat64):  Add struct definition.
	(_fstat64): Add prototype for __MSVCRT_VERSION__ >= 0x0601.
	(_stat64): Likewise.
	(_wstat64): Likwise.

	* include/sys/types.h (__time64_t):  Add typedef.

	* include/wchar.h (__wfinddata64_t): Add structure definition.
	(__stat64): Likewise.
	(_wctime64): Add prototype for __MSVCRT_VERSION__ >= 0x0601.
	(_wfindfirst64): Likewise.
	(_wfindnext64): Likewise.
	(_wutime64): Likewise.
	(_wstat64): Likwise.

	* include/malloc.h (_aligned_free): Add prototype for
	__MSVCRT_VERSION__ >= 0x0700.
	(_aligned_malloc): Likewise.
	(_aligned_offset_malloc): Likewise.
	(_aligned_offset_realloc): Likewise.
	(_aligned_realloc): Likewise.

	* include/string.h (_wcserror): Add prototype for
	__MSVCRT_VERSION__ >= 0x0700.
	(__wcserror): Likewise.

	* include/math.h (_set_SSE2_enable): Add prototype for
	__MSVCRT_VERSION__ >= 0x0701.
@
text
@d3 3
a7 19
 *
 * This file is part of the Mingw32 package.
 *
 * Contributors:
 *  Created by Colin Peters <colin@@bird.fu.is.saga-u.ac.jp>
 *
 *  THIS SOFTWARE IS NOT COPYRIGHTED
 *
 *  This source code is offered for use in the public domain. You may
 *  use, modify or distribute it freely.
 *
 *  This code is distributed in the hope that it will be useful but
 *  WITHOUT ANY WARRANTY. ALL WARRANTIES, EXPRESS OR IMPLIED ARE HEREBY
 *  DISCLAIMED. This includes but is not limited to warranties of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
 *
 * $Revision: 1.3 $
 * $Author: dannysmith $
 * $Date: 2001/11/29 04:26:33 $
@


1.4
log
@	* include/conio.h: Remove __STRICT_ANSI__ guard from non-ANSI header.
	* include/direct.h:  Ditto.
	* include/dirent.h:  Ditto.
	* include/dos.h:  Ditto.
	* include/excpt.h:  Ditto.
	* inlude/fcntl,h
	* include/io.h:  Ditto.
	* inlude/mem.h:  Ditto.
	* include/memory.h:  Ditto.
	* include/process.h:  Ditto.
	* inlude/search.h:  Ditto.
	* include/share.h:  Ditto.
	* include/unistd.h:  Ditto.
	* include/sys/fcntl.h:  Ditto.
	* include/file.h:  Ditto.
	* include/sys/locking.h:  Ditto.
	* include/sys/param.h:  Ditto.
	* include/sys/stat,h
	* include/sys/time.h:  Ditto.
	* include/sys/timeb.h:  Ditto.
	* include/sys/types.h:  Ditto.
	* include/sys/unistd.h:  Ditto.
	* include/sys/utime.h:  Ditto.
@
text
@d60 6
d72 5
d84 7
a90 3
#ifndef	_NO_OLDNAMES
_CRTIMP int __cdecl	utime (const char*, struct utimbuf*);
#endif	/* Not _NO_OLDNAMES */
@


1.3
log
@	* include/_mingw.h (_CRTIMP): Define for __GNUC__ if
	__declspec(dllimport)  supported.
	(__cdecl): Define if not already defined.
	(__stdcall): Likewise.
	* include/dirent.h: Qualify fuctions with __cdecl.
	* include/fenv.h: Likewise.
	* include/inttypes.h: Likewise.
	* include/assert.h: Qualify fuctions with __cdecl. Qualify
	CRT dll imports with _CRTIMP.
	* include/conio.h: Likewise.
	* include/ctype.h: Likewise.
	* include/direct.h: Likewise.
	* include/dos.h: Likewise.
	* include/errno.h: Likewise.
	* include/float.h: Likewise.
	* include/io.h: Likewise.
	* include/locale.h: Likewise.
	* include/malloc.h: Likewise.
	* include/math.h: Likewise.
	* include/mbctype.h: Likewise.
	* include/mbstring.h: Likewise.
	* include/process.h: Likewise.
	* include/setjmp.h: Likewise.
	* include/signal.h: Likewise.
	* include/stdio.h: Likewise.
	* include/stdlib.h: Likewise.
	* include/string.h: Likewise.
	* include/time.h: Likewise.
	* include/wchar.h: Likewise.
	* include/wctype.h: Likewise.
	* include/sys/stat.h: Likewise.
	* include/sys/timeb.h: Likewise.
	* include/sys/utime.h: Likewise.

	* include/ctype.h: Guard ctype inlines with __NO_INLINE__.
	* include/wctype.h: Guard wctype inlines with __NO_INLINE__.

	* include/stdio.h (__VALIST): Guard against prior definition.
@
text
@a25 3

#ifndef	__STRICT_ANSI__

a83 3

#endif	/* Not __STRICT_ANSI__ */

@


1.2
log
@Merge MinGW CVS differences
@
text
@d68 2
a69 2
int	_utime (const char*, struct _utimbuf*);
int	_futime (int, struct _utimbuf*);
d74 1
a74 1
int	_wutime (const wchar_t*, struct _utimbuf*);
d77 1
a77 1
int	utime (const char*, struct utimbuf*);
@


1.2.16.1
log
@	* include/settjmp.h: Use C++ c-header compatibility defines.
	* include/time.h: Don't include non-ISO sys/types.h.
	(struct tm): Define in __CSTD, if not already done.
	(_wasctime): Qualify tm with __CSTD.
	(_wctime): Qualify time_t with __CSTD.
	* include/wchar.h (ctype.h): Don't #include.
	(stdio.h): Don't #include.
	(time.h): Don't #include.
	(wctype.h): Include in C, but not in C++ in ANSI mode.
	(time_t): Define in __CSTD, if not already done. Qualify
	with __CSTD throughout.
	(struct tm): Likewise.
	(FILENAME_MAX): Replace with numeric constant throughout.
	Whitespace.
	* include/io.h (stdio.h): Don't #include.
	(time_t): Define in __CSTD, if not already done. Qualify
	with __CSTD throughout.
	(FILENAME_MAX): Replace with numeric constant throughout.
	Consolidate RC_INVOKED. __cplusplus blocks.
 	* include/dir.h: Add header guard.
	* include/sys/time.h: Add header guard.
	* include/sys/types.h (time_t): Define in __CSTD.
	* include/sys/utime.h (_utimbuf, utimbuf): Qualify
	time_t with __CSTD.

	Correct spelling of compatibility in ChangeLog.
@
text
@d49 2
a50 2
	__CSTD time_t	actime;		/* Access time */
	__CSTD time_t	modtime;	/* Modification time */
d58 2
a59 2
	__CSTD time_t	actime;
	__CSTD time_t	modtime;
@


1.2.16.2
log
@	Merge from mingw trunk (changes since 2003-01-27).
@
text
@d68 2
a69 2
_CRTIMP int __cdecl	_utime (const char*, struct _utimbuf*);
_CRTIMP int __cdecl	_futime (int, struct _utimbuf*);
d74 1
a74 1
_CRTIMP int __cdecl	_wutime (const wchar_t*, struct _utimbuf*);
d77 1
a77 1
_CRTIMP int __cdecl	utime (const char*, struct utimbuf*);
@


1.1
log
@Initial revision
@
text
@d18 1
a18 1
 *  DISCLAMED. This includes but is not limited to warranties of
d21 3
a23 3
 * $Revision: 1.5 $
 * $Author: cgf $
 * $Date: 2000/02/05 04:05:03 $
@


1.1.1.1
log
@import winsup-2000-02-17 snapshot
@
text
@@
