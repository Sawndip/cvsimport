head	1.3;
access;
symbols
	cr-0x5f1:1.2.0.6
	cv-branch:1.2.0.4
	cr-0x3b58:1.2.0.2
	cr-0x9e:1.1.0.12
	cr-0x9d:1.1.0.10
	corinna-01:1.1
	cr-0x9c:1.1.0.8
	cr-0x9b:1.1.0.6
	cr-0x99:1.1
	Z-emcb-cygwin_daemon:1.1.0.4
	w32api-2_2:1.1
	mingw-runtime-2_4:1.1
	mingw-std-ns-branch:1.1.0.2;
locks; strict;
comment	@ * @;


1.3
date	2008.06.03.18.42.21;	author keithmarshall;	state dead;
branches;
next	1.2;

1.2
date	2004.04.22.04.38.24;	author dannysmith;	state Exp;
branches;
next	1.1;

1.1
date	2002.07.29.03.00.10;	author dannysmith;	state Exp;
branches;
next	;


desc
@@


1.3
log
@Avoid precision errors in round(), lround() and llround() functions.
@
text
@#include <math.h>
#include <limits.h>
#include <errno.h>

long
lroundl (long double x)
{
  /* Add +/- 0.5, then round towards zero.  */
  long double tmp = truncl (x + (x >= 0.0L ?  0.5L : -0.5L));
  if (!isfinite (tmp) 
      || tmp > (long double)LONG_MAX
      || tmp < (long double)LONG_MIN)
    { 
      errno = ERANGE;
      /* Undefined behaviour, so we could return anything.  */
      /* return tmp > 0.0L ? LONG_MAX : LONG_MIN;  */
    }
  return (long)tmp;
}
@


1.2
log
@	* mingwex/math/lround.c: Rewrite.
	* mingwex/math/lroundf.c: Rewrite.
	* mingwex/math/lroundl.c: Rewrite.
	* mingwex/math/llround.c: Rewrite.
	* mingwex/math/llroundf.c: Rewrite.
	* mingwex/math/llroundl.c: Rewrite.
@
text
@@


1.1
log
@Add incomplet long double math support to libmingwex.a
@
text
@a0 1
#include <fenv.h>
d2 2
d6 13
a18 17
lroundl (long double x) {
  long retval;
  unsigned short saved_cw, _cw;
  __asm__ (
	"fnstcw %0;" : "=m" (saved_cw)
	); /* save  control word  */
  _cw = ~(FE_TONEAREST | FE_DOWNWARD | FE_UPWARD | FE_TOWARDZERO)
     	  | (x > 0.0 ? FE_UPWARD : FE_DOWNWARD); /* round away from zero */
  __asm__ (
	"fldcw %0;" : : "m" (_cw)
	);  /* load the rounding control */
  __asm__ __volatile__ (
	"fistpl %0"  : "=m" (retval) : "t" (x) : "st");
  __asm__ (
	"fldcw %0;" : : "m" (saved_cw)
	); /* restore control word */
  return retval;
@

