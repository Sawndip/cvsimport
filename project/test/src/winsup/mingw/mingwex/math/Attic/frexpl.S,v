head	1.2;
access;
symbols
	cygwin-1_7_17-release:1.1
	cygwin-64bit-branch:1.1.0.22
	cygwin-1_7_16-release:1.1
	cygwin-1_7_15-release:1.1
	cygwin-1_7_14_2-release:1.1
	cygwin-1_7_14-release:1.1
	cygwin-1_7_12-release:1.1
	cygwin-1_7_11-release:1.1
	cygwin-1_7_10-release:1.1
	cygwin-1_7_9-release:1.1
	cygwin-1_7_8-release:1.1
	cygwin-1_7_7-release:1.1
	cygwin-1_7_5-release:1.1
	cygwin-1_7_4-release:1.1
	cygwin-1_7_3-release:1.1
	cygwin-1_7_2-release:1.1
	cygwin-1_7_1-release:1.1
	cv-branch-2:1.1.0.20
	cr-0x5f1:1.1.0.18
	cv-branch:1.1.0.16
	cr-0x3b58:1.1.0.14
	cr-0x9e:1.1.0.12
	cr-0x9d:1.1.0.10
	corinna-01:1.1
	cr-0x9c:1.1.0.8
	cr-0x9b:1.1.0.6
	cr-0x99:1.1
	Z-emcb-cygwin_daemon:1.1.0.4
	w32api-2_2:1.1
	mingw-runtime-2_4:1.1
	mingw-std-ns-branch:1.1.0.2;
locks; strict;
comment	@# @;


1.2
date	2012.11.07.16.52.23;	author cgf;	state dead;
branches;
next	1.1;

1.1
date	2002.07.29.03.00.09;	author dannysmith;	state Exp;
branches;
next	;


desc
@@


1.2
log
@* mingw: Delete obsolete directory.
* w32api: Ditto.
@
text
@/*
  Cephes Math Library Release 2.7:  May, 1998
  Copyright 1984, 1987, 1988, 1992, 1998 by Stephen L. Moshier

  Extracted from floorl.387 for use in libmingwex.a by
  Danny Smith <dannysmith@@users.sourceforge.net>
  2002-06-20
*/

/*
 * frexpl(long double x, int* expnt) extracts the exponent from x.
 * It returns an integer power of two to expnt and the significand
 * between 0.5 and 1 to y.  Thus  x = y * 2**expn.
 */ 
	.align 2
.globl _frexpl
_frexpl:
	pushl %ebp
	movl %esp,%ebp
	subl $24,%esp
	pushl %esi
	pushl %ebx
	fldt 8(%ebp)
	movl 20(%ebp),%ebx
	fld %st(0)
	fstpt -12(%ebp)
	leal -4(%ebp),%ecx
	movw -4(%ebp),%dx
	andl $32767,%edx
	jne L25
	fldz
	fucompp
	fnstsw %ax
	andb $68,%ah
	xorb $64,%ah
	jne L21
	movl $0,(%ebx)
	fldz
	jmp L24
	.align 2,0x90
	.align 2,0x90
L21:
	fldt -12(%ebp)
	fadd %st(0),%st
	fstpt -12(%ebp)
	decl %edx
	movw (%ecx),%si
	andl $32767,%esi
	jne L22
	cmpl $-66,%edx
	jg L21
L22:
	addl %esi,%edx
	jmp L19
	.align 2,0x90
L25:
	fstp %st(0)
L19:
	addl $-16382,%edx
	movl %edx,(%ebx)
	movw (%ecx),%ax
	andl $-32768,%eax
	orl $16382,%eax
	movw %ax,(%ecx)
	fldt -12(%ebp)
L24:
	leal -32(%ebp),%esp
	popl %ebx
	popl %esi
	leave
	ret
@


1.1
log
@Add incomplet long double math support to libmingwex.a
@
text
@@

