head	1.3;
access;
symbols
	cygwin-1_7_17-release:1.2
	cygwin-64bit-branch:1.2.0.10
	cygwin-1_7_16-release:1.2
	cygwin-1_7_15-release:1.2
	cygwin-1_7_14_2-release:1.2
	cygwin-1_7_14-release:1.2
	cygwin-1_7_12-release:1.2
	cygwin-1_7_11-release:1.2
	cygwin-1_7_10-release:1.2
	cygwin-1_7_9-release:1.2
	cygwin-1_7_8-release:1.2
	cygwin-1_7_7-release:1.2
	cygwin-1_7_5-release:1.2
	cygwin-1_7_4-release:1.2
	cygwin-1_7_3-release:1.2
	cygwin-1_7_2-release:1.2
	cygwin-1_7_1-release:1.2
	cv-branch-2:1.2.0.8
	cr-0x5f1:1.2.0.6
	cv-branch:1.2.0.4
	cr-0x3b58:1.2.0.2
	cr-0x9e:1.1.0.12
	cr-0x9d:1.1.0.10
	corinna-01:1.1
	cr-0x9c:1.1.0.8
	cr-0x9b:1.1.0.6
	cr-0x99:1.1
	Z-emcb-cygwin_daemon:1.1.0.4
	w32api-2_2:1.1
	mingw-runtime-2_4:1.1
	mingw-std-ns-branch:1.1.0.2;
locks; strict;
comment	@ * @;


1.3
date	2012.11.07.16.52.23;	author cgf;	state dead;
branches;
next	1.2;

1.2
date	2004.02.01.02.52.21;	author dannysmith;	state Exp;
branches;
next	1.1;

1.1
date	2002.07.29.03.00.09;	author dannysmith;	state Exp;
branches;
next	;


desc
@@


1.3
log
@* mingw: Delete obsolete directory.
* w32api: Ditto.
@
text
@#include <math.h>
#include <errno.h>
  
long double ldexpl(long double x, int expn)
{
  long double res;
  if (!isfinite (x) || x == 0.0L)
    return x;

  __asm__ ("fscale"
  	    : "=t" (res)
	    : "0" (x), "u" ((long double) expn));

  if (!isfinite (res) || res == 0.0L)
    errno = ERANGE;

  return res;
}

@


1.2
log
@	* mingwex/math/ldexpl.c (ldexpl): Call __asm__("fscale")
	directly, rather than via scabnl.
@
text
@@


1.1
log
@Add incomplet long double math support to libmingwex.a
@
text
@d3 10
d14 2
d17 1
a17 8
long double ldexpl(long double x, int expn)
{
  if (isfinite (x) && x != 0.0L)
    {
      x = scalbnl (x , expn);
      if (!isfinite (x) || x == 0.0) errno = ERANGE;
    }
  return x;
@

