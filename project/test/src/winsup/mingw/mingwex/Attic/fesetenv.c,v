head	1.7;
access;
symbols
	cygwin-1_7_17-release:1.6
	cygwin-64bit-branch:1.6.0.8
	cygwin-1_7_16-release:1.6
	cygwin-1_7_15-release:1.6
	cygwin-1_7_14_2-release:1.6
	cygwin-1_7_14-release:1.6
	cygwin-1_7_12-release:1.6
	cygwin-1_7_11-release:1.6
	cygwin-1_7_10-release:1.6
	cygwin-1_7_9-release:1.6
	cygwin-1_7_8-release:1.6
	cygwin-1_7_7-release:1.6
	cygwin-1_7_5-release:1.6
	cygwin-1_7_4-release:1.6
	cygwin-1_7_3-release:1.6
	cygwin-1_7_2-release:1.6
	cygwin-1_7_1-release:1.6
	cv-branch-2:1.6.0.6
	cr-0x5f1:1.6.0.4
	cv-branch:1.6.0.2
	cr-0x3b58:1.5.0.2
	cr-0x9e:1.3.0.10
	cr-0x9d:1.3.0.8
	corinna-01:1.3
	cr-0x9c:1.3.0.6
	cr-0x9b:1.3.0.4
	cr-0x99:1.3
	Z-emcb-cygwin_daemon:1.3.0.2
	w32api-2_2:1.2
	mingw-runtime-2_4:1.2
	mingw-std-ns-branch:1.2.0.6
	mingw-runtime-2_0:1.2
	mingwex:1.1.0.2;
locks; strict;
comment	@ * @;


1.7
date	2012.11.07.16.52.19;	author cgf;	state dead;
branches;
next	1.6;

1.6
date	2006.07.03.10.32.58;	author dannysmith;	state Exp;
branches;
next	1.5;

1.5
date	2005.08.25.08.39.54;	author dannysmith;	state Exp;
branches;
next	1.4;

1.4
date	2005.08.25.02.35.34;	author dannysmith;	state Exp;
branches;
next	1.3;

1.3
date	2003.03.17.01.03.43;	author dannysmith;	state Exp;
branches;
next	1.2;

1.2
date	2002.06.13.10.20.44;	author dannysmith;	state Exp;
branches
	1.2.6.1;
next	1.1;

1.1
date	2002.03.22.22.43.17;	author dannysmith;	state dead;
branches
	1.1.2.1;
next	;

1.1.2.1
date	2002.03.22.22.43.17;	author dannysmith;	state Exp;
branches;
next	1.1.2.2;

1.1.2.2
date	2002.04.16.09.02.30;	author dannysmith;	state Exp;
branches;
next	1.1.2.3;

1.1.2.3
date	2002.04.17.02.34.25;	author dannysmith;	state Exp;
branches;
next	;

1.2.6.1
date	2003.03.31.22.32.19;	author dannysmith;	state Exp;
branches;
next	;


desc
@@


1.7
log
@* mingw: Delete obsolete directory.
* w32api: Ditto.
@
text
@#include <fenv.h>
#include <float.h>
#include "cpu_features.h"

/* 7.6.4.3
   The fesetenv function establishes the floating-point environment
   represented by the object pointed to by envp. The argument envp
   points to an object set by a call to fegetenv or feholdexcept, or
   equal the macro FE_DFL_ENV or an implementation-defined environment
   macro. Note that fesetenv merely installs the state of the exception
   flags represented through its argument, and does not raise these
   exceptions.
 */

extern void (*_imp___fpreset)( void ) ;

int fesetenv (const fenv_t * envp)
{
  /* Default mxcsr status is to mask all exceptions.  All other bits
     are zero.  */
     
  unsigned int _csr = FE_ALL_EXCEPT << __MXCSR_EXCEPT_MASK_SHIFT /*= 0x1f80 */; 
  
  if (envp == FE_PC64_ENV)
   /*
    *  fninit initializes the control register to 0x37f,
    *  the status register to zero and the tag word to 0FFFFh.
    *  The other registers are unaffected.
    */
    __asm__ ("fninit");

  else if (envp == FE_PC53_ENV)
   /*
    * MS _fpreset() does same *except* it sets control word
    * to 0x27f (53-bit precison).
    * We force calling _fpreset in msvcrt.dll
    */

   (*_imp___fpreset)();

  else if (envp == FE_DFL_ENV)
    /* Use the choice made at app startup */ 
    _fpreset();

  else
    {
      __asm__ ("fldenv %0;" : : "m" (*envp));
       /* Setting the reserved high order bits of MXCSR causes a segfault */
       _csr = envp ->__mxcsr & 0xffff;
    }

  /* Set MXCSR */   
   if (__HAS_SSE)
     __asm__ volatile ("ldmxcsr %0" : : "m" (_csr));
 
  return 0;
}
@


1.6
log
@ 	Support SSE float environment in fenv.h functions.

	* cpu_features.c: New file.
	* cpu_features.h: New file.
	* crt1.c: Include "cpu_features.h".
	(__mingw_CRTStartup): Call cpu_features_init().
	* Makefile.in (MING_OBJS): Add cpu_features.c.
	(SRCDIST_FILES): Add cpu_features.c, cpu_features.h.
	* include/fenv,h ( fenv_t;): Append  __mxcsr field.
	(__MXCSR_EXCEPT_FLAG_SHIFT): New define.
	(__MXCSR_EXCEPT_MASK_SHIFT): New define.
	(__MXCSR_ROUND_FLAG_SHIFT): New define.
	* mingwex/feclearexcept.c: Include "cpu_features.h".
	Handle SSE environment.
	* mingwex/fegetenv.c: Likewise.
	* mingwex/feholdexcept.c: Likewise.
	* mingwex/fesetenv.c: Likewise.
	* mingwex/fesetexceptflag.c: Likewise.
	* mingwex/fesetround.c: Likewise.
	* mingwex/fetestexcept.c: Likewise.
	* mingwex/feupdateenv.c: Likewise.
	* mingwex/fegetround.c: Add comment.
@
text
@@


1.5
log
@	* mingwex/fe*.c: Revert previous changes.
	* include/fenv.h: Revert previous changes.

	Add Changelog entry for the reverted change.
@
text
@d3 1
d19 5
d46 10
a55 2
    __asm__ ("fldenv %0;" : : "m" (*envp));

@


1.4
log
@	* mingwex/feclearexcept.c (feclearexcept): Change declaration.
	Do not return a value.
	* mingwex/fegetexceptflag.c (fegetexceptflag): Likewise.
	* mingwex/feraiseexcept.c (feraiseexcept): Likewise.
	* mingwex/fesetexceptflag.c (fesetexceptflag): Likewise.
	* mingwex/fegetenv.c (fegetenv): Likewise.
	* mingwex/fesetenv.c (fesetenv): Likewise.
	* mingwex/feupdateenv.c (feupdateenv): Likewise.
	* include/fenv.h (feclearexcept, fegetexceptflag, feraiseexcept,
	fesetexceptflag, fegetenv, fesetenv, feupdateenv): Correct
	prototypes.
@
text
@d16 1
a16 1
void fesetenv (const fenv_t * envp)
d41 2
@


1.3
log
@	Get rid of some warnings
	* mingwex/dirent.c (_topendir): Eliminate signed/unsigned warning.
	* mingwex/strtoimax.c (strtoimax): Likewise.
	* mingwex/wcstoimax.c (wcstoimax): Likewise.
	* mingwex/wtoll.c (wtoll): Remove unnecessary ';'
	* mingwex/fesentenv.c: Include float.h.
	* mingwex/math/powl.c: Eliminate type punning/strict aliasing 
	warning.
	* mingwex/math/tanhl.c: Eliminate signed/unsigned warning in
	constants.
	* mingwex/math/tgammal.c: Likewise.
@
text
@d16 1
a16 1
int fesetenv (const fenv_t * envp)
a40 1
  return 0;
@


1.2
log
@	* include/_mingw.h: Increment version to 2.0.
	* Makefile.in: Ditto.
	Merge in mingwex branch.
@
text
@d2 1
@


1.2.6.1
log
@	Merge from mingw trunk (changes since 2003-01-27).
@
text
@a1 1
#include <float.h>
@


1.1
log
@file fesetenv.c was initially added on branch mingwex.
@
text
@d1 41
@


1.1.2.1
log
@	* configure.in: Add mingwex as SUBDIRS and configdirs.
	* configure: Regenerate.
	* Makefile.in (MINGW_OBJS): Remove dirent.o.
	(SRC_DIST_FILES): Remove dirent.c.
	* dirent.c: Remove.
	* include/stdlib.h (_Exit): Add static inline
	function.
	(struct lldiv_t): Define.
	(lldiv): Add prototype.
	(llabs): Add extern inline function.
	(strtoll,strtoull): Add prototypes.
	(wcstol, wcstoul, wcstod): Group together.
	(strtof, wcstof): Add extern inline definitions.
	(atoll,lltoa,ulltoa, wtoll, lltow ulltow): Add prototypes
	and extern inline definitions.
	* include/wchar.h (fwide, wcstoll,wcstoull, wmemchr
	wmemcmp, wmemcpy, wmemmove, wmemset. mbsinit): Add
	prototypes.
	(wcstol, wcstoul,wcstod): Copy prototypes from stdlib.h.
	(wcstof): Add extern inline definition.
	* include/math.h (nan, nanf): Add prototypes.
	(NAN, INFINITE): Define constants.
	(fpclassify, isnan ,signbit): Add macros and supporting float
	and double functions.
	(isfinite, isinf, isnormal): Add macros.
	(isgreater, isless, isgreaterequal, islessequal,islessgreater):
	Add macros.
	(rint, rintf, round, roundf, trunc. truncf, fmax, fmaxf,
	fmin, fminf, fma, fmaf, log2, log2f): Add prototypes.
	(copysign, logb, nextafter, scalb): Add prototypes and
	inline stubs for underscored versions in msvcrt.dll.
	* include/inttypes.h: New file.
	* include/fenv.h: New file

	Add new mingwex subdir and files.
	* mingwex: New directory.
	* mingwex/Makefile.in: New file.
	* mingwex/configure.in: New file.
	* mingwex/configure: Generate.
	* mingwex/dirent.c: Moved here from parent dir.
	* mingwex/atoll.c: New file.
	* mingwex/feclearexcept.c: New file.
	* mingwex/fegetenv.c: New file.
	* mingwex/fegetexceptflag.c: New file.
	* mingwex/fegetround.c: New file.
	* mingwex/feholdexcept.c: New file.
	* mingwex/feraiseexcept.c: New file.
	* mingwex/fesetenv.c: New file.
	* mingwex/fesetexceptflag.c: New file.
	* mingwex/fesetround.o: New file.
	* mingwex/fetestexcept.c: New file.
	* mingwex/feupdateenv.c: New file.
	* mingwex/fma.S: New file.
	* mingwex/fmaf.S: New file.
	* mingwex/fmax.c: New file.
	* mingwex/fmaxf.c: New file.
	* mingwex/fmin.c: New file.
	* mingwex/fminf.c: New file.
	* mingwex/fp_consts.c: New file.
	* mingwex/fpclassify.c: New file.
	* mingwex/fucom.c: New file.
	* mingwex/fwide.c: New file.
	* mingwex/imaxabs.c: New file.
	* mingwex/imaxdiv.c: New file.
	* mingwex/isnan.c: New file.
	* mingwex/isnanf.c: New file.
	* mingwex/lltoa.c: New file.
	* mingwex/lltow.c: New file.
	* mingwex/log2.c: New file.
	* mingwex/log2f.c: New file.
	* mingwex/math_stubs.c: New file.
	* mingwex/mbsinit.c: New file.
	* mingwex/rint.c: New file.
	* mingwex/round.c: New file.
	* mingwex/signbit.c: New file.
	* mingwex/sitest.c: New file.
	* mingwex/strtof.c: New file.
	* mingwex/strtoimax.c: New file.
	* mingwex/strtoumax.c: New file.
	* mingwex/testwmem.c: New file.
	* mingwex/trunc.c: New file.
	* mingwex/ulltoa.c: New file.
	* mingwex/ulltow.c: New file.
	* mingwex/wcstof.c: New file.
	* mingwex/wcstoimax.c: New file.
	* mingwex/wcstoumax.c: New file.
	* mingwex/wmemchr.c: New file.
	* mingwex/wmemcmp.c: New file.
	* mingwex/wmemcpy.c: New file.
	* mingwex/wmemmove.c: New file.
	* mingwex/wmemset.c: New file.
	* mingwex/wtoll.c: New file.
@
text
@a0 22
#include <fenv.h>

/* 7.6.4.3
   The fesetenv function establishes the floating-point environment
   represented by the object pointed to by envp. The argument envp
   shall point to an object set by a call to fegetenv or feholdexcept,
   or equal the macro FE_DFL_ENV or an implementation-defined environment
   macro. Note that fesetenv merely installs the state of the exception
   flags represented through its argument, and does not raise these
   exceptions.  */

int fesetenv (const fenv_t * envp)
{
  if (envp == FE_DFL_ENV)
/* fninit initializes the control register to 0x37f,
   the status register to zero and the tag word to 0FFFFh.
   The other registers are unaffected */
    __asm__("fninit");	/* is   _fpreset () safer?  */
  else
    __asm__ ("fldenv %0;" : : "m" (*envp));
  return 0;
}
@


1.1.2.2
log
@	* CRT_fp8.c: New file.
	* CRT_fp10.c: New file.
	* crt1.c (__CRT_PC) Declare.
	(__CRT_fesetenv): New static function, using _CRT_PC.
	(__mingw_CRTStartup):Use __CRT_fesetenv instead of _fpreset.
	(_gnu_exception_handler): Likewise.
	* Makefile.in (CRT0S): Add CRT_fp10.o.
	(MINGW_OBJS): Add  CRT_fp8.o.
	(SRCDIST_FILES): Add CRT_fp8.c, CRT_fp10.c.
	Add CRT_fp8.o, CRT_fp10.o dependancies.
	* include/float.h (_fpreset): Expand comment.
	* include/fenv.h (FE_PC64_ENV): New define for Intel x87
	(extended precison) environmemt.
	(FE_PC53_ENV): New define for MSVCRT default environmemt.
	(FE_DFL_ENV): Define as FE_PC53_ENV.
	* mingwex/fesetenv.c: Use FE_PC53_ENV, FE_PC64_ENV to determine
	precision control for default environment.

	* include/math.h: Fix long comment line.
	* profile/configure.in (CRT0S): Set to both gcrt1.o and gcrt2.o
	for mingw.
	* profile/configure: Regenerate.
@
text
@d1 22
a22 33
#include <fenv.h>

/* 7.6.4.3
   The fesetenv function establishes the floating-point environment
   represented by the object pointed to by envp. The argument envp
   points to an object set by a call to fegetenv or feholdexcept, or
   equal the macro FE_DFL_ENV or an implementation-defined environment
   macro. Note that fesetenv merely installs the state of the exception
   flags represented through its argument, and does not raise these
   exceptions.
 */

int fesetenv (const fenv_t * envp)
{
  if (envp == FE_PC64_ENV)
/*
 *  fninit initializes the control register to 0x37f,
 *  the status register to zero and the tag word to 0FFFFh.
 *  The other registers are unaffected.
 */
    __asm__ ("fninit");

  else if (envp == FE_PC53_ENV)
/*
 * MS _fpreset() does same *except* it sets control word
 * to 0x27f (53-bit precison).
 */
    _fpreset();

  else
    __asm__ ("fldenv %0;" : : "m" (*envp));
  return 0;
}
@


1.1.2.3
log
@
	* crt1.c: Revert changes of 2002-04-16. Use _fpreset again.
	* msvcrt.def (_fpreset): Mark as DATA so that only
	_imp___fpreset is exported.
	* msvcrt20.def (_fpreset): Likewise.
	* msvcrt40.def (_fpreset): Likewise.
	* crtdll.def (_fpreset): Likewise.
	* CRT_fp10.c (_fpreset): Overide library _fpreset with one
	that calls fninit.
	(fpreset): Add oldname alias.
	(__CRT_PC): Delete definition. _fpreset does it now.
	*  CRT_fp8.c (_fpreset): Force use of library _imp___fpreset.
	(fpreset): Add oldname alias.
	(__CRT_PC): Delete definition.
	* moldname.def.in: Comment out fpreset.
	* moldname-msvcrt.def: Regenerate.
	* moldname-crtdll.def: Regenerate.
	* include/fenv.h (FE_DFL_ENV): Define as (fenv_t*)0.
	* mingwex/fesetenv.c (FE_DFL_ENV): Use it to set environment
	with the _fpreset determined by startup CRT_fp object.
@
text
@a12 2
extern void (*_imp___fpreset)( void ) ;

d16 5
a20 5
   /*
    *  fninit initializes the control register to 0x37f,
    *  the status register to zero and the tag word to 0FFFFh.
    *  The other registers are unaffected.
    */
d24 4
a27 10
   /*
    * MS _fpreset() does same *except* it sets control word
    * to 0x27f (53-bit precison).
    * We force calling _fpreset in msvcrt.dll
    */

   (*_imp___fpreset)();

  else if (envp == FE_DFL_ENV)
    /* Use the choice made at app startup */ 
@


