head	1.22;
access;
symbols
	cygwin-1_7_17-release:1.21
	cygwin-64bit-branch:1.21.0.2
	cygwin-1_7_16-release:1.20
	cygwin-1_7_15-release:1.20
	cygwin-1_7_14_2-release:1.20
	cygwin-1_7_14-release:1.20
	cygwin-1_7_12-release:1.20
	cygwin-1_7_11-release:1.20
	cygwin-1_7_10-release:1.20
	cygwin-1_7_9-release:1.20
	cygwin-1_7_8-release:1.20
	cygwin-1_7_7-release:1.20
	cygwin-1_7_5-release:1.20
	cygwin-1_7_4-release:1.20
	cygwin-1_7_3-release:1.20
	cygwin-1_7_2-release:1.20
	cygwin-1_7_1-release:1.20
	cv-branch-2:1.19.0.2
	cr-0x5f1:1.12.0.4
	cv-branch:1.12.0.2
	cr-0x3b58:1.10.0.12
	cr-0x9e:1.10.0.10
	cr-0x9d:1.10.0.8
	corinna-01:1.10
	cr-0x9c:1.10.0.6
	cr-0x9b:1.10.0.4
	cr-0x99:1.10
	Z-emcb-cygwin_daemon:1.10.0.2
	w32api-2_2:1.5
	mingw-runtime-2_4:1.5
	mingw-std-ns-branch:1.5.0.6
	mingw-runtime-2_0:1.5
	mingwex:1.4.0.38
	cygnus_cvs_20020108_pre:1.4
	Z-cygwin_daemon_merge-new_HEAD:1.4
	Z-cygwin_daemon_merge_HEAD:1.4
	cygwin_daemon:1.4.0.8;
locks; strict;
comment	@# @;
expand	@o@;


1.22
date	2012.11.07.16.52.13;	author cgf;	state dead;
branches;
next	1.21;

1.21
date	2012.07.30.14.49.15;	author earnie;	state Exp;
branches;
next	1.20;

1.20
date	2009.07.27.20.27.09;	author keithmarshall;	state Exp;
branches;
next	1.19;

1.19
date	2008.10.12.23.58.17;	author cgf;	state Exp;
branches;
next	1.18;

1.18
date	2008.10.03.22.48.22;	author keithmarshall;	state Exp;
branches;
next	1.17;

1.17
date	2008.07.28.22.57.43;	author keithmarshall;	state Exp;
branches;
next	1.16;

1.16
date	2007.03.20.23.19.34;	author keithmarshall;	state Exp;
branches;
next	1.15;

1.15
date	2006.11.25.15.55.05;	author keithmarshall;	state Exp;
branches;
next	1.14;

1.14
date	2006.09.10.14.44.55;	author keithmarshall;	state Exp;
branches;
next	1.13;

1.13
date	2006.08.30.13.05.05;	author corinna;	state Exp;
branches;
next	1.12;

1.12
date	2006.06.18.23.06.56;	author dannysmith;	state Exp;
branches;
next	1.11;

1.11
date	2006.05.24.16.59.02;	author cgf;	state Exp;
branches;
next	1.10;

1.10
date	2003.05.06.14.46.05;	author earnie;	state Exp;
branches;
next	1.9;

1.9
date	2003.05.06.13.35.20;	author earnie;	state Exp;
branches;
next	1.8;

1.8
date	2003.05.06.13.26.44;	author earnie;	state Exp;
branches;
next	1.7;

1.7
date	2003.05.05.16.04.11;	author earnie;	state Exp;
branches;
next	1.6;

1.6
date	2003.04.11.12.35.51;	author earnie;	state Exp;
branches;
next	1.5;

1.5
date	2002.06.13.10.20.41;	author dannysmith;	state Exp;
branches;
next	1.4;

1.4
date	2000.11.29.21.14.48;	author earnie;	state Exp;
branches
	1.4.38.1;
next	1.3;

1.3
date	2000.06.17.17.48.36;	author cgf;	state Exp;
branches;
next	1.2;

1.2
date	2000.04.19.17.11.59;	author cgf;	state Exp;
branches;
next	1.1;

1.1
date	2000.02.17.19.38.31;	author cgf;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2000.02.17.19.38.31;	author cgf;	state Exp;
branches;
next	;

1.4.38.1
date	2002.03.22.22.43.16;	author dannysmith;	state Exp;
branches;
next	1.4.38.2;

1.4.38.2
date	2002.04.04.01.26.50;	author dannysmith;	state Exp;
branches;
next	;


desc
@@


1.22
log
@* mingw: Delete obsolete directory.
* w32api: Ditto.
@
text
@dnl Process this file with autoconf to produce a configure script.

dnl This file is part of winsup/mingw
dnl
dnl This program is free software; you can redistribute it and/or modify
dnl it under the terms of the GNU General Public License as published by
dnl the Free Software Foundation; either version 2 of the License, or
dnl (at your option) any later version.
dnl
dnl This program is distributed in the hope that it will be useful,
dnl but WITHOUT ANY WARRANTY; without even the implied warranty of
dnl MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
dnl GNU General Public License for more details.
dnl
dnl You should have received a copy of the GNU General Public License
dnl along with this program; if not, write to the Free Software
dnl Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.

AC_PREREQ([2.59])
AC_INIT([MinGW Runtime], [v3.x], [http://mingw.org/reporting_bugs], [mingwrt])
MINGW_AC_CONFIG_SRCDIR([__MINGW_VERSION], [include/_mingw.h])

AC_CANONICAL_SYSTEM
GCC_NO_EXECUTABLES
AC_PROG_CC

case "$with_cross_host" in
  ""|*cygwin*) all_dlls_host='all_dlls_host'
	       install_dlls_host='install_dlls_host';;
esac
AC_SUBST([with_cross_host])
AC_SUBST([all_dlls_host])
AC_SUBST([install_dlls_host])

AC_CHECK_TOOL([AR],      [ar],      [ar])
AC_CHECK_TOOL([AS],      [as],      [as])
AC_CHECK_TOOL([RANLIB],  [ranlib],  [ranlib])
AC_CHECK_TOOL([LD],      [ld],      [ld])
AC_CHECK_TOOL([NM],      [nm],      [nm])
AC_CHECK_TOOL([OBJCOPY], [objcopy], [objcopy])
AC_CHECK_TOOL([DLLTOOL], [dlltool], [dlltool])
AC_CHECK_TOOL([DLLWRAP], [dlltool], [dlltool])
AC_CHECK_TOOL([WINDRES], [windres], [windres])

AC_SUBST([NO_CYGWIN])
AC_SUBST([HEADER_SUBDIR])
AC_SUBST([W32API_INCLUDE], ['-I ${top_srcdir}/../w32api/include'])

# The following are used by the GCC profiling hooks...
#
AC_SUBST([LIBGMON_A], [libgmon.a])
AC_SUBST([CRT0S], ["gcrt1.o gcrt2.o"])

# FIXME: Why is this case determined on `target_os'?
# There is no code generator to be built here, so `target_os'
# should be irrelevant.  Should it not rather be `host_os'?
#
case "$target_os" in
*cygwin*)
  PACKAGE_TARNAME="mingw-runtime"
  NO_CYGWIN="`cd ${srcdir}/../utils; pwd`/mingw"
  # Install mingw headers in mingw subdirectory.
  HEADER_SUBDIR="mingw"
  CRT0S="gcrt0.o"
  ;;
esac

# THREAD_DLL used to be set within the above case and was mingwc for CRTDLL.
# I can find no reason to do this.
#
# FIXME: In the future I would like to change the dll name to mingwthrd to
# to match the libmingwthrd.a name.
AC_SUBST([THREAD_DLL], [mingwm])

# LIBM_A also used be set in the preceding case statement; it had the
# exact same assignment, (libm.a), in every case, so we may just as well
# assign it unconditionally, (making the default case redundant).
#
AC_SUBST([LIBM_A], [libm.a])

AC_SUBST([MKINSTALLDIRS], [$ac_aux_dir/mkinstalldirs])

AC_PROG_INSTALL
MINGW_AC_MANPAGE_TRANSFORM

AC_CONFIG_FILES([Makefile mingwex/Makefile profile/Makefile])
AC_OUTPUT

# $RCSfile$: end of file
@


1.21
log
@	* include/_mingw.h: Add __MINGW_VERSION, __MINGW_MAJOR_VERSION,
	__MINGW_MINOR_VERSION and __MINGW_PATCHLEVEL deprecating the __MINGW32_*
	versions of the macros.
	* configure.in: Use __MINGW_VERSION instead of __MINGW32_VERSION.
	* configure: Ditto.
@
text
@@


1.20
log
@Convert to monolithic configuration procedure.
@
text
@d21 1
a21 1
MINGW_AC_CONFIG_SRCDIR([__MINGW32_VERSION], [include/_mingw.h])
@


1.19
log
@* Makefile.in: Use a different method to invoke gcc in a cygwin-hosted
environment.
* mingwex/Makefile.in: Ditto.
* profile/Makefile.in: Ditto.
* configure.in: Record mingw front-end for building under Cygwin.
* mingwex/configure.in: Ditto.
* profile/configure.in: Ditto.
* configure: Regenerate.
* mingwex/configure: Ditto.
* profile/configure: Ditto.
@
text
@d35 5
a39 5
AC_CHECK_TOOL([AR], [ar], [ar])
AC_CHECK_TOOL([AS], [as], [as])
AC_CHECK_TOOL([RANLIB], [ranlib], [ranlib])
AC_CHECK_TOOL([LD], [ld], [ld])
AC_CHECK_TOOL([NM], [nm], [nm])
d45 3
a47 2
AC_CONFIG_SUBDIRS([profile mingwex])
HEADER_SUBDIR=""
d49 4
a52 3
LIBGMON_A=libgmon.a

W32API_INCLUDE='-I $(srcdir)/../w32api/include'
d54 4
d60 2
a61 2
  NO_CYGWIN="$(cd ${srcdir}/../utils; pwd)/mingw"
  LIBM_A=libm.a
d64 1
a64 5
  ;;
*)
  # Build it for MSVCRT by default.
  NO_CYGWIN=
  LIBM_A=libm.a
d75 6
a81 5
AC_SUBST([NO_CYGWIN])
AC_SUBST([LIBM_A])
AC_SUBST([LIBGMON_A])
AC_SUBST([HEADER_SUBDIR])
AC_SUBST([W32API_INCLUDE])
d86 1
a86 1
AC_CONFIG_FILES([Makefile])
@


1.18
log
@Improve package identification in configure script.
@
text
@d54 1
a54 1
  MNO_CYGWIN=-mno-cygwin
d61 1
a61 1
  MNO_CYGWIN=
d74 1
a74 1
AC_SUBST([MNO_CYGWIN])
@


1.17
log
@	Lay foundations for new printf() function family implementation.
@
text
@d20 2
a21 2
AC_INIT([mingw-runtime], [__MINGW32_VERSION])
MINGW_AC_CONFIG_SRCDIR([$PACKAGE_VERSION], [include/_mingw.h])
@


1.16
log
@Add --enable-mingw-manpage-transform configure option.
@
text
@d39 2
@


1.15
log
@configure.in: Update to autoconf 2.5x syntax; fix macro argument quoting;
remove invalid use of AC_ALLOCA; remove redundant use of AC_SUBST.
@
text
@d79 1
@


1.14
log
@	* aclocal.m4 (LIB_AC_PROG_CC, LIB_AC_PROG_CC_GNU, LIB_AC_PROG_CXX):
	Redundant macros; deleted.

	* configure.in (LIB_AC_PROG_CC): Replaced by...
	(AC_PROG_CC): ...this.

	* configure: Regenerated.
@
text
@d19 3
a21 2
AC_PREREQ(2.59)
AC_INIT(dllmain.c)
d31 11
a41 19
AC_SUBST(with_cross_host)
AC_SUBST(all_dlls_host)
AC_SUBST(install_dlls_host)

AC_CHECK_TOOL(AR, ar, ar)

AC_SUBST(AR)
AC_CHECK_TOOL(AS, as, as)
AC_SUBST(AS)
AC_CHECK_TOOL(RANLIB, ranlib, ranlib)
AC_SUBST(RANLIB)
AC_CHECK_TOOL(LD, ld, ld)
AC_SUBST(LD)
AC_CHECK_TOOL(DLLTOOL, dlltool, dlltool)
AC_SUBST(DLLTOOL)
AC_CHECK_TOOL(DLLWRAP, dlltool, dlltool)
AC_SUBST(DLLWRAP)
AC_CHECK_TOOL(WINDRES, windres, windres)
AC_SUBST(WINDRES)
d43 1
a43 7
case "$with_cross_host" in
  ""|*mingw*|*cygwin*)
    AC_ALLOCA
    ;;
esac

AC_CONFIG_SUBDIRS(profile mingwex)
d69 1
a69 1
THREAD_DLL=mingwm
d71 6
a76 8
MKINSTALLDIRS=$ac_aux_dir/mkinstalldirs
AC_SUBST(MKINSTALLDIRS)
AC_SUBST(MNO_CYGWIN)
AC_SUBST(THREAD_DLL)
AC_SUBST(LIBM_A)
AC_SUBST(LIBGMON_A)
AC_SUBST(HEADER_SUBDIR)
AC_SUBST(W32API_INCLUDE)
d79 3
a81 1
AC_OUTPUT(Makefile)
@


1.13
log
@	* Makefile.in: Add with_cross_host to allow more granular checks.
	Set installation directories accordingly.  Override CC setting only
	if building a Cygwin target.
	* aclocal.m4: Regenerate.
	* configure.in: Move AC_CANONICAL_SYSTEM check up.  Add
	GCC_NO_EXECUTABLES.  Substitute with_cross_host in depending files.
	Test AC_ALLOCA only if building on a native system.
	* configure: Regenerate.
@
text
@d24 1
a24 1
LIB_AC_PROG_CC
d96 1
@


1.12
log
@	* configure.in (AC_CONFIG_AUX_DIR): Remove.
	* configure: Regenerate.
@
text
@d22 2
d30 1
d50 5
a54 1
AC_ALLOCA
a55 1
AC_CANONICAL_SYSTEM
@


1.11
log
@update to newer autoconf
@
text
@a20 1
AC_CONFIG_AUX_DIR(../..)
@


1.10
log
@
	* configure.in (W32API_INCLUDE): Need the -I switch in the value.
	* mingwex/configure.in (W32API_INCLUDE): Ditto.
	* profile/configure.in (W32API_INCLUDE): Ditto.
@
text
@d19 1
a19 1
AC_PREREQ(2.12)
d21 1
a21 41

dnl FIXME: We temporarily define our own version of AC_PROG_CC.  This is
dnl copied from autoconf 2.12, but does not call AC_PROG_CC_WORKS.  We
dnl are probably using a cross compiler, which will not be able to fully
dnl link an executable.  This should really be fixed in autoconf
dnl itself.

AC_DEFUN(LIB_AC_PROG_CC,
[AC_BEFORE([$0], [AC_PROG_CPP])dnl
AC_CHECK_TOOL(CC, gcc, gcc)
if test -z "$CC"; then
  AC_CHECK_PROG(CC, cc, cc, , , /usr/ucb/cc)
  test -z "$CC" && AC_MSG_ERROR([no acceptable cc found in \$PATH])
fi

AC_PROG_CC_GNU

if test $ac_cv_prog_gcc = yes; then
  GCC=yes
dnl Check whether -g works, even if CFLAGS is set, in case the package
dnl plays around with CFLAGS (such as to build both debugging and
dnl normal versions of a library), tasteless as that idea is.
  ac_test_CFLAGS="${CFLAGS+set}"
  ac_save_CFLAGS="$CFLAGS"
  CFLAGS=
  AC_PROG_CC_G
  if test "$ac_test_CFLAGS" = set; then
    CFLAGS="$ac_save_CFLAGS"
  elif test $ac_cv_prog_cc_g = yes; then
    CFLAGS="-g -O2"
  else
    CFLAGS="-O2"
  fi
  if test "$ac_test_CXXFLAGS" != set; then
    CXXFLAGS='$(CFLAGS)'
  fi
else
  GCC=
  test "${CFLAGS+set}" = set || CFLAGS="-g"
fi
])
d51 1
a51 2
SUBDIRS="profile mingwex"
configdirs="profile mingwex"
a78 4
if test -n "$configdirs"; then
  AC_CONFIG_SUBDIRS($configdirs)
fi

a84 1
AC_SUBST(SUBDIRS)
@


1.9
log
@Oops. Add ending quotes to CFLAGS value.
@
text
@d97 1
a97 1
W32API_INCLUDE='$(srcdir)/../w32api/include'
@


1.8
log
@
	* configure.in (CFLAGS): Remove -D__USE_CRTIMP=1 due to possibilites
	of multiply defined symbols if the symbols is defined locally.  E.G.:
	A local definition of malloc causes this problem.
	* configure: Regenerate.
	* profile/Makefile.in (W32API_INCLUDE): New variable.
	(ALL_CFLAGS): Use W32API_INCLUDE value.
	(ALL_CXXFLAGS): Ditto.
	(gcrt0.o gcrt1.o gcrt2.o): Use ALL_CFLAGS instead of CFLAGS.
	Thanks to Jeff Bonggren <jbon@@users.sf.net>.
	* profile/configure.in (W32API_INCLUDE): Set default value.
	* profile/configure: Regenerate.
	* mingwex/Makefile.in (W32API_INCLUDE): New variable.
	(ALL_CFLAGS): Use W32API-INCLUDE value.
	(ALL_CXXFLAGS): Ditto.
	* mingwex/configure.in (W32API_INCLUDE): Set default value.
	* mingwex/configure: Regenerate.
@
text
@d50 1
a50 1
    CFLAGS="-g -O2
d52 1
a52 1
    CFLAGS="-O2
@


1.7
log
@
	* Makefile.in (W32API_INCLUDE): New variable.
	(ALL_CFLAGS): Include W32API_INCLUDE value.
	(ALL_CXXFLAGS): Ditto.
	* configure.in (CFLAGS): Add -D__USE_CRTIMP=1 to default values.
	(W32API_INCLUDE): Set default value.
	* configure: Regenerate.
@
text
@d50 1
a50 1
    CFLAGS="-g -O2 -D__USE_CRTIMP=1"
d52 1
a52 1
    CFLAGS="-O2 -D__USE_CRTIMP=1"
@


1.6
log
@
	* configure.in (LIBM_A): Define for cygwin target.
	* configure (LIBM_A): Ditto.
@
text
@d50 1
a50 1
    CFLAGS="-g -O2"
d52 1
a52 1
    CFLAGS="-O2"
d97 2
d132 1
@


1.5
log
@	* include/_mingw.h: Increment version to 2.0.
	* Makefile.in: Ditto.
	Merge in mingwex branch.
@
text
@d100 1
a100 1
  LIBM_A=
@


1.4
log
@
	* Makefile.in: eliminate the need for RUNTIME and CRT_ID.
	Always build crt1.o, dllcrt1.o, crt2.o and dllcrt2.o.
	Create a libcoldname.a for the oldname library for CRTDLL.
	Restrict libmoldname.a for the oldname library for MSVCRT.
	* configure.in: eliminate setting RUNTIME and CRT_ID variables.
	Restructure the $target_os case logic.
	Always name the MinGW thread dll helper mingwm.
	Change Cygwin's HEADER_SUBDIR value from mingw32 to mingw.
	* configure: regenerate.
@
text
@d91 3
d95 1
a95 3
configdirs=""
SUBDIRS=""
HEADER_SUBDIR=""
a99 4
  configdirs="$configdirs"
  # FIXME MinGW versions of libm.a and libgmon.a needed for -mno-cygwin
  # Do not build libm.a when building under Cygwin winsup. Otherwise, it'll
  # overwrite Cygwin's one. Likewise for libgmon.a.
a100 1
  LIBGMON_A=
a107 3
  LIBGMON_A=libgmon.a
  SUBDIRS="profile"
  configdirs="$configdirs profile"
@


1.4.38.1
log
@	* configure.in: Add mingwex as SUBDIRS and configdirs.
	* configure: Regenerate.
	* Makefile.in (MINGW_OBJS): Remove dirent.o.
	(SRC_DIST_FILES): Remove dirent.c.
	* dirent.c: Remove.
	* include/stdlib.h (_Exit): Add static inline
	function.
	(struct lldiv_t): Define.
	(lldiv): Add prototype.
	(llabs): Add extern inline function.
	(strtoll,strtoull): Add prototypes.
	(wcstol, wcstoul, wcstod): Group together.
	(strtof, wcstof): Add extern inline definitions.
	(atoll,lltoa,ulltoa, wtoll, lltow ulltow): Add prototypes
	and extern inline definitions.
	* include/wchar.h (fwide, wcstoll,wcstoull, wmemchr
	wmemcmp, wmemcpy, wmemmove, wmemset. mbsinit): Add
	prototypes.
	(wcstol, wcstoul,wcstod): Copy prototypes from stdlib.h.
	(wcstof): Add extern inline definition.
	* include/math.h (nan, nanf): Add prototypes.
	(NAN, INFINITE): Define constants.
	(fpclassify, isnan ,signbit): Add macros and supporting float
	and double functions.
	(isfinite, isinf, isnormal): Add macros.
	(isgreater, isless, isgreaterequal, islessequal,islessgreater):
	Add macros.
	(rint, rintf, round, roundf, trunc. truncf, fmax, fmaxf,
	fmin, fminf, fma, fmaf, log2, log2f): Add prototypes.
	(copysign, logb, nextafter, scalb): Add prototypes and
	inline stubs for underscored versions in msvcrt.dll.
	* include/inttypes.h: New file.
	* include/fenv.h: New file

	Add new mingwex subdir and files.
	* mingwex: New directory.
	* mingwex/Makefile.in: New file.
	* mingwex/configure.in: New file.
	* mingwex/configure: Generate.
	* mingwex/dirent.c: Moved here from parent dir.
	* mingwex/atoll.c: New file.
	* mingwex/feclearexcept.c: New file.
	* mingwex/fegetenv.c: New file.
	* mingwex/fegetexceptflag.c: New file.
	* mingwex/fegetround.c: New file.
	* mingwex/feholdexcept.c: New file.
	* mingwex/feraiseexcept.c: New file.
	* mingwex/fesetenv.c: New file.
	* mingwex/fesetexceptflag.c: New file.
	* mingwex/fesetround.o: New file.
	* mingwex/fetestexcept.c: New file.
	* mingwex/feupdateenv.c: New file.
	* mingwex/fma.S: New file.
	* mingwex/fmaf.S: New file.
	* mingwex/fmax.c: New file.
	* mingwex/fmaxf.c: New file.
	* mingwex/fmin.c: New file.
	* mingwex/fminf.c: New file.
	* mingwex/fp_consts.c: New file.
	* mingwex/fpclassify.c: New file.
	* mingwex/fucom.c: New file.
	* mingwex/fwide.c: New file.
	* mingwex/imaxabs.c: New file.
	* mingwex/imaxdiv.c: New file.
	* mingwex/isnan.c: New file.
	* mingwex/isnanf.c: New file.
	* mingwex/lltoa.c: New file.
	* mingwex/lltow.c: New file.
	* mingwex/log2.c: New file.
	* mingwex/log2f.c: New file.
	* mingwex/math_stubs.c: New file.
	* mingwex/mbsinit.c: New file.
	* mingwex/rint.c: New file.
	* mingwex/round.c: New file.
	* mingwex/signbit.c: New file.
	* mingwex/sitest.c: New file.
	* mingwex/strtof.c: New file.
	* mingwex/strtoimax.c: New file.
	* mingwex/strtoumax.c: New file.
	* mingwex/testwmem.c: New file.
	* mingwex/trunc.c: New file.
	* mingwex/ulltoa.c: New file.
	* mingwex/ulltow.c: New file.
	* mingwex/wcstof.c: New file.
	* mingwex/wcstoimax.c: New file.
	* mingwex/wcstoumax.c: New file.
	* mingwex/wmemchr.c: New file.
	* mingwex/wmemcmp.c: New file.
	* mingwex/wmemcpy.c: New file.
	* mingwex/wmemmove.c: New file.
	* mingwex/wmemset.c: New file.
	* mingwex/wtoll.c: New file.
@
text
@d113 2
a114 2
  SUBDIRS="profile mingwex"
  configdirs="$configdirs profile mingwex"
@


1.4.38.2
log
@	Add libgmon.a and libmingwex.a for cygwin -mno-cygwin

	* configure.in (SUBDIRS): Add  profile and mingwex to cygwin target.
	(configdirs): Likewise.
	(LIBGMON_A): Define for cygwin target as well.
	* configure: Regenerate.
	* profile/configure.in (THREAD_DLL): Remove define.
	(LIBM_A): Remove define.
	(LIBGMON_A): Define for cygwin target as well.
	* profile/configure: Regenerate.
	* profile/makefile.in (install): Install to inst_libdir and
	inst_includedir.

	* mingwex/makefile.in (CFLAGS): Move -fomit-frame-pointer to...
	(OPTFLAGS): New define.
	(ALL_CFLAGS): Add $(OPTFLAGS).
	(ALL_CXXFLAGS): Same.
	(.c.o:): Remove ALL_CXXFLAGS.
@
text
@d91 3
a93 2
SUBDIRS="profile mingwex"
configdirs="profile mingwex"
a95 2
LIBGMON_A=libgmon.a

d99 4
d104 1
d112 3
@


1.3
log
@* Makefile.in: Avoid installing dll if we're cross building and the cross-host
system isn't a Windows system.
@
text
@a96 10
*mingw32msvc*)
  CRT_ID=2
  MNO_CYGWIN=
  RUNTIME=msvcrt
  THREAD_DLL=mingwm
  LIBM_A=libm.a
  LIBGMON_A=libgmon.a
  SUBDIRS="profile"
  configdirs="$configdirs profile"
  ;;
a97 1
  CRT_ID=1
a98 2
  RUNTIME=crtdll
  THREAD_DLL=mingwc
d100 1
d106 1
a106 1
  HEADER_SUBDIR="mingw32"
d109 1
a109 2
  # Build it for CRTDLL by default.
  CRT_ID=1
a110 2
  RUNTIME=crtdll
  THREAD_DLL=mingwc
d118 7
a130 2
AC_SUBST(CRT_ID)
AC_SUBST(RUNTIME)
@


1.2
log
@* configure.in: Change HEADER_SUBDIR to mingw32.
* configure: Regenerate.
@
text
@d65 7
@


1.1
log
@Initial revision
@
text
@d111 1
a111 1
  HEADER_SUBDIR="mingw"
@


1.1.1.1
log
@import winsup-2000-02-17 snapshot
@
text
@@
