head	1.4;
access;
symbols
	cygwin-1_7_17-release:1.3
	cygwin-64bit-branch:1.3.0.10
	cygwin-1_7_16-release:1.3
	cygwin-1_7_15-release:1.3
	cygwin-1_7_14_2-release:1.3
	cygwin-1_7_14-release:1.3
	cygwin-1_7_12-release:1.3
	cygwin-1_7_11-release:1.3
	cygwin-1_7_10-release:1.3
	cygwin-1_7_9-release:1.3
	cygwin-1_7_8-release:1.3
	cygwin-1_7_7-release:1.3
	cygwin-1_7_5-release:1.3
	cygwin-1_7_4-release:1.3
	cygwin-1_7_3-release:1.3
	cygwin-1_7_2-release:1.3
	cygwin-1_7_1-release:1.3
	cv-branch-2:1.3.0.8
	cr-0x5f1:1.3.0.6
	cv-branch:1.3.0.4
	cr-0x3b58:1.3.0.2
	cr-0x9e:1.2.0.10
	cr-0x9d:1.2.0.8
	corinna-01:1.2
	cr-0x9c:1.2.0.6
	cr-0x9b:1.2.0.4
	cr-0x99:1.2
	Z-emcb-cygwin_daemon:1.2.0.2
	w32api-2_2:1.1.1.1
	mingw-runtime-2_4:1.1.1.1
	mingw-std-ns-branch:1.1.1.1.0.46
	mingw-runtime-2_0:1.1.1.1
	mingwex:1.1.1.1.0.40
	cygnus_cvs_20020108_pre:1.1.1.1
	Z-cygwin_daemon_merge-new_HEAD:1.1.1.1
	Z-cygwin_daemon_merge_HEAD:1.1.1.1
	cygwin_daemon:1.1.1.1.0.10;
locks; strict;
comment	@ * @;
expand	@o@;


1.4
date	2012.11.07.16.52.25;	author cgf;	state dead;
branches;
next	1.3;

1.3
date	2005.06.16.12.14.21;	author dannysmith;	state Exp;
branches;
next	1.2;

1.2
date	2003.03.16.22.12.01;	author dannysmith;	state Exp;
branches;
next	1.1;

1.1
date	2000.02.17.19.38.31;	author cgf;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2000.02.17.19.38.31;	author cgf;	state Exp;
branches
	1.1.1.1.46.1;
next	;

1.1.1.1.46.1
date	2003.03.31.22.32.20;	author dannysmith;	state Exp;
branches;
next	;


desc
@@


1.4
log
@* mingw: Delete obsolete directory.
* w32api: Ditto.
@
text
@/*	$NetBSD: profile.h,v 1.6 1995/03/28 18:17:08 jtc Exp $	*/

/*
 * Copyright (c) 1992, 1993
 *	The Regents of the University of California.  All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *	This product includes software developed by the University of
 *	California, Berkeley and its contributors.
 * 4. Neither the name of the University nor the names of its contributors
 *    may be used to endorse or promote products derived from this software
 *    without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 *
 *	@@(#)profile.h	8.1 (Berkeley) 6/11/93
 */

/*
 * This file is taken from Cygwin distribution. Please keep it in sync.
 * The differences should be within __MINGW32__ guard.
 */
/* If compiler doesn't inline, at least avoid passing args on the stack. */
#define _MCOUNT_CALL __attribute__ ((regparm (2)))
#define _MCOUNT_DECL static __inline__  void _MCOUNT_CALL _mcount

/* FIXME: This works, but it would be cleaner to convert mcount into an
   assembler stub that calls an extern  _mcount. 
   Older versions of GCC (pre-4.1) will still fail with regparm since the
   compiler used %edx to store an unneeded counter variable.  */

#define	MCOUNT \
void									\
mcount()								\
{									\
	u_long selfpc, frompcindex;					\
	/*								\
	 * Save registers, since this may be called from		\
	 * the prologue of a regparm function.				\
	 */								\
	__asm __volatile__ ("pushl %eax\n\t"				\
			    "pushl %ecx\n\t"				\
		 	    "pushl %edx");				\
	/*								\
	 * find the return address for mcount,				\
	 * and the return address for mcount's caller.			\
	 *								\
	 * selfpc = pc pushed by mcount call				\
	 */								\
	/* __asm  ("movl 4(%%ebp),%0" : "=r" (selfpc));	*/		\
	selfpc = (u_long) __builtin_return_address (0);			\
	/*								\
	 * frompcindex = pc pushed by call into self.			\
	 */								\
	/*  __asm ("movl (%%ebp),%0;movl 4(%0),%0" : "=r" (frompcindex)); */  \
	frompcindex = (u_long) __builtin_return_address (1);		\
	_mcount(frompcindex, selfpc);					\
	/*								\
	 * Restore registers.						\
	 */								\
	__asm __volatile__ ("popl %edx\n\t"				\
			    "popl %ecx\n\t"				\
			    "popl %eax");				\
}
@


1.3
log
@	* profile/profile.h (_MCOUNT_CALL): Define as regparm(2)
	(_MCOUNT_DECL): Use it.
	(MCOUNT): Save and restore eax, ecx, edx registers.
	* profile/mcount.c (_mcount): ANSI-fy.
@
text
@@


1.2
log
@	* profile/profile.h (mcount): Use __builtin_return_address
	rather than __asm statements.
	* profile/Makefile.in: Remove special rule for mcount.o
	Specify dependencies for mcount.o profil.o gmon.o.
@
text
@d42 3
d46 4
a49 1
#define	_MCOUNT_DECL static inline void _mcount
d55 8
a62 1
	 u_long selfpc, frompcindex;					\
d69 1
a69 1
	/* __asm volatile ("movl 4(%%ebp),%0" : "=r" (selfpc));	*/	\
d74 1
a74 1
	/* __asm ("movl (%%ebp),%0;movl 4(%0),%0" : "=r" (frompcindex)); */	\
d77 6
a83 1

@


1.1
log
@Initial revision
@
text
@d49 1
a49 1
	int selfpc, frompcindex;					\
d56 2
a57 1
	__asm("movl 4(%%ebp),%0" : "=r" (selfpc));			\
d61 2
a62 1
	__asm("movl (%%ebp),%0;movl 4(%0),%0" : "=r" (frompcindex));	\
@


1.1.1.1
log
@import winsup-2000-02-17 snapshot
@
text
@@


1.1.1.1.46.1
log
@	Merge from mingw trunk (changes since 2003-01-27).
@
text
@d49 1
a49 1
	 u_long selfpc, frompcindex;					\
d56 1
a56 2
	/* __asm volatile ("movl 4(%%ebp),%0" : "=r" (selfpc));	*/	\
	selfpc = (u_long) __builtin_return_address (0);			\
d60 1
a60 2
	/* __asm ("movl (%%ebp),%0;movl 4(%0),%0" : "=r" (frompcindex)); */	\
	frompcindex = (u_long) __builtin_return_address (1);		\
@

