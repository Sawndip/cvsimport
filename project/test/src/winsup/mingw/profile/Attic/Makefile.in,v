head	1.20;
access;
symbols
	cygwin-1_7_17-release:1.19
	cygwin-64bit-branch:1.19.0.2
	cygwin-1_7_16-release:1.19
	cygwin-1_7_15-release:1.19
	cygwin-1_7_14_2-release:1.18
	cygwin-1_7_14-release:1.18
	cygwin-1_7_12-release:1.18
	cygwin-1_7_11-release:1.18
	cygwin-1_7_10-release:1.18
	cygwin-1_7_9-release:1.18
	cygwin-1_7_8-release:1.18
	cygwin-1_7_7-release:1.18
	cygwin-1_7_5-release:1.18
	cygwin-1_7_4-release:1.18
	cygwin-1_7_3-release:1.18
	cygwin-1_7_2-release:1.18
	cygwin-1_7_1-release:1.18
	cv-branch-2:1.16.0.2
	cr-0x5f1:1.13.0.6
	cv-branch:1.13.0.4
	cr-0x3b58:1.13.0.2
	cr-0x9e:1.9.0.10
	cr-0x9d:1.9.0.8
	corinna-01:1.9
	cr-0x9c:1.9.0.6
	cr-0x9b:1.9.0.4
	cr-0x99:1.9
	Z-emcb-cygwin_daemon:1.9.0.2
	w32api-2_2:1.5
	mingw-runtime-2_4:1.5
	mingw-std-ns-branch:1.5.0.6
	mingw-runtime-2_0:1.5
	mingwex:1.4.0.34
	cygnus_cvs_20020108_pre:1.4
	Z-cygwin_daemon_merge-new_HEAD:1.4
	Z-cygwin_daemon_merge_HEAD:1.4
	cygwin_daemon:1.4.0.4;
locks; strict;
comment	@# @;
expand	@o@;


1.20
date	2012.11.07.16.52.25;	author cgf;	state dead;
branches;
next	1.19;

1.19
date	2012.05.08.19.41.12;	author keithmarshall;	state Exp;
branches;
next	1.18;

1.18
date	2009.10.29.21.53.03;	author cwilson;	state Exp;
branches;
next	1.17;

1.17
date	2009.07.27.20.27.09;	author keithmarshall;	state Exp;
branches;
next	1.16;

1.16
date	2008.10.12.23.58.17;	author cgf;	state Exp;
branches;
next	1.15;

1.15
date	2007.02.14.23.42.07;	author dannysmith;	state Exp;
branches;
next	1.14;

1.14
date	2006.11.21.09.30.15;	author dannysmith;	state Exp;
branches;
next	1.13;

1.13
date	2004.08.15.11.35.07;	author dannysmith;	state Exp;
branches;
next	1.12;

1.12
date	2004.07.15.10.40.37;	author corinna;	state Exp;
branches;
next	1.11;

1.11
date	2004.07.14.23.44.50;	author dannysmith;	state Exp;
branches;
next	1.10;

1.10
date	2004.07.13.13.01.28;	author earnie;	state Exp;
branches;
next	1.9;

1.9
date	2003.05.06.13.26.44;	author earnie;	state Exp;
branches;
next	1.8;

1.8
date	2003.03.16.22.12.01;	author dannysmith;	state Exp;
branches;
next	1.7;

1.7
date	2003.02.14.19.25.12;	author cgf;	state Exp;
branches;
next	1.6;

1.6
date	2003.02.14.00.42.35;	author dannysmith;	state Exp;
branches;
next	1.5;

1.5
date	2002.06.13.10.20.46;	author dannysmith;	state Exp;
branches
	1.5.6.1;
next	1.4;

1.4
date	2001.06.11.18.57.39;	author earnie;	state Exp;
branches
	1.4.34.1;
next	1.3;

1.3
date	2001.06.04.20.45.30;	author earnie;	state Exp;
branches;
next	1.2;

1.2
date	2000.11.22.01.51.53;	author earnie;	state Exp;
branches;
next	1.1;

1.1
date	2000.02.17.19.38.31;	author cgf;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2000.02.17.19.38.31;	author cgf;	state Exp;
branches;
next	;

1.4.34.1
date	2002.04.04.01.26.51;	author dannysmith;	state Exp;
branches;
next	1.4.34.2;

1.4.34.2
date	2002.04.09.04.42.07;	author dannysmith;	state Exp;
branches;
next	1.4.34.3;

1.4.34.3
date	2002.04.17.05.37.06;	author dannysmith;	state Exp;
branches;
next	;

1.5.6.1
date	2003.03.31.22.32.20;	author dannysmith;	state Exp;
branches;
next	;


desc
@@


1.20
log
@* mingw: Delete obsolete directory.
* w32api: Ditto.
@
text
@#
# mingw/profile/Makefile.in: This file is part of Mingw runtime.
#
# This makefile requires GNU make.

VPATH = @@srcdir@@
srcdir = @@srcdir@@
top_srcdir = @@top_srcdir@@

# FIXME: I see no reason to define `objdir';
# it appears to be unused, and could be removed.
objdir = .

target_alias = @@target_alias@@
prefix = @@prefix@@

datarootdir = @@datarootdir@@
program_transform_name = @@program_transform_name@@
exec_prefix = @@exec_prefix@@
bindir = @@bindir@@
libdir = @@libdir@@

# FIXME: Use of `target_alias' is extremely suspect here;
# (see relevant note in top level Makefile).
tooldir = $(exec_prefix)/$(target_alias)
datadir = @@datadir@@
infodir = @@infodir@@
includedir = @@includedir@@

SHELL = /bin/sh

INSTALL = @@INSTALL@@
INSTALL_DATA = @@INSTALL_DATA@@
INSTALL_PROGRAM = @@INSTALL_PROGRAM@@
mkinstalldirs = $(SHELL) $(srcdir)/../mkinstalldirs
DISTFILES = Makefile.in gcrt0.c gmon.c gmon.h \
  mcount.c profil.c profil.h profile.h CYGWIN_LICENSE COPYING

CC = @@CC@@
# FIXME: Which is it, CC or CC_FOR_TARGET?
CC_FOR_TARGET = $(CC)
AS_FOR_TARGET = $(AS)
CFLAGS = @@CFLAGS@@
CXXFLAGS = @@CXXFLAGS@@

# compiling with Cygwin?
NO_CYGWIN := @@NO_CYGWIN@@
ifdef NO_CYGWIN
#
# FIXME: What is the purpose of this hideous kludge?
#
# `CC' should have been appropriately set by the configure script;
# to mess with it, in this fashion, should neither be necessary,
# nor accepted.
#
override CC := ${NO_CYGWIN} $(firstword $(filter-out ${NO_CYGWIN},${CC}))
endif

# Either crtdll (CRT_ID 1) or msvcrt (CRT_ID 2).
RUNTIME = @@RUNTIME@@
CRT_ID = @@CRT_ID@@

# Needed for threading dll.
THREAD_DLL = @@THREAD_DLL@@
THREAD_DLL_VERSION = 10
THREAD_DLL_NAME = $(THREAD_DLL)$(THREAD_DLL_VERSION).dll

W32API_INCLUDE = @@W32API_INCLUDE@@
INCLUDES = -I${srcdir} -I${top_srcdir}/include \
  -nostdinc \
  -iwithprefixbefore include
ALL_CFLAGS = $(CFLAGS) $(INCLUDES) $(W32API_INCLUDE)
ALL_CXXFLAGS = $(CXXFLAGS) $(INCLUDES) -nostdinc++ $(W32API_INCLUDE)

AS = @@AS@@
AR = @@AR@@
LD = @@LD@@
AR_FLAGS = rcv
RANLIB = @@RANLIB@@
DLLTOOL = @@DLLTOOL@@
DLLTOOLFLAGS = 
DLLTOOL_FOR_TARGET = $(DLLTOOL)
DLLTOOL_FLAGS = --as $(AS_FOR_TARGET)

LIBGMON_A = @@LIBGMON_A@@
LIBGMON_OBJS = gmon.o mcount.o profil.o
CRT0S = @@CRT0S@@
ALL_CRT0S = gcrt0.o gcrt1.o gcrt2.o

LIBS = $(LIBGMON_A)
DLLS = 

all: $(LIBGMON_A)

$(LIBGMON_A): $(LIBGMON_OBJS) $(CRT0S)
	$(AR) $(ARFLAGS) $@@ $(LIBGMON_OBJS)
	$(RANLIB) $@@

# FIXME: These are really the same, but gcc specs want different names.
# The only CRT dependency is atexit.
gcrt0.o: gcrt0.c
	$(CC)  -c -o $@@ $(CPPFLAGS) $(ALL_CFLAGS) $?

gcrt1.o: gcrt0.c
	$(CC) -U__MSVCRT__ -c -o $@@ $(CPPFLAGS) $(ALL_CFLAGS) $?

gcrt2.o: gcrt0.c
	$(CC) -D__MSVCRT__ -c -o $@@ $(CPPFLAGS) $(ALL_CFLAGS) $?

#
# Dependencies
#
gmon.o: gmon.c gmon.h profile.h profil.h
mcount.o: mcount.c gmon.h profile.h
profil.o: profil.c profil.h

top_builddir = @@top_builddir@@

Makefile: Makefile.in ${top_builddir}/config.status ${top_srcdir}/configure
	cd ${top_builddir}; $(SHELL) config.status

${top_builddir}/config.status: ${top_srcdir}/configure
	cd ${top_builddir}; $(SHELL) config.status --recheck

info:

info-html:

install-info: info

need-DESTDIR-compatibility = prefix libdir includedir
.PHONY: $(need-DESTDIR-compatibility) fail-DESTDIR-compatibility

$(need-DESTDIR-compatibility):
	@@test -z "$(DESTDIR)" || case "$($@@)" in ?:*) \
	  $(MAKE) --no-print-directory reject="$@@" fail-DESTDIR-compatibility ;; \
	esac

fail-DESTDIR-compatibility:
	$(error DESTDIR is not supported when $(reject) contains Win32 path `$($(reject))'; \
	try `make install $(reject)=$(shell echo '$($(reject))' | sed s,:,:$(DESTDIR),) ...' instead)

install: all $(need-DESTDIR-compatibility)
	$(mkinstalldirs) $(DESTDIR)$(inst_libdir) 
	for i in $(LIBS); do \
		$(INSTALL_DATA) $$i $(DESTDIR)$(inst_libdir)/$$i ; \
	done
	for i in $(CRT0S); do \
		$(INSTALL_DATA) $$i $(DESTDIR)$(inst_libdir)/$$i ; \
	done
	for sub in . ; do \
	$(mkinstalldirs) $(DESTDIR)$(inst_includedir)/$$sub ; \
		for i in $(srcdir)/$$sub/*.h ; do \
		  $(INSTALL_DATA) $$i $(DESTDIR)$(inst_includedir)/$$sub/`basename $$i` ; \
		done ; \
	done

clean:
	-rm -f $(LIBGMON_OBJS) $(ALL_CRT0S) $(LIBGMON_A)

distclean:
	-rm -f *.o *.a *~ core a.out
	-rm -f config.cache config.status config.log 
	-rm -f Makefile
.c.o:
	$(CC) -c $(ALL_CPPFLAGS) $(ALL_CFLAGS) $< -o $@@

dist:
	mkdir $(distdir)/profile
	chmod 755 $(distdir)/profile
	@@for i in $(DISTFILES); do\
		cp -p $(srcdir)/$$i $(distdir)/profile/$$i ; \
	done

# $RCSfile$: end of file
@


1.19
log
@Remove references to nonexistent files.
@
text
@@


1.18
log
@Honor DESTDIR for winsup/mingw and winsup/w32api
@
text
@d36 2
a37 2
DISTFILES = Makefile.in configure configure.in aclocal.m4 gcrt0.c gmon.c gmon.h \
mcount.c profil.c profil.h profile.h CYGWIN_LICENSE COPYING
@


1.17
log
@Convert to monolithic configuration procedure.
@
text
@d131 14
a144 2
install: all
	$(mkinstalldirs) $(inst_libdir) 
d146 1
a146 1
		$(INSTALL_DATA) $$i $(inst_libdir)/$$i ; \
d149 1
a149 1
		$(INSTALL_DATA) $$i $(inst_libdir)/$$i ; \
d152 1
a152 1
	$(mkinstalldirs) $(inst_includedir)/$$sub ; \
d154 1
a154 1
		  $(INSTALL_DATA) $$i $(inst_includedir)/$$sub/`basename $$i` ; \
@


1.16
log
@* Makefile.in: Use a different method to invoke gcc in a cygwin-hosted
environment.
* mingwex/Makefile.in: Ditto.
* profile/Makefile.in: Ditto.
* configure.in: Record mingw front-end for building under Cygwin.
* mingwex/configure.in: Ditto.
* profile/configure.in: Ditto.
* configure: Regenerate.
* mingwex/configure: Ditto.
* profile/configure: Ditto.
@
text
@d8 4
d17 1
d22 3
d49 7
d69 1
a69 1
INCLUDES = -I$(srcdir) -I$(srcdir)/../include \
d111 1
a111 1
# Dependancies
d117 4
a120 2
Makefile: Makefile.in config.status configure
	$(SHELL) config.status
d122 2
a123 2
config.status: configure
	$(SHELL) config.status --recheck
d163 1
@


1.15
log
@	* Makefile.in (ALL_CFLAGS): Put W32API_INCLUDE after INCLUDES.
	(ALL_CXXFLAGS): Likewise.
	* mingwex/Makefile.in (ALL_CFLAGS): Put W32API_INCLUDE after INCLUDES.
	(ALL_CXXFLAGS): Likewise.
	* profile/Makefile.in (ALL_CFLAGS): Put W32API_INCLUDE after INCLUDES.
	(ALL_CXXFLAGS): Likewise.
@
text
@d39 4
a42 1
MNO_CYGWIN = @@MNO_CYGWIN@@
d57 2
a58 2
ALL_CFLAGS = $(CFLAGS) $(INCLUDES) $(W32API_INCLUDE) $(MNO_CYGWIN)
ALL_CXXFLAGS = $(CXXFLAGS) $(INCLUDES) -nostdinc++ $(W32API_INCLUDE) $(MNO_CYGWIN)
@


1.14
log
@	* Makefile.in:  Add aclocal.m4:to source release.
	* mingwex/Makefile.in: Ditto.
	* profile/Makefile.in: Ditto.
@
text
@d54 2
a55 2
ALL_CFLAGS = $(CFLAGS) $(W32API_INCLUDE) $(INCLUDES) $(MNO_CYGWIN)
ALL_CXXFLAGS = $(CXXFLAGS) $(W32API_INCLUDE) $(INCLUDES) -nostdinc++ $(MNO_CYGWIN)
@


1.13
log
@	* profile/COPYING: New file.
	* profile/CYGWIN_LICENSE: New file.
	* profile/Makefile.in (DISTFILES): Add COPYING, CYGWIN_LICENSE.
@
text
@d28 2
a29 2
DISTFILES = Makefile.in configure configure.in gcrt0.c gmon.c gmon.h mcount.c \
profil.c profil.h profile.h CYGWIN_LICENSE COPYING
@


1.12
log
@	* Makefile.in (INCLUDES): Temporarily revert previous change.
	* mingwex/Makefile,in (INCLUDES): Ditto.
	* profile/Makefile,in (INCLUDES): Ditto.
	* mingwex/Makefile,in: Drop carg.o dependency.
@
text
@d29 1
a29 1
profil.c profil.h profile.h
@


1.11
log
@	* Makefile.in (INCLUDES): Designate $(srcdir)/../include as a
	system dir.
	* mingwex/Makefile,in (INCLUDES): Ditto.
	* profile/Makefile,in (INCLUDES): Ditto.

	* mingwex/Makefile,in: Add carg.o to libmingwex.a.
@
text
@d51 1
a51 1
INCLUDES = -I$(srcdir) -isystem$(srcdir)/../include \
@


1.10
log
@
	* Makefile.in: Move use of --nostdinc++ as GCC3.4 warns to use it
	for C modules.
	* mingwex/Makefile.in: Ditto.
	* profile/Makefile.in: Ditto.
@
text
@d51 1
a51 1
INCLUDES = -I$(srcdir) -I$(srcdir)/../include \
@


1.9
log
@
	* configure.in (CFLAGS): Remove -D__USE_CRTIMP=1 due to possibilites
	of multiply defined symbols if the symbols is defined locally.  E.G.:
	A local definition of malloc causes this problem.
	* configure: Regenerate.
	* profile/Makefile.in (W32API_INCLUDE): New variable.
	(ALL_CFLAGS): Use W32API_INCLUDE value.
	(ALL_CXXFLAGS): Ditto.
	(gcrt0.o gcrt1.o gcrt2.o): Use ALL_CFLAGS instead of CFLAGS.
	Thanks to Jeff Bonggren <jbon@@users.sf.net>.
	* profile/configure.in (W32API_INCLUDE): Set default value.
	* profile/configure: Regenerate.
	* mingwex/Makefile.in (W32API_INCLUDE): New variable.
	(ALL_CFLAGS): Use W32API-INCLUDE value.
	(ALL_CXXFLAGS): Ditto.
	* mingwex/configure.in (W32API_INCLUDE): Set default value.
	* mingwex/configure: Regenerate.
@
text
@d52 1
a52 1
  -nostdinc -nostdinc++ \
d55 1
a55 1
ALL_CXXFLAGS = $(CXXFLAGS) $(W32API_INCLUDE) $(INCLUDES) $(MNO_CYGWIN)
@


1.8
log
@	* profile/profile.h (mcount): Use __builtin_return_address
	rather than __asm statements.
	* profile/Makefile.in: Remove special rule for mcount.o
	Specify dependencies for mcount.o profil.o gmon.o.
@
text
@d50 1
a51 1
  -I$(srcdir)/../../w32api/include \
d54 2
a55 2
ALL_CFLAGS = $(CFLAGS) $(INCLUDES) $(MNO_CYGWIN)
ALL_CXXFLAGS = $(CXXFLAGS) $(INCLUDES) $(MNO_CYGWIN)
d84 1
a84 1
	$(CC)  -c -o $@@ $(CPPFLAGS) $(CFLAGS) $?
d87 1
a87 1
	$(CC) -U__MSVCRT__ -c -o $@@ $(CPPFLAGS) $(CFLAGS) $?
d90 1
a90 1
	$(CC) -D__MSVCRT__ -c -o $@@ $(CPPFLAGS) $(CFLAGS) $?
@


1.7
log
@* profile/Makefile.in (mcount.o): Use ALL_CFLAGS for compilation to ensure
-mno-cygwin where appropriate.  Filter out -O2.
@
text
@d92 6
a97 4
#FIXME: Optimizing at higher than -O1 tweaks a bug in gcc 3.2.2
# and earlier
mcount.o: mcount.c
	$(CC)  -D__MSVCRT__ -c -o $@@ $(CPPFLAGS) ${filter-out -O%,$(ALL_CFLAGS)} -O1 $?
d142 1
@


1.6
log
@	* profile/Makefile.in (mcount,o): Use -O1 optimization
	switch to compile.
@
text
@d95 1
a95 1
	$(CC)  -c -o $@@ $(CPPFLAGS) $(CFLAGS) -O1 $?
@


1.5
log
@	* include/_mingw.h: Increment version to 2.0.
	* Makefile.in: Ditto.
	Merge in mingwex branch.
@
text
@d92 5
@


1.5.6.1
log
@	Merge from mingw trunk (changes since 2003-01-27).
@
text
@a91 7
#
# Dependancies
#
gmon.o: gmon.c gmon.h profile.h profil.h
mcount.o: mcount.c gmon.h profile.h
profil.o: profil.c profil.h

a134 1

@


1.4
log
@
	* profile/configure.in: Make msvcrt.dll version default.
	* profile/makefile.in: Build both gcrt1.o and gcrt2.o.
	* provile/configure: Regenerate.
@
text
@d52 2
a53 1
  -nostdinc -nostdinc++
d69 2
a70 1
CRT0S = gcrt1.o gcrt2.o
d81 5
d105 1
a105 1
	$(mkinstalldirs) $(tooldir)/lib 
d107 1
a107 1
		$(INSTALL_DATA) $$i $(tooldir)/lib/$$i ; \
d110 1
a110 1
		$(INSTALL_DATA) $$i $(tooldir)/lib/$$i ; \
d113 1
a113 1
	$(mkinstalldirs) $(tooldir)/include/$$sub ; \
d115 1
a115 1
		  $(INSTALL_DATA) $$i $(tooldir)/include/$$sub/`basename $$i` ; \
d120 1
a120 1
	-rm -f $(LIBGMON_OBJS) $(CRT0S) $(LIBGMON_A)
@


1.4.34.1
log
@	Add libgmon.a and libmingwex.a for cygwin -mno-cygwin

	* configure.in (SUBDIRS): Add  profile and mingwex to cygwin target.
	(configdirs): Likewise.
	(LIBGMON_A): Define for cygwin target as well.
	* configure: Regenerate.
	* profile/configure.in (THREAD_DLL): Remove define.
	(LIBM_A): Remove define.
	(LIBGMON_A): Define for cygwin target as well.
	* profile/configure: Regenerate.
	* profile/makefile.in (install): Install to inst_libdir and
	inst_includedir.

	* mingwex/makefile.in (CFLAGS): Move -fomit-frame-pointer to...
	(OPTFLAGS): New define.
	(ALL_CFLAGS): Add $(OPTFLAGS).
	(ALL_CXXFLAGS): Same.
	(.c.o:): Remove ALL_CXXFLAGS.
@
text
@d98 1
a98 1
	$(mkinstalldirs) $(inst_libdir) 
d100 1
a100 1
		$(INSTALL_DATA) $$i $(inst_libdir)/$$i ; \
d103 1
a103 1
		$(INSTALL_DATA) $$i $(inst_libdir)/$$i ; \
d106 1
a106 1
	$(mkinstalldirs) $(inst_includedir)/$$sub ; \
d108 1
a108 1
		  $(INSTALL_DATA) $$i $(inst_includedir)/$$sub/`basename $$i` ; \
@


1.4.34.2
log
@	* profile/configure.in (CRT0S): Configure name of gcrt?.o
	based on target, building gcrt0.o for cygwin -mno-cygwin.
	* profile/configure: Regenerate.
	* profile/Makefile.in (CRT0S): Use name from configure.
	(gcrt0.o): New rule.
	(ALL_CRT0S): New define, used to cleanup all gcrt?.o's.
@
text
@d68 1
a68 2
CRT0S = @@CRT0S@@
ALL_CRT0S = gcrt0.o gcrt1.o gcrt2.o
a78 5
# FIXME: These are really the same, but gcc specs want different names.
# The only CRT dependency is atexit.
gcrt0.o: gcrt0.c
	$(CC)  -c -o $@@ $(CPPFLAGS) $(CFLAGS) $?

d113 1
a113 1
	-rm -f $(LIBGMON_OBJS) $(ALL_CRT0S) $(LIBGMON_A)
@


1.4.34.3
log
@	* Makefile.in (INCLUDES): Add "-iwithprefixbefore include" to
	ensure gcc include dir is searched despite -nostdinc.
	* profile/Makefile.in (INCLUDES): Likewise.
	* mingwex/Makefile.in (INCLUDES): Likewise.
	* include/stdarg.h: Replace with stub that just guards the
	real gcc system header with #ifndef RCINVOKED
	* include/varargs.h: Likewise.
	* include/stddef.h: Likewise.
	* include/stdio.h: Include stdarg.h after defining
	 __need___va_list.
	(__VALIST): Define as __gnuc_va_list if __GNUC__, else char*.
	Replace va_list with __VALIST throughout.
@
text
@d52 1
a52 2
  -nostdinc -nostdinc++ \
  -iwithprefixbefore include
@


1.3
log
@
	* profile/Makefile.in (mkinstalldirs): Correct relative path.
@
text
@d68 1
a68 1
CRT0S = gcrt$(CRT_ID).o
@


1.2
log
@
	* Makefile.in: Add missing line continuation `\' for $(SUBDIRS) target.
	Add variables and targets to control binary and source distributions.
	Add variables and targets to control snapshot distribution.
	* profile/gmon.h: Add missing #endif for #ifndef.
	* profile/ChangeLog: Merge entries here and remove.
	* profile/Makefile.in: Add variables and targets to control
	distribution.
	* README: Add.
	* TODO: ditto.
	* config.guess: ditto.
	* config.sub: ditto.
	* mkinstalldirs: ditto.
	* install-sh: ditto.
	* configure: regenerate.
	* profile/configure: ditto.
@
text
@d27 1
a27 1
mkinstalldirs = $(SHELL) $(srcdir)/../../mkinstalldirs
@


1.1
log
@Initial revision
@
text
@d28 2
d122 6
@


1.1.1.1
log
@import winsup-2000-02-17 snapshot
@
text
@@
