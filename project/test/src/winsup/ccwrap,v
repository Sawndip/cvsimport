head	1.2;
access;
symbols
	cygwin-1_7_35-release:1.2
	cygwin-1_7_34-release:1.2
	cygwin-1_7_33-release:1.2
	cygwin-1_7_32-release:1.2
	cygwin-1_7_31-release:1.2
	cygwin-1_7_30-release:1.2
	cygwin-1_7_29-release:1.2
	cygwin-1_7_29-release-branchpoint:1.2.0.4
	cygwin-1_7_28-release:1.2
	cygwin-1_7_27-release:1.2
	cygwin-1_7_26-release:1.2
	cygwin-1_7_25-release:1.2
	cygwin-1_7_24-release:1.2
	cygwin-1_7_23-release:1.2
	cygwin-1_7_22-release:1.2
	cygwin-1_7_21-release:1.2
	cygwin-1_7_20-release:1.2
	cygwin-1_7_19-release:1.2
	cygwin-64bit-postmerge:1.2
	cygwin-64bit-premerge-branch:1.2.0.2
	cygwin-64bit-premerge:1.2
	cygwin-1_7_18-release:1.2
	cygwin-64bit-branch:1.1.0.2;
locks; strict;
comment	@# @;


1.2
date	2012.11.26.19.00.35;	author cgf;	state Exp;
branches;
next	1.1;

1.1
date	2012.11.23.13.22.42;	author cgf;	state Exp;
branches
	1.1.2.1;
next	;

1.1.2.1
date	2012.11.23.15.14.37;	author corinna;	state Exp;
branches;
next	1.1.2.2;

1.1.2.2
date	2012.11.27.08.56.06;	author corinna;	state Exp;
branches;
next	;


desc
@@


1.2
log
@* ccwrap: Don't drop mingw header file paths unless we've specified them with
--with-windows-headers.
@
text
@#!/usr/bin/perl
use Cwd;
use strict;
my $cxx;
my $ccorcxx;
if ($ARGV[0] ne '++') {
    $ccorcxx = 'CC';
    $cxx = 0;
} else {
    shift @@ARGV;
    $ccorcxx = 'CXX';
    $cxx = 1;
}
die "$0: $ccorcxx environment variable does not exist\n" unless exists $ENV{$ccorcxx};
my @@compiler = split ' ', $ENV{$ccorcxx};
if ("@@ARGV" !~ / -nostdinc/o) {
    my $fd;
    push @@compiler, ($cxx ? '-xc++' : '-xc');
    if (!open $fd, '-|') {
	open STDERR, '>&', \*STDOUT;
	exec @@compiler, '/dev/null', '-v', '-E', '-o', '/dev/null' or die "*** error execing $compiler[0] - $!\n";
    }
    $compiler[1] =~ s/xc/nostdinc/o;
    push @@compiler, '-nostdinc' if $cxx;
    push @@compiler, '-I' . $_ for split ' ', $ENV{CCWRAP_HEADERS};
    push @@compiler, '-isystem', $_ for split ' ', $ENV{CCWRAP_SYSTEM_HEADERS};
    my $finding_paths = 0;
    my $mingw_compiler = $compiler[0] =~ /mingw/o;
    my @@dirafters;
    for my $d (split ' ', $ENV{CCWRAP_DIRAFTER_HEADERS}) {
	push @@dirafters, '-isystem', $d if !$mingw_compiler || $d !~ /w32api/o;
    }
    while (<$fd>) {
	if (/^\*\*\*/o) {
	    print;
	} elsif ($_ eq "#include <...> search starts here:\n") {
	    $finding_paths = 1;
	} elsif (!$finding_paths) {
	    next;
	} elsif ($_ eq "End of search list.\n") {
	    last;
	} elsif (!@@dirafters || !m%w32api|mingw.*/include%o) {
	    chomp;
	    s/^\s+//;
	    push @@compiler, '-isystem', Cwd::abs_path($_);
	}
    }
    push @@compiler, @@dirafters;
    close $fd;
}

push @@compiler, @@ARGV;

print join(' ', '+', @@compiler), "\n" if $ENV{CCWRAP_VERBOSE};
exec @@compiler or die "$0: $compiler[0] failed to execute\n";
@


1.1
log
@ChangeLog:
2012-11-12  Christopher Faylor  <me.cygwin2012@@cgf.cx>

	* Makefile.common: Revamp for new configury.  Add default compilation
	targets, include .E processing.  Add magic for allowing "CFLAGS" to
	control optimization options in "CXXFLAGS".
	* configure.cygwin: New include for Cygwin configure.in's.
	* acinclude.m4: Delete old definitions.  Implement AC_WINDOWS_HEADERS,
	AC_WINDOWS_LIBS, AC_CYGWIN_INCLUDES, target_builddir, winsup_srcdir.
	* aclocal.m4: Regenerate.
	* autogen.sh: New file.
	* ccwrap: New script.
	* c++wrap: New script.
	* config.guess: New script.
	* config.sub: New script.
	* configure: Regenerate.
	* configure.in: Eliminate LIB_AC_PROG_* calls in favor of standard.
	Delete ancient target test.
	* install-sh: New script.

cygserver/ChangeLog:
2012-11-12  Christopher Faylor  <me.cygwin2012@@cgf.cx>

	* Makefile.in: Revamp for new configury.
	* configure.in: Revamp for new configury.
	* aclocal.m4: Regenerate.
	* configure: Ditto.
	* autogen.sh: New script.

cygwin/ChangeLog:
2012-11-22  Christopher Faylor  <me.cygwin2012@@cgf.cx>

	* select.cc (select): Don't return -1 when we've timed out after
	looping.

2012-11-22  Christopher Faylor  <me.cygwin2012@@cgf.cx>

	* Makefile.in: Revamp for new configury.
	(datarootdir): Add variable setting.
	(winver_stamp): Accommodate changes to mkvers.sh setting.
	(libc.a): Fix race when libm.a might not have been built yet.
	* configure.in: Revamp for new configury.
	* aclocal.m4: Regenerate.
	* configure: Ditto.
	* autogen.sh: New script.
	* mkvers.sh: Find include directives via CFLAGS and friends rather than
	assuming that w32api lives nearby.

utils/ChangeLog:
2012-11-12  Christopher Faylor  <me.cygwin2012@@cgf.cx>

	* aclocal.m4: Regenerate.
	* configure: Ditto.
	* autogen.sh: New script.
	* configure.in: Revamp for new configury.
	* Makefile.in: Revamp for new configury.  Rename ALL_* to just *.
	Always use "VERBOSE" setting.
	(MINGW_CXX): Don't include CFLAGS in definition.
	(all): Define target first, before everything else so that it is the
	default.
	(ps.exe): Don't add useless -lcygwin.
	(ldh.exe): For consistency, add to existing MINGW_LDFLAGS rather than
	redefining them.
	(cygcheck.exe): Always include -lz for MINGW_LDFLAGS.  Don't try to
	figure out where to find it.
	(dumper.exe): Simplify check.  Assume libraries are installed rather
	than trying to retrieve from source tree.
	(install): Just use /bin/mkdir to create directories.
	(Makefile): Regenerate when standard dependencies change.
	* dump_setup.cc: Always include zlib.h.  Remove accommodations for it
	possibly not existing.
	* parse_pe.cc: Add define which allows building with installed
	binutils package.
	* dumper.cc: Ditto.
@
text
@d28 5
d42 1
a42 1
	} elsif (!m%w32api|mingw.*/include%o) {
d48 1
a48 1
    push @@compiler, '-isystem', $_ for split ' ', $ENV{CCWRAP_DIRAFTER_HEADERS};
@


1.1.2.1
log
@Pull in changes from HEAD
@
text
@@


1.1.2.2
log
@Pull in changes from HEAD
@
text
@a27 5
    my $mingw_compiler = $compiler[0] =~ /mingw/o;
    my @@dirafters;
    for my $d (split ' ', $ENV{CCWRAP_DIRAFTER_HEADERS}) {
	push @@dirafters, '-isystem', $d if !$mingw_compiler || $d !~ /w32api/o;
    }
d37 1
a37 1
	} elsif (!@@dirafters || !m%w32api|mingw.*/include%o) {
d43 1
a43 1
    push @@compiler, @@dirafters;
@


