head	1.5;
access;
symbols
	cygwin-1_7_35-release:1.5
	cygwin-1_7_34-release:1.5
	cygwin-1_7_33-release:1.4
	cygwin-1_7_32-release:1.4
	cygwin-1_7_31-release:1.4
	cygwin-1_7_30-release:1.4
	cygwin-1_7_29-release:1.4
	cygwin-1_7_29-release-branchpoint:1.4.0.2
	cygwin-1_7_28-release:1.4
	cygwin-1_7_27-release:1.4
	cygwin-1_7_26-release:1.4
	cygwin-1_7_25-release:1.4
	cygwin-1_7_24-release:1.4
	cygwin-1_7_23-release:1.4
	cygwin-1_7_22-release:1.4
	cygwin-1_7_21-release:1.4
	cygwin-1_7_20-release:1.4
	cygwin-1_7_19-release:1.4
	cygwin-64bit-postmerge:1.4
	cygwin-64bit-premerge-branch:1.3.0.6
	cygwin-64bit-premerge:1.3
	cygwin-1_7_18-release:1.3
	cygwin-1_7_17-release:1.3
	cygwin-64bit-branch:1.3.0.4
	cygwin-1_7_16-release:1.3
	cygwin-1_7_15-release:1.3
	cygwin-1_7_14_2-release:1.3
	cygwin-1_7_14-release:1.3
	cygwin-1_7_12-release:1.3
	cygwin-1_7_11-release:1.3
	cygwin-1_7_10-release:1.3
	cygwin-1_7_9-release:1.3
	cygwin-1_7_8-release:1.3
	cygwin-1_7_7-release:1.3
	cygwin-1_7_5-release:1.3
	cygwin-1_7_4-release:1.3
	cygwin-1_7_3-release:1.3
	cygwin-1_7_2-release:1.3
	cygwin-1_7_1-release:1.3
	cv-branch-2:1.3.0.2
	cr-0x5f1:1.2.0.6
	cv-branch:1.2.0.4
	cr-0x3b58:1.2.0.2
	cr-0x9e:1.1.0.4
	cr-0x9d:1.1.0.2;
locks; strict;
comment	@ * @;


1.5
date	2015.01.19.17.42.37;	author corinna;	state Exp;
branches;
next	1.4;

1.4
date	2013.04.23.09.44.30;	author corinna;	state Exp;
branches;
next	1.3;

1.3
date	2008.11.26.10.18.53;	author corinna;	state Exp;
branches
	1.3.4.1;
next	1.2;

1.2
date	2005.11.10.15.04.06;	author corinna;	state Exp;
branches;
next	1.1;

1.1
date	2003.11.19.18.49.40;	author corinna;	state Exp;
branches;
next	;

1.3.4.1
date	2012.12.04.17.25.21;	author corinna;	state Exp;
branches;
next	;


desc
@@


1.5
log
@	* bsd_helper.h: Throughout, convert "struct thread" to "class thread".
	* bsd_mutex.cc (_msleep): Fetch signal_arrived handle from thread's
	ipcblk.
	* process.h (class process): Drop _signal_arrived and align methods.
	(process_cache::process): Drop signal_arrived parameter.
	* process.cc (process::process): Ditto.  Drop related code.
	(process::~process): Drop closing signal_arrived handle.
	(process_cache::process): Drop signal_arrived parameter in call to
	process::process.
	(thread::dup_signal_arrived): New method duplicating thread's
	signal_arrived handle.
	(thread::close_signal_arrived): New method closing thread's
	signal_arrived handle.
	* msg.cc (client_request_msg::serve): Drop signal_arrived parameter from
	call to process_cache::process. Use thread constructor to initialize td.
	* sem.cc (client_request_sem::serve): Ditto.
	* shm.cc (client_request_shm::serve): Ditto.
@
text
@/* bsd_helper.h: Helps integrating BSD kernel code

   Copyright 2003, 2012, 2015 Red Hat, Inc.

This file is part of Cygwin.

This software is a copyrighted work licensed under the terms of the
Cygwin license.  Please consult the file "CYGWIN_LICENSE" for
details. */
#ifndef _BSD_HELPER_H
#define _BSD_HELPER_H

#include <sys/types.h>
#include <sys/syslog.h>

enum tun_bool_t {
  TUN_UNDEF = 0,
  TUN_FALSE = 1,
  TUN_TRUE  = 2
};

#define TUNABLE_INT_FETCH(a,b)	tunable_int_fetch((a),(b))
#define TUNABLE_BOOL_FETCH(a,b)	tunable_bool_fetch((a),(b))

#define sys_malloc(a,b,c) (malloc(a)?:(panic("malloc failed in %s, line %d"),(void*)NULL))
#define sys_free(a,b) free(a)

#define jail_sysvipc_allowed true
#define jailed(a) false

extern const char *__progname;

/* Global vars, determining whether the IPC stuff should be started or not. */
extern tun_bool_t support_sharedmem;
extern tun_bool_t support_msgqueues;
extern tun_bool_t support_semaphores;

extern SECURITY_ATTRIBUTES sec_all_nih;

void securityinit (void);

int win_copyin (class thread *, const void *, void *, size_t);
int win_copyout (class thread *, const void *, void *, size_t);
#define copyin(a,b,c) win_copyin((td),(a),(b),(c))
#define copyout(a,b,c) win_copyout((td),(a),(b),(c))

void *get_token_info (HANDLE, TOKEN_INFORMATION_CLASS);
int ipcperm (class thread *, struct ipc_perm *, unsigned int);
int suser (class thread *);
bool adjust_identity_info (struct proc *p);

struct vmspace *ipc_p_vmspace (struct proc *);
int ipcexit_creat_hookthread(class thread *);
void ipcinit (void);
int ipcunload (void);

vm_object_t _vm_pager_allocate (int, int);
#define vm_pager_allocate(a,b,s,c,d) _vm_pager_allocate((s),(mode))
vm_object_t vm_object_duplicate (class thread *td, vm_object_t object);
void vm_object_deallocate (vm_object_t object);

void tunable_param_init (const char *, bool);
void tunable_int_fetch (const char *, int32_t *);
void tunable_bool_fetch (const char *, tun_bool_t *);

#endif /* _BSD_HELPER_H */
@


1.4
log
@	* Merge in cygwin-64bit-branch.
@
text
@d3 1
a3 1
   Copyright 2003, 2012 Red Hat, Inc.
d42 2
a43 2
int win_copyin (struct thread *, const void *, void *, size_t);
int win_copyout (struct thread *, const void *, void *, size_t);
d48 2
a49 2
int ipcperm (struct thread *, struct ipc_perm *, unsigned int);
int suser (struct thread *);
d53 1
a53 1
int ipcexit_creat_hookthread(struct thread *);
d59 1
a59 1
vm_object_t vm_object_duplicate (struct thread *td, vm_object_t object);
@


1.3
log
@	* Makefile.in (OBJS): Add setpwd.o.
	* README: Explain new service to store passwords in the LSA registry
	area.
	* bsd_helper.cc (get_token_info): Make externally available.
	* bsd_helper.h (get_token_info): Declare.
	* client.cc (client_request::handle_request): Add case for
	CYGSERVER_REQUEST_SETPWD request.
	* setpwd.cc: New file implementing the CYGSERVER_REQUEST_SETPWD
	request.
@
text
@d3 1
a3 1
   Copyright 2003 Red Hat, Inc.
d63 1
a63 1
void tunable_int_fetch (const char *, long *);
@


1.3.4.1
log
@	* bsd_helper.cc (tunable_int_fetch): Convert 2nd parameter to
	int32_t.
	* bsd_helper.h (tunable_int_fetch): Fix declaration accordingly.
	* bsd_log.cc (log_level): Change type to int32_t.
	* bsd_log.h (log_level): Fix declaration accordingly.
	* bsd_mutex.cc (msgmni): Change type to int32_t.
	(semmni): Ditto.
	* cygserver.cc: Fix debug output to be target agnostic.  Use same
	style throughout.
	* msg.cc (client_request_msg::serve): Refuse to serve 64 bit processes
	from 32 bit cygserver.
	* sem.cc (client_request_sem::serve): Ditto.
	* shm.cc (client_request_shm::serve): Ditto.
	* sysv_shm.cc (shm_delete_mapping): Mark size as unused to make gcc
	happy.
	(kern_shmat): Ditto with flags.
	* process.h (class process): Change type of _cleaning_up member to LONG.
	* threaded_queue.h (class threaded_queue): Ditto for _workers_count.
@
text
@d3 1
a3 1
   Copyright 2003, 2012 Red Hat, Inc.
d63 1
a63 1
void tunable_int_fetch (const char *, int32_t *);
@


1.2
log
@	* bsd_helper.cc (securityinit): New function.  Move initialization
	of security related variables from ipcinit here.
	* bsd_helper.h (securityinit): Add prototype.
	* cygserver.cc (main): Call securityinit right after wincap.init.

	* process.cc (process_cache::process): Fix maximum process condition.

	* README: Add description for new -p/--process-cache option.
	* bsd_helper.cc (default_tun_check): Add kern.srv.process_cache_size
	entry to tunable_params. Set max value of kern.srv.request_threads
	to 310.
	* cygserver.cc (SERVER_VERSION): Set to 1.20.
	(print_usage): Print usage of new parameter -p.
	(main): Add process cache parameter handling. Accomodate new max
	value of request threads.
	* cygserver.conf: Add kern.srv.process_cache_size tunable parameter.
	Accomodate new max value of kern.srv.request_threads.
	* process.cc: Fix a comment.
	(process_cache::process_cache): Add max process cache size parameter.
	Change _cache_add_trigger to manual reset event.
	(struct pcache_wait_t): New struct used as parameter to
	pcache_wait_thread.
	(pcache_wait_thread): New thread function used for threaded process
	cache.
	(process_cache::wait_for_processes): Use threaded waiting if number
	of processes to wait for is bigger than 62. Always check all processes
	to avoid race under heavy load.
	(process_cache::sync_wait_array): Remove useless assert. Reset
	_cache_add_trigger right at the start since it's manual reset now.
	Accomodate threaded waiting.
	* process.h (process_cache::process_cache): Add max_procs parameter.
	(process_cache::_max_process_count): New member.
	(process_cache::_wait_array: Raise to allow up to 5 wait threads.
	(process_cache::_process_array): Ditto.
@
text
@d47 1
@


1.1
log
@	Don't use safe_new but new throughout.  Fix copyright dates
	throughout.
	* Makefile.in: Accomodate all new files and name changes.
	Add a *.d dependency.
	(sbindir): Add.
	(etcdir): Drop in favor of more appropriate sysconfdir definition.
	(sysconfdir): Add.
	(CXXFLAGS): Add -MMD flag. Add SYSCONFDIR definition.
	(.SUFFIXES): Add.
	(install): Add action items.
	(libclean): New target.
	(fullclean): Ditto.
	* bsd_helper.cc: New file.
	* bsd_helper.h: Ditto.
	* bsd_log.cc: Ditto.
	* bsd_log.h: Ditto.
	* bsd_mutex.cc: Ditto.
	* bsd_mutex.h: Ditto.
	* client.cc: Rearrange to build as less as possible if
	__INSIDE_CYGWIN__.
	(client_request::handle_request): Add Message Queue and Semaphore
	handling.
	* cygserver.cc: Rearrange to build as less as possible if
	__INSIDE_CYGWIN__. Use new debug/log/panic logging functions.
	(DEF_CONFIG_FILE): New definition for configuration file.  Use
	throughout.
	(getfunc): Remove.
	(__cygserver__printf): Remove.
	(client_request_attach_tty::serve): Return error if impersonation
	fails.
	(print_usage): Pump up help message.
	(print_version): Add output of default configuration file.
	(main): Accommodate new options.  Allow overwrite of threading options
	from config file.  Call several new initialization functions.  Drop
	printing dots.  Don't define SIGHANDLE inline.
	* cygserver.conf: New file.
	* cygserver_process.h: Rename to process.h.
	* cygserver_transport.h: Rename to transport.h.
	* cygserver_transport_pipes.h: Rename to transport_pipes.h.
	* cygserver_transport_sockets.h: Rename to transport_sockets.h.
	* msg.cc: Rewrite.
	* sem.cc: Rewrite.
	* shm.cc: Rewrite.
	* sysv_msg.cc: New file, derived from FreeBSD version 1.52.
	* sysv_sem.cc: New file, derived from FreeBSD version 1.66.
	* sysv_shm.cc: New file, derived from FreeBSD version 1.89.
	* threaded_queue.cc: Rearrange to build as less as possible if
	__INSIDE_CYGWIN__.
	* transport.cc (transport_layer_base::impersonate_client): Define bool.
	(transport_layer_base::revert_to_self): Ditto.
	* transport.h (transport_layer_base::impersonate_client): Declare bool.
	(transport_layer_base::revert_to_self): Ditto.
	* transport_pipes.cc (transport_layer_pipes::transport_layer_pipes):
	Don't call init_security.
	(init_security): Remove.
	(transport_layer_pipes::accept): Use global sec_all_nih.
	(transport_layer_pipes::connect): Ditto.
	(transport_layer_pipes::impersonate_client): Define bool.
	(transport_layer_pipes::revert_to_self): Ditt.
	* transport_pipes.h (transport_layer_pipes::impersonate_client): Declare
	bool.
	(transport_layer_pipes::revert_to_self): Ditto.
	* woutsup.h: Include bsd compatibility headers.
	(SIGHANDLE): Add definition.
	(__cygserver__printf): Remove definition.
	(__noop_printf): Ditto.
	(debug_printf): Define using debug.
	(syscall_printf): Define using log.
	(system_printf): Ditto.
	Drop all other _printf definitions.
@
text
@d40 2
@

