head	1.6;
access;
symbols
	insight_7_6-2013-04-10-branchpoint:1.6
	gdb_7_6-branch:1.6.0.12
	gdb_7_5-branch:1.6.0.10
	gdb_7_4-branch:1.6.0.8
	gdb_7_3-branch:1.6.0.6
	gdb_7_1-branch:1.6.0.4
	gdb_7_0-branch:1.6.0.2
	arc-sim-20090309:1.4
	arc-insight_6_8-branch:1.4.0.16
	arc-insight_6_8-branchpoint:1.4
	insight_6_8-branch:1.4.0.14
	insight_6_8-branchpoint:1.4
	ITCL_3_3:1.1.1.3
	gdb_6_8-branch:1.4.0.12
	insight_6_6-20070208-release:1.4
	gdb_6_6-branch:1.4.0.10
	gdb_6_6-2006-11-15-branchpoint:1.4
	insight_6_5-20061003-release:1.4
	gdb_6_5-branch:1.4.0.8
	gdb_6_5-2006-05-14-branchpoint:1.4
	gdb_6_4-branch:1.4.0.6
	gdb_6_4-2005-11-01-branchpoint:1.4
	gdb_6_1-2004-04-05-release:1.4
	gdb_6_1-branch:1.4.0.4
	gdb_6_1-2004-03-01-gmt-branchpoint:1.4
	gdb_6_0-2003-10-04-release:1.4
	gdb_6_0-branch:1.4.0.2
	gdb_6_0-2003-06-23-branchpoint:1.4
	ITCL3_2_1:1.1.1.2
	gdb_5_3-2002-12-12-release:1.1.1.1
	tcltk840-20020924-branch:1.2.0.2
	tcltk840-20020924-branchpoint:1.2
	ITCL_3_2_1:1.1.1.2
	gdb_5_3-branch:1.1.1.1.0.12
	gdb_5_3-2002-09-04-branchpoint:1.1.1.1
	gdb_5_2_1-2002-07-23-release:1.1.1.1
	gdb_5_2-2002-04-29-release:1.1.1.1
	gdb_5_2-branch:1.1.1.1.0.10
	gdb_5_2-2002-03-03-branchpoint:1.1.1.1
	gdb_5_1_1-2002-01-24-release:1.1.1.1
	cygnus_cvs_20020108_pre:1.1.1.1
	gdb_5_1_0_1-2002-01-03-branch:1.1.1.1.0.8
	gdb_5_1_0_1-2002-01-03-branchpoint:1.1.1.1
	gdb_5_1-2001-11-21-release:1.1.1.1
	gdb_s390-2001-09-26-branch:1.1.1.1.0.6
	gdb_s390-2001-09-26-branchpoint:1.1.1.1
	ITCL_TCL_8_3:1.1.1.1
	NET:1.1.1
	gdb_5_1-2001-07-29-branch:1.1.1.1.0.4
	gdb_5_1-2001-07-29-branchpoint:1.1.1.1
	insight-precleanup-2001-01-01:1.1.1.1
	gdb_5_0-2000-05-19-release:1.1.1.1
	gdb_4_18_2-2000-05-18-release:1.1.1.1
	gdb_4_95_1-2000-05-11-snapshot:1.1.1.1
	gdb_4_95_0-2000-04-27-snapshot:1.1.1.1
	gdb_5_0-2000-04-10-branch:1.1.1.1.0.2
	gdb_5_0-2000-04-10-branchpoint:1.1.1.1
	repo-unification-2000-02-06:1.1.1.1
	insight-2000-02-04:1.1.1.1
	SNAPSHOT:1.1.1;
locks; strict;
comment	@# @;
expand	@o@;


1.6
date	2008.07.23.22.44.51;	author kseitz;	state Exp;
branches;
next	1.5;

1.5
date	2008.07.22.20.32.45;	author kseitz;	state Exp;
branches;
next	1.4;

1.4
date	2003.01.21.21.04.25;	author hunt;	state Exp;
branches;
next	1.3;

1.3
date	2003.01.21.20.40.28;	author hunt;	state Exp;
branches;
next	1.2;

1.2
date	2002.09.24.18.35.34;	author kseitz;	state Exp;
branches;
next	1.1;

1.1
date	2000.02.07.00.19.46;	author jsm;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2000.02.07.00.19.46;	author jsm;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2002.09.24.22.42.43;	author kseitz;	state Exp;
branches;
next	1.1.1.3;

1.1.1.3
date	2008.07.22.20.39.58;	author kseitz;	state Exp;
branches;
next	;


desc
@@


1.6
log
@        Import of Itcl 3.3.
        * itcl/configure.in, itk/configure.in, iwidgets/configure.in:
        Replace with configure.ac.
        * itcl/configure, itk/configure, iwidgets/configure: Regenerate.
        * configure.ac, Makefile.am, Makefile.in: New files.
        * README: "New" file.
        * aclocal.m4: Regenerate.
        * itcl/Makefile.in (RANLIB): Replace with RANLIB_LIB so
        that the toplevel build does not override this variable.
        * itk/Makefile.in (RANLIB): Likewise.
        * itcl/tclconfig/tcl.m4 (TEA_PATH_TCLCONFIG): Look for itclConfig.sh
        in the platform-specific location (unix or win).
        (TEA_PATH_TKCONFIG): Likewise.
        (TEA_MAKE_LIB): Even on windows, GCC libraries must start with "lib".
        * itk/tclconfig.m4: Copy of itcl/tcl.m4.
        * iwidgets/tcl.m4: Remove.
        * iwidgets/tclconfig: New directory.
        * iwidgets/tclconfig/tcl.m4, iwidgets/tclconfig/install-sh: Copies
        of itcl/tclconfig files.
        * iwidgets/Makefile.in (MKINSTALLDIRS): Use mkdir -p.
        * iwidgets/configure.ac (PACKAGE): Rename to PACKAGE_NAME.
        Call TEA_INIT, add AC_CONFIG_AUX_DIR and AC_PROG_INSTALL.
        Use TEA_* instead of SC_* macros.
        Search a few more directories for the itcl and itk libraries.
@
text
@# Borland C++ 4.52 makefile
#
# Copyright (c) 1993-1996 Lucent Technologies
# based on original from
# Copyright (c) 1995-1996 Sun Microsystems, Inc.
#
# See the file "license.terms" for information on usage and redistribution
# of this file, and for a DISCLAIMER OF ALL WARRANTIES.

!include "..\..\Makefile.bc"

#
# Project directories
#
# ROOT = top of source tree
# TMPDIR = location where .obj files should be stored during build

ROOT    	= ..
TMPDIR  	= .
TARGET_LIB_ITCL	= $(TARGET_LIB)\Itcl2.2
TARGET_DOC_ITCL	= $(TARGET_DOC)\Itcl

# uncomment the following line to compile with symbols
#DEBUG=1

# uncomment the following two lines to compile with TCL_MEM_DEBUG
#DEBUGDEFINES   =TCL_MEM_DEBUG

INCLUDES	=$(BORLAND)\include;$(ROOT)\generic;$(ROOT)\win;$(TCLDIR)\generic
LIBDIRS		=$(BORLAND)\lib;$(ROOT)\win

!ifndef DEBUG

# these macros cause maximum optimization and no symbols
DEBUGLDFLAGS	=
DEBUGCCFLAGS	= -v- -vi- -O2
DEBUGLDFLAGS16	= -Oc -Oi -Oa -Or
!else

# these macros enable debugging
DEBUGLDFLAGS	= -v
DEBUGCCFLAGS	= -k -Od -v
DEBUGLDFLAGS16	=
!endif

DEFINES		= _RTLDLL;USE_TCLALLOC=0;$(DEBUGDEFINES);NO_DLFCN_H=1;ITCL_NAMESPACES=1
PROJECTCCFLAGS	= $(DEBUGCCFLAGS) -w-par -w-stu

CFLAGS16_dll	= $(PROJECTCCFLAGS) -I$(INCLUDES) -D$(DEFINES) -WD -ml -c -3 -d -w

LNFLAGS_exe		= -Tpe -aa -c $(DEBUGLDFLAGS) $(BORLAND)\lib\c0w32
LNFLAGS_CONSOLE_exe	= -Tpe -ap -c $(DEBUGLDFLAGS) $(BORLAND)\lib\c0x32
LNFLAGS_dll		= -Tpd -aa -c $(DEBUGLDFLAGS) $(BORLAND)\lib\c0d32
LNFLAGS16_dll		= -Twd -c -C -A=16 $(DEBUGLDFLAGS16) $(BORLAND)\lib\c0dl.obj

LNLIBS_exe	= $(ITCLLIB) $(TCLLIBDIR)\$(TCLLIB) import32 cw32i
LNLIBS_dll	= $(TCLLIBDIR)\$(TCLLIB) import32 cw32i
LNLIBS16_dll	= import cwl

#
# Global makefile settings
#

.AUTODEPEND
.CACHEAUTODEPEND

.suffixes: .c .dll .lib .obj .exe

.path.c=$(ROOT)\win;$(ROOT)\generic
.path.obj=$(TMPDIR)
.path.dll=$(ROOT)\win;$(WINDIR);$(WINDIR)\SYSTEM32;$(WINDIR)\SYSTEM

ITCLSHOBJS = \
	$(TMPDIR)\tclAppInit.obj

ITCLOBJS = \
	$(TMPDIR)\itcl_bicmds.obj \
	$(TMPDIR)\itcl_class.obj \
	$(TMPDIR)\itcl_cmds.obj \
	$(TMPDIR)\itcl_linkage.obj \
	$(TMPDIR)\itcl_methods.obj \
	$(TMPDIR)\itcl_objects.obj \
	$(TMPDIR)\itcl_obsolete.obj \
	$(TMPDIR)\itcl_parse.obj \
	$(TMPDIR)\itcl_util.obj \
	$(TMPDIR)\dllEntryPoint.obj


DUMPEXTS = $(TCLLIBDIR)\dumpexts.exe
ITCLSH = itclsh.exe

#
# Targets
#

all:  cfgcln cfgdll $(ITCLDLL) cfgexe $(ITCLSH) cfgcln
test: $(ITCLSH)
	$(CP) $(TCLLIBDIR)\*.dll
	$(ITCLSH) <<|
		cd ../tests
		source all
|

install: all
	$(MKDIR) "$(TARGET_ROOT)"
	$(MKDIR) "$(TARGET_BIN)"
	$(MKDIR) "$(TARGET_LIB_ROOT)"
	$(MKDIR) "$(TARGET_LIB)"
	$(MKDIR) "$(TARGET_LIB_ITCL)"
	$(MKDIR) "$(TARGET_INCLUDE_ROOT)"
	$(MKDIR) "$(TARGET_INCLUDE)"
	$(MKDIR) "$(TARGET_DOC)"
	$(MKDIR) "$(TARGET_DOC_ITCL)"
	$(CP) $(TMPDIR)\$(ITCLSH) "$(TARGET_BIN)"
	$(CP) $(TMPDIR)\$(ITCLDLL) "$(TARGET_BIN)"
	$(CP) $(ROOT)\generic\itcl.h "$(TARGET_INCLUDE)"
	$(CP) $(ROOT)\library\*.* "$(TARGET_LIB_ITCL)"
	$(CP) $(ROOT)\win\*.tcl "$(TARGET_LIB_ITCL)"
	$(CP) $(ROOT)\..\html\Itcl\*.* "$(TARGET_DOC_ITCL)"

# Implicit Targets

.c.obj:
	@@$(BCC32) {$< }

.dll.lib:
	$(IMPLIB) -c $@@ $<

#.rc.res:
#	$(RC) -i$(INCLUDES) -d__WIN32__;$(DEFINES) $<

.rc.res:
	$(RC) -i$(INCLUDES) -d__WIN32__; $<


#
# Configuration file targets - these files are implicitly used by the compiler
#

cfgdll:
	@@$(CP) &&|
		-n$(TMPDIR) -I$(INCLUDES) -c -WD
		-D$(DEFINES) -3 -d -w $(PROJECTCCFLAGS)
| bcc32.cfg >NUL

cfgexe:
	@@$(CP) &&|
		-n$(TMPDIR) -I$(INCLUDES) -c -W
		-D$(DEFINES) -3 -d -w $(PROJECTCCFLAGS)
| bcc32.cfg >NUL

cfgcln:
	-@@$(RM) *.cfg

#
# Executable targets
#

$(ITCLDLL): $(ITCLOBJS) itcl.def itcl.res
	$(TLINK32) $(LNFLAGS_dll) @@&&|
		$(ITCLOBJS)
$@@
-x
$(LNLIBS_dll)
|, itcl.def, itcl.res

$(ITCLSH): $(ITCLSHOBJS) $(ITCLLIB) itclsh.res
	$(TLINK32) $(LNFLAGS_CONSOLE_exe) @@&&|
		$(ITCLSHOBJS)
$@@
-x
$(LNLIBS_exe)
|, &&|
EXETYPE WINDOWS
CODE PRELOAD MOVEABLE DISCARDABLE
DATA PRELOAD MOVEABLE MULTIPLE
|, itclsh.res


# The following rule automatically generates a tcl.def file containing
# an export entry for every public symbol in the tcl.dll library.

itcl.def: $(ITCLOBJS)
	$(DUMPEXTS) -o itcl.def $(ITCLDLL) @@&&|
		$(ITCLOBJS)
|


# debugging rules, the .dll and .exe files must be in the same
# directory as the object files for debugging purposes

$(TMPDIR)\$(ITCLDLL): $(ITCLDLL)
	$(CP) $(ITCLDLL) $(TMPDIR)

$(TMPDIR)\$(TCLDLL): $(TCLLIBDIR)\$(TCLDLL)
	$(CP) $(TCLLIBDIR)\$(TCLDLL) $(TMPDIR)

$(TMPDIR)\$(ITCLSH): $(ITCLSH)
	$(CP) $(ITCLSH) $(TMPDIR)

debug: $(TMPDIR)\$(ITCLDLL) $(TMPDIR)\$(TCLDLL)

# remove all generated files

clean:
	-@@$(RM) *.exe
	-@@$(RM) *.lib
	-@@$(RM) *.dll
	-@@$(RM) *.res
	-@@$(RM) itcl.def
	-@@$(RM) $(TMPDIR)\*.obj
	-@@$(RM) *.cfg
@


1.5
log
@touch all sources for Itcl 3.3/Iwidgets 4.0.1 upgrade
@
text
@d1 212
a212 213
# Borland C++ 4.52 makefile
#
# Copyright (c) 1993-1996 Lucent Technologies
# based on original from
# Copyright (c) 1995-1996 Sun Microsystems, Inc.
#
# See the file "license.terms" for information on usage and redistribution
# of this file, and for a DISCLAIMER OF ALL WARRANTIES.

!include "..\..\Makefile.bc"

#
# Project directories
#
# ROOT = top of source tree
# TMPDIR = location where .obj files should be stored during build

ROOT    	= ..
TMPDIR  	= .
TARGET_LIB_ITCL	= $(TARGET_LIB)\Itcl2.2
TARGET_DOC_ITCL	= $(TARGET_DOC)\Itcl

# uncomment the following line to compile with symbols
#DEBUG=1

# uncomment the following two lines to compile with TCL_MEM_DEBUG
#DEBUGDEFINES   =TCL_MEM_DEBUG

INCLUDES	=$(BORLAND)\include;$(ROOT)\generic;$(ROOT)\win;$(TCLDIR)\generic
LIBDIRS		=$(BORLAND)\lib;$(ROOT)\win

!ifndef DEBUG

# these macros cause maximum optimization and no symbols
DEBUGLDFLAGS	=
DEBUGCCFLAGS	= -v- -vi- -O2
DEBUGLDFLAGS16	= -Oc -Oi -Oa -Or
!else

# these macros enable debugging
DEBUGLDFLAGS	= -v
DEBUGCCFLAGS	= -k -Od -v
DEBUGLDFLAGS16	=
!endif

DEFINES		= _RTLDLL;USE_TCLALLOC=0;$(DEBUGDEFINES);NO_DLFCN_H=1;ITCL_NAMESPACES=1
PROJECTCCFLAGS	= $(DEBUGCCFLAGS) -w-par -w-stu

CFLAGS16_dll	= $(PROJECTCCFLAGS) -I$(INCLUDES) -D$(DEFINES) -WD -ml -c -3 -d -w

LNFLAGS_exe		= -Tpe -aa -c $(DEBUGLDFLAGS) $(BORLAND)\lib\c0w32
LNFLAGS_CONSOLE_exe	= -Tpe -ap -c $(DEBUGLDFLAGS) $(BORLAND)\lib\c0x32
LNFLAGS_dll		= -Tpd -aa -c $(DEBUGLDFLAGS) $(BORLAND)\lib\c0d32
LNFLAGS16_dll		= -Twd -c -C -A=16 $(DEBUGLDFLAGS16) $(BORLAND)\lib\c0dl.obj

LNLIBS_exe	= $(ITCLLIB) $(TCLLIBDIR)\$(TCLLIB) import32 cw32i
LNLIBS_dll	= $(TCLLIBDIR)\$(TCLLIB) import32 cw32i
LNLIBS16_dll	= import cwl

#
# Global makefile settings
#

.AUTODEPEND
.CACHEAUTODEPEND

.suffixes: .c .dll .lib .obj .exe

.path.c=$(ROOT)\win;$(ROOT)\generic
.path.obj=$(TMPDIR)
.path.dll=$(ROOT)\win;$(WINDIR);$(WINDIR)\SYSTEM32;$(WINDIR)\SYSTEM

ITCLSHOBJS = \
	$(TMPDIR)\tclAppInit.obj

ITCLOBJS = \
	$(TMPDIR)\itcl_bicmds.obj \
	$(TMPDIR)\itcl_class.obj \
	$(TMPDIR)\itcl_cmds.obj \
	$(TMPDIR)\itcl_linkage.obj \
	$(TMPDIR)\itcl_methods.obj \
	$(TMPDIR)\itcl_objects.obj \
	$(TMPDIR)\itcl_obsolete.obj \
	$(TMPDIR)\itcl_parse.obj \
	$(TMPDIR)\itcl_util.obj \
	$(TMPDIR)\dllEntryPoint.obj


DUMPEXTS = $(TCLLIBDIR)\dumpexts.exe
ITCLSH = itclsh.exe

#
# Targets
#

all:  cfgcln cfgdll $(ITCLDLL) cfgexe $(ITCLSH) cfgcln
test: $(ITCLSH)
	$(CP) $(TCLLIBDIR)\*.dll
	$(ITCLSH) <<|
		cd ../tests
		source all
|

install: all
	$(MKDIR) "$(TARGET_ROOT)"
	$(MKDIR) "$(TARGET_BIN)"
	$(MKDIR) "$(TARGET_LIB_ROOT)"
	$(MKDIR) "$(TARGET_LIB)"
	$(MKDIR) "$(TARGET_LIB_ITCL)"
	$(MKDIR) "$(TARGET_INCLUDE_ROOT)"
	$(MKDIR) "$(TARGET_INCLUDE)"
	$(MKDIR) "$(TARGET_DOC)"
	$(MKDIR) "$(TARGET_DOC_ITCL)"
	$(CP) $(TMPDIR)\$(ITCLSH) "$(TARGET_BIN)"
	$(CP) $(TMPDIR)\$(ITCLDLL) "$(TARGET_BIN)"
	$(CP) $(ROOT)\generic\itcl.h "$(TARGET_INCLUDE)"
	$(CP) $(ROOT)\library\*.* "$(TARGET_LIB_ITCL)"
	$(CP) $(ROOT)\win\*.tcl "$(TARGET_LIB_ITCL)"
	$(CP) $(ROOT)\..\html\Itcl\*.* "$(TARGET_DOC_ITCL)"

# Implicit Targets

.c.obj:
	@@$(BCC32) {$< }

.dll.lib:
	$(IMPLIB) -c $@@ $<

#.rc.res:
#	$(RC) -i$(INCLUDES) -d__WIN32__;$(DEFINES) $<

.rc.res:
	$(RC) -i$(INCLUDES) -d__WIN32__; $<


#
# Configuration file targets - these files are implicitly used by the compiler
#

cfgdll:
	@@$(CP) &&|
		-n$(TMPDIR) -I$(INCLUDES) -c -WD
		-D$(DEFINES) -3 -d -w $(PROJECTCCFLAGS)
| bcc32.cfg >NUL

cfgexe:
	@@$(CP) &&|
		-n$(TMPDIR) -I$(INCLUDES) -c -W
		-D$(DEFINES) -3 -d -w $(PROJECTCCFLAGS)
| bcc32.cfg >NUL

cfgcln:
	-@@$(RM) *.cfg

#
# Executable targets
#

$(ITCLDLL): $(ITCLOBJS) itcl.def itcl.res
	$(TLINK32) $(LNFLAGS_dll) @@&&|
		$(ITCLOBJS)
$@@
-x
$(LNLIBS_dll)
|, itcl.def, itcl.res

$(ITCLSH): $(ITCLSHOBJS) $(ITCLLIB) itclsh.res
	$(TLINK32) $(LNFLAGS_CONSOLE_exe) @@&&|
		$(ITCLSHOBJS)
$@@
-x
$(LNLIBS_exe)
|, &&|
EXETYPE WINDOWS
CODE PRELOAD MOVEABLE DISCARDABLE
DATA PRELOAD MOVEABLE MULTIPLE
|, itclsh.res


# The following rule automatically generates a tcl.def file containing
# an export entry for every public symbol in the tcl.dll library.

itcl.def: $(ITCLOBJS)
	$(DUMPEXTS) -o itcl.def $(ITCLDLL) @@&&|
		$(ITCLOBJS)
|


# debugging rules, the .dll and .exe files must be in the same
# directory as the object files for debugging purposes

$(TMPDIR)\$(ITCLDLL): $(ITCLDLL)
	$(CP) $(ITCLDLL) $(TMPDIR)

$(TMPDIR)\$(TCLDLL): $(TCLLIBDIR)\$(TCLDLL)
	$(CP) $(TCLLIBDIR)\$(TCLDLL) $(TMPDIR)

$(TMPDIR)\$(ITCLSH): $(ITCLSH)
	$(CP) $(ITCLSH) $(TMPDIR)

debug: $(TMPDIR)\$(ITCLDLL) $(TMPDIR)\$(TCLDLL)

# remove all generated files

clean:
	-@@$(RM) *.exe
	-@@$(RM) *.lib
	-@@$(RM) *.dll
	-@@$(RM) *.res
	-@@$(RM) itcl.def
	-@@$(RM) $(TMPDIR)\*.obj
	-@@$(RM) *.cfg

@


1.4
log
@Updated to itcl 3.2.1.
@
text
@@


1.3
log
@touched all sources to ease next import
@
text
@d1 213
a213 212
# Borland C++ 4.52 makefile
#
# Copyright (c) 1993-1996 Lucent Technologies
# based on original from
# Copyright (c) 1995-1996 Sun Microsystems, Inc.
#
# See the file "license.terms" for information on usage and redistribution
# of this file, and for a DISCLAIMER OF ALL WARRANTIES.

!include "..\..\Makefile.bc"

#
# Project directories
#
# ROOT = top of source tree
# TMPDIR = location where .obj files should be stored during build

ROOT    	= ..
TMPDIR  	= .
TARGET_LIB_ITCL	= $(TARGET_LIB)\Itcl2.2
TARGET_DOC_ITCL	= $(TARGET_DOC)\Itcl

# uncomment the following line to compile with symbols
#DEBUG=1

# uncomment the following two lines to compile with TCL_MEM_DEBUG
#DEBUGDEFINES   =TCL_MEM_DEBUG

INCLUDES	=$(BORLAND)\include;$(ROOT)\generic;$(ROOT)\win;$(TCLDIR)\generic
LIBDIRS		=$(BORLAND)\lib;$(ROOT)\win

!ifndef DEBUG

# these macros cause maximum optimization and no symbols
DEBUGLDFLAGS	=
DEBUGCCFLAGS	= -v- -vi- -O2
DEBUGLDFLAGS16	= -Oc -Oi -Oa -Or
!else

# these macros enable debugging
DEBUGLDFLAGS	= -v
DEBUGCCFLAGS	= -k -Od -v
DEBUGLDFLAGS16	=
!endif

DEFINES		= _RTLDLL;USE_TCLALLOC=0;$(DEBUGDEFINES);NO_DLFCN_H=1;ITCL_NAMESPACES=1
PROJECTCCFLAGS	= $(DEBUGCCFLAGS) -w-par -w-stu

CFLAGS16_dll	= $(PROJECTCCFLAGS) -I$(INCLUDES) -D$(DEFINES) -WD -ml -c -3 -d -w

LNFLAGS_exe		= -Tpe -aa -c $(DEBUGLDFLAGS) $(BORLAND)\lib\c0w32
LNFLAGS_CONSOLE_exe	= -Tpe -ap -c $(DEBUGLDFLAGS) $(BORLAND)\lib\c0x32
LNFLAGS_dll		= -Tpd -aa -c $(DEBUGLDFLAGS) $(BORLAND)\lib\c0d32
LNFLAGS16_dll		= -Twd -c -C -A=16 $(DEBUGLDFLAGS16) $(BORLAND)\lib\c0dl.obj

LNLIBS_exe	= $(ITCLLIB) $(TCLLIBDIR)\$(TCLLIB) import32 cw32i
LNLIBS_dll	= $(TCLLIBDIR)\$(TCLLIB) import32 cw32i
LNLIBS16_dll	= import cwl

#
# Global makefile settings
#

.AUTODEPEND
.CACHEAUTODEPEND

.suffixes: .c .dll .lib .obj .exe

.path.c=$(ROOT)\win;$(ROOT)\generic
.path.obj=$(TMPDIR)
.path.dll=$(ROOT)\win;$(WINDIR);$(WINDIR)\SYSTEM32;$(WINDIR)\SYSTEM

ITCLSHOBJS = \
	$(TMPDIR)\tclAppInit.obj

ITCLOBJS = \
	$(TMPDIR)\itcl_bicmds.obj \
	$(TMPDIR)\itcl_class.obj \
	$(TMPDIR)\itcl_cmds.obj \
	$(TMPDIR)\itcl_linkage.obj \
	$(TMPDIR)\itcl_methods.obj \
	$(TMPDIR)\itcl_objects.obj \
	$(TMPDIR)\itcl_obsolete.obj \
	$(TMPDIR)\itcl_parse.obj \
	$(TMPDIR)\itcl_util.obj \
	$(TMPDIR)\dllEntryPoint.obj


DUMPEXTS = $(TCLLIBDIR)\dumpexts.exe
ITCLSH = itclsh.exe

#
# Targets
#

all:  cfgcln cfgdll $(ITCLDLL) cfgexe $(ITCLSH) cfgcln
test: $(ITCLSH)
	$(CP) $(TCLLIBDIR)\*.dll
	$(ITCLSH) <<|
		cd ../tests
		source all
|

install: all
	$(MKDIR) "$(TARGET_ROOT)"
	$(MKDIR) "$(TARGET_BIN)"
	$(MKDIR) "$(TARGET_LIB_ROOT)"
	$(MKDIR) "$(TARGET_LIB)"
	$(MKDIR) "$(TARGET_LIB_ITCL)"
	$(MKDIR) "$(TARGET_INCLUDE_ROOT)"
	$(MKDIR) "$(TARGET_INCLUDE)"
	$(MKDIR) "$(TARGET_DOC)"
	$(MKDIR) "$(TARGET_DOC_ITCL)"
	$(CP) $(TMPDIR)\$(ITCLSH) "$(TARGET_BIN)"
	$(CP) $(TMPDIR)\$(ITCLDLL) "$(TARGET_BIN)"
	$(CP) $(ROOT)\generic\itcl.h "$(TARGET_INCLUDE)"
	$(CP) $(ROOT)\library\*.* "$(TARGET_LIB_ITCL)"
	$(CP) $(ROOT)\win\*.tcl "$(TARGET_LIB_ITCL)"
	$(CP) $(ROOT)\..\html\Itcl\*.* "$(TARGET_DOC_ITCL)"

# Implicit Targets

.c.obj:
	@@$(BCC32) {$< }

.dll.lib:
	$(IMPLIB) -c $@@ $<

#.rc.res:
#	$(RC) -i$(INCLUDES) -d__WIN32__;$(DEFINES) $<

.rc.res:
	$(RC) -i$(INCLUDES) -d__WIN32__; $<


#
# Configuration file targets - these files are implicitly used by the compiler
#

cfgdll:
	@@$(CP) &&|
		-n$(TMPDIR) -I$(INCLUDES) -c -WD
		-D$(DEFINES) -3 -d -w $(PROJECTCCFLAGS)
| bcc32.cfg >NUL

cfgexe:
	@@$(CP) &&|
		-n$(TMPDIR) -I$(INCLUDES) -c -W
		-D$(DEFINES) -3 -d -w $(PROJECTCCFLAGS)
| bcc32.cfg >NUL

cfgcln:
	-@@$(RM) *.cfg

#
# Executable targets
#

$(ITCLDLL): $(ITCLOBJS) itcl.def itcl.res
	$(TLINK32) $(LNFLAGS_dll) @@&&|
		$(ITCLOBJS)
$@@
-x
$(LNLIBS_dll)
|, itcl.def, itcl.res

$(ITCLSH): $(ITCLSHOBJS) $(ITCLLIB) itclsh.res
	$(TLINK32) $(LNFLAGS_CONSOLE_exe) @@&&|
		$(ITCLSHOBJS)
$@@
-x
$(LNLIBS_exe)
|, &&|
EXETYPE WINDOWS
CODE PRELOAD MOVEABLE DISCARDABLE
DATA PRELOAD MOVEABLE MULTIPLE
|, itclsh.res


# The following rule automatically generates a tcl.def file containing
# an export entry for every public symbol in the tcl.dll library.

itcl.def: $(ITCLOBJS)
	$(DUMPEXTS) -o itcl.def $(ITCLDLL) @@&&|
		$(ITCLOBJS)
|


# debugging rules, the .dll and .exe files must be in the same
# directory as the object files for debugging purposes

$(TMPDIR)\$(ITCLDLL): $(ITCLDLL)
	$(CP) $(ITCLDLL) $(TMPDIR)

$(TMPDIR)\$(TCLDLL): $(TCLLIBDIR)\$(TCLDLL)
	$(CP) $(TCLLIBDIR)\$(TCLDLL) $(TMPDIR)

$(TMPDIR)\$(ITCLSH): $(ITCLSH)
	$(CP) $(ITCLSH) $(TMPDIR)

debug: $(TMPDIR)\$(ITCLDLL) $(TMPDIR)\$(TCLDLL)

# remove all generated files

clean:
	-@@$(RM) *.exe
	-@@$(RM) *.lib
	-@@$(RM) *.dll
	-@@$(RM) *.res
	-@@$(RM) itcl.def
	-@@$(RM) $(TMPDIR)\*.obj
	-@@$(RM) *.cfg
@


1.2
log
@touched all sources to ease next import
@
text
@@


1.1
log
@Initial revision
@
text
@@


1.1.1.1
log
@import insight-2000-02-04 snapshot (2nd try)
@
text
@@


1.1.1.2
log
@import itcl 3.2.1
@
text
@d1 212
a212 213
# Borland C++ 4.52 makefile
#
# Copyright (c) 1993-1996 Lucent Technologies
# based on original from
# Copyright (c) 1995-1996 Sun Microsystems, Inc.
#
# See the file "license.terms" for information on usage and redistribution
# of this file, and for a DISCLAIMER OF ALL WARRANTIES.

!include "..\..\Makefile.bc"

#
# Project directories
#
# ROOT = top of source tree
# TMPDIR = location where .obj files should be stored during build

ROOT    	= ..
TMPDIR  	= .
TARGET_LIB_ITCL	= $(TARGET_LIB)\Itcl2.2
TARGET_DOC_ITCL	= $(TARGET_DOC)\Itcl

# uncomment the following line to compile with symbols
#DEBUG=1

# uncomment the following two lines to compile with TCL_MEM_DEBUG
#DEBUGDEFINES   =TCL_MEM_DEBUG

INCLUDES	=$(BORLAND)\include;$(ROOT)\generic;$(ROOT)\win;$(TCLDIR)\generic
LIBDIRS		=$(BORLAND)\lib;$(ROOT)\win

!ifndef DEBUG

# these macros cause maximum optimization and no symbols
DEBUGLDFLAGS	=
DEBUGCCFLAGS	= -v- -vi- -O2
DEBUGLDFLAGS16	= -Oc -Oi -Oa -Or
!else

# these macros enable debugging
DEBUGLDFLAGS	= -v
DEBUGCCFLAGS	= -k -Od -v
DEBUGLDFLAGS16	=
!endif

DEFINES		= _RTLDLL;USE_TCLALLOC=0;$(DEBUGDEFINES);NO_DLFCN_H=1;ITCL_NAMESPACES=1
PROJECTCCFLAGS	= $(DEBUGCCFLAGS) -w-par -w-stu

CFLAGS16_dll	= $(PROJECTCCFLAGS) -I$(INCLUDES) -D$(DEFINES) -WD -ml -c -3 -d -w

LNFLAGS_exe		= -Tpe -aa -c $(DEBUGLDFLAGS) $(BORLAND)\lib\c0w32
LNFLAGS_CONSOLE_exe	= -Tpe -ap -c $(DEBUGLDFLAGS) $(BORLAND)\lib\c0x32
LNFLAGS_dll		= -Tpd -aa -c $(DEBUGLDFLAGS) $(BORLAND)\lib\c0d32
LNFLAGS16_dll		= -Twd -c -C -A=16 $(DEBUGLDFLAGS16) $(BORLAND)\lib\c0dl.obj

LNLIBS_exe	= $(ITCLLIB) $(TCLLIBDIR)\$(TCLLIB) import32 cw32i
LNLIBS_dll	= $(TCLLIBDIR)\$(TCLLIB) import32 cw32i
LNLIBS16_dll	= import cwl

#
# Global makefile settings
#

.AUTODEPEND
.CACHEAUTODEPEND

.suffixes: .c .dll .lib .obj .exe

.path.c=$(ROOT)\win;$(ROOT)\generic
.path.obj=$(TMPDIR)
.path.dll=$(ROOT)\win;$(WINDIR);$(WINDIR)\SYSTEM32;$(WINDIR)\SYSTEM

ITCLSHOBJS = \
	$(TMPDIR)\tclAppInit.obj

ITCLOBJS = \
	$(TMPDIR)\itcl_bicmds.obj \
	$(TMPDIR)\itcl_class.obj \
	$(TMPDIR)\itcl_cmds.obj \
	$(TMPDIR)\itcl_linkage.obj \
	$(TMPDIR)\itcl_methods.obj \
	$(TMPDIR)\itcl_objects.obj \
	$(TMPDIR)\itcl_obsolete.obj \
	$(TMPDIR)\itcl_parse.obj \
	$(TMPDIR)\itcl_util.obj \
	$(TMPDIR)\dllEntryPoint.obj


DUMPEXTS = $(TCLLIBDIR)\dumpexts.exe
ITCLSH = itclsh.exe

#
# Targets
#

all:  cfgcln cfgdll $(ITCLDLL) cfgexe $(ITCLSH) cfgcln
test: $(ITCLSH)
	$(CP) $(TCLLIBDIR)\*.dll
	$(ITCLSH) <<|
		cd ../tests
		source all
|

install: all
	$(MKDIR) "$(TARGET_ROOT)"
	$(MKDIR) "$(TARGET_BIN)"
	$(MKDIR) "$(TARGET_LIB_ROOT)"
	$(MKDIR) "$(TARGET_LIB)"
	$(MKDIR) "$(TARGET_LIB_ITCL)"
	$(MKDIR) "$(TARGET_INCLUDE_ROOT)"
	$(MKDIR) "$(TARGET_INCLUDE)"
	$(MKDIR) "$(TARGET_DOC)"
	$(MKDIR) "$(TARGET_DOC_ITCL)"
	$(CP) $(TMPDIR)\$(ITCLSH) "$(TARGET_BIN)"
	$(CP) $(TMPDIR)\$(ITCLDLL) "$(TARGET_BIN)"
	$(CP) $(ROOT)\generic\itcl.h "$(TARGET_INCLUDE)"
	$(CP) $(ROOT)\library\*.* "$(TARGET_LIB_ITCL)"
	$(CP) $(ROOT)\win\*.tcl "$(TARGET_LIB_ITCL)"
	$(CP) $(ROOT)\..\html\Itcl\*.* "$(TARGET_DOC_ITCL)"

# Implicit Targets

.c.obj:
	@@$(BCC32) {$< }

.dll.lib:
	$(IMPLIB) -c $@@ $<

#.rc.res:
#	$(RC) -i$(INCLUDES) -d__WIN32__;$(DEFINES) $<

.rc.res:
	$(RC) -i$(INCLUDES) -d__WIN32__; $<


#
# Configuration file targets - these files are implicitly used by the compiler
#

cfgdll:
	@@$(CP) &&|
		-n$(TMPDIR) -I$(INCLUDES) -c -WD
		-D$(DEFINES) -3 -d -w $(PROJECTCCFLAGS)
| bcc32.cfg >NUL

cfgexe:
	@@$(CP) &&|
		-n$(TMPDIR) -I$(INCLUDES) -c -W
		-D$(DEFINES) -3 -d -w $(PROJECTCCFLAGS)
| bcc32.cfg >NUL

cfgcln:
	-@@$(RM) *.cfg

#
# Executable targets
#

$(ITCLDLL): $(ITCLOBJS) itcl.def itcl.res
	$(TLINK32) $(LNFLAGS_dll) @@&&|
		$(ITCLOBJS)
$@@
-x
$(LNLIBS_dll)
|, itcl.def, itcl.res

$(ITCLSH): $(ITCLSHOBJS) $(ITCLLIB) itclsh.res
	$(TLINK32) $(LNFLAGS_CONSOLE_exe) @@&&|
		$(ITCLSHOBJS)
$@@
-x
$(LNLIBS_exe)
|, &&|
EXETYPE WINDOWS
CODE PRELOAD MOVEABLE DISCARDABLE
DATA PRELOAD MOVEABLE MULTIPLE
|, itclsh.res


# The following rule automatically generates a tcl.def file containing
# an export entry for every public symbol in the tcl.dll library.

itcl.def: $(ITCLOBJS)
	$(DUMPEXTS) -o itcl.def $(ITCLDLL) @@&&|
		$(ITCLOBJS)
|


# debugging rules, the .dll and .exe files must be in the same
# directory as the object files for debugging purposes

$(TMPDIR)\$(ITCLDLL): $(ITCLDLL)
	$(CP) $(ITCLDLL) $(TMPDIR)

$(TMPDIR)\$(TCLDLL): $(TCLLIBDIR)\$(TCLDLL)
	$(CP) $(TCLLIBDIR)\$(TCLDLL) $(TMPDIR)

$(TMPDIR)\$(ITCLSH): $(ITCLSH)
	$(CP) $(ITCLSH) $(TMPDIR)

debug: $(TMPDIR)\$(ITCLDLL) $(TMPDIR)\$(TCLDLL)

# remove all generated files

clean:
	-@@$(RM) *.exe
	-@@$(RM) *.lib
	-@@$(RM) *.dll
	-@@$(RM) *.res
	-@@$(RM) itcl.def
	-@@$(RM) $(TMPDIR)\*.obj
	-@@$(RM) *.cfg

@


1.1.1.3
log
@imported Itcl 3.3
@
text
@d1 213
a213 212
# Borland C++ 4.52 makefile
#
# Copyright (c) 1993-1996 Lucent Technologies
# based on original from
# Copyright (c) 1995-1996 Sun Microsystems, Inc.
#
# See the file "license.terms" for information on usage and redistribution
# of this file, and for a DISCLAIMER OF ALL WARRANTIES.

!include "..\..\Makefile.bc"

#
# Project directories
#
# ROOT = top of source tree
# TMPDIR = location where .obj files should be stored during build

ROOT    	= ..
TMPDIR  	= .
TARGET_LIB_ITCL	= $(TARGET_LIB)\Itcl2.2
TARGET_DOC_ITCL	= $(TARGET_DOC)\Itcl

# uncomment the following line to compile with symbols
#DEBUG=1

# uncomment the following two lines to compile with TCL_MEM_DEBUG
#DEBUGDEFINES   =TCL_MEM_DEBUG

INCLUDES	=$(BORLAND)\include;$(ROOT)\generic;$(ROOT)\win;$(TCLDIR)\generic
LIBDIRS		=$(BORLAND)\lib;$(ROOT)\win

!ifndef DEBUG

# these macros cause maximum optimization and no symbols
DEBUGLDFLAGS	=
DEBUGCCFLAGS	= -v- -vi- -O2
DEBUGLDFLAGS16	= -Oc -Oi -Oa -Or
!else

# these macros enable debugging
DEBUGLDFLAGS	= -v
DEBUGCCFLAGS	= -k -Od -v
DEBUGLDFLAGS16	=
!endif

DEFINES		= _RTLDLL;USE_TCLALLOC=0;$(DEBUGDEFINES);NO_DLFCN_H=1;ITCL_NAMESPACES=1
PROJECTCCFLAGS	= $(DEBUGCCFLAGS) -w-par -w-stu

CFLAGS16_dll	= $(PROJECTCCFLAGS) -I$(INCLUDES) -D$(DEFINES) -WD -ml -c -3 -d -w

LNFLAGS_exe		= -Tpe -aa -c $(DEBUGLDFLAGS) $(BORLAND)\lib\c0w32
LNFLAGS_CONSOLE_exe	= -Tpe -ap -c $(DEBUGLDFLAGS) $(BORLAND)\lib\c0x32
LNFLAGS_dll		= -Tpd -aa -c $(DEBUGLDFLAGS) $(BORLAND)\lib\c0d32
LNFLAGS16_dll		= -Twd -c -C -A=16 $(DEBUGLDFLAGS16) $(BORLAND)\lib\c0dl.obj

LNLIBS_exe	= $(ITCLLIB) $(TCLLIBDIR)\$(TCLLIB) import32 cw32i
LNLIBS_dll	= $(TCLLIBDIR)\$(TCLLIB) import32 cw32i
LNLIBS16_dll	= import cwl

#
# Global makefile settings
#

.AUTODEPEND
.CACHEAUTODEPEND

.suffixes: .c .dll .lib .obj .exe

.path.c=$(ROOT)\win;$(ROOT)\generic
.path.obj=$(TMPDIR)
.path.dll=$(ROOT)\win;$(WINDIR);$(WINDIR)\SYSTEM32;$(WINDIR)\SYSTEM

ITCLSHOBJS = \
	$(TMPDIR)\tclAppInit.obj

ITCLOBJS = \
	$(TMPDIR)\itcl_bicmds.obj \
	$(TMPDIR)\itcl_class.obj \
	$(TMPDIR)\itcl_cmds.obj \
	$(TMPDIR)\itcl_linkage.obj \
	$(TMPDIR)\itcl_methods.obj \
	$(TMPDIR)\itcl_objects.obj \
	$(TMPDIR)\itcl_obsolete.obj \
	$(TMPDIR)\itcl_parse.obj \
	$(TMPDIR)\itcl_util.obj \
	$(TMPDIR)\dllEntryPoint.obj


DUMPEXTS = $(TCLLIBDIR)\dumpexts.exe
ITCLSH = itclsh.exe

#
# Targets
#

all:  cfgcln cfgdll $(ITCLDLL) cfgexe $(ITCLSH) cfgcln
test: $(ITCLSH)
	$(CP) $(TCLLIBDIR)\*.dll
	$(ITCLSH) <<|
		cd ../tests
		source all
|

install: all
	$(MKDIR) "$(TARGET_ROOT)"
	$(MKDIR) "$(TARGET_BIN)"
	$(MKDIR) "$(TARGET_LIB_ROOT)"
	$(MKDIR) "$(TARGET_LIB)"
	$(MKDIR) "$(TARGET_LIB_ITCL)"
	$(MKDIR) "$(TARGET_INCLUDE_ROOT)"
	$(MKDIR) "$(TARGET_INCLUDE)"
	$(MKDIR) "$(TARGET_DOC)"
	$(MKDIR) "$(TARGET_DOC_ITCL)"
	$(CP) $(TMPDIR)\$(ITCLSH) "$(TARGET_BIN)"
	$(CP) $(TMPDIR)\$(ITCLDLL) "$(TARGET_BIN)"
	$(CP) $(ROOT)\generic\itcl.h "$(TARGET_INCLUDE)"
	$(CP) $(ROOT)\library\*.* "$(TARGET_LIB_ITCL)"
	$(CP) $(ROOT)\win\*.tcl "$(TARGET_LIB_ITCL)"
	$(CP) $(ROOT)\..\html\Itcl\*.* "$(TARGET_DOC_ITCL)"

# Implicit Targets

.c.obj:
	@@$(BCC32) {$< }

.dll.lib:
	$(IMPLIB) -c $@@ $<

#.rc.res:
#	$(RC) -i$(INCLUDES) -d__WIN32__;$(DEFINES) $<

.rc.res:
	$(RC) -i$(INCLUDES) -d__WIN32__; $<


#
# Configuration file targets - these files are implicitly used by the compiler
#

cfgdll:
	@@$(CP) &&|
		-n$(TMPDIR) -I$(INCLUDES) -c -WD
		-D$(DEFINES) -3 -d -w $(PROJECTCCFLAGS)
| bcc32.cfg >NUL

cfgexe:
	@@$(CP) &&|
		-n$(TMPDIR) -I$(INCLUDES) -c -W
		-D$(DEFINES) -3 -d -w $(PROJECTCCFLAGS)
| bcc32.cfg >NUL

cfgcln:
	-@@$(RM) *.cfg

#
# Executable targets
#

$(ITCLDLL): $(ITCLOBJS) itcl.def itcl.res
	$(TLINK32) $(LNFLAGS_dll) @@&&|
		$(ITCLOBJS)
$@@
-x
$(LNLIBS_dll)
|, itcl.def, itcl.res

$(ITCLSH): $(ITCLSHOBJS) $(ITCLLIB) itclsh.res
	$(TLINK32) $(LNFLAGS_CONSOLE_exe) @@&&|
		$(ITCLSHOBJS)
$@@
-x
$(LNLIBS_exe)
|, &&|
EXETYPE WINDOWS
CODE PRELOAD MOVEABLE DISCARDABLE
DATA PRELOAD MOVEABLE MULTIPLE
|, itclsh.res


# The following rule automatically generates a tcl.def file containing
# an export entry for every public symbol in the tcl.dll library.

itcl.def: $(ITCLOBJS)
	$(DUMPEXTS) -o itcl.def $(ITCLDLL) @@&&|
		$(ITCLOBJS)
|


# debugging rules, the .dll and .exe files must be in the same
# directory as the object files for debugging purposes

$(TMPDIR)\$(ITCLDLL): $(ITCLDLL)
	$(CP) $(ITCLDLL) $(TMPDIR)

$(TMPDIR)\$(TCLDLL): $(TCLLIBDIR)\$(TCLDLL)
	$(CP) $(TCLLIBDIR)\$(TCLDLL) $(TMPDIR)

$(TMPDIR)\$(ITCLSH): $(ITCLSH)
	$(CP) $(ITCLSH) $(TMPDIR)

debug: $(TMPDIR)\$(ITCLDLL) $(TMPDIR)\$(TCLDLL)

# remove all generated files

clean:
	-@@$(RM) *.exe
	-@@$(RM) *.lib
	-@@$(RM) *.dll
	-@@$(RM) *.res
	-@@$(RM) itcl.def
	-@@$(RM) $(TMPDIR)\*.obj
	-@@$(RM) *.cfg
@


