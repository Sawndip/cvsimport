head	1.4;
access;
symbols
	gdb_5_3-2002-12-12-release:1.1.1.2
	tcltk840-20020924-branch:1.2.0.2
	tcltk840-20020924-branchpoint:1.2
	gdb_5_3-branch:1.1.1.2.0.4
	gdb_5_3-2002-09-04-branchpoint:1.1.1.2
	gdb_5_2_1-2002-07-23-release:1.1.1.2
	gdb_5_2-2002-04-29-release:1.1.1.2
	gdb_5_2-branch:1.1.1.2.0.2
	gdb_5_2-2002-03-03-branchpoint:1.1.1.2
	gdb_5_1_1-2002-01-24-release:1.1.1.1
	cygnus_cvs_20020108_pre:1.1.1.2
	gdb_5_1_0_1-2002-01-03-branch:1.1.1.1.0.8
	gdb_5_1_0_1-2002-01-03-branchpoint:1.1.1.1
	gdb_5_1-2001-11-21-release:1.1.1.1
	gdb_s390-2001-09-26-branch:1.1.1.1.0.6
	gdb_s390-2001-09-26-branchpoint:1.1.1.1
	ITCL_TCL_8_3:1.1.1.2
	NET:1.1.1
	gdb_5_1-2001-07-29-branch:1.1.1.1.0.4
	gdb_5_1-2001-07-29-branchpoint:1.1.1.1
	insight-precleanup-2001-01-01:1.1.1.1
	gdb_5_0-2000-05-19-release:1.1.1.1
	gdb_4_18_2-2000-05-18-release:1.1.1.1
	gdb_4_95_1-2000-05-11-snapshot:1.1.1.1
	gdb_4_95_0-2000-04-27-snapshot:1.1.1.1
	gdb_5_0-2000-04-10-branch:1.1.1.1.0.2
	gdb_5_0-2000-04-10-branchpoint:1.1.1.1
	repo-unification-2000-02-06:1.1.1.1
	insight-2000-02-04:1.1.1.1
	SNAPSHOT:1.1.1;
locks; strict;
comment	@# @;
expand	@o@;


1.4
date	2003.01.21.21.19.46;	author hunt;	state dead;
branches;
next	1.3;

1.3
date	2003.01.21.20.40.32;	author hunt;	state Exp;
branches;
next	1.2;

1.2
date	2002.09.24.18.35.38;	author kseitz;	state Exp;
branches;
next	1.1;

1.1
date	2000.02.07.00.19.46;	author jsm;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2000.02.07.00.19.46;	author jsm;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2001.09.09.19.49.07;	author irox;	state Exp;
branches;
next	1.1.1.3;

1.1.1.3
date	2002.09.25.02.47.46;	author kseitz;	state dead;
branches;
next	;


desc
@@


1.4
log
@Remove obsolete directory
@
text
@<TITLE>optionmenu - Create and manipulate a option menu widget</TITLE>
<H1>optionmenu - Create and manipulate a option menu widget</H1>

</pre><H2>SYNOPSIS</H2>
<B>optionmenu<I> <I>pathName </I>?<I>options</I>?
</pre><H2>INHERITANCE</H2>
itk::Widget &lt;- Labeledwidget &lt;- optionmenu
</pre><H2>STANDARD OPTIONS</H2>
<P>
<table cellpadding=5>
<td valign=top>
<B>activeBackground</B><br>
<B>borderWidth</B><br>
<B>foreground</B><br>
</td>
<td valign=top>
<B>activeBorderWidth</B><br>
<B>cursor</B><br>
<B>highlightColor</B><br>
</td>
<td valign=top>
<B>activeForeground</B><br>
<B>disabledForeground</B><br>
<B>highlightThickness</B><br>
</td>
<td valign=top>
<B>background</B><br>
<B>font</B><br>
<B>relief</B><br>
</td>
</table>
<P>
See the <A HREF="http://www.sco.com/Technology/tcl/man/tk_man/options.n.html"> "options" </A> manual entry for details on the standard options.
</pre><H2>INHERITED OPTIONS</H2>
<P>
<table cellpadding=5>
<td valign=top>
<B>disabledForeground</B><br>
<B>labelMargin</B><br>
<B>state</B><br>
</td>
<td valign=top>
<B>labelBitmap</B><br>
<B>labelPos</B><br>
</td>
<td valign=top>
<B>labelFont</B><br>
<B>labelText</B><br>
</td>
<td valign=top>
<B>labelImage</B><br>
<B>labelVariable</B><br>
</td>
</table>
<P>
See the "LabeledWidget" manual entry for details on the inherited options.
</pre><H2>WIDGET-SPECIFIC OPTIONS</H2>
<P>
<pre>
Name:                   <B>clickTime</B>
Class:                  <B>ClickTime</B>
Command-Line Switch:	<B>-clicktime</B>
</pre>
<UL>
Interval time, in msec, used to determine that a single mouse 
click has occurred. Used to post menu on a "quick" mouse click.
<B>Note</B>: changing this value may cause the sigle-click 
functionality to not work properly.  The default is 150 msec.
</UL>
<P>
<pre>
Name:                   <B>command</B>
Class:                  <B>Command</B>
Command-Line Switch:	<B>-command</B>
</pre>
<UL>
Specifies a Tcl command procedure to be evaluated following a  change in 
the current option menu selection.
</UL>
<P>
<pre>
Name:                   <B>cyclicOn</B>
Class:                  <B>CyclicOn</B>
Command-Line Switch:	<B>-cyclicon</B>
</pre>
<UL>
Turns on/off the 3rd mouse button capability. The value may be specified
in any of the forms acceptable to <B>Tcl_GetBoolean</B>.  This feature
allows the right mouse button to cycle through the popup 
menu list without poping it up. The right mouse button cycles through
the menu in reverse order.  The default is true.
</UL>
<P>
<pre>
Name:                   <B>popupCursor</B>
Class:                  <B>Cursor</B>
Command-Line Switch:	<B>-popupcursor</B>
</pre>
<UL>
Specifies  the mouse cursor to be used for the popup menu.  The value may 
have any of the  forms  acceptable to <B>Tk_GetCursor</B>.
</UL>
<P>
<pre>
Name:                   <B>state</B>
Class:                  <B>State</B>
Command-Line Switch:	<B>-state</B>
</pre>
<UL>
Specified one of two states for the optionmenu: <B>normal</B>, or
<B>disabled</B>.  If the optionmenu is disabled, then option menu
selection is ignored.
</UL>
<P>
<pre>
Name:                   <B>width</B>
Class:                  <B>Width</B>
Command-Line Switch:	<B>-width</B>
</pre>
<UL>
Specifies a fixed size for the menu button label in any of the forms
acceptable to \Tk_GetPixels</B></I>.  If the text
is too small to fit in the label, the text is clipped. 
Note: Normally, when a new list is created, or new items are 
added to an existing list, the menu button label is resized 
automatically.  Setting this option overrides that functionality.
</UL>
<P>
</pre><HR>

</pre><H2>DESCRIPTION</H2>
<P>
The <B>optionmenu</B> command creates an option menu widget with options 
to manage it.  An option menu displays a frame containing a label and a button.
A pop-up menu will allow for the value of the button to change.

</pre><H2>METHODS</H2>
<P>
The <B>optionmenu</B> command creates a new Tcl command whose
name is <I>pathName</I>.  This
command may be used to invoke various
operations on the widget.  It has the following general form:
<pre>
<I>pathName option </I>?<I>arg arg ...</I>?
</pre>
<I>Option</I> and the <I>arg</I>s
determine the exact behavior of the command.  
<P>
Many of the widget commands for an optionmenu take as one argument an
indicator of which entry of the option menu to operate on.  These
indicators are called <I>index</I>es and may be specified in
any of the following forms:
<DL>
<DT> <I>number</I>
</I></B>
<DD> Specifies the entry numerically, where 0 corresponds
to the top-most entry of the option menu, 1 to the entry below it, and
so on.
</DL>
<DL>
<DT> <B>end</B>
</I></B>
<DD> Indicates the bottommost entry in the menu.  If there are no
entries in the menu then zero is returned.
</DL>
<DL>
<DT> <B>select</B>
</I></B>
<DD> Returns the numerical index of the currently selected option menu entry.
If no entries exist in the menu, then -1 is returned.
</DL>
<DL>
<DT> <I>pattern</I>
</I></B>
<DD> If the index doesn't satisfy one of the above forms then this
form is used.  <I>Pattern</I> is pattern-matched against the label of
each entry in the option menu, in order from the top down, until a
matching entry is found.  The rules of <B>Tcl_StringMatch</B>
are used.
</DL>
<P>
The following widget commands are possible for optionmenu widgets:

</pre><H2>WIDGET-SPECIFIC METHODS</H2>
<DL>
<DT> <I>pathName <B>cget</B> <I>option</I>
</I></B>
<DD> Returns the current value of the configuration option given
by <I>option</I>.
<I>Option</I> may have any of the values accepted by the <B>optionmenu</B>
command.
</DL>
<DL>
<DT> <I>pathName</I> <B>configure</B> ?<I>option</I>? ?<I>value option value ...</I>?
</I></B>
<DD> Query or modify the configuration options of the widget.
If no <I>option</I> is specified, returns a list describing all of
the available options for <I>pathName</I> (see <B>Tk_ConfigureInfo</B> for
information on the format of this list).  If <I>option</I> is specified
with no <I>value</I>, then the command returns a list describing the
one named option (this list will be identical to the corresponding
sublist of the value returned if no <I>option</I> is specified).  If
one or more <I>option-value</I> pairs are specified, then the command
modifies the given widget option(s) to have the given value(s);  in
this case the command returns an empty string.
<I>Option</I> may have any of the values accepted by the <B>optionmenu</B>
command.
</DL>
<DL>
<DT> <I>pathName <B>delete <I>first</I> ?<I>last</I>?
</I></B>
<DD> Delete all of the option menu entries between <I>first</I> and
<I>last</I> inclusive.  If <I>last</I> is omitted then it defaults 
to <I>first</I>.
</DL>
<DL>
<DT> <I>pathName <B>disable <I>index</I>
</I></B>
<DD> Disable the option menu entry specified by <I>index</I>. 
Disabling a menu item will prevent the user from being able to select 
this item from the menu.  This only effects the state of the item 
in the menu, in other words, should the item be the currently 
selected item, the programmer is responsible for determining this condition 
and taking appropriate action.
</DL>
<DL>
<DT> <I>pathName <B>enable <I>index</I>
</I></B>
<DD> Enable the option menu entry specified by <I>index</I>.
Enabling a menu item allows the user to select this item from the menu.
</DL>
<DL>
<DT> <I>pathName <B>get</B> ?<I>first</I>? ?<I>last</I>?
</I></B>
<DD> If no arguments are specified, this operation returns the currently
selected option menu item.  Otherwise, it returns the name of the
option at index <I>first</I>, or a range of options between <I>first</I>
and <I>last</I>.
</DL>
<DL>
<DT> <I>pathName <B>index <I>index</I>
</I></B>
<DD> Returns the numerical index corresponding to <I>index</I>.
</DL>
<DL>
<DT> <I>pathName <B>insert <I>index string</I> ?<I>string</I>?
</I></B>
<DD> Insert an item, or list of items, into the menu at location <I>index</I>.
</DL>
<DL>
<DT> <I>pathName <B>select <I>index</I>
</I></B>
<DD> Select an item from the option menu to be displayed as the currently 
selected item.
</DL>
<DL>
<DT> <I>pathName <B>sort <I>mode</I>
</I></B>
<DD> Sort the current menu in either <B>ascending</B>, or <B>descending</B> order.
The values <B>increasing</B>, or <B>decreasing</B> are also accepted.

</DL>
</pre><H2>COMPONENTS</H2>
<P>
<pre>
Name:                   <B>menuBtn</B>
Class:                  <B>Menubutton</B>
</pre>
<UL>
The menuBtn component is the option menu button which displays the current
choice from the popup menu.  See the "menubutton" widget manual entry
for details on the menuBtn component item.
</UL>
<P>
<pre>
Name:                   <B>popupMenu</B>
Class:                  <B>Menu</B>
</pre>
<UL>
The popupMenu component is menu displayed upon selection of the menu button.
The menu contains the choices for the option menu.  See the "menu" widget 
manual entry for details on the popupMenu component item.
</UL>
</table>

</pre><H2>EXAMPLE</H2>
<pre>
 optionmenu .om -labelmargin 5 \\
     -labelon true -labelpos w -labeltext "Operating System :"

 .om insert end Unix VMS Linux OS/2 {Windows NT} DOS
 .om sort ascending
 .om select Linux

 pack .om  -padx 10 -pady 10
</pre>
</pre><H2>ACKNOWLEDGEMENTS:</H2>
Michael J. McLennan
<UL>
Borrowed some ideas (next &amp; previous) from OptionButton class. 
</UL>
<P>
Steven B. Jaggers
<UL>
Provided an initial prototype in [incr Tcl].
</UL>
<P>
Bret Schuhmacher
<UL>
Helped with popup menu functionality.
</UL>
<P>
</pre><H2>AUTHOR</H2>
<A HREF="mailto:ajahn@@spd.dsccc.com">Alfredo Jahn</A>
</pre><H2>KEYWORDS</H2>
optionmenu, widget
@


1.3
log
@touched all sources to ease next import
@
text
@@


1.2
log
@touched all sources to ease next import
@
text
@@


1.1
log
@Initial revision
@
text
@d1 2
a2 8
<HTML>
<HEAD>
<TITLE>iwidgets2.2.0 User Commands - optionmenu</TITLE>
</HEAD>
<BODY BGCOLOR="#FFFFFF">
<H1>iwidgets2.2.0 User Commands - optionmenu</H1>
<HR>
<PRE>
d4 313
a316 294
</PRE>
<H2><HR ALIGN=LEFT WIDTH=70% SIZE=3></H2><PRE>


</PRE>
<H2>NAME</H2><PRE>
     optionmenu - Create and manipulate a option menu widget


</PRE>
<H2>SYNOPSIS</H2><PRE>
     <STRONG>optionmenu</STRONG> <EM>pathName</EM> ?<EM>options</EM>?


</PRE>
<H2>INHERITANCE</H2><PRE>
     itk::Widget &lt;- Labeledwidget &lt;- optionmenu


</PRE>
<H2>STANDARD OPTIONS</H2><PRE>
     <STRONG>activeBackground</STRONG>               <STRONG>activeBorderWidthactiveForegroundbackground</STRONG>
     <STRONG>borderWidth</STRONG>     <STRONG>cursor</STRONG>         <STRONG>disabledForegroundfont</STRONG>
     <STRONG>foreground</STRONG>      <STRONG>highlightColor</STRONG> <STRONG>highlightThicknessrelief</STRONG>

     See the "options" manual entry for details on  the  standard
     options.


</PRE>
<H2>INHERITED OPTIONS</H2><PRE>
     <STRONG>labelBitmap</STRONG>     <STRONG>labelFont</STRONG>      <STRONG>labelImage</STRONG>      <STRONG>labelMargin</STRONG>
     <STRONG>labelPos</STRONG>        <STRONG>labelText</STRONG>      <STRONG>labelVariable</STRONG>

     See the "LabeledWidget" manual  entry  for  details  on  the
     inherited options.


</PRE>
<H2>WIDGET-SPECIFIC OPTIONS</H2><PRE>
     Name:           <STRONG>clickTime</STRONG>
     Class:          <STRONG>ClickTime</STRONG>
     Command-Line Switch:           <STRONG>-clicktime</STRONG>

          Interval time, in msec, used to determine that a single
          mouse  click  has  occurred.  Used  to  post  menu on a
          "quick" mouse click.  <STRONG>Note</STRONG>:  changing  this  value  may
          cause  the  sigle-click functionality to not work prop-
          erly.  The default is 150 msec.

     Name:           <STRONG>command</STRONG>
     Class:          <STRONG>Command</STRONG>
     Command-Line Switch:           <STRONG>-command</STRONG>

          Specifies a Tcl command procedure to be evaluated  fol-
          lowing a  change in the current option menu selection.

     Name:           <STRONG>cyclicOn</STRONG>
     Class:          <STRONG>CyclicOn</STRONG>
     Command-Line Switch:           <STRONG>-cyclicon</STRONG>

          Turns on/off the 3rd mouse button capability. The value
          may  be  specified  in  any  of the forms acceptable to
          <STRONG>Tcl_GetBoolean</STRONG>.  This feature allows  the  right  mouse
          button  to  cycle  through  the popup menu list without
          poping it up. The right mouse button cycles through the
          menu in reverse order.  The default is true.

     Name:           <STRONG>items</STRONG>
     Class:          <STRONG>Items</STRONG>
     Command-Line Switch:           <STRONG>-items</STRONG>

          Sepcifies the list of items  to  be  displayed  in  the
          menu.

     Name:           <STRONG>popupCursor</STRONG>
     Class:          <STRONG>Cursor</STRONG>
     Command-Line Switch:           <STRONG>-popupcursor</STRONG>

          Specifies  the mouse cursor to be used  for  the  popup
          menu.  The value may have any of the  forms  acceptable
          to <STRONG>Tk_GetCursor</STRONG>.

     Name:           <STRONG>state</STRONG>
     Class:          <STRONG>State</STRONG>
     Command-Line Switch:           <STRONG>-state</STRONG>

          Specified one of two states for the optionmenu: <STRONG>normal</STRONG>,
          or  <STRONG>disabled</STRONG>.   If  the  optionmenu  is  disabled, then
          option menu selection is ignored.

     Name:           <STRONG>width</STRONG>
     Class:          <STRONG>Width</STRONG>
     Command-Line Switch:           <STRONG>-width</STRONG>

          Specifies a fixed size for the menu button label in any
          of  the  forms acceptable to Tk_GetPixels.  If the text
          is too small to fit in the label, the text is  clipped.
          Note:  Normally,  when  a  new  list is created, or new
          items are added to an existing list,  the  menu  button
          label  is  resized  automatically.  Setting this option
          overrides that functionality.


</PRE>
<H2><HR ALIGN=LEFT WIDTH=70% SIZE=3></H2><PRE>



</PRE>
<H2>DESCRIPTION</H2><PRE>
     The <STRONG>optionmenu</STRONG> command creates an option  menu  widget  with
     options  to manage it.  An option menu displays a frame con-
     taining a label and a button.  A pop-up menu will allow  for
     the value of the button to change.



</PRE>
<H2>METHODS</H2><PRE>
     The <STRONG>optionmenu</STRONG> command creates a new Tcl command whose  name
     is  <EM>pathName</EM>.   This  command  may be used to invoke various
     operations on the widget.   It  has  the  following  general
     form:

          <EM>pathName</EM> <EM>option</EM> ?<EM>arg</EM> <EM>arg</EM> ...?

     <EM>Option</EM> and the <EM>arg</EM>s determine the exact behavior of the com-
     mand.

     Many of the widget commands for an optionmenu  take  as  one
     argument  an  indicator of which entry of the option menu to
     operate on.  These indicators are called <EM>index</EM>es and may  be
     specified in any of the following forms:

     <EM>number</EM>      Specifies  the  entry   numerically,   where   0
                 corresponds  to the top-most entry of the option
                 menu, 1 to the entry below it, and so on.

     <STRONG>end</STRONG>         Indicates the bottommost entry in the menu.   If
                 there  are  no  entries in the menu then zero is
                 returned.

     <STRONG>select</STRONG>      Returns the numerical  index  of  the  currently
                 selected option menu entry.  If no entries exist
                 in the menu, then -1 is returned.

     <EM>pattern</EM>     If the index doesn't satisfy one  of  the  above
                 forms  then  this  form  is  used.   <EM>Pattern</EM>  is
                 pattern-matched against the label of each  entry
                 in  the option menu, in order from the top down,
                 until a matching entry is found.  The  rules  of
                 <STRONG>Tcl_StringMatch</STRONG> are used.

     The following widget commands are  possible  for  optionmenu
     widgets:



</PRE>
<H2>WIDGET-SPECIFIC METHODS</H2><PRE>
     <EM>pathName</EM> <STRONG>cget</STRONG> <EM>option</EM>
          Returns the current value of the  configuration  option
          given  by  <EM>option</EM>.   <EM>Option</EM>  may have any of the values
          accepted by the <STRONG>optionmenu</STRONG> command.

     <EM>pathName</EM> <STRONG>configure</STRONG> ?<EM>option</EM>? ?<EM>value</EM> <EM>option</EM> <EM>value</EM> ...?
          Query  or  modify  the  configuration  options  of  the
          widget.   If  no  <EM>option</EM>  is  specified, returns a list
          describing all of the available  options  for  <EM>pathName</EM>
          (see  <STRONG>Tk_ConfigureInfo</STRONG> for information on the format of
          this list).  If <EM>option</EM> is specified with no <EM>value</EM>, then
          the  command  returns  a  list describing the one named
          option (this list will be identical to the  correspond-
          ing  sublist  of  the  value  returned  if no <EM>option</EM> is
          specified).  If one or more  <EM>option</EM> - <EM>value</EM>  pairs  are
          specified,  then  the command modifies the given widget
          option(s) to have the given value(s);  in this case the
          command  returns  an empty string.  <EM>Option</EM> may have any
          of the values accepted by the <STRONG>optionmenu</STRONG> command.

     <EM>pathName</EM> <STRONG>delete</STRONG> <EM>first</EM> ?<EM>last</EM>?
          Delete all of the option menu entries between <EM>first</EM> and
          <EM>last</EM> inclusive.  If <EM>last</EM> is omitted then it defaults to
          <EM>first</EM>.

     <EM>pathName</EM> <STRONG>disable</STRONG> <EM>index</EM>
          Disable the option menu entry specified by <EM>index</EM>. Disa-
          bling a menu item will prevent the user from being able
          to select this item from the menu.  This  only  effects
          the  state  of  the  item  in the menu, in other words,
          should the item be the  currently  selected  item,  the
          programmer  is  responsible for determining this condi-
          tion and taking appropriate action.

     <EM>pathName</EM> <STRONG>enable</STRONG> <EM>index</EM>
          Enable the option menu entry specified by <EM>index</EM>.   Ena-
          bling  a  menu item allows the user to select this item
          from the menu.

     <EM>pathName</EM> <STRONG>get</STRONG>
          Returns the currently selected option menu item.

     <EM>pathName</EM> <STRONG>index</STRONG> <EM>index</EM>
          Returns the numerical index corresponding to <EM>index</EM>.

     <EM>pathName</EM> <STRONG>insert</STRONG> <EM>index</EM> <EM>string</EM> ?<EM>string</EM>?
          Insert an item, or list of  items,  into  the  menu  at
          location <EM>index</EM>.

     <EM>pathName</EM> <STRONG>select</STRONG> <EM>index</EM>
          Select an item from the option menu to be displayed  as
          the currently selected item.

     <EM>pathName</EM> <STRONG>sort</STRONG> <EM>mode</EM>
          Sort the current menu in either <STRONG>ascending</STRONG>, or  <STRONG>descend-</STRONG>
          <STRONG>ing</STRONG>  order.   The  values <STRONG>increasing</STRONG>, or <STRONG>decreasing</STRONG> are
          also accepted.



</PRE>
<H2>COMPONENTS</H2><PRE>
     Name:           <STRONG>menuBtn</STRONG>
     Class:          <STRONG>Frame</STRONG>

          The menuBtn component is the option menu  button  which
          displays  the  current choice from the popup menu.  See
          the "frame" widget manual  entry  for  details  on  the
          menuBtn component item.

     Name:           <STRONG>menuLabel</STRONG>
     Class:          <STRONG>Label</STRONG>

          The menuLabel component is the label whose text is  the
          currently selected choice from the popup menu.  See the
          "label" widget manual entry for details on the  menuLa-
          bel component item.

     Name:           <STRONG>popupMenu</STRONG>
     Class:          <STRONG>Menu</STRONG>

          The popupMenu component is menu displayed  upon  selec-
          tion of the menu button.  The menu contains the choices
          for the option menu.   See  the  "menu"  widget  manual
          entry for details on the popupMenu component item.



</PRE>
<H2>EXAMPLE</H2><PRE>
           optionmenu .om -labelmargin 5 \
               -labelon true -labelpos w -labeltext "Operating System :" \
               -items {Unix VMS Linux OS/2 {Windows NT} DOS}

           .om insert end CPM {MS DOS} HP/UX
           .om sort ascending
           .om select Linux

           pack .om  -padx 10 -pady 10



</PRE>
<H2>ACKNOWLEDGEMENTS:</H2><PRE>
     Michael J. McLennan

          Borrowed some ideas (next &amp; previous) from OptionButton
          class.

     Steven B. Jaggers

          Provided an initial prototype in [incr Tcl].

     Bret Schuhmacher

          Helped with popup menu functionality.


</PRE>
<H2>AUTHOR</H2><PRE>
     Alfredo Jahn


</PRE>
<H2>KEYWORDS</H2><PRE>
     optionmenu, widget




</PRE>
</BODY>
</HTML>
@


1.1.1.1
log
@import insight-2000-02-04 snapshot (2nd try)
@
text
@@


1.1.1.2
log
@Itcl import for Tcl/Tk8.3 upgrade
@
text
@d1 8
a8 2
<TITLE>optionmenu - Create and manipulate a option menu widget</TITLE>
<H1>optionmenu - Create and manipulate a option menu widget</H1>
d10 294
a303 313
</pre><H2>SYNOPSIS</H2>
<B>optionmenu<I> <I>pathName </I>?<I>options</I>?
</pre><H2>INHERITANCE</H2>
itk::Widget &lt;- Labeledwidget &lt;- optionmenu
</pre><H2>STANDARD OPTIONS</H2>
<P>
<table cellpadding=5>
<td valign=top>
<B>activeBackground</B><br>
<B>borderWidth</B><br>
<B>foreground</B><br>
</td>
<td valign=top>
<B>activeBorderWidth</B><br>
<B>cursor</B><br>
<B>highlightColor</B><br>
</td>
<td valign=top>
<B>activeForeground</B><br>
<B>disabledForeground</B><br>
<B>highlightThickness</B><br>
</td>
<td valign=top>
<B>background</B><br>
<B>font</B><br>
<B>relief</B><br>
</td>
</table>
<P>
See the <A HREF="http://www.sco.com/Technology/tcl/man/tk_man/options.n.html"> "options" </A> manual entry for details on the standard options.
</pre><H2>INHERITED OPTIONS</H2>
<P>
<table cellpadding=5>
<td valign=top>
<B>disabledForeground</B><br>
<B>labelMargin</B><br>
<B>state</B><br>
</td>
<td valign=top>
<B>labelBitmap</B><br>
<B>labelPos</B><br>
</td>
<td valign=top>
<B>labelFont</B><br>
<B>labelText</B><br>
</td>
<td valign=top>
<B>labelImage</B><br>
<B>labelVariable</B><br>
</td>
</table>
<P>
See the "LabeledWidget" manual entry for details on the inherited options.
</pre><H2>WIDGET-SPECIFIC OPTIONS</H2>
<P>
<pre>
Name:                   <B>clickTime</B>
Class:                  <B>ClickTime</B>
Command-Line Switch:	<B>-clicktime</B>
</pre>
<UL>
Interval time, in msec, used to determine that a single mouse 
click has occurred. Used to post menu on a "quick" mouse click.
<B>Note</B>: changing this value may cause the sigle-click 
functionality to not work properly.  The default is 150 msec.
</UL>
<P>
<pre>
Name:                   <B>command</B>
Class:                  <B>Command</B>
Command-Line Switch:	<B>-command</B>
</pre>
<UL>
Specifies a Tcl command procedure to be evaluated following a  change in 
the current option menu selection.
</UL>
<P>
<pre>
Name:                   <B>cyclicOn</B>
Class:                  <B>CyclicOn</B>
Command-Line Switch:	<B>-cyclicon</B>
</pre>
<UL>
Turns on/off the 3rd mouse button capability. The value may be specified
in any of the forms acceptable to <B>Tcl_GetBoolean</B>.  This feature
allows the right mouse button to cycle through the popup 
menu list without poping it up. The right mouse button cycles through
the menu in reverse order.  The default is true.
</UL>
<P>
<pre>
Name:                   <B>popupCursor</B>
Class:                  <B>Cursor</B>
Command-Line Switch:	<B>-popupcursor</B>
</pre>
<UL>
Specifies  the mouse cursor to be used for the popup menu.  The value may 
have any of the  forms  acceptable to <B>Tk_GetCursor</B>.
</UL>
<P>
<pre>
Name:                   <B>state</B>
Class:                  <B>State</B>
Command-Line Switch:	<B>-state</B>
</pre>
<UL>
Specified one of two states for the optionmenu: <B>normal</B>, or
<B>disabled</B>.  If the optionmenu is disabled, then option menu
selection is ignored.
</UL>
<P>
<pre>
Name:                   <B>width</B>
Class:                  <B>Width</B>
Command-Line Switch:	<B>-width</B>
</pre>
<UL>
Specifies a fixed size for the menu button label in any of the forms
acceptable to \Tk_GetPixels</B></I>.  If the text
is too small to fit in the label, the text is clipped. 
Note: Normally, when a new list is created, or new items are 
added to an existing list, the menu button label is resized 
automatically.  Setting this option overrides that functionality.
</UL>
<P>
</pre><HR>

</pre><H2>DESCRIPTION</H2>
<P>
The <B>optionmenu</B> command creates an option menu widget with options 
to manage it.  An option menu displays a frame containing a label and a button.
A pop-up menu will allow for the value of the button to change.

</pre><H2>METHODS</H2>
<P>
The <B>optionmenu</B> command creates a new Tcl command whose
name is <I>pathName</I>.  This
command may be used to invoke various
operations on the widget.  It has the following general form:
<pre>
<I>pathName option </I>?<I>arg arg ...</I>?
</pre>
<I>Option</I> and the <I>arg</I>s
determine the exact behavior of the command.  
<P>
Many of the widget commands for an optionmenu take as one argument an
indicator of which entry of the option menu to operate on.  These
indicators are called <I>index</I>es and may be specified in
any of the following forms:
<DL>
<DT> <I>number</I>
</I></B>
<DD> Specifies the entry numerically, where 0 corresponds
to the top-most entry of the option menu, 1 to the entry below it, and
so on.
</DL>
<DL>
<DT> <B>end</B>
</I></B>
<DD> Indicates the bottommost entry in the menu.  If there are no
entries in the menu then zero is returned.
</DL>
<DL>
<DT> <B>select</B>
</I></B>
<DD> Returns the numerical index of the currently selected option menu entry.
If no entries exist in the menu, then -1 is returned.
</DL>
<DL>
<DT> <I>pattern</I>
</I></B>
<DD> If the index doesn't satisfy one of the above forms then this
form is used.  <I>Pattern</I> is pattern-matched against the label of
each entry in the option menu, in order from the top down, until a
matching entry is found.  The rules of <B>Tcl_StringMatch</B>
are used.
</DL>
<P>
The following widget commands are possible for optionmenu widgets:

</pre><H2>WIDGET-SPECIFIC METHODS</H2>
<DL>
<DT> <I>pathName <B>cget</B> <I>option</I>
</I></B>
<DD> Returns the current value of the configuration option given
by <I>option</I>.
<I>Option</I> may have any of the values accepted by the <B>optionmenu</B>
command.
</DL>
<DL>
<DT> <I>pathName</I> <B>configure</B> ?<I>option</I>? ?<I>value option value ...</I>?
</I></B>
<DD> Query or modify the configuration options of the widget.
If no <I>option</I> is specified, returns a list describing all of
the available options for <I>pathName</I> (see <B>Tk_ConfigureInfo</B> for
information on the format of this list).  If <I>option</I> is specified
with no <I>value</I>, then the command returns a list describing the
one named option (this list will be identical to the corresponding
sublist of the value returned if no <I>option</I> is specified).  If
one or more <I>option-value</I> pairs are specified, then the command
modifies the given widget option(s) to have the given value(s);  in
this case the command returns an empty string.
<I>Option</I> may have any of the values accepted by the <B>optionmenu</B>
command.
</DL>
<DL>
<DT> <I>pathName <B>delete <I>first</I> ?<I>last</I>?
</I></B>
<DD> Delete all of the option menu entries between <I>first</I> and
<I>last</I> inclusive.  If <I>last</I> is omitted then it defaults 
to <I>first</I>.
</DL>
<DL>
<DT> <I>pathName <B>disable <I>index</I>
</I></B>
<DD> Disable the option menu entry specified by <I>index</I>. 
Disabling a menu item will prevent the user from being able to select 
this item from the menu.  This only effects the state of the item 
in the menu, in other words, should the item be the currently 
selected item, the programmer is responsible for determining this condition 
and taking appropriate action.
</DL>
<DL>
<DT> <I>pathName <B>enable <I>index</I>
</I></B>
<DD> Enable the option menu entry specified by <I>index</I>.
Enabling a menu item allows the user to select this item from the menu.
</DL>
<DL>
<DT> <I>pathName <B>get</B> ?<I>first</I>? ?<I>last</I>?
</I></B>
<DD> If no arguments are specified, this operation returns the currently
selected option menu item.  Otherwise, it returns the name of the
option at index <I>first</I>, or a range of options between <I>first</I>
and <I>last</I>.
</DL>
<DL>
<DT> <I>pathName <B>index <I>index</I>
</I></B>
<DD> Returns the numerical index corresponding to <I>index</I>.
</DL>
<DL>
<DT> <I>pathName <B>insert <I>index string</I> ?<I>string</I>?
</I></B>
<DD> Insert an item, or list of items, into the menu at location <I>index</I>.
</DL>
<DL>
<DT> <I>pathName <B>select <I>index</I>
</I></B>
<DD> Select an item from the option menu to be displayed as the currently 
selected item.
</DL>
<DL>
<DT> <I>pathName <B>sort <I>mode</I>
</I></B>
<DD> Sort the current menu in either <B>ascending</B>, or <B>descending</B> order.
The values <B>increasing</B>, or <B>decreasing</B> are also accepted.

</DL>
</pre><H2>COMPONENTS</H2>
<P>
<pre>
Name:                   <B>menuBtn</B>
Class:                  <B>Menubutton</B>
</pre>
<UL>
The menuBtn component is the option menu button which displays the current
choice from the popup menu.  See the "menubutton" widget manual entry
for details on the menuBtn component item.
</UL>
<P>
<pre>
Name:                   <B>popupMenu</B>
Class:                  <B>Menu</B>
</pre>
<UL>
The popupMenu component is menu displayed upon selection of the menu button.
The menu contains the choices for the option menu.  See the "menu" widget 
manual entry for details on the popupMenu component item.
</UL>
</table>

</pre><H2>EXAMPLE</H2>
<pre>
 optionmenu .om -labelmargin 5 \\
     -labelon true -labelpos w -labeltext "Operating System :"

 .om insert end Unix VMS Linux OS/2 {Windows NT} DOS
 .om sort ascending
 .om select Linux

 pack .om  -padx 10 -pady 10
</pre>
</pre><H2>ACKNOWLEDGEMENTS:</H2>
Michael J. McLennan
<UL>
Borrowed some ideas (next &amp; previous) from OptionButton class. 
</UL>
<P>
Steven B. Jaggers
<UL>
Provided an initial prototype in [incr Tcl].
</UL>
<P>
Bret Schuhmacher
<UL>
Helped with popup menu functionality.
</UL>
<P>
</pre><H2>AUTHOR</H2>
<A HREF="mailto:ajahn@@spd.dsccc.com">Alfredo Jahn</A>
</pre><H2>KEYWORDS</H2>
optionmenu, widget
@


1.1.1.3
log
@Remove local modifications and files no longer in itcl 3.2.1
@
text
@@


