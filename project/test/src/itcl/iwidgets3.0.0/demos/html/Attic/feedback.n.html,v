head	1.4;
access;
symbols
	gdb_5_3-2002-12-12-release:1.1.1.2
	tcltk840-20020924-branch:1.2.0.2
	tcltk840-20020924-branchpoint:1.2
	gdb_5_3-branch:1.1.1.2.0.4
	gdb_5_3-2002-09-04-branchpoint:1.1.1.2
	gdb_5_2_1-2002-07-23-release:1.1.1.2
	gdb_5_2-2002-04-29-release:1.1.1.2
	gdb_5_2-branch:1.1.1.2.0.2
	gdb_5_2-2002-03-03-branchpoint:1.1.1.2
	gdb_5_1_1-2002-01-24-release:1.1.1.1
	cygnus_cvs_20020108_pre:1.1.1.2
	gdb_5_1_0_1-2002-01-03-branch:1.1.1.1.0.8
	gdb_5_1_0_1-2002-01-03-branchpoint:1.1.1.1
	gdb_5_1-2001-11-21-release:1.1.1.1
	gdb_s390-2001-09-26-branch:1.1.1.1.0.6
	gdb_s390-2001-09-26-branchpoint:1.1.1.1
	ITCL_TCL_8_3:1.1.1.2
	NET:1.1.1
	gdb_5_1-2001-07-29-branch:1.1.1.1.0.4
	gdb_5_1-2001-07-29-branchpoint:1.1.1.1
	insight-precleanup-2001-01-01:1.1.1.1
	gdb_5_0-2000-05-19-release:1.1.1.1
	gdb_4_18_2-2000-05-18-release:1.1.1.1
	gdb_4_95_1-2000-05-11-snapshot:1.1.1.1
	gdb_4_95_0-2000-04-27-snapshot:1.1.1.1
	gdb_5_0-2000-04-10-branch:1.1.1.1.0.2
	gdb_5_0-2000-04-10-branchpoint:1.1.1.1
	repo-unification-2000-02-06:1.1.1.1
	insight-2000-02-04:1.1.1.1
	SNAPSHOT:1.1.1;
locks; strict;
comment	@# @;
expand	@o@;


1.4
date	2003.01.21.21.19.46;	author hunt;	state dead;
branches;
next	1.3;

1.3
date	2003.01.21.20.40.32;	author hunt;	state Exp;
branches;
next	1.2;

1.2
date	2002.09.24.18.35.38;	author kseitz;	state Exp;
branches;
next	1.1;

1.1
date	2000.02.07.00.19.46;	author jsm;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2000.02.07.00.19.46;	author jsm;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2001.09.09.19.49.07;	author irox;	state Exp;
branches;
next	1.1.1.3;

1.1.1.3
date	2002.09.25.02.47.46;	author kseitz;	state dead;
branches;
next	;


desc
@@


1.4
log
@Remove obsolete directory
@
text
@<TITLE>feedback - Create and manipulate a feedback widget to display feedback on</TITLE>
<H1>feedback - Create and manipulate a feedback widget to display feedback on</H1>

the current status of an ongoing operation to the user.
</pre><H2>SYNOPSIS</H2>
<B>feedback<I> <I>pathName </I>?<I>options</I>?
</pre><H2>INHERITANCE</H2>
itk::Widget &lt;- Labeledwidget &lt;- Feedback
</pre><H2>STANDARD OPTIONS</H2>
<P>
<table cellpadding=5>
<td valign=top>
<B>background</B><br>
<B>highlightThickness</B><br>
</td>
<td valign=top>
<B>cursor</B><br>
</td>
<td valign=top>
<B>foreground</B><br>
</td>
<td valign=top>
<B>highlightColor</B><br>
</td>
</table>
<P>
See the <A HREF="http://www.sco.com/Technology/tcl/man/tk_man/options.n.html"> "options" </A> manual entry for details on the standard options.
</pre><H2>INHERITED OPTIONS</H2>
<P>
<table cellpadding=5>
<td valign=top>
<B>labelBitmap</B><br>
<B>labelPos</B><br>
</td>
<td valign=top>
<B>labelFont</B><br>
<B>labelText</B><br>
</td>
<td valign=top>
<B>labelImage</B><br>
<B>labelVariable</B><br>
</td>
<td valign=top>
<B>labelMargin</B><br>
</td>
</table>
<P>
See the <A HREF="labeledwidget.n.html"> "labeledwidget" </A> class manual entry for details on the inherited options.
</pre><H2>WIDGET-SPECIFIC OPTIONS</H2>
<P>
<pre>
Name:                   <B>barcolor</B>
Class:                  <B>BarColor</B>
Command-Line Switch:	<B>-barcolor</B>
</pre>
<UL>
Specifies the color of the status bar, in any of the forms
acceptable to <B>Tk_GetColor</B>.  The default is DodgerBlue.
</UL>
<P>
<pre>
Name:                   <B>barheight</B>
Class:                  <B>BarHeight</B>
Command-Line Switch:	<B>-barheight</B>
</pre>
<UL>
Specifies the height of the status bar, in any of the forms
acceptable to <B>Tk_GetPixels</B>. The default is 20.
</UL>
<P>
<pre>
Name:                   <B>troughColor</B>
Class:                  <B>TroughColor</B>
Command-Line Switch:	<B>-troughcolor</B>
</pre>
<UL>
Specifies the color of the frame in which the status bar sits,
in any of the forms acceptable to <B>Tk_GetColor</B>.  The default is white.
</UL>
<P>
<pre>
Name:                   <B>steps</B>
Class:                  <B>Steps</B>
Command-Line Switch:	<B>-steps</B>
</pre>
<UL>
Specifies the total number of steps for the status bar. The default is 10.
</UL>
<P>

</pre><H2>DESCRIPTION</H2>
<P>
The <B>feedback</B> command creates a widget to display feedback on
the current status of an ongoing operation to the user. Display is given as
a percentage and as a thermometer type bar. Options exist for adding a label
and controlling its position.

</pre><H2>METHODS</H2>
<P>
The <B>feedback</B> command creates a new Tcl command whose
name is <I>pathName</I>.  This command may be used to invoke various
operations on the widget.  It has the following general form:
<pre>
<I>pathName option </I>?<I>arg arg ...</I>?
</pre>
<I>Option</I> and the <I>arg</I>s
determine the exact behavior of the command.  The following
commands are possible for scrolledtext widgets:

</pre><H2>WIDGET-SPECIFIC METHODS</H2>
<DL>
<DT> <I>pathName <B>cget</B> <I>option</I>
</I></B>
<DD> Returns the current value of the configuration option given
by <I>option</I>.
<I>Option</I> may have any of the values accepted by the <B>scrolledhtml</B>
command.
</DL>
<DL>
<DT> <I>pathName</I> <B>configure</B> ?<I>option</I>? ?<I>value option value ...</I>?
</I></B>
<DD> Query or modify the configuration options of the widget.
If no <I>option</I> is specified, returns a list describing all of
the available options for <I>pathName</I> (see <B>Tk_ConfigureInfo</B> for
information on the format of this list).  If <I>option</I> is specified
with no <I>value</I>, then the command returns a list describing the
one named option (this list will be identical to the corresponding
sublist of the value returned if no <I>option</I> is specified).  If
one or more <I>option-value</I> pairs are specified, then the command
modifies the given widget option(s) to have the given value(s);  in
this case the command returns an empty string.
<I>Option</I> may have any of the values accepted by the <B>feedback</B>
command.
</DL>
<DL>
<DT> <I>pathName</I> <B>reset</B>
</I></B>
<DD> Reset the current number of steps completed to 0, and configures the
percentage complete label text to 0%
</DL>
<DL>
<DT> <I>pathName</I> <B>step</B> ?<I>inc</I>?
</I></B>
<DD> Increase the current number of steps completed by the amount specified
by <I>inc</I>. <I>Inc</I> defaults to 1.

</DL>
</pre><H2>EXAMPLE</H2>
<pre>
 feedback .fb -labeltext "Status" -steps 20
 pack .fb -padx 10 -pady 10 -fill both -expand yes

 for {set i 0} {$i &lt; 20} {incr i} {
     .fb step
     after 500
 }
</pre>
</pre><H2>ACKNOWLEDGEMENTS</H2>
Sam Shen
<UL>
This code is based largely on his feedback.tcl code from tk inspect. The 
original feedback code is copyright 1995 Lawrence Berkeley Laboratory.
</UL>
<P>
</pre><H2>AUTHOR</H2>
Kris Raney
</pre><H2>KEYWORDS</H2>
feedback, widget
@


1.3
log
@touched all sources to ease next import
@
text
@@


1.2
log
@touched all sources to ease next import
@
text
@@


1.1
log
@Initial revision
@
text
@d1 2
a2 8
<HTML>
<HEAD>
<TITLE>iwidgets2.2.0 User Commands - feedback</TITLE>
</HEAD>
<BODY BGCOLOR="#FFFFFF">
<H1>iwidgets2.2.0 User Commands - feedback</H1>
<HR>
<PRE>
d4 165
a168 186
</PRE>
<H2><HR ALIGN=LEFT WIDTH=70% SIZE=3></H2><PRE>


</PRE>
<H2>NAME</H2><PRE>
     feedback -  Create  and  manipulate  a  feedback  widget  to
     display  feedback on the current status of an ongoing opera-
     tion to the user.


</PRE>
<H2>SYNOPSIS</H2><PRE>
     <STRONG>feedback</STRONG> <EM>pathName</EM> ?<EM>options</EM>?


</PRE>
<H2>INHERITANCE</H2><PRE>
     itk::Widget &lt;- Labeledwidget &lt;- Feedback


</PRE>
<H2>STANDARD OPTIONS</H2><PRE>
     <STRONG>background</STRONG>      <STRONG>borderWidth</STRONG>    <STRONG>cursor</STRONG>          <STRONG>foreground</STRONG>
     <STRONG>highlightColor</STRONG>  <STRONG>highlightThickness</STRONG>             <STRONG>relief</STRONG>

     See the "options" manual entry for details on  the  standard
     options.


</PRE>
<H2>INHERITED OPTIONS</H2><PRE>
     <STRONG>labelBitmap</STRONG>     <STRONG>labelFont</STRONG>      <STRONG>labelImage</STRONG>      <STRONG>labelMargin</STRONG>
     <STRONG>labelPos</STRONG>        <STRONG>labelText</STRONG>      <STRONG>labelVariable</STRONG>

     See the "labeledwidget" class manual entry  for  details  on
     the inherited options.


</PRE>
<H2>WIDGET-SPECIFIC OPTIONS</H2><PRE>
     Name:           <STRONG>barColor</STRONG>
     Class:          <STRONG>BarColor</STRONG>
     Command-Line Switch:           <STRONG>-barcolor</STRONG>

          Specifies the color of the status bar, in  any  of  the
          forms acceptable to <STRONG>Tk_GetColor</STRONG>.

     Name:           <STRONG>barHeight</STRONG>
     Class:          <STRONG>BarHeight</STRONG>
     Command-Line Switch:           <STRONG>-barheight</STRONG>

          Specifies the height of the status bar, in any  of  the
          forms acceptable to <STRONG>Tk_GetPixels</STRONG>.

     Name:           <STRONG>barWidth</STRONG>
     Class:          <STRONG>BarWidth</STRONG>
     Command-Line Switch:           <STRONG>-barwidth</STRONG>

          Specifies the total  width  of  the  status  bar  (when
          full,) in any of the forms acceptable to <STRONG>Tk_GetPixels</STRONG>.

     Name:           <STRONG>elementBorderWidth</STRONG>
     Class:          <STRONG>BorderWidth</STRONG>
     Command-Line Switch:           <STRONG>-elementborderwidth</STRONG>
          Sets the width of the border around the status bar,  in
          any  of the forms acceptable to <STRONG>Tk_GetPixels</STRONG>.  If it is
          set to zero, the status bar has no border.

     Name:           <STRONG>steps</STRONG>
     Class:          <STRONG>Steps</STRONG>
     Command-Line Switch:           <STRONG>-steps</STRONG>

          Specifies the total number of steps for the status bar.
          The default is 10.


</PRE>
<H2>DESCRIPTION</H2><PRE>
     The <STRONG>feedback</STRONG> command creates a feedback  widget  to  display
     feedback  on  the  current status of an ongoing operation to
     the user. Display is given as a percentage and as a thermom-
     eter type bar. Options exist for adding a label and control-
     ling its position.



</PRE>
<H2>METHODS</H2><PRE>
     The <STRONG>feedback</STRONG> command creates a new Tcl command whose name is
     <EM>pathName</EM>.  This command may be used to invoke various opera-
     tions on the widget.  It has the following general form:

          <EM>pathName</EM> <EM>option</EM> ?<EM>arg</EM> <EM>arg</EM> ...?

     <EM>Option</EM> and the <EM>arg</EM>s determine the exact behavior of the com-
     mand.   The following commands are possible for scrolledtext
     widgets:



</PRE>
<H2>WIDGET-SPECIFIC METHODS</H2><PRE>
     <EM>pathName</EM> <STRONG>cget</STRONG> <EM>option</EM>
          Returns the current value of the  configuration  option
          given  by  <EM>option</EM>.   <EM>Option</EM>  may have any of the values
          accepted by the <STRONG>scrolledhtml</STRONG> command.

     <EM>pathName</EM> <STRONG>configure</STRONG> ?<EM>option</EM>? ?<EM>value</EM> <EM>option</EM> <EM>value</EM> ...?
          Query  or  modify  the  configuration  options  of  the
          widget.   If  no  <EM>option</EM>  is  specified, returns a list
          describing all of the available  options  for  <EM>pathName</EM>
          (see  <STRONG>Tk_ConfigureInfo</STRONG> for information on the format of
          this list).  If <EM>option</EM> is specified with no <EM>value</EM>, then
          the  command  returns  a  list describing the one named
          option (this list will be identical to the  correspond-
          ing  sublist  of  the  value  returned  if no <EM>option</EM> is
          specified).  If one or more  <EM>option</EM> - <EM>value</EM>  pairs  are
          specified,  then  the command modifies the given widget
          option(s) to have the given value(s);  in this case the
          command  returns  an empty string.  <EM>Option</EM> may have any
          of the values accepted by the <STRONG>feedback</STRONG> command.

     <EM>pathName</EM> <STRONG>reset</STRONG>
          Reset status to 0%

     <EM>pathName</EM> <STRONG>step</STRONG> ?<EM>inc</EM>?
          Increase the current number of steps completed by  <EM>inc</EM>.
          <EM>Inc</EM> defaults to 1.



</PRE>
<H2>EXAMPLE</H2><PRE>
           feedback .fb -labeltext "Status" -steps 20
           pack .fb -padx 10 -pady 10 -fill both -expand yes

           for {set i 0} {$i &lt; 20} {incr i} {
               .fb step
               after 500
           }



</PRE>
<H2>ACKNOWLEDGEMENTS</H2><PRE>
     Sam Shen

          This code is based largely  on  his  feedback.tcl  code
          from  tk  inspect.  The original feedback code is copy-
          right 1995 Lawrence Berkeley Laboratory.


</PRE>
<H2>AUTHOR</H2><PRE>
     Kris Raney


</PRE>
<H2>KEYWORDS</H2><PRE>
     feedback, widget






















</PRE>
</BODY>
</HTML>
@


1.1.1.1
log
@import insight-2000-02-04 snapshot (2nd try)
@
text
@@


1.1.1.2
log
@Itcl import for Tcl/Tk8.3 upgrade
@
text
@d1 8
a8 2
<TITLE>feedback - Create and manipulate a feedback widget to display feedback on</TITLE>
<H1>feedback - Create and manipulate a feedback widget to display feedback on</H1>
d10 186
a195 165
the current status of an ongoing operation to the user.
</pre><H2>SYNOPSIS</H2>
<B>feedback<I> <I>pathName </I>?<I>options</I>?
</pre><H2>INHERITANCE</H2>
itk::Widget &lt;- Labeledwidget &lt;- Feedback
</pre><H2>STANDARD OPTIONS</H2>
<P>
<table cellpadding=5>
<td valign=top>
<B>background</B><br>
<B>highlightThickness</B><br>
</td>
<td valign=top>
<B>cursor</B><br>
</td>
<td valign=top>
<B>foreground</B><br>
</td>
<td valign=top>
<B>highlightColor</B><br>
</td>
</table>
<P>
See the <A HREF="http://www.sco.com/Technology/tcl/man/tk_man/options.n.html"> "options" </A> manual entry for details on the standard options.
</pre><H2>INHERITED OPTIONS</H2>
<P>
<table cellpadding=5>
<td valign=top>
<B>labelBitmap</B><br>
<B>labelPos</B><br>
</td>
<td valign=top>
<B>labelFont</B><br>
<B>labelText</B><br>
</td>
<td valign=top>
<B>labelImage</B><br>
<B>labelVariable</B><br>
</td>
<td valign=top>
<B>labelMargin</B><br>
</td>
</table>
<P>
See the <A HREF="labeledwidget.n.html"> "labeledwidget" </A> class manual entry for details on the inherited options.
</pre><H2>WIDGET-SPECIFIC OPTIONS</H2>
<P>
<pre>
Name:                   <B>barcolor</B>
Class:                  <B>BarColor</B>
Command-Line Switch:	<B>-barcolor</B>
</pre>
<UL>
Specifies the color of the status bar, in any of the forms
acceptable to <B>Tk_GetColor</B>.  The default is DodgerBlue.
</UL>
<P>
<pre>
Name:                   <B>barheight</B>
Class:                  <B>BarHeight</B>
Command-Line Switch:	<B>-barheight</B>
</pre>
<UL>
Specifies the height of the status bar, in any of the forms
acceptable to <B>Tk_GetPixels</B>. The default is 20.
</UL>
<P>
<pre>
Name:                   <B>troughColor</B>
Class:                  <B>TroughColor</B>
Command-Line Switch:	<B>-troughcolor</B>
</pre>
<UL>
Specifies the color of the frame in which the status bar sits,
in any of the forms acceptable to <B>Tk_GetColor</B>.  The default is white.
</UL>
<P>
<pre>
Name:                   <B>steps</B>
Class:                  <B>Steps</B>
Command-Line Switch:	<B>-steps</B>
</pre>
<UL>
Specifies the total number of steps for the status bar. The default is 10.
</UL>
<P>

</pre><H2>DESCRIPTION</H2>
<P>
The <B>feedback</B> command creates a widget to display feedback on
the current status of an ongoing operation to the user. Display is given as
a percentage and as a thermometer type bar. Options exist for adding a label
and controlling its position.

</pre><H2>METHODS</H2>
<P>
The <B>feedback</B> command creates a new Tcl command whose
name is <I>pathName</I>.  This command may be used to invoke various
operations on the widget.  It has the following general form:
<pre>
<I>pathName option </I>?<I>arg arg ...</I>?
</pre>
<I>Option</I> and the <I>arg</I>s
determine the exact behavior of the command.  The following
commands are possible for scrolledtext widgets:

</pre><H2>WIDGET-SPECIFIC METHODS</H2>
<DL>
<DT> <I>pathName <B>cget</B> <I>option</I>
</I></B>
<DD> Returns the current value of the configuration option given
by <I>option</I>.
<I>Option</I> may have any of the values accepted by the <B>scrolledhtml</B>
command.
</DL>
<DL>
<DT> <I>pathName</I> <B>configure</B> ?<I>option</I>? ?<I>value option value ...</I>?
</I></B>
<DD> Query or modify the configuration options of the widget.
If no <I>option</I> is specified, returns a list describing all of
the available options for <I>pathName</I> (see <B>Tk_ConfigureInfo</B> for
information on the format of this list).  If <I>option</I> is specified
with no <I>value</I>, then the command returns a list describing the
one named option (this list will be identical to the corresponding
sublist of the value returned if no <I>option</I> is specified).  If
one or more <I>option-value</I> pairs are specified, then the command
modifies the given widget option(s) to have the given value(s);  in
this case the command returns an empty string.
<I>Option</I> may have any of the values accepted by the <B>feedback</B>
command.
</DL>
<DL>
<DT> <I>pathName</I> <B>reset</B>
</I></B>
<DD> Reset the current number of steps completed to 0, and configures the
percentage complete label text to 0%
</DL>
<DL>
<DT> <I>pathName</I> <B>step</B> ?<I>inc</I>?
</I></B>
<DD> Increase the current number of steps completed by the amount specified
by <I>inc</I>. <I>Inc</I> defaults to 1.

</DL>
</pre><H2>EXAMPLE</H2>
<pre>
 feedback .fb -labeltext "Status" -steps 20
 pack .fb -padx 10 -pady 10 -fill both -expand yes

 for {set i 0} {$i &lt; 20} {incr i} {
     .fb step
     after 500
 }
</pre>
</pre><H2>ACKNOWLEDGEMENTS</H2>
Sam Shen
<UL>
This code is based largely on his feedback.tcl code from tk inspect. The 
original feedback code is copyright 1995 Lawrence Berkeley Laboratory.
</UL>
<P>
</pre><H2>AUTHOR</H2>
Kris Raney
</pre><H2>KEYWORDS</H2>
feedback, widget
@


1.1.1.3
log
@Remove local modifications and files no longer in itcl 3.2.1
@
text
@@


