head	1.4;
access;
symbols
	gdb_5_3-2002-12-12-release:1.1.1.2
	tcltk840-20020924-branch:1.2.0.2
	tcltk840-20020924-branchpoint:1.2
	gdb_5_3-branch:1.1.1.2.0.4
	gdb_5_3-2002-09-04-branchpoint:1.1.1.2
	gdb_5_2_1-2002-07-23-release:1.1.1.2
	gdb_5_2-2002-04-29-release:1.1.1.2
	gdb_5_2-branch:1.1.1.2.0.2
	gdb_5_2-2002-03-03-branchpoint:1.1.1.2
	gdb_5_1_1-2002-01-24-release:1.1.1.1
	cygnus_cvs_20020108_pre:1.1.1.2
	gdb_5_1_0_1-2002-01-03-branch:1.1.1.1.0.8
	gdb_5_1_0_1-2002-01-03-branchpoint:1.1.1.1
	gdb_5_1-2001-11-21-release:1.1.1.1
	gdb_s390-2001-09-26-branch:1.1.1.1.0.6
	gdb_s390-2001-09-26-branchpoint:1.1.1.1
	ITCL_TCL_8_3:1.1.1.2
	NET:1.1.1
	gdb_5_1-2001-07-29-branch:1.1.1.1.0.4
	gdb_5_1-2001-07-29-branchpoint:1.1.1.1
	insight-precleanup-2001-01-01:1.1.1.1
	gdb_5_0-2000-05-19-release:1.1.1.1
	gdb_4_18_2-2000-05-18-release:1.1.1.1
	gdb_4_95_1-2000-05-11-snapshot:1.1.1.1
	gdb_4_95_0-2000-04-27-snapshot:1.1.1.1
	gdb_5_0-2000-04-10-branch:1.1.1.1.0.2
	gdb_5_0-2000-04-10-branchpoint:1.1.1.1
	repo-unification-2000-02-06:1.1.1.1
	insight-2000-02-04:1.1.1.1
	SNAPSHOT:1.1.1;
locks; strict;
comment	@# @;
expand	@o@;


1.4
date	2003.01.21.21.19.46;	author hunt;	state dead;
branches;
next	1.3;

1.3
date	2003.01.21.20.40.32;	author hunt;	state Exp;
branches;
next	1.2;

1.2
date	2002.09.24.18.35.38;	author kseitz;	state Exp;
branches;
next	1.1;

1.1
date	2000.02.07.00.19.46;	author jsm;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2000.02.07.00.19.46;	author jsm;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2001.09.09.19.49.06;	author irox;	state Exp;
branches;
next	1.1.1.3;

1.1.1.3
date	2002.09.25.02.47.46;	author kseitz;	state dead;
branches;
next	;


desc
@@


1.4
log
@Remove obsolete directory
@
text
@<TITLE>buttonbox - Create and manipulate a manager widget for buttons</TITLE>
<H1>buttonbox - Create and manipulate a manager widget for buttons</H1>

</pre><H2>SYNOPSIS</H2>
<B>buttonbox<I> <I>pathName </I>?<I>options</I>?
</pre><H2>INHERITANCE</H2>
itk::Widget &lt;- buttonbox
</pre><H2>STANDARD OPTIONS</H2>
<P>
<table cellpadding=5>
<td valign=top>
<B>background</B><br>
</td>
<td valign=top>
<B>cursor</B><br>
</td>
<td valign=top>
</td>
<td valign=top>
</td>
</table>
<P>
See the <A HREF="http://www.sco.com/Technology/tcl/man/tk_man/options.n.html"> "options" </A> manual entry for details on the standard options.
</pre><H2>WIDGET-SPECIFIC OPTIONS</H2>
<P>
<pre>
Name:                   <B>orient</B>
Class:                  <B>Orient</B>
Command-Line Switch:	<B>-orient</B>
</pre>
<UL>
Orientation of the button box: <B>horizontal</B> or <B>vertical</B>.  The default
is horizontal.
</UL>
<P>
<pre>
Name:                   <B>padX</B>
Class:                  <B>PadX</B>
Command-Line Switch:	<B>-padx</B>
</pre>
<UL>
Specifies a non-negative padding distance to leave between the button group and
the outer edge of the button box in the x direction.  The value may be 
given in any of the forms acceptable to <B>Tk_GetPixels</B>.  The default 
is 5 pixels.
</UL>
<P>
<pre>
Name:                   <B>padY</B>
Class:                  <B>PadY</B>
Command-Line Switch:	<B>-pady</B>
</pre>
<UL>
Specifies a non-negative padding distance to leave between the button group and
the outer edge of the button box in the y direction.  The value may be given 
in any of the forms acceptable to <B>Tk_GetPixels</B>.  The default is 5 pixels.
</UL>
<P>
</pre><HR>

</pre><H2>DESCRIPTION</H2>
<P>
The <B>buttonbox</B> command creates a manager widget for controlling
buttons.  The button box also supports the display and invocation
of a default button.  The button box can be configured either horizontally
or vertically.  

</pre><H2>METHODS</H2>
<P>
The <B>buttonbox</B> command creates a new Tcl command whose
name is <I>pathName</I>.  This
command may be used to invoke various
operations on the widget.  It has the following general form:
<pre>
<I>pathName option </I>?<I>arg arg ...</I>?
</pre>
<I>Option</I> and the <I>arg</I>s
determine the exact behavior of the command. 
<P>
Many of the widget commands for the buttonbox take as one argument an
indicator of which button of the button box to operate on.  These 
indicators are called <I>indexes</I> and allow reference and manipulation 
of buttons regardless of their current map state.  buttonbox indexes 
may be specified in any of the following forms:
<DL>
<DT> <I>number</I>
</I></B>
<DD> Specifies the button numerically, where 0 corresponds to the 
left/top-most button of the button box. 
</DL>
<DL>
<DT> <B>end</B>
</I></B>
<DD> Indicates the right/bottom-most button of the button box.
</DL>
<DL>
<DT> <B>default</B>
</I></B>
<DD> Indicates the current default button of the button box.  This is the
button with the default ring displayed.
</DL>
<DL>
<DT> <I>pattern</I>
</I></B>
<DD> If the index doesn't satisfy one of the above forms then this
form is used.  <I>Pattern</I> is pattern-matched against the tag of
each button in the button box, in order from left/top to right/left,
until a matching entry is found.  The rules of <B>Tcl_StringMatch</B>
are used.

</DL>
</pre><H2>WIDGET-SPECIFIC METHODS</H2>
<DL>
<DT> <I>pathName <B>add</B> <I>tag</I> <I>args</I>
</I></B>
<DD> Add a button distinguished by <I>tag</I> to the end of the button box.
If additional arguments are present they specify options to be applied
to the button.  See <B>PushButton</B> for information on the options
available.
</DL>
<DL>
<DT> <I>pathName <B>buttonconfigure</B> <I>index</I> ?<I>options</I>?
</I></B>
<DD> This command is similar to the <B>configure</B> command, except that
it applies to the options for an individual button, 
whereas <B>configure</B> applies to the options for the button box as a whole.
<I>Options</I> may have any of the values accepted by the <B>PushButton</B>
command.  If <I>options</I> are specified, options are modified
as indicated in the command and the command returns an empty string.
If no <I>options</I> are specified, returns a list describing
the current options for entry <I>index</I> (see <B>Tk_ConfigureInfo</B> for
information on the format of this list).
</DL>
<DL>
<DT> <I>pathName <B>cget</B> <I>option</I>
</I></B>
<DD> Returns the current value of the configuration option given
by <I>option</I>.
<I>Option</I> may have any of the values accepted by the <B>buttonbox</B>
command.
</DL>
<DL>
<DT> <I>pathName</I> <B>configure</B> ?<I>option</I>? ?<I>value option value ...</I>?
</I></B>
<DD> Query or modify the configuration options of the widget.
If no <I>option</I> is specified, returns a list describing all of
the available options for <I>pathName</I> (see <B>Tk_ConfigureInfo</B> for
information on the format of this list).  If <I>option</I> is specified
with no <I>value</I>, then the command returns a list describing the
one named option (this list will be identical to the corresponding
sublist of the value returned if no <I>option</I> is specified).  If
one or more <I>option-value</I> pairs are specified, then the command
modifies the given widget option(s) to have the given value(s);  in
this case the command returns an empty string.
<I>Option</I> may have any of the values accepted by the <B>buttonbox</B>
command.
</DL>
<DL>
<DT> <I>pathName <B>default</B> <I>index</I>
</I></B>
<DD> Sets the default button to the button given by <I>index</I>.  This causes
the default ring to appear arround the specified button.
</DL>
<DL>
<DT> <I>pathName <B>delete</B> <I>index</I>
</I></B>
<DD> Deletes the button given by <I>index</I> from the button box.
</DL>
<DL>
<DT> <I>pathName <B>hide</B> <I>index</I>
</I></B>
<DD> Hides the button denoted by <I>index</I>.  This doesn't remove the button 
permanently, just inhibits its display.  
</DL>
<DL>
<DT> <I>pathName <B>index <I>index</I>
</I></B>
<DD> Returns the numerical index corresponding to <I>index</I>.
</DL>
<DL>
<DT> <I>pathName <B>insert <I>index</I> <I>tag</I> ?<I>option value option value ...</I>?
</I></B>
<DD> Same as the <B>add</B> command except that it inserts the new
button just before the one given by <I>index</I>, instead of appending
to the end of the button box.  The <I>option</I>, and <I>value</I>
arguments have the same interpretation as for the <B>add</B> widget
command.  
</DL>
<DL>
<DT> <I>pathName <B>invoke</B> <I>?index?</I>
</I></B>
<DD> Invoke the command associated with a button.  If no arguments
are given then the current default button is invoked, otherwise the argument
is expected to be a button <I>index</I>.
</DL>
<DL>
<DT> <I>pathName <B>show</B> <I>index</I>
</I></B>
<DD> Display a previously hidden button denoted by <I>index</I>.
</DL>
</pre><H2>EXAMPLE</H2>
<pre>
 buttonbox .bb

 .bb add Yes -text Yes -command "puts Yes" 
 .bb add No -text No -command "puts No"
 .bb add Maybe -text Maybe -command "puts Maybe"
 .bb default Yes

 pack .bb -expand yes -fill both
</pre>
</pre><H2>AUTHOR</H2>
<A HREF="mailto:bas@@wn.com">Bret A. Schuhmacher</A>
</pre>
<A HREF="mailto:mulferts@@spd.dsccc.com">Mark L. Ulferts</A>
</pre><H2>KEYWORDS</H2>
buttonbox, pushbutton, button, widget
@


1.3
log
@touched all sources to ease next import
@
text
@@


1.2
log
@touched all sources to ease next import
@
text
@@


1.1
log
@Initial revision
@
text
@d1 2
a2 8
<HTML>
<HEAD>
<TITLE>iwidgets2.2.0 User Commands - buttonbox</TITLE>
</HEAD>
<BODY BGCOLOR="#FFFFFF">
<H1>iwidgets2.2.0 User Commands - buttonbox</H1>
<HR>
<PRE>
d4 214
a217 236
</PRE>
<H2><HR ALIGN=LEFT WIDTH=70% SIZE=3></H2><PRE>


</PRE>
<H2>NAME</H2><PRE>
     buttonbox - Create and manipulate a manager widget for  but-
     tons


</PRE>
<H2>SYNOPSIS</H2><PRE>
     <STRONG>buttonbox</STRONG> <EM>pathName</EM> ?<EM>options</EM>?


</PRE>
<H2>INHERITANCE</H2><PRE>
     itk::Widget &lt;- buttonbox


</PRE>
<H2>STANDARD OPTIONS</H2><PRE>
     <STRONG>background</STRONG>      <STRONG>cursor</STRONG>

     See the "options" manual entry for details on  the  standard
     options.


</PRE>
<H2>WIDGET-SPECIFIC OPTIONS</H2><PRE>
     Name:           <STRONG>orient</STRONG>
     Class:          <STRONG>Orient</STRONG>
     Command-Line Switch:           <STRONG>-orient</STRONG>

          Orientation of the button box: <STRONG>horizontal</STRONG> or  <STRONG>vertical</STRONG>.
          The default is horizontal.

     Name:           <STRONG>padX</STRONG>
     Class:          <STRONG>PadX</STRONG>
     Command-Line Switch:           <STRONG>-padx</STRONG>

          Specifies a  non-negative  padding  distance  to  leave
          between the button group and the outer edge of the but-
          ton box in the x direction.  The value may be given  in
          any  of  the  forms  acceptable  to  <STRONG>Tk_GetPixels</STRONG>.  The
          default is 5 pixels.

     Name:           <STRONG>padY</STRONG>
     Class:          <STRONG>PadY</STRONG>
     Command-Line Switch:           <STRONG>-pady</STRONG>

          Specifies a  non-negative  padding  distance  to  leave
          between the button group and the outer edge of the but-
          ton box in the y direction.  The value may be given  in
          any  of  the  forms  acceptable  to  <STRONG>Tk_GetPixels</STRONG>.  The
          default is 5 pixels.


</PRE>
<H2><HR ALIGN=LEFT WIDTH=70% SIZE=3></H2><PRE>



</PRE>
<H2>DESCRIPTION</H2><PRE>
     The <STRONG>buttonbox</STRONG> command creates a manager widget for  control-
     ling  buttons.  The button box also supports the display and
     invocation of a default button.  The button box can be  con-
     figured either horizontally or vertically.



</PRE>
<H2>METHODS</H2><PRE>
     The <STRONG>buttonbox</STRONG> command creates a new Tcl command  whose  name
     is  <EM>pathName</EM>.   This  command  may be used to invoke various
     operations on the widget.   It  has  the  following  general
     form:

          <EM>pathName</EM> <EM>option</EM> ?<EM>arg</EM> <EM>arg</EM> ...?

     <EM>Option</EM> and the <EM>arg</EM>s determine the exact behavior of the com-
     mand.

     Many of the widget commands for the buttonbox  take  as  one
     argument  an  indicator of which button of the button box to
     operate on.  These indicators are called <EM>indexes</EM>  and  allow
     reference  and  manipulation  of buttons regardless of their
     current map state.  buttonbox indexes may  be  specified  in
     any of the following forms:

     <EM>number</EM>      Specifies  the  button  numerically,   where   0
                 corresponds  to  the left/top-most button of the
                 button box.

     <STRONG>end</STRONG>         Indicates the right/bottom-most  button  of  the
                 button box.

     <STRONG>default</STRONG>     Indicates the current default button of the but-
                 ton  box.   This  is the button with the default
                 ring displayed.

     <EM>pattern</EM>     If the index doesn't satisfy one  of  the  above
                 forms  then  this  form  is  used.   <EM>Pattern</EM>  is
                 pattern-matched against the tag of  each  button
                 in  the  button  box,  in order from left/top to
                 right/left, until a  matching  entry  is  found.
                 The rules of <STRONG>Tcl_StringMatch</STRONG> are used.



</PRE>
<H2>WIDGET-SPECIFIC METHODS</H2><PRE>
     <EM>pathName</EM> <STRONG>add</STRONG> <EM>tag</EM> <EM>args</EM>
          Add a button distinguished by <EM>tag</EM> to  the  end  of  the
          button  box.   If additional arguments are present they
          specify options to be applied to the button.  See <STRONG>Push-</STRONG>
          <STRONG>Button</STRONG> for information on the options available.

     <EM>pathName</EM> <STRONG>buttonconfigure</STRONG> <EM>index</EM> ?<EM>options</EM>?
          This command  is  similar  to  the  <STRONG>configure</STRONG>  command,
          except that it applies to the options for an individual
          button, whereas <STRONG>configure</STRONG> applies to  the  options  for
          the button box as a whole.  <EM>Options</EM> may have any of the
          values accepted by the <STRONG>PushButton</STRONG> command.  If  <EM>options</EM>
          are specified, options are modified as indicated in the
          command and the command returns an empty string.  If no
          <EM>options</EM>  are  specified,  returns a list describing the
          current options for entry <EM>index</EM>  (see  <STRONG>Tk_ConfigureInfo</STRONG>
          for information on the format of this list).

     <EM>pathName</EM> <STRONG>cget</STRONG> <EM>option</EM>
          Returns the current value of the  configuration  option
          given  by  <EM>option</EM>.   <EM>Option</EM>  may have any of the values
          accepted by the <STRONG>buttonbox</STRONG> command.

     <EM>pathName</EM> <STRONG>configure</STRONG> ?<EM>option</EM>? ?<EM>value</EM> <EM>option</EM> <EM>value</EM> ...?
          Query  or  modify  the  configuration  options  of  the
          widget.   If  no  <EM>option</EM>  is  specified, returns a list
          describing all of the available  options  for  <EM>pathName</EM>
          (see  <STRONG>Tk_ConfigureInfo</STRONG> for information on the format of
          this list).  If <EM>option</EM> is specified with no <EM>value</EM>, then
          the  command  returns  a  list describing the one named
          option (this list will be identical to the  correspond-
          ing  sublist  of  the  value  returned  if no <EM>option</EM> is
          specified).  If one or more  <EM>option</EM> - <EM>value</EM>  pairs  are
          specified,  then  the command modifies the given widget
          option(s) to have the given value(s);  in this case the
          command  returns  an empty string.  <EM>Option</EM> may have any
          of the values accepted by the <STRONG>buttonbox</STRONG> command.

     <EM>pathName</EM> <STRONG>default</STRONG> <EM>index</EM>
          Sets the default button to the button given  by  <EM>index</EM>.
          This  causes  the  default  ring  to appear arround the
          specified button.

     <EM>pathName</EM> <STRONG>delete</STRONG> <EM>index</EM>
          Deletes the button given by <EM>index</EM> from the button box.

     <EM>pathName</EM> <STRONG>hide</STRONG> <EM>index</EM>
          Hides the button denoted by <EM>index</EM>.  This doesn't remove
          the button permanently, just inhibits its display.

     <EM>pathName</EM> <STRONG>index</STRONG> <EM>index</EM>
          Returns the numerical index corresponding to <EM>index</EM>.

     <EM>pathName</EM> <STRONG>insert</STRONG> <EM>index</EM> <EM>tag</EM> ?<EM>option</EM> <EM>value</EM> <EM>option</EM> <EM>value</EM> ...?
          Same as the <STRONG>add</STRONG> command except that it inserts the  new
          button  just  before the one given by <EM>index</EM>, instead of
          appending to the end of the button  box.   The  <EM>option</EM>,
          and <EM>value</EM> arguments have the same interpretation as for
          the <STRONG>add</STRONG> widget command.

     <EM>pathName</EM> <STRONG>invoke</STRONG> ?<EM>index</EM>?
          Invoke the command associated with  a  button.   If  no
          arguments  are given then the current default button is
          invoked, otherwise the argument is  expected  to  be  a
          button <EM>index</EM>.

     <EM>pathName</EM> <STRONG>show</STRONG> <EM>index</EM>
          Display a previously hidden button denoted by <EM>index</EM>.


</PRE>
<H2>EXAMPLE</H2><PRE>
           buttonbox .bb

           .bb add Yes -text Yes -command "puts Yes"
           .bb add No -text No -command "puts No"
           .bb add Maybe -text Maybe -command "puts Maybe"
           .bb default Yes

           pack .bb -expand yes -fill both



</PRE>
<H2>AUTHOR</H2><PRE>
     Bret A. Schuhmacher

     Mark L. Ulferts


</PRE>
<H2>KEYWORDS</H2><PRE>
     buttonbox, pushbutton, button, widget



























</PRE>
</BODY>
</HTML>
@


1.1.1.1
log
@import insight-2000-02-04 snapshot (2nd try)
@
text
@@


1.1.1.2
log
@Itcl import for Tcl/Tk8.3 upgrade
@
text
@d1 8
a8 2
<TITLE>buttonbox - Create and manipulate a manager widget for buttons</TITLE>
<H1>buttonbox - Create and manipulate a manager widget for buttons</H1>
d10 236
a245 214
</pre><H2>SYNOPSIS</H2>
<B>buttonbox<I> <I>pathName </I>?<I>options</I>?
</pre><H2>INHERITANCE</H2>
itk::Widget &lt;- buttonbox
</pre><H2>STANDARD OPTIONS</H2>
<P>
<table cellpadding=5>
<td valign=top>
<B>background</B><br>
</td>
<td valign=top>
<B>cursor</B><br>
</td>
<td valign=top>
</td>
<td valign=top>
</td>
</table>
<P>
See the <A HREF="http://www.sco.com/Technology/tcl/man/tk_man/options.n.html"> "options" </A> manual entry for details on the standard options.
</pre><H2>WIDGET-SPECIFIC OPTIONS</H2>
<P>
<pre>
Name:                   <B>orient</B>
Class:                  <B>Orient</B>
Command-Line Switch:	<B>-orient</B>
</pre>
<UL>
Orientation of the button box: <B>horizontal</B> or <B>vertical</B>.  The default
is horizontal.
</UL>
<P>
<pre>
Name:                   <B>padX</B>
Class:                  <B>PadX</B>
Command-Line Switch:	<B>-padx</B>
</pre>
<UL>
Specifies a non-negative padding distance to leave between the button group and
the outer edge of the button box in the x direction.  The value may be 
given in any of the forms acceptable to <B>Tk_GetPixels</B>.  The default 
is 5 pixels.
</UL>
<P>
<pre>
Name:                   <B>padY</B>
Class:                  <B>PadY</B>
Command-Line Switch:	<B>-pady</B>
</pre>
<UL>
Specifies a non-negative padding distance to leave between the button group and
the outer edge of the button box in the y direction.  The value may be given 
in any of the forms acceptable to <B>Tk_GetPixels</B>.  The default is 5 pixels.
</UL>
<P>
</pre><HR>

</pre><H2>DESCRIPTION</H2>
<P>
The <B>buttonbox</B> command creates a manager widget for controlling
buttons.  The button box also supports the display and invocation
of a default button.  The button box can be configured either horizontally
or vertically.  

</pre><H2>METHODS</H2>
<P>
The <B>buttonbox</B> command creates a new Tcl command whose
name is <I>pathName</I>.  This
command may be used to invoke various
operations on the widget.  It has the following general form:
<pre>
<I>pathName option </I>?<I>arg arg ...</I>?
</pre>
<I>Option</I> and the <I>arg</I>s
determine the exact behavior of the command. 
<P>
Many of the widget commands for the buttonbox take as one argument an
indicator of which button of the button box to operate on.  These 
indicators are called <I>indexes</I> and allow reference and manipulation 
of buttons regardless of their current map state.  buttonbox indexes 
may be specified in any of the following forms:
<DL>
<DT> <I>number</I>
</I></B>
<DD> Specifies the button numerically, where 0 corresponds to the 
left/top-most button of the button box. 
</DL>
<DL>
<DT> <B>end</B>
</I></B>
<DD> Indicates the right/bottom-most button of the button box.
</DL>
<DL>
<DT> <B>default</B>
</I></B>
<DD> Indicates the current default button of the button box.  This is the
button with the default ring displayed.
</DL>
<DL>
<DT> <I>pattern</I>
</I></B>
<DD> If the index doesn't satisfy one of the above forms then this
form is used.  <I>Pattern</I> is pattern-matched against the tag of
each button in the button box, in order from left/top to right/left,
until a matching entry is found.  The rules of <B>Tcl_StringMatch</B>
are used.

</DL>
</pre><H2>WIDGET-SPECIFIC METHODS</H2>
<DL>
<DT> <I>pathName <B>add</B> <I>tag</I> <I>args</I>
</I></B>
<DD> Add a button distinguished by <I>tag</I> to the end of the button box.
If additional arguments are present they specify options to be applied
to the button.  See <B>PushButton</B> for information on the options
available.
</DL>
<DL>
<DT> <I>pathName <B>buttonconfigure</B> <I>index</I> ?<I>options</I>?
</I></B>
<DD> This command is similar to the <B>configure</B> command, except that
it applies to the options for an individual button, 
whereas <B>configure</B> applies to the options for the button box as a whole.
<I>Options</I> may have any of the values accepted by the <B>PushButton</B>
command.  If <I>options</I> are specified, options are modified
as indicated in the command and the command returns an empty string.
If no <I>options</I> are specified, returns a list describing
the current options for entry <I>index</I> (see <B>Tk_ConfigureInfo</B> for
information on the format of this list).
</DL>
<DL>
<DT> <I>pathName <B>cget</B> <I>option</I>
</I></B>
<DD> Returns the current value of the configuration option given
by <I>option</I>.
<I>Option</I> may have any of the values accepted by the <B>buttonbox</B>
command.
</DL>
<DL>
<DT> <I>pathName</I> <B>configure</B> ?<I>option</I>? ?<I>value option value ...</I>?
</I></B>
<DD> Query or modify the configuration options of the widget.
If no <I>option</I> is specified, returns a list describing all of
the available options for <I>pathName</I> (see <B>Tk_ConfigureInfo</B> for
information on the format of this list).  If <I>option</I> is specified
with no <I>value</I>, then the command returns a list describing the
one named option (this list will be identical to the corresponding
sublist of the value returned if no <I>option</I> is specified).  If
one or more <I>option-value</I> pairs are specified, then the command
modifies the given widget option(s) to have the given value(s);  in
this case the command returns an empty string.
<I>Option</I> may have any of the values accepted by the <B>buttonbox</B>
command.
</DL>
<DL>
<DT> <I>pathName <B>default</B> <I>index</I>
</I></B>
<DD> Sets the default button to the button given by <I>index</I>.  This causes
the default ring to appear arround the specified button.
</DL>
<DL>
<DT> <I>pathName <B>delete</B> <I>index</I>
</I></B>
<DD> Deletes the button given by <I>index</I> from the button box.
</DL>
<DL>
<DT> <I>pathName <B>hide</B> <I>index</I>
</I></B>
<DD> Hides the button denoted by <I>index</I>.  This doesn't remove the button 
permanently, just inhibits its display.  
</DL>
<DL>
<DT> <I>pathName <B>index <I>index</I>
</I></B>
<DD> Returns the numerical index corresponding to <I>index</I>.
</DL>
<DL>
<DT> <I>pathName <B>insert <I>index</I> <I>tag</I> ?<I>option value option value ...</I>?
</I></B>
<DD> Same as the <B>add</B> command except that it inserts the new
button just before the one given by <I>index</I>, instead of appending
to the end of the button box.  The <I>option</I>, and <I>value</I>
arguments have the same interpretation as for the <B>add</B> widget
command.  
</DL>
<DL>
<DT> <I>pathName <B>invoke</B> <I>?index?</I>
</I></B>
<DD> Invoke the command associated with a button.  If no arguments
are given then the current default button is invoked, otherwise the argument
is expected to be a button <I>index</I>.
</DL>
<DL>
<DT> <I>pathName <B>show</B> <I>index</I>
</I></B>
<DD> Display a previously hidden button denoted by <I>index</I>.
</DL>
</pre><H2>EXAMPLE</H2>
<pre>
 buttonbox .bb

 .bb add Yes -text Yes -command "puts Yes" 
 .bb add No -text No -command "puts No"
 .bb add Maybe -text Maybe -command "puts Maybe"
 .bb default Yes

 pack .bb -expand yes -fill both
</pre>
</pre><H2>AUTHOR</H2>
<A HREF="mailto:bas@@wn.com">Bret A. Schuhmacher</A>
</pre>
<A HREF="mailto:mulferts@@spd.dsccc.com">Mark L. Ulferts</A>
</pre><H2>KEYWORDS</H2>
buttonbox, pushbutton, button, widget
@


1.1.1.3
log
@Remove local modifications and files no longer in itcl 3.2.1
@
text
@@


