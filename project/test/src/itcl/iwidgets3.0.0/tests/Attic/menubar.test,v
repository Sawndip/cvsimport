head	1.4;
access;
symbols
	gdb_5_3-2002-12-12-release:1.1.1.2
	tcltk840-20020924-branch:1.2.0.2
	tcltk840-20020924-branchpoint:1.2
	gdb_5_3-branch:1.1.1.2.0.4
	gdb_5_3-2002-09-04-branchpoint:1.1.1.2
	gdb_5_2_1-2002-07-23-release:1.1.1.2
	gdb_5_2-2002-04-29-release:1.1.1.2
	gdb_5_2-branch:1.1.1.2.0.2
	gdb_5_2-2002-03-03-branchpoint:1.1.1.2
	gdb_5_1_1-2002-01-24-release:1.1.1.1
	cygnus_cvs_20020108_pre:1.1.1.2
	gdb_5_1_0_1-2002-01-03-branch:1.1.1.1.0.8
	gdb_5_1_0_1-2002-01-03-branchpoint:1.1.1.1
	gdb_5_1-2001-11-21-release:1.1.1.1
	gdb_s390-2001-09-26-branch:1.1.1.1.0.6
	gdb_s390-2001-09-26-branchpoint:1.1.1.1
	ITCL_TCL_8_3:1.1.1.2
	NET:1.1.1
	gdb_5_1-2001-07-29-branch:1.1.1.1.0.4
	gdb_5_1-2001-07-29-branchpoint:1.1.1.1
	insight-precleanup-2001-01-01:1.1.1.1
	gdb_5_0-2000-05-19-release:1.1.1.1
	gdb_4_18_2-2000-05-18-release:1.1.1.1
	gdb_4_95_1-2000-05-11-snapshot:1.1.1.1
	gdb_4_95_0-2000-04-27-snapshot:1.1.1.1
	gdb_5_0-2000-04-10-branch:1.1.1.1.0.2
	gdb_5_0-2000-04-10-branchpoint:1.1.1.1
	repo-unification-2000-02-06:1.1.1.1
	insight-2000-02-04:1.1.1.1
	SNAPSHOT:1.1.1;
locks; strict;
comment	@# @;
expand	@o@;


1.4
date	2003.01.21.21.19.52;	author hunt;	state dead;
branches;
next	1.3;

1.3
date	2003.01.21.20.40.35;	author hunt;	state Exp;
branches;
next	1.2;

1.2
date	2002.09.24.18.35.40;	author kseitz;	state Exp;
branches;
next	1.1;

1.1
date	2000.02.07.00.19.47;	author jsm;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2000.02.07.00.19.47;	author jsm;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2001.09.09.19.49.09;	author irox;	state Exp;
branches;
next	1.1.1.3;

1.1.1.3
date	2002.09.25.02.47.49;	author kseitz;	state dead;
branches;
next	;


desc
@@


1.4
log
@Remove obsolete directory
@
text
@# This file is a Tcl script to test out [incr Widgets] Menubar class.
# It is organized in the standard fashion for Tcl tests with the following
# notation for test case labels:
#
#   1.x - Construction/Destruction tests
#   2.x - Configuration option tests
#   3.x - Method tests
#
# Copyright (c) 1995 DSC Technologies Corporation
#
# See the file "license.terms" for information on usage and redistribution
# of this file, and for a DISCLAIMER OF ALL WARRANTIES.
#
# @@(#) $Id: menubar.test,v 1.2.172.1 2001/05/18 02:21:49 mdejong Exp $

package require tcltest
namespace import -force ::tcltest::*

package require Iwidgets 3.0

if {[string compare test [info procs test]] == 1} {
    source defs
}

wm geometry . {}
raise .

set c 1
set o 1
set m 1

#
# Initial construction test
#
test Menubar-1.$c {Menubar construction} {
    iwidgets::Menubar .mb -menubuttons {
		menubutton file -text File -menu {
			options -tearoff no
			command ok -label "Ok"
			command quit -label "Quit"
		}
	}
    pack .mb 
    update 
    .mb add menubutton .other -text Other -menu {
		radiobutton r1 -label "Radio One"
		radiobutton r2 -label "Radio Two"
	}
    update 
	.mb add menubutton view -text View -menu {
		command uno -label Uno
		command dos -label Dos
	}
	update
	.mb add cascade .view.more -label More -menu {
		command one -label One
		command two -label Two
		cascade extra -label Extra -menu {
			radiobutton rad1 -label "Choice One"
			radiobutton rad2 -label "Choice Two"
			cascade somemore \
					-label "Some More" \
					-helpstr "Yet some more" \
					-menu {
				command triangle -label "Triangle" -command {puts TRIANGLE}
				command square -label "Square" -command {puts SQUARE}
				command octagon -label "Octagon" -command {puts OCTAGON}
			}
		}
	}
    update 
} {}

incr c

#
# Option tests which are successful.
#
test Menubar-2.$o {configuration option} {
    llength [.mb configure]
} {22}

incr o

foreach test {
	{-anchor center center }
	{-disabledforeground #a3a3a3 #a3a3a3 }
	{-menubuttons {} {} }
	{-highlightthickness 0 0 }
	{-borderwidth 2 2 }
	{-helpvariable {} {} }
	{-highlightcolor Black Black }
	{-font -Adobe-Helvetica-Bold-R-Normal--*-120-*-*-*-*-*-* -Adobe-Helvetica-Bold-R-Normal--*-120-*-*-*-*-*-* }
	{-background #CDCDB7B7B5B5 #CDCDB7B7B5B5 }
	{-highlightbackground #d9d9d9 #d9d9d9 }
	{-activeborderwidth 2 2 }
	{-wraplength 0 0 }
	{-activebackground #ececec #ececec }
	{-padx 4 4 }
	{-pady 4 4 }
	{-justify center center }
	{-cursor {} {} }
	{-activeforeground black black }
	{-width 0 0 }
	{-height 0 0 }
	} {
	set option [lindex $test 0]
	test Menubar-2.$o "configuration options, $option" {
	    .mb configure $option [lindex $test 1] 
		.mb cget $option
	} [lindex $test 2]
	update 
	incr o
}

#
# Menuconfigure Option tests which are successful.
#
# This happens to be for a command...
test Menubar-3.$o {menubar menuconfiguration option} {
    llength [.mb menuconfigure .file.quit]
} {15}

# do menuconfigure tests also...
foreach test {
	{ .file.quit -activebackground red red }
	{ .file.quit -activeforeground red red }
	{ .file.quit -accelerator {} {}  }
	{ .file.quit -background red red }
	{ .file.quit -bitmap {} {} }
	{ .file.quit -command {} {}   }
	{ .file.quit -font fixed fixed  }
	{ .file.quit -foreground  red red }
	{ .file.quit -image {} {} }
	{ .file.quit -label hello hello }
	{ .file.quit -state normal normal }
	{ .file.quit -underline -1 -1 }
	{ .file.quit -helpstr {} {} }
	} {
		set index  [lindex $test 0]
		set option [lindex $test 1]
		test Menubar-2.$o "tab configuration options, $option" {
			.mb menuconfigure $index $option [lindex $test 2] 
			.mb menucget $index $option
		} [lindex $test 3]
	update 
	incr o
}

# test on cascade item
# This happens to be for a cascade...
test Menubar-3.$o {menubar menuconfiguration option} {
    llength [.mb menuconfigure .view.more]
} {17}

# do menuconfigure tests also...
foreach test {
	{ .view.more -activebackground red red }
	{ .view.more -activeforeground red red }
	{ .view.more -accelerator {} {}  }
	{ .view.more -background  red red}
	{ .view.more -bitmap {} {}  }
	{ .view.more -command {} {}  }
	{ .view.more -font   }
	{ .view.more -foreground   }
	{ .view.more -image {} {}  }
	{ .view.more -label {} {}  }
	{ .view.more -state normal normal }
	{ .view.more -underline -1 -1 }
	{ .view.more -helpstr {} {} }
	} {
		set index  [lindex $test 0]
		set option [lindex $test 1]
		test Menubar-2.$o "tab configuration options, $option" {
			.mb menuconfigure $index $option [lindex $test 2] 
			.mb menucget $index $option
		} [lindex $test 3]
	update 
	incr o
}

#
# Option tests which fail and produce errors.
#
#foreach test {
#	{ -OPTION BADVALUE {ERROR_MESSAGE} }
#	} {
#	set option [lindex $test 0]
#        test Menubar-2.$o "configuration options, $option" {
#	    list [catch {.bb configure $option [lindex $test 1]} msg] $msg
#	} [list 1 [lindex $test 2]]
#	incr o
#}

#
# Method tests which are successful.
#
foreach test {
    {{.mb delete 0 end}
		{}}
	{{.mb add menubutton .help -text Help}
		{}}
	{{.mb add command .help.context -label "On Context..."}
		{}}
	{{.mb insert .help.context command index -label "By Index..."}
		{}}
	{{.mb delete .help}
		{}}
	{{.mb add menubutton .help -text HELP -menu {
			command index -label "By Index..."
			command context -label "By Context..."
			separator sep1
			command keyword -label "By Keyword..."
		}}
		{}}
	{{.mb delete .help.sep1 .help.keyword}
		{}}
	{{.mb menuconfigure .help -text HeLp -menu {
			command index -label "By Index..."
			command context -label "By Context..."
			separator sep1
			command keyword -label "By Keyword..."
		}}
		{}}
	{{.mb configure -menubuttons {
		menubutton file -text File -menu {
			options -tearoff on
			command ok -label "OK"
			command quit -label "Quit"
			}
		}}
		{}}
	{{.mb add menubutton .other -text Other -menu {
		radiobutton r1 -label "Radio One"
		radiobutton r2 -label "Radio Two"
	}}
		{}}
	{{.mb insert .other menubutton view -text View -menu {
		command uno -label Uno
		command dos -label Dos
	}}
		{}}
	{{.mb add cascade .view.more -label More -menu {
		command one -label One
		command two -label Two
		cascade extra -label Extra -menu {
			radiobutton rad1 -label "Choice One"
			radiobutton rad2 -label "Choice Two"
			cascade somemore \
					-label "Some More" \
					-helpstr "Yet some more" \
					-menu {
				command triangle -label "Triangle" -command {puts TRIANGLE}
				command square -label "Square" -command {puts SQUARE}
				command octagon -label "Octagon" -command {puts OCTAGON}
			}
		}
	}}
		{}}
	{{.mb insert .view.uno cascade before -label Before -menu {
		command red -label Red
		command green -label Green
		command blue -label Blue
	}}
		{}}
	{{.mb add menubutton .help -text Help}
		{}}
	{{.mb add command .help.context -label "On Context..."}
		{}}
	{{.mb insert .help.context command index -label "By Index..."}
		{}}
	{{.mb insert .view.before.green cascade colors -label Colors -menu {
		command orange -label Orange -command "puts ORANGE" -helpstr "orange"
		separator sep1
		command purple -label Purple
	}}

		{}}
	{{.mb insert .view.before.colors.purple cascade morecolors -label "More Colors" -menu {}}
		{}}
	{{.mb add command .view.before.colors.morecolors.pink -label Pink}
		{}}
	{{.mb add command .view.before.colors.morecolors.peach -label Peach}
		{}}
	{{.mb add command .view.before.colors.morecolors.yellow -label Yellow}
		{}}
	{{.mb menuconfigure .view -text VIEW -menu {
		command o -label OH -command {puts OH}
		cascade negative -label Negative -menu {
			command print -label Print
			command save -label Save
		}
		# Comments are supported.
#		command dummy -label PlaceHolder
		cascade plus -label Plus -menu {
			command yep -label Yep
			command nope -label Nope
		}
	}}
		{}}
	{{.mb menuconfigure .view.negative -label NEGATIVE -menu {
		command print -label PRINT
		command save -label SAVE
	}}
		{}}
	{{.mb delete .0 .end}
		{}}
	} {
	set method [lindex [lindex $test 0] 1]
	set method_invoke [lindex $test 0]

	set testContents "set msg {}\n"
	append testContents \
	    "set result \[catch \{[lindex $test 0]\} msg\]\n"
	append testContents \
	    "lappend result \[regexp -- \{[lindex $test 1]\} \$msg\] \n"
	append testContents "set result\n"
	test Menubar-4.$m "\[$method_invoke\]" $testContents \
		[list 0 1]
	update 
	incr m
}

#
# Method tests which fail and produce errors or results
# Specifically, deals with method invocation on empty menubar.
#
foreach test {
		{1 {.mb delete .0 .last} 
			{bad path:}}
		{0 {.mb index .0} 
			{-1}}
		{0 {.mb index .end} 
			{-1}}
		{0 {.mb index .last} 
			{-1}}
		{0 {.mb index .help} 
			{-1}}
		{1 {.mb delete .0} 
			{bad path:}}
		{1 {.mb delete .end} 
			{bad path:}}
		{1 {.mb delete .last} 
			{bad path:}}
		{1 {.mb delete .help} 
			{bad path:}}
		{1 {.mb insert .0 menubutton file -text File} 
			{bad path:}}
		{1 {.mb insert .end menubutton file -text File} 
			{bad path:}}
		{1 {.mb insert .last menubutton file -text File} 
			{bad path:}}
		{1 {.mb insert .help menubutton file -text File} 
			{bad path:}}
		{1 {.mb invoke .0.0} 
			{bad path:}}
		{1 {.mb invoke .end.0} 
			{bad path:}}
		{1 {.mb invoke .last.0} 
			{bad path:}}
		{1 {.mb invoke .help.0} 
			{bad path:}}
		{1 {.mb menucget .0 -text} 
			{bad path:}}
		{1 {.mb menucget .end -text} 
			{bad path:}}
		{1 {.mb menucget .last -text} 
			{bad path:}}
		{1 {.mb menucget .help -text} 
			{bad path:}}
		{1 {.mb menuconfigure .0 -text} 
			{bad path:}}
		{1 {.mb menuconfigure .end -text} 
			{bad path:}}
		{1 {.mb menuconfigure .last -text} 
			{bad path:}}
		{1 {.mb menuconfigure .help -text} 
			{bad path:}}
		{0 {.mb path *quit} 
			{}}
		{1 {.mb type .0.0} 
			{bad path:}}
		{1 {.mb type .0.end} 
			{bad path:}}
		{1 {.mb type .0.last} 
			{bad path:}}
		{1 {.mb type .0.new} 
			{bad path:}}
		{1 {.mb yposition .0.new} 
			{bad path:}}
	} {
		set method_status [lindex $test 0]
		set method_invoke [lindex $test 1]
		set method [lindex $method_invoke 1]

		set testContents "set msg {}\n"
		append testContents \
		    "set result \[catch \{$method_invoke\} msg\]\n"
		append testContents \
		    "lappend result \[regexp -- \{[lindex $test 2]\} \$msg\] \n"
		append testContents "set result\n"
		test Menubar-5.$m "\[$method_invoke\]" $testContents \
			[list $method_status 1]
	incr m
	}

#
# Method tests which fail and produce errors or results
# On a non-empty menubar...
foreach test {
		{0 {.mb configure -menubuttons {
			menubutton file -text File -menu {
				options -tearoff no
				command ok -label "Ok"
				command quit -label "Quit"
			}
		}}
			{}}
		{1 {.mb delete .file.hello} 
			{bad path}}
		{0 {.mb index .0.hello} 
			{-1}}
		{0 {.mb index .0.quit} 
			{1}}
		{0 {.mb index 0.end} 
			{1}}
		{0 {.mb index .file.last} 
			{1}}
		{0 {.mb index .file.ok} 
			{0}}
		{1 {.mb delete .view .file}
			{bad path:}}
		{1 {.mb delete .file .help}
			{bad path:}}
		{1 {.mb add command .file.menu}
			{bad name}}
		{1 {.mb add command .file.last}
			{bad name}}
		{1 {.mb add command .file.end}
			{bad name}}
		{1 {.mb add command .file.2}
			{bad name}}
		{1 {.mb insert .0 menu view -text View} 
			{bad type}}
		{1 {.mb insert .file command view -text View} 
			{bad entry path}}
		{0 {.mb insert .file menubutton view -text View} 
			{[.]mb[.]menubar[.]view}}
		{1 {.mb invoke .0.quit} 
			{bad path}}
		{0 {.mb menucget .0 -text} 
			{View}}
		{0 {.mb menucget .end -text} 
			{File}}
		{0 {.mb menucget .last -text} 
			{File}}
		{1 {.mb menucget .help -text} 
			{bad path}}
		{0 {.mb menuconfigure .0 -text} 
			{-text text Text {} View}}
		{0 {.mb menuconfigure .end.last -label} 
			{-label {} {} {} Quit}}
		{0 {.mb menuconfigure .last -text} 
			{-text text Text {} File}}
		{1 {.mb menuconfigure .help -text} 
			{bad path}}
		{0 {.mb path *quit} 
			{[.]file[.]quit}}
		{0 {.mb type .end.0} 
			{command}}
		{0 {.mb type .end.end} 
			{command}}
		{0 {.mb type .end.last} 
			{command}}
		{1 {.mb type .0.new} 
			{bad path}}
	} {
		set method_status [lindex $test 0]
		set method_invoke [lindex $test 1]
		set method [lindex $method_invoke 1]

		set testContents "set msg {}\n"
		append testContents \
		    "set result \[catch \{$method_invoke\} msg\]\n"
		append testContents \
		    "lappend result \[regexp -- \{[lindex $test 2]\} \$msg\] \n"
		append testContents "set result\n"
		test Menubar-5.$m "\[$method_invoke\]" $testContents \
			[list $method_status 1]
	incr m
	}

#
# Conclusion of constrcution/destruction tests
#
test Menubar-1.$c {Menubar destruction} {
    destroy .mb
    update 
} {}

incr c

test Menubar-1.$c {Menubar construction} {
    iwidgets::Menubar .mb -menubuttons {
		menubutton file -text File -menu {
			options -tearoff no
			command ok -label "Ok"
			command quit -label "Quit"
		}
	}
    pack .mb 
    update 
    .mb add menubutton .other -text Other -menu {
		radiobutton r1 -label "Radio One"
		radiobutton r2 -label "Radio Two"
	}
    update 
	.mb add menubutton view -text View -menu {
		command uno -label Uno
		command dos -label Dos
	}
	update
	.mb add cascade .view.more -label More -menu {
		command one -label One
		command two -label Two
		cascade extra -label Extra -menu {
			radiobutton rad1 -label "Choice One"
			radiobutton rad2 -label "Choice Two"
			cascade somemore \
					-label "Some More" \
					-helpstr "Yet some more" \
					-menu {
				command triangle -label "Triangle" -command {puts TRIANGLE}
				command square -label "Square" -command {puts SQUARE}
				command octagon -label "Octagon" -command {puts OCTAGON}
			}
		}
	}
    update 
} {}

incr c

test Menubar-1.$c {Menubar destruction} {
	destroy .mb
    update 
} {}

::tcltest::cleanupTests
exit
@


1.3
log
@touched all sources to ease next import
@
text
@@


1.2
log
@touched all sources to ease next import
@
text
@@


1.1
log
@Initial revision
@
text
@d14 4
a17 1
# @@(#) $Id: menubar.test,v 1.2 1999/01/27 18:56:41 jingham Exp $
d227 3
a229 3
			options -tearoff $tearoff
			command ok -label $okLabel
			command quit -label $quitLabel
d311 9
a319 3
	test_pattern Menubar-4.$m "\[$method_invoke\]" {
	    list [catch {eval [lindex $test 0]} msg] $msg
	} [list 0 [lindex $test 1]]
d329 1
a329 1
		{{.mb delete .0 .last} 
d331 1
a331 1
		{{.mb index .0} 
d333 1
a333 1
		{{.mb index .end} 
d335 1
a335 1
		{{.mb index .last} 
d337 1
a337 1
		{{.mb index .help} 
d339 1
a339 1
		{{.mb delete .0} 
d341 1
a341 1
		{{.mb delete .end} 
d343 1
a343 1
		{{.mb delete .last} 
d345 1
a345 1
		{{.mb delete .help} 
d347 1
a347 1
		{{.mb insert .0 menubutton file -text File} 
d349 1
a349 1
		{{.mb insert .end menubutton file -text File} 
d351 1
a351 1
		{{.mb insert .last menubutton file -text File} 
d353 1
a353 1
		{{.mb insert .help menubutton file -text File} 
d355 1
a355 1
		{{.mb invoke .0.0} 
d357 1
a357 1
		{{.mb invoke .end.0} 
d359 1
a359 1
		{{.mb invoke .last.0} 
d361 1
a361 1
		{{.mb invoke .help.0} 
d363 1
a363 1
		{{.mb menucget .0 -text} 
d365 1
a365 1
		{{.mb menucget .end -text} 
d367 1
a367 1
		{{.mb menucget .last -text} 
d369 1
a369 1
		{{.mb menucget .help -text} 
d371 1
a371 1
		{{.mb menuconfigure .0 -text} 
d373 1
a373 1
		{{.mb menuconfigure .end -text} 
d375 1
a375 1
		{{.mb menuconfigure .last -text} 
d377 1
a377 1
		{{.mb menuconfigure .help -text} 
d379 1
a379 1
		{{.mb path *quit} 
d381 1
a381 1
		{{.mb type .0.0} 
d383 1
a383 1
		{{.mb type .0.end} 
d385 1
a385 1
		{{.mb type .0.last} 
d387 1
a387 1
		{{.mb type .0.new} 
d389 1
a389 1
		{{.mb yposition .0.new} 
d392 12
a403 5
		set method [lindex [lindex $test 0] 1]
		set method_invoke [lindex $test 0]
		test_pattern Menubar-5.$m "\[$method_invoke\]" {
			list [catch {eval [lindex $test 0]} msg] $msg
		} [list 1 [lindex $test 1]]
d411 1
a411 1
		{{.mb configure -menubuttons {
d419 1
a419 1
		{{.mb delete .file.hello} 
d421 1
a421 1
		{{.mb index .0.hello} 
d423 1
a423 1
		{{.mb index .0.quit} 
d425 1
a425 1
		{{.mb index 0.end} 
d427 1
a427 1
		{{.mb index .file.last} 
d429 1
a429 1
		{{.mb index .file.ok} 
d431 1
a431 1
		{{.mb delete .view .file}
d433 1
a433 1
		{{.mb delete .file .help}
d435 1
a435 1
		{{.mb add command .file.menu}
d437 1
a437 1
		{{.mb add command .file.last}
d439 1
a439 1
		{{.mb add command .file.end}
d441 1
a441 1
		{{.mb add command .file.2}
d443 1
a443 1
		{{.mb insert .0 menu view -text View} 
d445 1
a445 1
		{{.mb insert .file command view -text View} 
d447 1
a447 1
		{{.mb insert .file menubutton view -text View} 
d449 1
a449 1
		{{.mb invoke .0.quit} 
d451 1
a451 1
		{{.mb menucget .0 -text} 
d453 1
a453 1
		{{.mb menucget .end -text} 
d455 1
a455 1
		{{.mb menucget .last -text} 
d457 1
a457 1
		{{.mb menucget .help -text} 
d459 1
a459 1
		{{.mb menuconfigure .0 -text} 
d461 1
a461 1
		{{.mb menuconfigure .end.last -label} 
d463 1
a463 1
		{{.mb menuconfigure .last -text} 
d465 1
a465 1
		{{.mb menuconfigure .help -text} 
d467 1
a467 1
		{{.mb path *quit} 
d469 1
a469 1
		{{.mb type .end.0} 
d471 1
a471 1
		{{.mb type .end.end} 
d473 1
a473 1
		{{.mb type .end.last} 
d475 1
a475 1
		{{.mb type .0.new} 
d478 12
a489 5
		set method [lindex [lindex $test 0] 1]
		set method_invoke [lindex $test 0]
		test_pattern Menubar-5.$m "\[$method_invoke\]" {
			list [catch {eval [lindex $test 0]} msg] $msg
		} [list 1 [lindex $test 1]]
d548 3
@


1.1.1.1
log
@import insight-2000-02-04 snapshot (2nd try)
@
text
@@


1.1.1.2
log
@Itcl import for Tcl/Tk8.3 upgrade
@
text
@d14 1
a14 4
# @@(#) $Id: menubar.test,v 1.2.172.1 2001/05/18 02:21:49 mdejong Exp $

package require tcltest
namespace import -force ::tcltest::*
d224 3
a226 3
			options -tearoff on
			command ok -label "OK"
			command quit -label "Quit"
d308 3
a310 9

	set testContents "set msg {}\n"
	append testContents \
	    "set result \[catch \{[lindex $test 0]\} msg\]\n"
	append testContents \
	    "lappend result \[regexp -- \{[lindex $test 1]\} \$msg\] \n"
	append testContents "set result\n"
	test Menubar-4.$m "\[$method_invoke\]" $testContents \
		[list 0 1]
d320 1
a320 1
		{1 {.mb delete .0 .last} 
d322 1
a322 1
		{0 {.mb index .0} 
d324 1
a324 1
		{0 {.mb index .end} 
d326 1
a326 1
		{0 {.mb index .last} 
d328 1
a328 1
		{0 {.mb index .help} 
d330 1
a330 1
		{1 {.mb delete .0} 
d332 1
a332 1
		{1 {.mb delete .end} 
d334 1
a334 1
		{1 {.mb delete .last} 
d336 1
a336 1
		{1 {.mb delete .help} 
d338 1
a338 1
		{1 {.mb insert .0 menubutton file -text File} 
d340 1
a340 1
		{1 {.mb insert .end menubutton file -text File} 
d342 1
a342 1
		{1 {.mb insert .last menubutton file -text File} 
d344 1
a344 1
		{1 {.mb insert .help menubutton file -text File} 
d346 1
a346 1
		{1 {.mb invoke .0.0} 
d348 1
a348 1
		{1 {.mb invoke .end.0} 
d350 1
a350 1
		{1 {.mb invoke .last.0} 
d352 1
a352 1
		{1 {.mb invoke .help.0} 
d354 1
a354 1
		{1 {.mb menucget .0 -text} 
d356 1
a356 1
		{1 {.mb menucget .end -text} 
d358 1
a358 1
		{1 {.mb menucget .last -text} 
d360 1
a360 1
		{1 {.mb menucget .help -text} 
d362 1
a362 1
		{1 {.mb menuconfigure .0 -text} 
d364 1
a364 1
		{1 {.mb menuconfigure .end -text} 
d366 1
a366 1
		{1 {.mb menuconfigure .last -text} 
d368 1
a368 1
		{1 {.mb menuconfigure .help -text} 
d370 1
a370 1
		{0 {.mb path *quit} 
d372 1
a372 1
		{1 {.mb type .0.0} 
d374 1
a374 1
		{1 {.mb type .0.end} 
d376 1
a376 1
		{1 {.mb type .0.last} 
d378 1
a378 1
		{1 {.mb type .0.new} 
d380 1
a380 1
		{1 {.mb yposition .0.new} 
d383 5
a387 12
		set method_status [lindex $test 0]
		set method_invoke [lindex $test 1]
		set method [lindex $method_invoke 1]

		set testContents "set msg {}\n"
		append testContents \
		    "set result \[catch \{$method_invoke\} msg\]\n"
		append testContents \
		    "lappend result \[regexp -- \{[lindex $test 2]\} \$msg\] \n"
		append testContents "set result\n"
		test Menubar-5.$m "\[$method_invoke\]" $testContents \
			[list $method_status 1]
d395 1
a395 1
		{0 {.mb configure -menubuttons {
d403 1
a403 1
		{1 {.mb delete .file.hello} 
d405 1
a405 1
		{0 {.mb index .0.hello} 
d407 1
a407 1
		{0 {.mb index .0.quit} 
d409 1
a409 1
		{0 {.mb index 0.end} 
d411 1
a411 1
		{0 {.mb index .file.last} 
d413 1
a413 1
		{0 {.mb index .file.ok} 
d415 1
a415 1
		{1 {.mb delete .view .file}
d417 1
a417 1
		{1 {.mb delete .file .help}
d419 1
a419 1
		{1 {.mb add command .file.menu}
d421 1
a421 1
		{1 {.mb add command .file.last}
d423 1
a423 1
		{1 {.mb add command .file.end}
d425 1
a425 1
		{1 {.mb add command .file.2}
d427 1
a427 1
		{1 {.mb insert .0 menu view -text View} 
d429 1
a429 1
		{1 {.mb insert .file command view -text View} 
d431 1
a431 1
		{0 {.mb insert .file menubutton view -text View} 
d433 1
a433 1
		{1 {.mb invoke .0.quit} 
d435 1
a435 1
		{0 {.mb menucget .0 -text} 
d437 1
a437 1
		{0 {.mb menucget .end -text} 
d439 1
a439 1
		{0 {.mb menucget .last -text} 
d441 1
a441 1
		{1 {.mb menucget .help -text} 
d443 1
a443 1
		{0 {.mb menuconfigure .0 -text} 
d445 1
a445 1
		{0 {.mb menuconfigure .end.last -label} 
d447 1
a447 1
		{0 {.mb menuconfigure .last -text} 
d449 1
a449 1
		{1 {.mb menuconfigure .help -text} 
d451 1
a451 1
		{0 {.mb path *quit} 
d453 1
a453 1
		{0 {.mb type .end.0} 
d455 1
a455 1
		{0 {.mb type .end.end} 
d457 1
a457 1
		{0 {.mb type .end.last} 
d459 1
a459 1
		{1 {.mb type .0.new} 
d462 5
a466 12
		set method_status [lindex $test 0]
		set method_invoke [lindex $test 1]
		set method [lindex $method_invoke 1]

		set testContents "set msg {}\n"
		append testContents \
		    "set result \[catch \{$method_invoke\} msg\]\n"
		append testContents \
		    "lappend result \[regexp -- \{[lindex $test 2]\} \$msg\] \n"
		append testContents "set result\n"
		test Menubar-5.$m "\[$method_invoke\]" $testContents \
			[list $method_status 1]
a524 3

::tcltest::cleanupTests
exit
@


1.1.1.3
log
@Remove local modifications and files no longer in itcl 3.2.1
@
text
@@


