head	1.2;
access;
symbols
	insight_7_6-2013-04-10-branchpoint:1.2
	gdb_7_6-branch:1.2.0.12
	gdb_7_5-branch:1.2.0.10
	gdb_7_4-branch:1.2.0.8
	gdb_7_3-branch:1.2.0.6
	gdb_7_1-branch:1.2.0.4
	gdb_7_0-branch:1.2.0.2
	arc-sim-20090309:1.1.1.1
	arc-insight_6_8-branch:1.1.1.1.0.16
	arc-insight_6_8-branchpoint:1.1.1.1
	insight_6_8-branch:1.1.1.1.0.14
	insight_6_8-branchpoint:1.1.1.1
	ITCL_3_3:1.1.1.1
	gdb_6_8-branch:1.1.1.1.0.12
	insight_6_6-20070208-release:1.1.1.1
	gdb_6_6-branch:1.1.1.1.0.10
	gdb_6_6-2006-11-15-branchpoint:1.1.1.1
	insight_6_5-20061003-release:1.1.1.1
	gdb_6_5-branch:1.1.1.1.0.8
	gdb_6_5-2006-05-14-branchpoint:1.1.1.1
	gdb_6_4-branch:1.1.1.1.0.6
	gdb_6_4-2005-11-01-branchpoint:1.1.1.1
	gdb_6_1-2004-04-05-release:1.1.1.1
	gdb_6_1-branch:1.1.1.1.0.4
	gdb_6_1-2004-03-01-gmt-branchpoint:1.1.1.1
	gdb_6_0-2003-10-04-release:1.1.1.1
	gdb_6_0-branch:1.1.1.1.0.2
	gdb_6_0-2003-06-23-branchpoint:1.1.1.1
	ITCL3_2_1:1.1.1.1
	NET:1.1.1;
locks; strict;
comment	@# @;
expand	@o@;


1.2
date	2008.07.22.20.32.48;	author kseitz;	state Exp;
branches;
next	1.1;

1.1
date	2003.01.21.20.42.54;	author hunt;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2003.01.21.20.42.54;	author hunt;	state Exp;
branches;
next	;


desc
@@


1.2
log
@touch all sources for Itcl 3.3/Iwidgets 4.0.1 upgrade
@
text
@# This file is a Tcl script to test out [incr Widgets] Spindate class.
# It is organized in the standard fashion for Tcl tests with the following
# notation for test case labels:
#
#   1.x - Construction/Destruction tests
#   2.x - Configuration option tests
#   3.x - Method tests
#
# Copyright (c) 1995 DSC Technologies Corporation
#
# See the file "license.terms" for information on usage and redistribution
# of this file, and for a DISCLAIMER OF ALL WARRANTIES.
#
# @@(#) $Id: spindate.test,v 1.3 2001/08/07 19:56:48 smithc Exp $

package require tcltest
namespace import -force ::tcltest::*

if [catch {package require Iwidgets 4.0}] {
  # Let's try modifying the auto_path.  Note that the IWIDGETS_LIBRARY
  # env var is initialized in the Makefile when doing a 'make test'.
  # If sourcing this file independently, this variable must be set manually.
  if ![info exists env(IWIDGETS_LIBRARY)] {
    error "Unable to locate Iwidgets package.  Set your IWIDGETS_LIBRARY\
      environment\nvariable to the directory that contains iwidgets.tcl"
  }
  lappend auto_path $env(IWIDGETS_LIBRARY)
  package require Iwidgets 4.0
}

if {[string compare test [info procs test]] == 1} {
    source defs
}

wm geometry . {}
raise .

set c 1
set o 1
set m 1

#
# Initial construction test
#
test Spindate-1.$c {Spindate construction} {
    iwidgets::Spindate .sd
    pack .sd -padx 10 -pady 10 -fill both -expand yes
    update 
} {}

incr c

#
# Option tests which are successful.
#
test Spindate-2.$o {configuration option} {
    llength [.sd configure]
} {26}

incr o

foreach test {
    {-arroworient horizontal horizontal}
    {-arroworient vertical vertical}
    {-background #d9d9d9 #d9d9d9}
    {-cursor gumby gumby}
    {-datemargin 3 3}
    {-daylabel Day: Day:}
    {-dayon false false}
    {-dayon true true}
    {-daywidth 4 4}
    {-labelmargin 4 4}
    {-labelpos n n}
    {-labelpos s s}
    {-labelpos e e}
    {-labelpos w w}
    {-monthformat integer integer}
    {-monthformat brief brief}
    {-monthformat full full}
    {-monthlabel Month: Month:}
    {-monthon false false}
    {-monthon true true}
    {-monthwidth 4 4}
    {-orient horizontal horizontal}
    {-orient vertical vertical}
    {-textbackground GhostWhite GhostWhite}
    {-yeardigits 2 2}
    {-yeardigits 4 4}
    {-yearlabel Year: Year:}
    {-yearon false false}
    {-yearon true true}
    {-yearwidth 4 4}} {
	set option [lindex $test 0]
	test Spindate-2.$o "configuration options, $option" {
	    .sd configure $option [lindex $test 1]
	    lindex [.sd configure $option] 4
	} [lindex $test 2]
	update 
	incr o
}

#
# Option tests which fail and produce errors.
#
foreach test {
  {-yeardigits bogus {bad yeardigits option "bogus", should be 2 or 4}}
  {-monthformat bogus {bad monthformat option "bogus", should be "integer", "brief" or "full"}}} {
	set option [lindex $test 0]
        test Spindate-2.$o "configuration options, $option" {
	    list [catch {.sd configure $option [lindex $test 1]} msg] $msg
	} [list 1 [lindex $test 2]]
	incr o
}

#
# Method tests which are successful.
#
foreach test {
    {{.sd show 3/3/1960} {}}
    {{.sd get -string} "03 March 1960"}} {
	set method [lindex [lindex $test 0] 1]
	test Spindate-3.$m "object methods, $method" {
	    list [catch {eval [lindex $test 0]} msg] $msg
	} [list 0 [lindex $test 1]]
	update 
	incr m
}

foreach test {
    {{.sd show bogus} {bad date: "bogus", must be a valid date string, clock clicks value or the keyword now}}
    {{.sd get bogus} {bad format option "bogus": should be -string or -clicks}}} {
	set method [lindex [lindex $test 0] 1]
	test ScrolledListBox-3.$m "object methods, $method" {
	    list [catch {eval [lindex $test 0]} msg] $msg
	} [list 1 [lindex $test 1]]
	incr m
}

#
# Conclusion of constrcution/destruction tests
#
test Spindate-1.$c {Spindate destruction} {
    destroy .sd
    update 
} {}

incr c

test Spindate-1.$c {Spindate construction} {
    iwidgets::spindate .sd -monthformat brief
    pack .sd -padx 10 -pady 10 -fill both -expand yes
    update 
} {}

incr c

test Spindate-1.$c {Spindate destruction} {
    destroy .sd
    update 
} {}

incr c

test Spindate-1.$c {Spindate destruction} {
    iwidgets::spindate .sd
    pack .sd
    destroy .sd
    update 
} {}

::tcltest::cleanupTests
exit
@


1.1
log
@Initial revision
@
text
@@


1.1.1.1
log
@imported itcl 3.2.1
@
text
@@
