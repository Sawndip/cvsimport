head	1.2;
access;
symbols
	insight_7_6-2013-04-10-branchpoint:1.2
	gdb_7_6-branch:1.2.0.12
	gdb_7_5-branch:1.2.0.10
	gdb_7_4-branch:1.2.0.8
	gdb_7_3-branch:1.2.0.6
	gdb_7_1-branch:1.2.0.4
	gdb_7_0-branch:1.2.0.2
	arc-sim-20090309:1.1.1.1
	arc-insight_6_8-branch:1.1.1.1.0.16
	arc-insight_6_8-branchpoint:1.1.1.1
	insight_6_8-branch:1.1.1.1.0.14
	insight_6_8-branchpoint:1.1.1.1
	ITCL_3_3:1.1.1.1
	gdb_6_8-branch:1.1.1.1.0.12
	insight_6_6-20070208-release:1.1.1.1
	gdb_6_6-branch:1.1.1.1.0.10
	gdb_6_6-2006-11-15-branchpoint:1.1.1.1
	insight_6_5-20061003-release:1.1.1.1
	gdb_6_5-branch:1.1.1.1.0.8
	gdb_6_5-2006-05-14-branchpoint:1.1.1.1
	gdb_6_4-branch:1.1.1.1.0.6
	gdb_6_4-2005-11-01-branchpoint:1.1.1.1
	gdb_6_1-2004-04-05-release:1.1.1.1
	gdb_6_1-branch:1.1.1.1.0.4
	gdb_6_1-2004-03-01-gmt-branchpoint:1.1.1.1
	gdb_6_0-2003-10-04-release:1.1.1.1
	gdb_6_0-branch:1.1.1.1.0.2
	gdb_6_0-2003-06-23-branchpoint:1.1.1.1
	ITCL3_2_1:1.1.1.1
	NET:1.1.1;
locks; strict;
comment	@# @;
expand	@o@;


1.2
date	2008.07.22.20.32.47;	author kseitz;	state Exp;
branches;
next	1.1;

1.1
date	2003.01.21.20.42.55;	author hunt;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2003.01.21.20.42.55;	author hunt;	state Exp;
branches;
next	;


desc
@@


1.2
log
@touch all sources for Itcl 3.3/Iwidgets 4.0.1 upgrade
@
text
@#
# CanvasPrintDialog v1.5
# ----------------------------------------------------------------------
# Implements a print dialog for printing the contents of a canvas widget
# to a printer or a file. It is possible to specify page orientation, the
# number of pages to print the image on and if the output should be
# stretched to fit the page. The CanvasPrintDialog is derived from the
# Dialog class and is composed of a CanvasPrintBox with attributes set to
# manipulate the dialog buttons.
# 
# ----------------------------------------------------------------------
#  AUTHOR: Tako Schotanus              EMAIL: Tako.Schotanus@@bouw.tno.nl
# ----------------------------------------------------------------------
#				   Copyright (c) 1995  Tako Schotanus
# ======================================================================
# Permission is hereby granted, without written agreement and without
# license or royalty fees, to use, copy, modify, and distribute this
# software and its documentation for any purpose, provided that the
# above copyright notice and the following two paragraphs appear in
# all copies of this software.
# 
# IN NO EVENT SHALL THE COPYRIGHT HOLDER BE LIABLE TO ANY PARTY FOR
# DIRECT, INDIRECT, SPECIAL, INCIDENTAL, OR CONSEQUENTIAL DAMAGES 
# ARISING OUT OF THE USE OF THIS SOFTWARE AND ITS DOCUMENTATION, EVEN 
# IF THE COPYRIGHT HOLDER HAS BEEN ADVISED OF THE POSSIBILITY OF SUCH 
# DAMAGE.
#
# THE COPYRIGHT HOLDER SPECIFICALLY DISCLAIMS ANY WARRANTIES, INCLUDING, 
# BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND 
# FITNESS FOR A PARTICULAR PURPOSE.  THE SOFTWARE PROVIDED HEREUNDER IS
# ON AN "AS IS" BASIS, AND THE COPYRIGHT HOLDER HAS NO OBLIGATION TO
# PROVIDE MAINTENANCE, SUPPORT, UPDATES, ENHANCEMENTS, OR MODIFICATIONS.
# ======================================================================

#
# Option database default resources:
#
option add *Canvasprintdialog.filename "canvas.ps" widgetDefault
option add *Canvasprintdialog.hPageCnt 1 widgetDefault
option add *Canvasprintdialog.orient landscape widgetDefault
option add *Canvasprintdialog.output printer widgetDefault
option add *Canvasprintdialog.pageSize A4 widgetDefault
option add *Canvasprintdialog.posterize 0 widgetDefault
option add *Canvasprintdialog.printCmd lpr widgetDefault
option add *Canvasprintdialog.printRegion "" widgetDefault
option add *Canvasprintdialog.vPageCnt 1 widgetDefault
option add *Canvasprintdialog.title "Canvas Print Dialog" widgetDefault
option add *Canvasprintdialog.master "." widgetDefault

#
# Usual options.
#
itk::usual Canvasprintdialog {
	keep -background -cursor -foreground -modality 
}

# ------------------------------------------------------------------
# CANVASPRINTDIALOG
# ------------------------------------------------------------------
itcl::class iwidgets::Canvasprintdialog {
	inherit iwidgets::Dialog

	constructor {args} {}   
	destructor {}

	method deactivate {args} {}
	method getoutput {} {}
	method setcanvas {canv} {}
	method refresh {} {}
	method print {} {}
}

#
# Provide a lowercased access method for the Canvasprintdialog class.
# 
proc ::iwidgets::canvasprintdialog {args} {
	uplevel ::iwidgets::Canvasprintdialog $args
}

# ------------------------------------------------------------------
# CONSTRUCTOR 
#
# Create new file selection dialog.
# ------------------------------------------------------------------
itcl::body iwidgets::Canvasprintdialog::constructor {args} {
	component hull configure -borderwidth 0

	# 
	# Instantiate a file selection box widget.
	#
	itk_component add cpb {
		iwidgets::Canvasprintbox $itk_interior.cpb
	} {
		usual
		keep -printregion -output -printcmd -filename -pagesize \
		     -orient -stretch -posterize -hpagecnt -vpagecnt
	}
	pack $itk_component(cpb) -fill both -expand yes

	#
	# Hide the apply and help buttons.
	#
	buttonconfigure OK -text Print
	buttonconfigure Apply -command [itcl::code $this refresh] -text Refresh
	hide Help

	eval itk_initialize $args
}   

# ------------------------------------------------------------------
# METHOD: deactivate
#
# Redefines method of dialog shell class. Stops the drawing of the
# thumbnail (when busy) upon deactivation of the dialog.
# ------------------------------------------------------------------
itcl::body iwidgets::Canvasprintdialog::deactivate {args} {
	$itk_component(cpb) stop
	return [eval Shell::deactivate $args]
}

# ------------------------------------------------------------------
# METHOD: getoutput
#
# Thinwrapped method of canvas print box class.
# ------------------------------------------------------------------
itcl::body iwidgets::Canvasprintdialog::getoutput {} {
	return [$itk_component(cpb) getoutput]
}

# ------------------------------------------------------------------
# METHOD: setcanvas
#
# Thinwrapped method of canvas print box class.
# ------------------------------------------------------------------
itcl::body iwidgets::Canvasprintdialog::setcanvas {canv} {
	return [$itk_component(cpb) setcanvas $canv]
}

# ------------------------------------------------------------------
# METHOD: refresh
#
# Thinwrapped method of canvas print box class.
# ------------------------------------------------------------------
itcl::body iwidgets::Canvasprintdialog::refresh {} {
	return [$itk_component(cpb) refresh]
}

# ------------------------------------------------------------------
# METHOD: print
#
# Thinwrapped method of canvas print box class.
# ------------------------------------------------------------------
itcl::body iwidgets::Canvasprintdialog::print {} {
	return [$itk_component(cpb) print]
}
@


1.1
log
@Initial revision
@
text
@@


1.1.1.1
log
@imported itcl 3.2.1
@
text
@@
