head	1.5;
access;
symbols
	arc-sim-20090309:1.3
	arc-insight_6_8-branch:1.3.0.16
	arc-insight_6_8-branchpoint:1.3
	insight_6_8-branch:1.3.0.14
	insight_6_8-branchpoint:1.3
	gdb_6_8-branch:1.3.0.12
	insight_6_6-20070208-release:1.3
	gdb_6_6-branch:1.3.0.10
	gdb_6_6-2006-11-15-branchpoint:1.3
	insight_6_5-20061003-release:1.3
	gdb_6_5-branch:1.3.0.8
	gdb_6_5-2006-05-14-branchpoint:1.3
	gdb_6_4-branch:1.3.0.6
	gdb_6_4-2005-11-01-branchpoint:1.3
	gdb_6_1-2004-04-05-release:1.3
	gdb_6_1-branch:1.3.0.4
	gdb_6_1-2004-03-01-gmt-branchpoint:1.3
	gdb_6_0-2003-10-04-release:1.3
	gdb_6_0-branch:1.3.0.2
	gdb_6_0-2003-06-23-branchpoint:1.3
	gdb_5_3-2002-12-12-release:1.1.1.1
	tcltk840-20020924-branch:1.2.0.2
	tcltk840-20020924-branchpoint:1.2
	gdb_5_3-branch:1.1.1.1.0.12
	gdb_5_3-2002-09-04-branchpoint:1.1.1.1
	gdb_5_2_1-2002-07-23-release:1.1.1.1
	gdb_5_2-2002-04-29-release:1.1.1.1
	gdb_5_2-branch:1.1.1.1.0.10
	gdb_5_2-2002-03-03-branchpoint:1.1.1.1
	gdb_5_1_1-2002-01-24-release:1.1.1.1
	cygnus_cvs_20020108_pre:1.1.1.1
	gdb_5_1_0_1-2002-01-03-branch:1.1.1.1.0.8
	gdb_5_1_0_1-2002-01-03-branchpoint:1.1.1.1
	gdb_5_1-2001-11-21-release:1.1.1.1
	gdb_s390-2001-09-26-branch:1.1.1.1.0.6
	gdb_s390-2001-09-26-branchpoint:1.1.1.1
	ITCL_TCL_8_3:1.1.1.1
	NET:1.1.1
	gdb_5_1-2001-07-29-branch:1.1.1.1.0.4
	gdb_5_1-2001-07-29-branchpoint:1.1.1.1
	insight-precleanup-2001-01-01:1.1.1.1
	gdb_5_0-2000-05-19-release:1.1.1.1
	gdb_4_18_2-2000-05-18-release:1.1.1.1
	gdb_4_95_1-2000-05-11-snapshot:1.1.1.1
	gdb_4_95_0-2000-04-27-snapshot:1.1.1.1
	gdb_5_0-2000-04-10-branch:1.1.1.1.0.2
	gdb_5_0-2000-04-10-branchpoint:1.1.1.1
	repo-unification-2000-02-06:1.1.1.1
	insight-2000-02-04:1.1.1.1
	SNAPSHOT:1.1.1;
locks; strict;
comment	@# @;
expand	@o@;


1.5
date	2008.07.23.22.44.52;	author kseitz;	state dead;
branches;
next	1.4;

1.4
date	2008.07.22.20.32.46;	author kseitz;	state Exp;
branches;
next	1.3;

1.3
date	2003.01.21.20.40.31;	author hunt;	state Exp;
branches;
next	1.2;

1.2
date	2002.09.24.18.35.36;	author kseitz;	state Exp;
branches;
next	1.1;

1.1
date	2000.02.07.00.19.46;	author jsm;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2000.02.07.00.19.46;	author jsm;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2008.07.23.22.13.41;	author kseitz;	state dead;
branches;
next	;


desc
@@


1.5
log
@        Import of Itcl 3.3.
        * itcl/configure.in, itk/configure.in, iwidgets/configure.in:
        Replace with configure.ac.
        * itcl/configure, itk/configure, iwidgets/configure: Regenerate.
        * configure.ac, Makefile.am, Makefile.in: New files.
        * README: "New" file.
        * aclocal.m4: Regenerate.
        * itcl/Makefile.in (RANLIB): Replace with RANLIB_LIB so
        that the toplevel build does not override this variable.
        * itk/Makefile.in (RANLIB): Likewise.
        * itcl/tclconfig/tcl.m4 (TEA_PATH_TCLCONFIG): Look for itclConfig.sh
        in the platform-specific location (unix or win).
        (TEA_PATH_TKCONFIG): Likewise.
        (TEA_MAKE_LIB): Even on windows, GCC libraries must start with "lib".
        * itk/tclconfig.m4: Copy of itcl/tcl.m4.
        * iwidgets/tcl.m4: Remove.
        * iwidgets/tclconfig: New directory.
        * iwidgets/tclconfig/tcl.m4, iwidgets/tclconfig/install-sh: Copies
        of itcl/tclconfig files.
        * iwidgets/Makefile.in (MKINSTALLDIRS): Use mkdir -p.
        * iwidgets/configure.ac (PACKAGE): Rename to PACKAGE_NAME.
        Call TEA_INIT, add AC_CONFIG_AUX_DIR and AC_PROG_INSTALL.
        Use TEA_* instead of SC_* macros.
        Search a few more directories for the itcl and itk libraries.
@
text
@## This file is CYGNUS LOCAL.  It is a copy of makefile.vc modified for
# GNU make.
#  
# Visual C++ 4.0 makefile
#
# Copyright (c) 1993-1996 Lucent Technologies
# based on original from
# Copyright (c) 1995-1996 by Sun Microsystems, Inc.	
#
# See the file "license.terms" for information on usage and redistribution
# of this file, and for a DISCLAIMER OF ALL WARRANTIES.

prefix = @@prefix@@
exec_prefix = @@exec_prefix@@
VPATH = @@srcdir@@:@@srcdir@@/../generic:@@srcdir@@/../unix
srcdir = @@srcdir@@

CC = @@CC@@
CFLAGS = @@CFLAGS@@
NM = @@NM@@
AS = @@AS@@
LD = @@LD@@
DLLTOOL = @@DLLTOOL@@
WINDRES = @@WINDRES@@

DLL_LDFLAGS = @@DLL_LDFLAGS@@
DLL_LDLIBS  = @@DLL_LDLIBS@@


INSTALL		=	@@INSTALL@@
INSTALL_PROGRAM =	@@INSTALL_PROGRAM@@
INSTALL_DATA	=	@@INSTALL_DATA@@

ITCL_VERSION = @@ITCL_VERSION@@
VERSION = $(ITCL_VERSION)

ITKLIB		= libitk$(VERSION).a
ITKDLL		= cygitk$(VERSION).dll
ITKWISH		= cygitkwish$(VERSION).exe
ITKTEST		= itktest.exe

TCLLIBDIR	= @@TCL_BIN_DIR@@
TCLLIB		= @@TCL_LIB_FILE@@
TKLIBDIR	= @@TK_BIN_DIR@@
TKLIB		= @@TK_LIB_FILE@@
ITCLLIBDIR	= @@ITCL_BIN_DIR@@
ITCLLIB		= @@ITCL_LIB_FILE@@

# Project directories
#
# ROOT = top of source tree
# TMPDIR = location where .obj files should be stored during build

ROOT		= $(srcdir)/..
TMPDIR		= .

######################################################################
# Link flags
######################################################################

conlflags = $(lflags) -Wl,--subsystem,console -mwindows
guilflags = $(lflags) -mwindows
dlllflags = $(lflags)

baselibs   = -lkernel32 $(optlibs) -ladvapi32
winlibs    = $(baselibs) -luser32 -lgdi32 -lcomdlg32 -lwinspool
guilibs	   = $(libc) $(winlibs)

guilibsdll = $(libcdll) $(winlibs)

######################################################################
# Compile flags
######################################################################

# Comment the following line to compile with symbols

NODEBUG=1

# uncomment the following two lines to compile with TCL_MEM_DEBUG
#DEBUGDEFINES	=-DTCL_MEM_DEBUG


WINDIR          = $(ROOT)/win
GENERICDIR	= $(ROOT)/generic

TCLSRCDIR     = @@TCL_SRC_DIR@@
TKSRCDIR      = @@TK_SRC_DIR@@
ITCLSRCDIR    = @@ITCL_SRC_DIR@@

TCL_INCLUDES  = -I$(TCLSRCDIR)/generic -I$(TCLSRCDIR)/win
TK_INCLUDES   = -I$(TKSRCDIR)/generic -I$(TKSRCDIR)/win -I$(TKSRCDIR)/xlib
ITCL_INCLUDES = -I$(ITCLSRCDIR)/generic -I$(ITCLSRCDIR)/win
ITK_INCLUDES	= -I$(GENERICDIR) -I$(WINDIR) $(ITCL_INCLUDES) \
		$(TCL_INCLUDES) $(TK_INCLUDES) 

ITK_DEFINES	= -D__WIN32__ $(DEBUGDEFINES) 
ITK_CFLAGS		= $(ITK_INCLUDES) $(ITK_DEFINES) $(CFLAGS)

ITKWISHOBJS = \
	$(TKLIBDIR)/tkConsole.o \
	$(TMPDIR)/winMain.o

TKTESTOBJS = \
	$(TMPDIR)/tkConsole.o \
	$(TMPDIR)/tkTest.o \
	$(TMPDIR)/tkSquare.o \
	$(TMPDIR)/testMain.o

ITKOBJS = \
	$(TMPDIR)/itk_archetype.o \
	$(TMPDIR)/itk_cmds.o \
	$(TMPDIR)/itk_option.o \
	$(TMPDIR)/itk_util.o \
	$(TMPDIR)/dllEntryPoint.o

ITKDLL	= itk$(VERSION).dll
ITKLIB	= libitk$(VERSION).a
ITKWISH = itkwish.exe
ITKTEST = tktest.exe
DUMPEXTS = # $(TCLLIBDIR)/dumpexts.exe

CPU		   = i386

#
# Targets
#

all:    $(ITKDLL) $(ITKWISH)
test:	$(ITKDLL) $(ITKTEST)

install: install-binaries install-libraries
 
install-binaries: $(ITKDLL) $(ITKLIB) $(ITKWISH)
	@@for i in $(LIB_INSTALL_DIR) $(BIN_INSTALL_DIR) ; \
	    do \
	    if [ ! -d $$i ] ; then \
		echo "Making directory $$i"; \
		mkdir $$i; \
		chmod 755 $$i; \
		else true; \
		fi; \
	    done;
	@@echo "Installing $(ITKLIB)"
	@@$(INSTALL_DATA) $(ITKLIB) $(LIB_INSTALL_DIR)/$(ITKLIB)
	@@chmod 555 $(LIB_INSTALL_DIR)/$(ITKLIB)
	@@echo "Installing wish"
	@@$(INSTALL_PROGRAM) $(ITKWISH) $(BIN_INSTALL_DIR)/$(ITKWISH)
	@@echo "Installing tkConfig.sh"
	@@$(INSTALL_DATA) ../unix/tkConfig.sh $(LIB_INSTALL_DIR)/tkConfig.sh

install-libraries:
	@@echo "Installing DLL"
	@@$(INSTALL_DATA) $(ITKDLL) $(BIN_INSTALL_DIR)/$(ITKDLL)
	@@for i in $(INSTALL_ROOT)@@datadir@@ $(INCLUDE_INSTALL_DIR) \
		$(SCRIPT_INSTALL_DIR) $(INSTALL_ROOT)@@exec_prefix@@ \
		$(INSTALL_ROOT)@@exec_prefix@@/@@host_alias@@ \
		$(INSTALL_ROOT)@@exec_prefix@@/@@host_alias@@/include \
		$(X11_INCLUDE_INSTALL_DIR) ; \
	    do \
	    if [ ! -d $$i ] ; then \
		echo "Making directory $$i"; \
		mkdir $$i; \
		chmod 755 $$i; \
		else true; \
		fi; \
	    done;
	@@echo "Installing tk.h"
	@@$(INSTALL_DATA) $(GENERICDIR)/tk.h $(INCLUDE_INSTALL_DIR)/tk.h
	for i in $(XLIBDIR)/X11/*.h; \
	    do \
	    echo "Installing $$i"; \
	    $(INSTALL_DATA) $$i $(X11_INCLUDE_INSTALL_DIR); \
	    done;
	for i in $(ROOT)/library/*.tcl $(ROOT)/library/tclIndex $(ROOT)/library/prolog.ps $(ROOT)/unix/tkAppInit.c; \
	    do \
	    echo "Installing $$i"; \
	    $(INSTALL_DATA) $$i $(SCRIPT_INSTALL_DIR); \
	    done;

install-minimal:
	@@echo "Installing DLL"
	@@$(INSTALL_DATA) $(ITKDLL) $(BIN_INSTALL_DIR)/$(ITKDLL)
	@@for i in $(INSTALL_ROOT)@@datadir@@ $(SCRIPT_INSTALL_DIR) ; \
	    do \
	    if [ ! -d $$i ] ; then \
		echo "Making directory $$i"; \
		mkdir $$i; \
		chmod 755 $$i; \
		else true; \
		fi; \
	    done;
	for i in $(ROOT)/library/*.tcl $(ROOT)/library/tclIndex $(ROOT)/library/prolog.ps; \
	    do \
	    echo "Installing $$i"; \
	    $(INSTALL_DATA) $$i $(SCRIPT_INSTALL_DIR); \
	    done;

$(TMPDIR)/itkcyg.def: $(DUMPEXTS) $(ITKOBJS)
	echo 'EXPORTS' > tmp.def
	-for o in $(ITKOBJS); do \
	  $(NM) --extern-only --defined-only $$o | sed -e 's/[^ ]* [^ ]* //' -e 's/^_//' | fgrep -v DllEntryPoint | fgrep -v DllMain | fgrep -v impure_ptr >> tmp.def; \
	done
	mv tmp.def $(TMPDIR)/itkcyg.def

$(ITKDLL): $(ITKOBJS) $(TMPDIR)/itkcyg.def
	$(CC) -s $(DLL_LDFLAGS) -Wl,--base-file,itk.base  \
		-o $(ITKDLL) $(ITKOBJS)  \
		$(TKLIBDIR)/$(TKLIB) $(ITCLLIBDIR)/$(ITCLLIB) $(TCLLIBDIR)/$(TCLLIB) \
		$(DLL_LDLIBS) -mwindows  -Wl,-e,_DllMain@@12  \
		-Wl,--image-base,0x66600000
	$(DLLTOOL) --as=$(AS) --dllname $(ITKDLL) --def $(TMPDIR)/itkcyg.def \
		--base-file itk.base --output-exp itk.exp
	$(CC) -s $(DLL_LDFLAGS) -Wl,--base-file,itk.base -Wl,itk.exp \
		-o $(ITKDLL) $(ITKOBJS)  \
		$(TKLIBDIR)/$(TKLIB) $(ITCLLIBDIR)/$(ITCLLIB) $(TCLLIBDIR)/$(TCLLIB) \
		$(DLL_LDLIBS) -mwindows -Wl,-e,_DllMain@@12 \
		-Wl,--image-base,0x66600000
	$(DLLTOOL) --as=$(AS) --dllname $(ITKDLL) --def $(TMPDIR)/itkcyg.def \
		--base-file itk.base --output-exp itk.exp
	$(CC) $(DLL_LDFLAGS) -Wl,itk.exp -o $(ITKDLL) $(ITKOBJS) \
		$(TKLIBDIR)/$(TKLIB) $(ITCLLIBDIR)/$(ITCLLIB) $(TCLLIBDIR)/$(TCLLIB) \
		$(DLL_LDLIBS) -mwindows \
		-Wl,-e,_DllMain@@12 -Wl,--image-base,0x66600000

$(ITKLIB): $(TMPDIR)/itkcyg.def
	$(DLLTOOL) --as=$(AS) --dllname $(ITKDLL) --def $(TMPDIR)/itkcyg.def \
		--output-lib $(ITKLIB)

$(ITKWISH): $(ITKWISHOBJS) $(ITKLIB) $(TMPDIR)/itkwishres.o
	$(CC) $(ldebug) $(guilflags) $(ITKWISHOBJS) $(ITK_CFLAGS) $(TMPDIR)/itkwishres.o \
		$(ITKLIB) $(TKLIBDIR)/$(TKLIB) \
		$(ITCLLIBDIR)/$(ITCLLIB) $(TCLLIBDIR)/$(TCLLIB) \
		$(guilibsdll) \
		-o $(ITKWISH)
 
$(ITKTEST): $(ITKTESTOBJS) $(ITKLIB) $(TMPDIR)/itkwishres.o
	$(CC) $(ldebug) $(guilflags) $(WISHOBJS) $(ITK_CFLAGS) $(TMPDIR)/itkwishres.o \
		$(ITKLIB) $(TKLIBDIR)/$(TKLIB) \
		$(ITCLLIBDIR)/$(ITCLLIB) $(TCLLIBDIR)/$(TCLLIB) \
		$(guilibsdll) \
		-o $(ITKTEST)
 
#
# Special case object file targets
#

$(TMPDIR)/testMain.o: $(ROOT)/win/winMain.c
	$(CC) -c $(ITK_CFLAGS) -DTK_TEST -o $@@ $?

$(TMPDIR)/winMain.o: $(ROOT)/win/winMain.c
	$(CC) -c $(ITK_CFLAGS) -DTK_TEST -o $@@ $?

#
# Implicit rules
#

$(TMPDIR)/%.o: $(GENERICDIR)/%.c
	$(CC) -c $(ITK_CFLAGS) -o $@@ $<

itkres.o: $(ROOT)/win/rc/itk.rc
	$(WINDRES) --include $(ROOT)/win/rc --include $(ROOT)/generic \
		--include $(ITCLSRCDIR)/generic \
		--include $(TCLSRCDIR)/generic --include $(TKSRCDIR)/generic \
		--define VS_VERSION_INFO=1 $(ROOT)/win/rc/itk.rc itkres.o

itkwishres.o: $(ROOT)/win/rc/itkwish.rc
	$(WINDRES) --include $(ROOT)/win/rc --include $(ITCLSRCDIR)/generic \
		--include $(TCLSRCDIR)/generic --include $(TKSRCDIR)/generic\
		--include $(ROOT)/generic --define VS_VERSION_INFO=1  \
		$(ROOT)/win/rc/itkwish.rc itkwishres.o


Makefile: $(WINDIR)/Makefile.in config.status
	$(SHELL) config.status

config.status: $(WINDIR)/configure
	./config.status --recheck
@


1.4
log
@touch all sources for Itcl 3.3/Iwidgets 4.0.1 upgrade
@
text
@@


1.3
log
@touched all sources to ease next import
@
text
@@


1.2
log
@touched all sources to ease next import
@
text
@@


1.1
log
@Initial revision
@
text
@@


1.1.1.1
log
@import insight-2000-02-04 snapshot (2nd try)
@
text
@@


1.1.1.2
log
@Remove obsolete files.
@
text
@@

