head	1.5;
access;
symbols
	insight_7_6-2013-04-10-branchpoint:1.5
	gdb_7_6-branch:1.5.0.12
	gdb_7_5-branch:1.5.0.10
	gdb_7_4-branch:1.5.0.8
	gdb_7_3-branch:1.5.0.6
	gdb_7_1-branch:1.5.0.4
	gdb_7_0-branch:1.5.0.2
	arc-sim-20090309:1.4
	arc-insight_6_8-branch:1.4.0.16
	arc-insight_6_8-branchpoint:1.4
	insight_6_8-branch:1.4.0.14
	insight_6_8-branchpoint:1.4
	ITCL_3_3:1.1.1.2
	gdb_6_8-branch:1.4.0.12
	insight_6_6-20070208-release:1.4
	gdb_6_6-branch:1.4.0.10
	gdb_6_6-2006-11-15-branchpoint:1.4
	insight_6_5-20061003-release:1.4
	gdb_6_5-branch:1.4.0.8
	gdb_6_5-2006-05-14-branchpoint:1.4
	gdb_6_4-branch:1.4.0.6
	gdb_6_4-2005-11-01-branchpoint:1.4
	gdb_6_1-2004-04-05-release:1.4
	gdb_6_1-branch:1.4.0.4
	gdb_6_1-2004-03-01-gmt-branchpoint:1.4
	gdb_6_0-2003-10-04-release:1.4
	gdb_6_0-branch:1.4.0.2
	gdb_6_0-2003-06-23-branchpoint:1.4
	ITCL3_2_1:1.1.1.2
	gdb_5_3-2002-12-12-release:1.1.1.1
	tcltk840-20020924-branch:1.2.0.2
	tcltk840-20020924-branchpoint:1.2
	ITCL_3_2_1:1.1.1.2
	gdb_5_3-branch:1.1.1.1.0.12
	gdb_5_3-2002-09-04-branchpoint:1.1.1.1
	gdb_5_2_1-2002-07-23-release:1.1.1.1
	gdb_5_2-2002-04-29-release:1.1.1.1
	gdb_5_2-branch:1.1.1.1.0.10
	gdb_5_2-2002-03-03-branchpoint:1.1.1.1
	gdb_5_1_1-2002-01-24-release:1.1.1.1
	cygnus_cvs_20020108_pre:1.1.1.1
	gdb_5_1_0_1-2002-01-03-branch:1.1.1.1.0.8
	gdb_5_1_0_1-2002-01-03-branchpoint:1.1.1.1
	gdb_5_1-2001-11-21-release:1.1.1.1
	gdb_s390-2001-09-26-branch:1.1.1.1.0.6
	gdb_s390-2001-09-26-branchpoint:1.1.1.1
	ITCL_TCL_8_3:1.1.1.1
	NET:1.1.1
	gdb_5_1-2001-07-29-branch:1.1.1.1.0.4
	gdb_5_1-2001-07-29-branchpoint:1.1.1.1
	insight-precleanup-2001-01-01:1.1.1.1
	gdb_5_0-2000-05-19-release:1.1.1.1
	gdb_4_18_2-2000-05-18-release:1.1.1.1
	gdb_4_95_1-2000-05-11-snapshot:1.1.1.1
	gdb_4_95_0-2000-04-27-snapshot:1.1.1.1
	gdb_5_0-2000-04-10-branch:1.1.1.1.0.2
	gdb_5_0-2000-04-10-branchpoint:1.1.1.1
	repo-unification-2000-02-06:1.1.1.1
	insight-2000-02-04:1.1.1.1
	SNAPSHOT:1.1.1;
locks; strict;
comment	@# @;
expand	@o@;


1.5
date	2008.07.22.20.32.45;	author kseitz;	state Exp;
branches;
next	1.4;

1.4
date	2003.01.21.21.04.26;	author hunt;	state Exp;
branches;
next	1.3;

1.3
date	2003.01.21.20.40.29;	author hunt;	state Exp;
branches;
next	1.2;

1.2
date	2002.09.24.18.35.34;	author kseitz;	state Exp;
branches;
next	1.1;

1.1
date	2000.02.07.00.19.46;	author jsm;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2000.02.07.00.19.46;	author jsm;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2002.09.24.22.42.44;	author kseitz;	state Exp;
branches;
next	;


desc
@@


1.5
log
@touch all sources for Itcl 3.3/Iwidgets 4.0.1 upgrade
@
text
@#!/bin/sh
#\
exec wish8.4 "$0"
# ======================================================================
# Simple text editor built with [incr Widgets]
# ----------------------------------------------------------------------
#   AUTHOR:  Michael J. McLennan
#    CLASS:  Object-Oriented Programming with [incr Tcl]
# ======================================================================
package require Iwidgets 4.0

option add *edit.width 5i startupFile
option add *edit.height 4i startupFile
option add *Fileselectiondialog.width 4i startupFile
option add *Fileselectiondialog.height 5i startupFile

# ----------------------------------------------------------------------
set FileWindows 0

# ----------------------------------------------------------------------
#  Dialog boxes
# ----------------------------------------------------------------------
iwidgets::messagedialog .notice -title "itkedit: Notice" \
    -bitmap info -buttonboxpos e -modality application
.notice hide OK
.notice hide Help
.notice buttonconfigure Cancel -text "Dismiss"

iwidgets::messagedialog .confirm -title "itkedit: Confirm" \
    -bitmap questhead -modality application
.confirm hide Help
.confirm buttonconfigure OK -text "Yes"
.confirm buttonconfigure Cancel -text "No"

iwidgets::fileselectiondialog .files -title "itkedit: Files" \
    -childsitepos s -modality application
.files hide Help

set PaneMenu "[.files childsite].panes"
iwidgets::optionmenu $PaneMenu -labeltext "Edit Window:"
pack $PaneMenu -pady 6

# ----------------------------------------------------------------------
# USAGE:  file_load
#
# Initiates the process of loading a new text file for editing.
# Pops up a Fileselectiondialog, allowing the user to select a
# file for editing.  If the user pushes the "load" button, the
# file is loaded.
# ----------------------------------------------------------------------
proc file_load {} {
    global FileName PaneMenu

    .files buttonconfigure OK -text "Load"
    if {[.files activate]} {
        set fname [.files get]
        set cmd {
            set fid [open $fname r]
            set text [read $fid]
            close $fid
        }
        if {[catch $cmd err] != 0} {
            .notice configure -bitmap error \
                -text "Cannot load file \"$fname\":\n$err"
            .notice activate
            return
        }

        set pane [$PaneMenu get]
        set win [.edit childsite $pane]
        clear_text $win
        $win.text insert end $text
        $win.text configure -labeltext "file: $fname"

        set FileName($win) $fname
    }
}

# ----------------------------------------------------------------------
# USAGE:  file_save_as
#
# Initiates the process of saving the current text into a particular
# file.  Pops up a Fileselectiondialog, allowing the user to select
# a file for saving.  If the user pushes the "save" button, the
# file is saved.
# ----------------------------------------------------------------------
proc file_save_as {} {
    global FileName PaneMenu

    .files buttonconfigure OK -text "Save"
    if {[.files activate]} {
        set pane [$PaneMenu get]
        set win [.edit childsite $pane]

        set FileName($win) [.files get]

        file_save $win
    }
}

# ----------------------------------------------------------------------
# USAGE:  file_save <win>
#
# Saves the context of <win> into its associated file.  Does the
# dirty work to finish the file_save_as operation.
# ----------------------------------------------------------------------
proc file_save {win} {
    global FileName FileChanged

    set cmd {
        set fid [open $FileName($win) w]
        puts $fid [$win.text get 1.0 end]
        close $fid
        set FileChanged($win) 0
        $win.text configure -labeltext "file: $FileName($win)"
    }
    if {[catch $cmd err] != 0} {
        .notice configure -bitmap error \
            -text "Cannot save file \"$FileName($win)\":\n$err"
        .notice activate
    }
}

# ----------------------------------------------------------------------
# USAGE:  clear_text ?<win>?
#
# Clears the text area associated with <win>, making sure to save
# any pending changes.  If no <win> is specified, then all text
# areas are cleared.
# ----------------------------------------------------------------------
proc clear_text {{areas ""}} {
    global FileName FileChanged FileWindows

    if {$areas == ""} {
        for {set i 0} {$i < $FileWindows} {incr i} {
            set pane "area #[expr $i+1]"
            lappend areas [.edit childsite $pane]
        }
    }

    foreach win $areas {
        if {$FileChanged($win)} {
            set fname [file tail $FileName($win)]
            .confirm configure -text "File \"$fname\" has changed.\nSave changes?"
            if {[.confirm activate]} {
                file_save $win
            }
        }
        $win.text delete 1.0 end
        set FileChanged($win) 0
    }
}

# ----------------------------------------------------------------------
# USAGE:  split_view
#
# Adds another editing pane to the current editor.
# ----------------------------------------------------------------------
proc split_view {} {
    global FileName FileChanged FileWindows PaneMenu

    set pane "area #[incr FileWindows]"
    .edit add $pane -minimum 100
    $PaneMenu insert end $pane

    set win [.edit childsite $pane]

    set FileName($win) untitled.txt
    set FileChanged($win) 0

    iwidgets::scrolledtext $win.text -wrap none -labeltext "file: $FileName($win)" \
        -hscrollmode none -vscrollmode dynamic -visibleitems 1x1
    pack $win.text -expand yes -fill both

    bind [$win.text component text] <KeyPress> "
        set FileChanged($win) 1
    "
}

frame .mbar -borderwidth 2 -relief raised
pack .mbar -side top -fill x

# ----------------------------------------------------------------------
#  FILE menu
# ----------------------------------------------------------------------
menubutton .mbar.file -text "File" -underline 0 -menu .mbar.file.menu
pack .mbar.file -side left -padx 4

menu .mbar.file.menu
.mbar.file.menu add command -label "Load..." \
    -accelerator "  ^L" -underline 0 -command file_load
bind . <Control-KeyPress-l> { .mbar.file.menu invoke "Load..." }

.mbar.file.menu add command -label "Save As..." \
    -accelerator "  ^S" -underline 0 -command file_save_as
bind . <Control-KeyPress-s> { .mbar.file.menu invoke "Save As..." }

.mbar.file.menu add separator
.mbar.file.menu add command -label "Quit" \
    -accelerator "  ^Q" -underline 0 -command {clear_text; exit}
bind . <Control-KeyPress-q> { .mbar.file.menu invoke Quit }

# ----------------------------------------------------------------------
#  VIEW menu
# ----------------------------------------------------------------------
menubutton .mbar.view -text "View" -underline 0 -menu .mbar.view.menu
pack .mbar.view -side left -padx 4

menu .mbar.view.menu
.mbar.view.menu add command -label "Split" \
    -underline 0 -command split_view

# ----------------------------------------------------------------------
#  Editor
# ----------------------------------------------------------------------
iwidgets::panedwindow .edit -orient horizontal
pack .edit -expand yes -fill both

split_view

wm title . "itkedit"
wm protocol . WM_DELETE_WINDOW { .mbar.file.menu invoke Quit }

after idle {
    update idletasks
    wm minsize . [winfo reqwidth .] [winfo reqheight .]
}


@


1.4
log
@Updated to itcl 3.2.1.
@
text
@@


1.3
log
@touched all sources to ease next import
@
text
@d3 1
a3 1
exec itkwish $0
d10 1
a10 1
package require Iwidgets 2.1
d23 1
a23 1
messagedialog .notice -title "itkedit: Notice" \
d29 1
a29 1
messagedialog .confirm -title "itkedit: Confirm" \
d35 1
a35 1
fileselectiondialog .files -title "itkedit: Files" \
d40 1
a40 1
optionmenu $PaneMenu -labeltext "Edit Window:"
d171 1
a171 1
    scrolledtext $win.text -wrap none -labeltext "file: $FileName($win)" \
d216 1
a216 1
panedwindow .edit -orient horizontal
d228 2
@


1.2
log
@touched all sources to ease next import
@
text
@@


1.1
log
@Initial revision
@
text
@@


1.1.1.1
log
@import insight-2000-02-04 snapshot (2nd try)
@
text
@@


1.1.1.2
log
@import itcl 3.2.1
@
text
@d3 1
a3 1
exec wish8.4 "$0"
d10 1
a10 1
package require Iwidgets 4.0
d23 1
a23 1
iwidgets::messagedialog .notice -title "itkedit: Notice" \
d29 1
a29 1
iwidgets::messagedialog .confirm -title "itkedit: Confirm" \
d35 1
a35 1
iwidgets::fileselectiondialog .files -title "itkedit: Files" \
d40 1
a40 1
iwidgets::optionmenu $PaneMenu -labeltext "Edit Window:"
d171 1
a171 1
    iwidgets::scrolledtext $win.text -wrap none -labeltext "file: $FileName($win)" \
d216 1
a216 1
iwidgets::panedwindow .edit -orient horizontal
a227 2


@

