head	1.6;
access;
symbols
	insight_7_6-2013-04-10-branchpoint:1.6
	gdb_7_6-branch:1.6.0.12
	gdb_7_5-branch:1.6.0.10
	gdb_7_4-branch:1.6.0.8
	gdb_7_3-branch:1.6.0.6
	gdb_7_1-branch:1.6.0.4
	gdb_7_0-branch:1.6.0.2
	arc-sim-20090309:1.4
	arc-insight_6_8-branch:1.4.0.16
	arc-insight_6_8-branchpoint:1.4
	insight_6_8-branch:1.4.0.14
	insight_6_8-branchpoint:1.4
	ITCL_3_3:1.1.1.3
	gdb_6_8-branch:1.4.0.12
	insight_6_6-20070208-release:1.4
	gdb_6_6-branch:1.4.0.10
	gdb_6_6-2006-11-15-branchpoint:1.4
	insight_6_5-20061003-release:1.4
	gdb_6_5-branch:1.4.0.8
	gdb_6_5-2006-05-14-branchpoint:1.4
	gdb_6_4-branch:1.4.0.6
	gdb_6_4-2005-11-01-branchpoint:1.4
	gdb_6_1-2004-04-05-release:1.4
	gdb_6_1-branch:1.4.0.4
	gdb_6_1-2004-03-01-gmt-branchpoint:1.4
	gdb_6_0-2003-10-04-release:1.4
	gdb_6_0-branch:1.4.0.2
	gdb_6_0-2003-06-23-branchpoint:1.4
	ITCL3_2_1:1.1.1.2
	gdb_5_3-2002-12-12-release:1.1.1.1
	tcltk840-20020924-branch:1.2.0.2
	tcltk840-20020924-branchpoint:1.2
	ITCL_3_2_1:1.1.1.2
	gdb_5_3-branch:1.1.1.1.0.4
	gdb_5_3-2002-09-04-branchpoint:1.1.1.1
	gdb_5_2_1-2002-07-23-release:1.1.1.1
	gdb_5_2-2002-04-29-release:1.1.1.1
	gdb_5_2-branch:1.1.1.1.0.2
	gdb_5_2-2002-03-03-branchpoint:1.1.1.1
	cygnus_cvs_20020108_pre:1.1.1.1
	ITCL_TCL_8_3:1.1.1.1
	NET:1.1.1;
locks; strict;
comment	@# @;
expand	@o@;


1.6
date	2008.07.23.22.44.51;	author kseitz;	state Exp;
branches;
next	1.5;

1.5
date	2008.07.22.20.32.46;	author kseitz;	state Exp;
branches;
next	1.4;

1.4
date	2003.01.21.21.04.27;	author hunt;	state Exp;
branches;
next	1.3;

1.3
date	2003.01.21.20.40.30;	author hunt;	state Exp;
branches;
next	1.2;

1.2
date	2002.09.24.18.35.35;	author kseitz;	state Exp;
branches;
next	1.1;

1.1
date	2001.09.09.19.49.05;	author irox;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2001.09.09.19.49.05;	author irox;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2002.09.24.22.42.44;	author kseitz;	state Exp;
branches;
next	1.1.1.3;

1.1.1.3
date	2008.07.22.20.42.09;	author kseitz;	state Exp;
branches;
next	;


desc
@@


1.6
log
@        Import of Itcl 3.3.
        * itcl/configure.in, itk/configure.in, iwidgets/configure.in:
        Replace with configure.ac.
        * itcl/configure, itk/configure, iwidgets/configure: Regenerate.
        * configure.ac, Makefile.am, Makefile.in: New files.
        * README: "New" file.
        * aclocal.m4: Regenerate.
        * itcl/Makefile.in (RANLIB): Replace with RANLIB_LIB so
        that the toplevel build does not override this variable.
        * itk/Makefile.in (RANLIB): Likewise.
        * itcl/tclconfig/tcl.m4 (TEA_PATH_TCLCONFIG): Look for itclConfig.sh
        in the platform-specific location (unix or win).
        (TEA_PATH_TKCONFIG): Likewise.
        (TEA_MAKE_LIB): Even on windows, GCC libraries must start with "lib".
        * itk/tclconfig.m4: Copy of itcl/tcl.m4.
        * iwidgets/tcl.m4: Remove.
        * iwidgets/tclconfig: New directory.
        * iwidgets/tclconfig/tcl.m4, iwidgets/tclconfig/install-sh: Copies
        of itcl/tclconfig files.
        * iwidgets/Makefile.in (MKINSTALLDIRS): Use mkdir -p.
        * iwidgets/configure.ac (PACKAGE): Rename to PACKAGE_NAME.
        Call TEA_INIT, add AC_CONFIG_AUX_DIR and AC_PROG_INSTALL.
        Use TEA_* instead of SC_* macros.
        Search a few more directories for the itcl and itk libraries.
@
text
@# itk.decls --
#
#	This file contains the declarations for all supported public
#	functions that are exported by the Itk library via the stubs table.
#	This file is used to generate the itkDecls.h file.
#	
# See the file "license.terms" for information on usage and redistribution
# of this file, and for a DISCLAIMER OF ALL WARRANTIES.
# 
# RCS: $Id: itk.decls,v 1.5 2002/03/03 01:57:11 andreas_kupries Exp $

library itk
interface itk

# Declare each of the functions in the public Itk interface.  Note that
# the an index should never be reused for a different function in order
# to preserve backwards compatibility.


#
#  Exported functions:
#

declare 0 generic {
    int Itk_Init (Tcl_Interp *interp)
}
declare 1 generic {
    int Itk_SafeInit (Tcl_Interp *interp)
}


#
#  Functions used internally by this package:
#

declare 2 generic {
    int Itk_ConfigBodyCmd (ClientData cdata, Tcl_Interp *interp, \
        int objc, Tcl_Obj *CONST objv[])
}
declare 3 generic {
    int Itk_UsualCmd (ClientData cdata, Tcl_Interp *interp, int objc, \
        Tcl_Obj *CONST objv[])
}


#
#  Functions for managing options included in class definitions:
#

declare 4 generic {
    int Itk_ClassOptionDefineCmd (ClientData cdata, Tcl_Interp *interp, \
        int objc, Tcl_Obj *CONST objv[])
}
declare 5 generic {
    int Itk_ClassOptionIllegalCmd (ClientData cdata, Tcl_Interp *interp, \
        int objc, Tcl_Obj *CONST objv[])
}
declare 6 generic {
    int Itk_ConfigClassOption (Tcl_Interp *interp, ItclObject *contextObj, \
        ClientData cdata, CONST char* newVal)
}
declare 7 generic {
    ItkClassOptTable* Itk_CreateClassOptTable( Tcl_Interp *interp, \
        ItclClass *cdefn)
}
declare 8 generic {
    ItkClassOptTable* Itk_FindClassOptTable (ItclClass *cdefn)
}
#declare 9 generic {
#    void Itk_DeleteClassOptTable (Tcl_Interp *interp, ItclClass *cdefn)
#}
declare 10 generic {
    int Itk_CreateClassOption (Tcl_Interp *interp, ItclClass *cdefn, \
        char *switchName, char *resName, char *resClass, char *defVal, \
        char *config, ItkClassOption **optPtr)
}
declare 11 generic {
    ItkClassOption* Itk_FindClassOption (ItclClass *cdefn, char *switchName)
}
declare 12 generic {
    void Itk_DelClassOption (ItkClassOption *opt)
}


#
#  Functions needed for the Archetype base class:
#

declare 13 generic {
    int Itk_ArchetypeInit (Tcl_Interp* interp)
}


#
#  Functions for maintaining the ordered option list:
#

declare 14 generic {
    void Itk_OptListInit (ItkOptList* olist, Tcl_HashTable *options)
}
declare 15 generic {
    void Itk_OptListFree (ItkOptList* olist)
}
declare 16 generic {
    void Itk_OptListAdd (ItkOptList* olist, Tcl_HashEntry *entry)
}
declare 17 generic {
    void Itk_OptListRemove (ItkOptList* olist, Tcl_HashEntry *entry)
}
@


1.5
log
@touch all sources for Itcl 3.3/Iwidgets 4.0.1 upgrade
@
text
@a6 2
#
# Copyright (c) 1998-1999 by XXXX
d10 1
a10 1
# RCS: $Id: itk.decls,v 1.3 2001/06/22 04:38:54 davygrvy Exp $
d60 1
a60 1
        ClientData cdata, char* newVal)
@


1.4
log
@Updated to itcl 3.2.1.
@
text
@@


1.3
log
@touched all sources to ease next import
@
text
@d12 1
a12 1
# RCS: $Id: itk.decls,v 1.2.4.1 2001/05/18 02:21:45 mdejong Exp $
d29 3
a31 3
#declare 1 generic {
#    int Itk_SafeInit (Tcl_Interp *interp)
#}
@


1.2
log
@touched all sources to ease next import
@
text
@@


1.1
log
@Initial revision
@
text
@@


1.1.1.1
log
@Itcl import for Tcl/Tk8.3 upgrade
@
text
@@


1.1.1.2
log
@import itcl 3.2.1
@
text
@d12 1
a12 1
# RCS: $Id: itk.decls,v 1.3 2001/06/22 04:38:54 davygrvy Exp $
d29 3
a31 3
declare 1 generic {
    int Itk_SafeInit (Tcl_Interp *interp)
}
@


1.1.1.3
log
@imported Itcl 3.3
@
text
@d7 2
d12 1
a12 1
# RCS: $Id: itk.decls,v 1.5 2002/03/03 01:57:11 andreas_kupries Exp $
d62 1
a62 1
        ClientData cdata, CONST char* newVal)
@


