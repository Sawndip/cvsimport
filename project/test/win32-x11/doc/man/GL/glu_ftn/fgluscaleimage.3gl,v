head	1.2;
access;
symbols
	win32-x11-2001-03-26:1.1.1.1 SNAPSHOT:1.1.1;
locks; strict;
comment	@# @;
expand	@o@;


1.2
date	2001.06.03.20.47.19;	author ssiddiqi;	state Exp;
branches;
next	1.1;

1.1
date	2001.03.25.19.36.53;	author ssiddiqi;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2001.03.25.19.36.53;	author ssiddiqi;	state Exp;
branches;
next	;


desc
@@


1.2
log
@Win32-X11 update sources check in, June 3, 2001 - ssiddiqi
@
text
@'\"! eqn | mmdoc
'\"macro stdmacro
.ds Vn Version 1.2
.ds Dt 10 Nov 1998
.ds Re Release 1.0
.ds Dp Apr 04 17:42
.ds Dm  Apr  4  200
.ds Xs 31573 14 fgluscaleimage.gl
.TH FGLUSCALEIMAGE 
.SH NAME
.B "fgluScaleImage
\- scale an image to an arbitrary size

.SH FORTRAN SPECIFICATION
INTEGER*4 \f3fgluScaleImage\fP(
INTEGER*4 \fIformat\fP,
.nf
.ta \w'\f3INTEGER*4 \fPfgluScaleImage( 'u
	INTEGER*4 \fIwIn\fP,
	INTEGER*4 \fIhIn\fP,
	INTEGER*4 \fItypeIn\fP,
	void \fIdataIn\fP,
	INTEGER*4 \fIwOut\fP,
	INTEGER*4 \fIhOut\fP,
	INTEGER*4 \fItypeOut\fP,
	CHARACTER*8 \fIdataOut\fP )
.fi

.EQ
delim $$
.EN
.SH PARAMETERS
.TP \w'\fItypeOut\fP\ \ 'u 
\f2format\fP
Specifies the format of the pixel data.
The following symbolic values are valid:
\f3GL_COLOR_INDEX\fP,
\f3GL_STENCIL_INDEX\fP,
\f3GL_DEPTH_COMPONENT\fP,
\f3GL_RED\fP,
\f3GL_GREEN\fP,
\f3GL_BLUE\fP,
\f3GL_ALPHA\fP,
\f3GL_RGB\fP,
\f3GL_RGBA\fP,
\f3GL_BGR\fP,
\f3GL_BGRA\fP,
\f3GL_LUMINANCE\fP, and
\f3GL_LUMINANCE_ALPHA\fP.
.TP
\f2wIn\fP, \f2hIn\fP
Specify in pixels the width and height, respectively, of the source image.
.TP
\f2typeIn\fP
Specifies the data type for \f2dataIn\fP. Must be one of
\f3GL_UNSIGNED_BYTE\fP,
\f3GL_BYTE\fP,
\f3GL_BITMAP\fP,
\f3GL_UNSIGNED_SHORT\fP,
\f3GL_SHORT\fP,
\f3GL_UNSIGNED_INT\fP,
\f3GL_INT\fP, 
\f3GL_FLOAT\fP, 
\f3GL_UNSIGNED_BYTE_3_3_2\fP,
\f3GL_UNSIGNED_BYTE_2_3_3_REV\fP,
\f3GL_UNSIGNED_SHORT_5_6_5\fP,
\f3GL_UNSIGNED_SHORT_5_6_5_REV\fP,
\f3GL_UNSIGNED_SHORT_4_4_4_4\fP,
\f3GL_UNSIGNED_SHORT_4_4_4_4_REV\fP,
\f3GL_UNSIGNED_SHORT_5_5_5_1\fP,
\f3GL_UNSIGNED_SHORT_1_5_5_5_REV\fP,
\f3GL_UNSIGNED_INT_8_8_8_8\fP,
\f3GL_UNSIGNED_INT_8_8_8_8_REV\fP,
\f3GL_UNSIGNED_INT_10_10_10_2\fP, and
\f3GL_UNSIGNED_INT_2_10_10_10_REV\fP.
.TP
\f2dataIn\fP
Specifies a pointer to the source image.
.TP
\f2wOut\fP, \f2hOut\fP
Specify the width and height, respectively, in pixels of the destination image.
.TP
\f2typeOut\fP
Specifies the data type for \f2dataOut\fP. Must be one of
\f3GL_UNSIGNED_BYTE\fP,
\f3GL_BYTE\fP,
\f3GL_BITMAP\fP,
\f3GL_UNSIGNED_SHORT\fP,
\f3GL_SHORT\fP,
\f3GL_UNSIGNED_INT\fP,
\f3GL_INT\fP, 
\f3GL_FLOAT\fP,
\f3GL_UNSIGNED_BYTE_3_3_2\fP,
\f3GL_UNSIGNED_BYTE_2_3_3_REV\fP,
\f3GL_UNSIGNED_SHORT_5_6_5\fP,
\f3GL_UNSIGNED_SHORT_5_6_5_REV\fP,
\f3GL_UNSIGNED_SHORT_4_4_4_4\fP,
\f3GL_UNSIGNED_SHORT_4_4_4_4_REV\fP,
\f3GL_UNSIGNED_SHORT_5_5_5_1\fP,
\f3GL_UNSIGNED_SHORT_1_5_5_5_REV\fP,
\f3GL_UNSIGNED_INT_8_8_8_8\fP,
\f3GL_UNSIGNED_INT_8_8_8_8_REV\fP,
\f3GL_UNSIGNED_INT_10_10_10_2\fP, or
\f3GL_UNSIGNED_INT_2_10_10_10_REV\fP.
.TP
\f2dataOut\fP
Specifies a pointer to the destination image.
.SH DESCRIPTION
\f3fgluScaleImage\fP scales a pixel image using the appropriate pixel store modes to 
unpack data from the source image and pack data into the destination image.
.P
When shrinking an image, \f3fgluScaleImage\fP uses a box filter to sample the source image
and create pixels for the destination image.  When magnifying an image,
the pixels from the source image are linearly interpolated to create the
destination image.
.P
A return value of zero indicates success, otherwise a GLU error code is returned (see \f3fgluErrorString\fP).
.P
See the \f3glReadPixels\fP reference page for a description of
the acceptable values for the \f2format\fP, \f2typeIn\fP, and \f2typeOut\fP parameters.
.SH NOTES
Formats \f3GL_BGR\fP, and \f3GL_BGRA\fP, and types 
\f3GL_UNSIGNED_BYTE_3_3_2\fP,
\f3GL_UNSIGNED_BYTE_2_3_3_REV\fP,
\f3GL_UNSIGNED_SHORT_5_6_5\fP,
\f3GL_UNSIGNED_SHORT_5_6_5_REV\fP,
\f3GL_UNSIGNED_SHORT_4_4_4_4\fP,
\f3GL_UNSIGNED_SHORT_4_4_4_4_REV\fP,
\f3GL_UNSIGNED_SHORT_5_5_5_1\fP,
\f3GL_UNSIGNED_SHORT_1_5_5_5_REV\fP,
\f3GL_UNSIGNED_INT_8_8_8_8\fP,
\f3GL_UNSIGNED_INT_8_8_8_8_REV\fP,
\f3GL_UNSIGNED_INT_10_10_10_2\fP, and
\f3GL_UNSIGNED_INT_2_10_10_10_REV\fP are only available if the GL version 
is 1.2 or greater.
.SH ERRORS
\f3GLU_INVALID_VALUE\fP is returned if \f2wIn\fP, \f2hIn\fP, \f2wOut\fP, or \f2hOut\fP
is negative.
.P
\f3GLU_INVALID_ENUM\fP is returned if \f2format\fP, \f2typeIn\fP, or \f2typeOut\fP is not
legal.
.P
\f3GLU_INVALID_OPERATION\fP is returned if \f2typeIn\fP or \f2typeOut\fP is 
\f3GL_UNSIGNED_BYTE_3_3_2\fP or \f3GL_UNSIGNED_BYTE_2_3_3_REV\fP 
and \f2format\fP is not \f3GL_RGB\fP.
.P
\f3GLU_INVALID_OPERATION\fP is returned if \f2typeIn\fP or \f2typeOut\fP is 
\f3GL_UNSIGNED_SHORT_5_6_5\fP or \f3GL_UNSIGNED_SHORT_5_6_5_REV\fP 
and \f2format\fP is not \f3GL_RGB\fP.
.P
\f3GLU_INVALID_OPERATION\fP is returned if \f2typeIn\fP or \f2typeOut\fP is
\f3GL_UNSIGNED_SHORT_4_4_4_4\fP or \f3GL_UNSIGNED_SHORT_4_4_4_4_REV\fP 
and \f2format\fP is neither \f3GL_RGBA\fP nor \f3GL_BGRA\fP.
.P
\f3GLU_INVALID_OPERATION\fP is returned if \f2typeIn\fP or \f2typeOut\fP is
\f3GL_UNSIGNED_SHORT_5_5_5_1\fP or \f3GL_UNSIGNED_SHORT_1_5_5_5_REV\fP
and \f2format\fP is neither \f3GL_RGBA\fP nor \f3GL_BGRA\fP.
.P
\f3GLU_INVALID_OPERATION\fP is returned if \f2typeIn\fP or \f2typeOut\fP is
\f3GL_UNSIGNED_INT_8_8_8_8\fP or \f3GL_UNSIGNED_INT_8_8_8_8_REV\fP 
and \f2format\fP is neither \f3GL_RGBA\fP nor \f3GL_BGRA\fP.
.P
\f3GLU_INVALID_OPERATION\fP is returned if \f2typeIn\fP or \f2typeOut\fP is
\f3GL_UNSIGNED_INT_10_10_10_2\fP or \f3GL_UNSIGNED_INT_2_10_10_10_REV\fP
and \f2format\fP is neither \f3GL_RGBA\fP nor \f3GL_BGRA\fP.
.SH SEE ALSO
\f3glDrawPixels\fP, \f3glReadPixels\fP, \f3fgluBuild1DMipmaps\fP, \f3fgluBuild2DMipmaps\fP, 
\f3fgluBuild3DMipmaps\fP, 
.BR
\f3fgluErrorString\fP

@


1.1
log
@Initial revision
@
text
@d1 2
d6 23
a28 5
.ds Dp Feb 04 11:06
.ds Dm 5 Feb  4 11:
.ds Xs 38480     7
_header(ScaleImage, scale an image to an arbitrary size)
_names(ScaleImage)
d33 2
a34 1
_phead(_param1)
d50 2
a51 1
_phead(_param2 _param3)
d53 3
a55 2
_phead(_param4)
Specifies the data type for _param5. Must be one of
d76 2
a77 1
_phead(_param5)
d79 2
a80 1
_phead(_param6 _param7)
d82 3
a84 2
_phead(_param8)
Specifies the data type for _param9. Must be one of
d105 2
a106 1
_phead(_param9)
d109 1
a109 1
_cmnd scales a pixel image using the appropriate pixel store modes to 
d112 1
a112 1
When shrinking an image, _cmnd uses a box filter to sample the source image
d117 1
a117 1
A return value of zero indicates success, otherwise a GLU error code is returned (see _cmnd(ErrorString)).
d119 2
a120 2
See the _glcmnd(ReadPixels) reference page for a description of
the acceptable values for the _param1, _param4, and _param8 parameters.
d137 1
a137 1
\f3GLU_INVALID_VALUE\fP is returned if _param2, _param3, _param6, or _param7
d140 1
a140 1
\f3GLU_INVALID_ENUM\fP is returned if _param1, _param4, or _param8 is not
d143 1
a143 1
\f3GLU_INVALID_OPERATION\fP is returned if _param4 or _param8 is 
d145 1
a145 1
and _param1 is not \f3GL_RGB\fP.
d147 1
a147 1
\f3GLU_INVALID_OPERATION\fP is returned if _param4 or _param8 is 
d149 1
a149 1
and _param1 is not \f3GL_RGB\fP.
d151 1
a151 1
\f3GLU_INVALID_OPERATION\fP is returned if _param4 or _param8 is
d153 1
a153 1
and _param1 is neither \f3GL_RGBA\fP nor \f3GL_BGRA\fP.
d155 1
a155 1
\f3GLU_INVALID_OPERATION\fP is returned if _param4 or _param8 is
d157 1
a157 1
and _param1 is neither \f3GL_RGBA\fP nor \f3GL_BGRA\fP.
d159 1
a159 1
\f3GLU_INVALID_OPERATION\fP is returned if _param4 or _param8 is
d161 1
a161 1
and _param1 is neither \f3GL_RGBA\fP nor \f3GL_BGRA\fP.
d163 1
a163 1
\f3GLU_INVALID_OPERATION\fP is returned if _param4 or _param8 is
d165 1
a165 1
and _param1 is neither \f3GL_RGBA\fP nor \f3GL_BGRA\fP.
d167 2
a168 2
_glcmnd(DrawPixels), _glcmnd(ReadPixels), _cmnd(Build1DMipmaps), _cmnd(Build2DMipmaps), 
_cmnd(Build3DMipmaps), 
d170 1
a170 1
_cmnd(ErrorString)
@


1.1.1.1
log
@win32-x11 source tree update March 26, 2001
@
text
@@
