head	1.2;
access;
symbols
	win32-x11-2001-03-26:1.1.1.1 SNAPSHOT:1.1.1;
locks; strict;
comment	@# @;
expand	@o@;


1.2
date	2001.06.03.20.47.19;	author ssiddiqi;	state Exp;
branches;
next	1.1;

1.1
date	2001.03.25.19.36.53;	author ssiddiqi;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2001.03.25.19.36.53;	author ssiddiqi;	state Exp;
branches;
next	;


desc
@@


1.2
log
@Win32-X11 update sources check in, June 3, 2001 - ssiddiqi
@
text
@'\"! eqn | mmdoc
'\"macro stdmacro
.ds Vn Version 1.2
.ds Dt 10 Nov 1998
.ds Re Release 1.0
.ds Dp Apr 04 17:42
.ds Dm  Apr  4  200
.ds Xs 64220 8 fglubeginpolygon.gl
.TH FGLUBEGINPOLYGON 
.SH NAME
.B "fgluBeginPolygon, fgluEndPolygon
\- delimit a polygon description

.SH FORTRAN SPECIFICATION
SUBROUTINE \f3fgluBeginPolygon\fP(
CHARACTER*8 \fItess\fP )
.nf
.fi

SUBROUTINE \f3fgluEndPolygon\fP(
CHARACTER*8 \fItess\fP )
.nf
.fi

.EQ
delim $$
.EN
.SH PARAMETERS
.TP \w'\f2tess\fP\ \ 'u 
\f2tess\fP
Specifies the tessellation object (created with \f3fgluNewTess\fP).
.SH DESCRIPTION
\f3fgluBeginPolygon\fP and \f3fgluEndPolygon\fP delimit the definition of a
nonconvex polygon.
To define such a polygon, first call \f3fgluBeginPolygon\fP.
Then define the contours of the polygon
by calling 
\f3fgluTessVertex\fP for each vertex
and \f3fgluNextContour\fP to start each new contour.
Finally, call \f3fgluEndPolygon\fP
to signal the end of the definition.
See the \f3fgluTessVertex\fP and 
\f3fgluNextContour\fP reference pages for more details.
.P
Once \f3fgluEndPolygon\fP is called, the polygon is tessellated, and the
resulting triangles are described through callbacks.
See \f3fgluTessCallback\fP for descriptions of the callback functions.
.SH NOTES
This command is obsolete and is provided for backward compatibility
only. Calls to \f3fgluBeginPolygon\fP are mapped to 
\f3fgluTessBeginPolygon\fP
followed by 
\f3fgluTessBeginContour\fP. Calls to \f3fgluEndPolygon\fP are mapped
to \f3fgluTessEndContour\fP followed by \f3fgluTessEndPolygon\fP.
.SH EXAMPLE
A quadrilateral with a triangular hole in it can be described like this:
.sp
.Ex
gluBeginPolygon(tobj);
   gluTessVertex(tobj, v1, v1);
   gluTessVertex(tobj, v2, v2);
   gluTessVertex(tobj, v3, v3);
   gluTessVertex(tobj, v4, v4);
gluNextContour(tobj, GLU_INTERIOR);
   gluTessVertex(tobj, v5, v5);
   gluTessVertex(tobj, v6, v6);
   gluTessVertex(tobj, v7, v7);
gluEndPolygon(tobj);
.Ee
.SH SEE ALSO
\f3fgluNewTess\fP, \f3fgluNextContour\fP, \f3fgluTessCallback\fP, \f3fgluTessVertex\fP,
\f3fgluTessBeginPolygon\fP, \f3fgluTessBeginContour\fP



@


1.1
log
@Initial revision
@
text
@d1 2
d6 19
a24 6
.ds Dp Feb 04 11:06
.ds Dm 7 Feb  4 11:
.ds Xs 33625     4
_header(BeginPolygon, delimit a polygon description)
_names(BeginPolygon)
_names(EndPolygon,,noheader)
d29 3
a31 2
_phead(_param1)
Specifies the tessellation object (created with _cmnd(NewTess)).
d33 1
a33 1
_cmnd(BeginPolygon) and _cmnd(EndPolygon) delimit the definition of a
d35 1
a35 1
To define such a polygon, first call _cmnd(BeginPolygon).
d38 3
a40 3
_cmnd(TessVertex) for each vertex
and _cmnd(NextContour) to start each new contour.
Finally, call _cmnd(EndPolygon)
d42 2
a43 2
See the _cmnd(TessVertex) and 
_cmnd(NextContour) reference pages for more details.
d45 1
a45 1
Once _cmnd(EndPolygon) is called, the polygon is tessellated, and the
d47 1
a47 1
See _cmnd(TessCallback) for descriptions of the callback functions.
d50 2
a51 2
only. Calls to _cmnd(BeginPolygon) are mapped to 
_cmnd(TessBeginPolygon)
d53 2
a54 2
_cmnd(TessBeginContour). Calls to _cmnd(EndPolygon) are mapped
to _cmnd(TessEndContour) followed by _cmnd(TessEndPolygon).
d71 2
a72 2
_cmnd(NewTess), _cmnd(NextContour), _cmnd(TessCallback), _cmnd(TessVertex),
_cmnd(TessBeginPolygon), _cmnd(TessBeginContour)
@


1.1.1.1
log
@win32-x11 source tree update March 26, 2001
@
text
@@
