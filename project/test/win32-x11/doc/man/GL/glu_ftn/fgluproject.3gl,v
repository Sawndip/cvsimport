head	1.2;
access;
symbols
	win32-x11-2001-03-26:1.1.1.1 SNAPSHOT:1.1.1;
locks; strict;
comment	@# @;
expand	@o@;


1.2
date	2001.06.03.20.47.19;	author ssiddiqi;	state Exp;
branches;
next	1.1;

1.1
date	2001.03.25.19.36.53;	author ssiddiqi;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2001.03.25.19.36.53;	author ssiddiqi;	state Exp;
branches;
next	;


desc
@@


1.2
log
@Win32-X11 update sources check in, June 3, 2001 - ssiddiqi
@
text
@'\"! eqn | mmdoc
'\"macro stdmacro
.ds Vn Version 1.2
.ds Dt 10 Nov 1998
.ds Re Release 1.0
.ds Dp Apr 04 17:42
.ds Dm  Apr  4  200
.ds Xs 53406 8 fgluproject.gl
.TH FGLUPROJECT 
.SH NAME
.B "fgluProject
\- map object coordinates to window coordinates

.SH FORTRAN SPECIFICATION
INTEGER*4 \f3fgluProject\fP(
REAL*8 \fIobjX\fP,
.nf
.ta \w'\f3INTEGER*4 \fPfgluProject( 'u
	REAL*8 \fIobjY\fP,
	REAL*8 \fIobjZ\fP,
	CHARACTER*8 \fImodel\fP,
	CHARACTER*8 \fIproj\fP,
	CHARACTER*8 \fIview\fP,
	CHARACTER*8 \fIwinX\fP,
	CHARACTER*8 \fIwinY\fP,
	CHARACTER*8 \fIwinZ\fP )
.fi

.EQ
delim $$
.EN
.SH PARAMETERS
.TP \w'\f2objX\fP\ \f2objY\fP\ \f2objZ\fP\ \ 'u 
\f2objX\fP, \f2objY\fP, \f2objZ\fP
Specify the object coordinates.
.TP
\f2model\fP
Specifies the current modelview matrix (as from a \f3glGetDoublev\fP call).
.TP
\f2proj\fP
Specifies the current projection matrix (as from a \f3glGetDoublev\fP call).
.TP
\f2view\fP
Specifies the current viewport (as from a \f3glGetIntegerv\fP call).
.TP
\f2winX\fP, \f2winY\fP, \f2winZ\fP
Return the computed window coordinates.
.SH DESCRIPTION
\f3fgluProject\fP transforms the specified object coordinates into window coordinates
using \f2model\fP, \f2proj\fP, and \f2view\fP. The result is stored 
in \f2winX\fP, \f2winY\fP, and \f2winZ\fP. A return value of 
\f3GL_TRUE\fP indicates success, a return value of \f3GL_FALSE\fP
indicates failure.
.P
To compute the coordinates,
let $v ~=~ ("objX", "objY", "objZ", 1.0)$
represented as a matrix with 4 rows and 1 column.
Then \f3fgluProject\fP computes $v sup prime$
as follows: 
.sp
.EQ
v sup prime ~=~ P ~times~ M ~times~ v
.EN
.sp
where $P$ is the current projection matrix \f2proj\fP, $M$ is the current
modelview matrix \f2model\fP (both represented as
$4 times 4$ matrices in column-major order) and '$times$' represents
matrix multiplication. 
.P 
The window coordinates are then computed as follows: 
.sp
.EQ
"winX" ~=~ "view" (0) ~+~ "view" (2) ~*~ (v sup prime (0) ~+~ 1)~/~2 
.EN
.sp
.EQ
"winY" ~=~ "view" (1) ~+~ "view" (3)~*~(v sup prime (1) ~+~ 1)~/~2 .EN
.sp
.EQ
"winZ" ~=~ (v sup prime (2)  ~+~ 1)~/~ 2
.EN
.sp
.SH SEE ALSO
\f3glGet\fP, \f3fgluUnProject\fP

@


1.1
log
@Initial revision
@
text
@d1 2
d6 23
a28 5
.ds Dp Feb 04 11:06
.ds Dm 2 Feb  4 11:
.ds Xs 21974     4
_header(Project, map object coordinates to window coordinates)
_names(Project)
d33 2
a34 1
_phead(_param1 _param2 _param3)
d36 11
a46 7
_phead(_param4)
Specifies the current modelview matrix (as from a _glcmnd(GetDoublev) call).
_phead(_param5)
Specifies the current projection matrix (as from a _glcmnd(GetDoublev) call).
_phead(_param6)
Specifies the current viewport (as from a _glcmnd(GetIntegerv) call).
_phead(_param7 _param8 _param9)
d49 3
a51 3
_cmnd transforms the specified object coordinates into window coordinates
using _param4, _param5, and _param6. The result is stored 
in _param7, _param8, and _param9. A return value of 
d56 1
a56 1
let $v ~=~ (_eqnparam1, _eqnparam2, _eqnparam3, 1.0)$
d58 1
a58 1
Then _cmnd computes $v sup prime$
d65 2
a66 2
where $P$ is the current projection matrix _param5, $M$ is the current
modelview matrix _param4 (both represented as
d73 1
a73 1
_eqnparam7 ~=~ _eqnparam6 (0) ~+~ _eqnparam6 (2) ~*~ (v sup prime (0) ~+~ 1)~/~2 
d77 1
a77 1
_eqnparam8 ~=~ _eqnparam6 (1) ~+~ _eqnparam6 (3)~*~(v sup prime (1) ~+~ 1)~/~2 .EN
d80 1
a80 1
_eqnparam9 ~=~ (v sup prime (2)  ~+~ 1)~/~ 2
d84 1
a84 1
_glcmnd(Get), _cmnd(UnProject)
@


1.1.1.1
log
@win32-x11 source tree update March 26, 2001
@
text
@@
