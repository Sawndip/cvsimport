head	1.2;
access;
symbols
	win32-x11-2001-03-26:1.1.1.1 SNAPSHOT:1.1.1;
locks; strict;
comment	@# @;
expand	@o@;


1.2
date	2001.06.03.20.47.19;	author ssiddiqi;	state Exp;
branches;
next	1.1;

1.1
date	2001.03.25.19.36.53;	author ssiddiqi;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2001.03.25.19.36.53;	author ssiddiqi;	state Exp;
branches;
next	;


desc
@@


1.2
log
@Win32-X11 update sources check in, June 3, 2001 - ssiddiqi
@
text
@'\"! eqn | mmdoc
'\"macro stdmacro
.ds Vn Version 1.2
.ds Dt 10 Nov 1998
.ds Re Release 1.0
.ds Dp Apr 04 17:42
.ds Dm  Apr  4  200
.ds Xs 24031 10 fglunextcontour.gl
.TH FGLUNEXTCONTOUR 
.SH NAME
.B "fgluNextContour
\- mark the beginning of another contour

.SH FORTRAN SPECIFICATION
SUBROUTINE \f3fgluNextContour\fP(
CHARACTER*8 \fItess\fP,
.nf
.ta \w'\f3SUBROUTINE \fPfgluNextContour( 'u
	INTEGER*4 \fItype\fP )
.fi

.EQ
delim $$
.EN
.SH PARAMETERS
.TP \w'\f2tess\fP\ \ 'u 
\f2tess\fP
Specifies the tessellation object (created with \f3fgluNewTess\fP).
.TP
\f2type\fP
Specifies the type of the contour being defined. Valid values are
\f3GLU_EXTERIOR\fP,
\f3GLU_INTERIOR\fP,
\f3GLU_UNKNOWN\fP,
\f3GLU_CCW\fP, and
\f3GLU_CW\fP.
.SH DESCRIPTION
\f3fgluNextContour\fP is used in describing polygons with multiple contours. After the first
contour has been described through a series of \f3fgluTessVertex\fP calls, 
a \f3fgluNextContour\fP call indicates that the previous contour is complete and that the
next contour is about to begin.
Another series of \f3fgluTessVertex\fP calls is then used to describe the new 
contour. This process can be repeated until all contours have been described.
.P
\f2type\fP defines what type of contour follows.
The legal contour types are as follows:
.TP 18
\f3GLU_EXTERIOR\fP
An exterior contour defines an exterior boundary of the polygon.
.TP
\f3GLU_INTERIOR\fP
An interior contour defines an interior boundary of the polygon (such as 
a hole).
.TP
\f3GLU_UNKNOWN\fP
An unknown contour is analyzed by the library to determine if it is interior
or exterior.
.TP
\f3GLU_CCW\fP, 
.TP
\f3GLU_CW\fP
The first \f3GLU_CCW\fP or \f3GLU_CW\fP contour defined is considered to 
be exterior. All other contours are considered to be exterior if they 
are oriented in the same direction (clockwise or counterclockwise) as 
the first contour, and interior if they are not.
.P
If one contour is of type \f3GLU_CCW\fP or \f3GLU_CW\fP, then all 
contours must be of the same type (if they are not, then all \f3GLU_CCW\fP
and \f3GLU_CW\fP contours will be changed to \f3GLU_UNKNOWN\fP).
.P
Note that there is no real difference between the \f3GLU_CCW\fP and 
\f3GLU_CW\fP contour types.
.P
Before the first contour is described, \f3fgluNextContour\fP can be called to 
define the type of the first contour.
If \f3fgluNextContour\fP is not called before the first contour, then the first contour is 
marked \f3GLU_EXTERIOR\fP.
.P
This command is obsolete and is provided for backward compatibility
only. Calls to \f3fgluNextContour\fP are mapped to \f3fgluTessEndContour\fP
followed by 
\f3fgluTessBeginContour\fP.
.SH EXAMPLE
A quadrilateral with a triangular hole in it can be described as follows:
.sp
.Ex
gluBeginPolygon(tobj);
   gluTessVertex(tobj, v1, v1);
   gluTessVertex(tobj, v2, v2);
   gluTessVertex(tobj, v3, v3);
   gluTessVertex(tobj, v4, v4);
gluNextContour(tobj, GLU_INTERIOR);
   gluTessVertex(tobj, v5, v5);
   gluTessVertex(tobj, v6, v6);
   gluTessVertex(tobj, v7, v7);
gluEndPolygon(tobj);
.Ee
.SH SEE ALSO
\f3fgluBeginPolygon\fP, \f3fgluNewTess\fP, \f3fgluTessCallback\fP, \f3fgluTessVertex\fP,
\f3fgluTessBeginContour\fP

@


1.1
log
@Initial revision
@
text
@d1 2
d6 16
a21 5
.ds Dp Feb 04 11:06
.ds Dm 6 Feb  4 11:
.ds Xs 37451     5
_header(NextContour, mark the beginning of another contour)
_names(NextContour)
d26 5
a30 3
_phead(_param1)
Specifies the tessellation object (created with _cmnd(NewTess)).
_phead(_param2)
d38 3
a40 3
_cmnd is used in describing polygons with multiple contours. After the first
contour has been described through a series of _cmnd(TessVertex) calls, 
a _cmnd call indicates that the previous contour is complete and that the
d42 1
a42 1
Another series of _cmnd(TessVertex) calls is then used to describe the new 
d45 1
a45 1
_param2 defines what type of contour follows.
d74 1
a74 1
Before the first contour is described, _cmnd can be called to 
d76 1
a76 1
If _cmnd is not called before the first contour, then the first contour is 
d80 1
a80 1
only. Calls to _cmnd are mapped to _cmnd(TessEndContour)
d82 1
a82 1
_cmnd(TessBeginContour).
d99 2
a100 2
_cmnd(BeginPolygon), _cmnd(NewTess), _cmnd(TessCallback), _cmnd(TessVertex),
_cmnd(TessBeginContour)
@


1.1.1.1
log
@win32-x11 source tree update March 26, 2001
@
text
@@
