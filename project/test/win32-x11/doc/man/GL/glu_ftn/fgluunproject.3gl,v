head	1.2;
access;
symbols
	win32-x11-2001-03-26:1.1.1.1 SNAPSHOT:1.1.1;
locks; strict;
comment	@# @;
expand	@o@;


1.2
date	2001.06.03.20.47.19;	author ssiddiqi;	state Exp;
branches;
next	1.1;

1.1
date	2001.03.25.19.36.53;	author ssiddiqi;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2001.03.25.19.36.53;	author ssiddiqi;	state Exp;
branches;
next	;


desc
@@


1.2
log
@Win32-X11 update sources check in, June 3, 2001 - ssiddiqi
@
text
@'\"! eqn | mmdoc
'\"macro stdmacro
.ds Vn Version 1.2
.ds Dt 10 Nov 1998
.ds Re Release 1.0
.ds Dp Apr 04 17:42
.ds Dm  Apr  4  200
.ds Xs 41048 7 fgluunproject.gl
.TH FGLUUNPROJECT 
.SH NAME
.B "fgluUnProject
\- map window coordinates to object coordinates

.SH FORTRAN SPECIFICATION
INTEGER*4 \f3fgluUnProject\fP(
REAL*8 \fIwinX\fP,
.nf
.ta \w'\f3INTEGER*4 \fPfgluUnProject( 'u
	REAL*8 \fIwinY\fP,
	REAL*8 \fIwinZ\fP,
	CHARACTER*8 \fImodel\fP,
	CHARACTER*8 \fIproj\fP,
	CHARACTER*8 \fIview\fP,
	CHARACTER*8 \fIobjX\fP,
	CHARACTER*8 \fIobjY\fP,
	CHARACTER*8 \fIobjZ\fP )
.fi

.EQ
delim $$
.EN
.SH PARAMETERS
.TP \w'\f2winX\fP\ \f2winY\fP\ \f2winZ\fP\ \ 'u 
\f2winX\fP, \f2winY\fP, \f2winZ\fP
Specify the window coordinates to be mapped.
.TP
\f2model\fP
Specifies the modelview matrix (as from a \f3glGetDoublev\fP call).
.TP
\f2proj\fP
Specifies the projection matrix (as from a \f3glGetDoublev\fP call).
.TP
\f2view\fP
Specifies the viewport (as from a \f3glGetIntegerv\fP call).
.TP
\f2objX\fP, \f2objY\fP, \f2objZ\fP
Returns the computed object coordinates.
.SH DESCRIPTION
\f3fgluUnProject\fP maps the specified window coordinates into object 
coordinates using \f2model\fP, \f2proj\fP, and \f2view\fP.
The result is stored in \f2objX\fP, \f2objY\fP, and \f2objZ\fP. A return value of 
\f3GL_TRUE\fP indicates success; a return value of \f3GL_FALSE\fP
indicates failure.
.P
To compute the coordinates (\f2objX\fP, \f2objY\fP, and \f2objZ\fP),
\f3fgluUnProject\fP multiplies the normalized device coordinates by the inverse of
\f2model\fP*\f2proj\fP as follows:

.P
.ce
.EQ
left ( down 70 {cpile { ~"objX" above ~"objY" above ~"objZ"
above ~W}} ~~ right ) ~=~ INV(P M) 
left ( down 140 {cpile { 
{ {2("winX" ~-~ "view"[0])} over {"view" [2]} ~-~ 1 }
above 
{ {2("winY" ~-~ "view"[1])} over {"view"[3]} ~-~ 1 }
above 
{ 2("winZ") ~-~ 1 }
above 
1}} ~~ right )
.EN
.bp
$INV()$ denotes matrix inversion. 
W is an unused variable, included for consistent matrix notation.
.SH SEE ALSO
\f3glGet\fP, \f3fgluProject\fP
@


1.1
log
@Initial revision
@
text
@d1 2
d6 23
a28 5
.ds Dp Feb 04 11:06
.ds Dm 4 Feb  4 11:
.ds Xs 63442     4
_header(UnProject, map window coordinates to object coordinates)
_names(UnProject)
d33 2
a34 1
_phead(_param1 _param2 _param3)
d36 11
a46 7
_phead(_param4)
Specifies the modelview matrix (as from a _glcmnd(GetDoublev) call).
_phead(_param5)
Specifies the projection matrix (as from a _glcmnd(GetDoublev) call).
_phead(_param6)
Specifies the viewport (as from a _glcmnd(GetIntegerv) call).
_phead(_param7 _param8 _param9)
d49 3
a51 3
_cmnd maps the specified window coordinates into object 
coordinates using _param4, _param5, and _param6.
The result is stored in _param7, _param8, and _param9. A return value of 
d55 3
a57 3
To compute the coordinates (_param7, _param8, and _param9),
_cmnd multiplies the normalized device coordinates by the inverse of
_param4*_param5 as follows:
d62 1
a62 1
left ( down 70 {cpile { ~_eqnparam7 above ~_eqnparam8 above ~_eqnparam9
d65 1
a65 1
{ {2(_eqnparam1 ~-~ _eqnparam6[0])} over {_eqnparam6 [2]} ~-~ 1 }
d67 1
a67 1
{ {2(_eqnparam2 ~-~ _eqnparam6[1])} over {_eqnparam6[3]} ~-~ 1 }
d69 1
a69 1
{ 2(_eqnparam3) ~-~ 1 }
d77 1
a77 1
_glcmnd(Get), _cmnd(Project)
@


1.1.1.1
log
@win32-x11 source tree update March 26, 2001
@
text
@@
