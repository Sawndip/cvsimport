head	1.2;
access;
symbols
	win32-x11-2001-03-26:1.1.1.1 SNAPSHOT:1.1.1;
locks; strict;
comment	@# @;
expand	@o@;


1.2
date	2001.06.03.20.47.16;	author ssiddiqi;	state Exp;
branches;
next	1.1;

1.1
date	2001.03.25.19.36.54;	author ssiddiqi;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2001.03.25.19.36.54;	author ssiddiqi;	state Exp;
branches;
next	;


desc
@@


1.2
log
@Win32-X11 update sources check in, June 3, 2001 - ssiddiqi
@
text
@'\"! tbl|eqn | mmdoc
'\"macro stdmacro
.ds Vn Version 1.2
.ds Dt 10 Nov 1998
.ds Re Release 1.0
.ds Dp Apr 04 17:40
.ds Dm  Apr  4  200
.ds Xs 47047 16 fglgetlight.gl
.TH FGLGETLIGHT 
.SH NAME
.B "fglGetLightfv, fglGetLightiv
\- return light source parameter values

.SH FORTRAN SPECIFICATION
SUBROUTINE \f3fglGetLightfv\fP(
INTEGER*4 \fIlight\fP,
.nf
.ta \w'\f3SUBROUTINE \fPfglGetLightfv( 'u
	INTEGER*4 \fIpname\fP,
	CHARACTER*8 \fIparams\fP )
.fi
SUBROUTINE \f3fglGetLightiv\fP(
INTEGER*4 \fIlight\fP,
.nf
.ta \w'\f3SUBROUTINE \fPfglGetLightiv( 'u
	INTEGER*4 \fIpname\fP,
	CHARACTER*8 \fIparams\fP )
.fi

.EQ
delim $$
.EN
.SH PARAMETERS
.TP \w'\fIparams\fP\ \ 'u 
\f2light\fP
Specifies a light source.
The number of possible lights depends on the implementation,
but at least eight lights are supported.
They are identified by symbolic names of the form \f3GL_LIGHT\fP$i$
where 0 \(<= $ i $ < \f3GL_MAX_LIGHTS\fP.
.TP
\f2pname\fP
Specifies a light source parameter for \f2light\fP.
Accepted symbolic names are
\f3GL_AMBIENT\fP,
\f3GL_DIFFUSE\fP,
\f3GL_SPECULAR\fP,
\f3GL_POSITION\fP,
\f3GL_SPOT_DIRECTION\fP,
\f3GL_SPOT_EXPONENT\fP,
\f3GL_SPOT_CUTOFF\fP,
\f3GL_CONSTANT_ATTENUATION\fP,
\f3GL_LINEAR_ATTENUATION\fP, and
\f3GL_QUADRATIC_ATTENUATION\fP.
.TP
\f2params\fP
Returns the requested data.
.SH DESCRIPTION
\f3fglGetLight\fP returns in \f2params\fP the value or values of a light source parameter.
\f2light\fP names the light and is a symbolic name of the form \f3GL_LIGHT\fP$i$
for 0 \(<= $i$ < \f3GL_MAX_LIGHTS\fP,
where \f3GL_MAX_LIGHTS\fP is an implementation dependent constant that is
greater than or equal to eight.
\f2pname\fP specifies one of ten light source parameters,
again by symbolic name.
.P
The following parameters are defined:
.TP 20
\f3GL_AMBIENT\fP
\f2params\fP returns four integer or floating-point values representing the
ambient intensity of the light source.
Integer values,
when requested,
are linearly mapped from the internal floating-point representation
such that 1.0 maps to the most positive representable integer value,
and \-1.0 maps to the most negative representable integer value.
If the internal value is outside the range [\-1, 1],
the corresponding integer return value is undefined. The initial value is
(0, 0, 0, 1). 
.TP
\f3GL_DIFFUSE\fP
\f2params\fP returns four integer or floating-point values representing the
diffuse intensity of the light source.
Integer values,
when requested,
are linearly mapped from the internal floating-point representation
such that 1.0 maps to the most positive representable integer value,
and \-1.0 maps to the most negative representable integer value.
If the internal value is outside the range [\-1, 1],
the corresponding integer return value is undefined. The initial value
for \f3GL_LIGHT0\fP is (1, 1, 1, 1); for other lights, the
initial value is (0, 0, 0, 0). 
.TP
\f3GL_SPECULAR\fP
\f2params\fP returns four integer or floating-point values representing the
specular intensity of the light source.
Integer values,
when requested,
are linearly mapped from the internal floating-point representation
such that 1.0 maps to the most positive representable integer value,
and \-1.0 maps to the most negative representable integer value.
If the internal value is outside the range [\-1, 1],
the corresponding integer return value is undefined. The initial value
for \f3GL_LIGHT0\fP is (1, 1, 1, 1); for other lights, the
initial value is (0, 0, 0, 0).
.TP
\f3GL_POSITION\fP
\f2params\fP returns four integer or floating-point values representing the
position of the light source.
Integer values,
when requested,
are computed by rounding the internal floating-point values to the
nearest integer value.
The returned values are those maintained in eye coordinates.
They will not be equal to the values specified using \f3fglLight\fP,
unless the modelview matrix was identity at the time \f3fglLight\fP was
called. The initial value is (0, 0, 1, 0).
.TP
\f3GL_SPOT_DIRECTION\fP
\f2params\fP returns three integer or floating-point values representing the
direction of the light source.
Integer values,
when requested,
are computed by rounding the internal floating-point values to the
nearest integer value.
The returned values are those maintained in eye coordinates.
They will not be equal to the values specified using \f3fglLight\fP,
unless the modelview matrix was identity at the time \f3fglLight\fP was called.
Although spot direction is normalized before being used in the lighting
equation,
the returned values are the transformed versions of the specified values
prior to normalization. The initial value is (0, 0, \-1).
.TP
\f3GL_SPOT_EXPONENT\fP
\f2params\fP returns a single integer or floating-point value representing the
spot exponent of the light.
An integer value,
when requested,
is computed by rounding the internal floating-point representation to
the nearest integer. The initial value is 0. 
.TP
\f3GL_SPOT_CUTOFF\fP
\f2params\fP returns a single integer or floating-point value representing the
spot cutoff angle of the light.
An integer value,
when requested,
is computed by rounding the internal floating-point representation to
the nearest integer. The initial value is 180. 
.TP
\f3GL_CONSTANT_ATTENUATION\fP
\f2params\fP returns a single integer or floating-point value representing the
constant (not distance-related) attenuation of the light.
An integer value,
when requested,
is computed by rounding the internal floating-point representation to
the nearest integer. The initial value is 1. 
.TP
\f3GL_LINEAR_ATTENUATION \fP
\f2params\fP returns a single integer or floating-point value representing the
linear attenuation of the light.
An integer value,
when requested,
is computed by rounding the internal floating-point representation to
the nearest integer. The initial value is 0. 
.TP
\f3GL_QUADRATIC_ATTENUATION\fP
\f2params\fP returns a single integer or floating-point value representing the
quadratic attenuation of the light.
An integer value,
when requested,
is computed by rounding the internal floating-point representation to
the nearest integer. The initial value is 0. 
.SH NOTES
It is always the case that \f3GL_LIGHT\fP$i$ = \f3GL_LIGHT0\fP + $i$.
.P
If an error is generated,
no change is made to the contents of \f2params\fP.
.SH ERRORS
\f3GL_INVALID_ENUM\fP is generated if \f2light\fP or \f2pname\fP is not an
accepted value.
.P
\f3GL_INVALID_OPERATION\fP is generated if \f3fglGetLight\fP
is executed between the execution of \f3fglBegin\fP
and the corresponding execution of \f3fglEnd\fP.
.SH SEE ALSO
\f3fglLight\fP
@


1.1
log
@Initial revision
@
text
@d1 2
d6 24
a29 5
.ds Dp Feb 04 11:05
.ds Dm 3 Feb  4 11:
.ds Xs 45912     8
_header(GetLight,return light source parameter values)
_names(GetLight,[fi]v)
d34 2
a35 1
_phead(_param1)
d41 3
a43 2
_phead(_param2)
Specifies a light source parameter for _param1.
d55 2
a56 1
_phead(_param3)
d59 2
a60 2
_cmnd returns in _param3 the value or values of a light source parameter.
_param1 names the light and is a symbolic name of the form \f3GL_LIGHT\fP$i$
d64 1
a64 1
_param2 specifies one of ten light source parameters,
d70 1
a70 1
_param3 returns four integer or floating-point values representing the
d82 1
a82 1
_param3 returns four integer or floating-point values representing the
d95 1
a95 1
_param3 returns four integer or floating-point values representing the
d108 1
a108 1
_param3 returns four integer or floating-point values representing the
d115 2
a116 2
They will not be equal to the values specified using _cmnd(Light),
unless the modelview matrix was identity at the time _cmnd(Light) was
d120 1
a120 1
_param3 returns three integer or floating-point values representing the
d127 2
a128 2
They will not be equal to the values specified using _cmnd(Light),
unless the modelview matrix was identity at the time _cmnd(Light) was called.
d135 1
a135 1
_param3 returns a single integer or floating-point value representing the
d143 1
a143 1
_param3 returns a single integer or floating-point value representing the
d151 1
a151 1
_param3 returns a single integer or floating-point value representing the
d159 1
a159 1
_param3 returns a single integer or floating-point value representing the
d167 1
a167 1
_param3 returns a single integer or floating-point value representing the
d177 1
a177 1
no change is made to the contents of _param3.
d179 1
a179 1
\f3GL_INVALID_ENUM\fP is generated if _param1 or _param2 is not an
d182 3
a184 3
\f3GL_INVALID_OPERATION\fP is generated if _cmnd
is executed between the execution of _cmnd(Begin)
and the corresponding execution of _cmnd(End).
d186 1
a186 1
_cmnd(Light)
@


1.1.1.1
log
@win32-x11 source tree update March 26, 2001
@
text
@@
