head	1.2;
access;
symbols
	win32-x11-2001-03-26:1.1.1.1 SNAPSHOT:1.1.1;
locks; strict;
comment	@# @;
expand	@o@;


1.2
date	2001.06.03.20.47.17;	author ssiddiqi;	state Exp;
branches;
next	1.1;

1.1
date	2001.03.25.19.36.54;	author ssiddiqi;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2001.03.25.19.36.54;	author ssiddiqi;	state Exp;
branches;
next	;


desc
@@


1.2
log
@Win32-X11 update sources check in, June 3, 2001 - ssiddiqi
@
text
@'\"! tbl|eqn | mmdoc
'\"macro stdmacro
.ds Vn Version 1.2
.ds Dt 10 Nov 1998
.ds Re Release 1.0
.ds Dp Apr 04 17:40
.ds Dm  Apr  4  200
.ds Xs 11373 8 fglnormal.gl
.TH FGLNORMAL 
.SH NAME
.B "fglNormal3b, fglNormal3d, fglNormal3f, fglNormal3i, fglNormal3s, fglNormal3bv, fglNormal3dv, fglNormal3fv, fglNormal3iv, fglNormal3sv
\- set the current normal vector

.EQ
delim $$
.EN
.SH FORTRAN SPECIFICATION
SUBROUTINE \f3fglNormal3b\fP(
INTEGER*1 \fInx\fP,
.nf
.ta \w'\f3SUBROUTINE \fPfglNormal3b( 'u
	INTEGER*1 \fIny\fP,
	INTEGER*1 \fInz\fP )
.fi
SUBROUTINE \f3fglNormal3d\fP(
REAL*8 \fInx\fP,
.nf
.ta \w'\f3SUBROUTINE \fPfglNormal3d( 'u
	REAL*8 \fIny\fP,
	REAL*8 \fInz\fP )
.fi
SUBROUTINE \f3fglNormal3f\fP(
REAL*4 \fInx\fP,
.nf
.ta \w'\f3SUBROUTINE \fPfglNormal3f( 'u
	REAL*4 \fIny\fP,
	REAL*4 \fInz\fP )
.fi
SUBROUTINE \f3fglNormal3i\fP(
INTEGER*4 \fInx\fP,
.nf
.ta \w'\f3SUBROUTINE \fPfglNormal3i( 'u
	INTEGER*4 \fIny\fP,
	INTEGER*4 \fInz\fP )
.fi
SUBROUTINE \f3fglNormal3s\fP(
INTEGER*2 \fInx\fP,
.nf
.ta \w'\f3SUBROUTINE \fPfglNormal3s( 'u
	INTEGER*2 \fIny\fP,
	INTEGER*2 \fInz\fP )
.fi

.SH PARAMETERS
.TP \w'\f2nx\fP\ \f2ny\fP\ \f2nz\fP\ \ 'u 
\f2nx\fP, \f2ny\fP, \f2nz\fP
Specify the $x$, $y$, and $z$ coordinates of the new current normal.
The initial value of the current normal is the unit vector, (0, 0, 1).
.P
.SH FORTRAN SPECIFICATION
SUBROUTINE \f3fglNormal3bv\fP(
CHARACTER*8 \fIv\fP )
.nf
.fi
SUBROUTINE \f3fglNormal3dv\fP(
CHARACTER*8 \fIv\fP )
.nf
.fi
SUBROUTINE \f3fglNormal3fv\fP(
CHARACTER*8 \fIv\fP )
.nf
.fi
SUBROUTINE \f3fglNormal3iv\fP(
CHARACTER*8 \fIv\fP )
.nf
.fi
SUBROUTINE \f3fglNormal3sv\fP(
CHARACTER*8 \fIv\fP )
.nf
.fi

.SH PARAMETERS
.TP
\f2v\fP
Specifies a pointer to an array of three elements:
the $x$, $y$, and $z$ coordinates of the new current normal.
.P
.SH DESCRIPTION
The current normal is set to the given coordinates
whenever \f3fglNormal\fP is issued.
Byte, short, or integer arguments are converted to floating-point
format with a linear mapping that maps the most positive representable integer
value to 1.0,
and the most negative representable integer value to \-1.0.
.P
Normals specified with \f3fglNormal\fP need not have unit length.
If \f3GL_NORMALIZE\fP is enabled,
then normals of any length specified with \f3fglNormal\fP are normalized after transformation.
If \f3GL_RESCALE_NORMAL\fP is enabled, normals are scaled by a scaling factor
derived from the modelview matrix.  \f3GL_RESCALE_NORMAL\fP requires that the
originally specified normals were of unit length, and that the modelview
matrix contain only uniform scales for proper results.
To enable and disable normalization, call \f3fglEnable\fP and \f3fglDisable\fP
with either \f3GL_NORMALIZE\fP or \f3GL_RESCALE_NORMAL\fP.
Normalization is initially disabled.
.SH NOTES
The current normal can be updated at any time.
In particular, \f3fglNormal\fP can be called between a call to \f3fglBegin\fP and
the corresponding call to \f3fglEnd\fP.
.SH ASSOCIATED GETS
\f3fglGet\fP with argument \f3GL_CURRENT_NORMAL\fP
.br
\f3fglIsEnabled\fP with argument \f3GL_NORMALIZE\fP
.br
\f3fglIsEnabled\fP with argument \f3GL_RESCALE_NORMAL\fP
.SH SEE ALSO
\f3fglBegin\fP,
\f3fglColor\fP,
\f3fglIndex\fP,
\f3fglNormalPointer\fP,
\f3fglTexCoord\fP,
\f3fglVertex\fP
@


1.1
log
@Initial revision
@
text
@d1 2
d6 8
a13 4
.ds Dp Feb 04 11:05
.ds Dm 1 Feb  4 11:
.ds Xs 22982     4
_header(Normal,set the current normal vector)
d17 37
a53 1
_names(Normal,3[bdfis])
d55 2
a56 1
_phead(_param1 _param2 _param3)
d60 22
a81 1
_names(Normal,3[bsidf]v)
d83 2
a84 1
_phead(_param1)
d90 1
a90 1
whenever _cmnd is issued.
d96 1
a96 1
Normals specified with _cmnd need not have unit length.
d98 1
a98 1
then normals of any length specified with _cmnd are normalized after transformation.
d103 1
a103 1
To enable and disable normalization, call _cmnd(Enable) and _cmnd(Disable)
d108 2
a109 2
In particular, _cmnd can be called between a call to _cmnd(Begin) and
the corresponding call to _cmnd(End).
d111 1
a111 1
_cmnd(Get) with argument \f3GL_CURRENT_NORMAL\fP
d113 1
a113 1
_cmnd(IsEnabled) with argument \f3GL_NORMALIZE\fP
d115 1
a115 1
_cmnd(IsEnabled) with argument \f3GL_RESCALE_NORMAL\fP
d117 6
a122 6
_cmnd(Begin),
_cmnd(Color),
_cmnd(Index),
_cmnd(NormalPointer),
_cmnd(TexCoord),
_cmnd(Vertex)
@


1.1.1.1
log
@win32-x11 source tree update March 26, 2001
@
text
@@
