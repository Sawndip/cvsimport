head	1.2;
access;
symbols
	win32-x11-2001-03-26:1.1.1.1 SNAPSHOT:1.1.1;
locks; strict;
comment	@# @;
expand	@o@;


1.2
date	2001.06.03.20.47.15;	author ssiddiqi;	state Exp;
branches;
next	1.1;

1.1
date	2001.03.25.19.36.53;	author ssiddiqi;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2001.03.25.19.36.53;	author ssiddiqi;	state Exp;
branches;
next	;


desc
@@


1.2
log
@Win32-X11 update sources check in, June 3, 2001 - ssiddiqi
@
text
@'\"! tbl|eqn | mmdoc
'\"macro stdmacro
.ds Vn Version 1.2
.ds Dt 10 Nov 1998
.ds Re Release 1.0
.ds Dp Apr 04 17:39
.ds Dm  Apr  4  200
.ds Xs 49887 12 fglcolorpointer.gl
.TH FGLCOLORPOINTER 
.SH NAME
.B "fglColorPointer
\- define an array of colors

.SH FORTRAN SPECIFICATION
SUBROUTINE \f3fglColorPointer\fP(
INTEGER*4 \fIsize\fP,
.nf
.ta \w'\f3SUBROUTINE \fPfglColorPointer( 'u
	INTEGER*4 \fItype\fP,
	INTEGER*4 \fIstride\fP,
	CHARACTER*8 \fIpointer\fP )
.fi

.EQ
delim $$
.EN
.SH PARAMETERS
.TP \w'\fIpointer\fP\ \ 'u 
\f2size\fP
Specifies the number of components per color. Must be 3 or 4.
The initial value is 4.
.TP
\f2type\fP
Specifies the data type of each color component in the array.
Symbolic constants
\f3GL_BYTE\fP,
\f3GL_UNSIGNED_BYTE\fP,
\f3GL_SHORT\fP,
\f3GL_UNSIGNED_SHORT\fP,
\f3GL_INT\fP,
\f3GL_UNSIGNED_INT\fP,
\f3GL_FLOAT\fP,
and
\f3GL_DOUBLE\fP
are accepted. 
The initial value is \f3GL_FLOAT\fP.
.TP
\f2stride\fP
Specifies the byte offset between consecutive colors.
If \f2stride\fP is 0 (the initial value), the colors are understood to be
tightly packed in the array. The initial value is 0.
.TP
\f2pointer\fP
Specifies a pointer to the first component of the first color element
in the array.
.SH DESCRIPTION
\f3fglColorPointer\fP specifies the location and data format of an array of color components
to use when rendering.
\f2size\fP specifies the number of components per color, and must be 3 or 4.
\f2type\fP specifies the data type of each color component, and \f2stride\fP
specifies the byte stride from one color to the next allowing vertexes and 
attributes to be packed into a single array or stored in separate arrays.
(Single-array storage may be more efficient on some implementations;
see \f3fglInterleavedArrays\fP.)
.P
When a color array is specified, 
\f2size\fP, \f2type\fP, \f2stride\fP, and \f2pointer\fP are saved as client-side
state.
.P
To enable and disable the color array, call \f3fglEnableClientState\fP and
.br
\f3fglDisableClientState\fP with the argument \f3GL_COLOR_ARRAY\fP. If
enabled, the color array is used when \f3fglDrawArrays\fP,
\f3fglDrawElements\fP, \f3fglDrawRangeElements\fP, or \f3fglArrayElement\fP is
called. 
.SH NOTES
\f3fglColorPointer\fP is available only if the GL version is 1.1 or greater.
.P
The color array is initially disabled and isn't accessed when
\f3fglArrayElement\fP, \f3fglDrawArrays\fP, \f3fglDrawRangeElements\fP, 
or \f3fglDrawElements\fP is called.
.P
Execution of \f3fglColorPointer\fP is not allowed between the execution of
\f3fglBegin\fP and the corresponding execution of \f3fglEnd\fP,
but an error may or may not be generated. If no error is generated,
the operation is undefined.
.P
\f3fglColorPointer\fP is typically implemented on the client side.
.P
Color array parameters are client-side state and are therefore not saved 
or restored by \f3fglPushAttrib\fP and \f3fglPopAttrib\fP.
Use \f3fglPushClientAttrib\fP and \f3fglPopClientAttrib\fP instead.
.SH ERRORS
\f3GL_INVALID_VALUE\fP is generated if \f2size\fP is not 3 or 4.
.P
\f3GL_INVALID_ENUM\fP is generated if \f2type\fP is not an accepted value.
.P
\f3GL_INVALID_VALUE\fP is generated if \f2stride\fP is negative.
.SH ASSOCIATED GETS  
\f3fglIsEnabled\fP with argument \f3GL_COLOR_ARRAY\fP
.br
\f3fglGet\fP with argument \f3GL_COLOR_ARRAY_SIZE\fP
.br
\f3fglGet\fP with argument \f3GL_COLOR_ARRAY_TYPE\fP
.br
\f3fglGet\fP with argument \f3GL_COLOR_ARRAY_STRIDE\fP
.br
\f3fglGetPointerv\fP with argument \f3GL_COLOR_ARRAY_POINTER\fP
.SH SEE ALSO 
\f3fglArrayElement\fP,
\f3fglDrawArrays\fP,
\f3fglDrawElements\fP,
\f3fglEdgeFlagPointer\fP,
\f3fglEnable\fP,
\f3fglGetPointerv\fP,
\f3fglIndexPointer\fP,
\f3fglInterleavedArrays\fP,
\f3fglNormalPointer\fP,
\f3fglPopClientAttrib\fP,
\f3fglPushClientAttrib\fP,
\f3fglTexCoordPointer\fP,
\f3fglVertexPointer\fP
@


1.1
log
@Initial revision
@
text
@d1 2
d6 18
a23 5
.ds Dp Feb 04 11:05
.ds Dm 7 Feb  4 11:
.ds Xs 37848     6
_header(ColorPointer,define an array of colors)
_names(ColorPointer)
d28 2
a29 1
_phead(_param1)
d32 2
a33 1
_phead(_param2)
d47 2
a48 1
_phead(_param3)
d50 1
a50 1
If _param3 is 0 (the initial value), the colors are understood to be
d52 2
a53 1
_phead(_param4)
d57 1
a57 1
_cmnd specifies the location and data format of an array of color components
d59 2
a60 2
_param1 specifies the number of components per color, and must be 3 or 4.
_param2 specifies the data type of each color component, and _param3
d64 1
a64 1
see _cmnd(InterleavedArrays).)
d67 1
a67 1
_param1, _param2, _param3, and _param4 are saved as client-side
d70 1
a70 1
To enable and disable the color array, call _cmnd(EnableClientState) and
d72 3
a74 3
_cmnd(DisableClientState) with the argument \f3GL_COLOR_ARRAY\fP. If
enabled, the color array is used when _cmnd(DrawArrays),
_cmnd(DrawElements), _cmnd(DrawRangeElements), or _cmnd(ArrayElement) is
d77 1
a77 1
_cmnd is available only if the GL version is 1.1 or greater.
d80 2
a81 2
_cmnd(ArrayElement), _cmnd(DrawArrays), _cmnd(DrawRangeElements), 
or _cmnd(DrawElements) is called.
d83 2
a84 2
Execution of _cmnd is not allowed between the execution of
_cmnd(Begin) and the corresponding execution of _cmnd(End),
d88 1
a88 1
_cmnd is typically implemented on the client side.
d91 2
a92 2
or restored by _cmnd(PushAttrib) and _cmnd(PopAttrib).
Use _cmnd(PushClientAttrib) and _cmnd(PopClientAttrib) instead.
d94 1
a94 1
\f3GL_INVALID_VALUE\fP is generated if _param1 is not 3 or 4.
d96 1
a96 1
\f3GL_INVALID_ENUM\fP is generated if _param2 is not an accepted value.
d98 1
a98 1
\f3GL_INVALID_VALUE\fP is generated if _param3 is negative.
d100 1
a100 1
_cmnd(IsEnabled) with argument \f3GL_COLOR_ARRAY\fP
d102 1
a102 1
_cmnd(Get) with argument \f3GL_COLOR_ARRAY_SIZE\fP
d104 1
a104 1
_cmnd(Get) with argument \f3GL_COLOR_ARRAY_TYPE\fP
d106 1
a106 1
_cmnd(Get) with argument \f3GL_COLOR_ARRAY_STRIDE\fP
d108 1
a108 1
_cmnd(GetPointerv) with argument \f3GL_COLOR_ARRAY_POINTER\fP
d110 13
a122 13
_cmnd(ArrayElement),
_cmnd(DrawArrays),
_cmnd(DrawElements),
_cmnd(EdgeFlagPointer),
_cmnd(Enable),
_cmnd(GetPointerv),
_cmnd(IndexPointer),
_cmnd(InterleavedArrays),
_cmnd(NormalPointer),
_cmnd(PopClientAttrib),
_cmnd(PushClientAttrib),
_cmnd(TexCoordPointer),
_cmnd(VertexPointer)
@


1.1.1.1
log
@win32-x11 source tree update March 26, 2001
@
text
@@
