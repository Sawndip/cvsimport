head	1.2;
access;
symbols
	win32-x11-2001-03-26:1.1.1.1 SNAPSHOT:1.1.1;
locks; strict;
comment	@# @;
expand	@o@;


1.2
date	2001.06.03.20.47.17;	author ssiddiqi;	state Exp;
branches;
next	1.1;

1.1
date	2001.03.25.19.36.54;	author ssiddiqi;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2001.03.25.19.36.54;	author ssiddiqi;	state Exp;
branches;
next	;


desc
@@


1.2
log
@Win32-X11 update sources check in, June 3, 2001 - ssiddiqi
@
text
@'\"! tbl|eqn | mmdoc
'\"macro stdmacro
.ds Vn Version 1.2
.ds Dt 10 Nov 1998
.ds Re Release 1.0
.ds Dp Apr 04 17:40
.ds Dm  Apr  4  200
.ds Xs 37058 9 fglshademodel.gl
.TH FGLSHADEMODEL 
.SH NAME
.B "fglShadeModel
\- select flat or smooth shading

.SH FORTRAN SPECIFICATION
SUBROUTINE \f3fglShadeModel\fP(
INTEGER*4 \fImode\fP )
.nf
.fi

.EQ
delim $$
.EN
.SH PARAMETERS
.TP \w'\f2mode\fP\ \ 'u 
\f2mode\fP
Specifies a symbolic value representing a shading technique.
Accepted values are \f3GL_FLAT\fP and \f3GL_SMOOTH\fP.
The initial value is \f3GL_SMOOTH\fP.
.SH DESCRIPTION
GL primitives can have either flat or smooth shading.
Smooth shading,
the default,
causes the computed colors of vertices to be interpolated as the
primitive is rasterized,
typically assigning different colors to each resulting pixel fragment.
Flat shading selects the computed color of just one vertex
and assigns it to all the pixel fragments
generated by rasterizing a single primitive.
In either case, the computed color of a vertex is the result of
lighting if lighting is enabled,
or it is the current color at the time the vertex was specified if
lighting is disabled. 
.P
Flat and smooth shading are indistinguishable for points.
Starting when \f3fglBegin\fP is issued and counting vertices and
primitives from 1, the GL gives each flat-shaded line segment $i$ the
computed color of vertex $i ~+~ 1$, its second vertex.
Counting similarly from 1,
the GL gives each flat-shaded polygon the computed color of the vertex listed
in the following table.
This is the last vertex to specify the polygon in all cases except single
polygons,
where the first vertex specifies the flat-shaded color.
.sp
.TS
center;
lb cb
l c .
_
Primitive Type of Polygon $i$	Vertex
_
Single polygon ($ i ~==~ 1 $)	1
Triangle strip	$i ~+~ 2$
Triangle fan	$i ~+~ 2$
Independent triangle	$ 3 i$
Quad strip	$2 i ~+~ 2$
Independent quad 	$ 4 i $
_
.TE
.sp
Flat and smooth shading are specified by \f3fglShadeModel\fP with \f2mode\fP set to
\f3GL_FLAT\fP and \f3GL_SMOOTH\fP, respectively.
.SH ERRORS
\f3GL_INVALID_ENUM\fP is generated if \f2mode\fP is any value other than
\f3GL_FLAT\fP or \f3GL_SMOOTH\fP.
.P
\f3GL_INVALID_OPERATION\fP is generated if \f3fglShadeModel\fP
is executed between the execution of \f3fglBegin\fP
and the corresponding execution of \f3fglEnd\fP.
.SH ASSOCIATED GETS
\f3fglGet\fP with argument \f3GL_SHADE_MODEL\fP
.SH SEE ALSO
\f3fglBegin\fP,
\f3fglColor\fP,
\f3fglLight\fP,
\f3fglLightModel\fP
@


1.1
log
@Initial revision
@
text
@d1 2
d6 14
a19 5
.ds Dp Feb 04 11:05
.ds Dm 5 Feb  4 11:
.ds Xs 04246     5
_header(ShadeModel,select flat or smooth shading)
_names(ShadeModel)
d24 2
a25 1
_phead(_param1)
d45 1
a45 1
Starting when _cmnd(Begin) is issued and counting vertices and
d71 1
a71 1
Flat and smooth shading are specified by _cmnd with _param1 set to
d74 1
a74 1
\f3GL_INVALID_ENUM\fP is generated if _param1 is any value other than
d77 3
a79 3
\f3GL_INVALID_OPERATION\fP is generated if _cmnd
is executed between the execution of _cmnd(Begin)
and the corresponding execution of _cmnd(End).
d81 1
a81 1
_cmnd(Get) with argument \f3GL_SHADE_MODEL\fP
d83 4
a86 4
_cmnd(Begin),
_cmnd(Color),
_cmnd(Light),
_cmnd(LightModel)
@


1.1.1.1
log
@win32-x11 source tree update March 26, 2001
@
text
@@
