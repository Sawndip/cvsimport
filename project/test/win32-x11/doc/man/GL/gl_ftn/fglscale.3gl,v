head	1.2;
access;
symbols
	win32-x11-2001-03-26:1.1.1.1 SNAPSHOT:1.1.1;
locks; strict;
comment	@# @;
expand	@o@;


1.2
date	2001.06.03.20.47.17;	author ssiddiqi;	state Exp;
branches;
next	1.1;

1.1
date	2001.03.25.19.36.54;	author ssiddiqi;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2001.03.25.19.36.54;	author ssiddiqi;	state Exp;
branches;
next	;


desc
@@


1.2
log
@Win32-X11 update sources check in, June 3, 2001 - ssiddiqi
@
text
@'\"! eqn | mmdoc
'\"macro stdmacro
.ds Vn Version 1.2
.ds Dt 10 Nov 1998
.ds Re Release 1.0
.ds Dp Apr 04 17:40
.ds Dm  Apr  4  200
.ds Xs 11533 8 fglscale.gl
.TH FGLSCALE 
.SH NAME
.B "fglScaled, fglScalef
\- multiply the current matrix by a general scaling matrix

.SH FORTRAN SPECIFICATION
SUBROUTINE \f3fglScaled\fP(
REAL*8 \fIx\fP,
.nf
.ta \w'\f3SUBROUTINE \fPfglScaled( 'u
	REAL*8 \fIy\fP,
	REAL*8 \fIz\fP )
.fi
SUBROUTINE \f3fglScalef\fP(
REAL*4 \fIx\fP,
.nf
.ta \w'\f3SUBROUTINE \fPfglScalef( 'u
	REAL*4 \fIy\fP,
	REAL*4 \fIz\fP )
.fi

.EQ
delim $$
.EN
.SH PARAMETERS
.TP \w'\f2x\fP\ \f2y\fP\ \f2z\fP\ \ 'u 
\f2x\fP, \f2y\fP, \f2z\fP
Specify scale factors along the \f2x\fP, \f2y\fP, and \f2z\fP axes, respectively.
.SH DESCRIPTION
\f3fglScale\fP produces a nonuniform scaling along the \f2x\fP, \f2y\fP, and
\f2z\fP axes. 
The three parameters indicate the desired scale factor along
each of the three axes.
.P
The current matrix
(see \f3fglMatrixMode\fP)
is multiplied by this scale matrix,
and the product replaces the current matrix
as if \f3fglScale\fP were called with the following matrix
as its argument:

.P
.ce
.EQ 
left ( ~ down 20 matrix {
   ccol { ~"x" above ~0 above ~0 above ~0 }
   ccol { ~0 above ~"y" above ~0 above ~0 }
   ccol { ~0 above ~0 above ~"z" above ~0 }
   ccol { ~0 above ~0 above ~0 above ~1}
} ~~ right )
.EN
.sp
If the matrix mode is either \f3GL_MODELVIEW\fP or \f3GL_PROJECTION\fP,
all objects drawn after \f3fglScale\fP is called are scaled.
.P
Use \f3fglPushMatrix\fP and \f3fglPopMatrix\fP to save and restore
the unscaled coordinate system.
.SH NOTES
If scale factors other than 1 are applied to the modelview matrix
and lighting is enabled, lighting often appears wrong.
In that case, enable automatic normalization of normals by
calling \f3fglEnable\fP with the argument \f3GL_NORMALIZE\fP.
.SH ERRORS
\f3GL_INVALID_OPERATION\fP is generated if \f3fglScale\fP
is executed between the execution of 
\f3fglBegin\fP
and the corresponding execution of \f3fglEnd\fP.
.SH ASSOCIATED GETS
\f3fglGet\fP with argument \f3GL_MATRIX_MODE\fP
.br
\f3fglGet\fP with argument \f3GL_COLOR_MATRIX\fP
.br
\f3fglGet\fP with argument \f3GL_MODELVIEW_MATRIX\fP
.br
\f3fglGet\fP with argument \f3GL_PROJECTION_MATRIX\fP
.br
\f3fglGet\fP with argument \f3GL_TEXTURE_MATRIX\fP
.SH SEE ALSO
\f3fglMatrixMode\fP,
\f3fglMultMatrix\fP, 
\f3fglPushMatrix\fP,
\f3fglRotate\fP,
\f3fglTranslate\fP
@


1.1
log
@Initial revision
@
text
@d1 2
d6 24
a29 5
.ds Dp Feb 04 11:05
.ds Dm 0 Feb  4 11:
.ds Xs 39478     4
_header(Scale,multiply the current matrix by a general scaling matrix)
_names(Scale,[df])
d34 2
a35 1
_phead(_param1 _param2 _param3)
d38 1
a38 1
_cmnd produces a nonuniform scaling along the \f2x\fP, \f2y\fP, and
d44 1
a44 1
(see _cmnd(MatrixMode))
d47 1
a47 1
as if _cmnd were called with the following matrix
d54 3
a56 3
   ccol { ~_eqnparam1 above ~0 above ~0 above ~0 }
   ccol { ~0 above ~_eqnparam2 above ~0 above ~0 }
   ccol { ~0 above ~0 above ~_eqnparam3 above ~0 }
d62 1
a62 1
all objects drawn after _cmnd is called are scaled.
d64 1
a64 1
Use _cmnd(PushMatrix) and _cmnd(PopMatrix) to save and restore
d70 1
a70 1
calling _cmnd(Enable) with the argument \f3GL_NORMALIZE\fP.
d72 1
a72 1
\f3GL_INVALID_OPERATION\fP is generated if _cmnd
d74 2
a75 2
_cmnd(Begin)
and the corresponding execution of _cmnd(End).
d77 1
a77 1
_cmnd(Get) with argument \f3GL_MATRIX_MODE\fP
d79 1
a79 1
_cmnd(Get) with argument \f3GL_COLOR_MATRIX\fP
d81 1
a81 1
_cmnd(Get) with argument \f3GL_MODELVIEW_MATRIX\fP
d83 1
a83 1
_cmnd(Get) with argument \f3GL_PROJECTION_MATRIX\fP
d85 1
a85 1
_cmnd(Get) with argument \f3GL_TEXTURE_MATRIX\fP
d87 5
a91 5
_cmnd(MatrixMode),
_cmnd(MultMatrix), 
_cmnd(PushMatrix),
_cmnd(Rotate),
_cmnd(Translate)
@


1.1.1.1
log
@win32-x11 source tree update March 26, 2001
@
text
@@
