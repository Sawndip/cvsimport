head	1.2;
access;
symbols
	win32-x11-2001-03-26:1.1.1.1 SNAPSHOT:1.1.1;
locks; strict;
comment	@# @;
expand	@o@;


1.2
date	2001.06.03.20.47.17;	author ssiddiqi;	state Exp;
branches;
next	1.1;

1.1
date	2001.03.25.19.36.54;	author ssiddiqi;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2001.03.25.19.36.54;	author ssiddiqi;	state Exp;
branches;
next	;


desc
@@


1.2
log
@Win32-X11 update sources check in, June 3, 2001 - ssiddiqi
@
text
@'\"! eqn | mmdoc
'\"macro stdmacro
.ds Vn Version 1.2
.ds Dt 10 Nov 1998
.ds Re Release 1.0
.ds Dp Apr 04 17:40
.ds Dm  Apr  4  200
.ds Xs 27803 7 fglrect.gl
.TH FGLRECT 
.SH NAME
.B "fglRectd, fglRectf, fglRecti, fglRects, fglRectdv, fglRectfv, fglRectiv, fglRectsv
\- draw a rectangle

.SH FORTRAN SPECIFICATION
SUBROUTINE \f3fglRectd\fP(
REAL*8 \fIx1\fP,
.nf
.ta \w'\f3SUBROUTINE \fPfglRectd( 'u
	REAL*8 \fIy1\fP,
	REAL*8 \fIx2\fP,
	REAL*8 \fIy2\fP )
.fi
SUBROUTINE \f3fglRectf\fP(
REAL*4 \fIx1\fP,
.nf
.ta \w'\f3SUBROUTINE \fPfglRectf( 'u
	REAL*4 \fIy1\fP,
	REAL*4 \fIx2\fP,
	REAL*4 \fIy2\fP )
.fi
SUBROUTINE \f3fglRecti\fP(
INTEGER*4 \fIx1\fP,
.nf
.ta \w'\f3SUBROUTINE \fPfglRecti( 'u
	INTEGER*4 \fIy1\fP,
	INTEGER*4 \fIx2\fP,
	INTEGER*4 \fIy2\fP )
.fi
SUBROUTINE \f3fglRects\fP(
INTEGER*2 \fIx1\fP,
.nf
.ta \w'\f3SUBROUTINE \fPfglRects( 'u
	INTEGER*2 \fIy1\fP,
	INTEGER*2 \fIx2\fP,
	INTEGER*2 \fIy2\fP )
.fi

.SH PARAMETERS
.TP \w'\f2x1\fP\ \f2y1\fP\ \ 'u 
\f2x1\fP, \f2y1\fP
Specify one vertex of a rectangle.
.TP
\f2x2\fP, \f2y2\fP
Specify the opposite vertex of the rectangle.
.SH FORTRAN SPECIFICATION
SUBROUTINE \f3fglRectdv\fP(
CHARACTER*8 \fIv1\fP,
.nf
.ta \w'\f3SUBROUTINE \fPfglRectdv( 'u
	CHARACTER*8 \fIv2\fP )
.fi
SUBROUTINE \f3fglRectfv\fP(
CHARACTER*8 \fIv1\fP,
.nf
.ta \w'\f3SUBROUTINE \fPfglRectfv( 'u
	CHARACTER*8 \fIv2\fP )
.fi
SUBROUTINE \f3fglRectiv\fP(
CHARACTER*8 \fIv1\fP,
.nf
.ta \w'\f3SUBROUTINE \fPfglRectiv( 'u
	CHARACTER*8 \fIv2\fP )
.fi
SUBROUTINE \f3fglRectsv\fP(
CHARACTER*8 \fIv1\fP,
.nf
.ta \w'\f3SUBROUTINE \fPfglRectsv( 'u
	CHARACTER*8 \fIv2\fP )
.fi

.BP
.SH PARAMETERS
.TP
\f2v1\fP
Specifies a pointer to one vertex of a rectangle.
.TP
\f2v2\fP
Specifies a pointer to the opposite vertex of the rectangle.
.SH DESCRIPTION
\f3fglRect\fP supports efficient specification of rectangles as two corner points.
Each 
rectangle command takes four arguments,
organized either as two consecutive pairs of (\f2x\fP,\f2y\fP) coordinates,
or as two pointers to arrays,
each containing an (\f2x\fP,\f2y\fP) pair.
The resulting rectangle is defined in the \f2z\fP = 0 plane.
.P
\f3fglRect\fP(\f2x1\fP, \f2y1\fP, \f2x2\fP, \f2y2\fP)
is exactly equivalent to the following sequence:
.Ex 6
glBegin(\f3GL_POLYGON\fP);
glVertex2(\f2x1\fP, \f2y1\fP);
glVertex2(\f2x2\fP, \f2y1\fP);
glVertex2(\f2x2\fP, \f2y2\fP);
glVertex2(\f2x1\fP, \f2y2\fP);
glEnd();
.Ee
Note that if the second vertex is above and to the right of the first vertex,
the rectangle is constructed with a counterclockwise winding.
.SH ERRORS
\f3GL_INVALID_OPERATION\fP is generated if \f3fglRect\fP
is executed between the execution of \f3fglBegin\fP
and the corresponding execution of \f3fglEnd\fP.
.SH SEE ALSO
\f3fglBegin\fP,
\f3fglVertex\fP
@


1.1
log
@Initial revision
@
text
@d1 2
d6 42
a47 5
.ds Dp Feb 04 11:05
.ds Dm 9 Feb  4 11:
.ds Xs 25554     4
_header(Rect,draw a rectangle)
_names(Rect,[dfis])
d49 2
a50 1
_phead(_param1 _param2)
d52 2
a53 1
_phead(_param3 _param4)
d55 26
a80 1
_names(Rect,[dfis]v)
d83 2
a84 1
_phead(_param1)
d86 2
a87 1
_phead(_param2)
d90 1
a90 1
_cmnd supports efficient specification of rectangles as two corner points.
d98 1
a98 1
_cmnd(Rect)(_param1(1), _param2(1), _param3(1), _param4(1))
d102 4
a105 4
glVertex2(_param1(1), _param2(1));
glVertex2(_param3(1), _param2(1));
glVertex2(_param3(1), _param4(1));
glVertex2(_param1(1), _param4(1));
d111 3
a113 3
\f3GL_INVALID_OPERATION\fP is generated if _cmnd
is executed between the execution of _cmnd(Begin)
and the corresponding execution of _cmnd(End).
d115 2
a116 2
_cmnd(Begin),
_cmnd(Vertex)
@


1.1.1.1
log
@win32-x11 source tree update March 26, 2001
@
text
@@
