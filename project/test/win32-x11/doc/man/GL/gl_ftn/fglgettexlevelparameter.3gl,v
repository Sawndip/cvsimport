head	1.2;
access;
symbols
	win32-x11-2001-03-26:1.1.1.1 SNAPSHOT:1.1.1;
locks; strict;
comment	@# @;
expand	@o@;


1.2
date	2001.06.03.20.47.16;	author ssiddiqi;	state Exp;
branches;
next	1.1;

1.1
date	2001.03.25.19.36.54;	author ssiddiqi;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2001.03.25.19.36.54;	author ssiddiqi;	state Exp;
branches;
next	;


desc
@@


1.2
log
@Win32-X11 update sources check in, June 3, 2001 - ssiddiqi
@
text
@'\"! eqn | mmdoc
'\"macro stdmacro
.ds Vn Version 1.2
.ds Dt 10 Nov 1998
.ds Re Release 1.0
.ds Dp Apr 04 17:40
.ds Dm  Apr  4  200
.ds Xs 65116 14 fglgettexlevelparameter.gl
.TH FGLGETTEXLEVELPARAMETER 
.SH NAME
.B "fglGetTexLevelParameterfv, fglGetTexLevelParameteriv
\- return texture parameter values for a specific level of detail

.SH FORTRAN SPECIFICATION
SUBROUTINE \f3fglGetTexLevelParameterfv\fP(
INTEGER*4 \fItarget\fP,
.nf
.ta \w'\f3SUBROUTINE \fPfglGetTexLevelParameterfv( 'u
	INTEGER*4 \fIlevel\fP,
	INTEGER*4 \fIpname\fP,
	CHARACTER*8 \fIparams\fP )
.fi
SUBROUTINE \f3fglGetTexLevelParameteriv\fP(
INTEGER*4 \fItarget\fP,
.nf
.ta \w'\f3SUBROUTINE \fPfglGetTexLevelParameteriv( 'u
	INTEGER*4 \fIlevel\fP,
	INTEGER*4 \fIpname\fP,
	CHARACTER*8 \fIparams\fP )
.fi

.EQ
delim $$
.EN
.SH PARAMETERS
.TP \w'\f2target\fP\ \ 'u 
\f2target\fP
Specifies the symbolic name of the target texture,
either \f3GL_TEXTURE_1D\fP, \f3GL_TEXTURE_2D\fP, \f3GL_TEXTURE_3D\fP,
\f3GL_PROXY_TEXTURE_1D\fP, \f3GL_PROXY_TEXTURE_2D\fP, or
\f3GL_PROXY_TEXTURE_3D\fP.
.TP
\f2level\fP
Specifies the level-of-detail number of the desired image.
Level 0 is the base image level.
Level $n$ is the $n$th mipmap reduction image.
.TP
\f2pname\fP
Specifies the symbolic name of a texture parameter.
\f3GL_TEXTURE_WIDTH\fP,
\f3GL_TEXTURE_HEIGHT\fP,
\f3GL_TEXTURE_DEPTH\fP,
\f3GL_TEXTURE_INTERNAL_FORMAT\fP,
\f3GL_TEXTURE_BORDER\fP,
\f3GL_TEXTURE_RED_SIZE\fP,
\f3GL_TEXTURE_GREEN_SIZE\fP,
\f3GL_TEXTURE_BLUE_SIZE\fP,
\f3GL_TEXTURE_ALPHA_SIZE\fP,
\f3GL_TEXTURE_LUMINANCE_SIZE\fP, and
\f3GL_TEXTURE_INTENSITY_SIZE\fP are accepted.
.TP
\f2params\fP
Returns the requested data.
.SH DESCRIPTION
\f3fglGetTexLevelParameter\fP returns in \f2params\fP texture parameter values for a specific 
level-of-detail value,
specified as \f2level\fP.
\f2target\fP defines the target texture,
either \f3GL_TEXTURE_1D\fP, \f3GL_TEXTURE_2D\fP, \f3GL_TEXTURE_3D\fP,
\f3GL_PROXY_TEXTURE_1D\fP, 
\f3GL_PROXY_TEXTURE_2D\fP, or
\f3GL_PROXY_TEXTURE_3D\fP.
.BR
.P
\f3GL_MAX_TEXTURE_SIZE\fP, and \f3GL_MAX_3D_TEXTURE_SIZE\fP are not really
descriptive enough.
It has to report the largest square texture image that can be
accommodated with mipmaps and borders, 
but a long skinny texture, or a texture without mipmaps and borders, may
easily fit in texture memory. 
The proxy targets allow the user to more accurately query
whether the GL can accommodate a texture of a given configuration.
If the texture cannot be accommodated, the texture state variables, which
may be queried with \f3fglGetTexLevelParameter\fP, are set to 0.  If the texture can be accommodated,
the texture state values will be set as they would be set for a
non-proxy target.
.P
\f2pname\fP specifies the texture parameter whose value or values
will be returned.
.P
The accepted parameter names are as follows:
.TP 10
\f3GL_TEXTURE_WIDTH\fP
\f2params\fP returns a single value,
the width of the texture image.
This value includes the border of the texture image. The initial value is
0. 
.TP
\f3GL_TEXTURE_HEIGHT\fP
\f2params\fP returns a single value,
the height of the texture image.
This value includes the border of the texture image. The initial value is
0.
.TP
\f3GL_TEXTURE_DEPTH\fP
\f2params\fP returns a single value,
the depth of the texture image.
This value includes the border of the texture image. The initial value is
0.
.TP
\f3GL_TEXTURE_INTERNAL_FORMAT\fP
\f2params\fP returns a single value,
the internal format of the texture image. 
.TP
\f3GL_TEXTURE_BORDER\fP
\f2params\fP returns a single value,
the width in pixels of the border of the texture image. The initial value
is 0. 
.TP
\f3GL_TEXTURE_RED_SIZE\fP,
.TP
\f3GL_TEXTURE_GREEN_SIZE\fP,
.TP
\f3GL_TEXTURE_BLUE_SIZE\fP,
.TP
\f3GL_TEXTURE_ALPHA_SIZE\fP,
.TP
\f3GL_TEXTURE_LUMINANCE_SIZE\fP, 
.TP
\f3GL_TEXTURE_INTENSITY_SIZE\fP
The internal storage resolution of an individual component.
The resolution chosen by the GL will be a close match for the resolution
requested by the user with the component argument of \f3fglTexImage1D\fP,
\f3fglTexImage2D\fP, \f3fglTexImage3D\fP, \f3fglCopyTexImage1D\fP, and
\f3fglCopyTexImage2D\fP. The initial value is 0. 
.SH NOTES
If an error is generated,
no change is made to the contents of \f2params\fP.
.P
\f3GL_TEXTURE_INTERNAL_FORMAT\fP is available only if the GL version is
1.1 or greater. In version 1.0, use \f3GL_TEXTURE_COMPONENTS\fP
instead.
.P
\f3GL_PROXY_TEXTURE_1D\fP and \f3GL_PROXY_TEXTURE_2D\fP are 
available only if the GL version is 1.1 or greater.
.P
\f3GL_TEXTURE_3D\fP, \f3GL_PROXY_TEXTURE_3D\fP, and \f3GL_TEXTURE_DEPTH\fP
are available only if the GL version is 1.2 or greater.
.P
When the _arbstring(multitexture) extension is supported, \f3fglGetTexLevelParameter\fP returns
the texture level parameters for the active texture unit.
.SH ERRORS
\f3GL_INVALID_ENUM\fP is generated if \f2target\fP or \f2pname\fP is not an
accepted value.
.P
\f3GL_INVALID_VALUE\fP is generated if \f2level\fP is less than 0.
.P 
\f3GL_INVALID_VALUE\fP may be generated if \f2level\fP is greater
than $ log sub 2$ \f2max\fP,
where \f2max\fP is the returned value of \f3GL_MAX_TEXTURE_SIZE\fP.
.P
\f3GL_INVALID_OPERATION\fP is generated if \f3fglGetTexLevelParameter\fP
is executed between the execution of \f3fglBegin\fP
and the corresponding execution of \f3fglEnd\fP.
.SH SEE ALSO
\f3fglActiveTextureARB\fP,
\f3fglGetTexParameter\fP,
\f3fglCopyTexImage1D\fP,
\f3fglCopyTexImage2D\fP,
\f3fglCopyTexSubImage1D\fP,
\f3fglCopyTexSubImage2D\fP,
\f3fglCopyTexSubImage3D\fP,
\f3fglTexEnv\fP,
\f3fglTexGen\fP,
\f3fglTexImage1D\fP,
\f3fglTexImage2D\fP,
\f3fglTexImage3D\fP,
\f3fglTexSubImage1D\fP,
\f3fglTexSubImage2D\fP,
\f3fglTexSubImage3D\fP,
\f3fglTexParameter\fP
@


1.1
log
@Initial revision
@
text
@d1 2
d6 26
a31 5
.ds Dp Feb 04 11:05
.ds Dm 5 Feb  4 11:
.ds Xs 50913     7
_header(GetTexLevelParameter,return texture parameter values for a specific level of detail)
_names(GetTexLevelParameter,[fi]v)
d36 2
a37 1
_phead(_param1)
d42 2
a43 1
_phead(_param2)
d47 2
a48 1
_phead(_param3)
d61 2
a62 1
_phead(_param4)
d65 1
a65 1
_cmnd returns in _param4 texture parameter values for a specific 
d67 2
a68 2
specified as _param2.
_param1 defines the target texture,
d84 1
a84 1
may be queried with _cmnd, are set to 0.  If the texture can be accommodated,
d88 1
a88 1
_param3 specifies the texture parameter whose value or values
d94 1
a94 1
_param4 returns a single value,
d100 1
a100 1
_param4 returns a single value,
d106 1
a106 1
_param4 returns a single value,
d112 1
a112 1
_param4 returns a single value,
d116 1
a116 1
_param4 returns a single value,
d133 3
a135 3
requested by the user with the component argument of _cmnd(TexImage1D),
_cmnd(TexImage2D), _cmnd(TexImage3D), _cmnd(CopyTexImage1D), and
_cmnd(CopyTexImage2D). The initial value is 0. 
d138 1
a138 1
no change is made to the contents of _param4.
d150 1
a150 1
When the _arbstring(multitexture) extension is supported, _cmnd returns
d153 1
a153 1
\f3GL_INVALID_ENUM\fP is generated if _param1 or _param3 is not an
d156 1
a156 1
\f3GL_INVALID_VALUE\fP is generated if _param2 is less than 0.
d158 1
a158 1
\f3GL_INVALID_VALUE\fP may be generated if _param2 is greater
d162 3
a164 3
\f3GL_INVALID_OPERATION\fP is generated if _cmnd
is executed between the execution of _cmnd(Begin)
and the corresponding execution of _cmnd(End).
d166 16
a181 16
_cmnd(ActiveTextureARB),
_cmnd(GetTexParameter),
_cmnd(CopyTexImage1D),
_cmnd(CopyTexImage2D),
_cmnd(CopyTexSubImage1D),
_cmnd(CopyTexSubImage2D),
_cmnd(CopyTexSubImage3D),
_cmnd(TexEnv),
_cmnd(TexGen),
_cmnd(TexImage1D),
_cmnd(TexImage2D),
_cmnd(TexImage3D),
_cmnd(TexSubImage1D),
_cmnd(TexSubImage2D),
_cmnd(TexSubImage3D),
_cmnd(TexParameter)
@


1.1.1.1
log
@win32-x11 source tree update March 26, 2001
@
text
@@
