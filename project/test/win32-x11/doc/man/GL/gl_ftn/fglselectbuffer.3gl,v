head	1.2;
access;
symbols
	win32-x11-2001-03-26:1.1.1.1 SNAPSHOT:1.1.1;
locks; strict;
comment	@# @;
expand	@o@;


1.2
date	2001.06.03.20.47.17;	author ssiddiqi;	state Exp;
branches;
next	1.1;

1.1
date	2001.03.25.19.36.54;	author ssiddiqi;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2001.03.25.19.36.54;	author ssiddiqi;	state Exp;
branches;
next	;


desc
@@


1.2
log
@Win32-X11 update sources check in, June 3, 2001 - ssiddiqi
@
text
@'\"! eqn | mmdoc
'\"macro stdmacro
.ds Vn Version 1.2
.ds Dt 10 Nov 1998
.ds Re Release 1.0
.ds Dp Apr 04 17:40
.ds Dm  Apr  4  200
.ds Xs 38760 12 fglselectbuffer.gl
.TH FGLSELECTBUFFER 
.SH NAME
.B "fglSelectBuffer
\- establish a buffer for selection mode values

.SH FORTRAN SPECIFICATION
SUBROUTINE \f3fglSelectBuffer\fP(
INTEGER*4 \fIsize\fP,
.nf
.ta \w'\f3SUBROUTINE \fPfglSelectBuffer( 'u
	CHARACTER*8 \fIbuffer\fP )
.fi

.SH PARAMETERS
.TP \w'\fIbuffer\fP\ \ 'u 
\f2size\fP
Specifies the size of \f2buffer\fP.
.TP
\f2buffer\fP
Returns the selection data.
.SH DESCRIPTION
\f3fglSelectBuffer\fP has two arguments:
\f2buffer\fP is a pointer to an array of unsigned integers,
and \f2size\fP indicates the size of the array.
\f2buffer\fP returns values from the name stack
(see \f3fglInitNames\fP, \f3fglLoadName\fP, \f3fglPushName\fP)
when the rendering mode is \f3GL_SELECT\fP (see \f3fglRenderMode\fP).
\f3fglSelectBuffer\fP must be issued before selection mode is enabled,
and it must not be issued while the rendering mode is \f3GL_SELECT\fP.
.P
A programmer can use selection to determine which primitives
are drawn into some region of a window.
The region is defined by the current modelview and perspective matrices. 
.P
In selection mode, no pixel fragments are produced from rasterization.
Instead,
if a primitive or a raster position intersects the clipping 
volume defined by the viewing frustum
and the user-defined clipping planes,
this primitive causes a selection hit.
(With polygons, no hit occurs if the polygon is culled.)
When a change is made to the name stack,
or when \f3fglRenderMode\fP is called,
a hit record is copied to \f2buffer\fP if any hits have occurred since the
last such event
(name stack change or 
\f3fglRenderMode\fP call).
The hit record consists of the number of names in the name stack at the
time of the event, followed by the minimum and maximum depth values
of all vertices that hit since the previous event,
followed by the name stack contents,
bottom name first.
.P
Depth values (which are in the range [0,1]) are multiplied by 2^32 - 1,
before being placed in the hit record.
.P
An internal index into \f2buffer\fP is reset to 0 whenever selection mode
is entered.
Each time a hit record is copied into \f2buffer\fP,
the index is incremented to point to the cell just past the end
of the block of names \- that is, to the next available cell.
If the hit record is larger than the number of remaining locations in \f2buffer\fP,
as much data as can fit is copied,
and the overflow flag is set.
If the name stack is empty when a hit record is copied,
that record consists of 0 followed by the minimum and maximum depth values.
.P
To exit selection mode, call \f3fglRenderMode\fP with an argument
other than \f3GL_SELECT\fP.
Whenever \f3fglRenderMode\fP is called while the render mode is \f3GL_SELECT\fP,
it returns the number of hit records copied to \f2buffer\fP,
resets the overflow flag and the selection buffer pointer,
and initializes the name stack to be empty.
If the overflow bit was set when \f3fglRenderMode\fP was called,
a negative hit record count is returned.
.SH NOTES
The contents of \f2buffer\fP is undefined until \f3fglRenderMode\fP is called
with an argument other than \f3GL_SELECT\fP.
.P
\f3fglBegin\fP/\f3fglEnd\fP primitives and calls to \f3fglRasterPos\fP
can result in hits.
.SH ERRORS
\f3GL_INVALID_VALUE\fP is generated if \f2size\fP is negative.
.P
\f3GL_INVALID_OPERATION\fP is generated if \f3fglSelectBuffer\fP is called while the
render mode is \f3GL_SELECT\fP,
or if \f3fglRenderMode\fP is called with argument \f3GL_SELECT\fP before
\f3fglSelectBuffer\fP is called at least once.
.P
\f3GL_INVALID_OPERATION\fP is generated if \f3fglSelectBuffer\fP
is executed between the execution of \f3fglBegin\fP
and the corresponding execution of \f3fglEnd\fP.
.SH ASSOCIATED GETS
\f3fglGet\fP with argument \f3GL_NAME_STACK_DEPTH\fP
.br
\f3fglGet\fP with argument \f3GL_SELECTION_BUFFER_SIZE\fP
.br
\f3fglGetPointerv\fP with argument \f3GL_SELECTION_BUFFER_POINTER\fP
.SH SEE ALSO
\f3fglFeedbackBuffer\fP,
\f3fglInitNames\fP,
\f3fglLoadName\fP,
\f3fglPushName\fP,
\f3fglRenderMode\fP
@


1.1
log
@Initial revision
@
text
@d1 2
d6 16
a21 5
.ds Dp Feb 04 11:05
.ds Dm 7 Feb  4 11:
.ds Xs 39171     6
_header(SelectBuffer,establish a buffer for selection mode values)
_names(SelectBuffer)
d23 5
a27 3
_phead(_param1)
Specifies the size of _param2.
_phead(_param2)
d30 7
a36 7
_cmnd has two arguments:
_param2 is a pointer to an array of unsigned integers,
and _param1 indicates the size of the array.
_param2 returns values from the name stack
(see _cmnd(InitNames), _cmnd(LoadName), _cmnd(PushName))
when the rendering mode is \f3GL_SELECT\fP (see _cmnd(RenderMode)).
_cmnd must be issued before selection mode is enabled,
d51 2
a52 2
or when _cmnd(RenderMode) is called,
a hit record is copied to _param2 if any hits have occurred since the
d55 1
a55 1
_cmnd(RenderMode) call).
d65 1
a65 1
An internal index into _param2 is reset to 0 whenever selection mode
d67 1
a67 1
Each time a hit record is copied into _param2,
d70 1
a70 1
If the hit record is larger than the number of remaining locations in _param2,
d76 1
a76 1
To exit selection mode, call _cmnd(RenderMode) with an argument
d78 2
a79 2
Whenever _cmnd(RenderMode) is called while the render mode is \f3GL_SELECT\fP,
it returns the number of hit records copied to _param2,
d82 1
a82 1
If the overflow bit was set when _cmnd(RenderMode) was called,
d85 1
a85 1
The contents of _param2 is undefined until _cmnd(RenderMode) is called
d88 1
a88 1
_cmnd(Begin)/_cmnd(End) primitives and calls to _cmnd(RasterPos)
d91 1
a91 1
\f3GL_INVALID_VALUE\fP is generated if _param1 is negative.
d93 1
a93 1
\f3GL_INVALID_OPERATION\fP is generated if _cmnd is called while the
d95 2
a96 2
or if _cmnd(RenderMode) is called with argument \f3GL_SELECT\fP before
_cmnd is called at least once.
d98 3
a100 3
\f3GL_INVALID_OPERATION\fP is generated if _cmnd
is executed between the execution of _cmnd(Begin)
and the corresponding execution of _cmnd(End).
d102 1
a102 1
_cmnd(Get) with argument \f3GL_NAME_STACK_DEPTH\fP
d104 1
a104 1
_cmnd(Get) with argument \f3GL_SELECTION_BUFFER_SIZE\fP
d106 1
a106 1
_cmnd(GetPointerv) with argument \f3GL_SELECTION_BUFFER_POINTER\fP
d108 5
a112 5
_cmnd(FeedbackBuffer),
_cmnd(InitNames),
_cmnd(LoadName),
_cmnd(PushName),
_cmnd(RenderMode)
@


1.1.1.1
log
@win32-x11 source tree update March 26, 2001
@
text
@@
