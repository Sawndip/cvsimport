head	1.2;
access;
symbols
	win32-x11-2001-03-26:1.1.1.1 SNAPSHOT:1.1.1;
locks; strict;
comment	@# @;
expand	@o@;


1.2
date	2001.06.03.20.47.15;	author ssiddiqi;	state Exp;
branches;
next	1.1;

1.1
date	2001.03.25.19.36.53;	author ssiddiqi;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2001.03.25.19.36.53;	author ssiddiqi;	state Exp;
branches;
next	;


desc
@@


1.2
log
@Win32-X11 update sources check in, June 3, 2001 - ssiddiqi
@
text
@'\"macro stdmacro
.ds Vn Version 1.2
.ds Dt 10 Nov 1998
.ds Re Release 1.0
.ds Dp Apr 04 17:39
.ds Dm  Apr  4  200
.ds Xs 40160 13 fglcalllists.gl
.TH FGLCALLLISTS 
.SH NAME
.B "fglCallLists
\- execute a list of display lists

.SH FORTRAN SPECIFICATION
SUBROUTINE \f3fglCallLists\fP(
INTEGER*4 \fIn\fP,
.nf
.ta \w'\f3SUBROUTINE \fPfglCallLists( 'u
	INTEGER*4 \fItype\fP,
	CHARACTER*8 \fIlists\fP )
.fi

.SH PARAMETERS
.TP \w'\fIlists\fP\ \ 'u 
\f2n\fP
Specifies the number of display lists to be executed.
.TP
\f2type\fP
Specifies the type of values in \f2lists\fP.
Symbolic constants
\f3GL_BYTE\fP,
\f3GL_UNSIGNED_BYTE\fP,
\f3GL_SHORT\fP,
\f3GL_UNSIGNED_SHORT\fP,
\f3GL_INT\fP,
\f3GL_UNSIGNED_INT\fP,
\f3GL_FLOAT\fP,
\f3GL_2_BYTES\fP,
\f3GL_3_BYTES\fP, and
\f3GL_4_BYTES\fP are accepted.
.TP
\f2lists\fP
Specifies the address of an array of name offsets in the display list.
The pointer type is void because the offsets can be bytes,
shorts,
ints,
or floats,
depending on the value of \f2type\fP.
.SH DESCRIPTION
\f3fglCallLists\fP causes each display list in the list of names passed as \f2lists\fP
to be executed.
As a result,
the commands saved in each display list are executed in order,
just as if they were called without using a display list.
Names of display lists that have not been defined are ignored.
.P
\f3fglCallLists\fP provides an efficient means for executing more than one display list.
\f2type\fP allows lists with various name formats to be accepted.
The formats are as follows:
.TP 25
\f3GL_BYTE\fP
\f2lists\fP is treated as an array of signed bytes,
each in the range \-128 through 127.
.TP
\f3GL_UNSIGNED_BYTE\fP
\f2lists\fP is treated as an array of unsigned bytes,
each in the range 0 through 255.
.TP
\f3GL_SHORT\fP
\f2lists\fP is treated as an array of signed two-byte integers,
each in the range \-32768 through 32767.
.TP
\f3GL_UNSIGNED_SHORT\fP
\f2lists\fP is treated as an array of unsigned two-byte integers,
each in the range 0 through 65535.
.TP
\f3GL_INT\fP
\f2lists\fP is treated as an array of signed four-byte integers.
.TP
\f3GL_UNSIGNED_INT\fP
\f2lists\fP is treated as an array of unsigned four-byte integers.
.TP
\f3GL_FLOAT\fP
\f2lists\fP is treated as an array of four-byte floating-point values.
.TP
\f3GL_2_BYTES\fP
\f2lists\fP is treated as an array of unsigned bytes.
Each pair of bytes specifies a single display-list name.
The value of the pair is computed as 256 times the unsigned value
of the first byte plus the unsigned value of the second byte.
.TP
\f3GL_3_BYTES\fP
\f2lists\fP is treated as an array of unsigned bytes.
Each triplet of bytes specifies a single display-list name.
The value of the triplet is computed as 65536 times the unsigned value
of the first byte,
plus 256 times the unsigned value of the second byte,
plus the unsigned value of the third byte.
.TP
\f3GL_4_BYTES\fP
\f2lists\fP is treated as an array of unsigned bytes.
Each quadruplet of bytes specifies a single display-list name.
The value of the quadruplet is computed as 16777216 times the unsigned value 
of the first byte,
plus 65536 times the unsigned value of the second byte,
plus 256 times the unsigned value of the third byte,
plus the unsigned value of the fourth byte.
.P
The list of display-list names is not null-terminated.
Rather,
\f2n\fP specifies how many names are to be taken from \f2lists\fP.
.P
An additional level of indirection is made available with the
\f3fglListBase\fP command,
which specifies an unsigned offset that is added to each display-list
name specified in \f2lists\fP before that display list is executed.
.P
\f3fglCallLists\fP can appear inside a display list.
To avoid the possibility of infinite recursion resulting from display lists
calling one another,
a limit is placed on the nesting level of display
lists during display-list execution.
This limit must be at least 64, and it depends on the implementation.
.P
GL state is not saved and restored across a call to \f3fglCallLists\fP.
Thus,
changes made to GL state during the execution of the display lists
remain after execution is completed.
Use \f3fglPushAttrib\fP,
\f3fglPopAttrib\fP,
\f3fglPushMatrix\fP,
and \f3fglPopMatrix\fP to preserve GL state across \f3fglCallLists\fP calls.
.SH NOTES
Display lists can be executed between a call to \f3fglBegin\fP
and the corresponding call to \f3fglEnd\fP,
as long as the display list includes only commands that are allowed
in this interval.
.SH ERRORS
\f3GL_INVALID_VALUE\fP is generated if \f2n\fP is negative.
.P
\f3GL_INVALID_ENUM\fP is generated if \f2type\fP is not one of 
\f3GL_BYTE\fP,
\f3GL_UNSIGNED_BYTE\fP,
\f3GL_SHORT\fP,
\f3GL_UNSIGNED_SHORT\fP,
\f3GL_INT\fP,
\f3GL_UNSIGNED_INT\fP,
\f3GL_FLOAT\fP,
\f3GL_2_BYTES\fP,
\f3GL_3_BYTES\fP,
\f3GL_4_BYTES\fP.
.SH ASSOCIATED GETS
\f3fglGet\fP with argument \f3GL_LIST_BASE\fP
.br
\f3fglGet\fP with argument \f3GL_MAX_LIST_NESTING\fP
.br
\f3fglIsList\fP
.SH SEE ALSO
\f3fglCallList\fP,
\f3fglDeleteLists\fP,
\f3fglGenLists\fP,
\f3fglListBase\fP,
\f3fglNewList\fP,
\f3fglPushAttrib\fP, 
.br
\f3fglPushMatrix\fP
@


1.1
log
@Initial revision
@
text
@d1 1
d5 17
a21 5
.ds Dp Feb 04 11:04
.ds Dm 4 Feb  4 11:
.ds Xs 46352     7
_header(CallLists,execute a list of display lists)
_names(CallLists)
d23 2
a24 1
_phead(_param1)
d26 3
a28 2
_phead(_param2)
Specifies the type of values in _param3.
d40 2
a41 1
_phead(_param3)
d47 1
a47 1
depending on the value of _param2.
d49 1
a49 1
_cmnd causes each display list in the list of names passed as _param3
d56 2
a57 2
_cmnd provides an efficient means for executing more than one display list.
_param2 allows lists with various name formats to be accepted.
d61 1
a61 1
_param3 is treated as an array of signed bytes,
d65 1
a65 1
_param3 is treated as an array of unsigned bytes,
d69 1
a69 1
_param3 is treated as an array of signed two-byte integers,
d73 1
a73 1
_param3 is treated as an array of unsigned two-byte integers,
d77 1
a77 1
_param3 is treated as an array of signed four-byte integers.
d80 1
a80 1
_param3 is treated as an array of unsigned four-byte integers.
d83 1
a83 1
_param3 is treated as an array of four-byte floating-point values.
d86 1
a86 1
_param3 is treated as an array of unsigned bytes.
d92 1
a92 1
_param3 is treated as an array of unsigned bytes.
d100 1
a100 1
_param3 is treated as an array of unsigned bytes.
d110 1
a110 1
_param1 specifies how many names are to be taken from _param3.
d113 1
a113 1
_cmnd(ListBase) command,
d115 1
a115 1
name specified in _param3 before that display list is executed.
d117 1
a117 1
_cmnd can appear inside a display list.
d124 1
a124 1
GL state is not saved and restored across a call to _cmnd.
d128 4
a131 4
Use _cmnd(PushAttrib),
_cmnd(PopAttrib),
_cmnd(PushMatrix),
and _cmnd(PopMatrix) to preserve GL state across _cmnd calls.
d133 2
a134 2
Display lists can be executed between a call to _cmnd(Begin)
and the corresponding call to _cmnd(End),
d138 1
a138 1
\f3GL_INVALID_VALUE\fP is generated if _param1 is negative.
d140 1
a140 1
\f3GL_INVALID_ENUM\fP is generated if _param2 is not one of 
d152 1
a152 1
_cmnd(Get) with argument \f3GL_LIST_BASE\fP
d154 1
a154 1
_cmnd(Get) with argument \f3GL_MAX_LIST_NESTING\fP
d156 1
a156 1
_cmnd(IsList)
d158 6
a163 6
_cmnd(CallList),
_cmnd(DeleteLists),
_cmnd(GenLists),
_cmnd(ListBase),
_cmnd(NewList),
_cmnd(PushAttrib), 
d165 1
a165 1
_cmnd(PushMatrix)
@


1.1.1.1
log
@win32-x11 source tree update March 26, 2001
@
text
@@
