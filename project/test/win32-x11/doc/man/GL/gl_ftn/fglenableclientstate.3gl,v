head	1.2;
access;
symbols
	win32-x11-2001-03-26:1.1.1.1 SNAPSHOT:1.1.1;
locks; strict;
comment	@# @;
expand	@o@;


1.2
date	2001.06.03.20.47.16;	author ssiddiqi;	state Exp;
branches;
next	1.1;

1.1
date	2001.03.25.19.36.53;	author ssiddiqi;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2001.03.25.19.36.53;	author ssiddiqi;	state Exp;
branches;
next	;


desc
@@


1.2
log
@Win32-X11 update sources check in, June 3, 2001 - ssiddiqi
@
text
@'\"! tbl|eqn | mmdoc
'\"macro stdmacro
.ds Vn Version 1.2
.ds Dt 10 Nov 1998
.ds Re Release 1.0
.ds Dp Apr 04 17:40
.ds Dm  Apr  4  200
.ds Xs 15081 11 fglenableclientstate.gl
.TH FGLENABLECLIENTSTATE 
.SH NAME
.B "fglEnableClientState, fglDisableClientState
\- enable or disable client-side capability

.SH FORTRAN SPECIFICATION
SUBROUTINE \f3fglEnableClientState\fP(
INTEGER*4 \fIarray\fP )
.nf
.fi

.EQ
delim $$
.EN
.SH PARAMETERS
.TP \w'\f2array\fP\ \ 'u 
\f2array\fP
Specifies the capability to enable.
Symbolic constants
\f3GL_COLOR_ARRAY\fP,
\f3GL_EDGE_FLAG_ARRAY\fP,
\f3GL_INDEX_ARRAY\fP,
\f3GL_NORMAL_ARRAY\fP,
\f3GL_TEXTURE_COORD_ARRAY\fP, and
\f3GL_VERTEX_ARRAY\fP
are accepted. 
.SH FORTRAN SPECIFICATION
SUBROUTINE \f3fglDisableClientState\fP(
INTEGER*4 \fIarray\fP )
.nf
.fi

.SH PARAMETERS
.TP
\f2array\fP
Specifies the capability to disable.
.SH DESCRIPTION
\f3fglEnableClientState\fP and \f3fglDisableClientState\fP
enable or disable individual client-side capabilities. By default, all
client-side capabilities are disabled.
Both 
\f3fglEnableClientState\fP and \f3fglDisableClientState\fP take a
single argument, \f2array\fP, which can assume one of the following
values: 
.TP 25
\f3GL_COLOR_ARRAY\fP
If enabled, the color array is enabled for writing and used during
rendering when \f3fglArrayElement\fP, \f3fglDrawArrays\fP,
\f3fglDrawElement\fP, or \f3fglDrawRangeElements\fP is called. See
\f3fglColorPointer\fP. 
.TP
\f3GL_EDGE_FLAG_ARRAY\fP
If enabled, the edge flag array is enabled for writing and used during
rendering when \f3fglArrayElement\fP, \f3fglDrawArrays\fP,
\f3fglDrawElement\fP, or \f3fglDrawRangeElements\fP is called. See
\f3fglEdgeFlagPointer\fP. 
.TP
\f3GL_INDEX_ARRAY\fP
If enabled, the index array is enabled for writing and used during
rendering when \f3fglArrayElement\fP, \f3fglDrawArrays\fP,
\f3fglDrawElement\fP, or \f3fglDrawRangeElements\fP is called. See
\f3fglIndexPointer\fP. 
.TP
\f3GL_NORMAL_ARRAY\fP
If enabled, the normal array is enabled for writing and used during
rendering when \f3fglArrayElement\fP, \f3fglDrawArrays\fP,
\f3fglDrawElement\fP, or \f3fglDrawRangeElements\fP is called. See
\f3fglNormalPointer\fP. 
.TP
\f3GL_TEXTURE_COORD_ARRAY\fP
If enabled, the texture coordinate array is enabled for writing and used during
rendering when \f3fglArrayElement\fP, \f3fglDrawArrays\fP,
\f3fglDrawElement\fP, or \f3fglDrawRangeElements\fP is called. See
\f3fglTexCoordPointer\fP. 
.TP
\f3GL_VERTEX_ARRAY\fP
If enabled, the vertex array is enabled for writing and used during
rendering when \f3fglArrayElement\fP, \f3fglDrawArrays\fP,
\f3fglDrawElement\fP, or \f3fglDrawRangeElements\fP is called. See
\f3fglVertexPointer\fP. 
.SH NOTES
\f3fglEnableClientState\fP is available only if the GL version is 1.1 or greater.
.P
If _arbstring(multitexture) is supported, enabling and disabling
\f3GL_TEXTURE_COORD_ARRAY\fP affects the active client texture unit.
The active client texture unit is controlled with
\f3fglClientActiveTextureARB\fP.
.SH ERRORS
\f3GL_INVALID_ENUM\fP is generated if \f2array\fP is not an accepted value.
.P
\f3fglEnableClientState\fP is not allowed between the execution of \f3fglBegin\fP and the
corresponding \f3fglEnd\fP, but an error may or may not be generated. If
no error is generated, the behavior is undefined.
.SH SEE ALSO 
\f3fglArrayElement\fP,
\f3fglClientActiveTextureARB\fP,
\f3fglColorPointer\fP,
\f3fglDrawArrays\fP,
\f3fglDrawElements\fP,
\f3fglEdgeFlagPointer\fP,
\f3fglEnable\fP,
\f3fglGetPointerv\fP,
\f3fglIndexPointer\fP,
\f3fglInterleavedArrays\fP,
\f3fglNormalPointer\fP,
\f3fglTexCoordPointer\fP,
\f3fglVertexPointer\fP
@


1.1
log
@Initial revision
@
text
@d1 2
d6 14
a19 5
.ds Dp Feb 04 11:05
.ds Dm 2 Feb  4 11:
.ds Xs 64367     6
_header(EnableClientState, enable or disable client-side capability)
_names(EnableClientState)
d24 2
a25 1
_phead(_param1)
d35 6
a40 1
_names(DisableClientState)
d42 2
a43 1
_phead(_param1)
d46 1
a46 1
_cmnd and _cmnd(DisableClientState)
d50 2
a51 2
_cmnd(EnableClientState) and _cmnd(DisableClientState) take a
single argument, _param1, which can assume one of the following
d56 3
a58 3
rendering when _cmnd(ArrayElement), _cmnd(DrawArrays),
_cmnd(DrawElement), or _cmnd(DrawRangeElements) is called. See
_cmnd(ColorPointer). 
d62 3
a64 3
rendering when _cmnd(ArrayElement), _cmnd(DrawArrays),
_cmnd(DrawElement), or _cmnd(DrawRangeElements) is called. See
_cmnd(EdgeFlagPointer). 
d68 3
a70 3
rendering when _cmnd(ArrayElement), _cmnd(DrawArrays),
_cmnd(DrawElement), or _cmnd(DrawRangeElements) is called. See
_cmnd(IndexPointer). 
d74 3
a76 3
rendering when _cmnd(ArrayElement), _cmnd(DrawArrays),
_cmnd(DrawElement), or _cmnd(DrawRangeElements) is called. See
_cmnd(NormalPointer). 
d80 3
a82 3
rendering when _cmnd(ArrayElement), _cmnd(DrawArrays),
_cmnd(DrawElement), or _cmnd(DrawRangeElements) is called. See
_cmnd(TexCoordPointer). 
d86 3
a88 3
rendering when _cmnd(ArrayElement), _cmnd(DrawArrays),
_cmnd(DrawElement), or _cmnd(DrawRangeElements) is called. See
_cmnd(VertexPointer). 
d90 1
a90 1
_cmnd is available only if the GL version is 1.1 or greater.
d95 1
a95 1
_cmnd(ClientActiveTextureARB).
d97 1
a97 1
\f3GL_INVALID_ENUM\fP is generated if _param1 is not an accepted value.
d99 2
a100 2
_cmnd is not allowed between the execution of _cmnd(Begin) and the
corresponding _cmnd(End), but an error may or may not be generated. If
d103 13
a115 13
_cmnd(ArrayElement),
_cmnd(ClientActiveTextureARB),
_cmnd(ColorPointer),
_cmnd(DrawArrays),
_cmnd(DrawElements),
_cmnd(EdgeFlagPointer),
_cmnd(Enable),
_cmnd(GetPointerv),
_cmnd(IndexPointer),
_cmnd(InterleavedArrays),
_cmnd(NormalPointer),
_cmnd(TexCoordPointer),
_cmnd(VertexPointer)
@


1.1.1.1
log
@win32-x11 source tree update March 26, 2001
@
text
@@
