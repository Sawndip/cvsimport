head	1.2;
access;
symbols
	win32-x11-2001-03-26:1.1.1.1 SNAPSHOT:1.1.1;
locks; strict;
comment	@# @;
expand	@o@;


1.2
date	2001.06.03.20.47.16;	author ssiddiqi;	state Exp;
branches;
next	1.1;

1.1
date	2001.03.25.19.36.53;	author ssiddiqi;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2001.03.25.19.36.53;	author ssiddiqi;	state Exp;
branches;
next	;


desc
@@


1.2
log
@Win32-X11 update sources check in, June 3, 2001 - ssiddiqi
@
text
@'\"! tbl|eqn | mmdoc
'\"macro stdmacro
.ds Vn Version 1.2
.ds Dt 10 Nov 1998
.ds Re Release 1.0
.ds Dp Apr 04 17:40
.ds Dm  Apr  4  200
.ds Xs 58202 11 fgledgeflagpointer.gl
.TH FGLEDGEFLAGPOINTER 
.SH NAME
.B "fglEdgeFlagPointer
\- define an array of edge flags

.SH FORTRAN SPECIFICATION
SUBROUTINE \f3fglEdgeFlagPointer\fP(
INTEGER*4 \fIstride\fP,
.nf
.ta \w'\f3SUBROUTINE \fPfglEdgeFlagPointer( 'u
	CHARACTER*8 \fIpointer\fP )
.fi

.EQ
delim $$
.EN
.SH PARAMETERS
.TP \w'\fIpointer\fP\ \ 'u 
\f2stride\fP
Specifies the byte offset between consecutive edge flags.
If \f2stride\fP is 0 (the initial value), the edge flags are understood
to be tightly packed in the array. The initial value is 0.
.TP
\f2pointer\fP
Specifies a pointer to the first edge flag in the array. The initial
value is zero.
.SH DESCRIPTION
\f3fglEdgeFlagPointer\fP specifies the location and data format of an array of boolean edge 
flags to use when rendering. \f2stride\fP specifies the byte stride from one
edge flag to the next allowing vertexes and attributes
to be packed into a single array or stored in separate arrays.
(Single-array storage may be more efficient on some implementations;
see \f3fglInterleavedArrays\fP.)
.P
When an edge flag array is
specified, \f2stride\fP and \f2pointer\fP are saved as client-side
state.
.P
To enable and disable the edge flag array, call \f3fglEnableClientState\fP and
.br
\f3fglDisableClientState\fP with 
the argument \f3GL_EDGE_FLAG_ARRAY\fP. If enabled, the edge flag array is used
when \f3fglDrawArrays\fP, \f3fglDrawElements\fP, or \f3fglArrayElement\fP is called.
.P
Use \f3fglDrawArrays\fP to construct a sequence of primitives (all of
the same type)
from prespecified vertex and vertex attribute arrays.
Use \f3fglArrayElement\fP to specify primitives
by indexing vertexes and vertex attributes and \f3fglDrawElements\fP to
construct a sequence of primitives by indexing vertexes and vertex attributes.
.SH NOTES
\f3fglEdgeFlagPointer\fP is available only if the GL version is 1.1 or greater.
.P
The edge flag array is initially disabled and it won't be accessed when
.br
\f3fglArrayElement\fP, \f3fglDrawElements\fP or \f3fglDrawArrays\fP is called.
.P
Execution of \f3fglEdgeFlagPointer\fP is not allowed between the execution of
\f3fglBegin\fP and the corresponding execution of \f3fglEnd\fP,
but an error may or may not be generated. If no error is generated,
the operation is undefined.
.P
\f3fglEdgeFlagPointer\fP is typically implemented on the client side.
.P
Edge flag array parameters are client-side state and are therefore
not saved or restored by \f3fglPushAttrib\fP and \f3fglPopAttrib\fP.
Use \f3fglPushClientAttrib\fP and 
.br
\f3fglPopClientAttrib\fP instead.
.SH ERRORS
\f3GL_INVALID_ENUM\fP is generated if \f2stride\fP is negative.
.SH ASSOCIATED GETS  
\f3fglIsEnabled\fP with argument \f3GL_EDGE_FLAG_ARRAY\fP
.br
\f3fglGet\fP with argument \f3GL_EDGE_FLAG_ARRAY_STRIDE\fP
.br
\f3fglGetPointerv\fP with argument \f3GL_EDGE_FLAG_ARRAY_POINTER\fP
.SH SEE ALSO 
\f3fglArrayElement\fP,
\f3fglColorPointer\fP,
\f3fglDrawArrays\fP,
\f3fglDrawElements\fP,
\f3fglEnable\fP,
\f3fglGetPointerv\fP,
\f3fglIndexPointer\fP,
\f3fglNormalPointer\fP,
\f3fglPopClientAttrib\fP,
.br
\f3fglPushClientAttrib\fP,
\f3fglTexCoordPointer\fP,
\f3fglVertexPointer\fP
@


1.1
log
@Initial revision
@
text
@d1 2
d6 16
a21 5
.ds Dp Feb 04 11:05
.ds Dm 0 Feb  4 11:
.ds Xs 21121     6
_header(EdgeFlagPointer,define an array of edge flags)
_names(EdgeFlagPointer)
d26 2
a27 1
_phead(_param1)
d29 1
a29 1
If _param1 is 0 (the initial value), the edge flags are understood
d31 2
a32 1
_phead(_param2)
d36 2
a37 2
_cmnd specifies the location and data format of an array of boolean edge 
flags to use when rendering. _param1 specifies the byte stride from one
d41 1
a41 1
see _cmnd(InterleavedArrays).)
d44 1
a44 1
specified, _param1 and _param2 are saved as client-side
d47 1
a47 1
To enable and disable the edge flag array, call _cmnd(EnableClientState) and
d49 1
a49 1
_cmnd(DisableClientState) with 
d51 1
a51 1
when _cmnd(DrawArrays), _cmnd(DrawElements), or _cmnd(ArrayElement) is called.
d53 1
a53 1
Use _cmnd(DrawArrays) to construct a sequence of primitives (all of
d56 2
a57 2
Use _cmnd(ArrayElement) to specify primitives
by indexing vertexes and vertex attributes and _cmnd(DrawElements) to
d60 1
a60 1
_cmnd is available only if the GL version is 1.1 or greater.
d64 1
a64 1
_cmnd(ArrayElement), _cmnd(DrawElements) or _cmnd(DrawArrays) is called.
d66 2
a67 2
Execution of _cmnd is not allowed between the execution of
_cmnd(Begin) and the corresponding execution of _cmnd(End),
d71 1
a71 1
_cmnd is typically implemented on the client side.
d74 2
a75 2
not saved or restored by _cmnd(PushAttrib) and _cmnd(PopAttrib).
Use _cmnd(PushClientAttrib) and 
d77 1
a77 1
_cmnd(PopClientAttrib) instead.
d79 1
a79 1
\f3GL_INVALID_ENUM\fP is generated if _param1 is negative.
d81 1
a81 1
_cmnd(IsEnabled) with argument \f3GL_EDGE_FLAG_ARRAY\fP
d83 1
a83 1
_cmnd(Get) with argument \f3GL_EDGE_FLAG_ARRAY_STRIDE\fP
d85 1
a85 1
_cmnd(GetPointerv) with argument \f3GL_EDGE_FLAG_ARRAY_POINTER\fP
d87 13
a99 13
_cmnd(ArrayElement),
_cmnd(ColorPointer),
_cmnd(DrawArrays),
_cmnd(DrawElements),
_cmnd(Enable),
_cmnd(GetPointerv),
_cmnd(IndexPointer),
_cmnd(NormalPointer),
_cmnd(PopClientAttrib),
.br
_cmnd(PushClientAttrib),
_cmnd(TexCoordPointer),
_cmnd(VertexPointer)
@


1.1.1.1
log
@win32-x11 source tree update March 26, 2001
@
text
@@
