head	1.2;
access;
symbols
	win32-x11-2001-03-26:1.1.1.1 SNAPSHOT:1.1.1;
locks; strict;
comment	@# @;
expand	@o@;


1.2
date	2001.06.03.20.47.17;	author ssiddiqi;	state Exp;
branches;
next	1.1;

1.1
date	2001.03.25.19.36.54;	author ssiddiqi;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2001.03.25.19.36.54;	author ssiddiqi;	state Exp;
branches;
next	;


desc
@@


1.2
log
@Win32-X11 update sources check in, June 3, 2001 - ssiddiqi
@
text
@'\"! tbl|eqn | mmdoc
'\"macro stdmacro
.ds Vn Version 1.2
.ds Dt 10 Nov 1998
.ds Re Release 1.0
.ds Dp Apr 04 17:40
.ds Dm  Apr  4  200
.ds Xs 59841 17 fglpixelmap.gl
.TH FGLPIXELMAP 
.SH NAME
.B "fglPixelMapfv, fglPixelMapuiv, fglPixelMapusv
\- set up pixel transfer maps

.SH FORTRAN SPECIFICATION
SUBROUTINE \f3fglPixelMapfv\fP(
INTEGER*4 \fImap\fP,
.nf
.ta \w'\f3SUBROUTINE \fPfglPixelMapfv( 'u
	INTEGER*4 \fImapsize\fP,
	CHARACTER*8 \fIvalues\fP )
.fi
SUBROUTINE \f3fglPixelMapuiv\fP(
INTEGER*4 \fImap\fP,
.nf
.ta \w'\f3SUBROUTINE \fPfglPixelMapuiv( 'u
	INTEGER*4 \fImapsize\fP,
	CHARACTER*8 \fIvalues\fP )
.fi
SUBROUTINE \f3fglPixelMapusv\fP(
INTEGER*4 \fImap\fP,
.nf
.ta \w'\f3SUBROUTINE \fPfglPixelMapusv( 'u
	INTEGER*4 \fImapsize\fP,
	CHARACTER*8 \fIvalues\fP )
.fi

.EQ
delim $$
.EN
.SH PARAMETERS
.TP \w'\fImapsize\fP\ \ 'u 
\f2map\fP
.na
Specifies a symbolic map name.
Must be one of the following:
\f3GL_PIXEL_MAP_I_TO_I\fP,
\f3GL_PIXEL_MAP_S_TO_S\fP,
\f3GL_PIXEL_MAP_I_TO_R\fP,
\f3GL_PIXEL_MAP_I_TO_G\fP,
\f3GL_PIXEL_MAP_I_TO_B\fP,
\f3GL_PIXEL_MAP_I_TO_A\fP,
\f3GL_PIXEL_MAP_R_TO_R\fP,
\f3GL_PIXEL_MAP_G_TO_G\fP,
\f3GL_PIXEL_MAP_B_TO_B\fP, or
\f3GL_PIXEL_MAP_A_TO_A\fP.
.TP
\f2mapsize\fP
Specifies the size of the map being defined.
.TP
\f2values\fP
Specifies an array of \f2mapsize\fP values.
.SH DESCRIPTION
\f3fglPixelMap\fP sets up translation tables,
or \f2maps\fP,
used by
\f3fglCopyPixels\fP,
\f3fglCopyTexImage1D\fP,
\f3fglCopyTexImage2D\fP,
\f3fglCopyTexSubImage1D\fP,
\f3fglCopyTexSubImage2D\fP,
\f3fglCopyTexSubImage3D\fP,
\f3fglDrawPixels\fP,
\f3fglReadPixels\fP,
\f3fglTexImage1D\fP,
\f3fglTexImage2D\fP,
\f3fglTexImage3D\fP,
\f3fglTexSubImage1D\fP,
\f3fglTexSubImage2D\fP, and
\f3fglTexSubImage3D\fP.
Additionally, if the _arbstring(imaging) subset is supported, the
routines
\f3fglColorTable\fP,
\f3fglColorSubTable\fP,
\f3fglConvolutionFilter1D\fP,
\f3fglConvolutionFilter2D\fP,
\f3fglHistogram\fP,
\f3fglMinmax\fP, and
\f3fglSeparableFilter2D\fP.
Use of these maps is described completely in the
\f3fglPixelTransfer\fP reference page,
and partly in the reference pages for the pixel and texture image commands.
Only the specification of the maps is described in this reference page.
.P
\f2map\fP is a symbolic map name,
indicating one of ten maps to set.
\f2mapsize\fP specifies the number of entries in the map,
and \f2values\fP is a pointer to an array of \f2mapsize\fP map values.
.P
The ten maps are as follows:
.TP 30
\f3GL_PIXEL_MAP_I_TO_I\fP
Maps color indices to color indices.
.TP
\f3GL_PIXEL_MAP_S_TO_S\fP
Maps stencil indices to stencil indices.
.TP
\f3GL_PIXEL_MAP_I_TO_R\fP
Maps color indices to red components.
.TP
\f3GL_PIXEL_MAP_I_TO_G\fP
Maps color indices to green components.
.TP
\f3GL_PIXEL_MAP_I_TO_B\fP
Maps color indices to blue components.
.TP
\f3GL_PIXEL_MAP_I_TO_A\fP
Maps color indices to alpha components.
.TP
\f3GL_PIXEL_MAP_R_TO_R\fP
Maps red components to red components.
.TP
\f3GL_PIXEL_MAP_G_TO_G\fP
Maps green components to green components.
.TP
\f3GL_PIXEL_MAP_B_TO_B\fP
Maps blue components to blue components.
.TP
\f3GL_PIXEL_MAP_A_TO_A\fP
Maps alpha components to alpha components.
.P
The entries in a map can be specified as single-precision
floating-point numbers,
unsigned short integers,
or unsigned long integers.
Maps that store color component values
(all but \f3GL_PIXEL_MAP_I_TO_I\fP and \f3GL_PIXEL_MAP_S_TO_S\fP)
retain their values in floating-point format,
with unspecified mantissa and exponent sizes.
Floating-point values specified by \f3fglPixelMapfv\fP are converted directly
to the internal floating-point format of these maps,
then clamped to the range [0,1].
Unsigned integer values specified by \f3fglPixelMapusv\fP and
\f3fglPixelMapuiv\fP are converted linearly such that
the largest representable integer maps to 1.0,
and 0 maps to 0.0.
.P
Maps that store indices,
\f3GL_PIXEL_MAP_I_TO_I\fP and \f3GL_PIXEL_MAP_S_TO_S\fP,
retain their values in fixed-point format,
with an unspecified number of bits to the right of the binary point.
Floating-point values specified by \f3fglPixelMapfv\fP are converted directly
to the internal fixed-point format of these maps.
Unsigned integer values specified by \f3fglPixelMapusv\fP and
\f3fglPixelMapuiv\fP specify integer values,
with all 0's to the right of the binary point.
.P
The following table shows the initial sizes and values for each of the maps.
Maps that are indexed by either color or stencil indices must have
\f2mapsize\fP = $2 sup n$ for some $n$ or the results are undefined.
The maximum allowable size for each map depends on the implementation 
and can be determined by calling \f3fglGet\fP with argument
\f3GL_MAX_PIXEL_MAP_TABLE\fP.
The single maximum applies to all maps; it is at
least 32.
.bp
.TS
center tab(:) delim($$) ;
lb cb cb cb cb
l c c c c.
_
\f2map\fP:Lookup Index:Lookup Value:Initial Size:Initial Value
_
\f3GL_PIXEL_MAP_I_TO_I\fP:color index:color index:1:0
\f3GL_PIXEL_MAP_S_TO_S\fP:stencil index :stencil index :1:0
\f3GL_PIXEL_MAP_I_TO_R\fP:color index :R:1:0
\f3GL_PIXEL_MAP_I_TO_G\fP:color index :G:1:0
\f3GL_PIXEL_MAP_I_TO_B\fP:color index:B:1:0
\f3GL_PIXEL_MAP_I_TO_A\fP:color index:A:1:0
\f3GL_PIXEL_MAP_R_TO_R\fP:R:R:1:0
\f3GL_PIXEL_MAP_G_TO_G\fP:G:G:1:0
\f3GL_PIXEL_MAP_B_TO_B\fP:B:B:1:0
\f3GL_PIXEL_MAP_A_TO_A\fP:A:A:1:0
_
.TE

.RE
.SH ERRORS
\f3GL_INVALID_ENUM\fP is generated if \f2map\fP is not an accepted value.
.P
\f3GL_INVALID_VALUE\fP is generated if \f2mapsize\fP is less than one
or larger than \f3GL_MAX_PIXEL_MAP_TABLE\fP.
.P
\f3GL_INVALID_VALUE\fP is generated if \f2map\fP is
\f3GL_PIXEL_MAP_I_TO_I\fP,
\f3GL_PIXEL_MAP_S_TO_S\fP,
\f3GL_PIXEL_MAP_I_TO_R\fP,
\f3GL_PIXEL_MAP_I_TO_G\fP,
\f3GL_PIXEL_MAP_I_TO_B\fP, or
\f3GL_PIXEL_MAP_I_TO_A\fP,
and \f2mapsize\fP is not a power of two.
.P
\f3GL_INVALID_OPERATION\fP is generated if \f3fglPixelMap\fP
is executed between the execution of \f3fglBegin\fP
and the corresponding execution of \f3fglEnd\fP.
.SH ASSOCIATED GETS
\f3fglGetPixelMap\fP
.br
\f3fglGet\fP with argument \f3GL_PIXEL_MAP_I_TO_I_SIZE\fP
.br
\f3fglGet\fP with argument \f3GL_PIXEL_MAP_S_TO_S_SIZE\fP
.br
\f3fglGet\fP with argument \f3GL_PIXEL_MAP_I_TO_R_SIZE\fP
.br
\f3fglGet\fP with argument \f3GL_PIXEL_MAP_I_TO_G_SIZE\fP
.br
\f3fglGet\fP with argument \f3GL_PIXEL_MAP_I_TO_B_SIZE\fP
.br
\f3fglGet\fP with argument \f3GL_PIXEL_MAP_I_TO_A_SIZE\fP
.br
\f3fglGet\fP with argument \f3GL_PIXEL_MAP_R_TO_R_SIZE\fP
.br
\f3fglGet\fP with argument \f3GL_PIXEL_MAP_G_TO_G_SIZE\fP
.br
\f3fglGet\fP with argument \f3GL_PIXEL_MAP_B_TO_B_SIZE\fP
.br
\f3fglGet\fP with argument \f3GL_PIXEL_MAP_A_TO_A_SIZE\fP
.br
\f3fglGet\fP with argument \f3GL_MAX_PIXEL_MAP_TABLE\fP
.SH SEE ALSO
\f3fglColorTable\fP,
\f3fglColorSubTable\fP,
\f3fglConvolutionFilter1D\fP,
\f3fglConvolutionFilter2D\fP,
\f3fglCopyPixels\fP,
\f3fglCopyTexImage1D\fP,
\f3fglCopyTexImage2D\fP,
\f3fglCopyTexSubImage1D\fP,
\f3fglCopyTexSubImage2D\fP,
\f3fglDrawPixels\fP,
\f3fglHistogram\fP,
\f3fglMinmax\fP,
\f3fglPixelStore\fP,
\f3fglPixelTransfer\fP,
\f3fglReadPixels\fP,
\f3fglSeparableFilter2D\fP,
\f3fglTexImage1D\fP,
\f3fglTexImage2D\fP,
\f3fglTexImage3D\fP,
\f3fglTexSubImage1D\fP,
\f3fglTexSubImage2D\fP,
\f3fglTexSubImage3D\fP
@


1.1
log
@Initial revision
@
text
@d1 2
d6 31
a36 5
.ds Dp Feb 04 11:05
.ds Dm 3 Feb  4 11:
.ds Xs 20188     9
_header(PixelMap,set up pixel transfer maps)
_names(PixelMap,u*[fis]v)
d41 2
a42 1
_phead(_param1)
d56 2
a57 1
_phead(_param2)
d59 3
a61 2
_phead(_param3)
Specifies an array of _param2 values.
d63 1
a63 1
_cmnd sets up translation tables,
d66 14
a79 14
_cmnd(CopyPixels),
_cmnd(CopyTexImage1D),
_cmnd(CopyTexImage2D),
_cmnd(CopyTexSubImage1D),
_cmnd(CopyTexSubImage2D),
_cmnd(CopyTexSubImage3D),
_cmnd(DrawPixels),
_cmnd(ReadPixels),
_cmnd(TexImage1D),
_cmnd(TexImage2D),
_cmnd(TexImage3D),
_cmnd(TexSubImage1D),
_cmnd(TexSubImage2D), and
_cmnd(TexSubImage3D).
d82 7
a88 7
_cmnd(ColorTable),
_cmnd(ColorSubTable),
_cmnd(ConvolutionFilter1D),
_cmnd(ConvolutionFilter2D),
_cmnd(Histogram),
_cmnd(Minmax), and
_cmnd(SeparableFilter2D).
d90 1
a90 1
_cmnd(PixelTransfer) reference page,
d94 1
a94 1
_param1 is a symbolic map name,
d96 2
a97 2
_param2 specifies the number of entries in the map,
and _param3 is a pointer to an array of _param2 map values.
d139 1
a139 1
Floating-point values specified by _cmnd(PixelMapfv) are converted directly
d142 2
a143 2
Unsigned integer values specified by _cmnd(PixelMapusv) and
_cmnd(PixelMapuiv) are converted linearly such that
d151 1
a151 1
Floating-point values specified by _cmnd(PixelMapfv) are converted directly
d153 2
a154 2
Unsigned integer values specified by _cmnd(PixelMapusv) and
_cmnd(PixelMapuiv) specify integer values,
d159 1
a159 1
_param2 = $2 sup n$ for some $n$ or the results are undefined.
d161 1
a161 1
and can be determined by calling _cmnd(Get) with argument
d171 1
a171 1
_param1:Lookup Index:Lookup Value:Initial Size:Initial Value
d188 1
a188 1
\f3GL_INVALID_ENUM\fP is generated if _param1 is not an accepted value.
d190 1
a190 1
\f3GL_INVALID_VALUE\fP is generated if _param2 is less than one
d193 1
a193 1
\f3GL_INVALID_VALUE\fP is generated if _param1 is
d200 1
a200 1
and _param2 is not a power of two.
d202 3
a204 3
\f3GL_INVALID_OPERATION\fP is generated if _cmnd
is executed between the execution of _cmnd(Begin)
and the corresponding execution of _cmnd(End).
d206 1
a206 1
_cmnd(GetPixelMap)
d208 1
a208 1
_cmnd(Get) with argument \f3GL_PIXEL_MAP_I_TO_I_SIZE\fP
d210 1
a210 1
_cmnd(Get) with argument \f3GL_PIXEL_MAP_S_TO_S_SIZE\fP
d212 1
a212 1
_cmnd(Get) with argument \f3GL_PIXEL_MAP_I_TO_R_SIZE\fP
d214 1
a214 1
_cmnd(Get) with argument \f3GL_PIXEL_MAP_I_TO_G_SIZE\fP
d216 1
a216 1
_cmnd(Get) with argument \f3GL_PIXEL_MAP_I_TO_B_SIZE\fP
d218 1
a218 1
_cmnd(Get) with argument \f3GL_PIXEL_MAP_I_TO_A_SIZE\fP
d220 1
a220 1
_cmnd(Get) with argument \f3GL_PIXEL_MAP_R_TO_R_SIZE\fP
d222 1
a222 1
_cmnd(Get) with argument \f3GL_PIXEL_MAP_G_TO_G_SIZE\fP
d224 1
a224 1
_cmnd(Get) with argument \f3GL_PIXEL_MAP_B_TO_B_SIZE\fP
d226 1
a226 1
_cmnd(Get) with argument \f3GL_PIXEL_MAP_A_TO_A_SIZE\fP
d228 1
a228 1
_cmnd(Get) with argument \f3GL_MAX_PIXEL_MAP_TABLE\fP
d230 22
a251 22
_cmnd(ColorTable),
_cmnd(ColorSubTable),
_cmnd(ConvolutionFilter1D),
_cmnd(ConvolutionFilter2D),
_cmnd(CopyPixels),
_cmnd(CopyTexImage1D),
_cmnd(CopyTexImage2D),
_cmnd(CopyTexSubImage1D),
_cmnd(CopyTexSubImage2D),
_cmnd(DrawPixels),
_cmnd(Histogram),
_cmnd(Minmax),
_cmnd(PixelStore),
_cmnd(PixelTransfer),
_cmnd(ReadPixels),
_cmnd(SeparableFilter2D),
_cmnd(TexImage1D),
_cmnd(TexImage2D),
_cmnd(TexImage3D),
_cmnd(TexSubImage1D),
_cmnd(TexSubImage2D),
_cmnd(TexSubImage3D)
@


1.1.1.1
log
@win32-x11 source tree update March 26, 2001
@
text
@@
