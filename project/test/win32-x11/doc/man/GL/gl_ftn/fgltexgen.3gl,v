head	1.2;
access;
symbols
	win32-x11-2001-03-26:1.1.1.1 SNAPSHOT:1.1.1;
locks; strict;
comment	@# @;
expand	@o@;


1.2
date	2001.06.03.20.47.17;	author ssiddiqi;	state Exp;
branches;
next	1.1;

1.1
date	2001.03.25.19.36.54;	author ssiddiqi;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2001.03.25.19.36.54;	author ssiddiqi;	state Exp;
branches;
next	;


desc
@@


1.2
log
@Win32-X11 update sources check in, June 3, 2001 - ssiddiqi
@
text
@'\"! eqn | mmdoc
'\"macro stdmacro
.ds Vn Version 1.2
.ds Dt 10 Nov 1998
.ds Re Release 1.0
.ds Dp Apr 04 17:40
.ds Dm  Apr  4  200
.ds Xs 21757 17 fgltexgen.gl
.TH FGLTEXGEN 
.SH NAME
.B "fglTexGend, fglTexGenf, fglTexGeni, fglTexGendv, fglTexGenfv, fglTexGeniv
\- control the generation of texture coordinates

.SH FORTRAN SPECIFICATION
SUBROUTINE \f3fglTexGend\fP(
INTEGER*4 \fIcoord\fP,
.nf
.ta \w'\f3SUBROUTINE \fPfglTexGend( 'u
	INTEGER*4 \fIpname\fP,
	REAL*8 \fIparam\fP )
.fi
SUBROUTINE \f3fglTexGenf\fP(
INTEGER*4 \fIcoord\fP,
.nf
.ta \w'\f3SUBROUTINE \fPfglTexGenf( 'u
	INTEGER*4 \fIpname\fP,
	REAL*4 \fIparam\fP )
.fi
SUBROUTINE \f3fglTexGeni\fP(
INTEGER*4 \fIcoord\fP,
.nf
.ta \w'\f3SUBROUTINE \fPfglTexGeni( 'u
	INTEGER*4 \fIpname\fP,
	INTEGER*4 \fIparam\fP )
.fi

.EQ
delim $$
.EN
.SH PARAMETERS
.TP \w'\fIparams\fP\ \ 'u 
\f2coord\fP
Specifies a texture coordinate.
Must be one of \f3GL_S\fP, \f3GL_T\fP, \f3GL_R\fP, or \f3GL_Q\fP.
.TP
\f2pname\fP
Specifies the symbolic name of the texture-coordinate generation function.
Must be \f3GL_TEXTURE_GEN_MODE\fP. 
.TP
\f2param\fP
Specifies a single-valued texture generation parameter,
one of \f3GL_OBJECT_LINEAR\fP, \f3GL_EYE_LINEAR\fP, or \f3GL_SPHERE_MAP\fP. 
.SH FORTRAN SPECIFICATION
SUBROUTINE \f3fglTexGendv\fP(
INTEGER*4 \fIcoord\fP,
.nf
.ta \w'\f3SUBROUTINE \fPfglTexGendv( 'u
	INTEGER*4 \fIpname\fP,
	CHARACTER*8 \fIparams\fP )
.fi
SUBROUTINE \f3fglTexGenfv\fP(
INTEGER*4 \fIcoord\fP,
.nf
.ta \w'\f3SUBROUTINE \fPfglTexGenfv( 'u
	INTEGER*4 \fIpname\fP,
	CHARACTER*8 \fIparams\fP )
.fi
SUBROUTINE \f3fglTexGeniv\fP(
INTEGER*4 \fIcoord\fP,
.nf
.ta \w'\f3SUBROUTINE \fPfglTexGeniv( 'u
	INTEGER*4 \fIpname\fP,
	CHARACTER*8 \fIparams\fP )
.fi

.SH PARAMETERS
.TP
\f2coord\fP
Specifies a texture coordinate.
Must be one of \f3GL_S\fP, \f3GL_T\fP, \f3GL_R\fP, or \f3GL_Q\fP.
.TP
\f2pname\fP
Specifies the symbolic name of the texture-coordinate generation function
or function parameters.
Must be
\f3GL_TEXTURE_GEN_MODE\fP,
\f3GL_OBJECT_PLANE\fP, or
\f3GL_EYE_PLANE\fP. 
.TP
\f2params\fP
Specifies a pointer to an array of texture generation parameters.
If \f2pname\fP is \f3GL_TEXTURE_GEN_MODE\fP,
then the array must contain a single symbolic constant,
one of
\f3GL_OBJECT_LINEAR\fP,
\f3GL_EYE_LINEAR\fP, or
\f3GL_SPHERE_MAP\fP. 
Otherwise,
\f2params\fP holds the coefficients for the texture-coordinate generation function
specified by \f2pname\fP.
.SH DESCRIPTION
\f3fglTexGen\fP selects a texture-coordinate generation function
or supplies coefficients for one of the functions.
\f2coord\fP names one of the (\f2s\fP, \f2t\fP, \f2r\fP, \f2q\fP) texture
coordinates; it must be one of the symbols
\f3GL_S\fP,
\f3GL_T\fP,
\f3GL_R\fP, or
\f3GL_Q\fP.
\f2pname\fP must be one of three symbolic constants:
\f3GL_TEXTURE_GEN_MODE\fP,
\f3GL_OBJECT_PLANE\fP, or
\f3GL_EYE_PLANE\fP. 
If \f2pname\fP is \f3GL_TEXTURE_GEN_MODE\fP,
then \f2params\fP chooses a mode,
one of
\f3GL_OBJECT_LINEAR\fP,
\f3GL_EYE_LINEAR\fP, or
\f3GL_SPHERE_MAP\fP. 
If \f2pname\fP is either \f3GL_OBJECT_PLANE\fP or \f3GL_EYE_PLANE\fP,
\f2params\fP contains coefficients for the corresponding
texture generation function.
.P 
If the texture generation function is \f3GL_OBJECT_LINEAR\fP,
the function
.P
.ce
$g ~=~ p sub 1^x sub o ~+~ p sub 2^y sub o ~+~ p sub 3^z sub o ~+~ p sub 4^w sub o$
.P
.br
is used, where $g$ is the value computed for the coordinate named in \f2coord\fP,
$p sub 1$,
$p sub 2$,
$p sub 3$,
and
$p sub 4$ are the four values supplied in \f2params\fP, and
$x sub o$,
$y sub o$,
$z sub o$, and
$w sub o$ are the object coordinates of the vertex.
This function can be used, for example, to texture-map terrain using sea level
as a reference plane
(defined by $p sub 1$, $p sub 2$, $p sub 3$, and $p sub 4$). 
The altitude of a terrain vertex is computed by the \f3GL_OBJECT_LINEAR\fP
coordinate generation function as its distance from sea level; 
that altitude can then be used to index the texture image to map white snow
onto peaks and green grass onto foothills.
.P
If the texture generation function is \f3GL_EYE_LINEAR\fP, the function
.P
.ce
$g ~=~ p sub 1 sup prime ^x sub e ~+~ p sub 2 sup prime ^y sub e ~+~ p sub 3 sup prime ^z sub e ~+~ p sub 4 sup prime ^w sub e$
.P
.br
is used, where 
.P
.ce
$( p sub 1 sup prime
~~p sub 2 sup prime~~p sub 3 sup prime~~
{ p sub 4 sup prime}) ~=~ ( p sub 1~~ p sub 2~~ p sub 3~~ p sub 4 ) ~M sup -1$
.P
.br
and
$x sub e$,
$y sub e$,
$z sub e$, and
$w sub e$ are the eye coordinates of the vertex,
$p sub 1$,
$p sub 2$,
$p sub 3$,
and
$p sub 4$ are the values supplied in \f2params\fP, and
$M$ is the modelview matrix when \f3fglTexGen\fP is invoked.
If $M$ is poorly conditioned or singular,
texture coordinates generated by the resulting function may be inaccurate
or undefined.
.P
Note that the values in \f2params\fP define a reference plane in eye coordinates. 
The modelview matrix that is applied to them may not be the same one
in effect when the polygon vertices are transformed. 
This function establishes a field of texture coordinates
that can produce dynamic contour lines on moving objects.
.P
If \f2pname\fP is \f3GL_SPHERE_MAP\fP and \f2coord\fP is either
\f3GL_S\fP or
\f3GL_T\fP,
$s$ and $t$ texture coordinates are generated as follows. 
Let \f2u\fP be the unit vector pointing from the origin to the polygon vertex
(in eye coordinates). 
Let \f2n\fP sup prime be the current normal,
after transformation to eye coordinates. 
Let 
.P
.ce
$f ~=~ ( f sub x~~f sub y~~f sub z ) sup T$
be the reflection vector such that
.P
.ce
$f ~=~  u ~-~ 2 n sup prime n sup prime sup T u$
.br
.P
Finally, let $ m ~=~ 2 sqrt { f sub x sup {~2} ~+~ f sub y sup {~2} ~+~ (f sub z ~+~ 1 ) sup 2}$. 
Then the values assigned to the $s$ and $t$ texture coordinates are
.P
.ce 1
$s ~=~ f sub x over m ~+~ 1 over 2$
.sp
.ce 1
$t ~=~ f sub y over m ~+~ 1 over 2$
.P
To enable or disable a texture-coordinate generation function, call
\f3fglEnable\fP or \f3fglDisable\fP
with one of the symbolic texture-coordinate names
(\f3GL_TEXTURE_GEN_S\fP,
\f3GL_TEXTURE_GEN_T\fP,
\f3GL_TEXTURE_GEN_R\fP, or
\f3GL_TEXTURE_GEN_Q\fP) as the argument. 
When enabled,
the specified texture coordinate is computed
according to the generating function associated with that coordinate. 
When disabled,
subsequent vertices take the specified texture coordinate
from the current set of texture coordinates. Initially, all texture
generation functions are set to \f3GL_EYE_LINEAR\fP and are disabled.
Both $s$ plane equations are (1, 0, 0, 0),
both $t$ plane equations are (0, 1, 0, 0),
and all $r$ and $q$ plane equations are (0, 0, 0, 0).
.P
When the _arbstring(multitexture) extension is supported, \f3fglTexGen\fP set the
texture generation parameters for the currently active texture unit,
selected with \f3fglActiveTextureARB\fP.
.SH ERRORS
\f3GL_INVALID_ENUM\fP is generated when \f2coord\fP or \f2pname\fP is not an
accepted defined value,
or when \f2pname\fP is \f3GL_TEXTURE_GEN_MODE\fP and \f2params\fP is not an
accepted defined value.
.P
\f3GL_INVALID_ENUM\fP is generated when \f2pname\fP is \f3GL_TEXTURE_GEN_MODE\fP,
\f2params\fP is \f3GL_SPHERE_MAP\fP,
and \f2coord\fP is either \f3GL_R\fP or \f3GL_Q\fP.
.P
\f3GL_INVALID_OPERATION\fP is generated if \f3fglTexGen\fP
is executed between the execution of \f3fglBegin\fP
and the corresponding execution of \f3fglEnd\fP.
.SH ASSOCIATED GETS
\f3fglGetTexGen\fP
.br
\f3fglIsEnabled\fP with argument \f3GL_TEXTURE_GEN_S\fP
.br
\f3fglIsEnabled\fP with argument \f3GL_TEXTURE_GEN_T\fP
.br
\f3fglIsEnabled\fP with argument \f3GL_TEXTURE_GEN_R\fP
.br
\f3fglIsEnabled\fP with argument \f3GL_TEXTURE_GEN_Q\fP
.SH SEE ALSO
\f3fglActiveTextureARB\fP,
\f3fglCopyPixels\fP,
\f3fglCopyTexImage2D\fP,
\f3fglCopyTexSubImage1D\fP,
\f3fglCopyTexSubImage2D\fP,
\f3fglCopyTexSubImage3D\fP,
\f3fglTexEnv\fP,
\f3fglTexImage1D\fP,
\f3fglTexImage2D\fP,
\f3fglTexImage3D\fP,
\f3fglTexParameter\fP,
\f3fglTexSubImage1D\fP,
\f3fglTexSubImage2D\fP,
\f3fglTexSubImage3D\fP
@


1.1
log
@Initial revision
@
text
@d1 2
d6 31
a36 5
.ds Dp Feb 04 11:05
.ds Dm 1 Feb  4 11:
.ds Xs 27155     9
_header(TexGen,control the generation of texture coordinates)
_names(TexGen,[ifd])
d41 2
a42 1
_phead(_param1)
d45 2
a46 1
_phead(_param2)
d49 2
a50 1
_phead(_param3)
d53 23
a75 1
_names(TexGen,[ifd]v)
d77 2
a78 1
_phead(_param1)
d81 2
a82 1
_phead(_param2)
d89 2
a90 1
_phead(_param3)
d92 1
a92 1
If _param2 is \f3GL_TEXTURE_GEN_MODE\fP,
d99 2
a100 2
_param3 holds the coefficients for the texture-coordinate generation function
specified by _param2.
d102 1
a102 1
_cmnd selects a texture-coordinate generation function
d104 1
a104 1
_param1 names one of the (\f2s\fP, \f2t\fP, \f2r\fP, \f2q\fP) texture
d110 1
a110 1
_param2 must be one of three symbolic constants:
d114 2
a115 2
If _param2 is \f3GL_TEXTURE_GEN_MODE\fP,
then _param3 chooses a mode,
d120 2
a121 2
If _param2 is either \f3GL_OBJECT_PLANE\fP or \f3GL_EYE_PLANE\fP,
_param3 contains coefficients for the corresponding
d131 1
a131 1
is used, where $g$ is the value computed for the coordinate named in _param1,
d136 1
a136 1
$p sub 4$ are the four values supplied in _param3, and
d172 2
a173 2
$p sub 4$ are the values supplied in _param3, and
$M$ is the modelview matrix when _cmnd is invoked.
d178 1
a178 1
Note that the values in _param3 define a reference plane in eye coordinates. 
d184 1
a184 1
If _param2 is \f3GL_SPHERE_MAP\fP and _param1 is either
d212 1
a212 1
_cmnd(Enable) or _cmnd(Disable)
d229 1
a229 1
When the _arbstring(multitexture) extension is supported, _cmnd set the
d231 1
a231 1
selected with _cmnd(ActiveTextureARB).
d233 1
a233 1
\f3GL_INVALID_ENUM\fP is generated when _param1 or _param2 is not an
d235 1
a235 1
or when _param2 is \f3GL_TEXTURE_GEN_MODE\fP and _param3 is not an
d238 7
a244 7
\f3GL_INVALID_ENUM\fP is generated when _param2 is \f3GL_TEXTURE_GEN_MODE\fP,
_param3 is \f3GL_SPHERE_MAP\fP,
and _param1 is either \f3GL_R\fP or \f3GL_Q\fP.
.P
\f3GL_INVALID_OPERATION\fP is generated if _cmnd
is executed between the execution of _cmnd(Begin)
and the corresponding execution of _cmnd(End).
d246 1
a246 1
_cmnd(GetTexGen)
d248 1
a248 1
_cmnd(IsEnabled) with argument \f3GL_TEXTURE_GEN_S\fP
d250 1
a250 1
_cmnd(IsEnabled) with argument \f3GL_TEXTURE_GEN_T\fP
d252 1
a252 1
_cmnd(IsEnabled) with argument \f3GL_TEXTURE_GEN_R\fP
d254 1
a254 1
_cmnd(IsEnabled) with argument \f3GL_TEXTURE_GEN_Q\fP
d256 14
a269 14
_cmnd(ActiveTextureARB),
_cmnd(CopyPixels),
_cmnd(CopyTexImage2D),
_cmnd(CopyTexSubImage1D),
_cmnd(CopyTexSubImage2D),
_cmnd(CopyTexSubImage3D),
_cmnd(TexEnv),
_cmnd(TexImage1D),
_cmnd(TexImage2D),
_cmnd(TexImage3D),
_cmnd(TexParameter),
_cmnd(TexSubImage1D),
_cmnd(TexSubImage2D),
_cmnd(TexSubImage3D)
@


1.1.1.1
log
@win32-x11 source tree update March 26, 2001
@
text
@@
