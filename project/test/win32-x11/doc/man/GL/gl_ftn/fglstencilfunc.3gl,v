head	1.2;
access;
symbols
	win32-x11-2001-03-26:1.1.1.1 SNAPSHOT:1.1.1;
locks; strict;
comment	@# @;
expand	@o@;


1.2
date	2001.06.03.20.47.17;	author ssiddiqi;	state Exp;
branches;
next	1.1;

1.1
date	2001.03.25.19.36.54;	author ssiddiqi;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2001.03.25.19.36.54;	author ssiddiqi;	state Exp;
branches;
next	;


desc
@@


1.2
log
@Win32-X11 update sources check in, June 3, 2001 - ssiddiqi
@
text
@'\"! tbl|eqn | mmdoc
'\"macro stdmacro
.ds Vn Version 1.2
.ds Dt 10 Nov 1998
.ds Re Release 1.0
.ds Dp Apr 04 17:40
.ds Dm  Apr  4  200
.ds Xs 54969 12 fglstencilfunc.gl
.TH FGLSTENCILFUNC 
.SH NAME
.B "fglStencilFunc
\- set function and reference value for stencil testing

.EQ
delim $$
.EN
.SH FORTRAN SPECIFICATION
SUBROUTINE \f3fglStencilFunc\fP(
INTEGER*4 \fIfunc\fP,
.nf
.ta \w'\f3SUBROUTINE \fPfglStencilFunc( 'u
	INTEGER*4 \fIref\fP,
	INTEGER*4 \fImask\fP )
.fi

.SH PARAMETERS
.TP \w'\f2func\fP\ \ 'u 
\f2func\fP
Specifies the test function.
Eight tokens are valid:
\f3GL_NEVER\fP,
\f3GL_LESS\fP,
\f3GL_LEQUAL\fP,
\f3GL_GREATER\fP,
\f3GL_GEQUAL\fP,
\f3GL_EQUAL\fP,
\f3GL_NOTEQUAL\fP, and
\f3GL_ALWAYS\fP. The initial value is \f3GL_ALWAYS\fP. 
.TP
\f2ref\fP
Specifies the reference value for the stencil test.
\f2ref\fP is clamped to the range [0,$2 sup n - 1$],
where $n$ is the number of bitplanes in the stencil buffer. The
initial value is 0.
.TP
\f2mask\fP
Specifies a mask that is ANDed with both the reference value
and the stored stencil value when the test is done. The initial value
is all 1's. 
.SH DESCRIPTION
Stenciling,
like depth-buffering,
enables and disables drawing on a per-pixel basis.
You draw into the stencil planes using GL drawing primitives,
then render geometry and images,
using the stencil planes to mask out portions of the screen.
Stenciling is typically used in multipass rendering algorithms
to achieve special effects,
such as decals,
outlining,
and constructive solid geometry rendering.
.P
The stencil test conditionally eliminates a pixel based on the outcome
of a comparison between the reference value
and the value in the stencil buffer.
To enable and disable the test, call \f3fglEnable\fP and \f3fglDisable\fP
with argument \f3GL_STENCIL_TEST\fP.
To specify actions based on the outcome of the stencil test, call
\f3fglStencilOp\fP.
.P
\f2func\fP is a symbolic constant that determines the stencil comparison function.
It accepts one of eight values,
shown in the following list.
\f2ref\fP is an integer reference value that is used in the stencil comparison.
It is clamped to the range [0,$2 sup n - 1$],
where $n$ is the number of bitplanes in the stencil buffer.
\f2mask\fP is bitwise ANDed with both the reference value
and the stored stencil value,
with the ANDed values participating in the comparison.
.P 
If \f2stencil\fP represents the value stored in the corresponding
stencil buffer location,
the following list shows the effect of each comparison function
that can be specified by \f2func\fP.
Only if the comparison succeeds is the pixel passed through
to the next stage in the rasterization process
(see \f3fglStencilOp\fP).
All tests treat \f2stencil\fP values as unsigned integers in the range
[0,$2 sup n - 1$],
where $n$ is the number of bitplanes in the stencil buffer.
.P
The following values are accepted by \f2func\fP:
.TP 18
\f3GL_NEVER\fP
Always fails.
.TP
\f3GL_LESS\fP
Passes if ( \f2ref\fP & \f2mask\fP ) < ( \f2stencil\fP & \f2mask\fP ). 
.TP
\f3GL_LEQUAL\fP
Passes if ( \f2ref\fP & \f2mask\fP ) \(<= ( \f2stencil\fP & \f2mask\fP ).
.TP
\f3GL_GREATER\fP
Passes if ( \f2ref\fP & \f2mask\fP ) > ( \f2stencil\fP & \f2mask\fP ).
.TP
\f3GL_GEQUAL\fP
Passes if ( \f2ref\fP & \f2mask\fP ) \(>= ( \f2stencil\fP & \f2mask\fP ).
.TP
\f3GL_EQUAL\fP
Passes if ( \f2ref\fP & \f2mask\fP ) = ( \f2stencil\fP & \f2mask\fP ).
.TP
\f3GL_NOTEQUAL\fP
Passes if ( \f2ref\fP & \f2mask\fP ) \(!=  ( \f2stencil\fP & \f2mask\fP ).
.TP
\f3GL_ALWAYS\fP
Always passes.
.SH NOTES
Initially, the stencil test is disabled.
If there is no stencil buffer,
no stencil modification can occur and it is as if
the stencil test always passes.
.SH ERRORS
\f3GL_INVALID_ENUM\fP is generated if \f2func\fP is not one of the eight
accepted values.
.P
\f3GL_INVALID_OPERATION\fP is generated if \f3fglStencilFunc\fP
is executed between the execution of \f3fglBegin\fP
and the corresponding execution of \f3fglEnd\fP.
.SH ASSOCIATED GETS
\f3fglGet\fP with argument \f3GL_STENCIL_FUNC\fP
.br
\f3fglGet\fP with argument \f3GL_STENCIL_VALUE_MASK\fP
.br
\f3fglGet\fP with argument \f3GL_STENCIL_REF\fP
.br
\f3fglGet\fP with argument \f3GL_STENCIL_BITS\fP
.br
\f3fglIsEnabled\fP with argument \f3GL_STENCIL_TEST\fP
.SH SEE ALSO
\f3fglAlphaFunc\fP,
\f3fglBlendFunc\fP,
\f3fglDepthFunc\fP,
\f3fglEnable\fP,
\f3fglIsEnabled\fP,
\f3fglLogicOp\fP,
\f3fglStencilOp\fP
@


1.1
log
@Initial revision
@
text
@d1 2
d6 8
a13 4
.ds Dp Feb 04 11:05
.ds Dm 6 Feb  4 11:
.ds Xs 21383     6
_header(StencilFunc,set function and reference value for stencil testing)
d17 9
a25 1
_names(StencilFunc)
d27 2
a28 1
_phead(_param1)
d39 2
a40 1
_phead(_param2)
d42 1
a42 1
_param2 is clamped to the range [0,$2 sup n - 1$],
d45 2
a46 1
_phead(_param3)
d66 1
a66 1
To enable and disable the test, call _cmnd(Enable) and _cmnd(Disable)
d69 1
a69 1
_cmnd(StencilOp).
d71 1
a71 1
_param1 is a symbolic constant that determines the stencil comparison function.
d74 1
a74 1
_param2 is an integer reference value that is used in the stencil comparison.
d77 1
a77 1
_param3 is bitwise ANDed with both the reference value
d84 1
a84 1
that can be specified by _param1.
d87 1
a87 1
(see _cmnd(StencilOp)).
d92 1
a92 1
The following values are accepted by _param1:
d98 1
a98 1
Passes if ( _param2 & _param3 ) < ( \f2stencil\fP & _param3 ). 
d101 1
a101 1
Passes if ( _param2 & _param3 ) \(<= ( \f2stencil\fP & _param3 ).
d104 1
a104 1
Passes if ( _param2 & _param3 ) > ( \f2stencil\fP & _param3 ).
d107 1
a107 1
Passes if ( _param2 & _param3 ) \(>= ( \f2stencil\fP & _param3 ).
d110 1
a110 1
Passes if ( _param2 & _param3 ) = ( \f2stencil\fP & _param3 ).
d113 1
a113 1
Passes if ( _param2 & _param3 ) \(!=  ( \f2stencil\fP & _param3 ).
d123 1
a123 1
\f3GL_INVALID_ENUM\fP is generated if _param1 is not one of the eight
d126 3
a128 3
\f3GL_INVALID_OPERATION\fP is generated if _cmnd
is executed between the execution of _cmnd(Begin)
and the corresponding execution of _cmnd(End).
d130 1
a130 1
_cmnd(Get) with argument \f3GL_STENCIL_FUNC\fP
d132 1
a132 1
_cmnd(Get) with argument \f3GL_STENCIL_VALUE_MASK\fP
d134 1
a134 1
_cmnd(Get) with argument \f3GL_STENCIL_REF\fP
d136 1
a136 1
_cmnd(Get) with argument \f3GL_STENCIL_BITS\fP
d138 1
a138 1
_cmnd(IsEnabled) with argument \f3GL_STENCIL_TEST\fP
d140 7
a146 7
_cmnd(AlphaFunc),
_cmnd(BlendFunc),
_cmnd(DepthFunc),
_cmnd(Enable),
_cmnd(IsEnabled),
_cmnd(LogicOp),
_cmnd(StencilOp)
@


1.1.1.1
log
@win32-x11 source tree update March 26, 2001
@
text
@@
