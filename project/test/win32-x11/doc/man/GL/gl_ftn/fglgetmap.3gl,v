head	1.2;
access;
symbols
	win32-x11-2001-03-26:1.1.1.1 SNAPSHOT:1.1.1;
locks; strict;
comment	@# @;
expand	@o@;


1.2
date	2001.06.03.20.47.16;	author ssiddiqi;	state Exp;
branches;
next	1.1;

1.1
date	2001.03.25.19.36.54;	author ssiddiqi;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2001.03.25.19.36.54;	author ssiddiqi;	state Exp;
branches;
next	;


desc
@@


1.2
log
@Win32-X11 update sources check in, June 3, 2001 - ssiddiqi
@
text
@'\"! tbl|eqn | mmdoc
'\"macro stdmacro
.ds Vn Version 1.2
.ds Dt 10 Nov 1998
.ds Re Release 1.0
.ds Dp Apr 04 17:40
.ds Dm  Apr  4  200
.ds Xs 36822 10 fglgetmap.gl
.TH FGLGETMAP 
.SH NAME
.B "fglGetMapdv, fglGetMapfv, fglGetMapiv
\- return evaluator parameters

.SH FORTRAN SPECIFICATION
SUBROUTINE \f3fglGetMapdv\fP(
INTEGER*4 \fItarget\fP,
.nf
.ta \w'\f3SUBROUTINE \fPfglGetMapdv( 'u
	INTEGER*4 \fIquery\fP,
	CHARACTER*8 \fIv\fP )
.fi
SUBROUTINE \f3fglGetMapfv\fP(
INTEGER*4 \fItarget\fP,
.nf
.ta \w'\f3SUBROUTINE \fPfglGetMapfv( 'u
	INTEGER*4 \fIquery\fP,
	CHARACTER*8 \fIv\fP )
.fi
SUBROUTINE \f3fglGetMapiv\fP(
INTEGER*4 \fItarget\fP,
.nf
.ta \w'\f3SUBROUTINE \fPfglGetMapiv( 'u
	INTEGER*4 \fIquery\fP,
	CHARACTER*8 \fIv\fP )
.fi

.EQ
delim $$
.EN
.SH PARAMETERS
.TP \w'\f2target\fP\ \ 'u 
\f2target\fP
Specifies the symbolic name of a map.
Accepted values are
\f3GL_MAP1_COLOR_4\fP,
\f3GL_MAP1_INDEX\fP,
\f3GL_MAP1_NORMAL\fP,
\f3GL_MAP1_TEXTURE_COORD_1\fP,
\f3GL_MAP1_TEXTURE_COORD_2\fP,
\f3GL_MAP1_TEXTURE_COORD_3\fP,
\f3GL_MAP1_TEXTURE_COORD_4\fP,
\f3GL_MAP1_VERTEX_3\fP,
\f3GL_MAP1_VERTEX_4\fP,
\f3GL_MAP2_COLOR_4\fP,
\f3GL_MAP2_INDEX\fP,
\f3GL_MAP2_NORMAL\fP,
\f3GL_MAP2_TEXTURE_COORD_1\fP,
\f3GL_MAP2_TEXTURE_COORD_2\fP,
\f3GL_MAP2_TEXTURE_COORD_3\fP,
\f3GL_MAP2_TEXTURE_COORD_4\fP,
\f3GL_MAP2_VERTEX_3\fP, and
\f3GL_MAP2_VERTEX_4\fP.
.TP
\f2query\fP
Specifies which parameter to return.
Symbolic names
\f3GL_COEFF\fP,
\f3GL_ORDER\fP, and
\f3GL_DOMAIN\fP are accepted.
.TP
\f2v\fP
Returns the requested data.
.SH DESCRIPTION
\f3fglMap1\fP and \f3fglMap2\fP define evaluators.
\f3fglGetMap\fP returns evaluator parameters.
\f2target\fP chooses a map,
\f2query\fP selects a specific parameter,
and \f2v\fP points to storage where the values will be returned.
.P
The acceptable values for the \f2target\fP parameter are described
in the \f3fglMap1\fP and \f3fglMap2\fP reference pages.
.P
\f2query\fP can assume the following values:
.TP 15
\f3GL_COEFF\fP
\f2v\fP returns the control points for the evaluator function.
One-dimensional evaluators return $order$ control points,
and two-dimensional evaluators return $uorder ~times~ vorder$ control points.
Each control point consists of one, two, three, or four integer,
single-precision floating-point,
or double-precision floating-point values,
depending on the type of the evaluator.
The GL returns two-dimensional control points in row-major order,
incrementing the $uorder$ index quickly
and the $vorder$ index after each row.
Integer values,
when requested,
are computed by rounding the internal floating-point values to the
nearest integer values. 
.TP
\f3GL_ORDER\fP
\f2v\fP returns the order of the evaluator function.
One-dimensional evaluators return a single value,
$order$. The initial value is 1.
Two-dimensional evaluators return two values,
$uorder$ and $vorder$. The initial value is 1,1. 
.TP
\f3GL_DOMAIN\fP
\f2v\fP returns the linear $u$ and $v$ mapping parameters.
One-dimensional evaluators return two values,
$u1$ and $u2$,
as specified by \f3fglMap1\fP.
Two-dimensional evaluators return four values
($u1$, $u2$, $v1$, and $v2$)
as specified by \f3fglMap2\fP.
Integer values,
when requested,
are computed by rounding the internal floating-point values to the
nearest integer values.
.SH NOTES
If an error is generated,
no change is made to the contents of \f2v\fP.
.SH ERRORS
\f3GL_INVALID_ENUM\fP is generated if either \f2target\fP or \f2query\fP is not
an accepted value.
.P
\f3GL_INVALID_OPERATION\fP is generated if \f3fglGetMap\fP
is executed between the execution of \f3fglBegin\fP
and the corresponding execution of \f3fglEnd\fP.
.SH SEE ALSO
\f3fglEvalCoord\fP,
\f3fglMap1\fP,
\f3fglMap2\fP
@


1.1
log
@Initial revision
@
text
@d1 2
d6 31
a36 5
.ds Dp Feb 04 11:05
.ds Dm 1 Feb  4 11:
.ds Xs 19970     5
_header(GetMap,return evaluator parameters)
_names(GetMap,[dfi]v)
d41 2
a42 1
_phead(_param1)
d63 2
a64 1
_phead(_param2)
d70 2
a71 1
_phead(_param3)
d74 5
a78 5
_cmnd(Map1) and _cmnd(Map2) define evaluators.
_cmnd returns evaluator parameters.
_param1 chooses a map,
_param2 selects a specific parameter,
and _param3 points to storage where the values will be returned.
d80 2
a81 2
The acceptable values for the _param1 parameter are described
in the _cmnd(Map1) and _cmnd(Map2) reference pages.
d83 1
a83 1
_param2 can assume the following values:
d86 1
a86 1
_param3 returns the control points for the evaluator function.
d102 1
a102 1
_param3 returns the order of the evaluator function.
d109 1
a109 1
_param3 returns the linear $u$ and $v$ mapping parameters.
d112 1
a112 1
as specified by _cmnd(Map1).
d115 1
a115 1
as specified by _cmnd(Map2).
d122 1
a122 1
no change is made to the contents of _param3.
d124 1
a124 1
\f3GL_INVALID_ENUM\fP is generated if either _param1 or _param2 is not
d127 3
a129 3
\f3GL_INVALID_OPERATION\fP is generated if _cmnd
is executed between the execution of _cmnd(Begin)
and the corresponding execution of _cmnd(End).
d131 3
a133 3
_cmnd(EvalCoord),
_cmnd(Map1),
_cmnd(Map2)
@


1.1.1.1
log
@win32-x11 source tree update March 26, 2001
@
text
@@
