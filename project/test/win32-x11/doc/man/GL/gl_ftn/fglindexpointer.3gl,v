head	1.2;
access;
symbols
	win32-x11-2001-03-26:1.1.1.1 SNAPSHOT:1.1.1;
locks; strict;
comment	@# @;
expand	@o@;


1.2
date	2001.06.03.20.47.16;	author ssiddiqi;	state Exp;
branches;
next	1.1;

1.1
date	2001.03.25.19.36.54;	author ssiddiqi;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2001.03.25.19.36.54;	author ssiddiqi;	state Exp;
branches;
next	;


desc
@@


1.2
log
@Win32-X11 update sources check in, June 3, 2001 - ssiddiqi
@
text
@'\"! tbl|eqn | mmdoc
'\"macro stdmacro
.ds Vn Version 1.2
.ds Dt 10 Nov 1998
.ds Re Release 1.0
.ds Dp Apr 04 17:40
.ds Dm  Apr  4  200
.ds Xs 45939 12 fglindexpointer.gl
.TH FGLINDEXPOINTER 
.SH NAME
.B "fglIndexPointer
\- define an array of color indexes

.SH FORTRAN SPECIFICATION
SUBROUTINE \f3fglIndexPointer\fP(
INTEGER*4 \fItype\fP,
.nf
.ta \w'\f3SUBROUTINE \fPfglIndexPointer( 'u
	INTEGER*4 \fIstride\fP,
	CHARACTER*8 \fIpointer\fP )
.fi

.EQ
delim $$
.EN
.SH PARAMETERS
.TP \w'\fIpointer\fP\ \ 'u 
\f2type\fP
Specifies the data type of each color index in the array.
Symbolic constants
\f3GL_UNSIGNED_BYTE\fP,
\f3GL_SHORT\fP,
\f3GL_INT\fP,
\f3GL_FLOAT\fP,
and \f3GL_DOUBLE\fP
are accepted. The initial value is \f3GL_FLOAT\fP.
.TP
\f2stride\fP
Specifies the byte offset between consecutive color indexes.
If \f2stride\fP is 0 (the initial value), the color indexes are understood to
be tightly packed in the array.
The initial value is 0.
.TP
\f2pointer\fP
Specifies a pointer to the first index in the array.
The initial value is 0.
.SH DESCRIPTION
\f3fglIndexPointer\fP specifies the location and data format of an array of color indexes
to use when rendering.
\f2type\fP specifies the data type of
each color index and \f2stride\fP gives the byte stride from one
color index to the next allowing vertexes and attributes
to be packed into a single array or stored in separate arrays.
(Single-array storage may be more efficient on some implementations;
see \f3fglInterleavedArrays\fP.)
.P
\f2type\fP, \f2stride\fP, and \f2pointer\fP are saved as client-side
state.
.P
The color index array is initially disabled. To enable and disable
the array, call \f3fglEnableClientState\fP and 
\f3fglDisableClientState\fP with the argument \f3GL_INDEX_ARRAY\fP. If
enabled, the color index array is used when \f3fglDrawArrays\fP,
\f3fglDrawElements\fP or \f3fglArrayElement\fP is called. 
.P
Use \f3fglDrawArrays\fP to construct a sequence of primitives (all of
the same type) from prespecified vertex and vertex attribute arrays.
Use \f3fglArrayElement\fP to specify primitives
by indexing vertexes and vertex attributes and \f3fglDrawElements\fP to
construct a sequence of primitives by indexing vertexes and vertex attributes. 
.SH NOTES
\f3fglIndexPointer\fP is available only if the GL version is 1.1 or greater.
.P
The color index array is initially disabled, and it isn't accessed when
\f3fglArrayElement\fP, \f3fglDrawElements\fP, or \f3fglDrawArrays\fP is called.
.P
Execution of \f3fglIndexPointer\fP is not allowed between 
\f3fglBegin\fP and the corresponding \f3fglEnd\fP,
but an error may or may not be generated. If an error is not generated,
the operation is undefined.
.P
\f3fglIndexPointer\fP is typically implemented on the client side.
.P
Since the color index array parameters are client-side state, they are
not saved or restored by \f3fglPushAttrib\fP and \f3fglPopAttrib\fP.
Use \f3fglPushClientAttrib\fP and
\f3fglPopClientAttrib\fP instead.
.SH ERRORS
\f3GL_INVALID_ENUM\fP is generated if \f2type\fP is not an accepted value.
.P
\f3GL_INVALID_VALUE\fP is generated if \f2stride\fP is negative.
.SH ASSOCIATED GETS  
\f3fglIsEnabled\fP with argument \f3GL_INDEX_ARRAY\fP
.br
\f3fglGet\fP with argument \f3GL_INDEX_ARRAY_TYPE\fP
.br
\f3fglGet\fP with argument \f3GL_INDEX_ARRAY_STRIDE\fP
.br
\f3fglGetPointerv\fP with argument \f3GL_INDEX_ARRAY_POINTER\fP
.SH SEE ALSO 
\f3fglArrayElement\fP,
\f3fglColorPointer\fP,
\f3fglDrawArrays\fP,
\f3fglDrawElements\fP,
\f3fglEdgeFlagPointer\fP,
\f3fglEnable\fP,
\f3fglGetPointerv\fP,
\f3fglInterleavedArrays\fP,
\f3fglNormalPointer\fP,
\f3fglPopClientAttrib\fP,
\f3fglPushClientAttrib\fP,
\f3fglTexCoordPointer\fP,
\f3fglVertexPointer\fP
@


1.1
log
@Initial revision
@
text
@d1 2
d6 17
a22 5
.ds Dp Feb 04 11:05
.ds Dm 7 Feb  4 11:
.ds Xs 55388     6
_header(IndexPointer,define an array of color indexes)
_names(IndexPointer)
d27 2
a28 1
_phead(_param1)
d37 2
a38 1
_phead(_param2)
d40 1
a40 1
If _param2 is 0 (the initial value), the color indexes are understood to
d43 2
a44 1
_phead(_param3)
d48 1
a48 1
_cmnd specifies the location and data format of an array of color indexes
d50 2
a51 2
_param1 specifies the data type of
each color index and _param2 gives the byte stride from one
d55 1
a55 1
see _cmnd(InterleavedArrays).)
d57 1
a57 1
_param1, _param2, and _param3 are saved as client-side
d61 4
a64 4
the array, call _cmnd(EnableClientState) and 
_cmnd(DisableClientState) with the argument \f3GL_INDEX_ARRAY\fP. If
enabled, the color index array is used when _cmnd(DrawArrays),
_cmnd(DrawElements) or _cmnd(ArrayElement) is called. 
d66 1
a66 1
Use _cmnd(DrawArrays) to construct a sequence of primitives (all of
d68 2
a69 2
Use _cmnd(ArrayElement) to specify primitives
by indexing vertexes and vertex attributes and _cmnd(DrawElements) to
d72 1
a72 1
_cmnd is available only if the GL version is 1.1 or greater.
d75 1
a75 1
_cmnd(ArrayElement), _cmnd(DrawElements), or _cmnd(DrawArrays) is called.
d77 2
a78 2
Execution of _cmnd is not allowed between 
_cmnd(Begin) and the corresponding _cmnd(End),
d82 1
a82 1
_cmnd is typically implemented on the client side.
d85 3
a87 3
not saved or restored by _cmnd(PushAttrib) and _cmnd(PopAttrib).
Use _cmnd(PushClientAttrib) and
_cmnd(PopClientAttrib) instead.
d89 1
a89 1
\f3GL_INVALID_ENUM\fP is generated if _param1 is not an accepted value.
d91 1
a91 1
\f3GL_INVALID_VALUE\fP is generated if _param2 is negative.
d93 1
a93 1
_cmnd(IsEnabled) with argument \f3GL_INDEX_ARRAY\fP
d95 1
a95 1
_cmnd(Get) with argument \f3GL_INDEX_ARRAY_TYPE\fP
d97 1
a97 1
_cmnd(Get) with argument \f3GL_INDEX_ARRAY_STRIDE\fP
d99 1
a99 1
_cmnd(GetPointerv) with argument \f3GL_INDEX_ARRAY_POINTER\fP
d101 13
a113 13
_cmnd(ArrayElement),
_cmnd(ColorPointer),
_cmnd(DrawArrays),
_cmnd(DrawElements),
_cmnd(EdgeFlagPointer),
_cmnd(Enable),
_cmnd(GetPointerv),
_cmnd(InterleavedArrays),
_cmnd(NormalPointer),
_cmnd(PopClientAttrib),
_cmnd(PushClientAttrib),
_cmnd(TexCoordPointer),
_cmnd(VertexPointer)
@


1.1.1.1
log
@win32-x11 source tree update March 26, 2001
@
text
@@
