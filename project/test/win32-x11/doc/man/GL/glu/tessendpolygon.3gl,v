head	1.2;
access;
symbols
	win32-x11-2001-03-26:1.1.1.1 SNAPSHOT:1.1.1;
locks; strict;
comment	@# @;
expand	@o@;


1.2
date	2001.06.03.20.47.19;	author ssiddiqi;	state Exp;
branches;
next	1.1;

1.1
date	2001.03.25.19.36.53;	author ssiddiqi;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2001.03.25.19.36.53;	author ssiddiqi;	state Exp;
branches;
next	;


desc
@@


1.2
log
@Win32-X11 update sources check in, June 3, 2001 - ssiddiqi
@
text
@'\"! eqn | mmdoc
'\"macro stdmacro
.ds Vn Version 1.2
.ds Dt 6 March 1997
.ds Re Release 1.2.0
.ds Dp Apr 04 17:42
.ds Dm  Apr  5  200
.ds Xs 12255 8 tessendpolygon.gl
.TH GLUTESSENDPOLYGON 3G
.SH NAME
.B "gluTessEndPolygon
\- delimit a polygon description

.SH C SPECIFICATION
void \f3gluTessEndPolygon\fP(
GLUtesselator* \fItess\fP )
.nf
.fi

.EQ
delim $$
.EN
.SH PARAMETERS
.TP \w'\f2tess\fP\ \ 'u 
\f2tess\fP
Specifies the tessellation object (created with \%\f3gluNewTess\fP).
.SH DESCRIPTION
\%\f3gluTessBeginPolygon\fP and \%\f3gluTessEndPolygon\fP delimit the definition of a
convex, concave or self-intersecting polygon. Within each \%\f3gluTessBeginPolygon\fP/\%\f3gluTessEndPolygon\fP
pair, there must be one or more calls to \%\f3gluTessBeginContour\fP/\%\f3gluTessEndContour\fP. 
Within each contour, there are zero or more calls to \%\f3gluTessVertex\fP. The vertices 
specify a closed contour (the last vertex of each contour is automatically linked 
to the first). See the \%\f3gluTessVertex\fP, \%\f3gluTessBeginContour\fP and 
\%\f3gluTessEndContour\fP reference pages for more details.
.P
Once \%\f3gluTessEndPolygon\fP is called, the polygon is tessellated, and the
resulting triangles are described through callbacks.
See \%\f3gluTessCallback\fP for descriptions of the callback functions.
.SH EXAMPLE
A quadrilateral with a triangular hole in it can be described like this:
.sp
.Ex
gluTessBeginPolygon(tobj, NULL);
 gluTessBeginContour(tobj);
   gluTessVertex(tobj, v1, v1);
   gluTessVertex(tobj, v2, v2);
   gluTessVertex(tobj, v3, v3);
   gluTessVertex(tobj, v4, v4);
 gluTessEndContour(tobj);
 gluTessBeginContour(tobj);
   gluTessVertex(tobj, v5, v5);
   gluTessVertex(tobj, v6, v6);
   gluTessVertex(tobj, v7, v7);
 gluTessEndContour(tobj);
gluTessEndPolygon(tobj);
.Ee
.bp
In the above example the pointers, $v1$ through $v7$, 
should point to different
addresses, 
since the values stored at these addresses will not be read by
the tesselator until \%\f3gluTessEndPolygon\fP is called.
.SH SEE ALSO
\%\f3gluNewTess\fP, \%\f3gluTessBeginContour\fP, \%\f3gluTessVertex\fP, 
\%\f3gluTessCallback\fP, 
\%\f3gluTessProperty\fP, \%\f3gluTessNormal\fP,
\%\f3gluTessBeginPolygon\fP
@


1.1
log
@Initial revision
@
text
@d1 2
d6 14
a19 5
.ds Dp Feb 04 11:06
.ds Dm 8 Apr  5  20
.ds Xs 16616     4
_header(TessEndPolygon, delimit a polygon description)
_names(TessEndPolygon)
d24 3
a26 2
_phead(_param1)
Specifies the tessellation object (created with _cmnd(NewTess)).
d28 4
a31 4
_cmnd(TessBeginPolygon) and _cmnd(TessEndPolygon) delimit the definition of a
convex, concave or self-intersecting polygon. Within each _cmnd(TessBeginPolygon)/_cmnd(TessEndPolygon)
pair, there must be one or more calls to _cmnd(TessBeginContour)/_cmnd(TessEndContour). 
Within each contour, there are zero or more calls to _cmnd(TessVertex). The vertices 
d33 2
a34 2
to the first). See the _cmnd(TessVertex), _cmnd(TessBeginContour) and 
_cmnd(TessEndContour) reference pages for more details.
d36 1
a36 1
Once _cmnd(TessEndPolygon) is called, the polygon is tessellated, and the
d38 1
a38 1
See _cmnd(TessCallback) for descriptions of the callback functions.
d62 1
a62 1
the tesselator until _cmnd(TessEndPolygon) is called.
d64 4
a67 4
_cmnd(NewTess), _cmnd(TessBeginContour), _cmnd(TessVertex), 
_cmnd(TessCallback), 
_cmnd(TessProperty), _cmnd(TessNormal),
_cmnd(TessBeginPolygon)
@


1.1.1.1
log
@win32-x11 source tree update March 26, 2001
@
text
@@
