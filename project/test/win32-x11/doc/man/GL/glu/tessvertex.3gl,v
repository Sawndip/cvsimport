head	1.2;
access;
symbols
	win32-x11-2001-03-26:1.1.1.1 SNAPSHOT:1.1.1;
locks; strict;
comment	@# @;
expand	@o@;


1.2
date	2001.06.03.20.47.19;	author ssiddiqi;	state Exp;
branches;
next	1.1;

1.1
date	2001.03.25.19.36.53;	author ssiddiqi;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2001.03.25.19.36.53;	author ssiddiqi;	state Exp;
branches;
next	;


desc
@@


1.2
log
@Win32-X11 update sources check in, June 3, 2001 - ssiddiqi
@
text
@'\"! eqn | mmdoc
'\"macro stdmacro
.ds Vn Version 1.2
.ds Dt 6 March 1997
.ds Re Release 1.2.0
.ds Dp Apr 04 17:42
.ds Dm  Apr  5  200
.ds Xs 60223 9 tessvertex.gl
.TH GLUTESSVERTEX 3G
.SH NAME
.B "gluTessVertex
\- specify a vertex on a polygon

.SH C SPECIFICATION
void \f3gluTessVertex\fP(
GLUtesselator* \fItess\fP,
.nf
.ta \w'\f3void \fPgluTessVertex( 'u
	GLdouble \fI*location\fP,
	GLvoid* \fIdata\fP )
.fi

.EQ
delim $$
.EN
.SH PARAMETERS
.TP \w'\fIlocation\fP\ \ 'u 
\f2tess\fP
Specifies the tessellation object (created with \%\f3gluNewTess\fP).
.TP
\f2location\fP
Specifies the location of the vertex.
.TP
\f2data\fP
Specifies an opaque pointer passed back to the program with the vertex callback
(as specified by \%\f3gluTessCallback\fP).
.SH DESCRIPTION
\%\f3gluTessVertex\fP describes a vertex on a polygon that the program defines. Successive
\%\f3gluTessVertex\fP calls describe a closed contour. For example, 
to describe a quadrilateral \%\f3gluTessVertex\fP should be called four times.
\%\f3gluTessVertex\fP can only be called between \%\f3gluTessBeginContour\fP and 
\%\f3gluTessEndContour\fP.
.P
\f2data\fP normally points to a structure containing the vertex
location, as well as other per-vertex attributes such as color and normal.
This pointer is passed back to the user through the \%\f3GLU_TESS_VERTEX\fP
or \%\f3GLU_TESS_VERTEX_DATA\fP callback after tessellation 
(see the \%\f3gluTessCallback\fP reference page).
.SH EXAMPLE
A quadrilateral with a triangular hole in it can be described as follows:
.sp
.Ex
gluTessBeginPolygon(tobj, NULL);
 gluTessBeginContour(tobj);
   gluTessVertex(tobj, v1, v1);
   gluTessVertex(tobj, v2, v2);
   gluTessVertex(tobj, v3, v3);
   gluTessVertex(tobj, v4, v4);
 gluTessEndContour(tobj);
 gluTessBeginContour(tobj);
   gluTessVertex(tobj, v5, v5);
   gluTessVertex(tobj, v6, v6);
   gluTessVertex(tobj, v7, v7);
 gluTessEndContour(tobj);
gluTessEndPolygon(tobj);
.Ee
.sp
.SH NOTES
It is a common error to use a local variable for \f2location\fP or \f2data\fP and store
values into it as part of a loop.
For example:
.Ex
for (i = 0; i < NVERTICES; ++i) {
  GLdouble data[3];
  data[0] = vertex[i][0];
  data[1] = vertex[i][1];
  data[2] = vertex[i][2];
  gluTessVertex(tobj, data, data);
  }
.Ee
.P
This doesn't work.
Because the pointers specified by \f2location\fP and \f2data\fP might not be 
dereferenced until \%\f3gluTessEndPolygon\fP is executed,
all the vertex coordinates but the very last set could be overwritten
before tessellation begins.
.P
Two common symptoms of this problem are consists of a single point
(when a local variable is used for \f2data\fP) and a
\%\f3GLU_TESS_NEED_COMBINE_CALLBACK\fP error (when a local variable is
used for \f2location\fP).
.SH SEE ALSO
\%\f3gluTessBeginPolygon\fP, \%\f3gluNewTess\fP, \%\f3gluTessBeginContour\fP, 
\%\f3gluTessCallback\fP, 
\%\f3gluTessProperty\fP, \%\f3gluTessNormal\fP,
\%\f3gluTessEndPolygon\fP


@


1.1
log
@Initial revision
@
text
@d1 2
d6 17
a22 5
.ds Dp Feb 04 11:06
.ds Dm 2 Apr  5  20
.ds Xs 55990     5
_header(TessVertex, specify a vertex on a polygon)
_names(TessVertex)
d27 5
a31 3
_phead(_param1)
Specifies the tessellation object (created with _cmnd(NewTess)).
_phead(_param2)
d33 2
a34 1
_phead(_param3)
d36 1
a36 1
(as specified by _cmnd(TessCallback)).
d38 5
a42 5
_cmnd describes a vertex on a polygon that the program defines. Successive
_cmnd calls describe a closed contour. For example, 
to describe a quadrilateral _cmnd should be called four times.
_cmnd can only be called between _cmnd(TessBeginContour) and 
_cmnd(TessEndContour).
d44 1
a44 1
_param3 normally points to a structure containing the vertex
d48 1
a48 1
(see the _cmnd(TessCallback) reference page).
d69 1
a69 1
It is a common error to use a local variable for _param2 or _param3 and store
d83 2
a84 2
Because the pointers specified by _param2 and _param3 might not be 
dereferenced until _cmnd(TessEndPolygon) is executed,
d89 1
a89 1
(when a local variable is used for _param3) and a
d91 1
a91 1
used for _param2).
d93 4
a96 4
_cmnd(TessBeginPolygon), _cmnd(NewTess), _cmnd(TessBeginContour), 
_cmnd(TessCallback), 
_cmnd(TessProperty), _cmnd(TessNormal),
_cmnd(TessEndPolygon)
@


1.1.1.1
log
@win32-x11 source tree update March 26, 2001
@
text
@@
