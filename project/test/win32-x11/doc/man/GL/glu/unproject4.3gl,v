head	1.2;
access;
symbols
	win32-x11-2001-03-26:1.1.1.1 SNAPSHOT:1.1.1;
locks; strict;
comment	@# @;
expand	@o@;


1.2
date	2001.06.03.20.47.19;	author ssiddiqi;	state Exp;
branches;
next	1.1;

1.1
date	2001.03.25.19.36.53;	author ssiddiqi;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2001.03.25.19.36.53;	author ssiddiqi;	state Exp;
branches;
next	;


desc
@@


1.2
log
@Win32-X11 update sources check in, June 3, 2001 - ssiddiqi
@
text
@'\"! eqn | mmdoc
'\"macro stdmacro
.ds Vn Version 1.2
.ds Dt 6 March 1997
.ds Re Release 1.2.0
.ds Dp Apr 04 17:42
.ds Dm  Apr  5  200
.ds Xs 35825 9 unproject4.gl
.TH GLUUNPROJECT4 3G
.SH NAME
.B "gluUnProject4
\- map window and clip coordinates to object coordinates

.SH C SPECIFICATION
GLint \f3gluUnProject4\fP(
GLdouble \fIwinX\fP,
.nf
.ta \w'\f3GLint \fPgluUnProject4( 'u
	GLdouble \fIwinY\fP,
	GLdouble \fIwinZ\fP,
	GLdouble \fIclipW\fP,
	const GLdouble \fI*model\fP,
	const GLdouble \fI*proj\fP,
	const GLint \fI*view\fP,
	GLdouble \fInear\fP,
	GLdouble \fIfar\fP,
	GLdouble* \fIobjX\fP,
	GLdouble* \fIobjY\fP,
	GLdouble* \fIobjZ\fP,
	GLdouble* \fIobjW\fP )
.fi

.EQ
delim $$
.EN
.SH PARAMETERS
.TP \w'\f2winX\fP\ \f2winY\fP\ \f2winZ\fP\ \ 'u 
\f2winX\fP, \f2winY\fP, \f2winZ\fP
Specify the window coordinates to be mapped.
.TP
\f2clipW\fP
Specify the clip w coordinate to be mapped.
.TP
\f2model\fP
Specifies the modelview matrix (as from a \f3glGetDoublev\fP call).
.TP
\f2proj\fP
Specifies the projection matrix (as from a \f3glGetDoublev\fP call).
.TP
\f2view\fP
Specifies the viewport (as from a \f3glGetIntegerv\fP call).
.TP
\f2near\fP, \f2far\fP
Specifies the near and far planes (as from a \f3glGetDoublev\fP call).
.TP
\f2objX\fP, \f2objY\fP, \f2objZ\fP, \f2objW\fP
Returns the computed object coordinates.
.SH DESCRIPTION
\%\f3gluUnProject4\fP maps the specified window coordinates \f2winX\fP, \f2winY\fP and \f2winZ\fP
and its clip w coordinate \f2clipW\fP
into object 
coordinates (\f2objX\fP, \f2objY\fP, \f2objZ\fP, \f2objW\fP)
using \f2model\fP, \f2proj\fP and \f2view\fP. \f2clipW\fP can be other than
1 as for vertices in \f3glFeedbackBuffer\fP when data type 
\%\f3GL_4D_COLOR_TEXTURE\fP is returned.
This also handles the case
where the \f2near\fP and \f2far\fP planes are different from the default,
0 and 1, respectively.
A return 
value of \%\f3GL_TRUE\fP indicates success; a return value of \%\f3GL_FALSE\fP
indicates failure.
.P
To compute the coordinates (\f2objX\fP, \f2objY\fP, \f2objZ\fP and \f2objW\fP),
\%\f3gluUnProject4\fP multiplies the normalized device coordinates by the inverse of
\f2model\fP*\f2proj\fP as follows:

.P
.ce
.EQ
left ( down 70 {cpile { ~"objX" above ~"objY" above ~"objZ"
above ~"objW"}} ~~ right ) ~=~ INV(P M) 
left ( down 140 {cpile { 
{ {2("winX" ~-~ "view"[0])} over {"view"[2]} ~-~ 1 }
above 
{ {2("winY" ~-~ "view"[1])} over {"view"[3]} ~-~ 1 }
above 
{ {2("winZ" ~-~ "near")} over {("far" ~-~ "near")} ~-~ 1 }
above 
"clipW"}} ~~ right )
.EN
.sp
$INV()$ denotes matrix inversion. 
.P
\%\f3gluUnProject4\fP is equivalent to \%\f3gluUnProject\fP when \f2clipW\fP is 1, \f2near\fP is 0 and
\f2far\fP is 1.
.SH NOTES
\%\f3gluUnProject4\fP is available only if the GLU version is 1.3 or greater.
.SH SEE ALSO
\f3glGet\fP,
\f3glFeedbackBuffer\fP,
\%\f3gluProject\fP,
\%\f3gluUnProject\fP
@


1.1
log
@Initial revision
@
text
@d1 2
d6 27
a32 5
.ds Dp Feb 04 11:06
.ds Dm 4 Apr  5  20
.ds Xs 13294     5
_header(UnProject4, map window and clip coordinates to object coordinates)
_names(UnProject4)
d37 2
a38 1
_phead(_param1 _param2 _param3)
d40 2
a41 1
_phead(_param4)
d43 14
a56 9
_phead(_param5)
Specifies the modelview matrix (as from a _glcmnd(GetDoublev) call).
_phead(_param6)
Specifies the projection matrix (as from a _glcmnd(GetDoublev) call).
_phead(_param7)
Specifies the viewport (as from a _glcmnd(GetIntegerv) call).
_phead(_param8 _param9)
Specifies the near and far planes (as from a _glcmnd(GetDoublev) call).
_phead(_param10 _param11 _param12 _param13)
d59 2
a60 2
_cmnd maps the specified window coordinates _param1, _param2 and _param3
and its clip w coordinate _param4
d62 3
a64 3
coordinates (_param10, _param11, _param12, _param13)
using _param5, _param6 and _param7. _param4 can be other than
1 as for vertices in _glcmnd(FeedbackBuffer) when data type 
d67 1
a67 1
where the _param8 and _param9 planes are different from the default,
d73 3
a75 3
To compute the coordinates (_param10, _param11, _param12 and _param13),
_cmnd multiplies the normalized device coordinates by the inverse of
_param5*_param6 as follows:
d80 2
a81 2
left ( down 70 {cpile { ~_eqnparam10 above ~_eqnparam11 above ~_eqnparam12
above ~_eqnparam13}} ~~ right ) ~=~ INV(P M) 
d83 1
a83 1
{ {2(_eqnparam1 ~-~ _eqnparam7[0])} over {_eqnparam7[2]} ~-~ 1 }
d85 1
a85 1
{ {2(_eqnparam2 ~-~ _eqnparam7[1])} over {_eqnparam7[3]} ~-~ 1 }
d87 1
a87 1
{ {2(_eqnparam3 ~-~ _eqnparam8)} over {(_eqnparam9 ~-~ _eqnparam8)} ~-~ 1 }
d89 1
a89 1
_eqnparam4}} ~~ right )
d94 2
a95 2
_cmnd is equivalent to _cmnd(UnProject) when _param4 is 1, _param8 is 0 and
_param9 is 1.
d97 1
a97 1
_cmnd is available only if the GLU version is 1.3 or greater.
d99 4
a102 4
_glcmnd(Get),
_glcmnd(FeedbackBuffer),
_cmnd(Project),
_cmnd(UnProject)
@


1.1.1.1
log
@win32-x11 source tree update March 26, 2001
@
text
@@
