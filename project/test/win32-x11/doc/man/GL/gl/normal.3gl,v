head	1.2;
access;
symbols
	win32-x11-2001-03-26:1.1.1.1 SNAPSHOT:1.1.1;
locks; strict;
comment	@# @;
expand	@o@;


1.2
date	2001.06.03.20.47.14;	author ssiddiqi;	state Exp;
branches;
next	1.1;

1.1
date	2001.03.25.19.36.53;	author ssiddiqi;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2001.03.25.19.36.53;	author ssiddiqi;	state Exp;
branches;
next	;


desc
@@


1.2
log
@Win32-X11 update sources check in, June 3, 2001 - ssiddiqi
@
text
@'\"! tbl|eqn | mmdoc
'\"macro stdmacro
.ds Vn Version 1.2
.ds Dt 24 September 1999
.ds Re Release 1.2.1
.ds Dp Apr 04 17:39
.ds Dm  Apr  5  200
.ds Xs 11373 8 normal.gl
.TH GLNORMAL 3G
.SH NAME
.B "glNormal3b, glNormal3d, glNormal3f, glNormal3i, glNormal3s, glNormal3bv, glNormal3dv, glNormal3fv, glNormal3iv, glNormal3sv
\- set the current normal vector

.EQ
delim $$
.EN
.SH C SPECIFICATION
void \f3glNormal3b\fP(
GLbyte \fInx\fP,
.nf
.ta \w'\f3void \fPglNormal3b( 'u
	GLbyte \fIny\fP,
	GLbyte \fInz\fP )
.fi
void \f3glNormal3d\fP(
GLdouble \fInx\fP,
.nf
.ta \w'\f3void \fPglNormal3d( 'u
	GLdouble \fIny\fP,
	GLdouble \fInz\fP )
.fi
void \f3glNormal3f\fP(
GLfloat \fInx\fP,
.nf
.ta \w'\f3void \fPglNormal3f( 'u
	GLfloat \fIny\fP,
	GLfloat \fInz\fP )
.fi
void \f3glNormal3i\fP(
GLint \fInx\fP,
.nf
.ta \w'\f3void \fPglNormal3i( 'u
	GLint \fIny\fP,
	GLint \fInz\fP )
.fi
void \f3glNormal3s\fP(
GLshort \fInx\fP,
.nf
.ta \w'\f3void \fPglNormal3s( 'u
	GLshort \fIny\fP,
	GLshort \fInz\fP )
.fi

.SH PARAMETERS
.TP \w'\f2nx\fP\ \f2ny\fP\ \f2nz\fP\ \ 'u 
\f2nx\fP, \f2ny\fP, \f2nz\fP
Specify the $x$, $y$, and $z$ coordinates of the new current normal.
The initial value of the current normal is the unit vector, (0, 0, 1).
.P
.SH C SPECIFICATION
void \f3glNormal3bv\fP(
const GLbyte \fI*v\fP )
.nf
.fi
void \f3glNormal3dv\fP(
const GLdouble \fI*v\fP )
.nf
.fi
void \f3glNormal3fv\fP(
const GLfloat \fI*v\fP )
.nf
.fi
void \f3glNormal3iv\fP(
const GLint \fI*v\fP )
.nf
.fi
void \f3glNormal3sv\fP(
const GLshort \fI*v\fP )
.nf
.fi

.SH PARAMETERS
.TP
\f2v\fP
Specifies a pointer to an array of three elements:
the $x$, $y$, and $z$ coordinates of the new current normal.
.P
.SH DESCRIPTION
The current normal is set to the given coordinates
whenever \%\f3glNormal\fP is issued.
Byte, short, or integer arguments are converted to floating-point
format with a linear mapping that maps the most positive representable integer
value to 1.0,
and the most negative representable integer value to \-1.0.
.P
Normals specified with \%\f3glNormal\fP need not have unit length.
If \%\f3GL_NORMALIZE\fP is enabled,
then normals of any length specified with \%\f3glNormal\fP are normalized after transformation.
If \%\f3GL_RESCALE_NORMAL\fP is enabled, normals are scaled by a scaling factor
derived from the modelview matrix.  \%\f3GL_RESCALE_NORMAL\fP requires that the
originally specified normals were of unit length, and that the modelview
matrix contain only uniform scales for proper results.
To enable and disable normalization, call \%\f3glEnable\fP and \%\f3glDisable\fP
with either \%\f3GL_NORMALIZE\fP or \%\f3GL_RESCALE_NORMAL\fP.
Normalization is initially disabled.
.SH NOTES
The current normal can be updated at any time.
In particular, \%\f3glNormal\fP can be called between a call to \%\f3glBegin\fP and
the corresponding call to \%\f3glEnd\fP.
.SH ASSOCIATED GETS
\%\f3glGet\fP with argument \%\f3GL_CURRENT_NORMAL\fP
.br
\%\f3glIsEnabled\fP with argument \%\f3GL_NORMALIZE\fP
.br
\%\f3glIsEnabled\fP with argument \%\f3GL_RESCALE_NORMAL\fP
.SH SEE ALSO
\%\f3glBegin\fP,
\%\f3glColor\fP,
\%\f3glIndex\fP,
\%\f3glNormalPointer\fP,
\%\f3glTexCoord\fP,
\%\f3glVertex\fP
@


1.1
log
@Initial revision
@
text
@d1 2
d6 8
a13 4
.ds Dp Feb 04 10:50
.ds Dm 9 Apr  5  20
.ds Xs 22982     4
_header(Normal,set the current normal vector)
d17 37
a53 1
_names(Normal,3[bdfis])
d55 2
a56 1
_phead(_param1 _param2 _param3)
d60 22
a81 1
_names(Normal,3[bsidf]v)
d83 2
a84 1
_phead(_param1)
d90 1
a90 1
whenever _cmnd is issued.
d92 1
a92 1
 with a linear mapping that maps the most positive representable integer
d96 1
a96 1
Normals specified with _cmnd need not have unit length.
d98 1
a98 1
then normals of any length specified with _cmnd are normalized after transformation.
d103 1
a103 1
To enable and disable normalization, call _cmnd(Enable) and _cmnd(Disable)
d108 2
a109 2
In particular, _cmnd can be called between a call to _cmnd(Begin) and
the corresponding call to _cmnd(End).
d111 1
a111 1
_cmnd(Get) with argument \%\f3GL_CURRENT_NORMAL\fP
d113 1
a113 1
_cmnd(IsEnabled) with argument \%\f3GL_NORMALIZE\fP
d115 1
a115 1
_cmnd(IsEnabled) with argument \%\f3GL_RESCALE_NORMAL\fP
d117 6
a122 6
_cmnd(Begin),
_cmnd(Color),
_cmnd(Index),
_cmnd(NormalPointer),
_cmnd(TexCoord),
_cmnd(Vertex)
@


1.1.1.1
log
@win32-x11 source tree update March 26, 2001
@
text
@@
