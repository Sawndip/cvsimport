head	1.2;
access;
symbols
	win32-x11-2001-03-26:1.1.1.1 SNAPSHOT:1.1.1;
locks; strict;
comment	@# @;
expand	@o@;


1.2
date	2001.06.03.20.47.14;	author ssiddiqi;	state Exp;
branches;
next	1.1;

1.1
date	2001.03.25.19.36.53;	author ssiddiqi;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2001.03.25.19.36.53;	author ssiddiqi;	state Exp;
branches;
next	;


desc
@@


1.2
log
@Win32-X11 update sources check in, June 3, 2001 - ssiddiqi
@
text
@'\"! eqn | mmdoc
'\"macro stdmacro
.ds Vn Version 1.2
.ds Dt 24 September 1999
.ds Re Release 1.2.1
.ds Dp Apr 04 17:39
.ds Dm  Apr  5  200
.ds Xs 11533 8 scale.gl
.TH GLSCALE 3G
.SH NAME
.B "glScaled, glScalef
\- multiply the current matrix by a general scaling matrix

.SH C SPECIFICATION
void \f3glScaled\fP(
GLdouble \fIx\fP,
.nf
.ta \w'\f3void \fPglScaled( 'u
	GLdouble \fIy\fP,
	GLdouble \fIz\fP )
.fi
void \f3glScalef\fP(
GLfloat \fIx\fP,
.nf
.ta \w'\f3void \fPglScalef( 'u
	GLfloat \fIy\fP,
	GLfloat \fIz\fP )
.fi

.EQ
delim $$
.EN
.SH PARAMETERS
.TP \w'\f2x\fP\ \f2y\fP\ \f2z\fP\ \ 'u 
\f2x\fP, \f2y\fP, \f2z\fP
Specify scale factors along the \f2x\fP, \f2y\fP, and \f2z\fP axes, respectively.
.SH DESCRIPTION
\%\f3glScale\fP produces a nonuniform scaling along the \f2x\fP, \f2y\fP, and
\f2z\fP axes. 
The three parameters indicate the desired scale factor along
each of the three axes.
.P
The current matrix
(see \%\f3glMatrixMode\fP)
is multiplied by this scale matrix,
and the product replaces the current matrix
as if \%\f3glScale\fP were called with the following matrix
as its argument:

.P
.ce
.EQ 
left ( ~ down 20 matrix {
   ccol { ~"x" above ~0 above ~0 above ~0 }
   ccol { ~0 above ~"y" above ~0 above ~0 }
   ccol { ~0 above ~0 above ~"z" above ~0 }
   ccol { ~0 above ~0 above ~0 above ~1}
} ~~ right )
.EN
.sp
If the matrix mode is either \%\f3GL_MODELVIEW\fP or \%\f3GL_PROJECTION\fP,
all objects drawn after \%\f3glScale\fP is called are scaled.
.P
Use \%\f3glPushMatrix\fP and \%\f3glPopMatrix\fP to save and restore
the unscaled coordinate system.
.SH NOTES
If scale factors other than 1 are applied to the modelview matrix
and lighting is enabled, lighting often appears wrong.
In that case, enable automatic normalization of normals by
calling \%\f3glEnable\fP with the argument \%\f3GL_NORMALIZE\fP.
.SH ERRORS
\%\f3GL_INVALID_OPERATION\fP is generated if \%\f3glScale\fP
is executed between the execution of 
\%\f3glBegin\fP
and the corresponding execution of \%\f3glEnd\fP.
.SH ASSOCIATED GETS
\%\f3glGet\fP with argument \%\f3GL_MATRIX_MODE\fP
.br
\%\f3glGet\fP with argument \%\f3GL_COLOR_MATRIX\fP
.br
\%\f3glGet\fP with argument \%\f3GL_MODELVIEW_MATRIX\fP
.br
\%\f3glGet\fP with argument \%\f3GL_PROJECTION_MATRIX\fP
.br
\%\f3glGet\fP with argument \%\f3GL_TEXTURE_MATRIX\fP
.SH SEE ALSO
\%\f3glMatrixMode\fP,
\%\f3glMultMatrix\fP, 
\%\f3glPushMatrix\fP,
\%\f3glRotate\fP,
\%\f3glTranslate\fP
@


1.1
log
@Initial revision
@
text
@d1 2
d6 24
a29 5
.ds Dp Feb 04 10:50
.ds Dm 7 Apr  5  20
.ds Xs 39478     4
_header(Scale,multiply the current matrix by a general scaling matrix)
_names(Scale,[df])
d34 2
a35 1
_phead(_param1 _param2 _param3)
d38 1
a38 1
_cmnd produces a nonuniform scaling along the \f2x\fP, \f2y\fP, and
d44 1
a44 1
(see _cmnd(MatrixMode))
d47 1
a47 1
as if _cmnd were called with the following matrix
d54 3
a56 3
   ccol { ~_eqnparam1 above ~0 above ~0 above ~0 }
   ccol { ~0 above ~_eqnparam2 above ~0 above ~0 }
   ccol { ~0 above ~0 above ~_eqnparam3 above ~0 }
d62 1
a62 1
all objects drawn after _cmnd is called are scaled.
d64 1
a64 1
Use _cmnd(PushMatrix) and _cmnd(PopMatrix) to save and restore
d70 1
a70 1
calling _cmnd(Enable) with the argument \%\f3GL_NORMALIZE\fP.
d72 1
a72 1
\%\f3GL_INVALID_OPERATION\fP is generated if _cmnd
d74 2
a75 2
_cmnd(Begin)
and the corresponding execution of _cmnd(End).
d77 1
a77 1
_cmnd(Get) with argument \%\f3GL_MATRIX_MODE\fP
d79 1
a79 1
_cmnd(Get) with argument \%\f3GL_COLOR_MATRIX\fP
d81 1
a81 1
_cmnd(Get) with argument \%\f3GL_MODELVIEW_MATRIX\fP
d83 1
a83 1
_cmnd(Get) with argument \%\f3GL_PROJECTION_MATRIX\fP
d85 1
a85 1
_cmnd(Get) with argument \%\f3GL_TEXTURE_MATRIX\fP
d87 5
a91 5
_cmnd(MatrixMode),
_cmnd(MultMatrix), 
_cmnd(PushMatrix),
_cmnd(Rotate),
_cmnd(Translate)
@


1.1.1.1
log
@win32-x11 source tree update March 26, 2001
@
text
@@
