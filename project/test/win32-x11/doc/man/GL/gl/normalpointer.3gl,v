head	1.2;
access;
symbols
	win32-x11-2001-03-26:1.1.1.1 SNAPSHOT:1.1.1;
locks; strict;
comment	@# @;
expand	@o@;


1.2
date	2001.06.03.20.47.14;	author ssiddiqi;	state Exp;
branches;
next	1.1;

1.1
date	2001.03.25.19.36.53;	author ssiddiqi;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2001.03.25.19.36.53;	author ssiddiqi;	state Exp;
branches;
next	;


desc
@@


1.2
log
@Win32-X11 update sources check in, June 3, 2001 - ssiddiqi
@
text
@'\"! tbl|eqn | mmdoc
'\"macro stdmacro
.ds Vn Version 1.2
.ds Dt 24 September 1999
.ds Re Release 1.2.1
.ds Dp Apr 04 17:39
.ds Dm  Apr  5  200
.ds Xs 44393 12 normalpointer.gl
.TH GLNORMALPOINTER 3G
.SH NAME
.B "glNormalPointer
\- define an array of normals

.SH C SPECIFICATION
void \f3glNormalPointer\fP(
GLenum \fItype\fP,
.nf
.ta \w'\f3void \fPglNormalPointer( 'u
	GLsizei \fIstride\fP,
	const GLvoid \fI*pointer\fP )
.fi

.EQ
delim $$
.EN
.SH PARAMETERS
.TP \w'\fIpointer\fP\ \ 'u 
\f2type\fP
Specifies the data type of each coordinate in the array. 
Symbolic constants
\%\f3GL_BYTE\fP,
\%\f3GL_SHORT\fP,
\%\f3GL_INT\fP,
\%\f3GL_FLOAT\fP, and
\%\f3GL_DOUBLE\fP 
are accepted. The initial value is \%\f3GL_FLOAT\fP. 
.TP
\f2stride\fP
Specifies the byte offset between consecutive normals. If \f2stride\fP is 0\-
the initial value\-the normals are understood to be tightly packed in
the array.
The initial value is 0.
.TP
\f2pointer\fP
Specifies a pointer to the first coordinate of the first normal in the
array. 
The initial value is 0.
.SH DESCRIPTION
\%\f3glNormalPointer\fP specifies the location and data format of an array of normals
to use when rendering.
\f2type\fP specifies the data type of
the normal coordinates and \f2stride\fP gives the byte stride from one
normal to the next, allowing vertexes and attributes
to be packed into a single array or stored in separate arrays.
(Single-array storage may be more efficient on some implementations;
see \%\f3glInterleavedArrays\fP.)
When a normal array is specified, \f2type\fP, \f2stride\fP, and \f2pointer\fP are
saved as client-side state.
.P
To enable and disable the normal array, call \%\f3glEnableClientState\fP and 
\%\f3glDisableClientState\fP with the argument \%\f3GL_NORMAL_ARRAY\fP. If
enabled, the normal array is used 
when \%\f3glDrawArrays\fP, \%\f3glDrawElements\fP, or \%\f3glArrayElement\fP is called.
.P
Use \%\f3glDrawArrays\fP to construct a sequence of primitives (all of the
same type) from prespecified vertex and vertex attribute arrays.
Use \%\f3glArrayElement\fP to specify primitives
by indexing vertexes and vertex attributes and \%\f3glDrawElements\fP to
construct a sequence of primitives by indexing vertexes and vertex attributes.
.SH NOTES
\%\f3glNormalPointer\fP is available only if the GL version is 1.1 or greater.
.P
The normal array is initially disabled and isn't accessed when
\%\f3glArrayElement\fP, \%\f3glDrawElements\fP, or \%\f3glDrawArrays\fP is called.
.P
Execution of \%\f3glNormalPointer\fP is not allowed between 
\%\f3glBegin\fP and the corresponding \%\f3glEnd\fP,
but an error may or may not be generated. If an error is not generated,
the operation is undefined.
.P
\%\f3glNormalPointer\fP is typically implemented on the client side.
.P
Since the normal array parameters are client-side state, they are not
saved or restored by \%\f3glPushAttrib\fP and \%\f3glPopAttrib\fP.
Use \%\f3glPushClientAttrib\fP and
\%\f3glPopClientAttrib\fP instead.
.SH ERRORS
\%\f3GL_INVALID_ENUM\fP is generated if \f2type\fP is not an accepted value.
.P
\%\f3GL_INVALID_VALUE\fP is generated if \f2stride\fP is negative.
.SH ASSOCIATED GETS  
\%\f3glIsEnabled\fP with argument \%\f3GL_NORMAL_ARRAY\fP
.br
\%\f3glGet\fP with argument \%\f3GL_NORMAL_ARRAY_TYPE\fP
.br
\%\f3glGet\fP with argument \%\f3GL_NORMAL_ARRAY_STRIDE\fP
.br
\%\f3glGetPointerv\fP with argument \%\f3GL_NORMAL_ARRAY_POINTER\fP
.SH SEE ALSO 
\%\f3glArrayElement\fP,
\%\f3glColorPointer\fP,
\%\f3glDrawArrays\fP,
\%\f3glDrawElements\fP,
\%\f3glEdgeFlagPointer\fP,
\%\f3glEnable\fP,
\%\f3glGetPointerv\fP,
\%\f3glIndexPointer\fP,
\%\f3glInterleavedArrays\fP,
\%\f3glPopClientAttrib\fP,
\%\f3glPushClientAttrib\fP,
\%\f3glTexCoordPointer\fP,
\%\f3glVertexPointer\fP
@


1.1
log
@Initial revision
@
text
@d1 2
d6 17
a22 5
.ds Dp Feb 04 10:50
.ds Dm 5 Apr  5  20
.ds Xs 28886     6
_header(NormalPointer,define an array of normals)
_names(NormalPointer)
d27 2
a28 1
_phead(_param1)
d37 3
a39 2
_phead(_param2)
Specifies the byte offset between consecutive normals. If _param2 is 0\-
d43 2
a44 1
_phead(_param3)
d49 1
a49 1
_cmnd specifies the location and data  of an array of normals
d51 2
a52 2
_param1 specifies the data type of
the normal coordinates and _param2 gives the byte stride from one
d56 2
a57 2
see _cmnd(InterleavedArrays).)
When a normal array is specified, _param1, _param2, and _param3 are
d60 2
a61 2
To enable and disable the normal array, call _cmnd(EnableClientState) and 
_cmnd(DisableClientState) with the argument \%\f3GL_NORMAL_ARRAY\fP. If
d63 1
a63 1
when _cmnd(DrawArrays), _cmnd(DrawElements), or _cmnd(ArrayElement) is called.
d65 1
a65 1
Use _cmnd(DrawArrays) to construct a sequence of primitives (all of the
d67 2
a68 2
Use _cmnd(ArrayElement) to specify primitives
by indexing vertexes and vertex attributes and _cmnd(DrawElements) to
d71 1
a71 1
_cmnd is available only if the GL version is 1.1 or greater.
d74 1
a74 1
_cmnd(ArrayElement), _cmnd(DrawElements), or _cmnd(DrawArrays) is called.
d76 2
a77 2
Execution of _cmnd is not allowed between 
_cmnd(Begin) and the corresponding _cmnd(End),
d81 1
a81 1
_cmnd is typically implemented on the client side.
d84 3
a86 3
saved or restored by _cmnd(PushAttrib) and _cmnd(PopAttrib).
Use _cmnd(PushClientAttrib) and
_cmnd(PopClientAttrib) instead.
d88 1
a88 1
\%\f3GL_INVALID_ENUM\fP is generated if _param1 is not an accepted value.
d90 1
a90 1
\%\f3GL_INVALID_VALUE\fP is generated if _param2 is negative.
d92 1
a92 1
_cmnd(IsEnabled) with argument \%\f3GL_NORMAL_ARRAY\fP
d94 1
a94 1
_cmnd(Get) with argument \%\f3GL_NORMAL_ARRAY_TYPE\fP
d96 1
a96 1
_cmnd(Get) with argument \%\f3GL_NORMAL_ARRAY_STRIDE\fP
d98 1
a98 1
_cmnd(GetPointerv) with argument \%\f3GL_NORMAL_ARRAY_POINTER\fP
d100 13
a112 13
_cmnd(ArrayElement),
_cmnd(ColorPointer),
_cmnd(DrawArrays),
_cmnd(DrawElements),
_cmnd(EdgeFlagPointer),
_cmnd(Enable),
_cmnd(GetPointerv),
_cmnd(IndexPointer),
_cmnd(InterleavedArrays),
_cmnd(PopClientAttrib),
_cmnd(PushClientAttrib),
_cmnd(TexCoordPointer),
_cmnd(VertexPointer)
@


1.1.1.1
log
@win32-x11 source tree update March 26, 2001
@
text
@@
