head	1.2;
access;
symbols
	win32-x11-2001-03-26:1.1.1.1 SNAPSHOT:1.1.1;
locks; strict;
comment	@# @;
expand	@o@;


1.2
date	2001.06.03.20.47.14;	author ssiddiqi;	state Exp;
branches;
next	1.1;

1.1
date	2001.03.25.19.36.53;	author ssiddiqi;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2001.03.25.19.36.53;	author ssiddiqi;	state Exp;
branches;
next	;


desc
@@


1.2
log
@Win32-X11 update sources check in, June 3, 2001 - ssiddiqi
@
text
@'\"macro stdmacro
.ds Vn Version 1.2
.ds Dt 24 September 1999
.ds Re Release 1.2.1
.ds Dp Apr 04 17:39
.ds Dm  Apr  5  200
.ds Xs 27489 13 newlist.gl
.TH GLNEWLIST 3G
.SH NAME
.B "glNewList, glEndList
\- create or replace a display list

.SH C SPECIFICATION
void \f3glNewList\fP(
GLuint \fIlist\fP,
.nf
.ta \w'\f3void \fPglNewList( 'u
	GLenum \fImode\fP )
.fi

.SH PARAMETERS
.TP \w'\f2list\fP\ \ 'u 
\f2list\fP
Specifies the display-list name.
.TP
\f2mode\fP
Specifies the compilation mode,
which can be
\%\f3GL_COMPILE\fP or
\%\f3GL_COMPILE_AND_EXECUTE\fP.
.SH C SPECIFICATION
void \f3glEndList\fP( void )
.nf
.fi

.SH DESCRIPTION
Display lists are groups of GL commands that have been stored
for subsequent execution.
Display lists are created with \%\f3glNewList\fP.
All subsequent commands are placed in the display list,
in the order issued,
until \%\f3glEndList\fP is called. 
.P
\%\f3glNewList\fP has two arguments.
The first argument,
\f2list\fP,
is a positive integer that becomes the unique name for the display list.
Names can be created and reserved with \%\f3glGenLists\fP
and tested for uniqueness with \%\f3glIsList\fP.
The second argument,
\f2mode\fP,
is a symbolic constant that can assume one of two values: 
.TP 30
\%\f3GL_COMPILE\fP
Commands are merely compiled.
.TP 
\%\f3GL_COMPILE_AND_EXECUTE\fP
Commands are executed as they are compiled into the display list.
.P
Certain commands are not compiled into the display list
but are executed immediately,
regardless of the display-list mode.
These commands are
\%\f3glAreTexturesResident\fP,
\%\f3glColorPointer\fP,
\%\f3glDeleteLists\fP,
\%\f3glDeleteTextures\fP,
\%\f3glDisableClientState\fP,
\%\f3glEdgeFlagPointer\fP,
\%\f3glEnableClientState\fP,
\%\f3glFeedbackBuffer\fP,
\%\f3glFinish\fP,
\%\f3glFlush\fP,
\%\f3glGenLists\fP,
\%\f3glGenTextures\fP,
\%\f3glIndexPointer\fP,
\%\f3glInterleavedArrays\fP,
\%\f3glIsEnabled\fP,
\%\f3glIsList\fP,
\%\f3glIsTexture\fP,
\%\f3glNormalPointer\fP,
\%\f3glPopClientAttrib\fP,
\%\f3glPixelStore\fP,
\%\f3glPushClientAttrib\fP,
\%\f3glReadPixels\fP,
\%\f3glRenderMode\fP,
\%\f3glSelectBuffer\fP,
\%\f3glTexCoordPointer\fP,
\%\f3glVertexPointer\fP,
and all of the \%\f3glGet\fP commands.
.P
Similarly, 
\%\f3glTexImage1D\fP, \%\f3glTexImage2D\fP, and \%\f3glTexImage3D\fP
are executed immediately and not compiled into the display list when their
first argument is \%\f3GL_PROXY_TEXTURE_1D\fP, \%\f3GL_PROXY_TEXTURE_1D\fP, or
\%\f3GL_PROXY_TEXTURE_3D\fP, respectively.
.P
When the \%\f3GL_ARB_imaging\fP extension is supported,
\%\f3glHistogram\fP executes immediately when its argument is
\%\f3GL_PROXY_HISTOGRAM\fP.  Similarly, \%\f3glColorTable\fP executes
immediately when its first argument is \%\f3glPROXY_COLOR_TABLE\fP,
\%\f3glPROXY_POST_CONVOLUTION_COLOR_TABLE\fP, or
\%\f3glPROXY_POST_COLOR_MATRIX_COLOR_TABLE\fP.
.P
When the \%\f3GL_ARB_multitexture\fP extension is supported,
\%\f3glClientActiveTextureARB\fP is not compiled into display lists, but
executed immediately.
.P
When \%\f3glEndList\fP is encountered,
the display-list definition is completed by associating the list
with the unique name \f2list\fP
(specified in the \%\f3glNewList\fP command). 
If a display list with name \f2list\fP already exists,
it is replaced only when \%\f3glEndList\fP is called.
.SH NOTES
\%\f3glCallList\fP and \%\f3glCallLists\fP can be entered into display lists.
Commands in the display list or lists executed by \%\f3glCallList\fP
or \%\f3glCallLists\fP are not included in the display list being created,
even if the list creation mode is \%\f3GL_COMPILE_AND_EXECUTE\fP.
.P
A display list is just a group of commands and arguments, so errors
generated by commands in a display list must be generated when the list is
executed. If the list is created in \%\f3GL_COMPILE\fP mode, errors are
not generated until the list is executed.
.SH ERRORS
\%\f3GL_INVALID_VALUE\fP is generated if \f2list\fP is 0.
.P
\%\f3GL_INVALID_ENUM\fP is generated if \f2mode\fP is not an accepted value.
.P
\%\f3GL_INVALID_OPERATION\fP is generated if \%\f3glEndList\fP is called
without a preceding \%\f3glNewList\fP, 
or if \%\f3glNewList\fP is called while a display list is being defined.
.P
\%\f3GL_INVALID_OPERATION\fP is generated if \%\f3glNewList\fP or \%\f3glEndList\fP
is executed between the execution of \%\f3glBegin\fP
and the corresponding execution of \%\f3glEnd\fP.
.P
\%\f3GL_OUT_OF_MEMORY\fP is generated if there is insufficient memory to
compile the display list. If the GL version is 1.1 or greater, no
change is made to the previous contents of the display list, if any,
and no other change is made to the GL state. (It is as if no attempt
had been made to create the new display list.) 
.SH ASSOCIATED GETS
\%\f3glIsList\fP
.br
\%\f3glGet\fP with argument \%\f3GL_LIST_INDEX\fP
.br
\%\f3glGet\fP with argument \%\f3GL_LIST_MODE\fP
.SH SEE ALSO
\%\f3glCallList\fP,
\%\f3glCallLists\fP,
\%\f3glDeleteLists\fP, 
\%\f3glGenLists\fP
@


1.1
log
@Initial revision
@
text
@d1 1
d5 16
a20 5
.ds Dp Feb 04 10:50
.ds Dm 8 Apr  5  20
.ds Xs 55434     7
_header(NewList,create or replace a display list)
_names(NewList)
d22 2
a23 1
_phead(_param1)
d25 2
a26 1
_phead(_param2)
d31 5
a35 1
_names(EndList)
d39 1
a39 1
Display lists are created with _cmnd.
d42 1
a42 1
until _cmnd(EndList) is called. 
d44 1
a44 1
_cmnd has two arguments.
d46 1
a46 1
_param1(1),
d48 2
a49 2
Names can be created and reserved with _cmnd(GenLists)
and tested for uniqueness with _cmnd(IsList).
d51 1
a51 1
_param2(1),
d64 27
a90 27
_cmnd(AreTexturesResident),
_cmnd(ColorPointer),
_cmnd(DeleteLists),
_cmnd(DeleteTextures),
_cmnd(DisableClientState),
_cmnd(EdgeFlagPointer),
_cmnd(EnableClientState),
_cmnd(FeedbackBuffer),
_cmnd(Finish),
_cmnd(Flush),
_cmnd(GenLists),
_cmnd(GenTextures),
_cmnd(IndexPointer),
_cmnd(InterleavedArrays),
_cmnd(IsEnabled),
_cmnd(IsList),
_cmnd(IsTexture),
_cmnd(NormalPointer),
_cmnd(PopClientAttrib),
_cmnd(PixelStore),
_cmnd(PushClientAttrib),
_cmnd(ReadPixels),
_cmnd(RenderMode),
_cmnd(SelectBuffer),
_cmnd(TexCoordPointer),
_cmnd(VertexPointer),
and all of the _cmnd(Get) commands.
d93 1
a93 1
_cmnd(TexImage1D), _cmnd(TexImage2D), and _cmnd(TexImage3D)
d99 5
a103 5
_cmnd(Histogram) executes immediately when its argument is
\%\f3GL_PROXY_HISTOGRAM\fP.  Similarly, _cmnd(ColorTable) executes
immediately when its first argument is _cmnd(PROXY_COLOR_TABLE),
_cmnd(PROXY_POST_CONVOLUTION_COLOR_TABLE), or
_cmnd(PROXY_POST_COLOR_MATRIX_COLOR_TABLE).
d106 1
a106 1
_cmnd(ClientActiveTextureARB) is not compiled into display lists, but
d109 1
a109 1
When _cmnd(EndList) is encountered,
d111 4
a114 4
with the unique name _param1(1)
(specified in the _cmnd(NewList) command). 
If a display list with name _param1(1) already exists,
it is replaced only when _cmnd(EndList) is called.
d116 3
a118 3
_cmnd(CallList) and _cmnd(CallLists) can be entered into display lists.
Commands in the display list or lists executed by _cmnd(CallList)
or _cmnd(CallLists) are not included in the display list being created,
d126 1
a126 1
\%\f3GL_INVALID_VALUE\fP is generated if _param1(1) is 0.
d128 1
a128 1
\%\f3GL_INVALID_ENUM\fP is generated if _param2(1) is not an accepted value.
d130 3
a132 3
\%\f3GL_INVALID_OPERATION\fP is generated if _cmnd(EndList) is called
without a preceding _cmnd(NewList), 
or if _cmnd(NewList) is called while a display list is being defined.
d134 3
a136 3
\%\f3GL_INVALID_OPERATION\fP is generated if _cmnd(NewList) or _cmnd(EndList)
is executed between the execution of _cmnd(Begin)
and the corresponding execution of _cmnd(End).
d144 1
a144 1
_cmnd(IsList)
d146 1
a146 1
_cmnd(Get) with argument \%\f3GL_LIST_INDEX\fP
d148 1
a148 1
_cmnd(Get) with argument \%\f3GL_LIST_MODE\fP
d150 4
a153 4
_cmnd(CallList),
_cmnd(CallLists),
_cmnd(DeleteLists), 
_cmnd(GenLists)
@


1.1.1.1
log
@win32-x11 source tree update March 26, 2001
@
text
@@
