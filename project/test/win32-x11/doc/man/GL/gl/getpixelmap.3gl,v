head	1.2;
access;
symbols
	win32-x11-2001-03-26:1.1.1.1 SNAPSHOT:1.1.1;
locks; strict;
comment	@# @;
expand	@o@;


1.2
date	2001.06.03.20.47.13;	author ssiddiqi;	state Exp;
branches;
next	1.1;

1.1
date	2001.03.25.19.36.53;	author ssiddiqi;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2001.03.25.19.36.53;	author ssiddiqi;	state Exp;
branches;
next	;


desc
@@


1.2
log
@Win32-X11 update sources check in, June 3, 2001 - ssiddiqi
@
text
@'\"! tbl|eqn | mmdoc
'\"macro stdmacro
.ds Vn Version 1.2
.ds Dt 24 September 1999
.ds Re Release 1.2.1
.ds Dp Apr 04 17:39
.ds Dm  Apr  5  200
.ds Xs 10472 11 getpixelmap.gl
.TH GLGETPIXELMAP 3G
.SH NAME
.B "glGetPixelMapfv, glGetPixelMapuiv, glGetPixelMapusv
\- return the specified pixel map

.SH C SPECIFICATION
void \f3glGetPixelMapfv\fP(
GLenum \fImap\fP,
.nf
.ta \w'\f3void \fPglGetPixelMapfv( 'u
	GLfloat \fI*values\fP )
.fi
void \f3glGetPixelMapuiv\fP(
GLenum \fImap\fP,
.nf
.ta \w'\f3void \fPglGetPixelMapuiv( 'u
	GLuint \fI*values\fP )
.fi
void \f3glGetPixelMapusv\fP(
GLenum \fImap\fP,
.nf
.ta \w'\f3void \fPglGetPixelMapusv( 'u
	GLushort \fI*values\fP )
.fi

.SH PARAMETERS
.TP \w'\fIvalues\fP\ \ 'u 
\f2map\fP
Specifies the name of the pixel map to return.
Accepted values are
\%\f3GL_PIXEL_MAP_I_TO_I\fP,
\%\f3GL_PIXEL_MAP_S_TO_S\fP,
\%\f3GL_PIXEL_MAP_I_TO_R\fP,
\%\f3GL_PIXEL_MAP_I_TO_G\fP,
\%\f3GL_PIXEL_MAP_I_TO_B\fP,
\%\f3GL_PIXEL_MAP_I_TO_A\fP,
\%\f3GL_PIXEL_MAP_R_TO_R\fP,
\%\f3GL_PIXEL_MAP_G_TO_G\fP,
\%\f3GL_PIXEL_MAP_B_TO_B\fP, and
\%\f3GL_PIXEL_MAP_A_TO_A\fP.
.TP
\f2values\fP
Returns the pixel map contents.
.SH DESCRIPTION
See the \%\f3glPixelMap\fP reference page for a description of the acceptable
values for the \f2map\fP parameter.
\%\f3glGetPixelMap\fP returns in \f2values\fP the contents of the pixel map
specified in \f2map\fP.
Pixel maps are used during the execution of
\%\f3glReadPixels\fP,
\%\f3glDrawPixels\fP,
\%\f3glCopyPixels\fP,
\%\f3glTexImage1D\fP,
\%\f3glTexImage2D\fP,
\%\f3glTexImage3D\fP,
\%\f3glTexSubImage1D\fP,
\%\f3glTexSubImage2D\fP,
\%\f3glTexSubImage3D\fP,
\%\f3glCopyTexImage1D\fP,
\%\f3glCopyTexImage2D\fP,
\%\f3glCopyTexSubImage1D\fP,
\%\f3glCopyTexSubImage2D\fP,
\%\f3glCopyTexSubImage3D\fP,
\%\f3glColorTable\fP,
\%\f3glColorSubTable\fP,
\%\f3glCopyColorTable\fP,
\%\f3glCopyColorSubTable\fP,
\%\f3glConvolutionFilter1D\fP,
\%\f3glConvolutionFilter2D\fP,
\%\f3glSeparableFilter2D\fP,
\%\f3glGetHistogram\fP,
\%\f3glGetMinmax\fP, and
\%\f3glGetTexImage\fP
to map color indices,
stencil indices,
color components,
and depth components to other values.
.P
Unsigned integer values,
if requested,
are linearly mapped from the internal fixed or floating-point representation
such that 1.0 maps to the largest representable integer value,
and 0.0 maps to 0.
Return unsigned integer values are undefined if the map value was
not in the range [0,1].
.P
To determine the required size of \f2map\fP,
call \%\f3glGet\fP with the appropriate symbolic constant.
.SH NOTES
If an error is generated,
no change is made to the contents of \f2values\fP.
.SH ERRORS
\%\f3GL_INVALID_ENUM\fP is generated if \f2map\fP is not an accepted value.
.P
\%\f3GL_INVALID_OPERATION\fP is generated if \%\f3glGetPixelMap\fP
is executed between the execution of \%\f3glBegin\fP
and the corresponding execution of \%\f3glEnd\fP.
.SH ASSOCIATED GETS
.na
\%\f3glGet\fP with argument \%\f3GL_PIXEL_MAP_I_TO_I_SIZE\fP
.br
\%\f3glGet\fP with argument \%\f3GL_PIXEL_MAP_S_TO_S_SIZE\fP
.br
\%\f3glGet\fP with argument \%\f3GL_PIXEL_MAP_I_TO_R_SIZE\fP
.br
\%\f3glGet\fP with argument \%\f3GL_PIXEL_MAP_I_TO_G_SIZE\fP
.br
\%\f3glGet\fP with argument \%\f3GL_PIXEL_MAP_I_TO_B_SIZE\fP
.br
\%\f3glGet\fP with argument \%\f3GL_PIXEL_MAP_I_TO_A_SIZE\fP
.br
\%\f3glGet\fP with argument \%\f3GL_PIXEL_MAP_R_TO_R_SIZE\fP
.br
\%\f3glGet\fP with argument \%\f3GL_PIXEL_MAP_G_TO_G_SIZE\fP
.br
\%\f3glGet\fP with argument \%\f3GL_PIXEL_MAP_B_TO_B_SIZE\fP
.br
\%\f3glGet\fP with argument \%\f3GL_PIXEL_MAP_A_TO_A_SIZE\fP
.br
\%\f3glGet\fP with argument \%\f3GL_MAX_PIXEL_MAP_TABLE\fP
.SH SEE ALSO
\%\f3glColorSubTable\fP,
\%\f3glColorTable\fP,
\%\f3glConvolutionFilter1D\fP,
\%\f3glConvolutionFilter2D\fP,
\%\f3glCopyColorSubTable\fP,
\%\f3glCopyColorTable\fP,
\%\f3glCopyPixels\fP,
\%\f3glCopyTexImage1D\fP,
\%\f3glCopyTexImage2D\fP,
\%\f3glCopyTexSubImage1D\fP,
\%\f3glCopyTexSubImage2D\fP,
\%\f3glCopyTexSubImage3D\fP,
\%\f3glDrawPixels\fP,
\%\f3glGetHistogram\fP,
\%\f3glGetMinmax\fP,
\%\f3glGetTexImage\fP,
\%\f3glPixelMap\fP,
\%\f3glPixelTransfer\fP,
\%\f3glReadPixels\fP,
\%\f3glSeparableFilter2D\fP,
\%\f3glTexImage1D\fP,
\%\f3glTexImage1D\fP,
\%\f3glTexImage2D\fP
\%\f3glTexImage2D\fP,
\%\f3glTexImage3D\fP,
\%\f3glTexSubImage1D\fP,
\%\f3glTexSubImage2D\fP,
\%\f3glTexSubImage3D\fP
@


1.1
log
@Initial revision
@
text
@d1 2
d6 28
a33 5
.ds Dp Feb 04 10:50
.ds Dm 4 Apr  5  20
.ds Xs 23505     6
_header(GetPixelMap,return the specified pixel map)
_names(GetPixelMap,u*[ifs]v)
d35 2
a36 1
_phead(_param1)
d49 2
a50 1
_phead(_param2)
d53 4
a56 4
See the _cmnd(PixelMap) reference page for a description of the acceptable
values for the _param1 parameter.
_cmnd returns in _param2 the contents of the pixel map
specified in _param1.
d58 24
a81 24
_cmnd(ReadPixels),
_cmnd(DrawPixels),
_cmnd(CopyPixels),
_cmnd(TexImage1D),
_cmnd(TexImage2D),
_cmnd(TexImage3D),
_cmnd(TexSubImage1D),
_cmnd(TexSubImage2D),
_cmnd(TexSubImage3D),
_cmnd(CopyTexImage1D),
_cmnd(CopyTexImage2D),
_cmnd(CopyTexSubImage1D),
_cmnd(CopyTexSubImage2D),
_cmnd(CopyTexSubImage3D),
_cmnd(ColorTable),
_cmnd(ColorSubTable),
_cmnd(CopyColorTable),
_cmnd(CopyColorSubTable),
_cmnd(ConvolutionFilter1D),
_cmnd(ConvolutionFilter2D),
_cmnd(SeparableFilter2D),
_cmnd(GetHistogram),
_cmnd(GetMinmax), and
_cmnd(GetTexImage)
d95 2
a96 2
To determine the required size of _param1,
call _cmnd(Get) with the appropriate symbolic constant.
d99 1
a99 1
no change is made to the contents of _param2.
d101 1
a101 1
\%\f3GL_INVALID_ENUM\fP is generated if _param1 is not an accepted value.
d103 3
a105 3
\%\f3GL_INVALID_OPERATION\fP is generated if _cmnd
is executed between the execution of _cmnd(Begin)
and the corresponding execution of _cmnd(End).
d108 1
a108 1
_cmnd(Get) with argument \%\f3GL_PIXEL_MAP_I_TO_I_SIZE\fP
d110 1
a110 1
_cmnd(Get) with argument \%\f3GL_PIXEL_MAP_S_TO_S_SIZE\fP
d112 1
a112 1
_cmnd(Get) with argument \%\f3GL_PIXEL_MAP_I_TO_R_SIZE\fP
d114 1
a114 1
_cmnd(Get) with argument \%\f3GL_PIXEL_MAP_I_TO_G_SIZE\fP
d116 1
a116 1
_cmnd(Get) with argument \%\f3GL_PIXEL_MAP_I_TO_B_SIZE\fP
d118 1
a118 1
_cmnd(Get) with argument \%\f3GL_PIXEL_MAP_I_TO_A_SIZE\fP
d120 1
a120 1
_cmnd(Get) with argument \%\f3GL_PIXEL_MAP_R_TO_R_SIZE\fP
d122 1
a122 1
_cmnd(Get) with argument \%\f3GL_PIXEL_MAP_G_TO_G_SIZE\fP
d124 1
a124 1
_cmnd(Get) with argument \%\f3GL_PIXEL_MAP_B_TO_B_SIZE\fP
d126 1
a126 1
_cmnd(Get) with argument \%\f3GL_PIXEL_MAP_A_TO_A_SIZE\fP
d128 1
a128 1
_cmnd(Get) with argument \%\f3GL_MAX_PIXEL_MAP_TABLE\fP
d130 28
a157 28
_cmnd(ColorSubTable),
_cmnd(ColorTable),
_cmnd(ConvolutionFilter1D),
_cmnd(ConvolutionFilter2D),
_cmnd(CopyColorSubTable),
_cmnd(CopyColorTable),
_cmnd(CopyPixels),
_cmnd(CopyTexImage1D),
_cmnd(CopyTexImage2D),
_cmnd(CopyTexSubImage1D),
_cmnd(CopyTexSubImage2D),
_cmnd(CopyTexSubImage3D),
_cmnd(DrawPixels),
_cmnd(GetHistogram),
_cmnd(GetMinmax),
_cmnd(GetTexImage),
_cmnd(PixelMap),
_cmnd(PixelTransfer),
_cmnd(ReadPixels),
_cmnd(SeparableFilter2D),
_cmnd(TexImage1D),
_cmnd(TexImage1D),
_cmnd(TexImage2D)
_cmnd(TexImage2D),
_cmnd(TexImage3D),
_cmnd(TexSubImage1D),
_cmnd(TexSubImage2D),
_cmnd(TexSubImage3D)
@


1.1.1.1
log
@win32-x11 source tree update March 26, 2001
@
text
@@
