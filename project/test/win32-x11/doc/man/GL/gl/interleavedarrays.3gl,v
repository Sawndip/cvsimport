head	1.2;
access;
symbols
	win32-x11-2001-03-26:1.1.1.1 SNAPSHOT:1.1.1;
locks; strict;
comment	@# @;
expand	@o@;


1.2
date	2001.06.03.20.47.13;	author ssiddiqi;	state Exp;
branches;
next	1.1;

1.1
date	2001.03.25.19.36.53;	author ssiddiqi;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2001.03.25.19.36.53;	author ssiddiqi;	state Exp;
branches;
next	;


desc
@@


1.2
log
@Win32-X11 update sources check in, June 3, 2001 - ssiddiqi
@
text
@'\"! tbl|eqn | mmdoc
'\"macro stdmacro
.ds Vn Version 1.2
.ds Dt 24 September 1999
.ds Re Release 1.2.1
.ds Dp Apr 04 17:39
.ds Dm  Apr  5  200
.ds Xs 20103 11 interleavedarrays.gl
.TH GLINTERLEAVEDARRAYS 3G
.SH NAME
.B "glInterleavedArrays
\- simultaneously specify and enable several interleaved arrays

.SH C SPECIFICATION
void \f3glInterleavedArrays\fP(
GLenum \fIformat\fP,
.nf
.ta \w'\f3void \fPglInterleavedArrays( 'u
	GLsizei \fIstride\fP,
	const GLvoid \fI*pointer\fP )
.fi

.SH PARAMETERS
.TP \w'\fIpointer\fP\ \ 'u 
\f2format\fP
Specifies the type of array to enable. Symbolic constants
\%\f3GL_V2F\fP,
\%\f3GL_V3F\fP,
\%\f3GL_C4UB_V2F\fP,
\%\f3GL_C4UB_V3F\fP,
\%\f3GL_C3F_V3F\fP,
\%\f3GL_N3F_V3F\fP,
\%\f3GL_C4F_N3F_V3F\fP,
\%\f3GL_T2F_V3F\fP,
\%\f3GL_T4F_V4F\fP,
\%\f3GL_T2F_C4UB_V3F\fP,
\%\f3GL_T2F_C3F_V3F\fP,
\%\f3GL_T2F_N3F_V3F\fP,
\%\f3GL_T2F_C4F_N3F_V3F\fP,
and
\%\f3GL_T4F_C4F_N3F_V4F\fP
are accepted. 
.TP
\f2stride\fP 
Specifies the offset in bytes between each aggregate array element.
.SH DESCRIPTION
\%\f3glInterleavedArrays\fP lets you specify and enable individual color, 
normal, 
texture and vertex
arrays whose elements are part of a larger aggregate array element.
For some implementations, this is more efficient than specifying the arrays
separately. 
.P
If \f2stride\fP is 0, the aggregate elements are stored consecutively.
Otherwise, \f2stride\fP bytes occur between the beginning of one
aggregate array element and the beginning of the next aggregate array
element.
.P
\f2format\fP serves as a ``key''
describing the extraction of individual arrays from the aggregate array.
If \f2format\fP contains a T, then texture coordinates are 
extracted from the interleaved array.  If C is present, color values
are extracted. If N is present, normal coordinates are extracted.
Vertex coordinates are always extracted.
.P
The digits 2, 3, and 4 denote how many values are extracted.
F indicates that values are extracted as floating-point values.
Colors may also be extracted as 4 unsigned bytes if 4UB follows the
C.  If a color is extracted as 4 unsigned bytes, the vertex 
array element which follows is located at the first possible 
floating-point aligned address.
.SH NOTES
\%\f3glInterleavedArrays\fP is available only if the GL version is 1.1 or greater.
.P
If \%\f3glInterleavedArrays\fP is called while compiling a display list, it is not
compiled into the list, and it is executed immediately.
.P
Execution of \%\f3glInterleavedArrays\fP is not allowed between the execution of
\%\f3glBegin\fP and the corresponding execution of \%\f3glEnd\fP,
but an error may or may not be generated. If no error is generated,
the operation is undefined.
.P
\%\f3glInterleavedArrays\fP is typically implemented on the client side.
.P
Vertex array parameters are client-side state and are therefore not
saved or restored by \%\f3glPushAttrib\fP and \%\f3glPopAttrib\fP.
Use \%\f3glPushClientAttrib\fP and \%\f3glPopClientAttrib\fP instead.
.P
When the \%\f3GL_ARB_multitexture\fP extension is supported, \%\f3glInterleavedArrays\fP
only updates the texture coordinate array for the active active texture
unit. The texture coordinate state for other client texture units is not 
update, regardless if they are enabled or not.
.SH ERRORS
\%\f3GL_INVALID_ENUM\fP is generated if \f2format\fP is not an accepted value.
.P
\%\f3GL_INVALID_VALUE\fP is generated if \f2stride\fP is negative.
.SH SEE ALSO 
\%\f3glArrayElement\fP,
\%\f3glClientActiveTextureARB\fP,
\%\f3glColorPointer\fP,
\%\f3glDrawArrays\fP,
\%\f3glDrawElements\fP,
\%\f3glEdgeFlagPointer\fP,
\%\f3glEnableClientState\fP,
\%\f3glGetPointer\fP,
\%\f3glIndexPointer\fP,
\%\f3glNormalPointer\fP,
\%\f3glTexCoordPointer\fP,
\%\f3glVertexPointer\fP
@


1.1
log
@Initial revision
@
text
@d1 2
d6 17
a22 5
.ds Dp Feb 04 10:50
.ds Dm 6 Apr  5  20
.ds Xs 31502     6
_header(InterleavedArrays, simultaneously specify and enable several interleaved arrays)
_names(InterleavedArrays)
d24 2
a25 1
_phead(_param1)
d43 2
a44 1
_phead(_param2) 
d47 1
a47 1
_cmnd lets you specify and enable individual color, 
d54 2
a55 2
If _param2 is 0, the aggregate elements are stored consecutively.
Otherwise, _param2 bytes occur between the beginning of one
d59 1
a59 1
_param1 serves as a ``key''
d61 1
a61 1
If _param1 contains a T, then texture coordinates are 
d73 1
a73 1
_cmnd is available only if the GL version is 1.1 or greater.
d75 1
a75 1
If _cmnd is called while compiling a display list, it is not
d78 2
a79 2
Execution of _cmnd is not allowed between the execution of
_cmnd(Begin) and the corresponding execution of _cmnd(End),
d83 1
a83 1
_cmnd is typically implemented on the client side.
d86 2
a87 2
saved or restored by _cmnd(PushAttrib) and _cmnd(PopAttrib).
Use _cmnd(PushClientAttrib) and _cmnd(PopClientAttrib) instead.
d89 1
a89 1
When the \%\f3GL_ARB_multitexture\fP extension is supported, _cmnd
d94 1
a94 1
\%\f3GL_INVALID_ENUM\fP is generated if _param1 is not an accepted value.
d96 1
a96 1
\%\f3GL_INVALID_VALUE\fP is generated if _param2 is negative.
d98 12
a109 12
_cmnd(ArrayElement),
_cmnd(ClientActiveTextureARB),
_cmnd(ColorPointer),
_cmnd(DrawArrays),
_cmnd(DrawElements),
_cmnd(EdgeFlagPointer),
_cmnd(EnableClientState),
_cmnd(GetPointer),
_cmnd(IndexPointer),
_cmnd(NormalPointer),
_cmnd(TexCoordPointer),
_cmnd(VertexPointer)
@


1.1.1.1
log
@win32-x11 source tree update March 26, 2001
@
text
@@
