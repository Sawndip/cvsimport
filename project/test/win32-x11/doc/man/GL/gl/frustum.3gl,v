head	1.2;
access;
symbols
	win32-x11-2001-03-26:1.1.1.1 SNAPSHOT:1.1.1;
locks; strict;
comment	@# @;
expand	@o@;


1.2
date	2001.06.03.20.47.12;	author ssiddiqi;	state Exp;
branches;
next	1.1;

1.1
date	2001.03.25.19.36.53;	author ssiddiqi;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2001.03.25.19.36.53;	author ssiddiqi;	state Exp;
branches;
next	;


desc
@@


1.2
log
@Win32-X11 update sources check in, June 3, 2001 - ssiddiqi
@
text
@'\"! eqn | mmdoc
'\"macro stdmacro
.ds Vn Version 1.2
.ds Dt 24 September 1999
.ds Re Release 1.2.1
.ds Dp Apr 04 17:39
.ds Dm  Apr  5  200
.ds Xs 50395 11 frustum.gl
.TH GLFRUSTUM 3G
.SH NAME
.B "glFrustum
\- multiply the current matrix by a perspective matrix

.SH C SPECIFICATION
void \f3glFrustum\fP(
GLdouble \fIleft\fP,
.nf
.ta \w'\f3void \fPglFrustum( 'u
	GLdouble \fIright\fP,
	GLdouble \fIbottom\fP,
	GLdouble \fItop\fP,
	GLdouble \fIzNear\fP,
	GLdouble \fIzFar\fP )
.fi

.EQ
delim $$
.EN
.SH PARAMETERS
.TP \w'\f2left\fP\ \f2right\fP\ \ 'u 
\f2left\fP, \f2right\fP
Specify the coordinates for the left and right vertical clipping planes.
.TP
\f2bottom\fP, \f2top\fP
Specify the coordinates for the bottom and top horizontal clipping planes.
.TP
\f2zNear\fP, \f2zFar\fP
Specify the distances to the near and far depth clipping planes.
Both distances must be positive.
.SH DESCRIPTION
\%\f3glFrustum\fP describes a perspective matrix that produces a perspective projection.
The current matrix (see \%\f3glMatrixMode\fP) is multiplied by this matrix
and the result replaces the current matrix, as if
\%\f3glMultMatrix\fP were called with the following matrix
as its argument:
.P
.sp 5
.ce
.EQ
down 150
{left [ ~~~ { 
down 165 matrix {
   ccol { {{2 ~ "zNear"} over {"right" ~-~ "left"}} above 0 above 0 above 0 }
   ccol { 0 above {{2 ~ "zNear"} over {"top" ~-~ "bottom"}} ~ above 0 above 0 }
   ccol { A ~~~~ above B ~~~~ above C ~~~~ above -1 ~~~~}
   ccol { 0 above 0 above D above 0}
}}
~~~ right ]}
.EN
.sp
.ce
.EQ
down 130
{A ~=~ {"right" ~+~ "left"} over {"right" ~-~ "left"}}
.EN
.sp
.ce
.EQ
down 130
{B ~=~ {"top" ~+~ "bottom"} over {"top" ~-~ "bottom"}}
.EN
.sp
.ce
.EQ
down 130
{C ~=~ -{{"zFar" ~+~ "zNear"} over {"zFar" ~-~ "zNear"}}}
.EN
.sp
.ce
.EQ
down 130
{D ~=~ -^{{2 ~ "zFar" ~ "zNear"} over {"zFar" ~-~ "zNear"}}}
.EN
.sp 2
.P
Typically, the matrix mode is \%\f3GL_PROJECTION\fP, and
(\f2left\fP, \f2bottom\fP, \-\f2zNear\fP) and (\f2right\fP, \f2top\fP,  \-\f2zNear\fP)
specify the points on the near clipping plane that are mapped
to the lower left and upper right corners of the window,
assuming that the eye is located at (0, 0, 0).
\-\f2zFar\fP specifies the location of the far clipping plane.
Both \f2zNear\fP and \f2zFar\fP must be positive.
.P
Use \%\f3glPushMatrix\fP and \%\f3glPopMatrix\fP to save and restore
the current matrix stack.
.SH NOTES
Depth buffer precision is affected by the values specified for
\f2zNear\fP and \f2zFar\fP.
The greater the ratio of \f2zFar\fP to \f2zNear\fP is,
the less effective the depth buffer will be at distinguishing between
surfaces that are near each other.
If 
.sp
.ce
$r ~=~ "zFar" over "zNear"$
.sp
roughly $log sub 2 (r)$ bits of depth buffer precision are lost.
Because $r$ approaches infinity as \f2zNear\fP approaches 0,
\f2zNear\fP must never be set to 0.
.SH ERRORS
\%\f3GL_INVALID_VALUE\fP is generated if \f2zNear\fP or \f2zFar\fP is not
positive, or if \f2left\fP = \f2right\fP, or \f2bottom\fP = \f2top\fP.
.P
\%\f3GL_INVALID_OPERATION\fP is generated if \%\f3glFrustum\fP
is executed between the execution of \%\f3glBegin\fP
and the corresponding execution of \%\f3glEnd\fP.
.SH ASSOCIATED GETS
\%\f3glGet\fP with argument \%\f3GL_MATRIX_MODE\fP
.br
\%\f3glGet\fP with argument \%\f3GL_MODELVIEW_MATRIX\fP
.br
\%\f3glGet\fP with argument \%\f3GL_PROJECTION_MATRIX\fP
.br
\%\f3glGet\fP with argument \%\f3GL_TEXTURE_MATRIX\fP
.br
\%\f3glGet\fP with argument \%\f3GL_COLOR_MATRIX\fP
.SH SEE ALSO
\%\f3glOrtho\fP,
\%\f3glMatrixMode\fP,
\%\f3glMultMatrix\fP, 
\%\f3glPushMatrix\fP,
\%\f3glViewport\fP
@


1.1
log
@Initial revision
@
text
@d1 2
d6 20
a25 5
.ds Dp Feb 04 10:50
.ds Dm 3 Apr  5  20
.ds Xs 13962     6
_header(Frustum,multiply the current matrix by a perspective matrix)
_names(Frustum)
d30 2
a31 1
_phead(_param1 _param2)
d33 2
a34 1
_phead(_param3 _param4)
d36 2
a37 1
_phead(_param5 _param6)
d41 2
a42 2
_cmnd describes a perspective matrix that produces a perspective projection.
The current matrix (see _cmnd(MatrixMode)) is multiplied by this matrix
d44 1
a44 1
_cmnd(MultMatrix) were called with the following matrix
d53 2
a54 2
   ccol { {{2 ~ _eqnparam5} over {_eqnparam2 ~-~ _eqnparam1}} above 0 above 0 above 0 }
   ccol { 0 above {{2 ~ _eqnparam5} over {_eqnparam4 ~-~ _eqnparam3}} ~ above 0 above 0 }
d64 1
a64 1
{A ~=~ {_eqnparam2 ~+~ _eqnparam1} over {_eqnparam2 ~-~ _eqnparam1}}
d70 1
a70 1
{B ~=~ {_eqnparam4 ~+~ _eqnparam3} over {_eqnparam4 ~-~ _eqnparam3}}
d76 1
a76 1
{C ~=~ -{{_eqnparam6 ~+~ _eqnparam5} over {_eqnparam6 ~-~ _eqnparam5}}}
d82 1
a82 1
{D ~=~ -^{{2 ~ _eqnparam6 ~ _eqnparam5} over {_eqnparam6 ~-~ _eqnparam5}}}
d87 1
a87 1
(_param1, _param3, \-_param5) and (_param2, _param4,  \-_param5)
d91 2
a92 2
\-_param6 specifies the location of the far clipping plane.
Both _param5 and _param6 must be positive.
d94 1
a94 1
Use _cmnd(PushMatrix) and _cmnd(PopMatrix) to save and restore
d98 2
a99 2
_param5 and _param6.
The greater the ratio of _param6 to _param5 is,
d105 1
a105 1
$r ~=~ _eqnparam6 over _eqnparam5$
d108 2
a109 2
Because $r$ approaches infinity as _param5 approaches 0,
_param5 must never be set to 0.
d111 2
a112 2
\%\f3GL_INVALID_VALUE\fP is generated if _param5 or _param6 is not
positive, or if _param1 = _param2, or _param3 = _param4.
d114 3
a116 3
\%\f3GL_INVALID_OPERATION\fP is generated if _cmnd
is executed between the execution of _cmnd(Begin)
and the corresponding execution of _cmnd(End).
d118 1
a118 1
_cmnd(Get) with argument \%\f3GL_MATRIX_MODE\fP
d120 1
a120 1
_cmnd(Get) with argument \%\f3GL_MODELVIEW_MATRIX\fP
d122 1
a122 1
_cmnd(Get) with argument \%\f3GL_PROJECTION_MATRIX\fP
d124 1
a124 1
_cmnd(Get) with argument \%\f3GL_TEXTURE_MATRIX\fP
d126 1
a126 1
_cmnd(Get) with argument \%\f3GL_COLOR_MATRIX\fP
d128 5
a132 5
_cmnd(Ortho),
_cmnd(MatrixMode),
_cmnd(MultMatrix), 
_cmnd(PushMatrix),
_cmnd(Viewport)
@


1.1.1.1
log
@win32-x11 source tree update March 26, 2001
@
text
@@
