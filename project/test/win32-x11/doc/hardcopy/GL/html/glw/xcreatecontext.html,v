head	1.2;
access;
symbols
	win32-x11-2001-03-26:1.1.1.1 SNAPSHOT:1.1.1;
locks; strict;
comment	@# @;
expand	@o@;


1.2
date	2001.06.03.20.47.11;	author ssiddiqi;	state Exp;
branches;
next	1.1;

1.1
date	2001.03.25.19.36.50;	author ssiddiqi;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2001.03.25.19.36.50;	author ssiddiqi;	state Exp;
branches;
next	;


desc
@@


1.2
log
@Win32-X11 update sources check in, June 3, 2001 - ssiddiqi
@
text
@<HTML>
<BODY>
<PRE>
<!-- Manpage converted by man2html 3.0.1 -->
</PRE>
<HR>
<ADDRESS>
Man(1) output converted with
<a href="http://www.oac.uci.edu/indiv/ehood/man2html.html">man2html</a>
</ADDRESS>
</BODY>
</HTML>
@


1.1
log
@Initial revision
@
text
@a4 116
       <B>glXCreateContext</B> - create a new GLX rendering context



</PRE>
<H2>C SPECIFICATION</H2><PRE>
       GLXContext <B>glXCreateContext</B>( Display <I>*dpy</I>,
                                    XVisualInfo <I>*vis</I>,
                                    GLXContext <I>shareList</I>,
                                    Bool <I>direct</I> )



</PRE>
<H2>PARAMETERS</H2><PRE>
       <I>dpy</I>        Specifies the connection to the X server.

       <I>vis</I>        Specifies  the  visual  that  defines the frame
                  buffer resources  available  to  the  rendering
                  context.   It  is  a  pointer to an <B>XVisualInfo</B>
                  structure, not a visual ID or a  pointer  to  a
                  <B>Visual</B>.

       <I>shareList</I>  Specifies  the context with which to share dis­
                  play lists.  <B>NULL</B> indicates that no sharing  is
                  to take place.

       <I>direct</I>     Specifies  whether rendering is to be done with
                  a direct connection to the graphics  system  if
                  possible  (<B>True</B>)  or  through  the  X server (­
                  <B>False</B>).


</PRE>
<H2>DESCRIPTION</H2><PRE>
       <B>glXCreateContext</B>  creates  a  GLX  rendering  context  and
       returns  its  handle.   This context can be used to render
       into both windows and GLX  pixmaps.   If  <B>glXCreateContext</B>
       fails to create a rendering context, <B>NULL</B> is returned.

       If <I>direct</I> is <B>True</B>, then a direct rendering context is cre­
       ated if the implementation supports direct  rendering,  if
       the  connection  is to an X server that is local, and if a
       direct rendering context is available. (An  implementation
       may  return  an indirect context when <I>direct</I> is <B>True</B>).  If
       <I>direct</I> is <B>False</B>, then a  rendering  context  that  renders
       through  the X server is always created.  Direct rendering
       provides a performance advantage in some  implementations.
       However,  direct  rendering contexts cannot be shared out­
       side a single process, and they may be unable to render to
       GLX pixmaps.

       If  <I>shareList</I>  is  not <B>NULL</B>, then all display-list indexes
       and definitions are shared by context <I>shareList</I> and by the
       newly  created  context.   An arbitrary number of contexts
       can share a single display-list space.  However, all  ren­
       dering  contexts  that  share  a single display-list space
       must themselves exist in the same address space.  Two ren­
       owned  by  a  single  process.  Note that in the nondirect
       case, it is not necessary for the calling threads to share
       an  address  space,  only for their related rendering con­
       texts to share an address space.

       If the GL version is 1.1  or  greater,  then  all  texture
       objects  except  object 0, are shared by any contexts that
       share display lists.


</PRE>
<H2>NOTES</H2><PRE>
       <B>XVisualInfo</B> is defined in <I>Xutil.h.</I>  It is a structure that
       includes <I>visual</I>, <I>visualID</I>, <I>screen</I>, and <I>depth</I> elements.

       A  <I>process</I>  is a single execution environment, implemented
       in a single address  space,  consisting  of  one  or  more
       threads.

       A <I>thread</I> is one of a set of subprocesses that share a sin­
       gle address space, but maintain separate program counters,
       stack  spaces,  and  other  related global data.  A <I>thread</I>
       that is the only member of its subprocess group is equiva­
       lent to a <I>process</I>.

       It  may  not  be possible to render to a GLX pixmap with a
       direct rendering context.


</PRE>
<H2>ERRORS</H2><PRE>
       <B>NULL</B> is returned if execution fails on the client side.

       <B>BadMatch</B> is generated if the context to be  created  would
       not  share  the address space or the screen of the context
       specified by <I>shareList</I>.

       <B>BadValue</B> is generated if <I>vis</I> is not a  valid  visual  (for
       example,  if a particular GLX implementation does not sup­
       port it).

       <B>GLXBadContext</B> is generated if <I>shareList</I> is not a GLX  con­
       text and is not <B>NULL</B>.

       <B>BadAlloc</B>  is  generated if the server does not have enough
       resources to allocate the new context.


</PRE>
<H2>SEE ALSO</H2><PRE>
       <B>glXDestroyContext</B>,       <B>glXGetConfig</B>,        <B>glXIsDirect</B>,
       <B>glXMakeCurrent</B>






@


1.1.1.1
log
@win32-x11 source tree update March 26, 2001
@
text
@@
