head	1.2;
access;
symbols
	win32-x11-2001-03-26:1.1.1.1 SNAPSHOT:1.1.1;
locks; strict;
comment	@# @;
expand	@o@;


1.2
date	2001.06.03.20.47.09;	author ssiddiqi;	state Exp;
branches;
next	1.1;

1.1
date	2001.03.25.19.36.51;	author ssiddiqi;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2001.03.25.19.36.51;	author ssiddiqi;	state Exp;
branches;
next	;


desc
@@


1.2
log
@Win32-X11 update sources check in, June 3, 2001 - ssiddiqi
@
text
@<HTML>
<BODY>
<PRE>
<!-- Manpage converted by man2html 3.0.1 -->
</PRE>
<HR>
<ADDRESS>
Man(1) output converted with
<a href="http://www.oac.uci.edu/indiv/ehood/man2html.html">man2html</a>
</ADDRESS>
</BODY>
</HTML>
@


1.1
log
@Initial revision
@
text
@a4 66
OR'ing several of these constants  together.   The  special  mask

</PRE>
<H2>GL_CLIENT_ALL_ATTRIB_BITS  can  be  used  to  save  all stackable</H2><PRE>
client state.  The symbolic mask constants and  their  associated
GL client state are as follows (the second column lists which at­

</PRE>
<H2>tributes are saved): GL_CLIENT_PIXEL_STORE_BIT     Pixel  storage</H2><PRE>
modes

</PRE>
<H2>GL_CLIENT_VERTEX_ARRAY_BIT    Vertex  arrays  (and  enables) _cm­</H2><PRE>
nd(PopClientAttrib) restores the values of the client-state vari­
ables  saved  with  the  last _cmnd(PushClientAttrib).  Those not
saved are left unchanged.  It is an error to push attributes onto
a  full client attribute stack, or to pop attributes off an empty
stack.  In either case, the error  flag  is  set,  and  no  other
change  is  made  to  GL  state.  Initially, the client attribute
stack is empty.  _cmnd is available only if the GL version is 1.1
or  greater.   Not all values for GL client state can be saved on
the attribute stack.  For example, select and feedback state can­
not  be  saved.   The depth of the attribute stack depends on the
implementation, but it must be at least  16.   Use  _cmnd(PushAt­
trib)  and  _cmnd(PopAttrib)  to  push and restore state which is
kept on the server. Only pixel storage  modes  and  vertex  array
state  may  be pushed and popped with _cmnd(PushClientAttrib) and
_cmnd(PopClientAttrib).  When the _arbstring(multitexture) exten­
sion  is supported, pushing and popping client vertex array state
apples to all supported texture units, and the active client tex­

</PRE>
<H2>ture  state.   GL_STACK_OVERFLOW is generated if _cmnd(PushClien­</H2><PRE>
tAttrib)  is  called  while  the   attribute   stack   is   full.

</PRE>
<H2>GL_STACK_UNDERFLOW  is  generated  if  _cmnd(PopClientAttrib)  is</H2><PRE>
called while the attribute stack is empty.  _cmnd(Get) with argu­

</PRE>
<H2>ment GL_ATTRIB_STACK_DEPTH</H2><PRE>

</PRE>
<H2>_cmnd(Get)  with  argument  GL_MAX_CLIENT_ATTRIB_STACK_DEPTH _cm­</H2><PRE>
nd(ColorPointer), _cmnd(DisableClientState), _cmnd(EdgeFlagPoint­
er),  _cmnd(EnableClientState), _cmnd(Get), _cmnd(GetError), _cm­
nd(IndexPointer),  _cmnd(NormalPointer),   _cmnd(NewList),   _cm­
nd(PixelStore),  _cmnd(PushAttrib),  _cmnd(TexCoordPointer), _cm­
nd(VertexPointer)

















@


1.1.1.1
log
@win32-x11 source tree update March 26, 2001
@
text
@@
