head	1.2;
access;
symbols
	win32-x11-2001-03-26:1.1.1.1 SNAPSHOT:1.1.1;
locks; strict;
comment	@# @;
expand	@o@;


1.2
date	2001.06.03.20.47.08;	author ssiddiqi;	state Exp;
branches;
next	1.1;

1.1
date	2001.03.25.19.36.51;	author ssiddiqi;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2001.03.25.19.36.51;	author ssiddiqi;	state Exp;
branches;
next	;


desc
@@


1.2
log
@Win32-X11 update sources check in, June 3, 2001 - ssiddiqi
@
text
@<HTML>
<BODY>
<PRE>
<!-- Manpage converted by man2html 3.0.1 -->
</PRE>
<HR>
<ADDRESS>
Man(1) output converted with
<a href="http://www.oac.uci.edu/indiv/ehood/man2html.html">man2html</a>
</ADDRESS>
</BODY>
</HTML>
@


1.1
log
@Initial revision
@
text
@a4 242

------------------------------------------------------------------------------------

</PRE>
<H2>Constant                           See</H2><PRE>
------------------------------------------------------------------------------------

</PRE>
<H2>GL_ALPHA_TEST                      _cmnd(AlphaFunc)</H2><PRE>

</PRE>
<H2>GL_AUTO_NORMAL                     _cmnd(EvalCoord)</H2><PRE>

</PRE>
<H2>GL_BLEND                           _cmnd(BlendFunc), _cmnd(LogicOp)</H2><PRE>

</PRE>
<H2>GL_CLIP_PLANEi                     _cmnd(ClipPlane)</H2><PRE>

</PRE>
<H2>GL_COLOR_ARRAY                     _cmnd(ColorPointer)</H2><PRE>

</PRE>
<H2>GL_COLOR_LOGIC_OP                  _cmnd(LogicOp)</H2><PRE>

</PRE>
<H2>GL_COLOR_MATERIAL                  _cmnd(ColorMaterial)</H2><PRE>

</PRE>
<H2>GL_COLOR_TABLE                     _cmnd(ColorTable)</H2><PRE>

</PRE>
<H2>GL_CONVOLUTION_1D                  _cmnd(ConvolutionFilter1D)</H2><PRE>

</PRE>
<H2>GL_CONVOLUTION_2D                  _cmnd(ConvolutionFilter2D)</H2><PRE>

</PRE>
<H2>GL_CULL_FACE                       _cmnd(CullFace)</H2><PRE>

</PRE>
<H2>GL_DEPTH_TEST                      _cmnd(DepthFunc), _cmnd(DepthRange)</H2><PRE>

</PRE>
<H2>GL_DITHER                          _cmnd(Enable)</H2><PRE>

</PRE>
<H2>GL_EDGE_FLAG_ARRAY                 _cmnd(EdgeFlagPointer)</H2><PRE>

</PRE>
<H2>GL_FOG                             _cmnd(Fog)</H2><PRE>

</PRE>
<H2>GL_HISTOGRAM                       _cmnd(Histogram)</H2><PRE>

</PRE>
<H2>GL_INDEX_ARRAY                     _cmnd(IndexPointer)</H2><PRE>

</PRE>
<H2>GL_INDEX_LOGIC_OP                  _cmnd(LogicOp)</H2><PRE>

</PRE>
<H2>GL_LIGHTi                          _cmnd(LightModel), _cmnd(Light)</H2><PRE>

</PRE>
<H2>GL_LIGHTING                        _cmnd(Material), _cmnd(LightModel), _cmnd(Light)</H2><PRE>

</PRE>
<H2>GL_LINE_SMOOTH                     _cmnd(LineWidth)</H2><PRE>

</PRE>
<H2>GL_LINE_STIPPLE                    _cmnd(LineStipple)</H2><PRE>

</PRE>
<H2>GL_MAP1_COLOR_4                    _cmnd(Map1)</H2><PRE>

</PRE>
<H2>GL_MAP1_INDEX                      _cmnd(Map1)</H2><PRE>

</PRE>
<H2>GL_MAP1_NORMAL                     _cmnd(Map1)</H2><PRE>

</PRE>
<H2>GL_MAP1_TEXTURE_COORD_1            _cmnd(Map1)</H2><PRE>

</PRE>
<H2>GL_MAP1_TEXTURE_COORD_2            _cmnd(Map1)</H2><PRE>

</PRE>
<H2>GL_MAP1_TEXTURE_COORD_3            _cmnd(Map1)</H2><PRE>

</PRE>
<H2>GL_MAP1_TEXTURE_COORD_4            _cmnd(Map1)</H2><PRE>

</PRE>
<H2>GL_MAP2_COLOR_4                    _cmnd(Map2)</H2><PRE>

</PRE>
<H2>GL_MAP2_INDEX                      _cmnd(Map2)</H2><PRE>

</PRE>
<H2>GL_MAP2_NORMAL                     _cmnd(Map2)</H2><PRE>

</PRE>
<H2>GL_MAP2_TEXTURE_COORD_1            _cmnd(Map2)</H2><PRE>

</PRE>
<H2>GL_MAP2_TEXTURE_COORD_2            _cmnd(Map2)</H2><PRE>

</PRE>
<H2>GL_MAP2_TEXTURE_COORD_3            _cmnd(Map2)</H2><PRE>

</PRE>
<H2>GL_MAP2_TEXTURE_COORD_4            _cmnd(Map2)</H2><PRE>

</PRE>
<H2>GL_MAP2_VERTEX_3                   _cmnd(Map2)</H2><PRE>

</PRE>
<H2>GL_MAP2_VERTEX_4                   _cmnd(Map2)</H2><PRE>

</PRE>
<H2>GL_MINMAX                          _cmnd(Minmax)</H2><PRE>

</PRE>
<H2>GL_NORMAL_ARRAY                    _cmnd(NormalPointer)</H2><PRE>

</PRE>
<H2>GL_NORMALIZE                       _cmnd(Normal)</H2><PRE>

</PRE>
<H2>GL_POINT_SMOOTH                    _cmnd(PointSize)</H2><PRE>

</PRE>
<H2>GL_POLYGON_SMOOTH                  _cmnd(PolygonMode)</H2><PRE>

</PRE>
<H2>GL_POLYGON_OFFSET_FILL             _cmnd(PolygonOffset)</H2><PRE>

</PRE>
<H2>GL_POLYGON_OFFSET_LINE             _cmnd(PolygonOffset)</H2><PRE>

</PRE>
<H2>GL_POLYGON_OFFSET_POINT            _cmnd(PolygonOffset)</H2><PRE>

</PRE>
<H2>GL_POLYGON_STIPPLE                 _cmnd(PolygonStipple)</H2><PRE>

</PRE>
<H2>GL_POST_COLOR_MATRIX_COLOR_TABLE   _cmnd(ColorTable)</H2><PRE>

</PRE>
<H2>GL_VERTEX_ARRAY                    _cmnd(VertexPointer)</H2><PRE>
------------------------------------------------------------------------------------


</PRE>
<H2>If  an  error  is generated, _cmnd returns 0.  GL_COLOR_LOGIC_OP,</H2><PRE>

</PRE>
<H2>GL_COLOR_ARRAY, GL_EDGE_FLAG_ARRAY, GL_INDEX_ARRAY, GL_INDEX_LOG­</H2><PRE>

</PRE>
<H2>IC_OP,  GL_NORMAL_ARRAY,  GL_POLYGON_OFFSET_FILL, GL_POLYGON_OFF­</H2><PRE>

</PRE>
<H2>SET_LINE,  GL_POLYGON_OFFSET_POINT,  GL_TEXTURE_COORD_ARRAY,  and</H2><PRE>

</PRE>
<H2>GL_VERTEX_ARRAY  are  available  only if the GL version is 1.1 or</H2><PRE>

</PRE>
<H2>greater GL_RESCALE_NORMAL, and GL_TEXTURE_3D are  available  only</H2><PRE>

</PRE>
<H2>if the GL version is 1.2 or greater.  GL_COLOR_TABLE, GL_CONVOLU­</H2><PRE>

</PRE>
<H2>TION_1D, GL_CONVOLUTION_2D, GL_HISTOGRAM, GL_MINMAX, GL_POST_COL­</H2><PRE>

</PRE>
<H2>OR_MATRIX_COLOR_TABLE,    GL_POST_CONVOLUTION_COLOR_TABLE,    and</H2><PRE>

</PRE>
<H2>GL_SEPARABLE_2D are available only if _arbstring(imaging) is  re­</H2><PRE>

</PRE>
<H2>turned  when  _cmnd(Get)  is called with GL_EXTENSIONS.  When the</H2><PRE>
_arbstring(multitexture) extension is  supported,  the  following
parameters  return  the  associated  value for the active texture

</PRE>
<H2>unit.    GL_TEXTURE_1D,   GL_TEXTURE_BINDING_1D,   GL_TEXTURE_2D,</H2><PRE>

</PRE>
<H2>GL_TEXTURE_BINDING_2D,    GL_TEXTURE_3D,   GL_TEXTURE_BINDING_3D,</H2><PRE>

</PRE>
<H2>GL_TEXTURE_GEN_S,  GL_TEXTURE_GEN_T,  GL_TEXTURE_GEN_R,   GL_TEX­</H2><PRE>

</PRE>
<H2>TURE_GEN_Q, GL_TEXTURE_MATRIX, and GL_TEXTURE_STACK_DEPTH.  Like­</H2><PRE>
wise, the following parameters return the  associated  value  for

</PRE>
<H2>the  active  client texture unit: GL_TEXTURE_COORD_ARRAY, GL_TEX­</H2><PRE>

</PRE>
<H2>TURE_COORD_ARRAY_SIZE,   GL_TEXTURE_COORD_ARRAY_STRIDE,   GL_TEX­</H2><PRE>

</PRE>
<H2>TURE_COORD_ARRAY_TYPE.   GL_INVALID_ENUM  is generated if _param1</H2><PRE>

</PRE>
<H2>is not an accepted value.  GL_INVALID_OPERATION is  generated  if</H2><PRE>
_cmnd  is  executed between the execution of _cmnd(Begin) and the
corresponding execution of _cmnd(End).  _cmnd(Enable),  _cmnd(En­
ableClientState), _cmnd(Get)
























@


1.1.1.1
log
@win32-x11 source tree update March 26, 2001
@
text
@@
