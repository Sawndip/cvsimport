head	1.2;
access;
symbols
	win32-x11-2001-03-26:1.1.1.1 SNAPSHOT:1.1.1;
locks; strict;
comment	@# @;
expand	@o@;


1.2
date	2001.06.03.20.47.08;	author ssiddiqi;	state Exp;
branches;
next	1.1;

1.1
date	2001.03.25.19.36.51;	author ssiddiqi;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2001.03.25.19.36.51;	author ssiddiqi;	state Exp;
branches;
next	;


desc
@@


1.2
log
@Win32-X11 update sources check in, June 3, 2001 - ssiddiqi
@
text
@<HTML>
<BODY>
<PRE>
<!-- Manpage converted by man2html 3.0.1 -->
</PRE>
<HR>
<ADDRESS>
Man(1) output converted with
<a href="http://www.oac.uci.edu/indiv/ehood/man2html.html">man2html</a>
</ADDRESS>
</BODY>
</HTML>
@


1.1
log
@Initial revision
@
text
@a4 66
line will be drawn when the line is rasterized.  Bit zero is used
first;  the default pattern is all 1's.  Line stippling masks out
certain fragments produced by rasterization; those fragments will
not be drawn.  The masking is achieved by using three parameters:
the  16-bit  line  stipple  pattern  _param2,  the  repeat  count
_param1,  and an integer stipple counter $s$.  Counter $s$ is re­
set to 0 whenever _cmnd(Begin) is called, and  before  each  line

</PRE>
<H2>segment of a _cmnd(Begin)(GL_LINES)/_cmnd(End) sequence is gener­</H2><PRE>
ated.  It is incremented after each  fragment  of  a  unit  width
aliased line segment is generated, or after each $i$ fragments of
an $i$ width line segment are generated.  The $i$ fragments asso­
ciated with count $s$ are masked out if

         _param2 bit $(s ~/~ _eqnparam1) ~roman mod~ 16$

is  0,  otherwise  these  fragments are sent to the frame buffer.
Bit zero of _param2 is the least  significant  bit.   Antialiased
lines are treated as a sequence of $1 times width$ rectangles for
purposes of stippling.  Whether rectagle $s$ is rasterized or not
depends  on the fragment rule described for aliased lines, count­
ing rectangles rather than groups of fragments.   To  enable  and
disable  line  stippling,  call  _cmnd(Enable) and _cmnd(Disable)

</PRE>
<H2>with argument GL_LINE_STIPPLE.  When enabled,  the  line  stipple</H2><PRE>
pattern  is  applied as described above.  When disabled, it is as
if the pattern were all 1's.  Initially, line stippling  is  dis­

</PRE>
<H2>abled.   GL_INVALID_OPERATION  is  generated if _cmnd is executed</H2><PRE>
between the execution of _cmnd(Begin) and the corresponding  exe­

</PRE>
<H2>cution  of  _cmnd(End).   _cmnd(Get)  with argument GL_LINE_STIP­</H2><PRE>

</PRE>
<H2>PLE_PATTERN</H2><PRE>

</PRE>
<H2>_cmnd(Get) with argument GL_LINE_STIPPLE_REPEAT</H2><PRE>

</PRE>
<H2>_cmnd(IsEnabled) with argument GL_LINE_STIPPLE  _cmnd(LineWidth),</H2><PRE>
_cmnd(PolygonStipple)




















@


1.1.1.1
log
@win32-x11 source tree update March 26, 2001
@
text
@@
