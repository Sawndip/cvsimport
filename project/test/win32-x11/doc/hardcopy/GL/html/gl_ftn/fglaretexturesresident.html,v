head	1.2;
access;
symbols
	win32-x11-2001-03-26:1.1.1.1 SNAPSHOT:1.1.1;
locks; strict;
comment	@# @;
expand	@o@;


1.2
date	2001.06.03.20.47.07;	author ssiddiqi;	state Exp;
branches;
next	1.1;

1.1
date	2001.03.25.19.36.50;	author ssiddiqi;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2001.03.25.19.36.50;	author ssiddiqi;	state Exp;
branches;
next	;


desc
@@


1.2
log
@Win32-X11 update sources check in, June 3, 2001 - ssiddiqi
@
text
@<HTML>
<BODY>
<PRE>
<!-- Manpage converted by man2html 3.0.1 -->
</PRE>
<HR>
<ADDRESS>
Man(1) output converted with
<a href="http://www.oac.uci.edu/indiv/ehood/man2html.html">man2html</a>
</ADDRESS>
</BODY>
</HTML>
@


1.1
log
@Initial revision
@
text
@a4 70
element of _param3.  GL establishes a ``working set'' of textures
that are resident in texture memory.  These textures can be bound
to a texture target much more efficiently than textures that  are
not  resident.  _cmnd queries the texture residence status of the
_param1 textures named by the elements of _param2.   If  all  the

</PRE>
<H2>named  textures are resident, _cmnd returns GL_TRUE, and the con­</H2><PRE>
tents of _param3 are undisturbed.  If not all the named  textures

</PRE>
<H2>are  resident, _cmnd returns GL_FALSE, and detailed status is re­</H2><PRE>
turned in the _param1 elements of  _param3.   If  an  element  of

</PRE>
<H2>_param3  is  GL_TRUE, then the texture named by the corresponding</H2><PRE>
element of _param2 is resident.  The residence status of a single
bound  texture may also be queried by calling _cmnd(GetTexParame­
ter) with the <I>target</I> argument set to the target to which the tex­

</PRE>
<H2>ture is bound, and the pname argument set to GL_TEXTURE_RESIDENT.</H2><PRE>
This is the only way that the residence status of a default  tex­
ture  can  be queried.  _cmnd is available only if the GL version
is 1.1 or greater.  _cmnd returns the  residency  status  of  the
textures  at  the  time of invocation. It does not guarantee that
the textures will remain resident at any other time.  If textures
reside  in  virtual memory (there is no texture memory), they are
considered always resident.  Some implementations may not load  a

</PRE>
<H2>texture until the first use of that texture.  GL_INVALID_VALUE is</H2><PRE>

</PRE>
<H2>generated if _param1 is negative.  GL_INVALID_VALUE is  generated</H2><PRE>
if  any  element  in  _param2 is 0 or does not name a texture. In

</PRE>
<H2>that case, the function returns  GL_FALSE  and  the  contents  of</H2><PRE>

</PRE>
<H2>_param3  is  indeterminate.  GL_INVALID_OPERATION is generated if</H2><PRE>
_cmnd is executed between the execution of _cmnd(Begin)  and  the
corresponding  execution  of  _cmnd(End).  _cmnd(GetTexParameter)

</PRE>
<H2>with parameter name GL_TEXTURE_RESIDENT retrieves  the  residence</H2><PRE>
status  of  a  currently bound texture.  _cmnd(BindTexture), _cm­
nd(GetTexParameter),   _cmnd(PrioritizeTextures),    _cmnd(TexIm­
age1D), _cmnd(TexImage2D), _cmnd(TexImage3D), _cmnd(TexParameter)




















@


1.1.1.1
log
@win32-x11 source tree update March 26, 2001
@
text
@@
