head	1.2;
access;
symbols
	win32-x11-2001-03-26:1.1.1.1 SNAPSHOT:1.1.1;
locks; strict;
comment	@# @;
expand	@o@;


1.2
date	2001.06.03.20.47.09;	author ssiddiqi;	state Exp;
branches;
next	1.1;

1.1
date	2001.03.25.19.36.51;	author ssiddiqi;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2001.03.25.19.36.51;	author ssiddiqi;	state Exp;
branches;
next	;


desc
@@


1.2
log
@Win32-X11 update sources check in, June 3, 2001 - ssiddiqi
@
text
@<HTML>
<BODY>
<PRE>
<!-- Manpage converted by man2html 3.0.1 -->
</PRE>
<HR>
<ADDRESS>
Man(1) output converted with
<a href="http://www.oac.uci.edu/indiv/ehood/man2html.html">man2html</a>
</ADDRESS>
</BODY>
</HTML>
@


1.1
log
@Initial revision
@
text
@a4 158

</PRE>
<H2>GL_SPHERE_MAP.  _names(TexGen,[ifd]v) _phead(_param1) Specifies a</H2><PRE>

</PRE>
<H2>texture  coordinate.   Must  be one of GL_S, GL_T, GL_R, or GL_Q.</H2><PRE>
_phead(_param2) Specifies the symbolic name of the  texture-coor­
dinate  generation  function  or  function  parameters.   Must be

</PRE>
<H2>GL_TEXTURE_GEN_MODE,    GL_OBJECT_PLANE,     or     GL_EYE_PLANE.</H2><PRE>
_phead(_param3) Specifies a pointer to an array of texture gener­

</PRE>
<H2>ation parameters.  If _param2 is  GL_TEXTURE_GEN_MODE,  then  the</H2><PRE>

</PRE>
<H2>array  must  contain  a  single  symbolic constant, one of GL_OB­</H2><PRE>

</PRE>
<H2>JECT_LINEAR, GL_EYE_LINEAR, or GL_SPHERE_MAP.  Otherwise, _param3</H2><PRE>
holds  the  coefficients  for  the  texture-coordinate generation
function specified by _param2.  _cmnd selects  a  texture-coordi­
nate  generation function or supplies coefficients for one of the
functions.  _param1 names one of the (<I>s</I>, <I>t</I>, <I>r</I>, <I>q</I>) texture coordi­

</PRE>
<H2>nates;  it  must be one of the symbols GL_S, GL_T, GL_R, or GL_Q.</H2><PRE>

</PRE>
<H2>_param2  must  be  one  of  three  symbolic  constants:   GL_TEX­</H2><PRE>

</PRE>
<H2>TURE_GEN_MODE,  GL_OBJECT_PLANE,  or GL_EYE_PLANE.  If _param2 is</H2><PRE>

</PRE>
<H2>GL_TEXTURE_GEN_MODE, then _param3 chooses a mode, one  of  GL_OB­</H2><PRE>

</PRE>
<H2>JECT_LINEAR,  GL_EYE_LINEAR, or GL_SPHERE_MAP.  If _param2 is ei­</H2><PRE>

</PRE>
<H2>ther GL_OBJECT_PLANE or GL_EYE_PLANE,  _param3  contains  coeffi­</H2><PRE>
cients for the corresponding texture generation function.  If the

</PRE>
<H2>texture generation function is GL_OBJECT_LINEAR, the function</H2><PRE>
$g ~=~ p sub 1^x sub o ~+~ p sub 2^y sub o ~+~ p sub  3^z  sub  o
                      ~+~ p sub 4^w sub o$
is used, where $g$ is the value computed for the coordinate named
in _param1, $p sub 1$, $p sub 2$, $p sub 3$, and $p  sub  4$  are
the four values supplied in _param3, and $x sub o$, $y sub o$, $z
sub o$, and $w sub o$ are the object coordinates of  the  vertex.
This  function  can  be used, for example, to texture-map terrain
using sea level as a reference plane (defined by $p  sub  1$,  $p
sub  2$,  $p  sub  3$, and $p sub 4$).  The altitude of a terrain

</PRE>
<H2>vertex is computed by the GL_OBJECT_LINEAR coordinate  generation</H2><PRE>
function  as  its distance from sea level; that altitude can then
be used to index the texture image to map white snow  onto  peaks
and  green grass onto foothills.  If the texture generation func­

</PRE>
<H2>tion is GL_EYE_LINEAR, the function</H2><PRE>
$g ~=~ p sub 1 sup prime ^x sub e ~+~ p sub 2 sup prime ^y sub  e
 ~+~ p sub 3 sup prime ^z sub e ~+~ p sub 4 sup prime ^w sub e$
is used, where
                      $( p sub 1 sup prime
~~p  sub  2  sup prime~~p sub 3 sup prime~~ { p sub 4 sup prime})
~=~ ( p sub 1~~ p sub 2~~ p sub 3~~ p sub 4 ) ~M sup -1$
and $x sub e$, $y sub e$, $z sub e$, and $w sub e$  are  the  eye
coordinates  of  the vertex, $p sub 1$, $p sub 2$, $p sub 3$, and
$p sub 4$ are the values supplied in _param3, and $M$ is the mod­
elview  matrix  when  _cmnd  is invoked.  If $M$ is poorly condi­
tioned or singular, texture coordinates generated by the  result­
ing  function may be inaccurate or undefined.  Note that the val­
ues in _param3 define a reference plane in eye coordinates.   The
modelview  matrix that is applied to them may not be the same one
in effect when the polygon vertices are transformed.  This  func­
tion  establishes a field of texture coordinates that can produce
dynamic  contour  lines  on  moving  objects.   If   _param2   is
To  enable  or  disable a texture-coordinate generation function,
call _cmnd(Enable) or _cmnd(Disable) with  one  of  the  symbolic

</PRE>
<H2>texture-coordinate   names  (GL_TEXTURE_GEN_S,  GL_TEXTURE_GEN_T,</H2><PRE>

</PRE>
<H2>GL_TEXTURE_GEN_R, or GL_TEXTURE_GEN_Q) as the argument.  When en­</H2><PRE>
abled,  the specified texture coordinate is computed according to
the generating function associated with  that  coordinate.   When
disabled,  subsequent vertices take the specified texture coordi­
nate from the current set of texture coordinates. Initially,  all

</PRE>
<H2>texture  generation  functions  are  set to GL_EYE_LINEAR and are</H2><PRE>
disabled.  Both $s$ plane equations are (1, 0, 0,  0),  both  $t$
plane equations are (0, 1, 0, 0), and all $r$ and $q$ plane equa­
tions are (0, 0, 0, 0).  When the _arbstring(multitexture) exten­
sion  is  supported,  _cmnd set the texture generation parameters
for the currently active texture unit,  selected  with  _cmnd(Ac­

</PRE>
<H2>tiveTextureARB).   GL_INVALID_ENUM  is  generated when _param1 or</H2><PRE>
_param2 is not an accepted defined  value,  or  when  _param2  is

</PRE>
<H2>GL_TEXTURE_GEN_MODE and _param3 is not an accepted defined value.</H2><PRE>

</PRE>
<H2>GL_INVALID_ENUM is generated when _param2 is GL_TEXTURE_GEN_MODE,</H2><PRE>

</PRE>
<H2>_param3  is  GL_SPHERE_MAP,  and  _param1 is either GL_R or GL_Q.</H2><PRE>

</PRE>
<H2>GL_INVALID_OPERATION is generated if _cmnd  is  executed  between</H2><PRE>
the  execution of _cmnd(Begin) and the corresponding execution of
_cmnd(End).  _cmnd(GetTexGen)

</PRE>
<H2>_cmnd(IsEnabled) with argument GL_TEXTURE_GEN_S</H2><PRE>

</PRE>
<H2>_cmnd(IsEnabled) with argument GL_TEXTURE_GEN_T</H2><PRE>

</PRE>
<H2>_cmnd(IsEnabled) with argument GL_TEXTURE_GEN_R</H2><PRE>

</PRE>
<H2>_cmnd(IsEnabled) with argument GL_TEXTURE_GEN_Q  _cmnd(ActiveTex­</H2><PRE>
tureARB),  _cmnd(CopyPixels),  _cmnd(CopyTexImage2D), _cmnd(Copy­
TexSubImage1D),   _cmnd(CopyTexSubImage2D),   _cmnd(CopyTexSubIm­
age3D), _cmnd(TexEnv), _cmnd(TexImage1D), _cmnd(TexImage2D), _cm­
nd(TexImage3D), _cmnd(TexParameter),  _cmnd(TexSubImage1D),  _cm­
nd(TexSubImage2D), _cmnd(TexSubImage3D)





















@


1.1.1.1
log
@win32-x11 source tree update March 26, 2001
@
text
@@
