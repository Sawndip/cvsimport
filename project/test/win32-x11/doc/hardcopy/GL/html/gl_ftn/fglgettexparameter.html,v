head	1.2;
access;
symbols
	win32-x11-2001-03-26:1.1.1.1 SNAPSHOT:1.1.1;
locks; strict;
comment	@# @;
expand	@o@;


1.2
date	2001.06.03.20.47.08;	author ssiddiqi;	state Exp;
branches;
next	1.1;

1.1
date	2001.03.25.19.36.50;	author ssiddiqi;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2001.03.25.19.36.50;	author ssiddiqi;	state Exp;
branches;
next	;


desc
@@


1.2
log
@Win32-X11 update sources check in, June 3, 2001 - ssiddiqi
@
text
@<HTML>
<BODY>
<PRE>
<!-- Manpage converted by man2html 3.0.1 -->
</PRE>
<HR>
<ADDRESS>
Man(1) output converted with
<a href="http://www.oac.uci.edu/indiv/ehood/man2html.html">man2html</a>
</ADDRESS>
</BODY>
</HTML>
@


1.1
log
@Initial revision
@
text
@a4 102

</PRE>
<H2>GL_TEXTURE_WRAP_S, GL_TEXTURE_WRAP_T, GL_TEXTURE_WRAP_R,  GL_TEX­</H2><PRE>

</PRE>
<H2>TURE_BORDER_COLOR,  GL_TEXTURE_PRIORITY,  and GL_TEXTURE_RESIDENT</H2><PRE>
are accepted.  _phead(_param3) Returns  the  texture  parameters.
_cmnd  returns  in _param3 the value or values of the texture pa­
rameter specified as _param2.  _param1 defines  the  target  tex­

</PRE>
<H2>ture,  either  GL_TEXTURE_1D,  GL_TEXTURE_2D, or GL_TEXTURE_3D to</H2><PRE>
specify one-, two-, or three-dimensional texturing.  _param2  ac­
cepts  the same symbols as _cmnd(TexParameter), with the same in­

</PRE>
<H2>terpretations: GL_TEXTURE_MAG_FILTER  Returns  the  single-valued</H2><PRE>
texture  magnification  filter,  a symbolic constant. The initial

</PRE>
<H2>value is GL_LINEAR.  GL_TEXTURE_MIN_FILTER  Returns  the  single-</H2><PRE>
valued texture minification filter, a symbolic constant. The ini­

</PRE>
<H2>tial value is GL_NEAREST_MIPMAP_LINEAR.   GL_TEXTURE_MIN_LOD  Re­</H2><PRE>
turns  the  single-valued  texture minimum level-of-detail value.

</PRE>
<H2>The initial value is  $-1000$.   GL_TEXTURE_MAX_LOD  Returns  the</H2><PRE>
single-valued  texture maximum level-of-detail value. The initial

</PRE>
<H2>value is 1000.  GL_TEXTURE_BASE_LEVEL Returns  the  single-valued</H2><PRE>

</PRE>
<H2>base  texture  mipmap  level.   The  initial value is 0.  GL_TEX­</H2><PRE>

</PRE>
<H2>TURE_MAX_LEVEL Returns the single-valued maximum  texture  mipmap</H2><PRE>

</PRE>
<H2>array  level.   The initial value is 1000.  GL_TEXTURE_WRAP_S Re­</H2><PRE>
turns the single-valued wrapping function for texture  coordinate

</PRE>
<H2>$s$,  a  symbolic  constant.  The  initial  value  is  GL_REPEAT.</H2><PRE>

</PRE>
<H2>GL_TEXTURE_WRAP_T Returns the single-valued wrapping function for</H2><PRE>
texture coordinate $t$, a symbolic constant. The initial value is

</PRE>
<H2>GL_REPEAT.  GL_TEXTURE_WRAP_R Returns the single-valued  wrapping</H2><PRE>
function  for  texture  coordinate  $r$, a symbolic constant. The

</PRE>
<H2>initial value is GL_REPEAT.  GL_TEXTURE_BORDER_COLOR Returns four</H2><PRE>
integer or floating-point numbers that comprise the RGBA color of
the texture border.  Floating-point values are  returned  in  the
range [0, 1].  Integer values are returned as a linear mapping of
the internal floating-point representation such that 1.0 maps  to
the most positive representable integer and -1.0 maps to the most
negative representable integer. The initial value is  (0,  0,  0,

</PRE>
<H2>0).   GL_TEXTURE_PRIORITY  Returns  the residence priority of the</H2><PRE>
target texture (or the named texture bound to  it).  The  initial

</PRE>
<H2>value  is 1.  See _cmnd(PrioritizeTextures).  GL_TEXTURE_RESIDENT</H2><PRE>
Returns the residence status of the target texture.  If the value

</PRE>
<H2>returned  in  _param3 is GL_TRUE, the texture is resident in tex­</H2><PRE>

</PRE>
<H2>ture memory.  See _cmnd(AreTexturesResident).  GL_TEXTURE_PRIORI­</H2><PRE>

</PRE>
<H2>TY  and  GL_TEXTURE_RESIDENT are available only if the GL version</H2><PRE>

</PRE>
<H2>is 1.1 or greater.   GL_TEXTURE_3D,  GL_TEXTURE_MIN_LOD,  GL_TEX­</H2><PRE>

</PRE>
<H2>TURE_MAX_LOD,  GL_TEXTURE_BASE_LEVEL,  GL_TEXTURE_MAX_LEVEL,  and</H2><PRE>

</PRE>
<H2>GL_TEXTURE_WRAP_R are available only if the GL version is 1.2  or</H2><PRE>
greater.  If an error is generated, no change is made to the con­

</PRE>
<H2>tents of _param3.  GL_INVALID_ENUM is  generated  if  _param1  or</H2><PRE>

</PRE>
<H2>_param2 is not an accepted value.  GL_INVALID_OPERATION is gener­</H2><PRE>
ated if _cmnd is executed between the execution  of  _cmnd(Begin)
and  the  corresponding  execution  of _cmnd(End).  _cmnd(AreTex­
turesResident), _cmnd(PrioritizeTextures), _cmnd(TexParameter)



@


1.1.1.1
log
@win32-x11 source tree update March 26, 2001
@
text
@@
