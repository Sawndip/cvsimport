head	1.2;
access;
symbols
	win32-x11-2001-03-26:1.1.1.1 SNAPSHOT:1.1.1;
locks; strict;
comment	@# @;
expand	@o@;


1.2
date	2001.06.03.20.47.08;	author ssiddiqi;	state Exp;
branches;
next	1.1;

1.1
date	2001.03.25.19.36.50;	author ssiddiqi;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2001.03.25.19.36.50;	author ssiddiqi;	state Exp;
branches;
next	;


desc
@@


1.2
log
@Win32-X11 update sources check in, June 3, 2001 - ssiddiqi
@
text
@<HTML>
<BODY>
<PRE>
<!-- Manpage converted by man2html 3.0.1 -->
</PRE>
<HR>
<ADDRESS>
Man(1) output converted with
<a href="http://www.oac.uci.edu/indiv/ehood/man2html.html">man2html</a>
</ADDRESS>
</BODY>
</HTML>
@


1.1
log
@Initial revision
@
text
@a4 94

</PRE>
<H2>GL_ALPHA12,  GL_ALPHA16,  GL_LUMINANCE,  GL_LUMINANCE4,  GL_LUMI­</H2><PRE>

</PRE>
<H2>NANCE8,   GL_LUMINANCE12,   GL_LUMINANCE16,   GL_LUMINANCE_ALPHA,</H2><PRE>

</PRE>
<H2>GL_LUMINANCE4_ALPHA4, GL_LUMINANCE6_ALPHA2, GL_LUMINANCE8_ALPHA8,</H2><PRE>

</PRE>
<H2>GL_LUMINANCE12_ALPHA4, GL_LUMINANCE12_ALPHA12, GL_LUMINANCE16_AL­</H2><PRE>

</PRE>
<H2>PHA16, GL_INTENSITY,  GL_INTENSITY4,  GL_INTENSITY8,  GL_INTENSI­</H2><PRE>

</PRE>
<H2>TY12,  GL_INTENSITY16,  GL_RGB,  GL_R3_G3_B2,  GL_RGB4,  GL_RGB5,</H2><PRE>

</PRE>
<H2>GL_RGB8, GL_RGB10, GL_RGB12, GL_RGB16, GL_RGBA, GL_RGBA2,  GL_RG­</H2><PRE>

</PRE>
<H2>BA4,  GL_RGB5_A1, GL_RGBA8, GL_RGB10_A2, GL_RGBA12, or GL_RGBA16.</H2><PRE>
_phead(_param4 _param5) Specify the  window  coordinates  of  the
lower  left  corner  of  the  rectangular  region of pixels to be
copied.  _phead(_param6) Specifies the width of the  texture  im­
age.   Must be 0 or $2 sup n ~+~ 2*$_param8 for some integer $n$.
_phead(_param7) Specifies the height of the texture image.   Must
be   0  or  $2  sup  m  ~+~  2*$_param8  for  some  integer  $m$.
_phead(_param8) Specifies the width of the border.  Must  be  ei­
ther  0 or 1.  _cmnd defines a two-dimensional texture image with

</PRE>
<H2>pixels from the current GL_READ_BUFFER.  The screen-aligned pixel</H2><PRE>
rectangle with lower left corner at (_param4, _param5) and with a
width   of    _param6$~+~2~*~$_param8    and    a    height    of
_param7$~+~2~*~$_param8  defines  the texture array at the mipmap
level specified by _param2.  _param3 specifies the internal  for­
mat  of  the texture array.  The pixels in the rectangle are pro­
cessed exactly as if _cmnd(CopyPixels) had been called,  but  the
process  stops  just  before final conversion.  At this point all
pixel component values are clamped to the range $[0,1]$ and  then
converted  to  the  texture's  internal format for storage in the
texel array.  Pixel ordering is  such  that  lower  $x$  and  $y$
screen  coordinates correspond to lower $s$ and $t$ texture coor­
dinates.  If any of the pixels within the specified rectangle  of

</PRE>
<H2>the current GL_READ_BUFFER are outside the window associated with</H2><PRE>
the current rendering context, then the values obtained for those
pixels  are undefined.  _cmnd is available only if the GL version
is 1.1 or greater.  Texturing has no effect in color index  mode.
1,  2,  3,  and  4 are not accepted values for _param3.  An image
with height or width of 0 indicates a  NULL  texture.   When  the
_arbstring(imaging)  extension  is supported, the RGBA components
read from  the  framebuffer  may  be  processed  by  the  imaging

</PRE>
<H2>pipeline.   See  _cmnd(TexImage1D)  for specific details.  GL_IN­</H2><PRE>

</PRE>
<H2>VALID_ENUM is generated if _param1 is not GL_TEXTURE_2D.   GL_IN­</H2><PRE>

</PRE>
<H2>VALID_VALUE  is  generated  if  _param2  is  less than 0.  GL_IN­</H2><PRE>

</PRE>
<H2>VALID_VALUE may be generated if _param2 is greater than $log  sub</H2><PRE>

</PRE>
<H2>2 max$, where $max$ is the returned value of GL_MAX_TEXTURE_SIZE.</H2><PRE>

</PRE>
<H2>GL_INVALID_VALUE is generated if _param6 or _param7 is less  than</H2><PRE>

</PRE>
<H2>0,  greater  than  $2~+~$GL_MAX_TEXTURE_SIZE,  or  if  _param6 or</H2><PRE>
_param7 cannot be represented as $2 sup k  ~+~  2~*~$_param8  for

</PRE>
<H2>some  integer  $k$.   GL_INVALID_VALUE is generated if _param8 is</H2><PRE>

</PRE>
<H2>not 0 or 1.  GL_INVALID_VALUE is generated if _param3 is not  one</H2><PRE>

</PRE>
<H2>of  the  allowable  values.  GL_INVALID_OPERATION is generated if</H2><PRE>
_cmnd is executed between the execution of _cmnd(Begin)  and  the
corresponding execution of _cmnd(End).  _cmnd(GetTexImage)

</PRE>
<H2>_cmnd(IsEnabled)  with  argument GL_TEXTURE_2D _cmnd(CopyPixels),</H2><PRE>
_cmnd(CopyTexImage1D),  _cmnd(CopyTexSubImage1D),  _cmnd(CopyTex­
@


1.1.1.1
log
@win32-x11 source tree update March 26, 2001
@
text
@@
