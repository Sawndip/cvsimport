head	1.2;
access;
symbols
	win32-x11-2001-03-26:1.1.1.1 SNAPSHOT:1.1.1;
locks; strict;
comment	@# @;
expand	@o@;


1.2
date	2001.06.03.20.47.08;	author ssiddiqi;	state Exp;
branches;
next	1.1;

1.1
date	2001.03.25.19.36.50;	author ssiddiqi;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2001.03.25.19.36.50;	author ssiddiqi;	state Exp;
branches;
next	;


desc
@@


1.2
log
@Win32-X11 update sources check in, June 3, 2001 - ssiddiqi
@
text
@<HTML>
<BODY>
<PRE>
<!-- Manpage converted by man2html 3.0.1 -->
</PRE>
<HR>
<ADDRESS>
Man(1) output converted with
<a href="http://www.oac.uci.edu/indiv/ehood/man2html.html">man2html</a>
</ADDRESS>
</BODY>
</HTML>
@


1.1
log
@Initial revision
@
text
@a4 70
_phead(_param3) Specifies the  byte  offset  between  consecutive
colors.   If _param3 is 0 (the initial value), the colors are un­
derstood to be tightly packed in the array. The initial value  is
0.  _phead(_param4) Specifies a pointer to the first component of
the first color element in the array.  _cmnd specifies the  loca­
tion  and data format of an array of color components to use when
rendering.  _param1 specifies the number of components per color,
and must be 3 or 4.  _param2 specifies the data type of each col­
or component, and _param3 specifies the byte stride from one col­
or to the next allowing vertexes and attributes to be packed into
a single array or stored in separate arrays.  (Single-array stor­
age  may be more efficient on some implementations; see _cmnd(In­
terleavedArrays).)  When a color  array  is  specified,  _param1,
_param2, _param3, and _param4 are saved as client-side state.  To
enable and disable the color array, call _cmnd(EnableClientState)
and

</PRE>
<H2>_cmnd(DisableClientState)  with  the  argument GL_COLOR_ARRAY. If</H2><PRE>
enabled, the color array is  used  when  _cmnd(DrawArrays),  _cm­
nd(DrawElements),  _cmnd(DrawRangeElements),  or  _cmnd(ArrayEle­
ment) is called.  _cmnd is available only if the  GL  version  is
1.1  or greater.  The color array is initially disabled and isn't
accessed  when   _cmnd(ArrayElement),   _cmnd(DrawArrays),   _cm­
nd(DrawRangeElements),  or _cmnd(DrawElements) is called.  Execu­
tion of _cmnd is not allowed between the execution  of  _cmnd(Be­
gin)  and the corresponding execution of _cmnd(End), but an error
may or may not be generated. If no error is generated, the opera­
tion  is undefined.  _cmnd is typically implemented on the client
side.  Color array  parameters  are  client-side  state  and  are
therefore  not  saved  or  restored by _cmnd(PushAttrib) and _cm­
nd(PopAttrib).  Use _cmnd(PushClientAttrib)  and  _cmnd(PopClien­

</PRE>
<H2>tAttrib)  instead.   GL_INVALID_VALUE  is generated if _param1 is</H2><PRE>

</PRE>
<H2>not 3 or 4.  GL_INVALID_ENUM is generated if _param2  is  not  an</H2><PRE>

</PRE>
<H2>accepted value.  GL_INVALID_VALUE is generated if _param3 is neg­</H2><PRE>

</PRE>
<H2>ative.  _cmnd(IsEnabled) with argument GL_COLOR_ARRAY</H2><PRE>

</PRE>
<H2>_cmnd(Get) with argument GL_COLOR_ARRAY_SIZE</H2><PRE>

</PRE>
<H2>_cmnd(Get) with argument GL_COLOR_ARRAY_TYPE</H2><PRE>

</PRE>
<H2>_cmnd(Get) with argument GL_COLOR_ARRAY_STRIDE</H2><PRE>

</PRE>
<H2>_cmnd(GetPointerv) with argument GL_COLOR_ARRAY_POINTER _cmnd(Ar­</H2><PRE>
rayElement),  _cmnd(DrawArrays), _cmnd(DrawElements), _cmnd(Edge­
FlagPointer),  _cmnd(Enable),  _cmnd(GetPointerv),   _cmnd(Index­
Pointer),  _cmnd(InterleavedArrays),  _cmnd(NormalPointer),  _cm­
nd(PopClientAttrib),   _cmnd(PushClientAttrib),   _cmnd(TexCoord­
Pointer), _cmnd(VertexPointer)









@


1.1.1.1
log
@win32-x11 source tree update March 26, 2001
@
text
@@
