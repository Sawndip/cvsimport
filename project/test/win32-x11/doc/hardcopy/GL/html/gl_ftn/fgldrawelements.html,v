head	1.2;
access;
symbols
	win32-x11-2001-03-26:1.1.1.1 SNAPSHOT:1.1.1;
locks; strict;
comment	@# @;
expand	@o@;


1.2
date	2001.06.03.20.47.08;	author ssiddiqi;	state Exp;
branches;
next	1.1;

1.1
date	2001.03.25.19.36.50;	author ssiddiqi;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2001.03.25.19.36.50;	author ssiddiqi;	state Exp;
branches;
next	;


desc
@@


1.2
log
@Win32-X11 update sources check in, June 3, 2001 - ssiddiqi
@
text
@<HTML>
<BODY>
<PRE>
<!-- Manpage converted by man2html 3.0.1 -->
</PRE>
<HR>
<ADDRESS>
Man(1) output converted with
<a href="http://www.oac.uci.edu/indiv/ehood/man2html.html">man2html</a>
</ADDRESS>
</BODY>
</HTML>
@


1.1
log
@Initial revision
@
text
@a4 68

</PRE>
<H2>in _param4. Must be one of  GL_UNSIGNED_BYTE,  GL_UNSIGNED_SHORT,</H2><PRE>

</PRE>
<H2>or  GL_UNSIGNED_INT.   _phead(_param4) Specifies a pointer to the</H2><PRE>
location where the indices are stored.  _cmnd specifies  multiple
geometric  primitives  with very few subroutine calls. Instead of
calling a GL function to pass  each  individual  vertex,  normal,
texture coordinate, edge flag, or color, you can prespecify sepa­
rate arrays of vertexes, normals, and so on and use them to  con­
struct  a  sequence  of  primitives  with a single call to _cmnd.
When _cmnd is called, it uses _param2 sequential elements from an
enabled array, starting at _param4 to construct a sequence of ge­
ometric primitives. _param1 specifies what kind of primitives are
constructed,  and  how  the array elements construct these primi­
tives. If more than one  array  is  enabled,  each  is  used.  If

</PRE>
<H2>GL_VERTEX_ARRAY  is not enabled, no geometric primitives are con­</H2><PRE>
structed.  Vertex attributes that are modified by _cmnd  have  an

</PRE>
<H2>unspecified  value  after  _cmnd returns. For example, if GL_COL­</H2><PRE>

</PRE>
<H2>OR_ARRAY is enabled, the value of the current color is  undefined</H2><PRE>
after  _cmnd  executes.  Attributes that aren't modified maintain
their previous values.  _cmnd is available only if the GL version
is  1.1 or greater.  _cmnd is included in display lists. If _cmnd
is entered into a display list, the necessary array data  (deter­
mined by the array pointers and enables) is also entered into the
display list. Because the array pointers and enables are  client-
side  state, their values affect display lists when the lists are

</PRE>
<H2>created, not when the lists  are  executed.   GL_INVALID_ENUM  is</H2><PRE>

</PRE>
<H2>generated  if _param1 is not an accepted value.  GL_INVALID_VALUE</H2><PRE>

</PRE>
<H2>is generated if _param2  is  negative.   GL_INVALID_OPERATION  is</H2><PRE>
generated if _cmnd is executed between the execution of _cmnd(Be­
gin) and the corresponding _cmnd(End).  _cmnd(ArrayElement), _cm­
nd(ColorPointer),   _cmnd(DrawArrays),  _cmnd(DrawRangeElements),
_cmnd(EdgeFlagPointer), _cmnd(GetPointerv),  _cmnd(IndexPointer),
_cmnd(InterleavedArrays),  _cmnd(NormalPointer),  _cmnd(TexCoord­
Pointer), _cmnd(VertexPointer)



















@


1.1.1.1
log
@win32-x11 source tree update March 26, 2001
@
text
@@
