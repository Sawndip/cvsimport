head	1.2;
access;
symbols
	win32-x11-2001-03-26:1.1.1.1 SNAPSHOT:1.1.1;
locks; strict;
comment	@# @;
expand	@o@;


1.2
date	2001.06.03.20.47.08;	author ssiddiqi;	state Exp;
branches;
next	1.1;

1.1
date	2001.03.25.19.36.50;	author ssiddiqi;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2001.03.25.19.36.50;	author ssiddiqi;	state Exp;
branches;
next	;


desc
@@


1.2
log
@Win32-X11 update sources check in, June 3, 2001 - ssiddiqi
@
text
@<HTML>
<BODY>
<PRE>
<!-- Manpage converted by man2html 3.0.1 -->
</PRE>
<HR>
<ADDRESS>
Man(1) output converted with
<a href="http://www.oac.uci.edu/indiv/ehood/man2html.html">man2html</a>
</ADDRESS>
</BODY>
</HTML>
@


1.1
log
@Initial revision
@
text
@a4 80
the  left  corner  of  the  row   of   pixels   to   be   copied.
_phead(_param6)  Specifies  the  width  of  the texture subimage.
_cmnd replaces a portion of a one-dimensional texture image  with

</PRE>
<H2>pixels  from  the  current  GL_READ_BUFFER (rather than from main</H2><PRE>
memory, as is the case for  _cmnd(TexSubImage1D)).   The  screen-
aligned  pixel  row  with  left corner at (_param4, _param5), and
with length _param6 replaces the portion  of  the  texture  array
with x indices _param3 through $_eqnparam3 ~+~ _eqnparam6 ~-~ 1$,
inclusive. The destination in the texture array may  not  include
any  texels outside the texture array as it was originally speci­
fied.  The pixels in the row are processed  exactly  as  if  _cm­
nd(CopyPixels) had been called, but the process stops just before
final conversion.  At this point all pixel component  values  are
clamped  to  the range [0, 1] and then converted to the texture's
internal format for storage in the texel array.  It is not an er­
ror  to specify a subtexture with zero width, but such a specifi­
cation has no effect.  If any of the pixels within the  specified

</PRE>
<H2>row of the current GL_READ_BUFFER are outside the read window as­</H2><PRE>
sociated with the current rendering context, then the values  ob­
tained  for those pixels are undefined.  No change is made to the
<I>internalformat</I>, <I>width</I>, or <I>border</I> parameters of the specified tex­
ture  array  or  to texel values outside the specified subregion.
_cmnd is available only if the GL  version  is  1.1  or  greater.
Texturing  has  no effect in color index mode.  _cmnd(PixelStore)
and _cmnd(PixelTransfer) modes affect texture images  in  exactly
the way they affect _cmnd(DrawPixels).  When the _arbstring(imag­
ing) extension is supported, the RGBA components copied from  the
framebuffer  may  be processed by the imaging pipeline.  See _cm­

</PRE>
<H2>nd(TexImage1D) for specific details.  GL_INVALID_ENUM is generat­</H2><PRE>

</PRE>
<H2>ed if _param1 is not GL_TEXTURE_1D.  GL_INVALID_OPERATION is gen­</H2><PRE>
erated if the texture array has not been defined  by  a  previous

</PRE>
<H2>_cmnd(TexImage1D)  or  _cmnd(CopyTexImage1D)  operation.   GL_IN­</H2><PRE>

</PRE>
<H2>VALID_VALUE is generated if  _param2  is  less  than  0.   GL_IN­</H2><PRE>

</PRE>
<H2>VALID_VALUE  may  be  generated if _param2$>log sub 2$ max, where</H2><PRE>

</PRE>
<H2>max  is  the  returned  value  of  GL_MAX_TEXTURE_SIZE.    GL_IN­</H2><PRE>

</PRE>
<H2>VALID_VALUE  is generated if _param5$ ~</~ ~-b$ or if _param6$ ~<~<H2><PRE>

</PRE>
<H2>~-b$, where $b$ is the border width of the texture array.  GL_IN­</H2><PRE>

</PRE>
<H2>VALID_VALUE  is  generated  if  $_eqnparam3  ~</~ ~-b$, or $(_eqn­<H2><PRE>

</PRE>
<H2>param3~+~_eqnparam6)  ~>~  (w-b)$,  where  $w$  is  the   GL_TEX­</H2><PRE>

</PRE>
<H2>TURE_WIDTH, and $b$ is the GL_TEXTURE_BORDER of the texture image</H2><PRE>
being modified.  Note that $w$ includes twice the  border  width.
_cmnd(GetTexImage)

</PRE>
<H2>_cmnd(IsEnabled)  with  argument GL_TEXTURE_1D _cmnd(CopyPixels),</H2><PRE>
_cmnd(CopyTexImage1D), _cmnd(CopyTexImage2D), _cmnd(CopyTexSubIm­
age2D), _cmnd(CopyTexSubImage3D), _cmnd(PixelStore), _cmnd(Pixel­
Transfer), _cmnd(ReadBuffer), _cmnd(TexEnv), _cmnd(TexGen),  _cm­
nd(TexImage1D),  _cmnd(TexImage2D), _cmnd(TexImage3D), _cmnd(Tex­
Parameter),  _cmnd(TexSubImage1D),   _cmnd(TexSubImage2D),   _cm­
nd(TexSubImage3D)



@


1.1.1.1
log
@win32-x11 source tree update March 26, 2001
@
text
@@
