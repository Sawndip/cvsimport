head	1.2;
access;
symbols
	win32-x11-2001-03-26:1.1.1.1 SNAPSHOT:1.1.1;
locks; strict;
comment	@# @;
expand	@o@;


1.2
date	2001.06.03.20.47.08;	author ssiddiqi;	state Exp;
branches;
next	1.1;

1.1
date	2001.03.25.19.36.51;	author ssiddiqi;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2001.03.25.19.36.51;	author ssiddiqi;	state Exp;
branches;
next	;


desc
@@


1.2
log
@Win32-X11 update sources check in, June 3, 2001 - ssiddiqi
@
text
@<HTML>
<BODY>
<PRE>
<!-- Manpage converted by man2html 3.0.1 -->
</PRE>
<HR>
<ADDRESS>
Man(1) output converted with
<a href="http://www.oac.uci.edu/indiv/ehood/man2html.html">man2html</a>
</ADDRESS>
</BODY>
</HTML>
@


1.1
log
@Initial revision
@
text
@a4 142

</PRE>
<H2>EL_COLOR_CONTROL, GL_LIGHT_MODEL_LOCAL_VIEWER, and  GL_LIGHT_MOD­</H2><PRE>

</PRE>
<H2>EL_TWO_SIDE are accepted.  _phead(_param2) Specifies a pointer to</H2><PRE>
the value or values that _param2 will be set to.  _cmnd sets  the
lighting  model parameter.  _param1 names a parameter and _param2
gives the new value.  There are three lighting model  parameters:

</PRE>
<H2>GL_LIGHT_MODEL_AMBIENT _param2 contains four integer or floating-</H2><PRE>
point values that specify the ambient RGBA intensity of  the  en­
tire  scene.   Integer  values  are mapped linearly such that the
most positive representable value maps to 1.0, and the most nega­
tive representable value maps to -1.0.  Floating-point values are
mapped directly.  Neither integer nor floating-point  values  are
clamped.   The initial ambient scene intensity is (0.2, 0.2, 0.2,

</PRE>
<H2>1.0).   GL_LIGHT_MODEL_COLOR_CONTROL  _param2  must   be   either</H2><PRE>

</PRE>
<H2>GL_SEPARATE_SPECULAR_COLOR  or  GL_SINGLE_COLOR.  GL_SINGLE_COLOR</H2><PRE>
specifies that a single color is generated from the lighting com­

</PRE>
<H2>putation for a vertex.  GL_SEPARATE_SPECULAR_COLOR specifies that</H2><PRE>
the specular color computation of lighting be  stored  separately
from  the  remainder  of  the lighting computation.  The specular
color is summed into the generated fragment's color after the ap­
plication  of texture mapping (if enabled).  The initial value is

</PRE>
<H2>GL_SINGLE_COLOR.  GL_LIGHT_MODEL_LOCAL_VIEWER _param2 is a single</H2><PRE>
integer  or  floating-point value that specifies how specular re­
flection angles are computed.  If _param2 is 0 (or 0.0), specular
reflection  angles  take the view direction to be parallel to and
in the direction of the -<I>z</I> axis, regardless of  the  location  of
the  vertex  in eye coordinates.  Otherwise, specular reflections
are computed from the origin of the eye coordinate  system.   The

</PRE>
<H2>initial  value is 0.  GL_LIGHT_MODEL_TWO_SIDE _param2 is a single</H2><PRE>
integer or floating-point value that specifies  whether  one-  or
two-sided lighting calculations are done for polygons.  It has no
effect  on  the  lighting  calculations  for  points,  lines,  or
bitmaps.   If _param2 is 0 (or 0.0), one-sided lighting is speci­
fied, and only the <I>front</I> material  parameters  are  used  in  the
lighting  equation.   Otherwise, two-sided lighting is specified.
In this case, vertices of back-facing polygons are lighted  using
the <I>back</I> material parameters, and have their normals reversed be­
fore the lighting equation is evaluated.  Vertices of  front-fac­
ing  polygons are always lighted using the <I>front</I> material parame­
ters, with no change to their normals. The initial  value  is  0.
In RGBA mode, the lighted color of a vertex is the sum of the ma­
terial emission intensity, the product of  the  material  ambient
reflectance  and the lighting model full-scene ambient intensity,
and the contribution of each enabled light  source.   Each  light
source  contributes the sum of three terms: ambient, diffuse, and
specular.  The ambient light source contribution is  the  product
of  the  material ambient reflectance and the light's ambient in­
tensity.  The diffuse light source contribution is the product of
the  material diffuse reflectance, the light's diffuse intensity,
and the dot product of the vertex's normal  with  the  normalized
vector  from  the vertex to the light source.  The specular light
source contribution is the product of the material  specular  re­
flectance, the light's specular intensity, and the dot product of

</PRE>
<H2>bient the resulting index  is.   GL_LIGHT_MODEL_COLOR_CONTROL  is</H2><PRE>

</PRE>
<H2>available  only  if  the  GL  version  is 1.2 or greater.  GL_IN­</H2><PRE>

</PRE>
<H2>VALID_ENUM is generated if _param1  is  not  an  accepted  value.</H2><PRE>

</PRE>
<H2>GL_INVALID_ENUM  is  generated  if _param1 is GL_LIGHT_MODEL_COL­</H2><PRE>

</PRE>
<H2>OR_CONTROL and _param2 is not one of GL_SINGLE_COLOR or  GL_SEPA­</H2><PRE>

</PRE>
<H2>RATE_SPECULAR_COLOR.   GL_INVALID_OPERATION is generated if _cmnd</H2><PRE>
is executed between the execution of _cmnd(Begin) and the  corre­
sponding  execution  of  _cmnd(End).   _cmnd(Get)  with  argument

</PRE>
<H2>GL_LIGHT_MODEL_AMBIENT</H2><PRE>

</PRE>
<H2>_cmnd(Get) with argument GL_LIGHT_MODEL_COLOR_CONTROL</H2><PRE>

</PRE>
<H2>_cmnd(Get) with argument GL_LIGHT_MODEL_LOCAL_VIEWER</H2><PRE>

</PRE>
<H2>_cmnd(Get) with argument GL_LIGHT_MODEL_TWO_SIDE</H2><PRE>

</PRE>
<H2>_cmnd(IsEnabled) with  argument  GL_LIGHTING  _cmnd(Light),  _cm­</H2><PRE>
nd(Material)






































@


1.1.1.1
log
@win32-x11 source tree update March 26, 2001
@
text
@@
