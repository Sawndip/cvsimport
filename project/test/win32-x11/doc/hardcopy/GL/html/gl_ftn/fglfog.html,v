head	1.2;
access;
symbols
	win32-x11-2001-03-26:1.1.1.1 SNAPSHOT:1.1.1;
locks; strict;
comment	@# @;
expand	@o@;


1.2
date	2001.06.03.20.47.08;	author ssiddiqi;	state Exp;
branches;
next	1.1;

1.1
date	2001.03.25.19.36.50;	author ssiddiqi;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2001.03.25.19.36.50;	author ssiddiqi;	state Exp;
branches;
next	;


desc
@@


1.2
log
@Win32-X11 update sources check in, June 3, 2001 - ssiddiqi
@
text
@<HTML>
<BODY>
<PRE>
<!-- Manpage converted by man2html 3.0.1 -->
</PRE>
<HR>
<ADDRESS>
Man(1) output converted with
<a href="http://www.oac.uci.edu/indiv/ehood/man2html.html">man2html</a>
</ADDRESS>
</BODY>
</HTML>
@


1.1
log
@Initial revision
@
text
@a4 144
cepted.  _phead(_param2) Specifies the value or values to be  as­

</PRE>
<H2>signed  to  _param1.  GL_FOG_COLOR requires an array of four val­</H2><PRE>
ues.  All other parameters accept an array containing only a sin­
gle  value.   Fog  is initially disabled.  While enabled, fog af­
fects rasterized geometry, bitmaps, and  pixel  blocks,  but  not
buffer  clear  operations.  To  enable and disable fog, call _cm­

</PRE>
<H2>nd(Enable) and _cmnd(Disable) with argument  GL_FOG.   _cmnd  as­</H2><PRE>
signs  the value or values in _param2 to the fog parameter speci­
fied by _param1.  The following values are accepted for  _param1:

</PRE>
<H2>GL_FOG_MODE  _param2  is a single integer or floating-point value</H2><PRE>
that specifies the equation to be used to compute the  fog  blend

</PRE>
<H2>factor,  $f$.   Three symbolic constants are accepted: GL_LINEAR,</H2><PRE>

</PRE>
<H2>GL_EXP, and GL_EXP2.  The equations corresponding to  these  sym­</H2><PRE>
bolic  constants  are  defined  below.   The  initial fog mode is

</PRE>
<H2>GL_EXP.  GL_FOG_DENSITY _param2 is a single integer or  floating-</H2><PRE>
point  value  that  specifies  $density$, the fog density used in
both exponential fog equations.  Only nonnegative  densities  are

</PRE>
<H2>accepted.  The initial fog density is 1.  GL_FOG_START _param2 is</H2><PRE>
a single integer or floating-point value that specifies  $start$,
the  near  distance used in the linear fog equation.  The initial

</PRE>
<H2>near distance is 0.  GL_FOG_END _param2 is a  single  integer  or</H2><PRE>
floating-point  value that specifies $end$, the far distance used
in the linear fog equation.   The  initial  far  distance  is  1.

</PRE>
<H2>GL_FOG_INDEX  _param2 is a single integer or floating-point value</H2><PRE>
that specifies $i sub f$, the fog color index.  The  initial  fog

</PRE>
<H2>index is 0.  GL_FOG_COLOR _param2 contains four integer or float­</H2><PRE>
ing-point values that specify $C sub f$, the fog color.   Integer
values  are  mapped  linearly  such that the most positive repre­
sentable value maps to 1.0, and the most  negative  representable
value  maps  to -1.0.  Floating-point values are mapped directly.
After conversion, all color components are clamped to  the  range
[0,1].   The initial fog color is (0, 0, 0, 0).  Fog blends a fog
color with each rasterized pixel fragment's  posttexturing  color
using  a  blending  factor $f$.  Factor $f$ is computed in one of
three ways, depending on the fog mode.  Let $z$ be  the  distance
in  eye coordinates from the origin to the fragment being fogged.

</PRE>
<H2>The equation for GL_LINEAR fog is</H2><PRE>

             f ~=~ {end ~-~ z} over {end ~-~ start}


</PRE>
<H2>The equation for GL_EXP fog is</H2><PRE>

               f ~=~ e sup {-^(density ~cdot~ z)}


</PRE>
<H2>The equation for GL_EXP2 fog is</H2><PRE>

            f ~=~ e sup {-^(density ~cdot~ z)} sup 2

Regardless of the fog mode, $f$ is clamped to  the  range  [0, 1]
after it is computed.  Then, if the GL is in RGBA color mode, the
fragment's red, green, and blue colors, represented by $C sub r$,
are replaced by

</PRE>
<H2>gument GL_FOG</H2><PRE>

</PRE>
<H2>_cmnd(Get) with argument GL_FOG_COLOR</H2><PRE>

</PRE>
<H2>_cmnd(Get) with argument GL_FOG_INDEX</H2><PRE>

</PRE>
<H2>_cmnd(Get) with argument GL_FOG_DENSITY</H2><PRE>

</PRE>
<H2>_cmnd(Get) with argument GL_FOG_START</H2><PRE>

</PRE>
<H2>_cmnd(Get) with argument GL_FOG_END</H2><PRE>

</PRE>
<H2>_cmnd(Get) with argument GL_FOG_MODE _cmnd(Enable)</H2><PRE>













































@


1.1.1.1
log
@win32-x11 source tree update March 26, 2001
@
text
@@
