head	1.2;
access;
symbols
	win32-x11-2001-03-26:1.1.1.1 SNAPSHOT:1.1.1;
locks; strict;
comment	@# @;
expand	@o@;


1.2
date	2001.06.03.20.47.08;	author ssiddiqi;	state Exp;
branches;
next	1.1;

1.1
date	2001.03.25.19.36.51;	author ssiddiqi;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2001.03.25.19.36.51;	author ssiddiqi;	state Exp;
branches;
next	;


desc
@@


1.2
log
@Win32-X11 update sources check in, June 3, 2001 - ssiddiqi
@
text
@<HTML>
<BODY>
<PRE>
<!-- Manpage converted by man2html 3.0.1 -->
</PRE>
<HR>
<ADDRESS>
Man(1) output converted with
<a href="http://www.oac.uci.edu/indiv/ehood/man2html.html">man2html</a>
</ADDRESS>
</BODY>
</HTML>
@


1.1
log
@Initial revision
@
text
@a4 68
logical operation that, when enabled, is applied between the  in­
coming color index or RGBA color and the color index or RGBA col­
or at the corresponding location in the frame buffer.  To  enable
or  disable  the  logical  operation, call _cmnd(Enable) and _cm­

</PRE>
<H2>nd(Disable) using the symbolic constant GL_COLOR_LOGIC_OP for RG­</H2><PRE>

</PRE>
<H2>BA  mode  or  GL_INDEX_LOGIC_OP for color index mode. The initial</H2><PRE>
value is disabled for both operations.
             ---------------------------------------
             <B>Opcode</B>             <B>Resulting</B> <B>Operation</B>
             ---------------------------------------
             <B>GL_CLEAR</B>                    0
             <B>GL_SET</B>                      1
             <B>GL_COPY</B>                     s
             <B>GL_COPY_INVERTED</B>           ~s
             <B>GL_NOOP</B>                     d
             <B>GL_INVERT</B>                  ~d
             <B>GL_AND</B>                    s &amp; d
             <B>GL_NAND</B>                 ~(s &amp; d)
             <B>GL_OR</B>                     s | d
             <B>GL_NOR</B>                  ~(s | d)
             <B>GL_XOR</B>                    s ^ d
             <B>GL_EQUIV</B>                ~(s ^ d)
             <B>GL_AND_REVERSE</B>           s &amp; ~d
             <B>GL_AND_INVERTED</B>          ~s &amp; d
             <B>GL_OR_REVERSE</B>            s | ~d
             <B>GL_OR_INVERTED</B>           ~s | d
             ---------------------------------------

_param1 is a symbolic constant chosen from the  list  above.   In
the  explanation  of the logical operations, <I>s</I> represents the in­
coming color index and  <I>d</I>  represents  the  index  in  the  frame
buffer.   Standard  C-language operators are used.  As these bit­
wise operators suggest, the logical operation is applied indepen­
dently  to each bit pair of the source and destination indices or
colors.  Color index logical operations are always supported. RG­
BA logical operations are supported only if the GL version is 1.1
or greater.  When more than one RGBA color or index buffer is en­
abled  for  drawing,  logical operations are performed separately
for each enabled buffer, using for the destination value the con­

</PRE>
<H2>tents of that buffer (see _cmnd(DrawBuffer)).  GL_INVALID_ENUM is</H2><PRE>

</PRE>
<H2>generated if _param1 is not an accepted value.  GL_INVALID_OPERA­</H2><PRE>

</PRE>
<H2>TION  is  generated if _cmnd is executed between the execution of</H2><PRE>
_cmnd(Begin) and the corresponding execution of _cmnd(End).  _cm­

</PRE>
<H2>nd(Get) with argument GL_LOGIC_OP_MODE.</H2><PRE>

</PRE>
<H2>_cmnd(IsEnabled) with argument GL_COLOR_LOGIC_OP or GL_INDEX_LOG­</H2><PRE>

</PRE>
<H2>IC_OP.   _cmnd(AlphaFunc),  _cmnd(BlendFunc),  _cmnd(DrawBuffer),</H2><PRE>
_cmnd(Enable), _cmnd(StencilOp)





@


1.1.1.1
log
@win32-x11 source tree update March 26, 2001
@
text
@@
