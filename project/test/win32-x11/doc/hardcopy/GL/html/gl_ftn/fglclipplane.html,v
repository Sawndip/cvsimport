head	1.2;
access;
symbols
	win32-x11-2001-03-26:1.1.1.1 SNAPSHOT:1.1.1;
locks; strict;
comment	@# @;
expand	@o@;


1.2
date	2001.06.03.20.47.08;	author ssiddiqi;	state Exp;
branches;
next	1.1;

1.1
date	2001.03.25.19.36.50;	author ssiddiqi;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2001.03.25.19.36.50;	author ssiddiqi;	state Exp;
branches;
next	;


desc
@@


1.2
log
@Win32-X11 update sources check in, June 3, 2001 - ssiddiqi
@
text
@<HTML>
<BODY>
<PRE>
<!-- Manpage converted by man2html 3.0.1 -->
</PRE>
<HR>
<ADDRESS>
Man(1) output converted with
<a href="http://www.oac.uci.edu/indiv/ehood/man2html.html">man2html</a>
</ADDRESS>
</BODY>
</HTML>
@


1.1
log
@Initial revision
@
text
@a4 64
Geometry is always clipped against the boundaries of a  six-plane
frustum  in <I>x</I>, <I>y</I>, and <I>z</I>.  _cmnd allows the specification of addi­
tional planes, not necessarily perpendicular to the <I>x</I>,  <I>y</I>,  or  <I>z</I>
axis,  against  which  all geometry is clipped.  To determine the
maximum number of additional clipping planes, call _cmnd(GetInte­

</PRE>
<H2>gerv)  with argument GL_MAX_CLIP_PLANES. All implementations sup­</H2><PRE>
port at least six such clipping planes.   Because  the  resulting
clipping  region  is the intersection of the defined half-spaces,
it is always convex.  _cmnd specifies a half-space using a  four-
component  plane  equation.   When  _cmnd  is  called, _param2 is
transformed by the inverse of the modelview matrix and stored  in
the  resulting  eye  coordinates.  Subsequent changes to the mod­
elview matrix have no effect on the stored plane-equation  compo­
nents.   If  the  dot  product of the eye coordinates of a vertex
with the stored plane equation components is  positive  or  zero,
the vertex is <I>in</I> with respect to that clipping plane.  Otherwise,
it is <I>out</I>.  To enable and disable clipping planes, call _cmnd(En­

</PRE>
<H2>able)  and _cmnd(Disable) with the argument GL_CLIP_PLANEi, where</H2><PRE>
<I>i</I> is the plane number.  All clipping planes are initially defined
as  (0,  0, 0, 0) in eye coordinates and are disabled.  It is al­

</PRE>
<H2>ways  the  case  that  GL_CLIP_PLANE$i$  =  GL_CLIP_PLANE0$~+~i$.</H2><PRE>

</PRE>
<H2>GL_INVALID_ENUM is generated if _param1 is not an accepted value.</H2><PRE>

</PRE>
<H2>GL_INVALID_OPERATION is generated if _cmnd  is  executed  between</H2><PRE>
the  execution of _cmnd(Begin) and the corresponding execution of
_cmnd(End).  _cmnd(GetClipPlane)

</PRE>
<H2>_cmnd(IsEnabled) with argument GL_CLIP_PLANEi _cmnd(Enable)</H2><PRE>


























@


1.1.1.1
log
@win32-x11 source tree update March 26, 2001
@
text
@@
