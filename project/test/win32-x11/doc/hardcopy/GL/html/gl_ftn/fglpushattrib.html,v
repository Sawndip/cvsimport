head	1.2;
access;
symbols
	win32-x11-2001-03-26:1.1.1.1 SNAPSHOT:1.1.1;
locks; strict;
comment	@# @;
expand	@o@;


1.2
date	2001.06.03.20.47.09;	author ssiddiqi;	state Exp;
branches;
next	1.1;

1.1
date	2001.03.25.19.36.51;	author ssiddiqi;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2001.03.25.19.36.51;	author ssiddiqi;	state Exp;
branches;
next	;


desc
@@


1.2
log
@Win32-X11 update sources check in, June 3, 2001 - ssiddiqi
@
text
@<HTML>
<BODY>
<PRE>
<!-- Manpage converted by man2html 3.0.1 -->
</PRE>
<HR>
<ADDRESS>
Man(1) output converted with
<a href="http://www.oac.uci.edu/indiv/ehood/man2html.html">man2html</a>
</ADDRESS>
</BODY>
</HTML>
@


1.1
log
@Initial revision
@
text
@a4 250

</PRE>
<H2>constants together.  The special mask GL_ALL_ATTRIB_BITS  can  be</H2><PRE>
used  to  save all stackable states.  The symbolic mask constants
and their associated GL state are as follows (the  second  column
lists which attributes are saved):

</PRE>
<H2>GL_ACCUM_BUFFER_BIT      Accumulation buffer clear value</H2><PRE>


</PRE>
<H2>GL_COLOR_BUFFER_BIT      GL_ALPHA_TEST enable bit</H2><PRE>
                         Alpha test function and reference value
                         <B>GL_BLEND</B> enable bit
                         Blending source and destination functions
                         Constant blend color
                         Blending equation
                         <B>GL_DITHER</B> enable bit
                         <B>GL_DRAW_BUFFER</B> setting
                         <B>GL_COLOR_LOGIC_OP</B> enable bit
                         <B>GL_INDEX_LOGIC_OP</B> enable bit
                         Logic op function
                         Color mode and index mode clear values
                         Color mode and index mode writemasks


</PRE>
<H2>GL_CURRENT_BIT           Current RGBA color</H2><PRE>
                         Current color index
                         Current normal vector
                         Current texture coordinates
                         Current raster position
                         <B>GL_CURRENT_RASTER_POSITION_VALID</B> flag
                         RGBA color associated with current raster position
                         Color index associated with current raster position
                         Texture coordinates associated with current raster position
                         <B>GL_EDGE_FLAG</B> flag


</PRE>
<H2>GL_DEPTH_BUFFER_BIT      GL_DEPTH_TEST enable bit</H2><PRE>
                         Depth buffer test function
                         Depth buffer clear value
                         <B>GL_DEPTH_WRITEMASK</B> enable bit


</PRE>
<H2>GL_ENABLE_BIT            GL_ALPHA_TEST flag</H2><PRE>
                         <B>GL_AUTO_NORMAL</B> flag
                         <B>GL_BLEND</B> flag
                         Enable bits for the user-definable clipping planes
                         <B>GL_COLOR_MATERIAL</B>
                         <B>GL_CULL_FACE</B> flag
                         <B>GL_DEPTH_TEST</B> flag
                         <B>GL_DITHER</B> flag
                         <B>GL_FOG</B> flag
                         <B>GL_LIGHT</B><I>i</I> where 0 &lt;= <I>i</I>&lt;<B>GL_MAX_LIGHTS</B>
                         <B>GL_LIGHTING</B> flag
                         <B>GL_LINE_SMOOTH</B> flag
                         <B>GL_LINE_STIPPLE</B> flag
                         <B>GL_COLOR_LOGIC_OP</B> flag
                         <B>GL_INDEX_LOGIC_OP</B> flag
                         <B>GL_MAP1_</B><I>x</I> where <I>x</I> is a map type
                         Flags <B>GL_TEXTURE_GEN_</B><I>x</I> where <I>x</I> is S, T, R, or Q


</PRE>
<H2>GL_EVAL_BIT              GL_MAP1_x enable bits, where x is a map type</H2><PRE>
                         <B>GL_MAP2_</B><I>x</I> enable bits, where <I>x</I> is a map type
                         1D grid endpoints and divisions
                         2D grid endpoints and divisions
                         <B>GL_AUTO_NORMAL</B> enable bit


</PRE>
<H2>GL_FOG_BIT               GL_FOG enable bit</H2><PRE>
                         Fog color
                         Fog density
                         Linear fog start
                         Linear fog end
                         Fog index
                         <B>GL_FOG_MODE</B> value


</PRE>
<H2>GL_HINT_BIT              GL_PERSPECTIVE_CORRECTION_HINT setting</H2><PRE>
                         <B>GL_POINT_SMOOTH_HINT</B> setting
                         <B>GL_LINE_SMOOTH_HINT</B> setting
                         <B>GL_POLYGON_SMOOTH_HINT</B> setting
                         <B>GL_FOG_HINT</B> setting


</PRE>
<H2>GL_LIGHTING_BIT          GL_COLOR_MATERIAL enable bit</H2><PRE>
                         <B>GL_COLOR_MATERIAL_FACE</B> value
                         Color material parameters that are tracking the current color
                         Ambient scene color
                         <B>GL_LIGHT_MODEL_LOCAL_VIEWER</B> value
                         <B>GL_LIGHT_MODEL_TWO_SIDE</B> setting
                         <B>GL_LIGHTING</B> enable bit
                         Enable bit for each light
                         Ambient, diffuse, and specular intensity for each light
                         Direction, position, exponent, and cutoff angle for each light
                         Constant, linear, and quadratic attenuation factors for each light
                         Ambient, diffuse, specular, and emissive color for each material
                         Ambient, diffuse, and specular color indices for each material
                         Specular exponent for each material
                         <B>GL_SHADE_MODEL</B> setting


</PRE>
<H2>GL_LINE_BIT              GL_LINE_SMOOTH flag</H2><PRE>
                         <B>GL_LINE_STIPPLE</B> enable bit
                         Line stipple pattern and repeat counter
                         Line width


</PRE>
<H2>GL_LIST_BIT              GL_LIST_BASE setting</H2><PRE>


</PRE>
<H2>GL_PIXEL_MODE_BIT        GL_RED_BIAS and GL_RED_SCALE settings</H2><PRE>
                         <B>GL_GREEN_BIAS</B> and <B>GL_GREEN_SCALE</B> values
                         <B>GL_BLUE_BIAS</B> and <B>GL_BLUE_SCALE</B>
                         <B>GL_ALPHA_BIAS</B> and <B>GL_ALPHA_SCALE</B>
                         <B>GL_DEPTH_BIAS</B> and <B>GL_DEPTH_SCALE</B>
                         <B>GL_INDEX_OFFSET</B> and <B>GL_INDEX_SHIFT</B> values
                         <B>GL_MAP_COLOR</B> and <B>GL_MAP_STENCIL</B> flags
                         <B>GL_POLYGON_OFFSET_LINE</B> flag
                         <B>GL_POLYGON_OFFSET_POINT</B> flag
                         <B>GL_POLYGON_OFFSET_FACTOR</B>
                         <B>GL_POLYGON_OFFSET_UNITS</B>


</PRE>
<H2>GL_POLYGON_STIPPLE_BIT   Polygon stipple image</H2><PRE>


</PRE>
<H2>GL_SCISSOR_BIT           GL_SCISSOR_TEST flag</H2><PRE>
                         Scissor box


</PRE>
<H2>GL_STENCIL_BUFFER_BIT    GL_STENCIL_TEST enable bit</H2><PRE>
                         Stencil function and reference value
                         Stencil value mask
                         Stencil fail, pass, and depth buffer pass actions
                         Stencil buffer clear value
                         Stencil buffer writemask


</PRE>
<H2>GL_TEXTURE_BIT           Enable bits for the four texture coordinates</H2><PRE>
                         Border color for each texture image
                         Minification function for each texture image
                         Magnification function for each texture image
                         Texture coordinates and wrap mode for each texture image
                         Color and mode for each texture environment
                         Enable bits <B>GL_TEXTURE_GEN_</B><I>x</I>, <I>x</I> is S, T, R, and Q
                         <B>GL_TEXTURE_GEN_MODE</B> setting for S, T, R, and Q
                         _cmnd(TexGen) plane equations for S, T, R, and Q
                         Current texture bindings (for example, <B>GL_TEXTURE_BINDING_2D</B>)


</PRE>
<H2>GL_TRANSFORM_BIT         Coefficients of the six clipping planes</H2><PRE>
                         Enable bits for the user-definable clipping planes
                         <B>GL_MATRIX_MODE</B> value
                         <B>GL_NORMALIZE</B> flag
                         <B>GL_RESCALE_NORMAL</B> flag


</PRE>
<H2>GL_VIEWPORT_BIT          Depth range (near and far)</H2><PRE>
                         Viewport origin and extent
_cmnd(PopAttrib) restores the values of the state variables saved
with the last
_cmnd(PushAttrib) command.  Those not saved are  left  unchanged.
It  is  an  error to push attributes onto a full stack, or to pop
attributes off an empty stack.  In either case, the error flag is
set  and no other change is made to GL state.  Initially, the at­
tribute stack is empty.  Not all values for GL state can be saved
on  the attribute stack.  For example, render mode state, and se­
lect and feedback state cannot be saved.  Client  state  must  be
saved  with  _cmnd(PushClientAttrib).  The depth of the attribute
stack depends on the implementation, but it must be at least  16.
When the _arbstring(multitexture) extension is supported, pushing
and popping texture state apples to all supported texture  units.

</PRE>
<H2>GL_STACK_OVERFLOW  is  generated  if  _cmnd(PushAttrib) is called</H2><PRE>

</PRE>
<H2>while the attribute stack is full.  GL_STACK_UNDERFLOW is  gener­</H2><PRE>
ated  if  _cmnd(PopAttrib) is called while the attribute stack is




















































@


1.1.1.1
log
@win32-x11 source tree update March 26, 2001
@
text
@@
