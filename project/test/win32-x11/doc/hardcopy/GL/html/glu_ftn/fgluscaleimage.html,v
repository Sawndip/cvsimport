head	1.2;
access;
symbols
	win32-x11-2001-03-26:1.1.1.1 SNAPSHOT:1.1.1;
locks; strict;
comment	@# @;
expand	@o@;


1.2
date	2001.06.03.20.47.11;	author ssiddiqi;	state Exp;
branches;
next	1.1;

1.1
date	2001.03.25.19.36.50;	author ssiddiqi;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2001.03.25.19.36.50;	author ssiddiqi;	state Exp;
branches;
next	;


desc
@@


1.2
log
@Win32-X11 update sources check in, June 3, 2001 - ssiddiqi
@
text
@<HTML>
<BODY>
<PRE>
<!-- Manpage converted by man2html 3.0.1 -->
</PRE>
<HR>
<ADDRESS>
Man(1) output converted with
<a href="http://www.oac.uci.edu/indiv/ehood/man2html.html">man2html</a>
</ADDRESS>
</BODY>
</HTML>
@


1.1
log
@Initial revision
@
text
@a4 180
source  image.   _phead(_param4)  Specifies  the  data  type  for

</PRE>
<H2>_param5.  Must  be  one  of GL_UNSIGNED_BYTE, GL_BYTE, GL_BITMAP,</H2><PRE>

</PRE>
<H2>GL_UNSIGNED_SHORT, GL_SHORT, GL_UNSIGNED_INT,  GL_INT,  GL_FLOAT,</H2><PRE>

</PRE>
<H2>GL_UNSIGNED_BYTE_3_3_2,     GL_UNSIGNED_BYTE_2_3_3_REV,    GL_UN­</H2><PRE>

</PRE>
<H2>SIGNED_SHORT_5_6_5,      GL_UNSIGNED_SHORT_5_6_5_REV,      GL_UN­</H2><PRE>

</PRE>
<H2>SIGNED_SHORT_4_4_4_4,    GL_UNSIGNED_SHORT_4_4_4_4_REV,    GL_UN­</H2><PRE>

</PRE>
<H2>SIGNED_SHORT_5_5_5_1,    GL_UNSIGNED_SHORT_1_5_5_5_REV,    GL_UN­</H2><PRE>

</PRE>
<H2>SIGNED_INT_8_8_8_8,      GL_UNSIGNED_INT_8_8_8_8_REV,      GL_UN­</H2><PRE>

</PRE>
<H2>SIGNED_INT_10_10_10_2,    and     GL_UNSIGNED_INT_2_10_10_10_REV.</H2><PRE>
_phead(_param5)   Specifies   a  pointer  to  the  source  image.
_phead(_param6 _param7) Specify the width and height, respective­
ly,  in  pixels of the destination image.  _phead(_param8) Speci­

</PRE>
<H2>fies the data type for _param9. Must be one of  GL_UNSIGNED_BYTE,</H2><PRE>

</PRE>
<H2>GL_BYTE, GL_BITMAP, GL_UNSIGNED_SHORT, GL_SHORT, GL_UNSIGNED_INT,</H2><PRE>

</PRE>
<H2>GL_INT,      GL_FLOAT,       GL_UNSIGNED_BYTE_3_3_2,       GL_UN­</H2><PRE>

</PRE>
<H2>SIGNED_BYTE_2_3_3_REV,       GL_UNSIGNED_SHORT_5_6_5,      GL_UN­</H2><PRE>

</PRE>
<H2>SIGNED_SHORT_5_6_5_REV,     GL_UNSIGNED_SHORT_4_4_4_4,     GL_UN­</H2><PRE>

</PRE>
<H2>SIGNED_SHORT_4_4_4_4_REV,    GL_UNSIGNED_SHORT_5_5_5_1,    GL_UN­</H2><PRE>

</PRE>
<H2>SIGNED_SHORT_1_5_5_5_REV,     GL_UNSIGNED_INT_8_8_8_8,     GL_UN­</H2><PRE>

</PRE>
<H2>SIGNED_INT_8_8_8_8_REV,   GL_UNSIGNED_INT_10_10_10_2,  or  GL_UN­</H2><PRE>

</PRE>
<H2>SIGNED_INT_2_10_10_10_REV.  _phead(_param9) Specifies  a  pointer</H2><PRE>
to  the  destination image.  _cmnd scales a pixel image using the
appropriate pixel store modes to unpack data from the source  im­
age  and pack data into the destination image.  When shrinking an
image, _cmnd uses a box filter to sample  the  source  image  and
create  pixels for the destination image.  When magnifying an im­
age, the pixels from the source image are  linearly  interpolated
to  create  the  destination image.  A return value of zero indi­
cates success, otherwise a GLU error code is returned  (see  _cm­
nd(ErrorString)).  See the _glcmnd(ReadPixels) reference page for
a description of the acceptable values for the _param1,  _param4,

</PRE>
<H2>and  _param8  parameters.  Formats GL_BGR, and GL_BGRA, and types</H2><PRE>

</PRE>
<H2>GL_UNSIGNED_BYTE_3_3_2,    GL_UNSIGNED_BYTE_2_3_3_REV,     GL_UN­</H2><PRE>

</PRE>
<H2>SIGNED_SHORT_5_6_5,      GL_UNSIGNED_SHORT_5_6_5_REV,      GL_UN­</H2><PRE>

</PRE>
<H2>SIGNED_SHORT_4_4_4_4,    GL_UNSIGNED_SHORT_4_4_4_4_REV,    GL_UN­</H2><PRE>

</PRE>
<H2>SIGNED_SHORT_5_5_5_1,    GL_UNSIGNED_SHORT_1_5_5_5_REV,    GL_UN­</H2><PRE>

</PRE>
<H2>SIGNED_INT_8_8_8_8,      GL_UNSIGNED_INT_8_8_8_8_REV,      GL_UN­</H2><PRE>

</PRE>
<H2>SIGNED_INT_10_10_10_2, and GL_UNSIGNED_INT_2_10_10_10_REV are on­</H2><PRE>

</PRE>
<H2>ly available if the  GL  version  is  1.2  or  greater.   GLU_IN­</H2><PRE>

</PRE>
<H2>VALID_VALUE  is returned if _param2, _param3, _param6, or _param7</H2><PRE>

</PRE>
<H2>is negative.  GLU_INVALID_ENUM is returned if  _param1,  _param4,</H2><PRE>

</PRE>
<H2>or  _param8  is  not legal.  GLU_INVALID_OPERATION is returned if</H2><PRE>

</PRE>
<H2>_param4  or   _param8   is   GL_UNSIGNED_BYTE_3_3_2   or   GL_UN­</H2><PRE>

</PRE>
<H2>SIGNED_BYTE_2_3_3_REV and _param1 is not GL_RGB.  GLU_INVALID_OP­</H2><PRE>

</PRE>
<H2>ERATION  is  returned   if   _param4   or   _param8   is   GL_UN­</H2><PRE>

</PRE>
<H2>SIGNED_SHORT_5_6_5  or GL_UNSIGNED_SHORT_5_6_5_REV and _param1 is</H2><PRE>

</PRE>
<H2>not GL_RGB.  GLU_INVALID_OPERATION  is  returned  if  _param4  or</H2><PRE>

</PRE>
<H2>_param8      is      GL_UNSIGNED_SHORT_4_4_4_4      or     GL_UN­</H2><PRE>

</PRE>
<H2>SIGNED_SHORT_4_4_4_4_REV  and  _param1  is  neither  GL_RGBA  nor</H2><PRE>

</PRE>
<H2>GL_BGRA.  GLU_INVALID_OPERATION is returned if _param4 or _param8</H2><PRE>

</PRE>
<H2>is GL_UNSIGNED_SHORT_5_5_5_1 or GL_UNSIGNED_SHORT_1_5_5_5_REV and</H2><PRE>

</PRE>
<H2>_param1 is neither GL_RGBA nor GL_BGRA.  GLU_INVALID_OPERATION is</H2><PRE>




















































@


1.1.1.1
log
@win32-x11 source tree update March 26, 2001
@
text
@@
