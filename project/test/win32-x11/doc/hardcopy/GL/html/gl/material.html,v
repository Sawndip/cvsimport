head	1.2;
access;
symbols
	win32-x11-2001-03-26:1.1.1.1 SNAPSHOT:1.1.1;
locks; strict;
comment	@# @;
expand	@o@;


1.2
date	2001.06.03.20.47.07;	author ssiddiqi;	state Exp;
branches;
next	1.1;

1.1
date	2001.03.25.19.36.50;	author ssiddiqi;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2001.03.25.19.36.50;	author ssiddiqi;	state Exp;
branches;
next	;


desc
@@


1.2
log
@Win32-X11 update sources check in, June 3, 2001 - ssiddiqi
@
text
@<HTML>
<BODY>
<PRE>
<!-- Manpage converted by man2html 3.0.1 -->
</PRE>
<HR>
<ADDRESS>
Man(1) output converted with
<a href="http://www.oac.uci.edu/indiv/ehood/man2html.html">man2html</a>
</ADDRESS>
</BODY>
</HTML>
@


1.1
log
@Initial revision
@
text
@a4 128
_phead(_param1) Specifies which face or faces are being  updated.

</PRE>
<H2>Must   be   one   of  GL_FRONT,  GL_BACK,  or  GL_FRONT_AND_BACK.</H2><PRE>
_phead(_param2) Specifies the material parameter of the  face  or

</PRE>
<H2>faces  that  is  being  updated.   Must  be  one  of  GL_AMBIENT,</H2><PRE>

</PRE>
<H2>GL_DIFFUSE,     GL_SPECULAR,      GL_EMISSION,      GL_SHININESS,</H2><PRE>

</PRE>
<H2>GL_AMBIENT_AND_DIFFUSE,   or  GL_COLOR_INDEXES.   _phead(_param3)</H2><PRE>
Specifies a pointer to the value or values that _param2  will  be
set  to.  _cmnd assigns values to material parameters.  There are
two matched sets of material parameters.  One,  the  <I>front-facing</I>
set,  is  used  to shade points, lines, bitmaps, and all polygons
(when two-sided lighting is disabled), or just front-facing poly­
gons  (when two-sided lighting is enabled).  The other set, <I>back-</I>
<I>facing</I>, is used to shade back-facing polygons only when two-sided
lighting  is  enabled.   Refer to the _cmnd(LightModel) reference
page for details concerning one- and two-sided lighting  calcula­
tions.   _cmnd takes three arguments.  The first, _param1, speci­

</PRE>
<H2>fies whether the GL_FRONT materials, the  GL_BACK  materials,  or</H2><PRE>

</PRE>
<H2>both  GL_FRONT_AND_BACK  materials will be modified.  The second,</H2><PRE>
_param2, specifies which of several parameters  in  one  or  both
sets  will be modified.  The third, _param3, specifies what value
or values will be assigned to the specified parameter.   Material
parameters  are  used in the lighting equation that is optionally
applied to each vertex.  The equation is discussed  in  the  _cm­
nd(LightModel) reference page.  The parameters that can be speci­
fied using _cmnd, and their interpretations by the lighting equa­

</PRE>
<H2>tion, are as follows: GL_AMBIENT _param3 contains four integer or</H2><PRE>
floating-point values that specify the ambient  RGBA  reflectance
of  the  material.   Integer values are mapped linearly such that
the most positive representable value maps to 1.0, and  the  most
negative representable value maps to -1.0.  Floating-point values
are mapped directly.  Neither integer nor  floating-point  values
are clamped.  The initial ambient reflectance for both front- and

</PRE>
<H2>back-facing  materials  is  (0.2,  0.2,  0.2,  1.0).   GL_DIFFUSE</H2><PRE>
_param3 contains four integer or floating-point values that spec­
ify the diffuse RGBA reflectance of the material.  Integer values
are  mapped  linearly  such  that the most positive representable
value maps to 1.0, and the most negative representable value maps
to -1.0.  Floating-point values are mapped directly.  Neither in­
teger nor floating-point values are clamped.  The initial diffuse
reflectance  for  both  front- and back-facing materials is (0.8,

</PRE>
<H2>0.8, 0.8, 1.0).  GL_SPECULAR _param3  contains  four  integer  or</H2><PRE>
floating-point  values that specify the specular RGBA reflectance
of the material.  Integer values are mapped  linearly  such  that
the  most  positive representable value maps to 1.0, and the most
negative representable value maps to -1.0.  Floating-point values
are  mapped  directly.  Neither integer nor floating-point values
are clamped.  The initial specular reflectance  for  both  front-

</PRE>
<H2>and  back-facing  materials is (0, 0, 0, 1).  GL_EMISSION _param3</H2><PRE>
contains four integer or floating-point values that  specify  the
RGBA emitted light intensity of the material.  Integer values are
mapped linearly such that the most positive  representable  value
maps  to  1.0,  and the most negative representable value maps to
dex mode lighting equation.  Refer to the _cmnd(LightModel)  ref­
erence  page for a discussion of color index lighting.  The mate­
rial parameters can be updated at any time.  In particular, _cmnd
can  be called between a call to _cmnd(Begin) and the correspond­
ing call to _cmnd(End).  If only a single material  parameter  is
to  be  changed per vertex, however, _cmnd(ColorMaterial) is pre­
ferred over _cmnd (see _cmnd(ColorMaterial)).  While the ambient,
diffuse, specular and emission material parameters all have alpha
components, only the diffuse  alpha  component  is  used  in  the

</PRE>
<H2>lighting  computation.   GL_INVALID_ENUM  is  generated if either</H2><PRE>

</PRE>
<H2>_param1 or _param2 is not an accepted value.  GL_INVALID_VALUE is</H2><PRE>
generated  if  a  specular  exponent outside the range [0,128] is
specified.    _cmnd(GetMaterial)    _cmnd(ColorMaterial),    _cm­
nd(Light), _cmnd(LightModel)






































@


1.1.1.1
log
@win32-x11 source tree update March 26, 2001
@
text
@@
