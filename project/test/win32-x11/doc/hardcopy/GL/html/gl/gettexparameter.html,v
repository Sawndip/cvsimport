head	1.2;
access;
symbols
	win32-x11-2001-03-26:1.1.1.1 SNAPSHOT:1.1.1;
locks; strict;
comment	@# @;
expand	@o@;


1.2
date	2001.06.03.20.47.07;	author ssiddiqi;	state Exp;
branches;
next	1.1;

1.1
date	2001.03.25.19.36.50;	author ssiddiqi;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2001.03.25.19.36.50;	author ssiddiqi;	state Exp;
branches;
next	;


desc
@@


1.2
log
@Win32-X11 update sources check in, June 3, 2001 - ssiddiqi
@
text
@<HTML>
<BODY>
<PRE>
<!-- Manpage converted by man2html 3.0.1 -->
</PRE>
<HR>
<ADDRESS>
Man(1) output converted with
<a href="http://www.oac.uci.edu/indiv/ehood/man2html.html">man2html</a>
</ADDRESS>
</BODY>
</HTML>
@


1.1
log
@Initial revision
@
text
@a4 104

</PRE>
<H2>GL_TEXTURE_WRAP_S,     GL_TEXTURE_WRAP_T,      GL_TEXTURE_WRAP_R,</H2><PRE>

</PRE>
<H2>GL_TEXTURE_BORDER_COLOR,         GL_TEXTURE_PRIORITY,         and</H2><PRE>

</PRE>
<H2>GL_TEXTURE_RESIDENT are accepted.   _phead(_param3)  Returns  the</H2><PRE>
texture parameters.  _cmnd returns in _param3 the value or values
of the texture parameter specified as _param2.   _param1  defines

</PRE>
<H2>the  target  texture,  either  GL_TEXTURE_1D,  GL_TEXTURE_2D,  or</H2><PRE>

</PRE>
<H2>GL_TEXTURE_3D to specify one-, two-, or three-dimensional textur­</H2><PRE>
ing.   _param2  accepts  the same symbols as _cmnd(TexParameter),

</PRE>
<H2>with the same interpretations: GL_TEXTURE_MAG_FILTER Returns  the</H2><PRE>
single-valued  texture magnification filter, a symbolic constant.

</PRE>
<H2>The initial value is  GL_LINEAR.   GL_TEXTURE_MIN_FILTER  Returns</H2><PRE>
the  single-valued  texture  minification filter, a symbolic con­

</PRE>
<H2>stant.   The   initial   value    is    GL_NEAREST_MIPMAP_LINEAR.</H2><PRE>

</PRE>
<H2>GL_TEXTURE_MIN_LOD Returns the single-valued texture minimum lev­</H2><PRE>
el-of-detail   value.    The   initial    value    is    $-1000$.

</PRE>
<H2>GL_TEXTURE_MAX_LOD Returns the single-valued texture maximum lev­</H2><PRE>
el-of-detail    value.    The    initial    value    is     1000.

</PRE>
<H2>GL_TEXTURE_BASE_LEVEL  Returns  the  single-valued  base  texture</H2><PRE>

</PRE>
<H2>mipmap level.  The initial value is 0.  GL_TEXTURE_MAX_LEVEL  Re­</H2><PRE>
turns  the single-valued maximum texture mipmap array level.  The

</PRE>
<H2>initial value is 1000.  GL_TEXTURE_WRAP_S Returns the single-val­</H2><PRE>
ued wrapping function for texture coordinate $s$, a symbolic con­

</PRE>
<H2>stant. The initial value is GL_REPEAT.  GL_TEXTURE_WRAP_T Returns</H2><PRE>
the single-valued wrapping function for texture coordinate $t$, a

</PRE>
<H2>symbolic   constant.   The   initial    value    is    GL_REPEAT.</H2><PRE>

</PRE>
<H2>GL_TEXTURE_WRAP_R Returns the single-valued wrapping function for</H2><PRE>
texture coordinate $r$, a symbolic constant. The initial value is

</PRE>
<H2>GL_REPEAT.    GL_TEXTURE_BORDER_COLOR  Returns  four  integer  or</H2><PRE>
floating-point numbers that comprise the RGBA color of  the  tex­
ture border.  Floating-point values are returned in the range [0,
1].  Integer values are returned as a linear mapping of  the  in­
ternal  floating-point  representation  such that 1.0 maps to the
most positive representable integer and -1.0  maps  to  the  most
negative  representable  integer.  The initial value is (0, 0, 0,

</PRE>
<H2>0).  GL_TEXTURE_PRIORITY Returns the residence  priority  of  the</H2><PRE>
target  texture  (or  the named texture bound to it). The initial

</PRE>
<H2>value is 1.  See _cmnd(PrioritizeTextures).   GL_TEXTURE_RESIDENT</H2><PRE>
Returns the residence status of the target texture.  If the value

</PRE>
<H2>returned in _param3 is GL_TRUE, the texture is resident  in  tex­</H2><PRE>
ture        memory.         See       _cmnd(AreTexturesResident).

</PRE>
<H2>GL_TEXTURE_PRIORITY and GL_TEXTURE_RESIDENT are available only if</H2><PRE>

</PRE>
<H2>the    GL    version   is   1.1   or   greater.    GL_TEXTURE_3D,</H2><PRE>

</PRE>
<H2>GL_TEXTURE_MIN_LOD,  GL_TEXTURE_MAX_LOD,   GL_TEXTURE_BASE_LEVEL,</H2><PRE>

</PRE>
<H2>GL_TEXTURE_MAX_LEVEL, and GL_TEXTURE_WRAP_R are available only if</H2><PRE>
the GL version is 1.2 or greater.  If an error is  generated,  no

</PRE>
<H2>change  is  made  to the contents of _param3.  GL_INVALID_ENUM is</H2><PRE>
generated if  _param1  or  _param2  is  not  an  accepted  value.

</PRE>
<H2>GL_INVALID_OPERATION  is  generated  if _cmnd is executed between</H2><PRE>
the execution of _cmnd(Begin) and the corresponding execution  of
_cmnd(End).    _cmnd(AreTexturesResident),   _cmnd(PrioritizeTex­
tures), _cmnd(TexParameter)

@


1.1.1.1
log
@win32-x11 source tree update March 26, 2001
@
text
@@
