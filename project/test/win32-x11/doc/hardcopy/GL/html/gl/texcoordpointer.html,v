head	1.2;
access;
symbols
	win32-x11-2001-03-26:1.1.1.1 SNAPSHOT:1.1.1;
locks; strict;
comment	@# @;
expand	@o@;


1.2
date	2001.06.03.20.47.07;	author ssiddiqi;	state Exp;
branches;
next	1.1;

1.1
date	2001.03.25.19.36.50;	author ssiddiqi;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2001.03.25.19.36.50;	author ssiddiqi;	state Exp;
branches;
next	;


desc
@@


1.2
log
@Win32-X11 update sources check in, June 3, 2001 - ssiddiqi
@
text
@<HTML>
<BODY>
<PRE>
<!-- Manpage converted by man2html 3.0.1 -->
</PRE>
<HR>
<ADDRESS>
Man(1) output converted with
<a href="http://www.oac.uci.edu/indiv/ehood/man2html.html">man2html</a>
</ADDRESS>
</BODY>
</HTML>
@


1.1
log
@Initial revision
@
text
@a4 70
secutive array elements.  If _param3 is 0, the array elements are
understood  to  be  tightly  packed.  The  initial  value  is  0.
_phead(_param4) Specifies a pointer to the  first  coordinate  of
the  first  element in the array.  The initial value is 0.  _cmnd
specifies the location and data  of an array of  texture  coordi­
nates to use when rendering.  _param1 specifies the number of co­
ordinates per element, and must be 1, 2, 3, or 4.  _param2 speci­
fies  the data type of each texture coordinate and _param3 speci­
fies the byte stride from one array element to the next  allowing
vertexes  and  attributes  to  be  packed  into a single array or
stored in separate arrays.  (Single-array storage may be more ef­
ficient on some implementations; see
_cmnd(InterleavedArrays).)   When  a  texture coordinate array is
specified, _param1,  _param2,  _param3,  and  _param4  are  saved
client-side  state.  To enable and disable the texture coordinate
array,   call   _cmnd(EnableClientState)    and    _cmnd(Disable­

</PRE>
<H2>ClientState)  with  the  argument  GL_TEXTURE_COORD_ARRAY. If en­</H2><PRE>
abled, the texture coordinate array is  used  when  _cmnd(DrawAr­
rays), _cmnd(DrawElements), _cmnd(DrawRangeElements) or _cmnd(Ar­
rayElement) is called.  Use _cmnd(DrawArrays) to construct a  se­
quence  of  primitives  (all  of the same type) from prespecified
vertex and vertex attribute arrays.  Use  _cmnd(ArrayElement)  to
specify primitives by indexing vertexes and vertex attributes and
_cmnd(DrawElements) to construct a sequence of primitives by  in­
dexing  vertexes  and vertex attributes.  _cmnd is available only
if the GL version is 1.1 or greater.  The texture coordinate  ar­
ray is initially disabled and it won't be accessed when _cmnd(Ar­
rayElement),  _cmnd(DrawElements),  _cmnd(DrawRangeElements),  or
_cmnd(DrawArrays)  is  called.  Execution of _cmnd is not allowed
between the execution of _cmnd(Begin) and the corresponding  exe­
cution  of  _cmnd(End), but an error may or may not be generated.
If no error is generated, the operation is undefined.   _cmnd  is
typically  implemented  on the client side with no protocol.  The
texture coordinate array parameters are client-side state and are
therefore  not  saved  or  restored by _cmnd(PushAttrib) and _cm­
nd(PopAttrib).  Use _cmnd(PushClientAttrib)  and  _cmnd(PopClien­

</PRE>
<H2>tAttrib)  instead.  When the GL_ARB_imaging extension is support­</H2><PRE>
ed, _cmnd updates the texture coordinate array state of  the  ac­
tive  client  texture unit, specified with _cmnd(ClientActiveTex­

</PRE>
<H2>tureARB).  GL_INVALID_VALUE is generated if _param1 is not 1,  2,</H2><PRE>

</PRE>
<H2>3,  or  4.  GL_INVALID_ENUM is generated if _param2 is not an ac­</H2><PRE>

</PRE>
<H2>cepted value.  GL_INVALID_VALUE is generated if _param3 is  nega­</H2><PRE>

</PRE>
<H2>tive.  _cmnd(IsEnabled) with argument GL_TEXTURE_COORD_ARRAY</H2><PRE>

</PRE>
<H2>_cmnd(Get) with argument GL_TEXTURE_COORD_ARRAY_SIZE</H2><PRE>

</PRE>
<H2>_cmnd(Get) with argument GL_TEXTURE_COORD_ARRAY_TYPE</H2><PRE>

</PRE>
<H2>_cmnd(GetPointerv)  with  argument GL_TEXTURE_COORD_ARRAY_POINTER</H2><PRE>
_cmnd(ArrayElement), _cmnd(ClientActiveTextureARB),  _cmnd(Color­
Pointer),     _cmnd(DrawArrays),     _cmnd(DrawElements),    _cm­
nd(DrawRangeElements),   _cmnd(EdgeFlagPointer),   _cmnd(Enable),
_cmnd(GetPointerv),   _cmnd(IndexPointer),  _cmnd(NormalPointer),
_cmnd(PopClientAttrib), _cmnd(PushClientAttrib), _cmnd(TexCoord),
_cmnd(VertexPointer)
@


1.1.1.1
log
@win32-x11 source tree update March 26, 2001
@
text
@@
