head	1.2;
access;
symbols
	win32-x11-2001-03-26:1.1.1.1 SNAPSHOT:1.1.1;
locks; strict;
comment	@# @;
expand	@o@;


1.2
date	2001.06.03.20.47.06;	author ssiddiqi;	state Exp;
branches;
next	1.1;

1.1
date	2001.03.25.19.36.50;	author ssiddiqi;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2001.03.25.19.36.50;	author ssiddiqi;	state Exp;
branches;
next	;


desc
@@


1.2
log
@Win32-X11 update sources check in, June 3, 2001 - ssiddiqi
@
text
@<HTML>
<BODY>
<PRE>
<!-- Manpage converted by man2html 3.0.1 -->
</PRE>
<HR>
<ADDRESS>
Man(1) output converted with
<a href="http://www.oac.uci.edu/indiv/ehood/man2html.html">man2html</a>
</ADDRESS>
</BODY>
</HTML>
@


1.1
log
@Initial revision
@
text
@a4 138

</PRE>
<H2>GL_DIFFUSE,    GL_SPECULAR,    GL_POSITION,    GL_SPOT_DIRECTION,</H2><PRE>

</PRE>
<H2>GL_SPOT_EXPONENT,     GL_SPOT_CUTOFF,    GL_CONSTANT_ATTENUATION,</H2><PRE>

</PRE>
<H2>GL_LINEAR_ATTENUATION,       and        GL_QUADRATIC_ATTENUATION.</H2><PRE>
_phead(_param3)  Returns  the  requested  data.  _cmnd returns in
_param3 the value or values of a light source parameter.  _param1

</PRE>
<H2>names  the  light  and is a symbolic name of the form GL_LIGHT$i$</H2><PRE>

</PRE>
<H2>for 0 </= $i$ < GL_MAX_LIGHTS, where GL_MAX_LIGHTS is an implemen­<H2><PRE>
tation dependent constant that is greater than or equal to eight.
_param2 specifies one of ten light source  parameters,  again  by

</PRE>
<H2>symbolic  name.  The following parameters are defined: GL_AMBIENT</H2><PRE>
_param3 returns four integer or floating-point values  represent­
ing  the  ambient intensity of the light source.  Integer values,
when requested, are linearly mapped from the  internal  floating-
point representation such that 1.0 maps to the most positive rep­
resentable integer value, and -1.0 maps to the most negative rep­
resentable  integer  value.  If the internal value is outside the
range [-1, 1], the corresponding integer return  value  is  unde­

</PRE>
<H2>fined. The initial value is (0, 0, 0, 1).  GL_DIFFUSE _param3 re­</H2><PRE>
turns four integer or floating-point values representing the dif­
fuse  intensity  of  the  light source.  Integer values, when re­
quested, are linearly mapped  from  the  internal  floating-point
representation  such  that  1.0  maps to the most positive repre­
sentable integer value, and -1.0 maps to the most negative repre­
sentable  integer  value.   If  the internal value is outside the
range [-1, 1], the corresponding integer return  value  is  unde­

</PRE>
<H2>fined. The initial value for GL_LIGHT0 is (1, 1, 1, 1); for other</H2><PRE>

</PRE>
<H2>lights, the initial value is (0, 0, 0, 0).   GL_SPECULAR  _param3</H2><PRE>
returns  four  integer  or floating-point values representing the
specular intensity of the light source.  Integer values, when re­
quested,  are  linearly  mapped  from the internal floating-point
representation such that 1.0 maps to  the  most  positive  repre­
sentable integer value, and -1.0 maps to the most negative repre­
sentable integer value.  If the internal  value  is  outside  the
range  [-1,  1],  the corresponding integer return value is unde­

</PRE>
<H2>fined. The initial value for GL_LIGHT0 is (1, 1, 1, 1); for other</H2><PRE>

</PRE>
<H2>lights,  the  initial value is (0, 0, 0, 0).  GL_POSITION _param3</H2><PRE>
returns four integer or floating-point  values  representing  the
position  of  the  light source.  Integer values, when requested,
are computed by rounding the internal  floating-point  values  to
the  nearest  integer value.  The returned values are those main­
tained in eye coordinates.  They will not be equal to the  values
specified  using  _cmnd(Light),  unless  the modelview matrix was
identity at the time _cmnd(Light) was called. The  initial  value

</PRE>
<H2>is (0, 0, 1, 0).  GL_SPOT_DIRECTION _param3 returns three integer</H2><PRE>
or floating-point values representing the direction of the  light
source.  Integer values, when requested, are computed by rounding
the internal floating-point values to the nearest integer  value.
The  returned  values  are  those  maintained in eye coordinates.
They will not  be  equal  to  the  values  specified  using  _cm­
nd(Light),  unless  the modelview matrix was identity at the time
_cmnd(Light) was called.  Although spot direction  is  normalized
before  being  used in the lighting equation, the returned values
point representation to the nearest integer. The initial value is

</PRE>
<H2>1.   GL_LINEAR_ATTENUATION  _param3  returns  a single integer or</H2><PRE>
floating-point value representing the linear attenuation  of  the
light.  An integer value, when requested, is computed by rounding
the internal floating-point representation to the  nearest  inte­

</PRE>
<H2>ger.  The  initial  value is 0.  GL_QUADRATIC_ATTENUATION _param3</H2><PRE>
returns a single integer or floating-point value representing the
quadratic  attenuation  of the light.  An integer value, when re­
quested, is computed by rounding the internal floating-point rep­
resentation  to  the nearest integer. The initial value is 0.  It

</PRE>
<H2>is always the case that GL_LIGHT$i$ = GL_LIGHT0 + $i$.  If an er­</H2><PRE>
ror  is  generated, no change is made to the contents of _param3.

</PRE>
<H2>GL_INVALID_ENUM is generated if _param1 or _param2 is not an  ac­</H2><PRE>

</PRE>
<H2>cepted value.  GL_INVALID_OPERATION is generated if _cmnd is exe­</H2><PRE>
cuted between the execution of _cmnd(Begin) and the corresponding
execution of _cmnd(End).  _cmnd(Light)




































@


1.1.1.1
log
@win32-x11 source tree update March 26, 2001
@
text
@@
