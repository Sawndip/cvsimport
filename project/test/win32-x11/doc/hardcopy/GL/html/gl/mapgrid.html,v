head	1.2;
access;
symbols
	win32-x11-2001-03-26:1.1.1.1 SNAPSHOT:1.1.1;
locks; strict;
comment	@# @;
expand	@o@;


1.2
date	2001.06.03.20.47.07;	author ssiddiqi;	state Exp;
branches;
next	1.1;

1.1
date	2001.03.25.19.36.50;	author ssiddiqi;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2001.03.25.19.36.50;	author ssiddiqi;	state Exp;
branches;
next	;


desc
@@


1.2
log
@Win32-X11 update sources check in, June 3, 2001 - ssiddiqi
@
text
@<HTML>
<BODY>
<PRE>
<!-- Manpage converted by man2html 3.0.1 -->
</PRE>
<HR>
<ADDRESS>
Man(1) output converted with
<a href="http://www.oac.uci.edu/indiv/ehood/man2html.html">man2html</a>
</ADDRESS>
</BODY>
</HTML>
@


1.1
log
@Initial revision
@
text
@a4 64
(_cmnd(MapGrid2) only).  _phead(_param5 _param6) Specify the map­
pings for integer grid domain values $j~=~0$ and $j~=~_eqnparam4$
(_cmnd(MapGrid2)  only).   _cmnd and _cmnd(EvalMesh) are used to­
gether to efficiently generate and evaluate a series  of  evenly-
spaced  map domain values.  _cmnd(EvalMesh) steps through the in­
teger domain of a one- or two-dimensional grid,  whose  range  is
the  domain  of  the evaluation maps specified by _cmnd(Map1) and
_cmnd(Map2).  _cmnd(MapGrid1)  and  _cmnd(MapGrid2)  specify  the
linear  grid  mappings  between  the $i$ (or $i$ and $j$) integer
grid coordinates, to the $u$  (or  $u$  and  $v$)  floating-point
evaluation  map coordinates.  See _cmnd(Map1) and _cmnd(Map2) for
details of how $u$ and $v$ coordinates are evaluated.  _cmnd(Map­
Grid1)  specifies  a single linear mapping such that integer grid
coordinate 0 maps exactly to _param2, and integer grid coordinate
_param1  maps exactly to _param3.  All other integer grid coordi­
nates $i$ are mapped so that

  u ~=~ i (_eqnparam3 - _eqnparam2) / _eqnparam1 ~+~ _eqnparam2

_cmnd(MapGrid2) specifies two such linear mappings.  One maps in­
teger  grid  coordinate  $i~=~0$  exactly to _param2, and integer
grid coordinate $i~=~_eqnparam1$ exactly to _param3.   The  other
maps  integer grid coordinate $j~=~0$ exactly to _param5, and in­
teger grid coordinate $j~=~_eqnparam4$ exactly to _param6.  Other
integer grid coordinates $i$ and $j$ are mapped such that
  u ~=~ i (_eqnparam3 - _eqnparam2) / _eqnparam1 ~+~ _eqnparam2
  v ~=~ j (_eqnparam6 - _eqnparam5) / _eqnparam4 ~+~ _eqnparam5
The  mappings  specified  by  _cmnd  are used identically by _cm­

</PRE>
<H2>nd(EvalMesh) and _cmnd(EvalPoint).  GL_INVALID_VALUE is generated</H2><PRE>
if    either    _param1    or    _param4    is    not   positive.

</PRE>
<H2>GL_INVALID_OPERATION is generated if _cmnd  is  executed  between</H2><PRE>
the  execution of _cmnd(Begin) and the corresponding execution of

</PRE>
<H2>_cmnd(End).  _cmnd(Get) with argument GL_MAP1_GRID_DOMAIN</H2><PRE>

</PRE>
<H2>_cmnd(Get) with argument GL_MAP2_GRID_DOMAIN</H2><PRE>

</PRE>
<H2>_cmnd(Get) with argument GL_MAP1_GRID_SEGMENTS</H2><PRE>

</PRE>
<H2>_cmnd(Get) with argument GL_MAP2_GRID_SEGMENTS  _cmnd(EvalCoord),</H2><PRE>
_cmnd(EvalMesh), _cmnd(EvalPoint), _cmnd(Map1), _cmnd(Map2)















@


1.1.1.1
log
@win32-x11 source tree update March 26, 2001
@
text
@@
