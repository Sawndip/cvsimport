head	1.2;
access;
symbols
	win32-x11-2001-03-26:1.1.1.1 SNAPSHOT:1.1.1;
locks; strict;
comment	@# @;
expand	@o@;


1.2
date	2001.06.03.20.47.06;	author ssiddiqi;	state Exp;
branches;
next	1.1;

1.1
date	2001.03.25.19.36.50;	author ssiddiqi;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2001.03.25.19.36.50;	author ssiddiqi;	state Exp;
branches;
next	;


desc
@@


1.2
log
@Win32-X11 update sources check in, June 3, 2001 - ssiddiqi
@
text
@<HTML>
<BODY>
<PRE>
<!-- Manpage converted by man2html 3.0.1 -->
</PRE>
<HR>
<ADDRESS>
Man(1) output converted with
<a href="http://www.oac.uci.edu/indiv/ehood/man2html.html">man2html</a>
</ADDRESS>
</BODY>
</HTML>
@


1.1
log
@Initial revision
@
text
@a4 94

</PRE>
<H2>GL_ALPHA12,     GL_ALPHA16,     GL_LUMINANCE,      GL_LUMINANCE4,</H2><PRE>

</PRE>
<H2>GL_LUMINANCE8,           GL_LUMINANCE12,          GL_LUMINANCE16,</H2><PRE>

</PRE>
<H2>GL_LUMINANCE_ALPHA,  GL_LUMINANCE4_ALPHA4,  GL_LUMINANCE6_ALPHA2,</H2><PRE>

</PRE>
<H2>GL_LUMINANCE8_ALPHA8,                      GL_LUMINANCE12_ALPHA4,</H2><PRE>

</PRE>
<H2>GL_LUMINANCE12_ALPHA12,   GL_LUMINANCE16_ALPHA16,   GL_INTENSITY,</H2><PRE>

</PRE>
<H2>GL_INTENSITY4,   GL_INTENSITY8,  GL_INTENSITY12,  GL_INTENSITY16,</H2><PRE>

</PRE>
<H2>GL_RGB,  GL_R3_G3_B2,  GL_RGB4,   GL_RGB5,   GL_RGB8,   GL_RGB10,</H2><PRE>

</PRE>
<H2>GL_RGB12,  GL_RGB16,  GL_RGBA,  GL_RGBA2,  GL_RGBA4,  GL_RGB5_A1,</H2><PRE>

</PRE>
<H2>GL_RGBA8, GL_RGB10_A2, GL_RGBA12, or  GL_RGBA16.   _phead(_param4</H2><PRE>
_param5) Specify the window coordinates of the left corner of the
row of pixels to be copied.  _phead(_param6) Specifies the  width
of  the  texture image.  Must be 0 or $2 sup n ~+~ 2*$_param7 for
some integer  $n$.   The  height  of  the  texture  image  is  1.
_phead(_param7)  Specifies  the width of the border.  Must be ei­
ther 0 or 1.  _cmnd defines a one-dimensional texture image  with

</PRE>
<H2>pixels from the current GL_READ_BUFFER.  The screen-aligned pixel</H2><PRE>
row with left corner at $(_eqnparam4,  _eqnparam5)$  and  with  a
length of $_eqnparam6~+~2~*~_eqnparam7$ defines the texture array
at the mipmap level specified by _param2.  _param3 specifies  the
internal   of  the texture array.  The pixels in the row are pro­
cessed exactly as if _cmnd(CopyPixels) had been called,  but  the
process  stops  just  before final conversion.  At this point all
pixel component values are clamped to the range [0, 1]  and  then
converted to the texture's internal  for storage in the texel ar­
ray.  Pixel ordering is such that lower  $x$  screen  coordinates
correspond  to  lower  texture coordinates.  If any of the pixels

</PRE>
<H2>within the specified row of the current GL_READ_BUFFER  are  out­</H2><PRE>
side  the  window  associated with the current rendering context,
then the values obtained for those pixels are  undefined.   _cmnd
is available only if the GL version is 1.1 or greater.  Texturing
has no effect in color index mode.  1, 2, 3, and 4  are  not  ac­
cepted  values  for  _param3.   An image with 0 width indicates a

</PRE>
<H2>NULL texture.  When the GL_ARB_imaging  extension  is  supported,</H2><PRE>
the  RGBA components copied from the framebuffer may be processed
by the imaging pipeline.  See _cmnd(TexImage1D) for specific  de­

</PRE>
<H2>tails.  GL_INVALID_ENUM is generated if _param1 is not one of the</H2><PRE>

</PRE>
<H2>allowable values.  GL_INVALID_VALUE is generated  if  _param2  is</H2><PRE>

</PRE>
<H2>less  than  0.   GL_INVALID_VALUE  may be generated if _param2 is</H2><PRE>
greater than $log sub 2 max$, where $max$ is the  returned  value

</PRE>
<H2>of GL_MAX_TEXTURE_SIZE.  GL_INVALID_VALUE is generated if _param3</H2><PRE>

</PRE>
<H2>is not an allowable  value.   GL_INVALID_VALUE  is  generated  if</H2><PRE>

</PRE>
<H2>_param6  is  less than 0 or greater than 2 + GL_MAX_TEXTURE_SIZE,</H2><PRE>
or if it cannot be represented as $2 sup n ~+~  2~*~(_eqnparam7)$

</PRE>
<H2>for  some  integer  value of n.  GL_INVALID_VALUE is generated if</H2><PRE>

</PRE>
<H2>_param7 is not 0 or 1.  GL_INVALID_OPERATION is generated if _cm­</H2><PRE>
nd is executed between the execution of _cmnd(Begin) and the cor­
responding execution of _cmnd(End).  _cmnd(GetTexImage)

</PRE>
<H2>_cmnd(IsEnabled) with argument  GL_TEXTURE_1D  _cmnd(CopyPixels),</H2><PRE>
_cmnd(CopyTexImage2D),  _cmnd(CopyTexSubImage1D),  _cmnd(CopyTex­
SubImage2D), _cmnd(PixelStore), _cmnd(PixelTransfer),  _cmnd(Tex­
Env),  _cmnd(TexGen),  _cmnd(TexImage1D), _cmnd(TexImage2D), _cm­
nd(TexSubImage1D), _cmnd(TexSubImage2D),
@


1.1.1.1
log
@win32-x11 source tree update March 26, 2001
@
text
@@
