head	1.2;
access;
symbols
	win32-x11-2001-03-26:1.1.1.1 SNAPSHOT:1.1.1;
locks; strict;
comment	@# @;
expand	@o@;


1.2
date	2001.06.03.20.47.07;	author ssiddiqi;	state Exp;
branches;
next	1.1;

1.1
date	2001.03.25.19.36.50;	author ssiddiqi;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2001.03.25.19.36.50;	author ssiddiqi;	state Exp;
branches;
next	;


desc
@@


1.2
log
@Win32-X11 update sources check in, June 3, 2001 - ssiddiqi
@
text
@<HTML>
<BODY>
<PRE>
<!-- Manpage converted by man2html 3.0.1 -->
</PRE>
<HR>
<ADDRESS>
Man(1) output converted with
<a href="http://www.oac.uci.edu/indiv/ehood/man2html.html">man2html</a>
</ADDRESS>
</BODY>
</HTML>
@


1.1
log
@Initial revision
@
text
@a4 246

------------------------------------------------------------------------------------

</PRE>
<H2>Constant                           See</H2><PRE>
------------------------------------------------------------------------------------

</PRE>
<H2>GL_ALPHA_TEST                      _cmnd(AlphaFunc)</H2><PRE>

</PRE>
<H2>GL_AUTO_NORMAL                     _cmnd(EvalCoord)</H2><PRE>

</PRE>
<H2>GL_BLEND                           _cmnd(BlendFunc), _cmnd(LogicOp)</H2><PRE>

</PRE>
<H2>GL_CLIP_PLANEi                     _cmnd(ClipPlane)</H2><PRE>

</PRE>
<H2>GL_COLOR_ARRAY                     _cmnd(ColorPointer)</H2><PRE>

</PRE>
<H2>GL_COLOR_LOGIC_OP                  _cmnd(LogicOp)</H2><PRE>

</PRE>
<H2>GL_COLOR_MATERIAL                  _cmnd(ColorMaterial)</H2><PRE>

</PRE>
<H2>GL_COLOR_TABLE                     _cmnd(ColorTable)</H2><PRE>

</PRE>
<H2>GL_CONVOLUTION_1D                  _cmnd(ConvolutionFilter1D)</H2><PRE>

</PRE>
<H2>GL_CONVOLUTION_2D                  _cmnd(ConvolutionFilter2D)</H2><PRE>

</PRE>
<H2>GL_CULL_FACE                       _cmnd(CullFace)</H2><PRE>

</PRE>
<H2>GL_DEPTH_TEST                      _cmnd(DepthFunc), _cmnd(DepthRange)</H2><PRE>

</PRE>
<H2>GL_DITHER                          _cmnd(Enable)</H2><PRE>

</PRE>
<H2>GL_EDGE_FLAG_ARRAY                 _cmnd(EdgeFlagPointer)</H2><PRE>

</PRE>
<H2>GL_FOG                             _cmnd(Fog)</H2><PRE>

</PRE>
<H2>GL_HISTOGRAM                       _cmnd(Histogram)</H2><PRE>

</PRE>
<H2>GL_INDEX_ARRAY                     _cmnd(IndexPointer)</H2><PRE>

</PRE>
<H2>GL_INDEX_LOGIC_OP                  _cmnd(LogicOp)</H2><PRE>

</PRE>
<H2>GL_LIGHTi                          _cmnd(LightModel), _cmnd(Light)</H2><PRE>

</PRE>
<H2>GL_LIGHTING                        _cmnd(Material), _cmnd(LightModel), _cmnd(Light)</H2><PRE>

</PRE>
<H2>GL_LINE_SMOOTH                     _cmnd(LineWidth)</H2><PRE>

</PRE>
<H2>GL_LINE_STIPPLE                    _cmnd(LineStipple)</H2><PRE>

</PRE>
<H2>GL_MAP1_COLOR_4                    _cmnd(Map1)</H2><PRE>

</PRE>
<H2>GL_MAP1_INDEX                      _cmnd(Map1)</H2><PRE>

</PRE>
<H2>GL_MAP1_NORMAL                     _cmnd(Map1)</H2><PRE>

</PRE>
<H2>GL_MAP1_TEXTURE_COORD_1            _cmnd(Map1)</H2><PRE>

</PRE>
<H2>GL_MAP1_TEXTURE_COORD_2            _cmnd(Map1)</H2><PRE>

</PRE>
<H2>GL_MAP1_TEXTURE_COORD_3            _cmnd(Map1)</H2><PRE>

</PRE>
<H2>GL_MAP1_TEXTURE_COORD_4            _cmnd(Map1)</H2><PRE>

</PRE>
<H2>GL_MAP2_COLOR_4                    _cmnd(Map2)</H2><PRE>

</PRE>
<H2>GL_MAP2_INDEX                      _cmnd(Map2)</H2><PRE>

</PRE>
<H2>GL_MAP2_NORMAL                     _cmnd(Map2)</H2><PRE>

</PRE>
<H2>GL_MAP2_TEXTURE_COORD_1            _cmnd(Map2)</H2><PRE>

</PRE>
<H2>GL_MAP2_TEXTURE_COORD_2            _cmnd(Map2)</H2><PRE>

</PRE>
<H2>GL_MAP2_TEXTURE_COORD_3            _cmnd(Map2)</H2><PRE>

</PRE>
<H2>GL_MAP2_TEXTURE_COORD_4            _cmnd(Map2)</H2><PRE>

</PRE>
<H2>GL_MAP2_VERTEX_3                   _cmnd(Map2)</H2><PRE>

</PRE>
<H2>GL_MAP2_VERTEX_4                   _cmnd(Map2)</H2><PRE>

</PRE>
<H2>GL_MINMAX                          _cmnd(Minmax)</H2><PRE>

</PRE>
<H2>GL_NORMAL_ARRAY                    _cmnd(NormalPointer)</H2><PRE>

</PRE>
<H2>GL_NORMALIZE                       _cmnd(Normal)</H2><PRE>

</PRE>
<H2>GL_POINT_SMOOTH                    _cmnd(PointSize)</H2><PRE>

</PRE>
<H2>GL_POLYGON_SMOOTH                  _cmnd(PolygonMode)</H2><PRE>

</PRE>
<H2>GL_POLYGON_OFFSET_FILL             _cmnd(PolygonOffset)</H2><PRE>

</PRE>
<H2>GL_POLYGON_OFFSET_LINE             _cmnd(PolygonOffset)</H2><PRE>

</PRE>
<H2>GL_POLYGON_OFFSET_POINT            _cmnd(PolygonOffset)</H2><PRE>

</PRE>
<H2>GL_POLYGON_STIPPLE                 _cmnd(PolygonStipple)</H2><PRE>

</PRE>
<H2>GL_POST_COLOR_MATRIX_COLOR_TABLE   _cmnd(ColorTable)</H2><PRE>

</PRE>
<H2>GL_VERTEX_ARRAY                    _cmnd(VertexPointer)</H2><PRE>
------------------------------------------------------------------------------------


</PRE>
<H2>If  an  error  is generated, _cmnd returns 0.  GL_COLOR_LOGIC_OP,</H2><PRE>

</PRE>
<H2>GL_COLOR_ARRAY,        GL_EDGE_FLAG_ARRAY,        GL_INDEX_ARRAY,</H2><PRE>

</PRE>
<H2>GL_INDEX_LOGIC_OP,    GL_NORMAL_ARRAY,    GL_POLYGON_OFFSET_FILL,</H2><PRE>

</PRE>
<H2>GL_POLYGON_OFFSET_LINE,                  GL_POLYGON_OFFSET_POINT,</H2><PRE>

</PRE>
<H2>GL_TEXTURE_COORD_ARRAY, and GL_VERTEX_ARRAY are available only if</H2><PRE>

</PRE>
<H2>the  GL  version  is  1.1  or  greater   GL_RESCALE_NORMAL,   and</H2><PRE>

</PRE>
<H2>GL_TEXTURE_3D  are  available  only  if  the GL version is 1.2 or</H2><PRE>

</PRE>
<H2>greater.  GL_COLOR_TABLE,  GL_CONVOLUTION_1D,  GL_CONVOLUTION_2D,</H2><PRE>

</PRE>
<H2>GL_HISTOGRAM,     GL_MINMAX,    GL_POST_COLOR_MATRIX_COLOR_TABLE,</H2><PRE>

</PRE>
<H2>GL_POST_CONVOLUTION_COLOR_TABLE, and GL_SEPARABLE_2D  are  avail­</H2><PRE>

</PRE>
<H2>able only if GL_ARB_imaging is returned when _cmnd(Get) is called</H2><PRE>

</PRE>
<H2>with GL_EXTENSIONS.  When the  GL_ARB_multitexture  extension  is</H2><PRE>
supported,  the  following parameters return the associated value

</PRE>
<H2>for     the     active     texture     unit.       GL_TEXTURE_1D,</H2><PRE>

</PRE>
<H2>GL_TEXTURE_BINDING_1D,    GL_TEXTURE_2D,   GL_TEXTURE_BINDING_2D,</H2><PRE>

</PRE>
<H2>GL_TEXTURE_3D,      GL_TEXTURE_BINDING_3D,      GL_TEXTURE_GEN_S,</H2><PRE>

</PRE>
<H2>GL_TEXTURE_GEN_T,       GL_TEXTURE_GEN_R,       GL_TEXTURE_GEN_Q,</H2><PRE>

</PRE>
<H2>GL_TEXTURE_MATRIX,  and  GL_TEXTURE_STACK_DEPTH.   Likewise,  the</H2><PRE>
following  parameters  return the associated value for the active

</PRE>
<H2>client        texture        unit:        GL_TEXTURE_COORD_ARRAY,</H2><PRE>

</PRE>
<H2>GL_TEXTURE_COORD_ARRAY_SIZE,       GL_TEXTURE_COORD_ARRAY_STRIDE,</H2><PRE>

</PRE>
<H2>GL_TEXTURE_COORD_ARRAY_TYPE.   GL_INVALID_ENUM  is  generated  if</H2><PRE>

</PRE>
<H2>_param1 is not an accepted value.  GL_INVALID_OPERATION is gener­</H2><PRE>
ated if _cmnd is executed between the execution  of  _cmnd(Begin)
and  the  corresponding  execution of _cmnd(End).  _cmnd(Enable),
_cmnd(EnableClientState), _cmnd(Get)























@


1.1.1.1
log
@win32-x11 source tree update March 26, 2001
@
text
@@
