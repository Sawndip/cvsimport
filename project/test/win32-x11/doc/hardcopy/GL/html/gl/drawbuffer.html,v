head	1.2;
access;
symbols
	win32-x11-2001-03-26:1.1.1.1 SNAPSHOT:1.1.1;
locks; strict;
comment	@# @;
expand	@o@;


1.2
date	2001.06.03.20.47.06;	author ssiddiqi;	state Exp;
branches;
next	1.1;

1.1
date	2001.03.25.19.36.50;	author ssiddiqi;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2001.03.25.19.36.50;	author ssiddiqi;	state Exp;
branches;
next	;


desc
@@


1.2
log
@Win32-X11 update sources check in, June 3, 2001 - ssiddiqi
@
text
@<HTML>
<BODY>
<PRE>
<!-- Manpage converted by man2html 3.0.1 -->
</PRE>
<HR>
<ADDRESS>
Man(1) output converted with
<a href="http://www.oac.uci.edu/indiv/ehood/man2html.html">man2html</a>
</ADDRESS>
</BODY>
</HTML>
@


1.1
log
@Initial revision
@
text
@a4 86
upper  limit; use _cmnd(Get) to query the number of available aux

</PRE>
<H2>buffers.)  The initial value is GL_FRONT for single-buffered con­</H2><PRE>

</PRE>
<H2>texts, and GL_BACK for double-buffered contexts.  When colors are</H2><PRE>
written to the frame buffer, they  are  written  into  the  color
buffers  specified  by _cmnd.  The specifications are as follows:

</PRE>
<H2>GL_NONE No color buffers are  written.   GL_FRONT_LEFT  Only  the</H2><PRE>

</PRE>
<H2>front  left  color  buffer  is  written.  GL_FRONT_RIGHT Only the</H2><PRE>

</PRE>
<H2>front right color buffer is written.  GL_BACK_LEFT Only the  back</H2><PRE>

</PRE>
<H2>left  color buffer is written.  GL_BACK_RIGHT Only the back right</H2><PRE>

</PRE>
<H2>color buffer is written.  GL_FRONT Only the front left and  front</H2><PRE>
right color buffers are written.  If there is no front right col­

</PRE>
<H2>or buffer, only the front left color buffer is written.   GL_BACK</H2><PRE>
Only  the back left and back right color buffers are written.  If
there is no back right color buffer, only  the  back  left  color

</PRE>
<H2>buffer  is  written.   GL_LEFT  Only the front left and back left</H2><PRE>
color buffers are written.   If  there  is  no  back  left  color

</PRE>
<H2>buffer,  only  the  front left color buffer is written.  GL_RIGHT</H2><PRE>
Only the front right and back right color  buffers  are  written.
If there is no back right color buffer, only the front right col­

</PRE>
<H2>or buffer is written.  GL_FRONT_AND_BACK All the front  and  back</H2><PRE>
color  buffers  (front  left, front right, back left, back right)
are written.  If there are no back color buffers, only the  front
left  and front right color buffers are written.  If there are no
right color buffers, only the front  left  and  back  left  color
buffers  are  written.   If  there  are  no  right  or back color

</PRE>
<H2>buffers, only the front left color buffer  is  written.   GL_AUXi</H2><PRE>
Only auxiliary color buffer <I>i</I> is written.  If more than one color
buffer is selected for drawing, then blending or  logical  opera­
tions  are  computed  and  applied  independently  for each color
buffer and can produce different results in each  buffer.   Mono­
scopic  contexts  include only buffers, and stereoscopic contexts
include both and buffers.  Likewise, single-buffered contexts in­
clude only buffers, and double-buffered contexts include both and
buffers.  The context is selected at GL  initialization.   It  is

</PRE>
<H2>always  the case that GL_AUX$i$ = GL_AUX0 + $i$.  GL_INVALID_ENUM</H2><PRE>
is   generated   if   _param1   is   not   an   accepted   value.

</PRE>
<H2>GL_INVALID_OPERATION is generated if none of the buffers indicat­</H2><PRE>

</PRE>
<H2>ed by _param1 exists.  GL_INVALID_OPERATION is generated if _cmnd</H2><PRE>
is  executed between the execution of _cmnd(Begin) and the corre­
sponding  execution  of  _cmnd(End).   _cmnd(Get)  with  argument

</PRE>
<H2>GL_DRAW_BUFFER</H2><PRE>

</PRE>
<H2>_cmnd(Get)  with  argument  GL_AUX_BUFFERS _cmnd(BlendFunc), _cm­</H2><PRE>
nd(ColorMask),  _cmnd(IndexMask),   _cmnd(LogicOp),   _cmnd(Read­
Buffer)








@


1.1.1.1
log
@win32-x11 source tree update March 26, 2001
@
text
@@
