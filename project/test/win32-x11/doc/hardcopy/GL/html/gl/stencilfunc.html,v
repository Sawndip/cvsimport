head	1.2;
access;
symbols
	win32-x11-2001-03-26:1.1.1.1 SNAPSHOT:1.1.1;
locks; strict;
comment	@# @;
expand	@o@;


1.2
date	2001.06.03.20.47.07;	author ssiddiqi;	state Exp;
branches;
next	1.1;

1.1
date	2001.03.25.19.36.50;	author ssiddiqi;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2001.03.25.19.36.50;	author ssiddiqi;	state Exp;
branches;
next	;


desc
@@


1.2
log
@Win32-X11 update sources check in, June 3, 2001 - ssiddiqi
@
text
@<HTML>
<BODY>
<PRE>
<!-- Manpage converted by man2html 3.0.1 -->
</PRE>
<HR>
<ADDRESS>
Man(1) output converted with
<a href="http://www.oac.uci.edu/indiv/ehood/man2html.html">man2html</a>
</ADDRESS>
</BODY>
</HTML>
@


1.1
log
@Initial revision
@
text
@a4 82
of bitplanes in the stencil  buffer.  The  initial  value  is  0.
_phead(_param3) Specifies a mask that is ANDed with both the ref­
erence value and the stored stencil value when the test is  done.
The  initial value is all 1's.  Stenciling, like depth-buffering,
enables and disables drawing on a per-pixel basis.  You draw into
the stencil planes using GL drawing primitives, then render geom­
etry and images, using the stencil planes to mask out portions of
the  screen.  Stenciling is typically used in multipass rendering
algorithms to achieve special effects, such as decals, outlining,
and constructive solid geometry rendering.  The stencil test con­
ditionally eliminates a pixel based on the outcome of a  compari­
son  between  the  reference  value  and the value in the stencil
buffer.  To enable and disable the test, call  _cmnd(Enable)  and

</PRE>
<H2>_cmnd(Disable) with argument GL_STENCIL_TEST.  To specify actions</H2><PRE>
based on the outcome of the stencil test, call  _cmnd(StencilOp).
_param1  is  a symbolic constant that determines the stencil com­
parison function.  It accepts one of eight values, shown  in  the
following  list.   _param2  is an integer reference value that is
used in the stencil comparison.  It is clamped to the range [0,$2
sup  n - 1$], where $n$ is the number of bitplanes in the stencil
buffer.  _param3 is bitwise ANDed with both the  reference  value
and the stored stencil value, with the ANDed values participating
in the comparison.  If <I>stencil</I> represents the value stored in the
corresponding  stencil  buffer location, the following list shows
the effect of each comparison function that can be  specified  by
_param1.   Only  if  the  comparison succeeds is the pixel passed
through to the next stage in the rasterization process (see  _cm­
nd(StencilOp)).  All tests treat <I>stencil</I> values as unsigned inte­
gers in the range [0,$2 sup n - 1$], where $n$ is the  number  of
bitplanes  in  the  stencil buffer.  The following values are ac­

</PRE>
<H2>cepted by _param1: GL_NEVER Always fails.  GL_LESS  Passes  if  (</H2><PRE>

</PRE>
<H2>_param2 & _param3 ) </ ( stencil & _param3 ).  GL_LEQUAL Passes if<H2><PRE>

</PRE>
<H2>( _param2 & _param3 ) </= ( stencil & _param3 ).  GL_GREATER Pass­<H2><PRE>

</PRE>
<H2>es  if  ( _param2 & _param3 ) > ( stencil & _param3 ).  GL_GEQUAL</H2><PRE>
Passes if ( _param2 &amp;  _param3  )  &gt;=  (  <I>stencil</I>  &amp;  _param3  ).

</PRE>
<H2>GL_EQUAL Passes if ( _param2 & _param3 ) = ( stencil & _param3 ).</H2><PRE>

</PRE>
<H2>GL_NOTEQUAL Passes if ( _param2 &  _param3  )  !=   (  stencil  &</H2><PRE>

</PRE>
<H2>_param3 ).  GL_ALWAYS Always passes.  Initially, the stencil test</H2><PRE>
is disabled.  If there is no stencil buffer, no stencil modifica­
tion  can  occur  and it is as if the stencil test always passes.

</PRE>
<H2>GL_INVALID_ENUM is generated if _param1 is not one of  the  eight</H2><PRE>

</PRE>
<H2>accepted  values.   GL_INVALID_OPERATION is generated if _cmnd is</H2><PRE>
executed between the execution of  _cmnd(Begin)  and  the  corre­
sponding  execution  of  _cmnd(End).   _cmnd(Get)  with  argument

</PRE>
<H2>GL_STENCIL_FUNC</H2><PRE>

</PRE>
<H2>_cmnd(Get) with argument GL_STENCIL_VALUE_MASK</H2><PRE>

</PRE>
<H2>_cmnd(Get) with argument GL_STENCIL_REF</H2><PRE>

</PRE>
<H2>_cmnd(Get) with argument GL_STENCIL_BITS</H2><PRE>

</PRE>
<H2>_cmnd(IsEnabled) with argument GL_STENCIL_TEST  _cmnd(AlphaFunc),</H2><PRE>
_cmnd(BlendFunc),  _cmnd(DepthFunc),  _cmnd(Enable),  _cmnd(IsEn­
abled), _cmnd(LogicOp), _cmnd(StencilOp)

@


1.1.1.1
log
@win32-x11 source tree update March 26, 2001
@
text
@@
