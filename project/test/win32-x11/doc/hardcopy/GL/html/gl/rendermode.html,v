head	1.2;
access;
symbols
	win32-x11-2001-03-26:1.1.1.1 SNAPSHOT:1.1.1;
locks; strict;
comment	@# @;
expand	@o@;


1.2
date	2001.06.03.20.47.07;	author ssiddiqi;	state Exp;
branches;
next	1.1;

1.1
date	2001.03.25.19.36.50;	author ssiddiqi;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2001.03.25.19.36.50;	author ssiddiqi;	state Exp;
branches;
next	;


desc
@@


1.2
log
@Win32-X11 update sources check in, June 3, 2001 - ssiddiqi
@
text
@<HTML>
<BODY>
<PRE>
<!-- Manpage converted by man2html 3.0.1 -->
</PRE>
<HR>
<ADDRESS>
Man(1) output converted with
<a href="http://www.oac.uci.edu/indiv/ehood/man2html.html">man2html</a>
</ADDRESS>
</BODY>
</HTML>
@


1.1
log
@Initial revision
@
text
@a4 82

</PRE>
<H2>This is the normal mode and also the default mode.  GL_SELECT Se­</H2><PRE>
lection  mode.  No pixel fragments are produced, and no change to
the frame buffer contents is made.   Instead,  a  record  of  the
names of primitives that would have been drawn if the render mode

</PRE>
<H2>had been GL_RENDER is returned in a select buffer, which must  be</H2><PRE>
created  (see  _cmnd(SelectBuffer))  before selection mode is en­

</PRE>
<H2>tered.  GL_FEEDBACK Feedback mode.  No pixel fragments  are  pro­</H2><PRE>
duced,  and  no change to the frame buffer contents is made.  In­
stead, the coordinates and attributes of vertices that would have

</PRE>
<H2>been drawn if the render mode had been GL_RENDER is returned in a</H2><PRE>
feedback buffer,  which  must  be  created  (see  _cmnd(Feedback­
Buffer))  before  feedback  mode is entered.  The return value of
_cmnd is determined by the render  mode  at  the  time  _cmnd  is
called,  rather  than  by  _param1.   The values returned for the

</PRE>
<H2>three render modes are as follows: GL_RENDER  0.   GL_SELECT  The</H2><PRE>
number   of   hit  records  transferred  to  the  select  buffer.

</PRE>
<H2>GL_FEEDBACK The number of values (not  vertices)  transferred  to</H2><PRE>
the feedback buffer.  See the _cmnd(SelectBuffer) and _cmnd(Feed­
backBuffer) reference pages for more details concerning selection
and  feedback operation.  If an error is generated, _cmnd returns

</PRE>
<H2>0 regardless of the current render mode.  GL_INVALID_ENUM is gen­</H2><PRE>
erated  if  _param1  is  not  one  of  the three accepted values.

</PRE>
<H2>GL_INVALID_OPERATION  is  generated  if  _cmnd(SelectBuffer)   is</H2><PRE>

</PRE>
<H2>called  while the render mode is GL_SELECT, or if _cmnd is called</H2><PRE>

</PRE>
<H2>with argument GL_SELECT before _cmnd(SelectBuffer) is  called  at</H2><PRE>

</PRE>
<H2>least once.  GL_INVALID_OPERATION is generated if _cmnd(Feedback­</H2><PRE>

</PRE>
<H2>Buffer) is called while the render mode  is  GL_FEEDBACK,  or  if</H2><PRE>

</PRE>
<H2>_cmnd  is called with argument GL_FEEDBACK before _cmnd(Feedback­</H2><PRE>

</PRE>
<H2>Buffer) is called at least once.  GL_INVALID_OPERATION is  gener­</H2><PRE>
ated  if  _cmnd is executed between the execution of _cmnd(Begin)
and the corresponding execution of _cmnd(End).   _cmnd(Get)  with

</PRE>
<H2>argument  GL_RENDER_MODE _cmnd(FeedbackBuffer), _cmnd(InitNames),</H2><PRE>
_cmnd(LoadName), _cmnd(PassThrough),  _cmnd(PushName),  _cmnd(Se­
lectBuffer)


















@


1.1.1.1
log
@win32-x11 source tree update March 26, 2001
@
text
@@
