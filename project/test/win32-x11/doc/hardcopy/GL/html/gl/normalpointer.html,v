head	1.2;
access;
symbols
	win32-x11-2001-03-26:1.1.1.1 SNAPSHOT:1.1.1;
locks; strict;
comment	@# @;
expand	@o@;


1.2
date	2001.06.03.20.47.07;	author ssiddiqi;	state Exp;
branches;
next	1.1;

1.1
date	2001.03.25.19.36.50;	author ssiddiqi;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2001.03.25.19.36.50;	author ssiddiqi;	state Exp;
branches;
next	;


desc
@@


1.2
log
@Win32-X11 update sources check in, June 3, 2001 - ssiddiqi
@
text
@<HTML>
<BODY>
<PRE>
<!-- Manpage converted by man2html 3.0.1 -->
</PRE>
<HR>
<ADDRESS>
Man(1) output converted with
<a href="http://www.oac.uci.edu/indiv/ehood/man2html.html">man2html</a>
</ADDRESS>
</BODY>
</HTML>
@


1.1
log
@Initial revision
@
text
@a4 66
tial value is 0.  _phead(_param3)  Specifies  a  pointer  to  the
first  coordinate  of the first normal in the array.  The initial
value is 0.  _cmnd specifies the location and data  of  an  array
of  normals  to  use  when rendering.  _param1 specifies the data
type of the normal coordinates and _param2 gives the byte  stride
from  one normal to the next, allowing vertexes and attributes to
be packed into a single  array  or  stored  in  separate  arrays.
(Single-array  storage  may be more efficient on some implementa­
tions; see _cmnd(InterleavedArrays).)  When  a  normal  array  is
specified, _param1, _param2, and _param3 are saved as client-side
state.  To enable and disable the normal  array,  call  _cmnd(En­
ableClientState)  and _cmnd(DisableClientState) with the argument

</PRE>
<H2>GL_NORMAL_ARRAY. If enabled, the normal array is used  when  _cm­</H2><PRE>
nd(DrawArrays),  _cmnd(DrawElements),  or  _cmnd(ArrayElement) is
called.  Use _cmnd(DrawArrays) to construct a sequence of  primi­
tives  (all of the same type) from prespecified vertex and vertex
attribute arrays.  Use _cmnd(ArrayElement) to specify  primitives
by  indexing  vertexes  and  vertex attributes and _cmnd(DrawEle­
ments) to construct a sequence of primitives by indexing vertexes
and vertex attributes.  _cmnd is available only if the GL version
is 1.1 or greater.  The normal array is  initially  disabled  and
isn't  accessed when _cmnd(ArrayElement), _cmnd(DrawElements), or
_cmnd(DrawArrays) is called.  Execution of _cmnd is  not  allowed
between _cmnd(Begin) and the corresponding _cmnd(End), but an er­
ror may or may not be generated. If an error  is  not  generated,
the  operation  is  undefined.  _cmnd is typically implemented on
the client side.  Since the normal array parameters  are  client-
side  state,  they are not saved or restored by _cmnd(PushAttrib)
and _cmnd(PopAttrib).  Use _cmnd(PushClientAttrib) and _cmnd(Pop­

</PRE>
<H2>ClientAttrib)  instead.   GL_INVALID_ENUM is generated if _param1</H2><PRE>

</PRE>
<H2>is not an  accepted  value.   GL_INVALID_VALUE  is  generated  if</H2><PRE>
_param2    is    negative.     _cmnd(IsEnabled)   with   argument

</PRE>
<H2>GL_NORMAL_ARRAY</H2><PRE>

</PRE>
<H2>_cmnd(Get) with argument GL_NORMAL_ARRAY_TYPE</H2><PRE>

</PRE>
<H2>_cmnd(Get) with argument GL_NORMAL_ARRAY_STRIDE</H2><PRE>

</PRE>
<H2>_cmnd(GetPointerv)  with  argument  GL_NORMAL_ARRAY_POINTER  _cm­</H2><PRE>
nd(ArrayElement),  _cmnd(ColorPointer),  _cmnd(DrawArrays),  _cm­
nd(DrawElements),  _cmnd(EdgeFlagPointer),  _cmnd(Enable),   _cm­
nd(GetPointerv),  _cmnd(IndexPointer),  _cmnd(InterleavedArrays),
_cmnd(PopClientAttrib), _cmnd(PushClientAttrib),  _cmnd(TexCoord­
Pointer), _cmnd(VertexPointer)











@


1.1.1.1
log
@win32-x11 source tree update March 26, 2001
@
text
@@
