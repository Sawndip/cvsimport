head	1.2;
access;
symbols
	win32-x11-2001-03-26:1.1.1.1 SNAPSHOT:1.1.1;
locks; strict;
comment	@# @;
expand	@o@;


1.2
date	2001.06.03.20.47.07;	author ssiddiqi;	state Exp;
branches;
next	1.1;

1.1
date	2001.03.25.19.36.50;	author ssiddiqi;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2001.03.25.19.36.50;	author ssiddiqi;	state Exp;
branches;
next	;


desc
@@


1.2
log
@Win32-X11 update sources check in, June 3, 2001 - ssiddiqi
@
text
@<HTML>
<BODY>
<PRE>
<!-- Manpage converted by man2html 3.0.1 -->
</PRE>
<HR>
<ADDRESS>
Man(1) output converted with
<a href="http://www.oac.uci.edu/indiv/ehood/man2html.html">man2html</a>
</ADDRESS>
</BODY>
</HTML>
@


1.1
log
@Initial revision
@
text
@a4 66
uct replacing the current matrix, as  if  _cmnd(MultMatrix)  were
called with the following matrix as its argument:
                    left ( ~ down 20 matrix {
 ccol {
   _eqnparam2 sup 2 (1 ^-^ c)~+~ c above
   _eqnparam3 _eqnparam2 (1 ^-^ c)~+~ _eqnparam4 s above
   _eqnparam2 _eqnparam4 (1 ^-^ c)~-~_eqnparam3 s above
   ~0
 }
 ccol {
   ~~ _eqnparam2 _eqnparam3 (1 ^-^ c)~-~_eqnparam4 s above
   ~~ _eqnparam3 sup 2 (1 ^-^ c)~+~ c above
   ~~ _eqnparam3 _eqnparam4 (1 ^-^ c)~+~ _eqnparam2 s above
   ~~ ~0
 }
 ccol {
   ~~ _eqnparam2 _eqnparam4 (1 ^-^ c)~+~ _eqnparam3 s above
   ~~ _eqnparam3 _eqnparam4 (1 ^-^ c)~-~ _eqnparam2 s above
   ~~ _eqnparam4 sup 2 (1 ^-^ c) ~+~  c above
   ~~ ~0
 }
 ccol { ~0 above ~0 above ~0 above ~1} } ~~ right )

Where  $c  ~=~  cos  (_eqnparam1)$, $s ~=~ sin (_eqnparam1)$, and
$||(~_eqnparam2, _eqnparam3, _eqnparam4~)|| ~=~ 1$ (if  not,  the
GL will normalize this vector).



</PRE>
<H2>If  the  matrix mode is either GL_MODELVIEW or GL_PROJECTION, all</H2><PRE>
objects drawn after _cmnd is called are rotated.  Use _cmnd(Push­
Matrix)  and  _cmnd(PopMatrix)  to save and restore the unrotated
coordinate system.  This rotation follows the right-hand rule, so
if  the  vector $(_eqnparam2, _eqnparam3, _eqnparam4)$ points to­
ward  the  user,   the   rotation   will   be   counterclockwise.

</PRE>
<H2>GL_INVALID_OPERATION  is  generated  if _cmnd is executed between</H2><PRE>
the execution of _cmnd(Begin) and the corresponding execution  of

</PRE>
<H2>_cmnd(End).  _cmnd(Get) with argument GL_MATRIX_MODE</H2><PRE>

</PRE>
<H2>_cmnd(Get) with argument GL_COLOR_MATRIX</H2><PRE>

</PRE>
<H2>_cmnd(Get) with argument GL_MODELVIEW_MATRIX</H2><PRE>

</PRE>
<H2>_cmnd(Get) with argument GL_PROJECTION_MATRIX</H2><PRE>

</PRE>
<H2>_cmnd(Get)  with  argument  GL_TEXTURE_MATRIX  _cmnd(MatrixMode),</H2><PRE>
_cmnd(MultMatrix), _cmnd(PushMatrix), _cmnd(Scale),  _cmnd(Trans­
late)









@


1.1.1.1
log
@win32-x11 source tree update March 26, 2001
@
text
@@
