head	1.2;
access;
symbols
	win32-x11-2001-03-26:1.1.1.1 SNAPSHOT:1.1.1;
locks; strict;
comment	@# @;
expand	@o@;


1.2
date	2001.06.03.20.47.06;	author ssiddiqi;	state Exp;
branches;
next	1.1;

1.1
date	2001.03.25.19.36.50;	author ssiddiqi;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2001.03.25.19.36.50;	author ssiddiqi;	state Exp;
branches;
next	;


desc
@@


1.2
log
@Win32-X11 update sources check in, June 3, 2001 - ssiddiqi
@
text
@<HTML>
<BODY>
<PRE>
<!-- Manpage converted by man2html 3.0.1 -->
</PRE>
<HR>
<ADDRESS>
Man(1) output converted with
<a href="http://www.oac.uci.edu/indiv/ehood/man2html.html">man2html</a>
</ADDRESS>
</BODY>
</HTML>
@


1.1
log
@Initial revision
@
text
@a4 74
the  left  corner  of  the  row   of   pixels   to   be   copied.
_phead(_param6)  Specifies  the  width  of  the texture subimage.
_cmnd replaces a portion of a one-dimensional texture image  with

</PRE>
<H2>pixels  from  the  current  GL_READ_BUFFER (rather than from main</H2><PRE>
memory, as is the case for  _cmnd(TexSubImage1D)).   The  screen-
aligned  pixel  row  with  left corner at (_param4, _param5), and
with length _param6 replaces the portion  of  the  texture  array
with x indices _param3 through $_eqnparam3 ~+~ _eqnparam6 ~-~ 1$,
inclusive. The destination in the texture array may  not  include
any  texels outside the texture array as it was originally speci­
fied.  The pixels in the row are processed  exactly  as  if  _cm­
nd(CopyPixels) had been called, but the process stops just before
final conversion.  At this point all pixel component  values  are
clamped  to  the range [0, 1] and then converted to the texture's
internal  for storage in the texel array.  It is not an error  to
specify  a  subtexture  with zero width, but such a specification
has no effect.  If any of the pixels within the specified row  of

</PRE>
<H2>the current GL_READ_BUFFER are outside the read window associated</H2><PRE>
with the current rendering context, then the values obtained  for
those  pixels  are undefined.  No change is made to the <I>internal­</I>
<I>format</I>, <I>width</I>, or <I>border</I> parameters of the specified texture  ar­
ray or to texel values outside the specified subregion.  _cmnd is
available only if the GL version is 1.1  or  greater.   Texturing
has  no  effect  in color index mode.  _cmnd(PixelStore) and _cm­
nd(PixelTransfer) modes affect texture images in exactly the  way

</PRE>
<H2>they affect _cmnd(DrawPixels).  When the GL_ARB_imaging extension</H2><PRE>
is supported, the RGBA components copied from the framebuffer may
be  processed by the imaging pipeline.  See _cmnd(TexImage1D) for

</PRE>
<H2>specific details.  GL_INVALID_ENUM is generated if _param1 is not</H2><PRE>

</PRE>
<H2>GL_TEXTURE_1D.   GL_INVALID_OPERATION is generated if the texture</H2><PRE>
array has not been defined by  a  previous  _cmnd(TexImage1D)  or

</PRE>
<H2>_cmnd(CopyTexImage1D)  operation.   GL_INVALID_VALUE is generated</H2><PRE>

</PRE>
<H2>if _param2 is less than 0.  GL_INVALID_VALUE may be generated  if</H2><PRE>
_param2$&gt;log  sub  2$  <I>max</I>,  where  <I>max</I>  is the returned value of

</PRE>
<H2>GL_MAX_TEXTURE_SIZE.  GL_INVALID_VALUE is generated  if  _param5$</H2><PRE>
~&lt;~  ~-b$  or if _param6$ ~&lt;~ ~-b$, where $b$ is the border width

</PRE>
<H2>of the texture array.  GL_INVALID_VALUE is  generated  if  $_eqn­</H2><PRE>
param3  ~&lt;~ ~-b$, or $(_eqnparam3~+~_eqnparam6) ~&gt;~ (w-b)$, where

</PRE>
<H2>$w$ is the GL_TEXTURE_WIDTH, and $b$ is the GL_TEXTURE_BORDER  of</H2><PRE>
the  texture  image being modified.  Note that $w$ includes twice
the border width.  _cmnd(GetTexImage)

</PRE>
<H2>_cmnd(IsEnabled) with argument  GL_TEXTURE_1D  _cmnd(CopyPixels),</H2><PRE>
_cmnd(CopyTexImage1D), _cmnd(CopyTexImage2D), _cmnd(CopyTexSubIm­
age2D), _cmnd(CopyTexSubImage3D), _cmnd(PixelStore), _cmnd(Pixel­
Transfer),  _cmnd(ReadBuffer), _cmnd(TexEnv), _cmnd(TexGen), _cm­
nd(TexImage1D), _cmnd(TexImage2D), _cmnd(TexImage3D),  _cmnd(Tex­
Parameter),   _cmnd(TexSubImage1D),   _cmnd(TexSubImage2D),  _cm­
nd(TexSubImage3D)




@


1.1.1.1
log
@win32-x11 source tree update March 26, 2001
@
text
@@
